!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.6	//
ABANDON_LINGQI_PARA	tmpcode/commond.h	20694;"	d
ABANDON_QUEST_PARA	base/Command.h	/^static const BYTE ABANDON_QUEST_PARA = 4;$/;"	v
ABANDON_QUEST_PARA	tmpcode/commond.h	/^static const BYTE ABANDON_QUEST_PARA = 4;$/;"	v
ABDICATE_UNION_BUSINESSMEN_USERCMD	tmpcode/commond.h	/^const BYTE ABDICATE_UNION_BUSINESSMEN_USERCMD = 20;$/;"	v
ABSTRACT_CHUANCHENG_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE ABSTRACT_CHUANCHENG_PROPERTY_USERCMD_PARAMETER = 188;$/;"	v
AB_ANSWER_N	tmpcode/commond.h	/^	AB_ANSWER_N,    \/\/\/ øÕªß∂À∑Ò»œ$/;"	e	enum:__anon299
AB_ANSWER_Y	tmpcode/commond.h	/^	AB_ANSWER_Y,    \/\/\/ øÕªß∂À»∑»œ$/;"	e	enum:__anon299
AB_ASK	tmpcode/commond.h	/^	AB_ASK,         \/\/\/ ∑˛ŒÒ∆˜—ØŒ øÕªß∂À «∑Ò»∑»œ$/;"	e	enum:__anon299
AB_REQ	tmpcode/commond.h	/^	AB_REQ = 0,     \/\/\/ øÕªß∂À«Î«Û∑≈∆˙≥« –$/;"	e	enum:__anon299
ACCELKEY_PROPERTY_USERCMD_PARA	base/Command.h	/^const BYTE ACCELKEY_PROPERTY_USERCMD_PARA = 12;$/;"	v
ACCELKEY_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ACCELKEY_PROPERTY_USERCMD_PARA = 127;$/;"	v
ACCEPT_COUNTRY_ALLY	tmpcode/commond.h	/^	ACCEPT_COUNTRY_ALLY = 2,          \/\/ Õ¨“‚Ω·√À, Clt->Svr$/;"	e	enum:CountryAllyActionEnum
ACCOUNTVERIFY_FAILURE	GatewayServer/GatewayTask.h	/^		ACCOUNTVERIFY_FAILURE$/;"	e	enum:GatewayTask::__anon3
ACCOUNTVERIFY_NONE	GatewayServer/GatewayTask.h	/^		ACCOUNTVERIFY_NONE,$/;"	e	enum:GatewayTask::__anon3
ACCOUNTVERIFY_SUCCESS	GatewayServer/GatewayTask.h	/^		ACCOUNTVERIFY_SUCCESS,$/;"	e	enum:GatewayTask::__anon3
ACCOUNTVERIFY_WAITING	GatewayServer/GatewayTask.h	/^		ACCOUNTVERIFY_WAITING,$/;"	e	enum:GatewayTask::__anon3
ACCOUNT_LOGON_USERCMD_PARA	base/Command.h	/^const BYTE ACCOUNT_LOGON_USERCMD_PARA = 7;$/;"	v
ACCPRIV_GOLD_EQUIP_AT_5_15	ScenesServer/SceneUser.h	/^      ACCPRIV_GOLD_EQUIP_AT_5_15      = 0x00000002, \/\/5„ÄÅ15Á∫ßÊó∂Áªô‰∫àÈªÑÈáëË£ÖÂ§á$/;"	e	enum:SceneUser::__anon184
ACCPRIV_GREEN_EQUIP_AT_5_25_50	ScenesServer/SceneUser.h	/^      ACCPRIV_GREEN_EQUIP_AT_5_25_50    = 0x00000004  \/\/5„ÄÅ25„ÄÅ50Á∫ßÊó∂Áªô‰∫àÁªøËâ≤Ë£ÖÂ§á$/;"	e	enum:SceneUser::__anon184
ACCPRIV_NEWBIE_EQUIP_AT_5_15	ScenesServer/SceneUser.h	/^      ACCPRIV_NEWBIE_EQUIP_AT_5_15    = 0x00000001, \/\/5„ÄÅ15Á∫ßÊó∂Áªô‰∫àÊñ∞ÊâãË£ÖÂ§á$/;"	e	enum:SceneUser::__anon184
ACHIEVEMENT_HONOR	tmpcode/commond.h	/^	ACHIEVEMENT_HONOR,              \/\/∏ˆ»À≥…æÕ≥∆∫≈$/;"	e	enum:__anon209
ACLZone	base/ServerACL.h	/^	ACLZone()$/;"	f	struct:ACLZone
ACLZone	base/ServerACL.h	/^	ACLZone(const ACLZone &acl)$/;"	f	struct:ACLZone
ACLZone	base/ServerACL.h	/^struct ACLZone$/;"	s
ACTION_POWER	tmpcode/commond.h	/^        ACTION_POWER    = 1,    \/\/––∂Ø¡¶$/;"	e	enum:DRAGON_DATA_TYPE
ACTION_REMAIN_TIME	tmpcode/commond.h	/^        ACTION_REMAIN_TIME = 5,    \/\/∂Ø◊˜≥÷–¯ ±º‰$/;"	e	enum:DRAGON_DATA_TYPE
ACTION_SIGN	tmpcode/commond.h	/^        ACTION_SIGN     = 7,    \/\/÷¥––∂Ø◊˜$/;"	e	enum:DRAGON_DATA_TYPE
ACTION_STEP_CLEAR	ScenesServer/SkillStatusManager.h	/^  ACTION_STEP_CLEAR,		\/\/±ªÕ‚≤ø«Â≥˝$/;"	e	enum:__anon167
ACTION_STEP_DOPASS	ScenesServer/SkillStatusManager.h	/^  ACTION_STEP_DOPASS=  0,	\/\/Œ¥ π”√$/;"	e	enum:__anon167
ACTION_STEP_RELOAD	ScenesServer/SkillStatusManager.h	/^  ACTION_STEP_RELOAD,		\/\/Œ¥ π”√$/;"	e	enum:__anon167
ACTION_STEP_START	ScenesServer/SkillStatusManager.h	/^  ACTION_STEP_START=  1,	\/\/ Õ∑≈ $/;"	e	enum:__anon167
ACTION_STEP_STOP	ScenesServer/SkillStatusManager.h	/^  ACTION_STEP_STOP,		\/\/’˝≥£Õ£÷π$/;"	e	enum:__anon167
ACTION_STEP_TIMER	ScenesServer/SkillStatusManager.h	/^  ACTION_STEP_TIMER,		\/\/ ±º‰¬÷—µ$/;"	e	enum:__anon167
ACTIVE_DARE_PARA	base/Command.h	/^const BYTE ACTIVE_DARE_PARA = 1;$/;"	v
ACTIVE_SHENLONG_REWARDINFO_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ACTIVE_SHENLONG_REWARDINFO_USERCMD_PARA = 83;$/;"	v
ACTIVE_TECH_TYPE	base/Command.h	/^  ACTIVE_TECH_TYPE = 2,\/\/ Ê≠£Âú®ËøõË°åÂçáÁ∫ß$/;"	e	enum:Cmd::__anon113
ACTIVE_UNION_CITY_DARE_PARA	base/Command.h	/^const BYTE ACTIVE_UNION_CITY_DARE_PARA = 6;$/;"	v
ACTIVE_UNION_CITY_DARE_PARA	tmpcode/commond.h	/^const BYTE ACTIVE_UNION_CITY_DARE_PARA = 6;$/;"	v
ACTIVITY_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ACTIVITY_DATA_USERCMD_PARA = 184;$/;"	v
ACTIVITY_OVER	tmpcode/commond.h	/^        ACTIVITY_OVER       \/\/Ω· ¯$/;"	e	enum:__anon287
ACTIVITY_REG	tmpcode/commond.h	/^        ACTIVITY_REG=1,     \/\/µ»¥˝$/;"	e	enum:__anon287
ACTIVITY_RUNNING	tmpcode/commond.h	/^        ACTIVITY_RUNNING,   \/\/’˝‘⁄Ω¯––÷–$/;"	e	enum:__anon287
ACT_DEBUG	tmpcode/commond.h	/^	ACT_DEBUG,	\/\/◊Ω≥Ê$/;"	e	enum:PLANT_ACTION
ACT_HOE	tmpcode/commond.h	/^	ACT_HOE,	\/\/≥˙µÿ$/;"	e	enum:PLANT_ACTION
ACT_NONE	tmpcode/commond.h	/^	ACT_NONE = 0,$/;"	e	enum:PLANT_ACTION
ACT_PLANT	tmpcode/commond.h	/^	ACT_PLANT,	\/\/÷÷÷≤$/;"	e	enum:PLANT_ACTION
ACT_POLL	tmpcode/commond.h	/^	ACT_POLL,	\/\/ ⁄∑€$/;"	e	enum:PLANT_ACTION
ACT_REAP	tmpcode/commond.h	/^	ACT_REAP	\/\/ ’ªÒ$/;"	e	enum:PLANT_ACTION
ACT_WATER	tmpcode/commond.h	/^	ACT_WATER,	\/\/ΩΩÀÆ$/;"	e	enum:PLANT_ACTION
ADDBANGDEF	tmpcode/commond.h	/^    ADDBANGDEF      = 4,\/\/‘ˆº”µƒ∑¿±¨ª˜$/;"	e	enum:__anon278
ADDCON	tmpcode/commond.h	/^    ADDCON          = 1,\/\/‘ˆº”µƒÃÂ÷∆$/;"	e	enum:__anon278
ADDDEX	tmpcode/commond.h	/^    ADDDEX          = 2,\/\/‘ˆº”µƒ√ÙΩ›$/;"	e	enum:__anon278
ADDHOLYDEF	tmpcode/commond.h	/^    ADDHOLYDEF      = 5,\/\/‘ˆº”µƒ∑¿…Ò •“ªª˜  $/;"	e	enum:__anon278
ADDKAR	tmpcode/commond.h	/^    ADDKAR          = 3,\/\/‘ˆº”µƒ‘À∆¯$/;"	e	enum:__anon278
ADDMAPBUILDING_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE ADDMAPBUILDING_MAPSCREEN_USERCMD_PARA = 30;$/;"	v
ADDMAPBUILD_MAPSCREEN_USERCOM_PARA	tmpcode/commond.h	/^const BYTE ADDMAPBUILD_MAPSCREEN_USERCOM_PARA = 88;$/;"	v
ADDMAPNPCPET_MAPSCREEN_STATE_USERCMD_PARA	base/Command.h	/^const BYTE ADDMAPNPCPET_MAPSCREEN_STATE_USERCMD_PARA = 72;$/;"	v
ADDMAPNPCPET_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE ADDMAPNPCPET_MAPSCREEN_USERCMD_PARA = 65;$/;"	v
ADDMAPNPCPET_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ADDMAPNPCPET_MAPSCREEN_USERCMD_PARA = 65;$/;"	v
ADDMAPNPC_AND_POS_MAPSCREEN_STATE_USERCMD_PARA	base/Command.h	/^const BYTE ADDMAPNPC_AND_POS_MAPSCREEN_STATE_USERCMD_PARA = 71;$/;"	v
ADDMAPNPC_AND_POS_MAPSCREEN_STATE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ADDMAPNPC_AND_POS_MAPSCREEN_STATE_USERCMD_PARA = 71;$/;"	v
ADDMAPNPC_AND_POS_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE ADDMAPNPC_AND_POS_MAPSCREEN_USERCMD_PARA = 59;$/;"	v
ADDMAPNPC_AND_POS_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ADDMAPNPC_AND_POS_MAPSCREEN_USERCMD_PARA = 59;$/;"	v
ADDMAPNPC_MAPSCREEN_STATE_USERCMD_PARA	base/Command.h	/^const BYTE ADDMAPNPC_MAPSCREEN_STATE_USERCMD_PARA = 69;$/;"	v
ADDMAPNPC_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE ADDMAPNPC_MAPSCREEN_USERCMD_PARA = 50;$/;"	v
ADDMAPOBJECT_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE ADDMAPOBJECT_MAPSCREEN_USERCMD_PARA = 20;$/;"	v
ADDMAPOBJECT_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ADDMAPOBJECT_MAPSCREEN_USERCMD_PARA = 20;$/;"	v
ADDMAPPET_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE ADDMAPPET_MAPSCREEN_USERCMD_PARA = 66;$/;"	v
ADDMAPPET_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ADDMAPPET_MAPSCREEN_USERCMD_PARA = 66;$/;"	v
ADDOFFLINEEXP_FIREPLACE_USER_CMD	tmpcode/commond.h	/^const BYTE ADDOFFLINEEXP_FIREPLACE_USER_CMD = 47;$/;"	v
ADDPET_PET_PARA	base/Command.h	/^const BYTE ADDPET_PET_PARA = 5;$/;"	v
ADDRING	tmpcode/commond.h	/^			ADDRING	=18,		\/\/º” ˝ª∑Ã·…˝◊∞±∏$/;"	e	enum:ReuildType
ADDRINGCOMP	tmpcode/commond.h	/^			ADDRINGCOMP = 19,	\/\/º” ˝ª∑∫œ≥…$/;"	e	enum:ReuildType
ADDSKILLPOINT_PROPERTY_USERCMD	base/Command.h	2827;"	d
ADDSKILLPOINT_PROPERTY_USERCMD	tmpcode/commond.h	12824;"	d
ADDUSEROBJECT_LIST_PROPERTY_USERCMD_PARAMETER	base/Command.h	3193;"	d
ADDUSEROBJECT_LIST_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	4241;"	d
ADDUSEROBJECT_PROPERTY_USERCMD_PARAMETER	base/Command.h	2505;"	d
ADDUSEROBJECT_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	4230;"	d
ADDUSERSKILL_PROPERTY_USERCMD_PARA	base/Command.h	2677;"	d
ADDUSERSKILL_PROPERTY_USERCMD_PARA	tmpcode/commond.h	13040;"	d
ADDUSER_AND_POS_MAPSCREEN_STATE_USERCMD_PARA	base/Command.h	/^const BYTE ADDUSER_AND_POS_MAPSCREEN_STATE_USERCMD_PARA = 70;$/;"	v
ADDUSER_AND_POS_MAPSCREEN_STATE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ADDUSER_AND_POS_MAPSCREEN_STATE_USERCMD_PARA = 70;$/;"	v
ADDUSER_AND_POS_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE ADDUSER_AND_POS_MAPSCREEN_USERCMD_PARA = 60;$/;"	v
ADDUSER_LIFESKILL_PROPERTY_USERCMD_PARA	tmpcode/commond.h	18550;"	d
ADDUSER_MAPSCREEN_STATE_USERCMD_PARA	base/Command.h	/^const BYTE ADDUSER_MAPSCREEN_STATE_USERCMD_PARA = 68;$/;"	v
ADDUSER_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE ADDUSER_MAPSCREEN_USERCMD_PARA = 10;$/;"	v
ADDUSER_MOBJECT_LIST_PROPERTY_USERCMD_PARAMETER	base/Command.h	/^const BYTE ADDUSER_MOBJECT_LIST_PROPERTY_USERCMD_PARAMETER = 42;$/;"	v
ADDUSER_MOBJECT_PROPERTY_USERCMD_PARAMETER	base/Command.h	/^const BYTE ADDUSER_MOBJECT_PROPERTY_USERCMD_PARAMETER = 43;$/;"	v
ADD_ARMY_CAPTAIN	base/Command.h	/^enum ADD_ARMY_CAPTAIN{$/;"	g	namespace:Cmd
ADD_ARMY_CAPTAIN_PARA	base/Command.h	5771;"	d
ADD_BATTLE_CARD_LIST_PROPERTY_CMD	base/HeroCardCmd.h	/^    const BYTE ADD_BATTLE_CARD_LIST_PROPERTY_CMD = 36;$/;"	v
ADD_BATTLE_CARD_PROPERTY_CMD	base/HeroCardCmd.h	/^    const BYTE ADD_BATTLE_CARD_PROPERTY_CMD = 26;$/;"	v
ADD_BET_OBJECT_CHALLENGE_USERCMD_PARAMETER	tmpcode/commond.h	22113;"	d
ADD_CARTOON_PARA	base/Command.h	8175;"	d
ADD_COUNTRY_ALLY	tmpcode/commond.h	/^	ADD_COUNTRY_ALLY = 5,             \/\/ ‘ˆº”√Àπ˙, Svr->Clt ∏’…œœﬂ ±”√$/;"	e	enum:CountryAllyActionEnum
ADD_DECORATION	tmpcode/commond.h	/^	ADD_DECORATION = 1,$/;"	e	enum:__anon359
ADD_DECORATION_PARA	tmpcode/commond.h	/^const BYTE ADD_DECORATION_PARA = 1;$/;"	v
ADD_ENEMY_HAND_CARD_PROPERTY_CMD	base/HeroCardCmd.h	/^    const BYTE ADD_ENEMY_HAND_CARD_PROPERTY_CMD = 33;$/;"	v
ADD_HONOR_ZHANGONG	tmpcode/commond.h	/^const BYTE ADD_HONOR_ZHANGONG = 78;$/;"	v
ADD_HORSE_SOUL_ENERGY_PARA	tmpcode/commond.h	/^const BYTE ADD_HORSE_SOUL_ENERGY_PARA = 33;$/;"	v
ADD_HORSE_SOUL_PET_PARA	tmpcode/commond.h	/^const BYTE ADD_HORSE_SOUL_PET_PARA = 23;$/;"	v
ADD_ISSUE_QUEST_PARA	tmpcode/commond.h	/^static const BYTE ADD_ISSUE_QUEST_PARA = 38; \/\/∑¢≤º¥˙◊ˆ»ŒŒÒ”√ªß√¸¡Ó$/;"	v
ADD_LIST_AUCTION_PARA	base/Command.h	/^const BYTE ADD_LIST_AUCTION_PARA = 3;$/;"	v
ADD_LIST_AUCTION_PARA	tmpcode/commond.h	/^const BYTE ADD_LIST_AUCTION_PARA = 3;$/;"	v
ADD_LIST_MAIL_PARA	base/Command.h	/^const BYTE ADD_LIST_MAIL_PARA = 6;$/;"	v
ADD_LIST_MAIL_PARA	tmpcode/commond.h	/^const BYTE ADD_LIST_MAIL_PARA = 6;$/;"	v
ADD_LIST_PURCHASE_PARA	tmpcode/commond.h	/^const BYTE ADD_LIST_PURCHASE_PARA = 61;$/;"	v
ADD_MEMBER	base/Command.h	/^  ADD_MEMBER,        \/\/ ÊãõÊî∂ÊàêÂëò$/;"	e	enum:Cmd::UNIONPOWER
ADD_MEMBER	tmpcode/commond.h	/^	ADD_MEMBER,                \/\/ ’– ’≥…‘±$/;"	e	enum:UNIONPOWER
ADD_MEMBER_TO_SEPT_PARA	base/Command.h	/^const BYTE ADD_MEMBER_TO_SEPT_PARA = 7;  \/\/ Ëøô‰∏™Ê∂àÊÅØÁî±ÂÆ¢Êà∑Á´ØÂèëÂà∞ÊúçÂä°Á´ØÊòØÈÇÄËØ∑Êüê‰∫∫ÔºåÁî±ÊúçÂä°Á´ØÂèëÂà∞ÂÆ¢Êà∑Á´ØÊòØËØ¢ÈóÆÊüê‰∫∫ÊòØÂê¶Êé•ÂèóÈÇÄËØ∑$/;"	v
ADD_MEMBER_TO_SEPT_PARA	tmpcode/commond.h	/^const BYTE ADD_MEMBER_TO_SEPT_PARA = 7;  \/\/ ’‚∏ˆœ˚œ¢”…øÕªß∂À∑¢µΩ∑˛ŒÒ∂À «—˚«Îƒ≥»À£¨”…∑˛ŒÒ∂À∑¢µΩøÕªß∂À «—ØŒ ƒ≥»À «∑ÒΩ” ‹—˚«Î$/;"	v
ADD_MEMBER_TO_UNION_PARA	base/Command.h	/^const BYTE ADD_MEMBER_TO_UNION_PARA = 7;  \/\/ Ëøô‰∏™Ê∂àÊÅØÁî±ÂÆ¢Êà∑Á´ØÂèëÂà∞ÊúçÂä°Á´ØÊòØÈÇÄËØ∑Êüê‰∫∫ÔºåÁî±ÊúçÂä°Á´ØÂèëÂà∞ÂÆ¢Êà∑Á´ØÊòØËØ¢ÈóÆÊüê‰∫∫ÊòØÂê¶Êé•ÂèóÈÇÄËØ∑$/;"	v
ADD_MEMBER_TO_UNION_PARA	tmpcode/commond.h	/^const BYTE ADD_MEMBER_TO_UNION_PARA = 7;  \/\/ ’‚∏ˆœ˚œ¢”…øÕªß∂À∑¢µΩ∑˛ŒÒ∂À «—˚«Îƒ≥»À£¨”…∑˛ŒÒ∂À∑¢µΩøÕªß∂À «—ØŒ ƒ≥»À «∑ÒΩ” ‹—˚«Î$/;"	v
ADD_MERCH_NOTICE_PRICE	tmpcode/commond.h	/^const BYTE ADD_MERCH_NOTICE_PRICE = 204;$/;"	v
ADD_OBJECT_DTS_PARA	tmpcode/commond.h	/^const BYTE ADD_OBJECT_DTS_PARA	=	7;$/;"	v
ADD_OBJECT_HOUSE_USER_CMD	tmpcode/commond.h	/^const  BYTE ADD_OBJECT_HOUSE_USER_CMD =  38;$/;"	v
ADD_OBJECT_SELL_LIST_USERCMD_PARAMETER	base/Command.h	4168;"	d
ADD_OBJECT_SELL_LIST_USERCMD_PARAMETER	tmpcode/commond.h	12130;"	d
ADD_OBJECT_SELL_USERCMD_PARAMETER	base/Command.h	4045;"	d
ADD_OBJECT_SELL_USERCMD_PARAMETER	tmpcode/commond.h	12159;"	d
ADD_OBJECT_SEPT_STORE	tmpcode/commond.h	/^const BYTE ADD_OBJECT_SEPT_STORE = 143;$/;"	v
ADD_OBJECT_TRADE_USERCMD_PARAMETER	base/Command.h	3917;"	d
ADD_OBJECT_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE ADD_OBJECT_TRADE_USERCMD_PARAMETER = 8;$/;"	v
ADD_RENT_STORE_TIME	tmpcode/commond.h	/^const BYTE ADD_RENT_STORE_TIME = 140;$/;"	v
ADD_SEPT_SUCCESS	tmpcode/commond.h	/^const BYTE ADD_SEPT_SUCCESS = 101;$/;"	v
ADD_TEAMMEMBER_USERCMD_PARA	base/Command.h	3472;"	d
ADD_TEAMMEMBER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ADD_TEAMMEMBER_USERCMD_PARA = 3;$/;"	v
ADD_TEAM_RECRUIT_INFO_PARA	tmpcode/commond.h	/^const BYTE ADD_TEAM_RECRUIT_INFO_PARA = 1;$/;"	v
ADD_TIME_EFFECT_HORSE_DATA_PARA	tmpcode/commond.h	/^const BYTE ADD_TIME_EFFECT_HORSE_DATA_PARA = 28;$/;"	v
ADD_UNSAFEREGION_DTS_PARA	tmpcode/commond.h	/^ const BYTE ADD_UNSAFEREGION_DTS_PARA = 6;$/;"	v
ADD_WAITING_CARTOON_PARA	base/Command.h	8267;"	d
ADOPT_CARTOON_PARA	base/Command.h	8217;"	d
ADVERT_CRIMINAL_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ADVERT_CRIMINAL_USERCMD_PARA = 197;$/;"	v
AD_BROADCAST_PARA	tmpcode/commond.h	/^const BYTE AD_BROADCAST_PARA = 8;$/;"	v
AD_KIND_EIGHT	tmpcode/commond.h	/^	 AD_KIND_EIGHT,$/;"	e	enum:__anon293
AD_KIND_FIVE	tmpcode/commond.h	/^	 AD_KIND_FIVE,$/;"	e	enum:__anon293
AD_KIND_FOUR	tmpcode/commond.h	/^	 AD_KIND_FOUR,$/;"	e	enum:__anon293
AD_KIND_NINE	tmpcode/commond.h	/^	 AD_KIND_NINE,$/;"	e	enum:__anon293
AD_KIND_ONE	tmpcode/commond.h	/^	 AD_KIND_ONE,$/;"	e	enum:__anon293
AD_KIND_SEVEN	tmpcode/commond.h	/^	 AD_KIND_SEVEN,$/;"	e	enum:__anon293
AD_KIND_SIX	tmpcode/commond.h	/^	 AD_KIND_SIX,$/;"	e	enum:__anon293
AD_KIND_TEN	tmpcode/commond.h	/^	 AD_KIND_TEN$/;"	e	enum:__anon293
AD_KIND_THREE	tmpcode/commond.h	/^	 AD_KIND_THREE,$/;"	e	enum:__anon293
AD_KIND_TWO	tmpcode/commond.h	/^	 AD_KIND_TWO, $/;"	e	enum:__anon293
AGREE_REPLAYMERCENARY_COUNTRY_CMD	tmpcode/commond.h	30478;"	d
AI	ScenesServer/SceneNpc.cpp	/^void SceneNpc::AI(const zRTime& ctv,MonkeyNpcs &affectNpc,const DWORD group,const bool every)$/;"	f	class:SceneNpc
AIC	ScenesServer/SceneNpc.h	/^  NpcAIController * AIC;$/;"	m	class:SceneNpc
AICallback	ScenesServer/Scene.cpp	/^  AICallback(const zRTime &ctv) : ctv(ctv) {}$/;"	f	struct:AICallback
AICallback	ScenesServer/Scene.cpp	/^struct AICallback : public zSceneEntryCallBack$/;"	s
AIDefine	ScenesServer/SceneNpc.h	/^  t_NpcAIDefine AIDefine;$/;"	m	class:SceneNpc
AIF_ACTIVE_MODE	ScenesServer/SceneNpcAI.h	/^	AIF_ACTIVE_MODE    = 0x00100000,\/\/\/‰∏ªÂä®ÊîªÂáª$/;"	e	enum:NpcAIFlag
AIF_ASPD_UP_HP50	ScenesServer/SceneNpcAI.h	/^	AIF_ASPD_UP_HP50  = 0x00080000,\/\/\/hp50%‰ª•‰∏ãÊîªÂáªÈÄüÂ∫¶Âä†ÂÄç$/;"	e	enum:NpcAIFlag
AIF_ATK_HP	ScenesServer/SceneNpcAI.h	/^	AIF_ATK_HP              = 0x00000004, \/\/\/‰ºòÂÖàÊîªÂáªÁîüÂëΩÂÄºÊúÄ‰ΩéÁöÑÊïå‰∫∫$/;"	e	enum:NpcAIFlag
AIF_ATK_MASTER	ScenesServer/SceneNpcAI.h	/^	AIF_ATK_MASTER    = 0x00008000,\/\/\/Áõ¥Êé•ÊîªÂáªÂÆ†Áâ©ÁöÑ‰∏ª‰∫∫$/;"	e	enum:NpcAIFlag
AIF_ATK_MDEF	ScenesServer/SceneNpcAI.h	/^	AIF_ATK_MDEF            = 0x00000002, \/\/\/‰ºòÂÖàÊîªÂáªÈ≠îÈò≤ÊúÄ‰ΩéÁöÑÊïå‰∫∫$/;"	e	enum:NpcAIFlag
AIF_ATK_PDEF	ScenesServer/SceneNpcAI.h	/^	AIF_ATK_PDEF            = 0x00000001, \/\/\/‰ºòÂÖàÊîªÂáªÁâ©Èò≤ÊúÄ‰ΩéÁöÑÊïå‰∫∫$/;"	e	enum:NpcAIFlag
AIF_ATK_REDNAME	ScenesServer/SceneNpcAI.h	/^	AIF_ATK_REDNAME    = 0x00010000,\/\/\/ÊîªÂáªÁ∫¢ÂêçÁöÑÁé©ÂÆ∂$/;"	e	enum:NpcAIFlag
AIF_CALL_BY_ATYPE	ScenesServer/SceneNpcAI.h	/^	AIF_CALL_BY_ATYPE       = 0x00002000, \/\/\/Âè¨Âî§ÂêåÁßçÊîªÂáªÁ±ªÂûãÁöÑÂêå‰º¥Ôºà‰∏é‰∏ä‰∏§‰∏™Ê†áÂøóÂêà‰ΩúÔºâ$/;"	e	enum:NpcAIFlag
AIF_CALL_FELLOW_7	ScenesServer/SceneNpcAI.h	/^	AIF_CALL_FELLOW_7       = 0x00000800, \/\/\/Âè¨Âî§7*7ËåÉÂõ¥ÁöÑÊú™ÊøÄÊ¥ªnpc(Âá†Áéá50%)$/;"	e	enum:NpcAIFlag
AIF_CALL_FELLOW_9	ScenesServer/SceneNpcAI.h	/^	AIF_CALL_FELLOW_9       = 0x00001000, \/\/\/Âè¨Âî§9*9ËåÉÂõ¥ÁöÑÊú™ÊøÄÊ¥ªnpcÔºàÂá†Áéá50%Ôºâ$/;"	e	enum:NpcAIFlag
AIF_DOUBLE_REGION	ScenesServer/SceneNpcAI.h	/^	AIF_DOUBLE_REGION  = 0x00020000,\/\/\/ÊêúÁ¥¢ËåÉÂõ¥Âä†ÂÄç$/;"	e	enum:NpcAIFlag
AIF_FLEE_30_HP	ScenesServer/SceneNpcAI.h	/^	AIF_FLEE_30_HP    = 0x00000040, \/\/\/HP30%‰ª•‰∏ãÈÄÉË∑ë4Ê†º$/;"	e	enum:NpcAIFlag
AIF_FLEE_3_ENEMY_4	ScenesServer/SceneNpcAI.h	/^	AIF_FLEE_3_ENEMY_4  = 0x00000080, \/\/\/Ë¢´3‰∏™‰ª•‰∏äÊïå‰∫∫Âõ¥ÊîªÈÄÉË∑ë4Ê†º$/;"	e	enum:NpcAIFlag
AIF_GIVEUP_10_SEC	ScenesServer/SceneNpcAI.h	/^	AIF_GIVEUP_10_SEC       = 0x00000008, \/\/\/ËøΩÈÄê10ÁßíÊîæÂºÉÁõÆÊ†á$/;"	e	enum:NpcAIFlag
AIF_GIVEUP_3_SEC	ScenesServer/SceneNpcAI.h	/^	AIF_GIVEUP_3_SEC        = 0x00000020, \/\/\/3ÁßíÊú™ÂèóÂà∞‰º§ÂÆ≥ÊîæÂºÉÁõÆÊ†á$/;"	e	enum:NpcAIFlag
AIF_GIVEUP_6_SEC	ScenesServer/SceneNpcAI.h	/^	AIF_GIVEUP_6_SEC        = 0x00000010, \/\/\/6ÁßíÊú™ÂèóÂà∞‰º§ÂÆ≥ÊîæÂºÉÁõÆÊ†á$/;"	e	enum:NpcAIFlag
AIF_HELP_FELLOW_5	ScenesServer/SceneNpcAI.h	/^	AIF_HELP_FELLOW_5  = 0x00004000,\/\/\/Â∏ÆÂä©5*5ËåÉÂõ¥ÂÜÖÁöÑÂêå‰º¥ÊîªÂáªÔºàÁî®‰∫éË¢´Âä®npcÔºâ$/;"	e	enum:NpcAIFlag
AIF_LIMIT_REGION	ScenesServer/SceneNpcAI.h	/^	AIF_LIMIT_REGION  = 0x02000000  \/\/\/ÈôêÂà∂Ê¥ªÂä®ËåÉÂõ¥$/;"	e	enum:NpcAIFlag
AIF_LOCK_TARGET	ScenesServer/SceneNpcAI.h	/^	AIF_LOCK_TARGET    = 0x00400000,\/\/\/‰∏çÂàáÊç¢ÊîªÂáªÁõÆÊ†áÁõ¥Âà∞Ê≠ª$/;"	e	enum:NpcAIFlag
AIF_NO_BATTLE	ScenesServer/SceneNpcAI.h	/^	AIF_NO_BATTLE    = 0x00000100,\/\/\/ÈùûÊàòÊñónpc$/;"	e	enum:NpcAIFlag
AIF_NO_MOVE	ScenesServer/SceneNpcAI.h	/^	AIF_NO_MOVE    = 0x00000200, \/\/\/‰∏çÁßªÂä®ÔºàÂºìÂç´„ÄÅ‰π∞Âçñ„ÄÅË∑ØÊ†áÁ≠âÔºâ$/;"	e	enum:NpcAIFlag
AIF_RCV_REST	ScenesServer/SceneNpcAI.h	/^	AIF_RCV_REST    = 0x01000000,\/\/\/ËÑ±Á¶ªÊàòÊñó30ÁßíÂêéÂõûË°Ä‰∏ÄÊ¨°5%$/;"	e	enum:NpcAIFlag
AIF_RCV_UNDER_30	ScenesServer/SceneNpcAI.h	/^	AIF_RCV_UNDER_30  = 0x00800000,\/\/\/hp30%‰ª•‰∏ãÊåÅÁª≠ÂõûË°Ä1%$/;"	e	enum:NpcAIFlag
AIF_RUN_AWAY	ScenesServer/SceneNpcAI.h	/^	AIF_RUN_AWAY    = 0x00200000,\/\/\/ÈÄÉÁ¶ªÊïå‰∫∫$/;"	e	enum:NpcAIFlag
AIF_SPD_UP_HP20	ScenesServer/SceneNpcAI.h	/^	AIF_SPD_UP_HP20    = 0x00040000,\/\/\/hp20%‰ª•‰∏ãÁßªÂä®ÈÄüÂ∫¶Âä†ÂÄç$/;"	e	enum:NpcAIFlag
AIF_WARP_MOVE	ScenesServer/SceneNpcAI.h	/^	AIF_WARP_MOVE    = 0x00000400, \/\/\/Áû¨ÁßªÊñπÂºèÁßªÂä®$/;"	e	enum:NpcAIFlag
ALARM	base/zLogger.h	/^	    static const zLevel * ALARM;$/;"	m	class:zLogger::zLevel
ALARM_INT	base/zLogger.h	/^		ALARM_INT   =	log4cxx::Level::ERROR_INT,$/;"	e	enum:zLogger::zLevel::zLevelInt
ALL	base/zLogger.h	/^	    static const zLevel * ALL;$/;"	m	class:zLogger::zLevel
ALLROOM_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE ALLROOM_QUESTROOM_PARA = 21;$/;"	v
ALLVARS	ScenesServer/Quest.h	584;"	d
ALLVARS1	ScenesServer/Quest.h	598;"	d
ALLYUNION_USERCMD	tmpcode/commond.h	/^const BYTE ALLYUNION_USERCMD = 109;$/;"	v
ALLY_GUARDNPC	ScenesServer/SceneNpc.h	/^const DWORD ALLY_GUARDNPC = 54100;\/\/ÁõüÂõΩÈïñËΩ¶$/;"	v
ALLY_TYPE_ENEMY	tmpcode/commond.h	/^	ALLY_TYPE_ENEMY   =4, \/\/µ–∂‘$/;"	e	enum:__anon284
ALLY_TYPE_FRIEND	tmpcode/commond.h	/^	ALLY_TYPE_FRIEND = 1, \/\/Õ¨√À$/;"	e	enum:__anon284
ALLY_TYPE_HOST	tmpcode/commond.h	/^	ALLY_TYPE_HOST   = 2, \/\/◊⁄÷˜$/;"	e	enum:__anon284
ALLY_TYPE_MEDIUM	tmpcode/commond.h	/^	ALLY_TYPE_MEDIUM = 0, \/\/÷–¡¢$/;"	e	enum:__anon284
ALLY_TYPE_SERVANT	tmpcode/commond.h	/^	ALLY_TYPE_SERVANT =3, \/\/∏Ω”∂$/;"	e	enum:__anon284
ALLY_USERCMD	base/CmdType.h	/^const BYTE ALLY_USERCMD      = 45;$/;"	v
ALLY_USERCMD	tmpcode/commond.h	/^const BYTE ALLY_USERCMD			= 45;$/;"	v
ALL_CHAT_USERCMD_PARAMETER	base/Command.h	3373;"	d
ALL_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE ALL_MAPSCREEN_USERCMD_PARA = 54;$/;"	v
ALL_NOTICE	tmpcode/commond.h	/^	ALL_NOTICE = 3, \/\/À˘”–π´∏Ê$/;"	e	enum:NoticeState
ALL_SEPT_MEMBER_PARA	base/Command.h	/^const BYTE ALL_SEPT_MEMBER_PARA = 5;$/;"	v
ALL_SEPT_MEMBER_PARA	tmpcode/commond.h	/^const BYTE ALL_SEPT_MEMBER_PARA = 5;$/;"	v
ALL_SUB_DIRS	Makefile	/^ALL_SUB_DIRS = $(SUB_DIRS) $(TEST_SUB_DIRS)$/;"	m
ALL_SUIT	tmpcode/commond.h	/^	ALL_SUIT                        = 1,\/\/»´Ã◊◊∞$/;"	e	enum:EQUIPAWARD
ALL_SUIT_NINE_STAR	tmpcode/commond.h	/^	ALL_SUIT_NINE_STAR              = 5,\/\/9–« $/;"	e	enum:EQUIPAWARD
ALL_SUIT_NINE_STAR_NINE_MOON	tmpcode/commond.h	/^	ALL_SUIT_NINE_STAR_NINE_MOON    = 7,\/\/9–«9‘¬$/;"	e	enum:EQUIPAWARD
ALL_SUIT_NINE_STAR_SIX_MOON	tmpcode/commond.h	/^	ALL_SUIT_NINE_STAR_SIX_MOON     = 6,\/\/9–«6‘¬$/;"	e	enum:EQUIPAWARD
ALL_SUIT_SIX_STAR	tmpcode/commond.h	/^	ALL_SUIT_SIX_STAR               = 2,\/\/6–« $/;"	e	enum:EQUIPAWARD
ALL_SUIT_SIX_STAR_SIX_MOON	tmpcode/commond.h	/^	ALL_SUIT_SIX_STAR_SIX_MOON      = 4,\/\/6–«6‘¬$/;"	e	enum:EQUIPAWARD
ALL_SUIT_SIX_STAR_THREE_MOON	tmpcode/commond.h	/^	ALL_SUIT_SIX_STAR_THREE_MOON    = 3,\/\/6–«3‘¬$/;"	e	enum:EQUIPAWARD
ALL_TARGETS	BillServer/Makefile	/^ALL_TARGETS = BillServer$/;"	m
ALL_TARGETS	FLServer/Makefile	/^ALL_TARGETS = FLServer$/;"	m
ALL_TARGETS	GatewayServer/Makefile	/^ALL_TARGETS = GatewayServer$/;"	m
ALL_TARGETS	RecordServer/Makefile	/^ALL_TARGETS = RecordServer$/;"	m
ALL_TARGETS	Robot/Makefile	/^ALL_TARGETS = Robot$/;"	m
ALL_TARGETS	ScenesServer/Makefile	/^ALL_TARGETS = ScenesServer$/;"	m
ALL_TARGETS	SessionServer/Makefile	/^ALL_TARGETS = SessionServer$/;"	m
ALL_TARGETS	SuperServer/Makefile	/^ALL_TARGETS = SuperServer$/;"	m
ALL_TARGETS	roleChangeServer/Makefile	/^ALL_TARGETS = roleChangeServer$/;"	m
ALL_TARGETS	roleRegServer/Makefile	/^ALL_TARGETS = roleRegServer$/;"	m
ALL_TARGETS	tools/Makefile	/^ALL_TARGETS = xmlpg codepg$/;"	m
ALL_TYPE_MAX	tmpcode/commond.h	/^	ALL_TYPE_MAX                    = 8     $/;"	e	enum:EQUIPAWARD
ALL_UNION_MEMBER_PARA	base/Command.h	/^const BYTE ALL_UNION_MEMBER_PARA = 5;$/;"	v
ALL_UNION_MEMBER_PARA	tmpcode/commond.h	/^const BYTE  ALL_UNION_MEMBER_PARA = 5;$/;"	v
ANSWER_BETRADE_IMAGE_USERCMD_PARAMETE	tmpcode/commond.h	/^const BYTE ANSWER_BETRADE_IMAGE_USERCMD_PARAMETE = 44;$/;"	v
ANSWER_CALLBACK_PARA	tmpcode/commond.h	/^const BYTE ANSWER_CALLBACK_PARA =  3;$/;"	v
ANSWER_CAPTAIN_NO	base/Command.h	/^  ANSWER_CAPTAIN_NO,\/\/ ÊãíÁªùÈÇÄËØ∑$/;"	e	enum:Cmd::ADD_ARMY_CAPTAIN
ANSWER_CAPTAIN_YES	base/Command.h	/^  ANSWER_CAPTAIN_YES,\/\/ Á°ÆËÆ§ÈÇÄËØ∑$/;"	e	enum:Cmd::ADD_ARMY_CAPTAIN
ANSWER_COUNTRY_DARE_NO	base/Command.h	/^  ANSWER_COUNTRY_DARE_NO,$/;"	e	enum:Cmd::__anon112
ANSWER_COUNTRY_DARE_PARA	base/Command.h	/^const BYTE ANSWER_COUNTRY_DARE_PARA= 19;$/;"	v
ANSWER_COUNTRY_DARE_QUESTION	base/Command.h	/^  ANSWER_COUNTRY_DARE_QUESTION,$/;"	e	enum:Cmd::__anon112
ANSWER_COUNTRY_DARE_YES	base/Command.h	/^  ANSWER_COUNTRY_DARE_YES$/;"	e	enum:Cmd::__anon112
ANSWER_DANCE_PARA	tmpcode/commond.h	/^const BYTE ANSWER_DANCE_PARA = 2;$/;"	v
ANSWER_DECAY_LINGQI_PARA	tmpcode/commond.h	/^const  BYTE ANSWER_DECAY_LINGQI_PARA = 3;$/;"	v
ANSWER_JOINRIDE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ANSWER_JOINRIDE_USERCMD_PARA = 91;$/;"	v
ANSWER_NAME_TEAM_USERCMD_PARA	base/Command.h	3743;"	d
ANSWER_NAME_TEAM_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ANSWER_NAME_TEAM_USERCMD_PARA = 21;$/;"	v
ANSWER_NINESCREEN_SEPTMEMBER_PARA	tmpcode/commond.h	/^const BYTE ANSWER_NINESCREEN_SEPTMEMBER_PARA = 38;$/;"	v
ANSWER_NINESCREEN_UNIONMEMBER_PARA	tmpcode/commond.h	/^const BYTE ANSWER_NINESCREEN_UNIONMEMBER_PARA = 47;$/;"	v
ANSWER_NO	base/Command.h	/^      ANSWER_NO          \/\/ Âê¶ÂÆöÈÇÄËØ∑$/;"	e	enum:Cmd::UNION_ADD_MEMBER
ANSWER_NO	tmpcode/commond.h	/^	ANSWER_NO          \/\/ ∑Ò∂®—˚«Î$/;"	e	enum:UNION_ADD_MEMBER
ANSWER_QUIZ_PARA	base/Command.h	/^const BYTE ANSWER_QUIZ_PARA = 4;$/;"	v
ANSWER_RECOMMEND_PARA	tmpcode/commond.h	28713;"	d
ANSWER_RETURN_QUIZ_PARA	base/Command.h	/^const BYTE ANSWER_RETURN_QUIZ_PARA = 5;$/;"	v
ANSWER_TEAM_USERCMD_PARA	base/Command.h	3530;"	d
ANSWER_TRADE_USERCMD_PARAMETER	base/Command.h	3859;"	d
ANSWER_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE ANSWER_TRADE_USERCMD_PARAMETER = 42;$/;"	v
ANSWER_YES	base/Command.h	/^      ANSWER_YES,\/\/ Á°ÆËÆ§ÈÇÄËØ∑$/;"	e	enum:Cmd::UNION_ADD_MEMBER
ANSWER_YES	tmpcode/commond.h	/^	ANSWER_YES,        \/\/ »∑»œ—˚«Î$/;"	e	enum:UNION_ADD_MEMBER
ANS_TAKE_BACK_ALL_FURNITURE	tmpcode/commond.h	/^const BYTE ANS_TAKE_BACK_ALL_FURNITURE			= 58;$/;"	v
ANTI_DARE_COUNTRY_FORMAL_PARA	base/Command.h	5252;"	d
APPEAR_OFFLINE_LTQ_PARA	tmpcode/commond.h	24670;"	d
APPLY_COUNTRY_PARA	base/Command.h	/^const BYTE APPLY_COUNTRY_PARA = 11;$/;"	v
APPLY_SEPT_AVATAR	tmpcode/commond.h	/^const BYTE APPLY_SEPT_AVATAR = 130;$/;"	v
APPLY_UNION_BUSINESSMEN_USERCMD	tmpcode/commond.h	/^const BYTE APPLY_UNION_BUSINESSMEN_USERCMD = 22;$/;"	v
APPOINT_CATCHER_PARA	base/Command.h	5333;"	d
APPOINT_CITY_CATCHER_PARA	base/Command.h	4723;"	d
APPOINT_DIPLOMAT_PARA	base/Command.h	5356;"	d
ARENA_USERCMD	base/CmdType.h	/^const BYTE ARENA_USERCMD	= 55;$/;"	v
ARMY_TYPE_APLYCITY	tmpcode/commond.h	/^    ARMY_TYPE_APLYCITY,                \/\/…Í«Î’˘∂·≥« –$/;"	e	enum:__anon209
ARMY_TYPE_FAILEDCITY	tmpcode/commond.h	/^	ARMY_TYPE_FAILEDCITY,              \/\/’˘∂· ß∞‹$/;"	e	enum:__anon209
ARMY_TYPE_LEVELUP	tmpcode/commond.h	/^    ARMY_TYPE_LEVELUP,                 \/\/”∂±¯Õ≈…˝º∂$/;"	e	enum:__anon209
ARMY_TYPE_SUCCITY	tmpcode/commond.h	/^    ARMY_TYPE_SUCCITY,                 \/\/≥…π¶’˘∂·$/;"	e	enum:__anon209
ARMY_USERCMD	base/CmdType.h	/^const BYTE ARMY_USERCMD      = 41;$/;"	v
ARRANGE_INFO	tmpcode/commond.h	/^	ARRANGE_INFO,           \/\/Ω®÷˛∞⁄∑≈+æ¸Õ≈–≈œ¢$/;"	e	enum:__anon267
ASKFOREND_SEPTGUARD	tmpcode/commond.h	/^const BYTE ASKFOREND_SEPTGUARD = 100;$/;"	v
ASK_BEGIN_CALLBACK_PARA	tmpcode/commond.h	/^const BYTE ASK_BEGIN_CALLBACK_PARA = 2;$/;"	v
ASK_BEGIN_RECOMMEND_PARA	tmpcode/commond.h	28702;"	d
ASK_DANCE_PARA	tmpcode/commond.h	/^const BYTE ASK_DANCE_PARA = 1;$/;"	v
ASK_ENTER_MAXLEVEL_LIMIT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ASK_ENTER_MAXLEVEL_LIMIT_USERCMD_PARA = 1;$/;"	v
ASK_JOIN_CHALLENGE_PARA	tmpcode/commond.h	21960;"	d
ASK_REG_SEPT_POPO_PARA	tmpcode/commond.h	26431;"	d
ASK_USER_ENTER_PARA	tmpcode/commond.h	/^const BYTE ASK_USER_ENTER_PARA = 1;$/;"	v
ASK_USER_ENTER_WEEK_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE ASK_USER_ENTER_WEEK_ZHENXUAN_PARA = 7;$/;"	v
ASK_USER_ENTER_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE ASK_USER_ENTER_ZHENXUAN_PARA = 1;$/;"	v
ASR_SHENLONG_THANKS_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ASR_SHENLONG_THANKS_USERCMD_PARA = 85;$/;"	v
ASSIGN_LIFEGUARD_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ASSIGN_LIFEGUARD_USERCMD_PARA = 30;$/;"	v
ATTACK	tmpcode/commond.h	/^	ATTACK =1,$/;"	e	enum:__anon320
ATTACKTYPE	base/Command.h	/^enum ATTACKTYPE{$/;"	g	namespace:Cmd
ATTACKTYPE	tmpcode/commond.h	/^enum ATTACKTYPE$/;"	g
ATTACKTYPE_N2N	base/Command.h	/^  ATTACKTYPE_N2N  \/\/\/ NpcÊîªÂáªNpc$/;"	e	enum:Cmd::ATTACKTYPE
ATTACKTYPE_N2N	tmpcode/commond.h	/^	ATTACKTYPE_N2N	\/\/\/ Npcπ•ª˜Npc$/;"	e	enum:ATTACKTYPE
ATTACKTYPE_N2U	base/Command.h	/^  ATTACKTYPE_N2U,\/\/\/ NpcÊîªÂáªÁî®Êà∑$/;"	e	enum:Cmd::ATTACKTYPE
ATTACKTYPE_N2U	tmpcode/commond.h	/^	ATTACKTYPE_N2U,	\/\/\/ Npcπ•ª˜”√ªß$/;"	e	enum:ATTACKTYPE
ATTACKTYPE_U2B	base/Command.h	/^  ATTACKTYPE_U2B,\/\/\/ Áî®Êà∑ÊîªÂáªÂª∫Á≠ë$/;"	e	enum:Cmd::ATTACKTYPE
ATTACKTYPE_U2B	tmpcode/commond.h	/^	ATTACKTYPE_U2B,	\/\/\/ ”√ªßπ•ª˜Ω®÷˛$/;"	e	enum:ATTACKTYPE
ATTACKTYPE_U2N	base/Command.h	/^  ATTACKTYPE_U2N,\/\/\/ Áî®Êà∑ÊîªÂáªNpc$/;"	e	enum:Cmd::ATTACKTYPE
ATTACKTYPE_U2N	tmpcode/commond.h	/^	ATTACKTYPE_U2N,	\/\/\/ ”√ªßπ•ª˜Npc$/;"	e	enum:ATTACKTYPE
ATTACKTYPE_U2P	base/Command.h	/^  ATTACKTYPE_U2P,\/\/\/ Áî®Êà∑ÊîªÂáªÁÇπ$/;"	e	enum:Cmd::ATTACKTYPE
ATTACKTYPE_U2P	tmpcode/commond.h	/^	ATTACKTYPE_U2P,	\/\/\/ ”√ªßπ•ª˜µ„$/;"	e	enum:ATTACKTYPE
ATTACKTYPE_U2U	base/Command.h	/^  ATTACKTYPE_U2U,\/\/\/ Áî®Êà∑ÊîªÂáªÁî®Êà∑$/;"	e	enum:Cmd::ATTACKTYPE
ATTACKTYPE_U2U	tmpcode/commond.h	/^	ATTACKTYPE_U2U,	\/\/\/ ”√ªßπ•ª˜”√ªß$/;"	e	enum:ATTACKTYPE
ATTACK_STONE_MAX	tmpcode/commond.h	/^const DWORD ATTACK_STONE_MAX  = 10004;  \/\/π•ª˜±¶ Ø$/;"	v
ATTACK_STONE_MIN	tmpcode/commond.h	/^const DWORD ATTACK_STONE_MIN  = 10002;  \/\/π•ª˜±¶ Ø$/;"	v
ATTACK_TARGET_EATTEND	base/Command.h	/^    ATTACK_TARGET_EATTEND   =	2,	\/\/µ–∑ΩÀÊ¥”$/;"	e	enum:Cmd::__anon146
ATTACK_TARGET_EEQUIP	base/Command.h	/^    ATTACK_TARGET_EEQUIP    =	16,	\/\/µ–∑ΩŒ‰∆˜$/;"	e	enum:Cmd::__anon146
ATTACK_TARGET_EHERO	base/Command.h	/^    ATTACK_TARGET_EHERO	    =   1,	\/\/µ–∑Ω”¢–€$/;"	e	enum:Cmd::__anon146
ATTACK_TARGET_NONE	base/Command.h	/^    ATTACK_TARGET_NONE,$/;"	e	enum:Cmd::__anon146
ATTACK_TARGET_SATTEND	base/Command.h	/^    ATTACK_TARGET_SATTEND   =	8,	\/\/º∫∑ΩÀÊ¥”$/;"	e	enum:Cmd::__anon146
ATTACK_TARGET_SEQUIP	base/Command.h	/^    ATTACK_TARGET_SEQUIP    =	32,	\/\/º∫∑ΩŒ‰∆˜$/;"	e	enum:Cmd::__anon146
ATTACK_TARGET_SHERO	base/Command.h	/^    ATTACK_TARGET_SHERO	    =   4,	\/\/º∫∑Ω”¢–€$/;"	e	enum:Cmd::__anon146
ATTACK_TYPE_G_MAGIC	base/Command.h	/^    ATTACK_TYPE_G_MAGIC	= 3,	\/\/∑® ı»∫π•$/;"	e	enum:Cmd::__anon148
ATTACK_TYPE_NONE	base/Command.h	/^    ATTACK_TYPE_NONE,$/;"	e	enum:Cmd::__anon148
ATTACK_TYPE_NORMAL	base/Command.h	/^    ATTACK_TYPE_NORMAL	= 1,	\/\/∆’Õ®π•ª˜$/;"	e	enum:Cmd::__anon148
ATTACK_TYPE_S_MAGIC	base/Command.h	/^    ATTACK_TYPE_S_MAGIC	= 2,	\/\/∑® ıµ•π•$/;"	e	enum:Cmd::__anon148
AT_CONSUME	base/UserCommand.h	/^      AT_CONSUME = 1,\/\/Êâ£Ë¥π$/;"	e	enum:Cmd::UserServer::__anon150
AT_ERROR	base/UserCommand.h	/^      AT_ERROR = -1,$/;"	e	enum:Cmd::UserServer::__anon150
AT_FILLIN	base/UserCommand.h	/^      AT_FILLIN = 0,\/\/ÂÖÖÂÄº$/;"	e	enum:Cmd::UserServer::__anon150
AT_MCARD	base/UserCommand.h	/^      AT_MCARD = 4, \/\/ÊúàÂç°ÂÜ≤ÂÄº$/;"	e	enum:Cmd::UserServer::__anon150
AT_PCARD	base/UserCommand.h	/^      AT_PCARD = 5, \/\/ÈÅìÂÖ∑Âç°$/;"	e	enum:Cmd::UserServer::__anon150
AT_QBALANCE	base/UserCommand.h	/^      AT_QBALANCE = 3,\/\/Êü•ËØ¢$/;"	e	enum:Cmd::UserServer::__anon150
AT_SCARD	base/UserCommand.h	/^      AT_SCARD = 2, \/\/‰∏ìÂå∫Âç°$/;"	e	enum:Cmd::UserServer::__anon150
AUCTION_ACCESSORY_ADORNMENT	base/Command.h	/^  AUCTION_ACCESSORY_ADORNMENT = 23,$/;"	e	enum:Cmd::__anon141
AUCTION_ACCESSORY_ADORNMENT	base/Object.h	/^        AUCTION_ACCESSORY_ADORNMENT = 23,$/;"	e	enum:__anon57
AUCTION_ACCESSORY_NECKLACE	base/Command.h	/^  AUCTION_ACCESSORY_NECKLACE = 21,$/;"	e	enum:Cmd::__anon141
AUCTION_ACCESSORY_NECKLACE	base/Object.h	/^        AUCTION_ACCESSORY_NECKLACE = 21,$/;"	e	enum:__anon57
AUCTION_ACCESSORY_RING	base/Command.h	/^  AUCTION_ACCESSORY_RING = 22,$/;"	e	enum:Cmd::__anon141
AUCTION_ACCESSORY_RING	base/Object.h	/^        AUCTION_ACCESSORY_RING = 22,$/;"	e	enum:__anon57
AUCTION_BID_TYPE_GOLD	base/Command.h	/^const BYTE AUCTION_BID_TYPE_GOLD = 1;$/;"	v
AUCTION_BID_TYPE_MONEY	base/Command.h	/^const BYTE AUCTION_BID_TYPE_MONEY = 0;$/;"	v
AUCTION_BOOK_ARCHER	base/Command.h	/^  AUCTION_BOOK_ARCHER = 32,$/;"	e	enum:Cmd::__anon141
AUCTION_BOOK_ARCHER	base/Object.h	/^        AUCTION_BOOK_ARCHER = 32,$/;"	e	enum:__anon57
AUCTION_BOOK_ASSASSIN	base/Object.h	/^        AUCTION_BOOK_ASSASSIN = 37,\/\/¥ÃøÕ$/;"	e	enum:__anon57
AUCTION_BOOK_FIGHTER	base/Command.h	/^  AUCTION_BOOK_FIGHTER = 31,$/;"	e	enum:Cmd::__anon141
AUCTION_BOOK_FIGHTER	base/Object.h	/^        AUCTION_BOOK_FIGHTER = 31,$/;"	e	enum:__anon57
AUCTION_BOOK_GEN	base/Object.h	/^        AUCTION_BOOK_GEN = 39,\/\/ÃÏ∏≥$/;"	e	enum:__anon57
AUCTION_BOOK_GUARD	base/Object.h	/^        AUCTION_BOOK_GUARD = 38,\/\/Œ¿ ø$/;"	e	enum:__anon57
AUCTION_BOOK_PRIEST	base/Command.h	/^  AUCTION_BOOK_PRIEST = 35,$/;"	e	enum:Cmd::__anon141
AUCTION_BOOK_PRIEST	base/Object.h	/^        AUCTION_BOOK_PRIEST = 35,$/;"	e	enum:__anon57
AUCTION_BOOK_SPECIAL	base/Command.h	/^  AUCTION_BOOK_SPECIAL = 36,$/;"	e	enum:Cmd::__anon141
AUCTION_BOOK_SPECIAL	base/Object.h	/^        AUCTION_BOOK_SPECIAL = 36,$/;"	e	enum:__anon57
AUCTION_BOOK_SUMMONER	base/Command.h	/^  AUCTION_BOOK_SUMMONER = 34,$/;"	e	enum:Cmd::__anon141
AUCTION_BOOK_SUMMONER	base/Object.h	/^        AUCTION_BOOK_SUMMONER = 34,$/;"	e	enum:__anon57
AUCTION_BOOK_WIZARD	base/Command.h	/^  AUCTION_BOOK_WIZARD = 33,$/;"	e	enum:Cmd::__anon141
AUCTION_BOOK_WIZARD	base/Object.h	/^        AUCTION_BOOK_WIZARD = 33,$/;"	e	enum:__anon57
AUCTION_EQUIP_BODY	base/Command.h	/^  AUCTION_EQUIP_BODY = 12,$/;"	e	enum:Cmd::__anon141
AUCTION_EQUIP_BODY	base/Object.h	/^        AUCTION_EQUIP_BODY = 12,$/;"	e	enum:__anon57
AUCTION_EQUIP_FOOT	base/Command.h	/^  AUCTION_EQUIP_FOOT = 16,$/;"	e	enum:Cmd::__anon141
AUCTION_EQUIP_FOOT	base/Object.h	/^        AUCTION_EQUIP_FOOT = 16,$/;"	e	enum:__anon57
AUCTION_EQUIP_HEAD	base/Command.h	/^  AUCTION_EQUIP_HEAD = 11,$/;"	e	enum:Cmd::__anon141
AUCTION_EQUIP_HEAD	base/Object.h	/^        AUCTION_EQUIP_HEAD = 11,$/;"	e	enum:__anon57
AUCTION_EQUIP_MIRROR	base/Object.h	/^        AUCTION_EQUIP_MIRROR = 17,\/\/æµ $/;"	e	enum:__anon57
AUCTION_EQUIP_SHIELD	base/Command.h	/^  AUCTION_EQUIP_SHIELD = 14,$/;"	e	enum:Cmd::__anon141
AUCTION_EQUIP_SHIELD	base/Object.h	/^        AUCTION_EQUIP_SHIELD = 14,$/;"	e	enum:__anon57
AUCTION_EQUIP_WAIST	base/Command.h	/^  AUCTION_EQUIP_WAIST = 15,$/;"	e	enum:Cmd::__anon141
AUCTION_EQUIP_WAIST	base/Object.h	/^        AUCTION_EQUIP_WAIST = 15,$/;"	e	enum:__anon57
AUCTION_EQUIP_WRIST	base/Command.h	/^  AUCTION_EQUIP_WRIST = 13,$/;"	e	enum:Cmd::__anon141
AUCTION_EQUIP_WRIST	base/Object.h	/^        AUCTION_EQUIP_WRIST = 13,$/;"	e	enum:__anon57
AUCTION_OTHER_BMW	base/Object.h	/^        AUCTION_OTHER_BMW = 46,    \/\/¬ÌÓ¯  $/;"	e	enum:__anon57
AUCTION_OTHER_DINGXINGSHI	base/Object.h	/^        AUCTION_OTHER_DINGXINGSHI = 49    \/\/∂®–« Ø$/;"	e	enum:__anon57
AUCTION_OTHER_GEM	base/Command.h	/^  AUCTION_OTHER_GEM = 41,$/;"	e	enum:Cmd::__anon141
AUCTION_OTHER_GEM	base/Object.h	/^        AUCTION_OTHER_GEM = 41,$/;"	e	enum:__anon57
AUCTION_OTHER_ITEM	base/Command.h	/^  AUCTION_OTHER_ITEM = 42,$/;"	e	enum:Cmd::__anon141
AUCTION_OTHER_ITEM	base/Object.h	/^        AUCTION_OTHER_ITEM = 42,$/;"	e	enum:__anon57
AUCTION_OTHER_LEECHDOM	base/Command.h	/^  AUCTION_OTHER_LEECHDOM = 44$/;"	e	enum:Cmd::__anon141
AUCTION_OTHER_LEECHDOM	base/Object.h	/^        AUCTION_OTHER_LEECHDOM = 44,$/;"	e	enum:__anon57
AUCTION_OTHER_MATERIAL	base/Command.h	/^  AUCTION_OTHER_MATERIAL = 43,$/;"	e	enum:Cmd::__anon141
AUCTION_OTHER_MATERIAL	base/Object.h	/^        AUCTION_OTHER_MATERIAL = 43,$/;"	e	enum:__anon57
AUCTION_OTHER_SOUL	base/Object.h	/^        AUCTION_OTHER_SOUL = 45,$/;"	e	enum:__anon57
AUCTION_OTHER_XIUFUSHI	base/Object.h	/^        AUCTION_OTHER_XIUFUSHI = 47,    \/\/–ﬁ∏¥ Ø$/;"	e	enum:__anon57
AUCTION_OTHER_ZHUFUSHI	base/Object.h	/^        AUCTION_OTHER_ZHUFUSHI = 48,    \/\/◊£∏£ Ø$/;"	e	enum:__anon57
AUCTION_STATE_CANCEL	base/SessionCommand.h	/^      AUCTION_STATE_CANCEL  = 3,$/;"	e	enum:Cmd::Session::auctionState
AUCTION_STATE_DEAL	base/SessionCommand.h	/^      AUCTION_STATE_DEAL  = 2,$/;"	e	enum:Cmd::Session::auctionState
AUCTION_STATE_DEL	base/SessionCommand.h	/^      AUCTION_STATE_DEL  = 5$/;"	e	enum:Cmd::Session::auctionState
AUCTION_STATE_NEW	base/SessionCommand.h	/^      AUCTION_STATE_NEW  = 1,$/;"	e	enum:Cmd::Session::auctionState
AUCTION_STATE_TIMEOVER	base/SessionCommand.h	/^      AUCTION_STATE_TIMEOVER  = 4,$/;"	e	enum:Cmd::Session::auctionState
AUCTION_USERCMD	base/CmdType.h	/^const BYTE AUCTION_USERCMD    = 36;$/;"	v
AUCTION_USERCMD	tmpcode/commond.h	/^const BYTE AUCTION_USERCMD              = 36; $/;"	v
AUCTION_WEAPOM_AXE	base/Command.h	/^  AUCTION_WEAPOM_AXE = 2,$/;"	e	enum:Cmd::__anon141
AUCTION_WEAPOM_AXE	base/Object.h	/^        AUCTION_WEAPOM_AXE = 2,$/;"	e	enum:__anon57
AUCTION_WEAPOM_BOW	base/Command.h	/^  AUCTION_WEAPOM_BOW = 3,$/;"	e	enum:Cmd::__anon141
AUCTION_WEAPOM_BOW	base/Object.h	/^        AUCTION_WEAPOM_BOW = 3,$/;"	e	enum:__anon57
AUCTION_WEAPOM_DAGGER	base/Object.h	/^        AUCTION_WEAPOM_DAGGER = 7,\/\/¿˚»–$/;"	e	enum:__anon57
AUCTION_WEAPOM_FAN	base/Command.h	/^  AUCTION_WEAPOM_FAN = 6,$/;"	e	enum:Cmd::__anon141
AUCTION_WEAPOM_FAN	base/Object.h	/^        AUCTION_WEAPOM_FAN = 6,$/;"	e	enum:__anon57
AUCTION_WEAPOM_NEW_SWORD	base/Object.h	/^        AUCTION_WEAPOM_NEW_SWORD = 8,\/\/Ω£$/;"	e	enum:__anon57
AUCTION_WEAPOM_STICK	base/Command.h	/^  AUCTION_WEAPOM_STICK = 4,$/;"	e	enum:Cmd::__anon141
AUCTION_WEAPOM_STICK	base/Object.h	/^        AUCTION_WEAPOM_STICK = 4,$/;"	e	enum:__anon57
AUCTION_WEAPOM_SWORD	base/Command.h	/^  AUCTION_WEAPOM_SWORD = 1,$/;"	e	enum:Cmd::__anon141
AUCTION_WEAPOM_SWORD	base/Object.h	/^        AUCTION_WEAPOM_SWORD = 1,$/;"	e	enum:__anon57
AUCTION_WEAPOM_WAND	base/Command.h	/^  AUCTION_WEAPOM_WAND = 5,$/;"	e	enum:Cmd::__anon141
AUCTION_WEAPOM_WAND	base/Object.h	/^        AUCTION_WEAPOM_WAND = 5,$/;"	e	enum:__anon57
AUTOREPAIROBJECT_USERCMD_PARAMETER	tmpcode/commond.h	4986;"	d
AUTOSKILL_USERCMD	tmpcode/commond.h	/^const BYTE AUTOSKILL_USERCMD	= 108;$/;"	v
AUTO_BATT_DURABIILTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE AUTO_BATT_DURABIILTY_USERCMD_PARA = 129;$/;"	v
AUTO_BATT_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE AUTO_BATT_MAPSCREEN_USERCMD_PARA = 92;$/;"	v
AUTO_HPMP_LINGQI_PARA	tmpcode/commond.h	21005;"	d
AUTO_LEAVE_OBJECT_TYPE	tmpcode/commond.h	/^const DWORD AUTO_LEAVE_OBJECT_TYPE = 50000;$/;"	v
AUTO_PACK	ScenesServer/zObject.h	1104;"	d
AUTO_REPLY_USERCMD_PARA	base/Command.h	3658;"	d
AUTO_SIGNUP_DRAGON_PARA	tmpcode/commond.h	/^const BYTE AUTO_SIGNUP_DRAGON_PARA = 9; $/;"	v
AVATAR_STATE	tmpcode/commond.h	/^enum AVATAR_STATE$/;"	g
AWARD_SECTION_NUMS	tmpcode/commond.h	/^const BYTE AWARD_SECTION_NUMS = 15;   \/\/Ω±¿¯∂Œ ˝ $/;"	v
AchievementItem	tmpcode/commond.h	/^struct AchievementItem$/;"	s
Action	ScenesServer/QuestAction.h	/^class Action$/;"	c
ActionFactory	ScenesServer/QuestMaker.h	/^typedef ProductFactory<std::string,MakeFunction::Maker<Action> > ActionFactory;$/;"	t
ActiveType	tmpcode/commond.h	/^	struct ActiveType$/;"	s	struct:EquipSimulate
Add	ScenesServer/QuestAction.h	/^  class Add$/;"	c	namespace:Op
AddBindItemAction	ScenesServer/QuestAction.h	/^  AddBindItemAction(ScenesParser& p) : TeamAction(p)$/;"	f	class:AddBindItemAction
AddBindItemAction	ScenesServer/QuestAction.h	/^class AddBindItemAction : public TeamAction$/;"	c
AddHeroExpAction	ScenesServer/QuestAction.h	/^  AddHeroExpAction(ScenesParser& p) : TeamAction(p)$/;"	f	class:AddHeroExpAction
AddHeroExpAction	ScenesServer/QuestAction.h	/^class AddHeroExpAction : public TeamAction$/;"	c
AddItemAction	ScenesServer/QuestAction.h	/^  AddItemAction(ScenesParser& p) : TeamAction(p)$/;"	f	class:AddItemAction
AddItemAction	ScenesServer/QuestAction.h	/^class AddItemAction : public TeamAction$/;"	c
AddMeType	base/SessionCommand.h	/^		WORD  AddMeType;		\/\/sky ÊéíÈòüÁöÑÊàòÂú∫Á±ªÂûã  $/;"	m	struct:Cmd::Session::t_Sports_AddMeToQueuing
AddMeType	base/SessionCommand.h	/^		WORD AddMeType;					\/\/sky ÊèêÂá∫ÈÄöÁü•ÁöÑÊéíÈòüÁÆ°ÁêÜÂô®Á¥¢Âºï$/;"	m	struct:Cmd::Session::t_Sports_RequestMap
AddMeType	base/SessionCommand.h	/^		WORD AddMeType;					\/\/sky ÊèêÂá∫ÈÄöÁü•ÁöÑÊéíÈòüÁÆ°ÁêÜÂô®Á¥¢Âºï$/;"	m	struct:Cmd::Session::t_Sports_ReturnMapID
AddMember	base/SessionCommand.h	/^		stMember AddMember;			\/\/\/ sky Ê∑ªÂä†ÈòüÂëò‰ø°ÊÅØ$/;"	m	struct:Cmd::Session::t_Team_AddMember
Add_ITEM_STALL_PARAMETER	tmpcode/commond.h	12242;"	d
AllHeroData	ScenesServer/HeroInfoManager.h	/^	AllHeroData()$/;"	f	class:AllHeroData
AllHeroData	ScenesServer/HeroInfoManager.h	/^class AllHeroData$/;"	c
AllUserList	tmpcode/commond.h	/^	stAllUserList AllUserList[0];   $/;"	m	struct:stShowAllUserCmd
AllyUnionMaster	tmpcode/commond.h	/^	char  AllyUnionMaster[MAX_NAMESIZE];$/;"	m	struct:_UnionAllyInfo
AllyUnionName	tmpcode/commond.h	/^	char  AllyUnionName[MAX_NAMESIZE];  \/\/±ª—˚«Îµƒæ¸Õ≈µƒ√˚◊÷$/;"	m	struct:stReqUnionAlly
AllyUnionName	tmpcode/commond.h	/^	char  AllyUnionName[MAX_NAMESIZE];$/;"	m	struct:_UnionAllyInfo
AllyUnionName	tmpcode/commond.h	/^	char  AllyUnionName[MAX_NAMESIZE];$/;"	m	struct:stCancelUnionAlly
AmendmentFactor	ScenesServer/SceneDefine.h	/^	DWORD AmendmentFactor;		\/\/sky ‰øÆÊ≠£Á≥ªÊï∞$/;"	m	struct:t_NpcDefine
AniTypeEnum	base/Command.h	/^enum AniTypeEnum$/;"	g	namespace:Cmd
Ani_Appear	base/Command.h	/^  Ani_Appear,     \/\/ Âá∫Áé∞(ÈáçÁîü)$/;"	e	enum:Cmd::AniTypeEnum
Ani_Attack	base/Command.h	/^  Ani_Attack,     \/\/ ÊîªÂáª$/;"	e	enum:Cmd::AniTypeEnum
Ani_Attack2	base/Command.h	/^  Ani_Attack2,   \/\/ ÊîªÂáª2$/;"	e	enum:Cmd::AniTypeEnum
Ani_Attack2_Stand	base/Command.h	/^  Ani_Attack2_Stand, \/\/ ÊîªÂáª2Á´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Attack3	base/Command.h	/^  Ani_Attack3,   \/\/ ÊîªÂáª3$/;"	e	enum:Cmd::AniTypeEnum
Ani_Attack3_Stand	base/Command.h	/^  Ani_Attack3_Stand, \/\/ ÊîªÂáª2Á´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Attack_Stand	base/Command.h	/^  Ani_Attack_Stand, \/\/ ÊîªÂáªÁ´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Back	base/Command.h	/^  Ani_Back,     \/\/ ÂêéÈÄÄ$/;"	e	enum:Cmd::AniTypeEnum
Ani_Bow	base/Command.h	/^  Ani_Bow,     \/\/ Â∞ÑÁÆ≠$/;"	e	enum:Cmd::AniTypeEnum
Ani_Bow2	base/Command.h	/^  Ani_Bow2,     \/\/ Âä™ÊîªÂáª$/;"	e	enum:Cmd::AniTypeEnum
Ani_Bow2_Stand	base/Command.h	/^  Ani_Bow2_Stand,   \/\/ Âä™ÊîªÂáªÁ´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Bow_Stand	base/Command.h	/^  Ani_Bow_Stand,   \/\/ ÂºìÁÆ≠ÊîªÂáªÁ´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Die	base/Command.h	/^  Ani_Die,     \/\/ Ê≠ª‰∫°$/;"	e	enum:Cmd::AniTypeEnum
Ani_FirstRun	base/Command.h	/^  Ani_FirstRun,   \/\/ Á¨¨‰∏ÄÊ¨°Ëµ∞$/;"	e	enum:Cmd::AniTypeEnum
Ani_Fly_Die	base/Command.h	/^  Ani_Fly_Die,   \/\/ È£ûË°åÊ≠ª‰∫°$/;"	e	enum:Cmd::AniTypeEnum
Ani_Fly_Hurt	base/Command.h	/^  Ani_Fly_Hurt,   \/\/ È£ûË°åË¢´Âáª$/;"	e	enum:Cmd::AniTypeEnum
Ani_Fly_Run	base/Command.h	/^  Ani_Fly_Run,   \/\/ È£ûË°åÂø´ÈÄü$/;"	e	enum:Cmd::AniTypeEnum
Ani_Fly_Walk	base/Command.h	/^  Ani_Fly_Walk,   \/\/ È£ûË°åÊÖ¢ÈÄü$/;"	e	enum:Cmd::AniTypeEnum
Ani_Gather	base/Command.h	/^  Ani_Gather,     \/\/ ÈááËçØ$/;"	e	enum:Cmd::AniTypeEnum
Ani_Gather_Stand	base/Command.h	/^  Ani_Gather_Stand,$/;"	e	enum:Cmd::AniTypeEnum
Ani_Hurt	base/Command.h	/^  Ani_Hurt,     \/\/ Âèó‰º§(Ë¢´Âáª)$/;"	e	enum:Cmd::AniTypeEnum
Ani_Idle0	base/Command.h	/^  Ani_Idle0,$/;"	e	enum:Cmd::AniTypeEnum
Ani_Idle1	base/Command.h	/^  Ani_Idle1,$/;"	e	enum:Cmd::AniTypeEnum
Ani_Idle2	base/Command.h	/^  Ani_Idle2,$/;"	e	enum:Cmd::AniTypeEnum
Ani_Idle3	base/Command.h	/^  Ani_Idle3,$/;"	e	enum:Cmd::AniTypeEnum
Ani_Magic	base/Command.h	/^  Ani_Magic,     \/\/ È≠îÊ≥ïÊîªÂáª$/;"	e	enum:Cmd::AniTypeEnum
Ani_Magic2	base/Command.h	/^  Ani_Magic2,     \/\/ È≠îÊ≥ïÊîªÂáª2$/;"	e	enum:Cmd::AniTypeEnum
Ani_Magic2_Stand	base/Command.h	/^  Ani_Magic2_Stand, \/\/ È≠îÊ≥ï2ÊîªÂáªÁ´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Magic3	base/Command.h	/^  Ani_Magic3,     \/\/ È≠îÊ≥ïÊîªÂáª3$/;"	e	enum:Cmd::AniTypeEnum
Ani_Magic3_Stand	base/Command.h	/^  Ani_Magic3_Stand, \/\/ È≠îÊ≥ï3ÊîªÂáªÁ´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Magic_Stand	base/Command.h	/^  Ani_Magic_Stand, \/\/ È≠îÊ≥ïÊîªÂáªÁ´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Null	base/Command.h	/^Ani_Null = 0,$/;"	e	enum:Cmd::AniTypeEnum
Ani_Num	base/Command.h	/^  Ani_Num$/;"	e	enum:Cmd::AniTypeEnum
Ani_OpenBox_Stand	base/Command.h	/^  Ani_OpenBox_Stand,$/;"	e	enum:Cmd::AniTypeEnum
Ani_Ride_Attack	base/Command.h	/^  Ani_Ride_Attack, \/\/ È™ëÈ©¨ÊîªÂáª$/;"	e	enum:Cmd::AniTypeEnum
Ani_Ride_Attack_Stand	base/Command.h	/^  Ani_Ride_Attack_Stand,\/\/ È™ëÈ©¨ÊîªÂáªÁ´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Ride_Back	base/Command.h	/^  Ani_Ride_Back,   \/\/ È™ëÈ©¨ÂêéÈÄÄ$/;"	e	enum:Cmd::AniTypeEnum
Ani_Ride_Bow	base/Command.h	/^  Ani_Ride_Bow,   \/\/ È™ëÈ©¨Â∞ÑÁÆ≠$/;"	e	enum:Cmd::AniTypeEnum
Ani_Ride_Bow_Stand	base/Command.h	/^  Ani_Ride_Bow_Stand, \/\/ È™ëÈ©¨Â∞ÑÁÆ≠Á´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Ride_Die	base/Command.h	/^  Ani_Ride_Die,   \/\/ È™ëÈ©¨Ê≠ª‰∫°$/;"	e	enum:Cmd::AniTypeEnum
Ani_Ride_Hurt	base/Command.h	/^  Ani_Ride_Hurt,   \/\/ Âèó‰º§(Ë¢´Âáª)$/;"	e	enum:Cmd::AniTypeEnum
Ani_Ride_Magic	base/Command.h	/^  Ani_Ride_Magic,   \/\/ È™ëÈ©¨ÊñΩÊ≥ï$/;"	e	enum:Cmd::AniTypeEnum
Ani_Ride_Magic_Stand	base/Command.h	/^  Ani_Ride_Magic_Stand,\/\/ È™ëÈ©¨ÊñΩÊ≥ïÁ´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Ride_Run	base/Command.h	/^  Ani_Ride_Run,   \/\/ È™ëÈ©¨Ë∑ë$/;"	e	enum:Cmd::AniTypeEnum
Ani_Ride_Wait	base/Command.h	/^  Ani_Ride_Wait,   \/\/ È™ëÈ©¨Á´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Ride_Walk	base/Command.h	/^  Ani_Ride_Walk,   \/\/ È™ëÈ©¨Ëµ∞$/;"	e	enum:Cmd::AniTypeEnum
Ani_Run	base/Command.h	/^  Ani_Run,     \/\/ Ë∑ë$/;"	e	enum:Cmd::AniTypeEnum
Ani_Sit	base/Command.h	/^  Ani_Sit,     \/\/ ÊâìÂùê$/;"	e	enum:Cmd::AniTypeEnum
Ani_Stand	base/Command.h	/^  Ani_Wait,Ani_Stand = Ani_Wait,\/\/ Á´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Wait	base/Command.h	/^  Ani_Wait,Ani_Stand = Ani_Wait,\/\/ Á´ôÁ´ã$/;"	e	enum:Cmd::AniTypeEnum
Ani_Walk	base/Command.h	/^  Ani_Walk,     \/\/ Ëµ∞$/;"	e	enum:Cmd::AniTypeEnum
Args	tools/codepg.cpp	/^    Args()$/;"	f	struct:Args
Args	tools/codepg.cpp	/^struct Args$/;"	s
Args	tools/xmlpg.cpp	/^    Args()$/;"	f	struct:Args
Args	tools/xmlpg.cpp	/^struct Args$/;"	s
AttAddDam	ScenesServer/ScenePk.h	/^	  SWORD AttAddDam;		\/\/sky Â¢ûÂä†‰º§ÂÆ≥ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
AttackMe	ScenesServer/CardPk.cpp	/^bool zCard::AttackMe(zCard *pAtt, const Cmd::stCardAttackMagicUserCmd *rev)$/;"	f	class:zCard
AttackMe	ScenesServer/SceneEntryPk.cpp	/^bool SceneEntryPk::AttackMe(SceneEntryPk *pAtt,const Cmd::stAttackMagicUserCmd *rev,bool physics,SWORD rangDamageBonus)$/;"	f	class:SceneEntryPk
AttackMe	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::AttackMe(SceneEntryPk *pAtt,const Cmd::stAttackMagicUserCmd *rev,bool physics,SWORD rangDamageBonus)$/;"	f	class:SceneNpc
AwardInfo	tmpcode/commond.h	/^	AwardInfo()$/;"	f	struct:AwardInfo
AwardInfo	tmpcode/commond.h	/^struct AwardInfo$/;"	s
BA2WD	base/Union.h	18;"	d
BACKOFF_USERCMD_PARA	base/Command.h	/^const BYTE BACKOFF_USERCMD_PARA  = 7;$/;"	v
BACKOFF_USERCMD_PARA	tmpcode/commond.h	/^const BYTE BACKOFF_USERCMD_PARA	= 7;$/;"	v
BACKSELECT_USERCMD_PARA	base/Command.h	/^const BYTE BACKSELECT_USERCMD_PARA = 10;$/;"	v
BACKSELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE BACKSELECT_USERCMD_PARA = 10;$/;"	v
BACKTO_TRANS_PROPERTY_USERCMD_PARA	tmpcode/commond.h	24288;"	d
BACK_CHANGE_TRAVEL	base/BattleUserCmd.h	/^	BACK_CHANGE_TRAVEL,    \/\/ªÿ¬√”Œ«∞µƒ«¯$/;"	e	enum:Cmd::__anon12
BAIL_PRISON_PARA	base/Command.h	/^const BYTE BAIL_PRISON_PARA = 3;$/;"	v
BANDAGE_OBJECT_ID_MAX	tmpcode/commond.h	/^const WORD BANDAGE_OBJECT_ID_MAX = 36003;\/\/”≈÷ ±¡¥¯	$/;"	v
BANDAGE_OBJECT_ID_MIN	tmpcode/commond.h	/^const WORD BANDAGE_OBJECT_ID_MIN = 36001;\/\/	¡”÷ ±¡¥¯$/;"	v
BANGL	ScenesServer/zObject.h	/^      BANGL,$/;"	e	enum:EquipPack::EQUIPNO
BANGR	ScenesServer/zObject.h	/^      BANGR,$/;"	e	enum:EquipPack::EQUIPNO
BANISH_ROOMER_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE BANISH_ROOMER_HOUSE_USER_CMD = 15;$/;"	v
BARGIRL_FAVOUR_DIALOG_PARA	tmpcode/commond.h	/^const BYTE BARGIRL_FAVOUR_DIALOG_PARA = 41;$/;"	v
BAR_CARD_PROPERTY	tmpcode/commond.h	/^const BYTE BAR_CARD_PROPERTY				=64;$/;"	v
BAR_DINE_PARA	tmpcode/commond.h	/^ const BYTE BAR_DINE_PARA = 42;$/;"	v
BAR_DRINK_OTHER_PARA	tmpcode/commond.h	/^ const BYTE BAR_DRINK_OTHER_PARA = 43;$/;"	v
BAR_GIRL_EMBRACE	tmpcode/commond.h	/^        BAR_GIRL_EMBRACE,$/;"	e	enum:__anon297
BAR_GIRL_KISS	tmpcode/commond.h	/^        BAR_GIRL_KISS$/;"	e	enum:__anon297
BAR_GIRL_NOD	tmpcode/commond.h	/^        BAR_GIRL_NOD,$/;"	e	enum:__anon297
BAR_GIRL_NONE	tmpcode/commond.h	/^        BAR_GIRL_NONE,$/;"	e	enum:__anon297
BAR_GIRL_SMILE	tmpcode/commond.h	/^        BAR_GIRL_SMILE,$/;"	e	enum:__anon297
BAR_KEEPER_CLEAR	tmpcode/commond.h	/^        BAR_KEEPER_CLEAR,     \/\/«Â–—“˚æ∆◊¥Ã¨$/;"	e	enum:__anon289
BAR_KEEPER_DRINK	tmpcode/commond.h	/^        BAR_KEEPER_DRINK,     \/\/◊Ìæ∆∑¢±¶◊¥Ã¨$/;"	e	enum:__anon289
BAR_KEEPER_SLEEP	tmpcode/commond.h	/^        BAR_KEEPER_SLEEP,     \/\/ªËÀØæ‹æ¯“˚æ∆◊¥Ã¨$/;"	e	enum:__anon289
BAR_OTHER_DRINK_PARA	tmpcode/commond.h	/^ const BYTE BAR_OTHER_DRINK_PARA = 44;$/;"	v
BAR_PEOT_CAN	tmpcode/commond.h	/^const BYTE BAR_PEOT_CAN						 = 62;$/;"	v
BAR_PEOT_CARD	tmpcode/commond.h	/^const BYTE BAR_PEOT_CARD					 = 63;$/;"	v
BAR_PEOT_CHOUJIANG	tmpcode/commond.h	/^const BYTE BAR_PEOT_CHOUJIANG				 = 61;$/;"	v
BAR_USERCMD	tmpcode/commond.h	/^const BYTE BAR_USERCMD = 123;$/;"	v
BASE	ScenesServer/zCard.h	/^  typedef T BASE;$/;"	t	class:Type2Type2
BASE	ScenesServer/zObject.h	/^  typedef T BASE;$/;"	t	class:Type2Type
BASEDATA_F_ATTACKDODGE	base/CharBase.h	70;"	d
BASEDATA_F_ATTACKRATING	base/CharBase.h	69;"	d
BASEDATA_F_ATTACKSPEED	base/CharBase.h	73;"	d
BASEDATA_F_BANG	base/CharBase.h	80;"	d
BASEDATA_F_HP	base/CharBase.h	61;"	d
BASEDATA_F_MDAMAGE	base/CharBase.h	76;"	d
BASEDATA_F_MDEFENCE	base/CharBase.h	78;"	d
BASEDATA_F_MOVESPEED	base/CharBase.h	72;"	d
BASEDATA_F_MP	base/CharBase.h	62;"	d
BASEDATA_F_PDAMAGE	base/CharBase.h	75;"	d
BASEDATA_F_PDEFENCE	base/CharBase.h	77;"	d
BASEDATA_F_RESUMEHP	base/CharBase.h	65;"	d
BASEDATA_F_RESUMEMP	base/CharBase.h	66;"	d
BASEDATA_F_RESUMESP	base/CharBase.h	67;"	d
BASEDATA_F_SP	base/CharBase.h	63;"	d
BASEDATA_M_ATTACKDODGE	base/CharBase.h	49;"	d
BASEDATA_M_ATTACKRATING	base/CharBase.h	48;"	d
BASEDATA_M_ATTACKSPEED	base/CharBase.h	52;"	d
BASEDATA_M_BANG	base/CharBase.h	59;"	d
BASEDATA_M_HP	base/CharBase.h	40;"	d
BASEDATA_M_MDAMAGE	base/CharBase.h	55;"	d
BASEDATA_M_MDEFENCE	base/CharBase.h	57;"	d
BASEDATA_M_MOVESPEED	base/CharBase.h	51;"	d
BASEDATA_M_MP	base/CharBase.h	41;"	d
BASEDATA_M_PDAMAGE	base/CharBase.h	54;"	d
BASEDATA_M_PDEFENCE	base/CharBase.h	56;"	d
BASEDATA_M_RESUMEHP	base/CharBase.h	44;"	d
BASEDATA_M_RESUMEMP	base/CharBase.h	45;"	d
BASEDATA_M_RESUMESP	base/CharBase.h	46;"	d
BASEDATA_M_SP	base/CharBase.h	42;"	d
BASE_EXP_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE BASE_EXP_PROPERTY_USERCMD_PARA = 151;$/;"	v
BATCHREMOVENPC_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE BATCHREMOVENPC_MAPSCREEN_USERCMD_PARA = 61;$/;"	v
BATCHREMOVENPC_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE BATCHREMOVENPC_MAPSCREEN_USERCMD_PARA = 61;$/;"	v
BATCHREMOVEUSER_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE BATCHREMOVEUSER_MAPSCREEN_USERCMD_PARA = 62;$/;"	v
BATCHREMOVEUSER_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE BATCHREMOVEUSER_MAPSCREEN_USERCMD_PARA = 62;$/;"	v
BATTLEFIELD_SCENE_ID	base/zType.h	88;"	d
BATTLE_CLOSE	base/RolechangeCommand.h	/^	BATTLE_CLOSE,	    \/\/’Ω«¯Œ¥ø™∑≈$/;"	e	enum:Cmd::Rolechange::__anon20
BATTLE_INVALID	base/RolechangeCommand.h	/^	BATTLE_INVALID,	    \/\/≤ª «’Ω«¯$/;"	e	enum:Cmd::Rolechange::__anon20
BATTLE_LEVEL_INVALID	base/RolechangeCommand.h	/^	BATTLE_LEVEL_INVALID,	\/\/µ»º∂≤ª‘⁄∑∂Œßƒ⁄$/;"	e	enum:Cmd::Rolechange::__anon20
BATTLE_PLAYER_REPEAT	base/RolechangeCommand.h	/^	BATTLE_PLAYER_REPEAT,	\/\/Ω«…´“—æ≠‘⁄∏√’Ω«¯,≤ªƒ‹÷ÿ◊™$/;"	e	enum:Cmd::Rolechange::__anon20
BATTLE_STATE_PARA	base/BattleUserCmd.h	/^    const BYTE BATTLE_STATE_PARA = 1;	\/\/øÕªß∂À ’µΩ∏√œ˚œ¢ ±Ì æΩ¯»Îµƒ «’Ω«¯$/;"	v
BATTLE_SUCCESS	base/RolechangeCommand.h	/^	BATTLE_SUCCESS,	    \/\/’Ω«¯—È÷§Õ®π˝$/;"	e	enum:Cmd::Rolechange::__anon20
BATTLE_USERCMD	base/CmdType.h	/^const BYTE BATTLE_USERCMD	= 54;$/;"	v
BATTLE_USER_NUM	SessionServer/HeroCardManager.h	15;"	d
BATTLE_USER_REPEAT	base/RolechangeCommand.h	/^	BATTLE_USER_REPEAT, \/\/’À∫≈÷ÿ∏¥,’Ω«¯“—”–∏√’À∫≈µƒΩ«…´$/;"	e	enum:Cmd::Rolechange::__anon20
BATTLE_VERSION_INVALID	base/RolechangeCommand.h	/^	BATTLE_VERSION_INVALID,	\/\/∞Ê±æ≤ª∆•≈‰$/;"	e	enum:Cmd::Rolechange::__anon20
BECOME_LIFEGUARD_USERCMD_PARA	tmpcode/commond.h	/^const BYTE BECOME_LIFEGUARD_USERCMD_PARA = 32;$/;"	v
BEGIN_BET_CHALLENGE_USERCMD_PARAMETER	tmpcode/commond.h	22102;"	d
BEGIN_DECAY_LINGQI_PARA	tmpcode/commond.h	/^const BYTE  BEGIN_DECAY_LINGQI_PARA = 4;$/;"	v
BEGIN_DISPLAY_CARTOON	tmpcode/commond.h	/^const BYTE BEGIN_DISPLAY_CARTOON        = 25;$/;"	v
BEGIN_PUNISHING_SPECIAL_CMD_PARA	tmpcode/commond.h	/^static const BYTE BEGIN_PUNISHING_SPECIAL_CMD_PARA = 8;$/;"	v
BEGIN_TRADE_USERCMD_PARAMETER	base/Command.h	3873;"	d
BEGIN_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE BEGIN_TRADE_USERCMD_PARAMETER = 2;$/;"	v
BEING_GUID_MASK	tmpcode/commond.h	49;"	d
BEING_GUID_MASK_MOUNT	tmpcode/commond.h	73;"	d
BEING_GUID_MASK_PET	tmpcode/commond.h	65;"	d
BEING_GUID_MASK_PET_PHOTO	tmpcode/commond.h	69;"	d
BEING_GUID_MASK_PLAYER	tmpcode/commond.h	57;"	d
BEING_GUID_MASK_SE	tmpcode/commond.h	53;"	d
BEING_GUID_MASK_TANK	tmpcode/commond.h	61;"	d
BELT	ScenesServer/zObject.h	/^      BELT,$/;"	e	enum:EquipPack::EQUIPNO
BID_AUCTION_PARA	base/Command.h	/^const BYTE BID_AUCTION_PARA = 2;$/;"	v
BID_AUCTION_PARA	tmpcode/commond.h	/^const BYTE BID_AUCTION_PARA = 2;$/;"	v
BIG_EVENT_PARA	tmpcode/commond.h	/^const BYTE BIG_EVENT_PARA = 18;$/;"	v
BILLSERVER	base/zMisc.h	/^	BILLSERVER      =  12, \/** ËÆ°Ë¥πÊúçÂä°Âô® *\/$/;"	e	enum:ServerType
BINARY_CARD_GROUP	base/CharBase.h	/^  BINARY_CARD_GROUP	= 4,	\/\/ø®◊È–≈œ¢ $/;"	e	enum:BinaryArchiveType
BINARY_CARD_TUJIAN	base/CharBase.h	/^  BINARY_CARD_TUJIAN	= 3,	\/\/CARD Õºº¯$/;"	e	enum:BinaryArchiveType
BINARY_COUNTER	base/CharBase.h	/^  BINARY_COUNTER	= 2,	\/\/COUNTER MANAGER$/;"	e	enum:BinaryArchiveType
BINARY_HERO_DATA	base/CharBase.h	/^  BINARY_HERO_DATA	= 5,	\/\/À˘”–”¢–€ ˝æ›$/;"	e	enum:BinaryArchiveType
BINARY_MAX	base/CharBase.h	/^  BINARY_MAX	= 255, \/\/\/ÊúÄÂ§ßÊï∞ÂÄº(Âç†‰ΩçÁî®)$/;"	e	enum:BinaryArchiveType
BINARY_TMP_CHALLENGE	base/CharBase.h	/^  BINARY_TMP_CHALLENGE	= 6,	\/\/º«¬º∂‘’Ωµƒ¡Ÿ ± ˝æ›$/;"	e	enum:BinaryArchiveType
BINARY_VERSION	base/BinaryVersion.h	10;"	d
BINARY_VERSION_20131031	base/BinaryVersion.h	7;"	d
BINARY_ZOBJECT	base/CharBase.h	/^  BINARY_ZOBJECT	= 1,	\/\/OBJECT DATA$/;"	e	enum:BinaryArchiveType
BLACK_LIST_ADD	base/SessionCommand.h	/^      BLACK_LIST_ADD$/;"	e	enum:Cmd::Session::__anon41
BLACK_LIST_REMOVE	base/SessionCommand.h	/^      BLACK_LIST_REMOVE,$/;"	e	enum:Cmd::Session::__anon41
BLAST_GEMNPC_SCENE_PARA	base/SessionCommand.h	/^    const BYTE BLAST_GEMNPC_SCENE_PARA = 4;$/;"	v
BLESS_ONE	tmpcode/commond.h	/^	BLESS_ONE = 0,$/;"	e	enum:__anon240
BLESS_THREE	tmpcode/commond.h	/^	BLESS_THREE$/;"	e	enum:__anon240
BLESS_TWO	tmpcode/commond.h	/^	BLESS_TWO,$/;"	e	enum:__anon240
BODY	ScenesServer/zObject.h	/^      BODY,$/;"	e	enum:EquipPack::EQUIPNO
BODYCOLOR_PROPERTY_USERCMD_PARA	base/Command.h	2938;"	d
BOOK_EXP_USERCMD_PARA	tmpcode/commond.h	/^const BYTE BOOK_EXP_USERCMD_PARA = 189;$/;"	v
BOOTS	ScenesServer/zObject.h	/^      BOOTS,\/\/10$/;"	e	enum:EquipPack::EQUIPNO
BOW_ARROW_ITEM_TYPE	base/Object.h	500;"	d
BREAK_COUNTRY_ALLY	tmpcode/commond.h	/^	BREAK_COUNTRY_ALLY = 4,           \/\/ ∂œΩª, Clt->Svr->Clt$/;"	e	enum:CountryAllyActionEnum
BREAK_FALGPICK_SC_PARA	tmpcode/commond.h	/^const BYTE BREAK_FALGPICK_SC_PARA		= 13;$/;"	v
BREAK_HORSE_SOUL_PARA	tmpcode/commond.h	/^const BYTE BREAK_HORSE_SOUL_PARA = 51;$/;"	v
BRIBE_PRISON_PARA	base/Command.h	/^const BYTE BRIBE_PRISON_PARA = 2;$/;"	v
BROADCAST_BANISH_ROOMER_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE BROADCAST_BANISH_ROOMER_HOUSE_USER_CMD = 16;$/;"	v
BROADCAST_MEMBER_INFO_PARA	base/Command.h	/^const BYTE BROADCAST_MEMBER_INFO_PARA = 10;$/;"	v
BROADCAST_MEMBER_INFO_PARA	tmpcode/commond.h	/^const BYTE BROADCAST_MEMBER_INFO_PARA = 10;$/;"	v
BROADCAST_SEPT_MEMBER_INFO_PARA	base/Command.h	/^const BYTE BROADCAST_SEPT_MEMBER_INFO_PARA = 10;$/;"	v
BROADCAST_SEPT_MEMBER_INFO_PARA	tmpcode/commond.h	/^const BYTE BROADCAST_SEPT_MEMBER_INFO_PARA = 10;$/;"	v
BROADCAST_USERAPPLY_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE BROADCAST_USERAPPLY_HOUSE_USER_CMD = 59;$/;"	v
BSIZE	base/EncDec/EncDec.h	174;"	d
BSIZE	base/EncDec/mydes.h	75;"	d
BUFFER_CMD	base/zMisc.h	164;"	d
BUILD_ARRANGE	tmpcode/commond.h	/^	BUILD_ARRANGE           \/\/Ω®÷˛(BUILD_INFO+ARRANGE_INFO)$/;"	e	enum:__anon267
BUILD_DECAY_HOUSE_LINGQI_PARA	tmpcode/commond.h	/^const BYTE BUILD_DECAY_HOUSE_LINGQI_PARA = 17;$/;"	v
BUILD_DIR_ROOT	Makefile	/^BUILD_DIR_ROOT = $(PWD)$/;"	m
BUILD_INFO	tmpcode/commond.h	/^	BUILD_INFO = 0,         \/\/Ω®÷˛+æ¸Õ≈–≈œ¢$/;"	e	enum:__anon267
BUILD_INFO_ONLY	tmpcode/commond.h	/^	BUILD_INFO_ONLY,        \/\/Ω®÷˛$/;"	e	enum:__anon267
BUILD_RESIDENT_TOWER	tmpcode/commond.h	/^const BYTE BUILD_RESIDENT_TOWER = 205;$/;"	v
BUILD_RESOURCE	tmpcode/commond.h	/^	BUILD_RESOURCE  = 0,   \/\/Ω®÷˛ π”√◊ ‘¥$/;"	e	enum:__anon314
BUILD_STRING	Makefile	/^BUILD_STRING = `date +%Y%m%d`" build"`cat $(BUILD_DIR_ROOT)\/.build`$/;"	m
BUILD_TECH	tmpcode/commond.h	/^enum BUILD_TECH$/;"	g
BUILD_USERCMD	base/CmdType.h	/^const BYTE BUILD_USERCMD    = 8;$/;"	v
BUSINESSPACKSIZE	tmpcode/commond.h	/^const BYTE BUSINESSPACKSIZE = 16;       \/\/ ≈‹…Ã∞¸π¸¥Û–°$/;"	v
BUSINESS_USERCMD	tmpcode/commond.h	/^const BYTE BUSINESS_USERCMD     = 69;$/;"	v
BUYOBJECT_NPCTRADE_USERCMD_PARAMETER	tmpcode/commond.h	5088;"	d
BUYSUIT_USERCMD_PARAMETER	tmpcode/commond.h	5442;"	d
BUY_BUSINESS_GOODS_USERCMD	tmpcode/commond.h	/^const BYTE BUY_BUSINESS_GOODS_USERCMD = 7;$/;"	v
BUY_CARTOON_PARA	base/Command.h	8165;"	d
BUY_DANCER_PARA	tmpcode/commond.h	/^const BYTE BUY_DANCER_PARA = 1;$/;"	v
BUY_ITEM_STALL_PARAMETER	tmpcode/commond.h	12266;"	d
BUY_SUCCESS	tmpcode/commond.h	/^	 BUY_SUCCESS,	\/\/π∫¬Ú≥…π¶$/;"	e	enum:__anon296
BUY_TIME_LIMIT	tmpcode/commond.h	/^	 BUY_TIME_LIMIT,	\/\/π∫¬Ú ±œﬁ$/;"	e	enum:__anon296
BUY_UNION_MACKET_OBJECT	tmpcode/commond.h	/^const BYTE BUY_UNION_MACKET_OBJECT = 156;$/;"	v
BUY_WEEK_ASSURANCE_PARA	tmpcode/commond.h	/^const BYTE BUY_WEEK_ASSURANCE_PARA = 31;$/;"	v
BUY_WEEK_ASSURANCE_RESULT_PARA	tmpcode/commond.h	/^const BYTE BUY_WEEK_ASSURANCE_RESULT_PARA = 41;$/;"	v
BUY_WINE_STATE	tmpcode/commond.h	/^const BYTE BUY_WINE_STATE = 23;$/;"	v
BYTE	base/zType.h	/^typedef unsigned char BYTE;$/;"	t
B_ALCHEMY	tmpcode/commond.h	/^        B_ALCHEMY = 0,$/;"	e	enum:BUILD_TECH
B_EQUIPSTRENG	tmpcode/commond.h	/^        B_EQUIPSTRENG,$/;"	e	enum:BUILD_TECH
B_MAGICFORGE	tmpcode/commond.h	/^        B_MAGICFORGE,$/;"	e	enum:BUILD_TECH
Bag	base/xmlparser/giftbag.h	/^    struct Bag$/;"	s	struct:GiftBagConfig
BagMap	base/xmlparser/giftbag.h	/^    typedef xml_node_map<DWORD,Bag>	BagMap;$/;"	t	struct:GiftBagConfig
BagMapConstIter	base/xmlparser/giftbag.h	/^    typedef BagMap::const_iterator	BagMapConstIter;$/;"	t	struct:GiftBagConfig
BagMapIter	base/xmlparser/giftbag.h	/^    typedef BagMap::iterator	BagMapIter;$/;"	t	struct:GiftBagConfig
Base	ScenesServer/QuestAction.h	/^  typedef Action Base;$/;"	t	class:Action
Base	ScenesServer/QuestCondition.h	/^  typedef Condition Base;$/;"	t	class:Condition
Base	ScenesServer/QuestMaker.h	/^    typedef Maker<Action>::Base Base;$/;"	t	class:MakeFunction::Update
Base	ScenesServer/QuestMaker.h	/^    typedef Maker<Action>::Base Base;$/;"	t	class:MakeFunction::Void
Base	ScenesServer/QuestMaker.h	/^    typedef Maker<Condition>::Base Base;$/;"	t	class:MakeFunction::Compare
Base	ScenesServer/QuestMaker.h	/^    typedef typename A::Base Base;$/;"	t	class:MakeFunction::Content
Base	ScenesServer/QuestMaker.h	/^    typedef typename A::Base Base;$/;"	t	class:MakeFunction::Maker
Base	ScenesServer/QuestMaker.h	/^    typedef typename A::Base Base;$/;"	t	class:MakeFunction::Prop
BattCampID	ScenesServer/SceneEntryPk.h	/^	DWORD BattCampID;$/;"	m	struct:SceneEntryPk
BattfieldHonor	ScenesServer/SceneUser.h	/^	DWORD BattfieldHonor;	\/\/sky ÊàòÂú∫Ëç£Ë™â$/;"	m	struct:stUserBattfieldData
BattleConfig	base/xmlparser/battle.h	/^struct BattleConfig$/;"	s
BattleSlot	ScenesServer/zCard.cpp	/^BattleSlot::BattleSlot():CardSlot(Cmd::CARDCELLTYPE_COMMON,0,BattleSlot::WIDTH,BattleSlot::HEIGHT)$/;"	f	class:BattleSlot
BattleSlot	ScenesServer/zCard.h	/^class BattleSlot:public CardSlot$/;"	c
Bill	base/BillCommand.h	/^  namespace Bill$/;"	n	namespace:Cmd
BillCache	BillServer/BillCache.cpp	/^BillCache::BillCache() : SerialNumber(0)$/;"	f	class:BillCache
BillCache	BillServer/BillCache.h	/^class BillCache : public SingletonBase<BillCache>$/;"	c
BillCallback	BillServer/BillCallback.h	/^struct BillCallback$/;"	s
BillClient	BillServer/BillClient.cpp	/^BillClient::BillClient($/;"	f	class:BillClient
BillClient	BillServer/BillClient.h	/^class BillClient : public zTCPClientTask, public MessageQueue$/;"	c
BillClient	GatewayServer/BillClient.h	/^	BillClient($/;"	f	class:BillClient
BillClient	GatewayServer/BillClient.h	/^class BillClient : public zTCPBufferClient$/;"	c
BillClientContainer	BillServer/BillClientManager.h	/^    typedef std::multiset<BillClient *,lt_client> BillClientContainer;$/;"	t	class:BillClientManager
BillClientManager	BillServer/BillClientManager.cpp	/^BillClientManager::BillClientManager() : billClientPool(NULL),actionTimer(),maxID(0)$/;"	f	class:BillClientManager
BillClientManager	BillServer/BillClientManager.h	/^class BillClientManager : public SingletonBase<BillClientManager>$/;"	c
BillConfile	BillServer/BillServer.cpp	/^class BillConfile:public zConfile$/;"	c
BillData	BillServer/BillCallback.h	/^struct BillData$/;"	s
BillInfo	BillServer/BillManager.h	/^  BillInfo() : timestamp()$/;"	f	struct:BillInfo
BillInfo	BillServer/BillManager.h	/^  BillInfo(const BillInfo &ai)$/;"	f	struct:BillInfo
BillInfo	BillServer/BillManager.h	/^struct BillInfo$/;"	s
BillInfoMap	BillServer/BillManager.h	/^    typedef __gnu_cxx::hash_map<DWORD,BillInfo> BillInfoMap;$/;"	t	class:BillManager
BillInfoMap_iterator	BillServer/BillManager.h	/^    typedef BillInfoMap::iterator BillInfoMap_iterator;$/;"	t	class:BillManager
BillInfoMap_pair	BillServer/BillManager.h	/^    typedef BillInfoMap::value_type BillInfoMap_pair;$/;"	t	class:BillManager
BillManager	BillServer/BillManager.h	/^    BillManager() {};$/;"	f	class:BillManager
BillManager	BillServer/BillManager.h	/^class BillManager$/;"	c
BillService	BillServer/BillServer.h	/^    BillService() : zSubNetService("ËÆ°Ë¥πÊúçÂä°Âô®",BILLSERVER)$/;"	f	class:BillService
BillService	BillServer/BillServer.h	/^class BillService : public zSubNetService$/;"	c
BillSession	BillServer/BillSessionManager.h	/^  BillSession()$/;"	f	struct:BillSession
BillSession	BillServer/BillSessionManager.h	/^struct BillSession$/;"	s
BillSessionHashmap	BillServer/BillSessionManager.h	/^    typedef std::map<std::string,BillSession> BillSessionHashmap;$/;"	t	class:BillSessionManager
BillSessionHashmap_iterator	BillServer/BillSessionManager.h	/^    typedef BillSessionHashmap::iterator BillSessionHashmap_iterator;$/;"	t	class:BillSessionManager
BillSessionHashmap_pair	BillServer/BillSessionManager.h	/^    typedef BillSessionHashmap::value_type BillSessionHashmap_pair;$/;"	t	class:BillSessionManager
BillSessionManager	BillServer/BillSessionManager.h	/^    BillSessionManager() {};$/;"	f	class:BillSessionManager
BillSessionManager	BillServer/BillSessionManager.h	/^class BillSessionManager$/;"	c
BillTask	BillServer/BillTask.h	/^    BillTask($/;"	f	class:BillTask
BillTask	BillServer/BillTask.h	/^class BillTask : public zTCPTask,public MessageQueue$/;"	c
BillTaskHashmap	BillServer/BillTaskManager.h	/^    typedef __gnu_cxx::hash_map<WORD,BillTask *> BillTaskHashmap;$/;"	t	class:BillTaskManager
BillTaskHashmap_const_iterator	BillServer/BillTaskManager.h	/^    typedef BillTaskHashmap::const_iterator BillTaskHashmap_const_iterator;$/;"	t	class:BillTaskManager
BillTaskHashmap_iterator	BillServer/BillTaskManager.h	/^    typedef BillTaskHashmap::iterator BillTaskHashmap_iterator;$/;"	t	class:BillTaskManager
BillTaskHashmap_pair	BillServer/BillTaskManager.h	/^    typedef BillTaskHashmap::value_type BillTaskHashmap_pair;$/;"	t	class:BillTaskManager
BillTaskManager	BillServer/BillTaskManager.h	/^    BillTaskManager() {};$/;"	f	class:BillTaskManager
BillTaskManager	BillServer/BillTaskManager.h	/^class BillTaskManager$/;"	c
BillTimeTick	BillServer/TimeTick.h	/^    BillTimeTick() : zThread("TimeTick") {};$/;"	f	class:BillTimeTick
BillTimeTick	BillServer/TimeTick.h	/^class BillTimeTick : public zThread$/;"	c
BillUser	BillServer/BillUser.cpp	/^BillUser::BillUser(DWORD acc,DWORD logintemp,const char *count,const char *ip,BillTask *gate) : timestamp()$/;"	f	class:BillUser
BillUser	BillServer/BillUser.h	/^class BillUser :public zEntry $/;"	c
BillUserManager	BillServer/BillUserManager.cpp	/^BillUserManager::BillUserManager()$/;"	f	class:BillUserManager
BillUserManager	BillServer/BillUserManager.h	/^class BillUserManager :public zEntryManager< zEntryID>$/;"	c
Bill_action	BillServer/BillCallback.cpp	/^bool Bill_action(BillData *bd)$/;"	f
Bill_final	BillServer/BillCallback.cpp	/^void Bill_final()$/;"	f
Bill_init	BillServer/BillCallback.cpp	/^bool Bill_init(const std::string &confile,const std::string &tradelog,struct BillCallback *bc)$/;"	f
Bill_timeAction	BillServer/BillCallback.cpp	/^void Bill_timeAction()$/;"	f
BinaryArchiveMember	base/CharBase.h	/^struct BinaryArchiveMember$/;"	s
BinaryArchiveType	base/CharBase.h	/^enum BinaryArchiveType$/;"	g
BlessObjectItem	tmpcode/commond.h	/^struct BlessObjectItem$/;"	s
BlessSortData	tmpcode/commond.h	/^	BlessSortData()$/;"	f	struct:BlessSortData
BlessSortData	tmpcode/commond.h	/^struct BlessSortData$/;"	s
BmapBaseID	ScenesServer/SceneManager.cpp	/^std::vector<DWORD> BmapBaseID;$/;"	v
BossTraceItem	tmpcode/commond.h	/^	BossTraceItem()$/;"	f	struct:BossTraceItem
BossTraceItem	tmpcode/commond.h	/^struct BossTraceItem$/;"	s
BroadCast	base/BroadCastCommand.h	/^  namespace BroadCast$/;"	n	namespace:Cmd
BroadClient	SuperServer/BroadClient.cpp	/^BroadClient::BroadClient(const std::string &ip, const WORD port) : zTCPClientTask(ip,port,false),netType(NetType_near)$/;"	f	class:BroadClient
BroadClient	SuperServer/BroadClient.h	/^class BroadClient : public zTCPClientTask$/;"	c
BroadClientContainer	SuperServer/BroadClientManager.h	/^    typedef std::multiset<BroadClient *, lt_client> BroadClientContainer;$/;"	t	class:BroadClientManager
BroadClientManager	SuperServer/BroadClientManager.cpp	/^BroadClientManager::BroadClientManager()$/;"	f	class:BroadClientManager
BroadClientManager	SuperServer/BroadClientManager.h	/^class BroadClientManager$/;"	c
BroadServer	base/BroadCommand.h	/^  namespace BroadServer$/;"	n	namespace:Cmd
Buf	BillServer/StockConsign.h	/^    char Buf[1024];$/;"	m	class:Consign
BuildType	tmpcode/commond.h	/^		BuildType()$/;"	f	struct:stRetFinishBuildInfo::BuildType
BuildType	tmpcode/commond.h	/^	struct BuildType$/;"	s	struct:stRetFinishBuildInfo
BulletinAction	ScenesServer/QuestAction.h	/^  BulletinAction(ScenesParser& p) : TeamAction(p)$/;"	f	class:BulletinAction
BulletinAction	ScenesServer/QuestAction.h	/^class BulletinAction : public TeamAction$/;"	c
ByteBuffer	base/zSocket.h	/^class ByteBuffer$/;"	c
CALCUTE	ScenesServer/zObject.cpp	1895;"	d
CALLBACK_USERCMD	tmpcode/commond.h	/^const BYTE CALLBACK_USERCMD = 152;$/;"	v
CALLBOARD_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CALLBOARD_DATA_USERCMD_PARA = 137;$/;"	v
CALLHORSE_PET_PARA	base/Command.h	/^const BYTE CALLHORSE_PET_PARA = 8;$/;"	v
CALLHORSE_PET_PARA	tmpcode/commond.h	/^const BYTE CALLHORSE_PET_PARA = 8;$/;"	v
CALL_ALL_MEMBER_TO_CITY_BONFIRE	tmpcode/commond.h	/^const BYTE CALL_ALL_MEMBER_TO_CITY_BONFIRE      = 126;$/;"	v
CALL_DUTY_CITYDARE	tmpcode/commond.h	/^    CALL_DUTY_CITYDARE,     \/\/≥« –’˘∂·’Ω$/;"	e	enum:enmCallDutyType
CALL_DUTY_CITYFUN	tmpcode/commond.h	/^	CALL_DUTY_CITYFUN,       \/\/≥« –∏¥ªÓNPC±ªπ•ª˜$/;"	e	enum:enmCallDutyType
CALL_DUTY_CITYLORD	tmpcode/commond.h	/^    CALL_DUTY_CITYLORD,      \/\/≥« – ¬ŒÒπŸ±ªπ•ª˜’ŸºØ$/;"	e	enum:enmCallDutyType
CALL_DUTY_FRIEND	tmpcode/commond.h	/^    CALL_DUTY_FRIEND,       \/\/ ’ŸºØÕ¨√À”∂±¯Õ≈$/;"	e	enum:enmCallDutyType
CALL_DUTY_KING	base/Command.h	/^  CALL_DUTY_KING,\/\/ÂõΩÁéã$/;"	e	enum:Cmd::enmCallDutyType
CALL_DUTY_KING	tmpcode/commond.h	/^    CALL_DUTY_KING,     \/\/ ΩÁÕı(π˙Õı)$/;"	e	enum:enmCallDutyType
CALL_DUTY_KINGCALL	tmpcode/commond.h	/^    CALL_DUTY_KINGCALL,     \/\/ΩÁÕı’ŸªΩ$/;"	e	enum:enmCallDutyType
CALL_DUTY_KING_TIGER	tmpcode/commond.h	/^    CALL_DUTY_KING_TIGER,   \/\/π˙Õıª¢∑˚$/;"	e	enum:enmCallDutyType
CALL_DUTY_KING_TIGER_DEF	tmpcode/commond.h	/^    CALL_DUTY_KING_TIGER_DEF,   \/\/π˙Õıª¢∑˚$/;"	e	enum:enmCallDutyType
CALL_DUTY_MOLISKILL	tmpcode/commond.h	/^	CALL_DUTY_MOLISKILL,    \/\/ƒß¡¶’ŸªΩººƒ‹$/;"	e	enum:enmCallDutyType
CALL_DUTY_NUM	base/Command.h	/^  CALL_DUTY_NUM$/;"	e	enum:Cmd::enmCallDutyType
CALL_DUTY_NUM	tmpcode/commond.h	/^	CALL_DUTY_NUM$/;"	e	enum:enmCallDutyType
CALL_DUTY_PRIVATEGUARD	tmpcode/commond.h	/^	CALL_DUTY_PRIVATEGUARD, \/\/∏ˆ»À≥µ«Ûæ»$/;"	e	enum:enmCallDutyType
CALL_DUTY_SEPT	base/Command.h	/^  CALL_DUTY_SEPT,\/\/ÊóèÈïø$/;"	e	enum:Cmd::enmCallDutyType
CALL_DUTY_SEPT	tmpcode/commond.h	/^    CALL_DUTY_SEPT,     \/\/ ◊Â≥§ $/;"	e	enum:enmCallDutyType
CALL_DUTY_SEPTGUARD	tmpcode/commond.h	/^    CALL_DUTY_SEPTGUARD,    \/\/º“◊Â≥µ«Ûæ»$/;"	e	enum:enmCallDutyType
CALL_DUTY_SEPT_GOTO	tmpcode/commond.h	/^	CALL_DUTY_SEPT_GOTO,	\/\/º“◊Â–¸…Õ»ŒŒÒ’ŸºØ$/;"	e	enum:enmCallDutyType
CALL_DUTY_SEPT_LTT	tmpcode/commond.h	/^	CALL_DUTY_SEPT_LTT,		\/\/º“◊Â¡˙ÕºÃ⁄’˘∂·»¸$/;"	e	enum:enmCallDutyType
CALL_DUTY_SERVANT	tmpcode/commond.h	/^    CALL_DUTY_SERVANT,  \/\/ ’ŸºØ∏Ω”∂”∂±¯Õ≈$/;"	e	enum:enmCallDutyType
CALL_DUTY_SHIKONGSKILL	tmpcode/commond.h	/^	CALL_DUTY_SHIKONGSKILL, \/\/ ±ø’¥´ÀÕººƒ‹$/;"	e	enum:enmCallDutyType
CALL_DUTY_TEAM	tmpcode/commond.h	/^    CALL_DUTY_TEAM,     \/\/ √∞œ’∂”≥§$/;"	e	enum:enmCallDutyType
CALL_DUTY_TUANCAIJI	tmpcode/commond.h	/^    CALL_DUTY_TUANCAIJI, \/\/Õ≈≥§µƒÕ≈≤…ºØ’ŸºØ¡Ó$/;"	e	enum:enmCallDutyType
CALL_DUTY_UNION	base/Command.h	/^  CALL_DUTY_UNION,\/\/Â∏Æ‰∏ª$/;"	e	enum:Cmd::enmCallDutyType
CALL_DUTY_UNION	tmpcode/commond.h	/^    CALL_DUTY_UNION,    \/\/ ”∂±¯Õ≈≥§(Õ≈≥§)$/;"	e	enum:enmCallDutyType
CALL_DUTY_UNION_GOTO	tmpcode/commond.h	/^	CALL_DUTY_UNION_GOTO,	\/\/”∂±¯Õ≈’ŸºØ¡Ó, “ª∆◊ˆÕ≈»ŒŒÒ£∫Õ˛√˚‘∂—Ô$/;"	e	enum:enmCallDutyType
CALL_DUTY_ZHONGLICITY	tmpcode/commond.h	/^	CALL_DUTY_ZHONGLICITY, \/\/÷–¡¢≥«Õ≈≥§’ŸºØ$/;"	e	enum:enmCallDutyType
CALL_PET_REGION	ScenesServer/SceneUser.h	/^    static const DWORD CALL_PET_REGION = 6;$/;"	m	struct:SceneUser
CALL_SERVANR_HOME_PARA	tmpcode/commond.h	/^const BYTE CALL_SERVANR_HOME_PARA				= 68;$/;"	v
CALL_TUDI_MAP_SCREEN_USERCMD	tmpcode/commond.h	/^const BYTE CALL_TUDI_MAP_SCREEN_USERCMD = 14;$/;"	v
CANCEL_AUTO_BATT_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CANCEL_AUTO_BATT_MAPSCREEN_USERCMD_PARA = 93;$/;"	v
CANCEL_BET_CHALLENGE_USERCMD_PARAMETER	tmpcode/commond.h	22146;"	d
CANCEL_BREAKING_COUNTRY_ALLY	tmpcode/commond.h	/^	CANCEL_BREAKING_COUNTRY_ALLY = 9, \/\/ »°œ˚∂œΩª, Clt->Svr->Clt$/;"	e	enum:CountryAllyActionEnum
CANCEL_CATCHER_PARA	base/Command.h	5346;"	d
CANCEL_CITY_CATCHER_PARA	base/Command.h	4736;"	d
CANCEL_CONSCRIBE_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE CANCEL_CONSCRIBE_HOUSE_USER_CMD = 61;$/;"	v
CANCEL_COUNTRY_ALLY_PARA	base/Command.h	9040;"	d
CANCEL_COUNTRY_PARA	base/Command.h	/^const BYTE CANCEL_COUNTRY_PARA = 10;$/;"	v
CANCEL_COUNTRY_TRANS_QUEST_USER_CMD	tmpcode/commond.h	/^const BYTE CANCEL_COUNTRY_TRANS_QUEST_USER_CMD    = 55;   $/;"	v
CANCEL_DECAY_LINGQI_PARA	tmpcode/commond.h	/^const BYTE CANCEL_DECAY_LINGQI_PARA = 5;$/;"	v
CANCEL_DIPLOMAT_PARA	base/Command.h	5369;"	d
CANCEL_GEMSTATE_SCENE_PARA	base/SessionCommand.h	/^    const BYTE CANCEL_GEMSTATE_SCENE_PARA = 6;$/;"	v
CANCEL_ISSUED_QUEST_PARA	tmpcode/commond.h	/^static const BYTE CANCEL_ISSUED_QUEST_PARA = 42;  $/;"	v
CANCEL_LIFEGUARD_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CANCEL_LIFEGUARD_USERCMD_PARA = 33;$/;"	v
CANCEL_NUMPASSWD_PARA	tmpcode/commond.h	29010;"	d
CANCEL_PENDING_COUNTRY_ALLY	tmpcode/commond.h	/^	CANCEL_PENDING_COUNTRY_ALLY = 8,  \/\/ »°œ˚Ω·√Àµ»¥˝, Clt->Svr->Clt$/;"	e	enum:CountryAllyActionEnum
CANCEL_PLACE_SET	tmpcode/commond.h	/^const BYTE CANCEL_PLACE_SET = 61;$/;"	v
CANCEL_POSITION_SET	tmpcode/commond.h	/^const BYTE CANCEL_POSITION_SET = 88;$/;"	v
CANCEL_RANDOM_QUEST_PARA	tmpcode/commond.h	/^const BYTE CANCEL_RANDOM_QUEST_PARA = 9;$/;"	v
CANCEL_REG_SEPT_POPO_PARA	tmpcode/commond.h	26422;"	d
CANCEL_RENMAHEYI_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CANCEL_RENMAHEYI_MAGIC_USERCMD_PARA = 29;$/;"	v
CANCEL_SALE_AUCTION_PARA	base/Command.h	/^const BYTE CANCEL_SALE_AUCTION_PARA = 6;$/;"	v
CANCEL_SALE_AUCTION_PARA	tmpcode/commond.h	/^const BYTE CANCEL_SALE_AUCTION_PARA = 6;$/;"	v
CANCEL_TECH_SEARCH_PARA	base/Command.h	5239;"	d
CANCEL_TRADE_USERCMD_PARAMETER	base/Command.h	3896;"	d
CANCEL_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE CANCEL_TRADE_USERCMD_PARAMETER = 6;$/;"	v
CANCEL_UNION_ALLY_PARA	tmpcode/commond.h	13402;"	d
CANCEL_UP_UNION_BUILD	tmpcode/commond.h	/^const BYTE CANCEL_UP_UNION_BUILD = 51;$/;"	v
CANNON_COOLTIME_PARA	tmpcode/commond.h	/^const BYTE CANNON_COOLTIME_PARA = 42;$/;"	v
CANOT_PRODUCE_PRO	tmpcode/commond.h	/^	CANOT_PRODUCE_PRO       \/\/≤ªƒ‹…˙≤˙$/;"	e	enum:__anon272
CANSET_UNION_CITY_TAX	tmpcode/commond.h	/^const BYTE CANSET_UNION_CITY_TAX = 106;$/;"	v
CAN_PRODUCE_PRO	tmpcode/commond.h	/^	CAN_PRODUCE_PRO,        \/\/ø…“‘…˙≤˙$/;"	e	enum:__anon272
CAN_SELL_USERCMD_PARAMETER	base/Command.h	4105;"	d
CAN_SELL_USERCMD_PARAMETER	tmpcode/commond.h	12221;"	d
CAN_SETFREE_BOSS_PARA	tmpcode/commond.h	/^const BYTE CAN_SETFREE_BOSS_PARA = 3;$/;"	v
CARDCELLTYPE_COMMON	base/Command.h	/^  CARDCELLTYPE_COMMON,	    \/\/÷˜’Ω≥°$/;"	e	enum:Cmd::__anon144
CARDCELLTYPE_EQUIP	base/Command.h	/^  CARDCELLTYPE_EQUIP,	    \/\/Œ‰∆˜≤€Œª÷√$/;"	e	enum:Cmd::__anon144
CARDCELLTYPE_HAND	base/Command.h	/^  CARDCELLTYPE_HAND,	    \/\/ ÷≈∆Œª÷√$/;"	e	enum:Cmd::__anon144
CARDCELLTYPE_HERO	base/Command.h	/^  CARDCELLTYPE_HERO,	    \/\/”¢–€≤€Œª÷√$/;"	e	enum:Cmd::__anon144
CARDCELLTYPE_NONE	base/Command.h	/^  CARDCELLTYPE_NONE,\/\/\/ ‰∏çÊòØÊ†ºÂ≠êÔºåÁî®‰∫é‰∏¢ÂºÉÊàñÊç°Âà∞Áâ©ÂìÅ$/;"	e	enum:Cmd::__anon144
CARDCELLTYPE_RECORD	base/Command.h	/^  CARDCELLTYPE_RECORD,	    \/\/º«¬º≤€Œª÷√$/;"	e	enum:Cmd::__anon144
CARDCELLTYPE_SKILL	base/Command.h	/^  CARDCELLTYPE_SKILL,	    \/\/ººƒ‹≤€Œª÷√$/;"	e	enum:Cmd::__anon144
CARDID_LENGTH	base/UserCommand.h	/^    const int CARDID_LENGTH = 32;$/;"	v
CARDID_LENGTH_PARA	base/Command.h	7300;"	d
CARDID_LENGTH_PARA	tmpcode/commond.h	20214;"	d
CARDTYPE_ATTEND	base/Command.h	/^    CARDTYPE_ATTEND,	\/\/ÀÊ¥”$/;"	e	enum:Cmd::__anon145
CARDTYPE_EQUIP	base/Command.h	/^    CARDTYPE_EQUIP,	\/\/Œ‰∆˜ø®$/;"	e	enum:Cmd::__anon145
CARDTYPE_HERO	base/Command.h	/^    CARDTYPE_HERO,	\/\/”¢–€ø®$/;"	e	enum:Cmd::__anon145
CARDTYPE_MAGIC	base/Command.h	/^    CARDTYPE_MAGIC,	\/\/∑® ıø®$/;"	e	enum:Cmd::__anon145
CARDTYPE_NONE	base/Command.h	/^    CARDTYPE_NONE,$/;"	e	enum:Cmd::__anon145
CARDTYPE_SECRET	base/Command.h	/^    CARDTYPE_SECRET,	\/\/∞¬√ÿø®$/;"	e	enum:Cmd::__anon145
CARDTYPE_SKILL	base/Command.h	/^    CARDTYPE_SKILL,	\/\/”¢–€ººƒ‹ø®$/;"	e	enum:Cmd::__anon145
CARD_DATA_ADD	base/Command.h	/^    CARD_DATA_ADD	= 1,	\/\/ÃÌº”$/;"	e	enum:Cmd::__anon147
CARD_DATA_NONE	base/Command.h	/^    CARD_DATA_NONE,$/;"	e	enum:Cmd::__anon147
CARD_DATA_REFRESH	base/Command.h	/^    CARD_DATA_REFRESH	= 2,	\/\/À¢–¬$/;"	e	enum:Cmd::__anon147
CARD_STATE_CHARGE	base/Card.h	/^    CARD_STATE_CHARGE   = 2,    \/\/≥Â∑Ê$/;"	e	enum:__anon46
CARD_STATE_FREEZE	base/Card.h	/^    CARD_STATE_FREEZE   = 7,    \/\/∂≥Ω·$/;"	e	enum:__anon46
CARD_STATE_MAX	base/Card.h	/^    CARD_STATE_MAX,$/;"	e	enum:__anon46
CARD_STATE_NONE	base/Card.h	/^    CARD_STATE_NONE    = 0,    \/\/ø’◊¥Ã¨$/;"	e	enum:__anon46
CARD_STATE_SHIED	base/Card.h	/^    CARD_STATE_SHIED    = 5,    \/\/ •∂‹$/;"	e	enum:__anon46
CARD_STATE_SLEEP	base/Card.h	/^    CARD_STATE_SLEEP    = 6,    \/\/ÀØ$/;"	e	enum:__anon46
CARD_STATE_SNEAK	base/Card.h	/^    CARD_STATE_SNEAK    = 4,    \/\/“˛–Œ$/;"	e	enum:__anon46
CARD_STATE_TAUNT	base/Card.h	/^    CARD_STATE_TAUNT    = 1,    \/\/≥∞∑Ì$/;"	e	enum:__anon46
CARD_STATE_WINDFURY	base/Card.h	/^    CARD_STATE_WINDFURY = 3,    \/\/∑Á≈≠$/;"	e	enum:__anon46
CARTOON_STATE_ADOPTED	base/Command.h	/^  CARTOON_STATE_ADOPTED  \/\/Ë¢´È¢ÜÂÖª$/;"	e	enum:Cmd::cartoonState
CARTOON_STATE_FOLLOW	base/Command.h	/^  CARTOON_STATE_FOLLOW,\/\/Ë∑üÈöè‰∏ª‰∫∫$/;"	e	enum:Cmd::cartoonState
CARTOON_STATE_PUTAWAY	base/Command.h	/^  CARTOON_STATE_PUTAWAY,\/\/Êî∂Ëµ∑$/;"	e	enum:Cmd::cartoonState
CARTOON_STATE_WAITING	base/Command.h	/^  CARTOON_STATE_WAITING,\/\/Á≠âÂæÖÈ¢ÜÂÖª$/;"	e	enum:Cmd::cartoonState
CARTOON_USERCMD	base/CmdType.h	/^const BYTE CARTOON_USERCMD    = 37;$/;"	v
CART_CONTROL_QUEST_PARA	base/Command.h	/^static const BYTE CART_CONTROL_QUEST_PARA = 5;\/\/ÊéßÂà∂ÈïñËΩ¶Ëµ∞ÂíåÂÅú$/;"	v
CATCH_EGG_USERCMD	tmpcode/commond.h	/^const BYTE CATCH_EGG_USERCMD = 117;$/;"	v
CCCCCCC	base/Command.h	/^  BYTE CCCCCCC;$/;"	m	struct:Cmd::t_UserData
CCKT_BAD	tmpcode/commond.h	/^	CCKT_BAD,  \/\/ ƒßÕ∑$/;"	e	enum:CrusadeCastleKillTitle
CCKT_ILLEGAL	tmpcode/commond.h	/^	CCKT_ILLEGAL = 0,$/;"	e	enum:CrusadeCastleKillTitle
CCKT_MAX	tmpcode/commond.h	/^	CCKT_MAX$/;"	e	enum:CrusadeCastleKillTitle
CCKT_NONE	tmpcode/commond.h	/^	CCKT_NONE,  \/\/ Œﬁ$/;"	e	enum:CrusadeCastleKillTitle
CCKT_WORSE	tmpcode/commond.h	/^	CCKT_WORSE,  \/\/ ∂Òƒß$/;"	e	enum:CrusadeCastleKillTitle
CCKT_WORST	tmpcode/commond.h	/^	CCKT_WORST,  \/\/ ¥Û∂Òƒß$/;"	e	enum:CrusadeCastleKillTitle
CCPT_BIG_LANDLORD	tmpcode/commond.h	/^	CCPT_BIG_LANDLORD,  \/\/ ¥Ûµÿ÷˜$/;"	e	enum:CrusadeCastlePointTitle
CCPT_BIG_RICH_MAN	tmpcode/commond.h	/^	CCPT_BIG_RICH_MAN,  \/\/ ¥Û≤∆÷˜$/;"	e	enum:CrusadeCastlePointTitle
CCPT_COMMON	tmpcode/commond.h	/^	CCPT_COMMON,  \/\/ ∆Ω√Ò$/;"	e	enum:CrusadeCastlePointTitle
CCPT_ILLEGAL	tmpcode/commond.h	/^	CCPT_ILLEGAL = 0,$/;"	e	enum:CrusadeCastlePointTitle
CCPT_LANDLORD	tmpcode/commond.h	/^	CCPT_LANDLORD,  \/\/ µÿ÷˜$/;"	e	enum:CrusadeCastlePointTitle
CCPT_MAX	tmpcode/commond.h	/^	CCPT_MAX$/;"	e	enum:CrusadeCastlePointTitle
CCPT_RICH_MAN	tmpcode/commond.h	/^	CCPT_RICH_MAN,  \/\/ ≤∆÷˜$/;"	e	enum:CrusadeCastlePointTitle
CCPT_THE_RICHEST	tmpcode/commond.h	/^	CCPT_THE_RICHEST,  \/\/ æﬁ∫¿$/;"	e	enum:CrusadeCastlePointTitle
CEncrypt	base/EncDec/EncDec.cpp	/^CEncrypt::CEncrypt()$/;"	f	class:CEncrypt
CEncrypt	base/EncDec/EncDec.h	/^class CEncrypt$/;"	c
CGraceUser	SessionServer/SessionManager.cpp	/^    CGraceUser()$/;"	f	class:CGraceUser
CGraceUser	SessionServer/SessionManager.cpp	/^    CGraceUser(const CGraceUser& ref)$/;"	f	class:CGraceUser
CGraceUser	SessionServer/SessionManager.cpp	/^class CGraceUser$/;"	c
CHALLENGE_GAME_BOSS_TYPE	base/SessionCommand.h	/^	CHALLENGE_GAME_BOSS_TYPE	    = 6,	\/\/PVE BOSSƒ£ Ω$/;"	e	enum:Cmd::Session::ChallengeGameType
CHALLENGE_GAME_COMPETITIVE_TYPE	base/SessionCommand.h	/^	CHALLENGE_GAME_COMPETITIVE_TYPE	    = 3,	\/\/PVP æ∫ºº∂‘’Ω$/;"	e	enum:Cmd::Session::ChallengeGameType
CHALLENGE_GAME_FRIEND_TYPE	base/SessionCommand.h	/^	CHALLENGE_GAME_FRIEND_TYPE	    = 4,	\/\/PVP ∫√”—∂‘’Ω$/;"	e	enum:Cmd::Session::ChallengeGameType
CHALLENGE_GAME_PRACTISE_TYPE	base/SessionCommand.h	/^	CHALLENGE_GAME_PRACTISE_TYPE	    = 5,	\/\/PVE ∆’Õ®¡∑œ∞$/;"	e	enum:Cmd::Session::ChallengeGameType
CHALLENGE_GAME_RANKING_TYPE	base/SessionCommand.h	/^	CHALLENGE_GAME_RANKING_TYPE	    = 2,	\/\/PVP ≈≈√˚∂‘’Ω$/;"	e	enum:Cmd::Session::ChallengeGameType
CHALLENGE_GAME_RELAX_TYPE	base/SessionCommand.h	/^	CHALLENGE_GAME_RELAX_TYPE	    = 1,	\/\/PVP –›œ–∂‘’Ω$/;"	e	enum:Cmd::Session::ChallengeGameType
CHALLENGE_GAME_USERCMD	tmpcode/commond.h	/^const BYTE CHALLENGE_GAME_USERCMD     = 133;$/;"	v
CHALLENGE_RESULT_PARA	tmpcode/commond.h	/^const BYTE CHALLENGE_RESULT_PARA = 26;$/;"	v
CHALLENGE_STATE_BATTLE	ScenesServer/ChallengeGameManager.h	/^    CHALLENGE_STATE_BATTLE	= 2,	\/\/’Ω∂∑÷–$/;"	e	enum:ChallengeState
CHALLENGE_STATE_CANCLEAR	ScenesServer/ChallengeGameManager.h	/^    CHALLENGE_STATE_CANCLEAR	= 4,	\/\/ø…“‘–∂‘ÿ◊¥Ã¨$/;"	e	enum:ChallengeState
CHALLENGE_STATE_END	ScenesServer/ChallengeGameManager.h	/^    CHALLENGE_STATE_END		= 3,	\/\/”Œœ∑Ω· ¯$/;"	e	enum:ChallengeState
CHALLENGE_STATE_NONE	ScenesServer/ChallengeGameManager.h	/^    CHALLENGE_STATE_NONE	= 0,	\/\/”Œœ∑∏’∏’¥¥Ω®(ªπŒ¥ÃÓ≥‰À´∑Ω ˝æ›)$/;"	e	enum:ChallengeState
CHALLENGE_STATE_PREPARE	ScenesServer/ChallengeGameManager.h	/^    CHALLENGE_STATE_PREPARE	= 1,	\/\/◊º±∏Ω◊∂Œ(¥À ±ø…“‘ÃÊªªµ⁄“ª∞—µƒ ÷≈∆)$/;"	e	enum:ChallengeState
CHALLENGE_TIMES	tmpcode/commond.h	/^        CHALLENGE_TIMES = 6,    \/\/ΩÒÃÏÃÙ’Ω¥Œ ˝$/;"	e	enum:DRAGON_DATA_TYPE
CHALLENGE_TYPE_PERSON	tmpcode/commond.h	/^	CHALLENGE_TYPE_PERSON = 1,$/;"	e	enum:ChallengeType
CHALLENGE_TYPE_SEPT_PRACTICE	tmpcode/commond.h	/^	CHALLENGE_TYPE_SEPT_PRACTICE = 2,$/;"	e	enum:ChallengeType
CHALLENGE_TYPE_UNION	tmpcode/commond.h	/^	CHALLENGE_TYPE_UNION = 3    $/;"	e	enum:ChallengeType
CHALLENGE_WIN_TIMES	tmpcode/commond.h	/^		CHALLENGE_WIN_TIMES = 9, \/\/ΩÒÃÏÃÙ’Ω §¿˚¥Œ ˝$/;"	e	enum:DRAGON_DATA_TYPE
CHANGECODE	base/SceneCommand.h	/^      CHANGECODE,$/;"	e	enum:Cmd::Scene::ChangeVerifyVersionOper
CHANGEFACE_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE CHANGEFACE_MAPSCREEN_USERCMD_PARA = 32;$/;"	v
CHANGEMASTER_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE CHANGEMASTER_QUESTROOM_PARA = 15;$/;"	v
CHANGEMEM_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE CHANGEMEM_QUESTROOM_PARA = 17;$/;"	v
CHANGENAME_CARTOON_PARA	base/Command.h	8256;"	d
CHANGENAME_PET_PARA	base/Command.h	/^const BYTE CHANGENAME_PET_PARA = 4;$/;"	v
CHANGETO_SINGLEATTACK_SUMMON_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CHANGETO_SINGLEATTACK_SUMMON_USERCMD_PARA = 60;$/;"	v
CHANGEUSERJOB_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	22983;"	d
CHANGEZONE_CHANGED	base/CharBase.h	/^    CHANGEZONE_CHANGED,		\/\/“—◊™$/;"	e	enum:__anon16
CHANGEZONE_FOREVER	base/CharBase.h	/^    CHANGEZONE_FOREVER,		\/\/”¿æ√◊™«¯(Ω¯»Î∏√◊¥Ã¨∫Û,’‚∏ˆ◊÷∂ŒΩ´≤ªª·‘Ÿ±ª–ﬁ∏ƒ)$/;"	e	enum:__anon16
CHANGEZONE_NONE	base/CharBase.h	/^    CHANGEZONE_NONE,		\/\/Œ¥◊™$/;"	e	enum:__anon16
CHANGEZONE_RETURNED	base/CharBase.h	/^    CHANGEZONE_RETURNED,	\/\/“—ªÿ¥´$/;"	e	enum:__anon16
CHANGEZONE_TARGETZONE	base/CharBase.h	/^    CHANGEZONE_TARGETZONE,	\/\/’Ω«¯ø…µ«¬Ω$/;"	e	enum:__anon16
CHANGE_ALIAS	base/Command.h	/^  CHANGE_ALIAS,      \/\/ ÊîπÂèòÁß∞Âè∑$/;"	e	enum:Cmd::UNIONPOWER
CHANGE_ALIAS	tmpcode/commond.h	/^	CHANGE_ALIAS,              \/\/ ∏ƒ±‰≥∆∫≈$/;"	e	enum:UNIONPOWER
CHANGE_ARMY_NAME_PARA	base/Command.h	5751;"	d
CHANGE_CHUANCHENG_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CHANGE_CHUANCHENG_USERCMD_PARA = 190;$/;"	v
CHANGE_COLOR_LTQ_PARA	tmpcode/commond.h	24619;"	d
CHANGE_COUNTRY_PARA	base/Command.h	/^const BYTE CHANGE_COUNTRY_PARA = 1;$/;"	v
CHANGE_COUNTRY_PARA	tmpcode/commond.h	/^const BYTE CHANGE_COUNTRY_PARA = 1;$/;"	v
CHANGE_COUNTRY_STAR_PARA	base/Command.h	/^const BYTE CHANGE_COUNTRY_STAR_PARA = 3;$/;"	v
CHANGE_DAY	base/CharBase.h	/^    CHANGE_DAY	    = 1,$/;"	e	enum:ChangeType
CHANGE_ELEC_COLOR_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  CHANGE_ELEC_COLOR_USERCMD_PARA = 235;$/;"	v
CHANGE_FACE_LTQ_PARA	tmpcode/commond.h	24603;"	d
CHANGE_GEMSTATE_SCENE_PARA	base/SessionCommand.h	/^    const BYTE CHANGE_GEMSTATE_SCENE_PARA = 5;$/;"	v
CHANGE_HAIR_FACE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	26621;"	d
CHANGE_HORSE_NAME_PARA	tmpcode/commond.h	/^const BYTE CHANGE_HORSE_NAME_PARA = 15;$/;"	v
CHANGE_LINGQI_TO_OBJ_LINGQI_PARA	tmpcode/commond.h	20859;"	d
CHANGE_MONTH	base/CharBase.h	/^    CHANGE_MONTH    = 3,$/;"	e	enum:ChangeType
CHANGE_NAME_DRAGON_PARA	tmpcode/commond.h	/^const BYTE CHANGE_NAME_DRAGON_PARA = 15;$/;"	v
CHANGE_NAME_LINGQI_PARA	tmpcode/commond.h	20705;"	d
CHANGE_NONE	base/CharBase.h	/^    CHANGE_NONE	    = 0,$/;"	e	enum:ChangeType
CHANGE_SCENE_WRITEBACK	base/RecordCommand.h	/^      CHANGE_SCENE_WRITEBACK,\/\/ÂàáÊç¢Âú∫ÊôØÊó∂ÂõûÂÜôÊ°£Ê°à$/;"	e	enum:Cmd::Record::WriteBack_Type
CHANGE_SEPT_MASTER	tmpcode/commond.h	/^const BYTE CHANGE_SEPT_MASTER = 72;$/;"	v
CHANGE_SEPT_MEMBER_ALIASNAME_PARA	base/Command.h	/^const BYTE CHANGE_SEPT_MEMBER_ALIASNAME_PARA = 16;$/;"	v
CHANGE_SEPT_STORE_MODE_CMD	tmpcode/commond.h	/^const BYTE CHANGE_SEPT_STORE_MODE_CMD = 147;$/;"	v
CHANGE_SERVER	tmpcode/commond.h	/^	CHANGE_SERVER = 1,$/;"	e	enum:__anon259
CHANGE_SKILL_BOOK_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CHANGE_SKILL_BOOK_USERCMD_PARA = 199;$/;"	v
CHANGE_SUIT_PROPERTY_USERCMD_PARA	tmpcode/commond.h	17769;"	d
CHANGE_TRAVEL	base/BattleUserCmd.h	/^	CHANGE_TRAVEL, \/\/¬√”Œ◊™«¯$/;"	e	enum:Cmd::__anon12
CHANGE_UNION_MEMBER_ALIASNAME_PARA	base/Command.h	/^const BYTE CHANGE_UNION_MEMBER_ALIASNAME_PARA = 16;$/;"	v
CHANGE_UNION_RESOURCE_TYPE	tmpcode/commond.h	/^const BYTE CHANGE_UNION_RESOURCE_TYPE = 174;$/;"	v
CHANGE_WEEK	base/CharBase.h	/^    CHANGE_WEEK	    = 2,$/;"	e	enum:ChangeType
CHANGE_ZONE	base/BattleUserCmd.h	/^	CHANGE_ZONE,	\/\/«Î«Û”¿æ√◊™«¯$/;"	e	enum:Cmd::__anon13
CHANGE_ZONE_TRAVEL	base/BattleUserCmd.h	/^	CHANGE_ZONE_TRAVEL, \/\/«Î«Û◊™«¯¬√”Œ$/;"	e	enum:Cmd::__anon13
CHANGE_ZONE_VERIFY_PARA	base/BattleUserCmd.h	/^    const BYTE CHANGE_ZONE_VERIFY_PARA = 5;$/;"	v
CHANNEL_COUNTRY	tmpcode/commond.h	/^	CHANNEL_COUNTRY = 1,$/;"	e	enum:YuYinChannel
CHANNEL_SEPT	tmpcode/commond.h	/^	CHANNEL_SEPT = 3,$/;"	e	enum:YuYinChannel
CHANNEL_UNION	tmpcode/commond.h	/^	CHANNEL_UNION = 2,$/;"	e	enum:YuYinChannel
CHARBASE_DITAO	base/Command.h	2160;"	d
CHARBASE_EXP125	base/Command.h	2157;"	d
CHARBASE_EXP150	base/Command.h	2158;"	d
CHARBASE_EXP175	base/Command.h	2159;"	d
CHARBASE_FORBID	base/Command.h	2155;"	d
CHARBASE_OK	base/Command.h	2154;"	d
CHARBASE_SHENTAO	base/Command.h	2162;"	d
CHARBASE_TIANTAO	base/Command.h	2161;"	d
CHARBASE_VIP	base/Command.h	2156;"	d
CHARGE_ACCELCMD_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CHARGE_ACCELCMD_PROPERTY_USERCMD_PARA = 146;$/;"	v
CHARGE_CARTOON_PARA	base/Command.h	8322;"	d
CHASE_ATTACK	ScenesServer/SceneNpc.h	/^    CHASE_ATTACK,   \/\/\/ Ë∑üË∏™ÊîªÂáªÁä∂ÊÄÅ$/;"	e	enum:SceneNpc::SceneNpcChase
CHASE_NOATTACK	ScenesServer/SceneNpc.h	/^    CHASE_NOATTACK    \/\/\/ ÊôÆÈÄöË∑üË∏™Áä∂ÊÄÅ$/;"	e	enum:SceneNpc::SceneNpcChase
CHASE_NONE	ScenesServer/SceneNpc.h	/^    CHASE_NONE,     \/\/\/ Ê≤°ÊúâË∑üË∏™Áä∂ÊÄÅ$/;"	e	enum:SceneNpc::SceneNpcChase
CHAT_GMTOOL_PARA	base/Command.h	/^const BYTE CHAT_GMTOOL_PARA = 1;$/;"	v
CHAT_GM_CANCEL_USER_PARA	tmpcode/commond.h	22855;"	d
CHAT_GM_USER_PARA	tmpcode/commond.h	22841;"	d
CHAT_TYPE_AREA	base/Command.h	/^  CHAT_TYPE_AREA,\/\/\/Âå∫ÂüüÈ¢ëÈÅì$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_AUTO	base/Command.h	/^  CHAT_TYPE_AUTO,\/\/\/ Ëá™Âä®ÂõûÂ§ç$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_BLESS_MSG	base/Command.h	/^  CHAT_TYPE_BLESS_MSG,\/\/\/ ‰∏™‰∫∫Á•ùÁ¶èÊ∂àÊÅØ$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_COUNTRY	base/Command.h	/^  CHAT_TYPE_COUNTRY=12,      \/\/\/ ÂõΩÂÆ∂È¢ëÈÅì$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_COUNTRY_MARRY	base/Command.h	/^  CHAT_TYPE_COUNTRY_MARRY,\/\/\/ ÁªìÂ©öÊ∂àÊÅØÂπøÊí≠$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_COUNTRY_PK	base/Command.h	/^  CHAT_TYPE_COUNTRY_PK,\/\/\/ Â§ñÂõΩ‰∫∫ÂÖ•‰æµPKÊ∂àÊÅØ$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_EMOTION	base/Command.h	/^  CHAT_TYPE_EMOTION,\/\/\/Ë°®ÊÉÖ$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_ERROR_GM	base/Command.h	/^  CHAT_TYPE_ERROR_GM,\/\/\/ÂèëÈÄÅÂà∞GMÂ∑•ÂÖ∑ÁöÑË≠¶Âëä‰ø°ÊÅØ$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_FAMILY	base/Command.h	/^  CHAT_TYPE_FAMILY,       \/\/\/ ÂÆ∂ÊóèÈ¢ëÈÅì$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_FAMILY_AFFICHE	base/Command.h	/^  CHAT_TYPE_FAMILY_AFFICHE,\/\/\/ ÂÆ∂ÊóèÂÖ¨Âëä$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_FAMILY_PRIVATE	base/Command.h	/^  CHAT_TYPE_FAMILY_PRIVATE,\/\/\/ ÂÆ∂ÊóèÁßÅËÅä$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_FRIEND	base/Command.h	/^  CHAT_TYPE_FRIEND,       \/\/\/ Â•ΩÂèãÈ¢ëÈÅì$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_FRIEND_AFFICHE	base/Command.h	/^  CHAT_TYPE_FRIEND_AFFICHE,\/\/\/ Â•ΩÂèãÂÖ¨Âëä$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_FRIEND_PRIVATE	base/Command.h	/^  CHAT_TYPE_FRIEND_PRIVATE,\/\/\/ Â•ΩÂèãÁßÅËÅä$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_GM	base/Command.h	/^  CHAT_TYPE_GM,           \/\/\/ GMËÅäÈ¢ëÈÅì$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_MINIGAME	base/Command.h	/^  CHAT_TYPE_MINIGAME  \/\/\/ Áé©Â∞èÊ∏∏ÊàèËÅäÂ§©$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_NINE	base/Command.h	/^  CHAT_TYPE_NINE=2,\/\/\/ ËΩªËÅäÈ¢ëÈÅì$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_NPC	base/Command.h	/^  CHAT_TYPE_NPC,\/\/\/npcËØ¥ËØù$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_OVERMAN	base/Command.h	/^  CHAT_TYPE_OVERMAN,\/\/\/ Â∏àÈó®È¢ëÈÅì$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_OVERMAN_AFFICHE	base/Command.h	/^  CHAT_TYPE_OVERMAN_AFFICHE,\/\/\/ Â∏àÈó®ÂÖ¨Âëä$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_OVERMAN_PRIVATE	base/Command.h	/^  CHAT_TYPE_OVERMAN_PRIVATE,\/\/\/ Â∏àÈó®ÁßÅËÅä$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_PERSON	base/Command.h	/^  CHAT_TYPE_PERSON,       \/\/\/ ‰∏™‰∫∫È¢ëÈÅì$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_POP	base/Command.h	/^  CHAT_TYPE_POP,          \/\/\/ ÂºπÂá∫ÂºèÁ≥ªÁªüÊèêÁ§∫$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_PRIVATE	base/Command.h	/^  CHAT_TYPE_PRIVATE  = 1,\/\/\/ ÁßÅËÅäÈ¢ëÈÅì$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_SHOPADV	base/Command.h	/^  CHAT_TYPE_SHOPADV,\/\/\/ÊëÜÊëäÂπøÂëä$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_SYSTEM	base/Command.h	/^  CHAT_TYPE_SYSTEM,       \/\/\/ Á≥ªÁªüÈ¢ëÈÅì$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_TEAM	base/Command.h	/^  CHAT_TYPE_TEAM,         \/\/\/ Èòü‰ºçÈ¢ëÈÅì$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_UNION	base/Command.h	/^  CHAT_TYPE_UNION,        \/\/\/ Â∏Æ‰ºöÈ¢ëÈÅì$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_UNION_AFFICHE	base/Command.h	/^  CHAT_TYPE_UNION_AFFICHE,\/\/\/ Â∏Æ‰ºöÂÖ¨Âëä$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_UNION_PRIVATE	base/Command.h	/^  CHAT_TYPE_UNION_PRIVATE,\/\/\/ Â∏Æ‰ºöÁßÅËÅä$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_WHISPER	base/Command.h	/^  CHAT_TYPE_WHISPER,      \/\/\/ÊÇÑÊÇÑËØù$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_WHISPERTOME	base/Command.h	/^  CHAT_TYPE_WHISPERTOME,\/\/\/ÊÇÑÊÇÑËØù$/;"	e	enum:Cmd::enumChatType
CHAT_TYPE_WORLD	base/Command.h	/^  CHAT_TYPE_WORLD,\/\/\/‰∏ñÁïåÈ¢ëÈÅì$/;"	e	enum:Cmd::enumChatType
CHAT_USERCMD	base/CmdType.h	/^const BYTE CHAT_USERCMD      = 14;$/;"	v
CHAT_USERCMD	tmpcode/commond.h	/^const BYTE CHAT_USERCMD           =14;$/;"	v
CHAT_USERCMD_PARAMETER	base/Command.h	3409;"	d
CHECK	GatewayServer/CmdChecker.h	/^	typedef std::map< int,ICmdChecker<int>* > CHECK;$/;"	t	class:CheckerTable
CHECKEXCHANGE_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	5324;"	d
CHECKMONEY_ZYZ	tmpcode/commond.h	/^const BYTE CHECKMONEY_ZYZ = 1;$/;"	v
CHECKNAME_SELECT_USERCMD_PARA	base/Command.h	/^const BYTE CHECKNAME_SELECT_USERCMD_PARA = 5;$/;"	v
CHECKNAME_SELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CHECKNAME_SELECT_USERCMD_PARA = 5;$/;"	v
CHECKREG	tmpcode/commond.h	/^const BYTE CHECKREG = 8;$/;"	v
CHECK_COUNTRY_COUNT_SELECT_USERCMD_PARA	base/Command.h	/^const BYTE CHECK_COUNTRY_COUNT_SELECT_USERCMD_PARA = 13;$/;"	v
CHECK_COUTNRY_COUNT_SELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CHECK_COUTNRY_COUNT_SELECT_USERCMD_PARA = 13;$/;"	v
CHECK_CURR_PTR	base/zSocket.h	36;"	d
CHECK_GMTOOL_PARA	tmpcode/commond.h	/^const BYTE CHECK_GMTOOL_PARA = 4;$/;"	v
CHECK_OUT	ScenesServer/SceneUser.cpp	2874;"	d
CHECK_REBUILD_TANK_PARA	tmpcode/commond.h	/^const BYTE CHECK_REBUILD_TANK_PARA = 32;$/;"	v
CHECK_REBUILD_UNIONTANK_PARA	tmpcode/commond.h	/^const BYTE CHECK_REBUILD_UNIONTANK_PARA = 43;$/;"	v
CHECK_UP_LINGQI_PARA	tmpcode/commond.h	20682;"	d
CHECK_VALID_QUEST_PARA	base/Command.h	/^static const BYTE CHECK_VALID_QUEST_PARA = 6;\/\/Ê£ÄÊü•ÂèØ‰ª•Êé•ÁöÑ‰ªªÂä°ÂàóË°®$/;"	v
CHECK_VALID_QUEST_PARA	tmpcode/commond.h	/^static const BYTE CHECK_VALID_QUEST_PARA = 6;\/\/ºÏ≤Èø…“‘Ω”µƒ»ŒŒÒ¡–±Ì$/;"	v
CHOOSE_SUCCESS	tmpcode/commond.h	/^        CHOOSE_SUCCESS, \/\/≥…π¶$/;"	e	enum:__anon343
CHUANCHENG_USEDNUM_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE CHUANCHENG_USEDNUM_PROPERTY_USERCMD_PARAMETER = 205;$/;"	v
CHUANG_SONG_DI_SHANG	tmpcode/commond.h	/^const WORD CHUANG_SONG_DI_SHANG = 24952;\/\/¥´ÀÕµÿ…œ$/;"	v
CHUANG_SONG_JUAN_CHOU	tmpcode/commond.h	/^const WORD CHUANG_SONG_JUAN_CHOU = 24951;\/\/¥´ÀÕ’Û$/;"	v
CHUAN_SONG_SHUI_JING	tmpcode/commond.h	/^const WORD CHUAN_SONG_SHUI_JING = 24953;\/\/¥´ÀÕÀÆæß$/;"	v
CHUNYUNITEM	tmpcode/commond.h	/^        CHUNYUNITEM()$/;"	f	struct:CHUNYUNITEM
CHUNYUNITEM	tmpcode/commond.h	/^        CHUNYUNITEM(const CHUNYUNITEM& item)$/;"	f	struct:CHUNYUNITEM
CHUNYUNITEM	tmpcode/commond.h	/^struct CHUNYUNITEM$/;"	s
CITYDARESCENE_USERCMD	tmpcode/commond.h	/^const BYTE CITYDARESCENE_USERCMD = 115;$/;"	v
CITYQUEST_AUTO_LIST	tmpcode/commond.h	/^const BYTE CITYQUEST_AUTO_LIST = 122;$/;"	v
CITYQUEST_EARN_LIST	tmpcode/commond.h	/^const BYTE CITYQUEST_EARN_LIST = 121;$/;"	v
CITY_ARMY_LIST	base/Command.h	/^  CITY_ARMY_LIST,\/\/ Áî®‰∫éNPCÂØπËØùÔºåÊòæÁ§∫Êú¨ÂüéÂÜõÈòüÂàóË°®$/;"	e	enum:Cmd::__anon119
CITY_FUND_FUND	tmpcode/commond.h	/^	CITY_FUND_FUND,                 \/\/\/ ◊ ÷˙_«Î«Û∑÷∑¢∏¯ƒ≥”∂±¯Õ≈◊ ÷˙(C->S)$/;"	e	enum:__anon277
CITY_FUND_REQ_MONEY	tmpcode/commond.h	/^	CITY_FUND_REQ_MONEY = 0,        \/\/\/ ◊ ÷˙_«Î«Ûø…∑÷∑¢µƒ◊Ó¥ÛΩ∂Ó(C->S)$/;"	e	enum:__anon277
CITY_FUND_RET_MONEY	tmpcode/commond.h	/^	CITY_FUND_RET_MONEY,            \/\/\/ ◊ ÷˙_∑µªÿø…∑÷∑¢µƒ◊Ó¥ÛΩ∂Ó(S->C)$/;"	e	enum:__anon277
CITY_FUND_UNION_PARA	tmpcode/commond.h	/^const BYTE CITY_FUND_UNION_PARA = 196;$/;"	v
CITY_USERCMD	tmpcode/commond.h	/^const BYTE CITY_USERCMD = 136;$/;"	v
CLEANBUG_SOIL_HOUSE_USRECMD	tmpcode/commond.h	/^const BYTE CLEANBUG_SOIL_HOUSE_USRECMD = 26;$/;"	v
CLEANGRASS_SOIL_HOUSE_USRECMD	tmpcode/commond.h	/^const BYTE CLEANGRASS_SOIL_HOUSE_USRECMD = 27;$/;"	v
CLEARAFTERLEAVE_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE CLEARAFTERLEAVE_QUESTROOM_PARA = 18;$/;"	v
CLEARCHANGEMODEL_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CLEARCHANGEMODEL_DATA_USERCMD_PARA = 134;$/;"	v
CLEARPOINT_LIMIT_PROPERTY_USERCMD_PARA	base/Command.h	3099;"	d
CLEARPOINT_PROPERTY_USERCMD_PARA	base/Command.h	2838;"	d
CLEARPOINT_PROPERTY_USERCMD_PARA	tmpcode/commond.h	4851;"	d
CLEARRELATION_PARA	base/SessionCommand.h	/^    const BYTE CLEARRELATION_PARA = 1;$/;"	v
CLEARSKILL_USERCMD_PARA	base/Command.h	/^const BYTE CLEARSKILL_USERCMD_PARA = 33;$/;"	v
CLEARSKILL_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CLEARSKILL_USERCMD_PARA = 33;$/;"	v
CLEARSTATE_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE CLEARSTATE_MAPSCREEN_USERCMD_PARA = 64;$/;"	v
CLEARSTATE_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CLEARSTATE_MAPSCREEN_USERCMD_PARA = 64;$/;"	v
CLEARUSERSKILLPOINT_PROPERTY_USERCMD_PARAMETER	base/Command.h	2849;"	d
CLEARUSERSKILLPOINT_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	4862;"	d
CLEAR_CURE_CITYNPC	tmpcode/commond.h	/^const BYTE CLEAR_CURE_CITYNPC = 11;$/;"	v
CLEAR_ELEC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  CLEAR_ELEC_USERCMD_PARA = 140;$/;"	v
CLEAR_FLOWER_EFFECT_NINE	tmpcode/commond.h	/^const BYTE CLEAR_FLOWER_EFFECT_NINE = 144;$/;"	v
CLEAR_GEMNPC_SCENE_PARA	base/SessionCommand.h	/^    const BYTE CLEAR_GEMNPC_SCENE_PARA = 2;$/;"	v
CLEAR_HOLE	tmpcode/commond.h	/^            CLEAR_HOLE = 9,$/;"	e	enum:ReuildType
CLEAR_JOBTOKEN_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CLEAR_JOBTOKEN_PROPERTY_USERCMD_PARA =194;$/;"	v
CLEAR_LEECHDOM_COLDDWON_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CLEAR_LEECHDOM_COLDDWON_USERCMD_PARA = 229;$/;"	v
CLEAR_LINGQISKILL_PARA	tmpcode/commond.h	24752;"	d
CLEAR_OBJECTOWNER_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE CLEAR_OBJECTOWNER_MAPSCREEN_USERCMD_PARA = 58;$/;"	v
CLEAR_OBJECTOWNER_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CLEAR_OBJECTOWNER_MAPSCREEN_USERCMD_PARA = 58;$/;"	v
CLEAR_REPLAYMERCENERYLIST_COUNTRY_CMD	tmpcode/commond.h	30513;"	d
CLEAR_SEPTSKILL_USERCMD	tmpcode/commond.h	/^const BYTE CLEAR_SEPTSKILL_USERCMD = 4;$/;"	v
CLEAR_SHEQU_STATE_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CLEAR_SHEQU_STATE_MAPSCREEN_USERCMD_PARA = 127;$/;"	v
CLEAR_TEAM_MEMBER_MAPPOS	tmpcode/commond.h	/^const BYTE CLEAR_TEAM_MEMBER_MAPPOS  = 62;$/;"	v
CLICK_ISSUE_QUEST_PARA	tmpcode/commond.h	/^static const BYTE CLICK_ISSUE_QUEST_PARA = 37; $/;"	v
CLIENT_KOKOPTION_PARA	tmpcode/commond.h	/^const BYTE CLIENT_KOKOPTION_PARA =126;$/;"	v
CLIENT_SELETCT_COUNTRY	base/Command.h	/^const BYTE CLIENT_SELETCT_COUNTRY = 13;$/;"	v
CLOSE	tmpcode/commond.h	/^	CLOSE = 5,  \/\/πÿ±’ (÷ª «∂‘¡Ω÷÷π∫¬Ú∑Ω Ω÷–µƒ“ª÷÷ ) ±∂ ˝Œ™¡„±Ì æπÿ±’$/;"	e	enum:MERCH_STATE
CLOSE_CHALLENGE_PARA	tmpcode/commond.h	21846;"	d
CLOSE_GIFTBOX_USERCMD	tmpcode/commond.h	21194;"	d
CLOSE_HELP_UNION_PARA	tmpcode/commond.h	/^const BYTE CLOSE_HELP_UNION_PARA = 167;$/;"	v
CLOSE_MARRY_ICON_PARA	tmpcode/commond.h	/^const BYTE CLOSE_MARRY_ICON_PARA = 22;$/;"	v
CLOSE_WINDOW_EVOLVE_HORSE_PARA	tmpcode/commond.h	/^const BYTE CLOSE_WINDOW_EVOLVE_HORSE_PARA = 46;$/;"	v
CLOTHES_STYLE_FIVE	tmpcode/commond.h	/^	 CLOTHES_STYLE_FIVE,$/;"	e	enum:__anon291
CLOTHES_STYLE_FOUR	tmpcode/commond.h	/^	 CLOTHES_STYLE_FOUR,$/;"	e	enum:__anon291
CLOTHES_STYLE_ONE	tmpcode/commond.h	/^	 CLOTHES_STYLE_ONE,$/;"	e	enum:__anon291
CLOTHES_STYLE_THREE	tmpcode/commond.h	/^	 CLOTHES_STYLE_THREE,$/;"	e	enum:__anon291
CLOTHES_STYLE_TOTAL	tmpcode/commond.h	/^	 CLOTHES_STYLE_TOTAL$/;"	e	enum:__anon291
CLOTHES_STYLE_TWO	tmpcode/commond.h	/^	 CLOTHES_STYLE_TWO,$/;"	e	enum:__anon291
CLUB_REG_WITHID	base/RoleregCommand.h	/^	CLUB_REG_WITHID = 3,$/;"	e	enum:Cmd::RoleReg::__anon52
CLUB_REG_WITHID	roleRegServer/RoleregCommand.h	/^	CLUB_REG_WITHID = 3,$/;"	e	enum:Cmd::RoleReg::__anon204
CMD_BATTLE	base/RolechangeCommand.h	/^    const BYTE CMD_BATTLE = 129;$/;"	v
CMD_BATTLE	base/SessionCommand.h	/^	const BYTE CMD_BATTLE = 20;	\/\/’Ω«¯÷∏¡Ó$/;"	v
CMD_BILL	base/SuperCommand.h	/^    const BYTE CMD_BILL    = 3;$/;"	v
CMD_BROAD	base/BroadCastCommand.h	/^    const BYTE CMD_BROAD = 2;$/;"	v
CMD_BROADDATA	base/BroadCastCommand.h	/^    const BYTE CMD_BROADDATA = 3;$/;"	v
CMD_CHAT_OVER_ZONE	base/RolechangeCommand.h	/^    const BYTE CMD_CHAT_OVER_ZONE = 3;$/;"	v
CMD_COMMON	base/RolechangeCommand.h	/^    const BYTE CMD_COMMON = 2;$/;"	v
CMD_COUNTRYONLINE	base/SuperCommand.h	/^    const BYTE CMD_COUNTRYONLINE  = 166;$/;"	v
CMD_FORWARD	base/BillCommand.h	/^    const BYTE CMD_FORWARD = 3;$/;"	v
CMD_FORWARD	base/MiniCommand.h	/^    const BYTE CMD_FORWARD = 3;$/;"	v
CMD_FORWARD	base/SceneCommand.h	/^    const BYTE CMD_FORWARD = 2;$/;"	v
CMD_FORWARD	base/SessionCommand.h	/^    const BYTE CMD_FORWARD = 4;$/;"	v
CMD_GATE	base/BillCommand.h	/^    const BYTE CMD_GATE = 2;$/;"	v
CMD_GATE	base/MiniCommand.h	/^    const BYTE CMD_GATE = 2;$/;"	v
CMD_GATE	base/RecordCommand.h	/^    const BYTE CMD_GATE = 2;$/;"	v
CMD_GATE	base/SessionCommand.h	/^    const BYTE CMD_GATE = 3;$/;"	v
CMD_GATEWAY	base/SuperCommand.h	/^    const BYTE CMD_GATEWAY  = 4;$/;"	v
CMD_GMTOOL	base/GmToolCommand.h	/^    const BYTE CMD_GMTOOL = 128;$/;"	v
CMD_GMTOOL	base/SessionCommand.h	/^    const BYTE CMD_GMTOOL = 6;$/;"	v
CMD_GYLIST	base/FLCommand.h	/^    const BYTE CMD_GYLIST = 2;$/;"	v
CMD_LOGIN	base/BillCommand.h	/^    const BYTE CMD_LOGIN = 1;$/;"	v
CMD_LOGIN	base/BroadCastCommand.h	/^    const BYTE CMD_LOGIN = 1;$/;"	v
CMD_LOGIN	base/FLCommand.h	/^    const BYTE CMD_LOGIN = 1;$/;"	v
CMD_LOGIN	base/MiniCommand.h	/^    const BYTE CMD_LOGIN = 1;$/;"	v
CMD_LOGIN	base/RecordCommand.h	/^    const BYTE CMD_LOGIN = 1;$/;"	v
CMD_LOGIN	base/RolechangeCommand.h	/^    const BYTE CMD_LOGIN = 1;$/;"	v
CMD_LOGIN	base/RoleregCommand.h	/^    const BYTE CMD_LOGIN = 1;$/;"	v
CMD_LOGIN	base/SceneCommand.h	/^    const BYTE CMD_LOGIN = 1;$/;"	v
CMD_LOGIN	base/SessionCommand.h	/^    const BYTE CMD_LOGIN = 1;$/;"	v
CMD_LOGIN	roleRegServer/RoleregCommand.h	/^    const BYTE CMD_LOGIN = 1;$/;"	v
CMD_LOGINSERVER	FLServer/DBAccessCommand.h	/^    const BYTE CMD_LOGINSERVER = 2;$/;"	v
CMD_LOGON	FLServer/DBAccessCommand.h	/^    const BYTE CMD_LOGON = 1;$/;"	v
CMD_NULL	base/zNullCmd.h	/^  const BYTE CMD_NULL = 0;    \/**< Á©∫ÁöÑÊåá‰ª§ *\/$/;"	v
CMD_OTHER	base/SessionCommand.h	/^	const BYTE CMD_OTHER = 18;  $/;"	v
CMD_PKGAME	base/SessionCommand.h	/^	const BYTE CMD_PKGAME = 19;	\/\/ø®≈∆∂‘’Ω$/;"	v
CMD_REDEEM	base/BillCommand.h	/^    const BYTE CMD_REDEEM = 4;$/;"	v
CMD_REG_WITHID	base/RoleregCommand.h	/^    const BYTE CMD_REG_WITHID = 3;$/;"	v
CMD_REG_WITHID	roleRegServer/RoleregCommand.h	/^    const BYTE CMD_REG_WITHID = 3;$/;"	v
CMD_ROLEREG	base/RoleregCommand.h	/^    const BYTE CMD_ROLEREG = 2;$/;"	v
CMD_ROLEREG	roleRegServer/RoleregCommand.h	/^    const BYTE CMD_ROLEREG = 2;$/;"	v
CMD_SCENE	base/MiniCommand.h	/^    const BYTE CMD_SCENE = 4;$/;"	v
CMD_SCENE	base/RecordCommand.h	/^    const BYTE CMD_SCENE = 3;$/;"	v
CMD_SCENE	base/SceneCommand.h	/^    const BYTE CMD_SCENE = 3;$/;"	v
CMD_SCENE	base/SessionCommand.h	/^    const BYTE CMD_SCENE = 30;$/;"	v
CMD_SCENE	base/SuperCommand.h	/^    const BYTE CMD_SCENE  = 7;$/;"	v
CMD_SCENE_ARMY	base/SessionCommand.h	/^    const BYTE CMD_SCENE_ARMY = 13; \/\/ ÂÜõÈòüÊåá‰ª§$/;"	v
CMD_SCENE_COUNTRY	base/SessionCommand.h	/^    const BYTE CMD_SCENE_COUNTRY = 10; \/\/ ÂõΩÂÆ∂Êåá‰ª§$/;"	v
CMD_SCENE_DARE	base/SessionCommand.h	/^    const BYTE CMD_SCENE_DARE = 11; \/\/ ÂØπÊàòÊåá‰ª§$/;"	v
CMD_SCENE_GATE_BILL	base/SceneCommand.h	/^    const BYTE CMD_SCENE_GATE_BILL = 4;$/;"	v
CMD_SCENE_GEM	base/SessionCommand.h	/^    const BYTE CMD_SCENE_GEM = 14;  \/\/ Êä§ÂÆùÊåá‰ª§$/;"	v
CMD_SCENE_RECOMMEND	base/SessionCommand.h	/^    const BYTE CMD_SCENE_RECOMMEND = 15; \/\/ Êé®ËçêÁ≥ªÁªüÊåá‰ª§$/;"	v
CMD_SCENE_SEPT	base/SessionCommand.h	/^    const BYTE CMD_SCENE_SEPT = 9;  \/\/ ÂÆ∂ÊóèÊåá‰ª§$/;"	v
CMD_SCENE_SHUTDOWN	base/SessionCommand.h	/^    const BYTE CMD_SCENE_SHUTDOWN = 7;$/;"	v
CMD_SCENE_SPORTS	base/SessionCommand.h	/^	const BYTE CMD_SCENE_SPORTS	= 16;	\/\/sky ÊàòÂú∫Á´ûÊäÄÂâØÊú¨Á±ªÊåá‰ª§$/;"	v
CMD_SCENE_TMP	base/SessionCommand.h	/^    const BYTE CMD_SCENE_TMP = 8;  \/\/ ‰∏¥Êó∂Êåá‰ª§$/;"	v
CMD_SCENE_UNION	base/SessionCommand.h	/^    const BYTE CMD_SCENE_UNION = 12; \/\/ Â∏Æ‰ºöÊåá‰ª§$/;"	v
CMD_SESSION	base/FLCommand.h	/^    const BYTE CMD_SESSION = 3;$/;"	v
CMD_SESSION	base/RecordCommand.h	/^    const BYTE CMD_SESSION = 4;$/;"	v
CMD_SESSION	base/SessionCommand.h	/^    const BYTE CMD_SESSION = 5;$/;"	v
CMD_SESSION	base/SuperCommand.h	/^    const BYTE CMD_SESSION  = 5;$/;"	v
CMD_STARTUP	base/BroadCommand.h	/^    const BYTE CMD_STARTUP  = 1;$/;"	v
CMD_STARTUP	base/SuperCommand.h	/^    const BYTE CMD_STARTUP  = 1;$/;"	v
CMD_STOCK	base/BillCommand.h	/^    const BYTE CMD_STOCK = 5;$/;"	v
CMD_STOCK	base/SceneCommand.h	/^    const BYTE CMD_STOCK = 5;$/;"	v
CMD_USER_CONSUME	base/UserCommand.h	/^    const BYTE CMD_USER_CONSUME = 2;   \/\/Áé©ÂÆ∂Êâ£Ë¥πÂëΩ‰ª§$/;"	v
CMD_USER_FILLIN	base/UserCommand.h	/^    const BYTE CMD_USER_FILLIN = 3;   \/\/Áé©ÂÆ∂ÂÖÖÂÄºÂëΩ‰ª§$/;"	v
CMD_USER_LOGON	base/UserCommand.h	/^    const BYTE CMD_USER_LOGON = 1;     \/\/ÁôªÈôÜÊúçÂä°Âô®ÂëΩ‰ª§$/;"	v
CMD_USER_MCARD	base/UserCommand.h	/^    const BYTE CMD_USER_MCARD = 5;     \/\/Áé©ÂÆ∂ÂÜ≤ÂÄºÊúàÂç°$/;"	v
CMD_USER_PCARD	base/UserCommand.h	/^    const BYTE CMD_USER_PCARD = 6;     \/\/Áé©ÂÆ∂ÈÅìÂÖ∑Âç°$/;"	v
CMD_USER_QBALANCE	base/UserCommand.h	/^    const BYTE CMD_USER_QBALANCE = 4;   \/\/Â∏êÂè∑‰ΩôÈ¢ùÊü•ËØ¢$/;"	v
CMD_USER_RET	base/UserCommand.h	/^    const BYTE CMD_USER_RET = 5; \/\/ÊúçÂä°Âô®Á´ØÁöÑËøîÂõûÂëΩ‰ª§$/;"	v
CMD_USER_SCARD	base/UserCommand.h	/^    const BYTE CMD_USER_SCARD = 7;    \/\/‰∏ìÂå∫Âç°$/;"	v
COLSE_MERCH_ROAD	tmpcode/commond.h	/^const DWORD COLSE_MERCH_ROAD = 184;$/;"	v
COMEBACK_RETURN	tmpcode/commond.h	/^	COMEBACK_RETURN	 = 2,	$/;"	e	enum:__anon377
COMEBACK_SPONSER	tmpcode/commond.h	/^	COMEBACK_SPONSER = 1,$/;"	e	enum:__anon377
COMMIT_BET_CHALLENGE_USERCMD_PARAMETER	tmpcode/commond.h	22135;"	d
COMMIT_DECAY_LINGQI_PARA	tmpcode/commond.h	/^const BYTE COMMIT_DECAY_LINGQI_PARA = 6;$/;"	v
COMMIT_TRADE_USERCMD_PARAMETER	base/Command.h	3885;"	d
COMMIT_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE COMMIT_TRADE_USERCMD_PARAMETER = 5;$/;"	v
COMMIT_VOTE_PARA	base/Command.h	5553;"	d
COMPARE_USERDATA_IN_FLOWERSORT	tmpcode/commond.h	/^const BYTE COMPARE_USERDATA_IN_FLOWERSORT = 155;$/;"	v
COMPOSE	tmpcode/commond.h	/^            COMPOSE = 1,$/;"	e	enum:ReuildType
COMPOSEITEM_PROPERTY_USERCMD_PARA	base/Command.h	2635;"	d
COMPOSEITEM_PROPERTY_USERCMD_PARA	tmpcode/commond.h	4462;"	d
COMPOSE_ELEC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  COMPOSE_ELEC_USERCMD_PARA = 141;$/;"	v
COMPOSE_SOCKET	tmpcode/commond.h	4191;"	d
COMPOSE_SOUL_STONE_PROPERTY_USERCMD_PARA	base/Command.h	2882;"	d
COMPOSE_STAR_STONE_USERCMD	tmpcode/commond.h	4713;"	d
CONFIRM_FEED_LINGQI_PARA	tmpcode/commond.h	20763;"	d
CONFIRM_ISSUED_QUEST_PAPA	tmpcode/commond.h	/^static const BYTE CONFIRM_ISSUED_QUEST_PAPA = 39;   \/\/∑˛ŒÒ∆˜∑¢¿¥µƒ»∑»œœ˚œ¢$/;"	v
CONFIRM_MERGE_RESULT_LINGQI_PARA	tmpcode/commond.h	20932;"	d
CONFIRM_SEARCHER_PARA	base/Command.h	5208;"	d
CONFIRM_UNION_CITY_TAX	tmpcode/commond.h	/^const BYTE CONFIRM_UNION_CITY_TAX = 107;$/;"	v
CONF_LOGIN	BillServer/BillManager.h	/^    CONF_LOGIN      \/**< ÁôªÈôÜÁΩëÂÖ≥ÊúçÂä°Âô®È™åËØÅÂ∑≤ÁªèÊàêÂäü *\/$/;"	e	enum:BillInfo::__anon1
CONF_LOGIN	BillServer/BillUser.h	/^      CONF_LOGIN,   \/**< ÁôªÈôÜÁΩëÂÖ≥ÊúçÂä°Âô®È™åËØÅÂ∑≤ÁªèÊàêÂäü *\/$/;"	e	enum:BillUser::LoginState
CONF_LOGOUT	BillServer/BillUser.h	/^      CONF_LOGOUT, \/**< Á≠âÂæÖÈÄÄÂá∫ *\/$/;"	e	enum:BillUser::LoginState
CONSCRIBE_ROOMER_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE CONSCRIBE_ROOMER_HOUSE_USER_CMD = 14;$/;"	v
CONSIGN_CANCEL_GOLD_STOCKPARA	base/Command.h	7515;"	d
CONSIGN_CANCEL_GOLD_STOCKPARA	tmpcode/commond.h	23481;"	d
CONSIGN_CANCEL_MONEY_STOCKPARA	base/Command.h	7526;"	d
CONSIGN_CANCEL_MONEY_STOCKPARA	tmpcode/commond.h	23493;"	d
CONSIGN_CARTOON_PARA	base/Command.h	8354;"	d
CONSIGN_CLEAN_LIST_STOCKPARA	base/Command.h	7775;"	d
CONSIGN_CLEAN_LIST_STOCKPARA	tmpcode/commond.h	23781;"	d
CONSIGN_GOLD_LIST_STOCKPARA	base/Command.h	7558;"	d
CONSIGN_GOLD_LIST_STOCKPARA	tmpcode/commond.h	23529;"	d
CONSIGN_GOLD_STOCKPARA	base/Command.h	7494;"	d
CONSIGN_MONEY_LIST_STOCKPARA	base/Command.h	7569;"	d
CONSIGN_MONEY_LIST_STOCKPARA	tmpcode/commond.h	23542;"	d
CONSIGN_MONEY_STOCKPARA	base/Command.h	7505;"	d
CONSIGN_RET_CARTOON_PARA	base/Command.h	8365;"	d
CONSUME_CARD_PARA	base/Command.h	/^const BYTE CONSUME_CARD_PARA = 11;$/;"	v
CONSUME_CARD_PARA	tmpcode/commond.h	/^const BYTE CONSUME_CARD_PARA = 11;$/;"	v
CONTENT_MAIL_PARA	base/Command.h	/^const BYTE CONTENT_MAIL_PARA = 8;$/;"	v
CONTENT_MAIL_PARA	tmpcode/commond.h	/^const BYTE CONTENT_MAIL_PARA = 8;$/;"	v
CONTINUE_SALE_AUCTION_PARA	tmpcode/commond.h	/^const BYTE CONTINUE_SALE_AUCTION_PARA = 8;$/;"	v
CONTRIBUTE	tmpcode/commond.h	/^	CONTRIBUTE = 2,  \/\/π±œ◊$/;"	e	enum:buyState
CONTRIBUTE_COUNTRY_MATERIAL	base/Command.h	/^const BYTE CONTRIBUTE_COUNTRY_MATERIAL = 16;$/;"	v
CONTRIBUTE_MONEY_UNION_PARA	tmpcode/commond.h	/^const BYTE CONTRIBUTE_MONEY_UNION_PARA  = 145;$/;"	v
CONTRIBUTE_RESOURCE_UNION_PARA	tmpcode/commond.h	/^const BYTE CONTRIBUTE_RESOURCE_UNION_PARA = 146;$/;"	v
CONTRIBUTE_TANK_PARA	tmpcode/commond.h	/^const BYTE CONTRIBUTE_TANK_PARA = 31;$/;"	v
CONTRIBUTE_UNIONTANK_PARA	tmpcode/commond.h	/^const BYTE CONTRIBUTE_UNIONTANK_PARA = 35;$/;"	v
CONTRIBUTE_UNION_PARA	base/Command.h	/^const BYTE CONTRIBUTE_UNION_PARA = 22;$/;"	v
CONTROL_GOODSCOLUME_GUARD_PARA	tmpcode/commond.h	/^const BYTE CONTROL_GOODSCOLUME_GUARD_PARA = 22;$/;"	v
CONVERT_MAGIC_PHYSICS_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CONVERT_MAGIC_PHYSICS_PROPERTY_USERCMD_PARA = 150;$/;"	v
COST_FORCE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	14537;"	d
COUNTDOWN_QUESTMAP_PARA	tmpcode/commond.h	18212;"	d
COUNTDOWN_RELIVE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE COUNTDOWN_RELIVE_USERCMD_PARA = 4;$/;"	v
COUNTER_VERSION	base/CharBase.h	293;"	d
COUNTRY_ALLY_PARA	tmpcode/commond.h	22947;"	d
COUNTRY_ANNOY_DARE	base/SessionCommand.h	/^      COUNTRY_ANNOY_DARE,\/\/ È™öÊâ∞ÂõΩÊàò$/;"	e	enum:Cmd::Session::__anon42
COUNTRY_ARMY_LIST	base/Command.h	/^  COUNTRY_ARMY_LIST,\/\/ Áî®‰∫éÂõΩÂÆ∂ÂØπËØùÊ°ÜÔºåÊòæÁ§∫ÂÖ®ÂõΩÂÜõÈòüÂàóË°®$/;"	e	enum:Cmd::__anon119
COUNTRY_EMPEROR_MAIN_GEN	ScenesServer/SceneNpc.h	/^const DWORD COUNTRY_EMPEROR_MAIN_GEN = 58203;$/;"	v
COUNTRY_EMPEROR_SEC_GEN	ScenesServer/SceneNpc.h	/^const DWORD COUNTRY_EMPEROR_SEC_GEN = 58204;$/;"	v
COUNTRY_FORMAL_ANTI_DARE	base/Command.h	/^  COUNTRY_FORMAL_ANTI_DARE = 6,\/\/ Ê≠£ÂºèÂõΩÊàòÂèçÊîª$/;"	e	enum:Cmd::__anon120
COUNTRY_FORMAL_ANTI_DARE	base/SessionCommand.h	/^      COUNTRY_FORMAL_ANTI_DARE,\/\/ ÂõΩÊàòÂèçÊîª$/;"	e	enum:Cmd::Session::__anon42
COUNTRY_FORMAL_DARE	base/Command.h	/^  COUNTRY_FORMAL_DARE = 5,\/\/ Ê≠£ÂºèÂõΩÊàò$/;"	e	enum:Cmd::__anon120
COUNTRY_FORMAL_DARE	base/SessionCommand.h	/^      COUNTRY_FORMAL_DARE,\/\/ Ê≠£ÂºèÂõΩÊàò$/;"	e	enum:Cmd::Session::__anon42
COUNTRY_INVITE_GRECOMMEND_USER_PARA	tmpcode/commond.h	28838;"	d
COUNTRY_KING_MAIN_FLAG	ScenesServer/SceneNpc.h	/^const DWORD COUNTRY_KING_MAIN_FLAG = 58005;$/;"	v
COUNTRY_KING_SEC_FLAG	ScenesServer/SceneNpc.h	/^const DWORD COUNTRY_KING_SEC_FLAG = 58006;$/;"	v
COUNTRY_MAIN_FLAG	ScenesServer/SceneNpc.h	/^const DWORD COUNTRY_MAIN_FLAG = 58001;$/;"	v
COUNTRY_MAIN_GEN	ScenesServer/SceneNpc.h	/^const DWORD COUNTRY_MAIN_GEN = 58200;$/;"	v
COUNTRY_MERCENARYALLY_PARA	tmpcode/commond.h	22962;"	d
COUNTRY_NOTE_PARA	base/Command.h	5264;"	d
COUNTRY_NOTE_PARA	tmpcode/commond.h	8054;"	d
COUNTRY_NUM	tmpcode/commond.h	/^	static const unsigned int COUNTRY_NUM = 7;  \/\/ 7ΩÁ≈≈√˚$/;"	m	struct:stReturnCountrySortListUserCmd
COUNTRY_SEC_FLAG	ScenesServer/SceneNpc.h	/^const DWORD COUNTRY_SEC_FLAG  =  58002;$/;"	v
COUNTRY_SEC_GEN	ScenesServer/SceneNpc.h	/^const DWORD COUNTRY_SEC_GEN  = 58201;$/;"	v
COUNTRY_SEPT_SORT	base/Command.h	/^  COUNTRY_SEPT_SORT,\/\/ Êú¨ÂõΩÂÆ∂ÊóèÊéíË°åÊ¶ú$/;"	e	enum:Cmd::__anon129
COUNTRY_SEPT_SORT	tmpcode/commond.h	/^	COUNTRY_SEPT_SORT,      \/\/ ±æπ˙º“◊Â≈≈––∞Ò$/;"	e	enum:__anon242
COUNTRY_UNION_SORT	base/Command.h	/^  COUNTRY_UNION_SORT,\/\/ Êú¨ÂõΩÂ∏Æ‰ºöÊéíË°åÊ¶ú$/;"	e	enum:Cmd::__anon108
COUNTRY_UNION_SORT	tmpcode/commond.h	/^	COUNTRY_UNION_SORT,     \/\/ ±æπ˙”∂±¯Õ≈≈≈––∞Ò$/;"	e	enum:__anon243
COUNTRY_USERCMD	base/CmdType.h	/^const BYTE COUNTRY_USERCMD    = 22;$/;"	v
COUNTRY_USERCMD	tmpcode/commond.h	/^const BYTE COUNTRY_USERCMD		= 22;$/;"	v
COUNT_DOWN_HORSE_RIDE	tmpcode/commond.h	18380;"	d
COUNT_DOWN_RESOURCE_COLLECT	tmpcode/commond.h	18382;"	d
COUNT_DOWN_SUIT_CHANGE	tmpcode/commond.h	18381;"	d
COUNT_DOWN_TOWER	tmpcode/commond.h	18383;"	d
COUNT_TIME	GatewayServer/CmdChecker.h	/^		COUNT_TIME = interval*count,$/;"	e	enum:percent_up_off::__anon2
CREATE_ARMY_PARA	base/Command.h	5582;"	d
CREATE_CHANNEL_USERCMD_PARAMETER	base/Command.h	3543;"	d
CREATE_CHANNEL_USERCMD_PARAMETER	tmpcode/commond.h	12416;"	d
CREATE_FAIL	base/Command.h	/^  CREATE_FAIL   \/\/ ÈáëÈí±‰∏çË∂≥ÔºåÂ§±Ë¥•$/;"	e	enum:Cmd::__anon139
CREATE_LTQ_PARA	tmpcode/commond.h	24334;"	d
CREATE_NEW_PK_GAME_PARA	base/SessionCommand.h	/^    const BYTE CREATE_NEW_PK_GAME_PARA = 3;$/;"	v
CREATE_OR_CHANGE_TEAM_RECRUIT_PARA	tmpcode/commond.h	/^const BYTE CREATE_OR_CHANGE_TEAM_RECRUIT_PARA = 3;$/;"	v
CREATE_QUESTION	base/Command.h	/^  CREATE_QUESTION,\/\/ ËØ∑Ê±ÇËøõË°åÊô∫ÂäõÈóÆÁ≠î$/;"	e	enum:Cmd::__anon139
CREATE_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE CREATE_QUESTROOM_PARA = 6;$/;"	v
CREATE_QUIZ_PARA	base/Command.h	/^const BYTE CREATE_QUIZ_PARA = 2;$/;"	v
CREATE_SELECT_USERCMD_PARA	base/Command.h	/^const BYTE CREATE_SELECT_USERCMD_PARA = 2;$/;"	v
CREATE_SELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CREATE_SELECT_USERCMD_PARA = 2;$/;"	v
CREATE_SEPT_BY_SIGN	tmpcode/commond.h	/^const BYTE CREATE_SEPT_BY_SIGN = 106;$/;"	v
CREATE_SEPT_NEED_LEVEL	base/Sept.h	/^const DWORD CREATE_SEPT_NEED_LEVEL     = 1;  \/\/ Ω®¡¢º“◊Â–Ë“™µƒ»ÀŒÔµ»º∂$/;"	v
CREATE_SEPT_NEED_MAN_NUM	base/Sept.h	/^const DWORD  CREATE_SEPT_NEED_MAN_NUM = 15;    \/\/ Ω®¡¢º“◊Â$/;"	v
CREATE_SEPT_NEED_PRICE_GOLD	base/Sept.h	/^const DWORD CREATE_SEPT_NEED_PRICE_GOLD = 10;  \/\/ Ω®¡¢º“◊Â–Ë“™Ω«Æ20¡Ω$/;"	v
CREATE_SEPT_PARA	base/Command.h	/^const BYTE CREATE_SEPT_PARA = 2;$/;"	v
CREATE_SEPT_PARA	tmpcode/commond.h	/^const BYTE CREATE_SEPT_PARA = 2;$/;"	v
CREATE_SEPT_SIGN_BROAD	tmpcode/commond.h	/^const BYTE CREATE_SEPT_SIGN_BROAD = 107;$/;"	v
CREATE_UNION_NAME_PARA	tmpcode/commond.h	/^const BYTE CREATE_UNION_NAME_PARA = 217;$/;"	v
CREATE_UNION_NEED_ITEM_ID	base/Union.h	/^const DWORD CREATE_UNION_NEED_ITEM_ID    = 684;     \/\/ Âª∫Á´ãÂ∏Æ‰ºöÊâÄÈúÄË¶ÅÁöÑÈÅìÂÖ∑ID Â§©ÁæΩ‰ª§$/;"	v
CREATE_UNION_NEED_LEVEL	base/Union.h	/^const DWORD CREATE_UNION_NEED_LEVEL      = 45;      \/\/ Âª∫Á´ãÂ∏Æ‰ºöÈúÄË¶ÅÁöÑ‰∫∫Áâ©Á≠âÁ∫ß$/;"	v
CREATE_UNION_NEED_MAN_NUM	base/Union.h	/^const DWORD CREATE_UNION_NEED_MAN_NUM    =30;  \/\/ Â∏Æ‰ºöÊàêÁ´ãÈúÄË¶Å‰∫∫Êï∞$/;"	v
CREATE_UNION_NEED_PRICE_GOLD	base/Union.h	/^const DWORD CREATE_UNION_NEED_PRICE_GOLD = 50000; \/\/ Âª∫Á´ãÂ∏Æ‰ºöÈúÄË¶ÅÈáëÈí±10‰∏á$/;"	v
CREATE_UNION_NEED_VOTE	base/Union.h	/^const DWORD CREATE_UNION_NEED_VOTE       =  2;$/;"	v
CREATE_UNION_PARA	base/Command.h	/^const BYTE CREATE_UNION_PARA = 2;$/;"	v
CREATE_UNION_PARA	tmpcode/commond.h	/^const BYTE CREATE_UNION_PARA = 2;$/;"	v
CREATE_YES	base/Command.h	/^  CREATE_YES,\/\/ ËØ∑Ê±ÇÊàêÂäü$/;"	e	enum:Cmd::__anon139
CRUSADE_CASTLE_POINT	tmpcode/commond.h	/^const BYTE CRUSADE_CASTLE_POINT = 55;$/;"	v
CRUSADE_CASTLE_TITLE	tmpcode/commond.h	/^const BYTE CRUSADE_CASTLE_TITLE = 56;$/;"	v
CRUSADE_CASTLE_USER_END_TIME	tmpcode/commond.h	/^const BYTE CRUSADE_CASTLE_USER_END_TIME = 57;$/;"	v
CRYSTAL	base/Command.h	/^  CRYSTAL =4,\/\/Ê∞¥Êô∂$/;"	e	enum:Cmd::__anon102
CRYSTAL_ALLINFO_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CRYSTAL_ALLINFO_USERCMD_PARA = 35;$/;"	v
CRYSTAL_CHECK_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CRYSTAL_CHECK_USERCMD_PARA = 34;$/;"	v
CRYSTAL_EFFECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CRYSTAL_EFFECT_USERCMD_PARA = 32;$/;"	v
CRYSTAL_INTOCARRY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CRYSTAL_INTOCARRY_USERCMD_PARA = 33;$/;"	v
CRYSTAL_PUNISHTIME_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CRYSTAL_PUNISHTIME_USERCMD_PARA = 36;$/;"	v
CRYSTAL_SENDBRIGTHICON_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CRYSTAL_SENDBRIGTHICON_USERCMD_PARA = 37;$/;"	v
CRYSTAL_THROW_USERCMD_PARA	tmpcode/commond.h	/^const BYTE CRYSTAL_THROW_USERCMD_PARA = 38;$/;"	v
CRelation	SessionServer/CRelationManager.cpp	/^CRelation::CRelation()$/;"	f	class:CRelation
CRelation	SessionServer/CRelationManager.h	/^struct CRelation : public zEntry$/;"	s
CRelationManager	SessionServer/CRelationManager.h	/^class CRelationManager : public zEntryManager<zEntryID,zEntryName>$/;"	c
CSortM	SessionServer/CSort.cpp	/^CSortM::CSortM()$/;"	f	class:CSortM
CSortM	SessionServer/CSort.h	/^class CSortM$/;"	c
CURE_TYPE_ONE	tmpcode/commond.h	/^	CURE_TYPE_ONE = 1,  \/\/÷Œ¡∆∑Ω Ω1$/;"	e	enum:__anon354
CXXFLAGS	BillServer/Makefile	/^CXXFLAGS = $(ZEBRA_COMPILE_OPT) -I..\/base -Wall -D_GNU_SOURCE -D_REENRANT `mysql_config --cflags` `xml2-config --cflags` $/;"	m
CXXFLAGS	FLServer/Makefile	/^CXXFLAGS = $(ZEBRA_COMPILE_OPT) -I..\/base -Wall -D_GNU_SOURCE -D_REENRANT `mysql_config --cflags` `xml2-config --cflags` $/;"	m
CXXFLAGS	GatewayServer/Makefile	/^CXXFLAGS = $(ZEBRA_COMPILE_OPT) -I..\/base -Wall -D_GNU_SOURCE -D_REENRANT `mysql_config --cflags` `xml2-config --cflags` `freetype-config --cflags`$/;"	m
CXXFLAGS	RecordServer/Makefile	/^CXXFLAGS = $(ZEBRA_COMPILE_OPT) -g3 -I..\/base -Wall -D_GNU_SOURCE -D_REENRANT `mysql_config --cflags` `xml2-config --cflags` $/;"	m
CXXFLAGS	Robot/Makefile	/^CXXFLAGS = $(ZEBRA_COMPILE_OPT) -g3 -I..\/base -Wall -D_GNU_SOURCE -D_REENRANT `mysql_config --cflags` `xml2-config --cflags` $/;"	m
CXXFLAGS	ScenesServer/Makefile	/^CXXFLAGS = $(ZEBRA_COMPILE_OPT) -I..\/base -Wall -D_GNU_SOURCE -D_REENRANT `mysql_config --cflags` `xml2-config --cflags` `freetype-config --cflags`$/;"	m
CXXFLAGS	SessionServer/Makefile	/^CXXFLAGS = $(ZEBRA_COMPILE_OPT) -I..\/base -Wall -D_GNU_SOURCE -D_REENRANT `mysql_config --cflags` `xml2-config --cflags` `freetype-config --cflags`$/;"	m
CXXFLAGS	SuperServer/Makefile	/^CXXFLAGS = $(ZEBRA_COMPILE_OPT) -I..\/base -Wall -D_GNU_SOURCE -D_REENRANT `mysql_config --cflags` `xml2-config --cflags` $/;"	m
CXXFLAGS	base/EncDec/Makefile	/^CXXFLAGS = $(ZEBRA_COMPILE_OPT) $(PIC_FLAG) -g -I..\/base -Wall -D_GNU_SOURCE -D_REENRANT `mysql_config --cflags` `xml2-config --cflags` $/;"	m
CXXFLAGS	base/Makefile	/^CXXFLAGS = $(ZEBRA_COMPILE_OPT) $(PIC_FLAG)-I. -Wall -D_GNU_SOURCE -D_REENRANT `mysql_config --cflags` `xml2-config --cflags` $/;"	m
CXXFLAGS	roleChangeServer/Makefile	/^CXXFLAGS = $(ZEBRA_COMPILE_OPT) -I..\/base -Wall -D_GNU_SOURCE -D_REENRANT `mysql_config --cflags` `xml2-config --cflags` $/;"	m
CXXFLAGS	roleRegServer/Makefile	/^CXXFLAGS = $(ZEBRA_COMPILE_OPT) -I..\/base -Wall -D_GNU_SOURCE -D_REENRANT `mysql_config --cflags` `xml2-config --cflags` $/;"	m
CXXFLAGS	tools/Makefile	/^CXXFLAGS = $(ZEBRA_COMPILE_OPT)  -I..\/base -I..\/base\/xml -Wall -D_GNU_SOURCE -D_REENRANT `mysql_config --cflags` `xml2-config --cflags` $/;"	m
CXXLFLAGS	BillServer/Makefile	/^CXXLFLAGS = $(ZEBRA_COMPILE_OPT) -Wall -L..\/base -lzebra -lencdec -lpthread -lrt -lz `mysql_config --libs_r` `xml2-config --libs` -llog4cxx $/;"	m
CXXLFLAGS	FLServer/Makefile	/^CXXLFLAGS = $(ZEBRA_COMPILE_OPT) -Wall -L..\/base -lzebra -lencdec -lpthread -lrt -lz `mysql_config --libs_r` `xml2-config --libs` -llog4cxx $/;"	m
CXXLFLAGS	GatewayServer/Makefile	/^CXXLFLAGS = $(ZEBRA_COMPILE_OPT) -Wall -L..\/base -lzebra -lencdec -lpthread -lrt -lz `mysql_config --libs_r` `xml2-config --libs` -llog4cxx $/;"	m
CXXLFLAGS	RecordServer/Makefile	/^CXXLFLAGS = $(ZEBRA_COMPILE_OPT) -Wall -L..\/base -lzebra -lencdec -lpthread -lrt -lz `mysql_config --libs_r` `xml2-config --libs` -llog4cxx $/;"	m
CXXLFLAGS	Robot/Makefile	/^CXXLFLAGS = $(ZEBRA_COMPILE_OPT) -Wall -L..\/base -lzebra -lencdec -lpthread -lrt -lz `mysql_config --libs_r` `xml2-config --libs` -llog4cxx $/;"	m
CXXLFLAGS	ScenesServer/Makefile	/^CXXLFLAGS = $(ZEBRA_COMPILE_OPT) -Wall -L..\/base -lzebra -lencdec -lpthread -lrt -lz `mysql_config --libs_r` `xml2-config --libs` -llog4cxx$/;"	m
CXXLFLAGS	SessionServer/Makefile	/^CXXLFLAGS = $(ZEBRA_COMPILE_OPT) -Wall -L..\/base -lzebra -lencdec -lpthread -lrt -lz `mysql_config --libs_r` `xml2-config --libs` -llog4cxx$/;"	m
CXXLFLAGS	SuperServer/Makefile	/^CXXLFLAGS = $(ZEBRA_COMPILE_OPT) -Wall -L..\/base -lzebra -lencdec -lpthread -lrt -lz `mysql_config --libs_r` `xml2-config --libs` -llog4cxx $/;"	m
CXXLFLAGS	base/EncDec/Makefile	/^CXXLFLAGS = $(ZEBRA_COMPILE_OPT) -Wall -lpthread  -lz `mysql_config --libs_r` `xml2-config --libs` -llog4cxx $/;"	m
CXXLFLAGS	base/Makefile	/^CXXLFLAGS = $(ZEBRA_COMPILE_OPT) -Wall -lencdec -lpthread -lrt -lz `mysql_config --libs_r` `xml2-config --libs` -llog4cxx$/;"	m
CXXLFLAGS	roleChangeServer/Makefile	/^CXXLFLAGS = $(ZEBRA_COMPILE_OPT) -Wall -L..\/base -lzebra -lencdec -lpthread -lrt -lz `mysql_config --libs_r` `xml2-config --libs` -llog4cxx $/;"	m
CXXLFLAGS	roleRegServer/Makefile	/^CXXLFLAGS = $(ZEBRA_COMPILE_OPT) -Wall -L..\/base -lzebra -lencdec -lpthread -lrt -lz `mysql_config --libs_r` `xml2-config --libs` -llog4cxx $/;"	m
CXXLFLAGS	tools/Makefile	/^CXXLFLAGS = $(ZEBRA_COMPILE_OPT) -Wall -L..\/base -L..\/base\/xml -lzebra -lencdec -lpthread -lrt -lz `mysql_config --libs_r` `xml2-config --libs` -llog4cxx $/;"	m
CacheContainer	BillServer/BillCache.h	/^    typedef __gnu_cxx::hash_map<const char *,BillData *> CacheContainer;$/;"	t	class:BillCache
Callback	base/zThread.h	/^	struct Callback$/;"	s	class:zThreadGroup
Camp	ScenesServer/SceneDefine.h	/^	WORD Camp;					\/\/sky ÊâÄÂ±ûÈòµËê•Á¥¢ÂºïÂÄº$/;"	m	struct:t_NpcDefine
CampIndex	base/SessionCommand.h	/^		int  CampIndex;				\/\/sky ÈòµËê•Á¥¢Âºï$/;"	m	struct:Cmd::Session::t_Sports_MoveSecen
CampPos	base/SessionCommand.h	/^		CampPos()$/;"	f	struct:Cmd::Session::CampPos
CampPos	base/SessionCommand.h	/^	struct  CampPos$/;"	s	namespace:Cmd::Session
CantMake	tmpcode/commond.h	/^	CantMake = 0, \/\/ø∆ºº≤ª◊„$/;"	e	enum:MERCH_STATE
Card	base/xmlparser/giftbag.h	/^        struct Card$/;"	s	struct:GiftBagConfig::Gift
CardBase	base/zDatabase.h	/^struct CardBase$/;"	s
CardCont	base/xmlparser/giftbag.h	/^        typedef xml_node_vector<Card>	CardCont;$/;"	t	struct:GiftBagConfig::Gift
CardContConstIter	base/xmlparser/giftbag.h	/^        typedef CardCont::const_iterator	CardContConstIter;$/;"	t	struct:GiftBagConfig::Gift
CardContIter	base/xmlparser/giftbag.h	/^        typedef CardCont::iterator	CardContIter;$/;"	t	struct:GiftBagConfig::Gift
CardIDToHandSlot	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::CardIDToHandSlot(DWORD userID, DWORD cardID)$/;"	f	class:ChallengeGame
CardMainData	tmpcode/commond.h	/^        CardMainData()$/;"	f	struct:CardMainData
CardMainData	tmpcode/commond.h	/^struct CardMainData$/;"	s
CardSlot	ScenesServer/zCard.cpp	/^CardSlot::CardSlot(WORD type,DWORD id,WORD w,WORD h):_type(type),_id(id),_width(w),_height(h),_space(w*h),_size(_space)$/;"	f	class:CardSlot
CardSlot	ScenesServer/zCard.h	/^class CardSlot:private zNoncopyable$/;"	c
CardSlotCallback	ScenesServer/zCard.h	/^struct CardSlotCallback$/;"	s
CardSlots	ScenesServer/zCard.cpp	/^CardSlots::CardSlots(ChallengeGame* game) : owner(game)$/;"	f	class:CardSlots
CardSlots	ScenesServer/zCard.h	/^class CardSlots$/;"	c
CardToCommonSlot	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::CardToCommonSlot(DWORD userID, DWORD cardID)$/;"	f	class:ChallengeGame
CardToHeroSlot	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::CardToHeroSlot(DWORD userID, DWORD cardID)$/;"	f	class:ChallengeGame
CardToRecordSlot	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::CardToRecordSlot(DWORD userID, zCard* card, DWORD timeSequence)$/;"	f	class:ChallengeGame
CardToSkillSlot	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::CardToSkillSlot(DWORD userID, DWORD cardID)$/;"	f	class:ChallengeGame
CardTujianData	ScenesServer/CardTujianManager.h	/^	CardTujianData()$/;"	f	class:CardTujianData
CardTujianData	ScenesServer/CardTujianManager.h	/^class CardTujianData$/;"	c
CardTujianManager	ScenesServer/CardTujianManager.cpp	/^CardTujianManager::CardTujianManager()$/;"	f	class:CardTujianManager
CardTujianManager	ScenesServer/CardTujianManager.h	/^class CardTujianManager : public Singleton<CardTujianManager>$/;"	c
Card_num	ScenesServer/SceneUser.h	/^    DWORD Card_num;$/;"	m	struct:SceneUser
Card_num	base/Command.h	/^  DWORD Card_num;    \/\/ÈÅìÂÖ∑Âç°Âº†Êï∞$/;"	m	struct:Cmd::stReturnGoldGiveTradeUserCmd
CarryObject	base/zDatabase.h	/^    CarryObject()$/;"	f	struct:CarryObject
CarryObject	base/zDatabase.h	/^struct CarryObject$/;"	s
ChallengeGame	ScenesServer/ChallengeGame.cpp	/^ChallengeGame::ChallengeGame(const DWORD groupID, const Cmd::Session::ChallengeGameType type, const DWORD userID1, const DWORD cardsNumber1, const DWORD userID2, const DWORD cardsNumber2):slots(this)$/;"	f	class:ChallengeGame
ChallengeGame	ScenesServer/ChallengeGame.h	/^class ChallengeGame$/;"	c
ChallengeGameManager	ScenesServer/ChallengeGameManager.cpp	/^ChallengeGameManager::ChallengeGameManager() : _ten_sec(10)$/;"	f	class:ChallengeGameManager
ChallengeGameManager	ScenesServer/ChallengeGameManager.h	/^class ChallengeGameManager : public Singleton<ChallengeGameManager>$/;"	c
ChallengeGameType	base/SessionCommand.h	/^    enum ChallengeGameType$/;"	g	namespace:Cmd::Session
ChallengeState	ScenesServer/ChallengeGameManager.h	/^enum ChallengeState$/;"	g
ChallengeTmpData	ScenesServer/ChallengeGameManager.h	/^	ChallengeTmpData()$/;"	f	class:ChallengeTmpData
ChallengeTmpData	ScenesServer/ChallengeGameManager.h	/^class ChallengeTmpData$/;"	c
ChallengeType	tmpcode/commond.h	/^enum ChallengeType$/;"	g
ChangeCountryOper	base/SceneCommand.h	/^    enum ChangeCountryOper {$/;"	g	namespace:Cmd::Scene
ChangeInfo	tmpcode/commond.h	/^	ChangeInfo()$/;"	f	struct:ChangeInfo
ChangeInfo	tmpcode/commond.h	/^struct ChangeInfo \/\/—´’¬∂“ªª–≈œ¢$/;"	s
ChangeNpcID	base/zDatabase.h	/^    DWORD  ChangeNpcID;     \/\/soulrate;      \/\/sky NPC±‰…ÌID$/;"	m	struct:zNpcB
ChangeTask	roleChangeServer/ChangeTask.h	/^	ChangeTask($/;"	f	class:ChangeTask
ChangeTask	roleChangeServer/ChangeTask.h	/^class ChangeTask : public zTCPTask$/;"	c
ChangeType	base/CharBase.h	/^enum ChangeType$/;"	g
ChangeVerifyVersionOper	base/SceneCommand.h	/^    enum ChangeVerifyVersionOper {$/;"	g	namespace:Cmd::Scene
Channel	ScenesServer/Chat.cpp	/^Channel::Channel(SceneUser *pUser):zEntry()$/;"	f	class:Channel
Channel	ScenesServer/Chat.h	/^class Channel:public zEntry$/;"	c
ChannelID	tmpcode/commond.h	/^	QWORD ChannelID;$/;"	m	struct:stReturnYuYinChannelCmd
ChannelM	ScenesServer/Chat.cpp	/^ChannelM::ChannelM()$/;"	f	class:ChannelM
ChannelM	ScenesServer/Chat.h	/^class ChannelM:public zEntryManager< zEntryTempID,zEntryName >$/;"	c
ChannelType	tmpcode/commond.h	/^	BYTE ChannelType;$/;"	m	struct:stRequestYuYinChannelCmd
ChannelType	tmpcode/commond.h	/^	BYTE ChannelType;$/;"	m	struct:stReturnYuYinChannelCmd
CharBase	base/CharBase.h	/^struct CharBase$/;"	s
CharSave	base/CharBase.h	/^struct CharSave$/;"	s
CharState	base/CharBase.h	/^struct CharState$/;"	s
CharTest	base/CharBase.h	/^struct CharTest$/;"	s
ChatAccelItem	tmpcode/commond.h	/^	ChatAccelItem()$/;"	f	struct:ChatAccelItem
ChatAccelItem	tmpcode/commond.h	/^typedef struct ChatAccelItem$/;"	s
ChatAccelItem	tmpcode/commond.h	/^}ChatAccelItem;$/;"	t	typeref:struct:ChatAccelItem
CheckFreezeState	ScenesServer/ChallengeGame.cpp	/^	CheckFreezeState(ChallengeGame *game)$/;"	f	class:CheckFreezeState
CheckFreezeState	ScenesServer/ChallengeGame.cpp	/^class CheckFreezeState:public UserCardExec$/;"	c
CheckInfo	GatewayServer/CmdChecker.h	/^	CheckInfo() : _previous(0),_last(0),_packets(0)$/;"	f	class:CheckInfo
CheckInfo	GatewayServer/CmdChecker.h	/^class CheckInfo$/;"	c
CheckedBuf	base/zMisc.h	/^	CheckedBuf(DWORD size, const char* des)$/;"	f	class:CheckedBuf
CheckedBuf	base/zMisc.h	/^class CheckedBuf$/;"	c
Checker	GatewayServer/CmdChecker.h	/^	typedef CmdChecker< percent_up_off<512,10,5> > Checker;$/;"	t	class:CheckerTable
CheckerTable	GatewayServer/CmdChecker.cpp	/^CheckerTable::CheckerTable()$/;"	f	class:CheckerTable
CheckerTable	GatewayServer/CmdChecker.h	/^class CheckerTable$/;"	c
CityGuard	tmpcode/commond.h	/^struct CityGuard$/;"	s
CityInfo	tmpcode/commond.h	/^		CityInfo()$/;"	f	struct:stReturnCountryTax::CityInfo
CityInfo	tmpcode/commond.h	/^	struct CityInfo$/;"	s	struct:stReturnCountryTax
CityInfo	tmpcode/commond.h	/^    CityInfo()$/;"	f	struct:CityInfo
CityInfo	tmpcode/commond.h	/^typedef struct CityInfo$/;"	s
CityMx	tmpcode/commond.h	/^			CityMx ()$/;"	f	struct:stRetCityMinxinRecCmd::CityMxRec::CityMx
CityMx	tmpcode/commond.h	/^		struct CityMx$/;"	s	struct:stRetCityMinxinRecCmd::CityMxRec
CityMxRec	tmpcode/commond.h	/^		CityMxRec()$/;"	f	struct:stRetCityMinxinRecCmd::CityMxRec
CityMxRec	tmpcode/commond.h	/^	struct CityMxRec$/;"	s	struct:stRetCityMinxinRecCmd
CityQuestInfo	tmpcode/commond.h	/^    CityQuestInfo()$/;"	f	struct:CityQuestInfo
CityQuestInfo	tmpcode/commond.h	/^typedef struct CityQuestInfo$/;"	s
ClearEndDieCard	ScenesServer/ChallengeGame.cpp	/^	ClearEndDieCard()$/;"	f	class:ClearEndDieCard
ClearEndDieCard	ScenesServer/ChallengeGame.cpp	/^class ClearEndDieCard:public UserCardExec$/;"	c
ClearPack	ScenesServer/zObject.h	/^  ClearPack(const Packages* ps) : _ps(ps)$/;"	f	struct:ClearPack
ClearPack	ScenesServer/zObject.h	/^struct ClearPack : public PackageCallback$/;"	s
ClearTmpSkillStatus	ScenesServer/ChallengeGame.cpp	/^class ClearTmpSkillStatus:public UserCardExec$/;"	c
Client	Robot/Client.cpp	/^Client::Client(const std::string &user, const std::string &ip, const WORD &port):zTCPClientTask(ip, port, true)\/*,_one_sec(1),_one_min(60)*\/$/;"	f	class:Client
Client	Robot/Client.h	/^class Client : private ClientBase, public zTCPClientTask$/;"	c
ClientBase	Robot/Client.h	/^    ClientBase()$/;"	f	struct:ClientBase
ClientBase	Robot/Client.h	/^struct ClientBase$/;"	s
ClientContainer	Robot/ClientManager.h	/^	typedef std::map<std::string, Client *> ClientContainer;$/;"	t	class:ClientManager
ClientContainer_const_iterator	Robot/ClientManager.h	/^	typedef ClientContainer::const_iterator ClientContainer_const_iterator;$/;"	t	class:ClientManager
ClientContainer_iterator	Robot/ClientManager.h	/^	typedef ClientContainer::iterator ClientContainer_iterator;$/;"	t	class:ClientManager
ClientContainer_value_type	Robot/ClientManager.h	/^	typedef ClientContainer::value_type ClientContainer_value_type;$/;"	t	class:ClientManager
ClientExec	Robot/ClientManager.h	/^struct ClientExec$/;"	s
ClientManager	Robot/ClientManager.h	/^	ClientManager() {};$/;"	f	class:ClientManager
ClientManager	Robot/ClientManager.h	/^class ClientManager : zNoncopyable$/;"	c
ClientService	Robot/ClientService.h	/^    ClientService() : zService("≤‚ ‘øÕªß∂À")$/;"	f	class:ClientService
ClientService	Robot/ClientService.h	/^class ClientService : public zService$/;"	c
ClientTimeTick	Robot/TimeTick.h	/^	ClientTimeTick() : zThread("TimeTick") {};$/;"	f	class:ClientTimeTick
ClientTimeTick	Robot/TimeTick.h	/^class ClientTimeTick : public zThread$/;"	c
CloseGiftBoxPropertyUserCmd	tmpcode/commond.h	/^        CloseGiftBoxPropertyUserCmd()$/;"	f	struct:CloseGiftBoxPropertyUserCmd
CloseGiftBoxPropertyUserCmd	tmpcode/commond.h	/^struct CloseGiftBoxPropertyUserCmd : public stPropertyUserCmd$/;"	s
Cmd	FLServer/DBAccessCommand.h	/^namespace Cmd$/;"	n
Cmd	base/BattleUserCmd.h	/^namespace Cmd$/;"	n
Cmd	base/BillCommand.h	/^namespace Cmd$/;"	n
Cmd	base/BroadCastCommand.h	/^namespace Cmd$/;"	n
Cmd	base/BroadCommand.h	/^namespace Cmd$/;"	n
Cmd	base/CmdType.h	/^namespace Cmd{$/;"	n
Cmd	base/Command.h	/^namespace Cmd$/;"	n
Cmd	base/FLCommand.h	/^namespace Cmd$/;"	n
Cmd	base/GmToolCommand.h	/^namespace Cmd$/;"	n
Cmd	base/HeroCardCmd.h	/^namespace Cmd$/;"	n
Cmd	base/MiniCommand.h	/^namespace Cmd$/;"	n
Cmd	base/NullUserCmd.h	/^namespace Cmd$/;"	n
Cmd	base/RecordCommand.h	/^namespace Cmd$/;"	n
Cmd	base/RolechangeCommand.h	/^namespace Cmd$/;"	n
Cmd	base/RoleregCommand.h	/^namespace Cmd$/;"	n
Cmd	base/SceneCommand.h	/^namespace Cmd$/;"	n
Cmd	base/SessionCommand.h	/^namespace Cmd$/;"	n
Cmd	base/SuperCommand.h	/^namespace Cmd$/;"	n
Cmd	base/UserCommand.h	/^namespace Cmd$/;"	n
Cmd	base/zNullCmd.h	/^namespace Cmd$/;"	n
Cmd	roleRegServer/RoleregCommand.h	/^namespace Cmd$/;"	n
CmdBuffer_wrapper	base/zSocket.h	/^	CmdBuffer_wrapper() : cmd_size(sizeof(type)),max_size(size)\/\/ : cnt(NULL)$/;"	f	class:CmdBuffer_wrapper
CmdBuffer_wrapper	base/zSocket.h	/^class CmdBuffer_wrapper$/;"	c
CmdCheck	base/zMisc.h	/^typedef zCmdCheck<WORD> CmdCheck;$/;"	t
CmdChecker	GatewayServer/CmdChecker.h	/^	CmdChecker()$/;"	f	class:CmdChecker
CmdChecker	GatewayServer/CmdChecker.h	/^class CmdChecker : public ICmdChecker<I>$/;"	c
CmdPair	base/zMisc.h	/^typedef std::pair<DWORD,BYTE *> CmdPair;$/;"	t
CmdQueue	base/zMisc.h	/^	typedef std::pair<volatile bool,CmdPair > CmdQueue;$/;"	t	class:MsgQueue
CmdSet	base/zMisc.h	/^	typedef std::set<T> CmdSet;$/;"	t	class:zCmdCheck
CmdSet_Iter	base/zMisc.h	/^	typedef typename CmdSet::iterator CmdSet_Iter;$/;"	t	class:zCmdCheck
Coma	ScenesServer/SceneEntryPk.h	/^	bool Coma;			\/\/\/	sky ÊòèËø∑$/;"	m	struct:SceneEntryPk
Combination	ScenesServer/zObject.h	/^  Combination(SceneUser* user,zObject* get) : _user(user),_get(get),_num(0)$/;"	f	struct:Combination
Combination	ScenesServer/zObject.h	/^struct Combination : public PackageCallback$/;"	s
Compare	ScenesServer/QuestMaker.h	/^    Compare(ScenesParser& p) : _p(p)$/;"	f	class:MakeFunction::Compare
Compare	ScenesServer/QuestMaker.h	/^  class Compare : public Maker<Condition>$/;"	c	namespace:MakeFunction
Compare	SessionServer/SessionManager.h	/^    struct Compare$/;"	s	class:UserSessionManager
Condition	ScenesServer/QuestCondition.h	/^class Condition$/;"	c
ConditionFactory	ScenesServer/QuestMaker.h	/^typedef ProductFactory<std::string,MakeFunction::Maker<Condition> > ConditionFactory;$/;"	t
ConfigMap	base/zXML.h	/^typedef std::map<std::string, xml::xml_config_base*> ConfigMap;$/;"	t
Configs	base/zXML.h	/^class Configs$/;"	c
ConnState	base/zTCPClientTask.h	/^	enum ConnState$/;"	g	class:zTCPClientTask
Consign	BillServer/StockConsign.h	/^    Consign()$/;"	f	class:Consign
Consign	BillServer/StockConsign.h	/^class Consign$/;"	c
ConsignGoldManager	BillServer/StockConsign.cpp	/^ConsignGoldManager::ConsignGoldManager()$/;"	f	class:ConsignGoldManager
ConsignGoldManager	BillServer/StockConsign.h	/^class ConsignGoldManager :public Consign$/;"	c
ConsignHistoryManager	BillServer/StockConsign.cpp	/^ConsignHistoryManager::ConsignHistoryManager():_one_min(60)$/;"	f	class:ConsignHistoryManager
ConsignHistoryManager	BillServer/StockConsign.h	/^class ConsignHistoryManager$/;"	c
ConsignHistoryType	base/Command.h	/^  ConsignHistoryType()$/;"	f	struct:Cmd::ConsignHistoryType
ConsignHistoryType	base/Command.h	/^struct ConsignHistoryType$/;"	s	namespace:Cmd
ConsignHistoryType	tmpcode/commond.h	/^	ConsignHistoryType()$/;"	f	struct:ConsignHistoryType
ConsignHistoryType	tmpcode/commond.h	/^struct ConsignHistoryType$/;"	s
ConsignMoneyManager	BillServer/StockConsign.cpp	/^ConsignMoneyManager::ConsignMoneyManager()$/;"	f	class:ConsignMoneyManager
ConsignMoneyManager	BillServer/StockConsign.h	/^class ConsignMoneyManager :public Consign$/;"	c
ConsignSelfHistoryType	base/Command.h	/^  ConsignSelfHistoryType()$/;"	f	struct:Cmd::ConsignSelfHistoryType
ConsignSelfHistoryType	base/Command.h	/^struct ConsignSelfHistoryType$/;"	s	namespace:Cmd
ConsignSelfHistoryType	tmpcode/commond.h	/^	ConsignSelfHistoryType()$/;"	f	struct:ConsignSelfHistoryType
ConsignSelfHistoryType	tmpcode/commond.h	/^struct ConsignSelfHistoryType$/;"	s
ConsignTrait	BillServer/StockConsign.h	/^struct ConsignTrait$/;"	s
Container	SuperServer/ServerManager.h	/^    typedef std::list<ServerTask *> Container;$/;"	t	class:ServerManager
Container	SuperServer/ServerTask.h	/^    typedef __gnu_cxx::hash_map<Cmd::Super::ServerEntry,bool,key_hash,key_equal> Container;$/;"	t	class:ServerTask
Container	base/ServerACL.h	/^	typedef std::map<const GameZone_t,ACLZone> Container;$/;"	t	class:ServerACL
Container	base/zThread.h	/^	typedef std::vector<zThread *> Container;  \/**< ÂÆπÂô®Á±ªÂûã *\/$/;"	t	class:zThreadGroup
Container_iterator	SuperServer/ServerManager.h	/^    typedef Container::iterator Container_iterator;$/;"	t	class:ServerManager
Containter_const_iterator	SuperServer/ServerManager.h	/^    typedef Container::const_iterator Containter_const_iterator;$/;"	t	class:ServerManager
Content	ScenesServer/QuestMaker.h	/^  class Content : public Maker<typename A::Base>$/;"	c	namespace:MakeFunction
CounterManager	ScenesServer/CounterManager.cpp	/^CounterManager::CounterManager()$/;"	f	class:CounterManager
CounterManager	ScenesServer/CounterManager.h	/^class CounterManager$/;"	c
CounterMember	base/CharBase.h	/^    CounterMember()$/;"	f	struct:CounterMember
CounterMember	base/CharBase.h	/^struct CounterMember$/;"	s
CounterType	base/CharBase.h	/^enum CounterType$/;"	g
CountrOrder	base/RecordCommand.h	/^    struct CountrOrder$/;"	s	namespace:Cmd::Record
CountrOrder	base/SessionCommand.h	/^    struct CountrOrder$/;"	s	namespace:Cmd::Session
CountryAllyActionEnum	tmpcode/commond.h	/^enum CountryAllyActionEnum $/;"	g
CountryDic	GatewayServer/CountryInfo.h	/^		CountryDic()$/;"	f	struct:CountryInfo::CountryDic
CountryDic	GatewayServer/CountryInfo.h	/^	struct CountryDic$/;"	s	class:CountryInfo
CountryDic	SessionServer/CountryInfo.h	/^		CountryDic()$/;"	f	struct:CountryInfo::CountryDic
CountryDic	SessionServer/CountryInfo.h	/^	struct CountryDic$/;"	s	class:CountryInfo
CountryGreatEvent	tmpcode/commond.h	/^struct CountryGreatEvent$/;"	s
CountryID	GatewayServer/GateUser.h	/^	DWORD CountryID;   \/\/ [ranqd] Add ∑˛ŒÒ∆˜ID$/;"	m	class:GateUser
CountryInfo	GatewayServer/CountryInfo.h	/^	CountryInfo()$/;"	f	class:CountryInfo
CountryInfo	GatewayServer/CountryInfo.h	/^class CountryInfo$/;"	c
CountryInfo	ScenesServer/SceneManager.h	/^    struct CountryInfo$/;"	s	class:SceneManager
CountryInfo	SessionServer/CountryInfo.h	/^	CountryInfo()$/;"	f	class:CountryInfo
CountryInfo	SessionServer/CountryInfo.h	/^class CountryInfo$/;"	c
CountryMap	GatewayServer/CountryInfo.h	/^	typedef std::map<DWORD,CountryDic> CountryMap;$/;"	t	class:CountryInfo
CountryMap	ScenesServer/SceneManager.h	/^    typedef std::map<DWORD,CountryInfo> CountryMap;$/;"	t	class:SceneManager
CountryMap_iter	GatewayServer/CountryInfo.h	/^	typedef CountryMap::iterator CountryMap_iter;$/;"	t	class:CountryInfo
CountryMap_iter	ScenesServer/SceneManager.h	/^    typedef CountryMap::iterator CountryMap_iter;$/;"	t	class:SceneManager
CountryMap_value_type	GatewayServer/CountryInfo.h	/^	typedef CountryMap::value_type CountryMap_value_type;$/;"	t	class:CountryInfo
CountryMap_value_type	ScenesServer/SceneManager.h	/^    typedef CountryMap::value_type CountryMap_value_type;$/;"	t	class:SceneManager
CountryOnline	base/SuperCommand.h	/^      CountryOnline[0];$/;"	m	struct:Cmd::Super::t_CountryOnline	typeref:struct:Cmd::Super::t_CountryOnline::Online
CountryPastKing	tmpcode/commond.h	/^struct CountryPastKing$/;"	s
CountryUserMap	GatewayServer/GateUserManager.h	/^	typedef __gnu_cxx::hash_map<DWORD,GateUser_SET> CountryUserMap;$/;"	t	class:GateUserManager
CountryUserMap_iter	GatewayServer/GateUserManager.h	/^	typedef CountryUserMap::iterator CountryUserMap_iter;$/;"	t	class:GateUserManager
Country_Info	base/Command.h	/^  Country_Info()$/;"	f	struct:Cmd::Country_Info
Country_Info	base/Command.h	/^struct  Country_Info$/;"	s	namespace:Cmd
Country_Info	tmpcode/commond.h	/^	Country_Info()$/;"	f	struct:Country_Info
Country_Info	tmpcode/commond.h	/^struct  Country_Info$/;"	s
Country_Online	base/SessionCommand.h	/^		Country_Online()$/;"	f	struct:Cmd::Session::Country_Online
Country_Online	base/SessionCommand.h	/^	struct Country_Online$/;"	s	namespace:Cmd::Session
CountrysVar	ScenesServer/Quest.h	/^typedef GlobalVarImpl<5> CountrysVar;$/;"	t
CountrysVarAction	ScenesServer/QuestAction.h	/^  CountrysVarAction(ScenesParser& p) : GlobalAction<Operation>(p)$/;"	f	class:CountrysVarAction
CountrysVarAction	ScenesServer/QuestAction.h	/^class CountrysVarAction : public GlobalAction<Operation>$/;"	c
CountrysVarCondition	ScenesServer/QuestCondition.h	/^  CountrysVarCondition(ScenesParser& p) : GlobalCondition<Operation>(p)$/;"	f	class:CountrysVarCondition
CountrysVarCondition	ScenesServer/QuestCondition.h	/^class CountrysVarCondition : public GlobalCondition<Operation>$/;"	c
CrusadeCastleKillTitle	tmpcode/commond.h	/^enum CrusadeCastleKillTitle$/;"	g
CrusadeCastlePointTitle	tmpcode/commond.h	/^enum CrusadeCastlePointTitle$/;"	g
DACHEN	tmpcode/commond.h	/^	 DACHEN,              \/\/¥Û≥º  $/;"	e	enum:__anon215
DAIBI_BUYSUIT_USERCMD_PARAMETER	tmpcode/commond.h	5115;"	d
DAILYGIFTBOX	tmpcode/commond.h	/^        DAILYGIFTBOX    =1,  \/\/√ø»’±¶œ‰$/;"	e	enum:__anon342
DANCER_STATE_PARA	tmpcode/commond.h	/^const BYTE DANCER_STATE_PARA = 5;$/;"	v
DANCE_GAME_CHALLENGE	tmpcode/commond.h	/^const BYTE DANCE_GAME_CHALLENGE = 7;                                 $/;"	v
DANCE_GAME_MAX_SEQUENCE	tmpcode/commond.h	/^const BYTE DANCE_GAME_MAX_SEQUENCE = 9;                              $/;"	v
DANCE_GAME_RETURN	tmpcode/commond.h	/^const BYTE DANCE_GAME_RETURN = 8;                                    $/;"	v
DANCE_GAME_SCORE	tmpcode/commond.h	/^const BYTE DANCE_GAME_SCORE = 6;                                     $/;"	v
DANCE_STYLE_ONE	tmpcode/commond.h	/^	 DANCE_STYLE_ONE,$/;"	e	enum:__anon292
DANCE_STYLE_THREE	tmpcode/commond.h	/^	 DANCE_STYLE_THREE,$/;"	e	enum:__anon292
DANCE_STYLE_TOTAL	tmpcode/commond.h	/^     DANCE_STYLE_TOTAL$/;"	e	enum:__anon292
DANCE_STYLE_TWO	tmpcode/commond.h	/^	 DANCE_STYLE_TWO,$/;"	e	enum:__anon292
DANCE_USERCMD	tmpcode/commond.h	/^const BYTE DANCE_USERCMD = 107;$/;"	v
DARE	base/Command.h	/^        DARE,  \/\/ ÂèëËµ∑ÊàñÊé•ÂèóÂ∏Æ‰ºöÊàò$/;"	e	enum:Cmd::UNIONPOWER
DARE	tmpcode/commond.h	/^	DARE,			   \/\/ ∑¢∆ªÚΩ” ‹∞Ôª·’Ω$/;"	e	enum:UNIONPOWER
DARE_CALL_DUTY	base/Command.h	/^const BYTE DARE_CALL_DUTY = 10;$/;"	v
DARE_CALL_DUTY	tmpcode/commond.h	/^const BYTE DARE_CALL_DUTY = 10;$/;"	v
DARE_COUNTRY_FORMAL_PARA	base/Command.h	/^const BYTE DARE_COUNTRY_FORMAL_PARA = 5;$/;"	v
DARE_GOLD	base/SessionCommand.h	/^      DARE_GOLD,\/\/ ÊåëÊàòÈáë$/;"	e	enum:Cmd::Session::__anon44
DARE_NO	base/Command.h	/^  DARE_NO         \/\/ ÊãíÁªùÊåëÊàò$/;"	e	enum:Cmd::__anon121
DARE_QUESTION	base/Command.h	/^  DARE_QUESTION,\/\/ ÂèëËµ∑ÊàñËØ¢ÈóÆÊåëÊàò$/;"	e	enum:Cmd::__anon121
DARE_RECORD_PLAN	base/Command.h	/^  DARE_RECORD_PLAN,\/\/ ÂΩìÂ§©ÂØπÊàòÂÆâÊéí$/;"	e	enum:Cmd::__anon111
DARE_RECORD_RESULT	base/Command.h	/^  DARE_RECORD_RESULT,\/\/ ÂØπÊàòÁªìÊûúËÆ∞ÂΩï$/;"	e	enum:Cmd::__anon111
DARE_RECORD_STAT	base/Command.h	/^  DARE_RECORD_STAT,\/\/ ÂØπÊàòÁªìÊûúÁªüËÆ°$/;"	e	enum:Cmd::__anon111
DARE_REPUTE_FOUR	base/Command.h	/^  DARE_REPUTE_FOUR = 4,$/;"	e	enum:Cmd::__anon122
DARE_REPUTE_ONE	base/Command.h	/^  DARE_REPUTE_ONE = 1,$/;"	e	enum:Cmd::__anon122
DARE_REPUTE_THREE	base/Command.h	/^  DARE_REPUTE_THREE = 3,$/;"	e	enum:Cmd::__anon122
DARE_REPUTE_TWO	base/Command.h	/^  DARE_REPUTE_TWO = 2,$/;"	e	enum:Cmd::__anon122
DARE_USERCMD	base/CmdType.h	/^const BYTE DARE_USERCMD                 = 28;$/;"	v
DARE_USERCMD	tmpcode/commond.h	/^const BYTE DARE_USERCMD			= 28;$/;"	v
DARE_YES	base/Command.h	/^  DARE_YES,\/\/ Êé•ÂèóÊåëÊàò$/;"	e	enum:Cmd::__anon121
DATAOSHA_INIT_SKILL_1	tmpcode/commond.h	/^const DWORD DATAOSHA_INIT_SKILL_1	= 3008;	\/\/ ¥ÛÃ”…±ƒ¨»œººƒ‹£∫Õ∆$/;"	v
DATAOSHA_INIT_SKILL_2	tmpcode/commond.h	/^const DWORD DATAOSHA_INIT_SKILL_2	= 3009;	\/\/ ¥ÛÃ”…±ƒ¨»œººƒ‹£∫æ™ª≈$/;"	v
DATAOSHA_SKILL_MAX	tmpcode/commond.h	/^const DWORD DATAOSHA_SKILL_MAX		= 3007;	\/\/ ¥ÛÃ”…±µ¿æﬂººƒ‹Ω· ¯$/;"	v
DATAOSHA_SKILL_MIN	tmpcode/commond.h	/^const DWORD DATAOSHA_SKILL_MIN		= 3000;	\/\/ ¥ÛÃ”…±µ¿æﬂººƒ‹∆ º$/;"	v
DATAOSHA_TYPE_WEAPON_LOSE	tmpcode/commond.h	/^	DATAOSHA_TYPE_WEAPON_LOSE,	\/\/ ¥ÛÃ”…±ÕÊº“±ª°∞«π°±π•ª˜∫ÛŒ‰∆˜œ˚ ß≥ˆ◊÷Ã· æ-"Œ‰∆˜±ªª˜¬‰"$/;"	e	enum:__anon250
DATAOSHA_USERCMD	tmpcode/commond.h	/^const BYTE DATAOSHA_USERCMD		= 111;$/;"	v
DATA_DECAYED_LINGQI_PARA	tmpcode/commond.h	/^const BYTE DATA_DECAYED_LINGQI_PARA = 14;$/;"	v
DATA_DECAYHOUSE_PARA	tmpcode/commond.h	/^const BYTE DATA_DECAYHOUSE_PARA = 11;$/;"	v
DATA_LINGQI_PARA	tmpcode/commond.h	20642;"	d
DATA_USERCMD	base/CmdType.h	/^const BYTE DATA_USERCMD      = 3;$/;"	v
DATA_USERCMD	tmpcode/commond.h	/^const BYTE DATA_USERCMD			= 3;$/;"	v
DBAccess	FLServer/DBAccessCommand.h	/^  namespace DBAccess$/;"	n	namespace:Cmd
DBField	base/zMetaData.h	/^	DBField(int fieldType,const std::string& fieldName) $/;"	f	class:DBField
DBField	base/zMetaData.h	/^class DBField$/;"	c
DBFieldSet	base/zMetaData.h	/^	DBFieldSet(){}$/;"	f	class:DBFieldSet
DBFieldSet	base/zMetaData.h	/^	explicit DBFieldSet(const std::string& tbn) : tableName(tbn)$/;"	f	class:DBFieldSet
DBFieldSet	base/zMetaData.h	/^class DBFieldSet$/;"	c
DBMetaData	base/zMetaData.h	/^	DBMetaData()$/;"	f	class:DBMetaData
DBMetaData	base/zMetaData.h	/^class DBMetaData$/;"	c
DBRecord	base/zMetaData.h	/^	DBRecord()$/;"	f	class:DBRecord
DBRecord	base/zMetaData.h	/^class DBRecord$/;"	c
DBRecordSet	base/zMetaData.h	/^	DBRecordSet()$/;"	f	class:DBRecordSet
DBRecordSet	base/zMetaData.h	/^class DBRecordSet$/;"	c
DBVarType	base/zMetaData.h	/^	DBVarType()$/;"	f	class:DBVarType
DBVarType	base/zMetaData.h	/^class DBVarType$/;"	c
DB_BIN	base/zDBConnPool.h	/^		DB_BIN,      \/**< ∂˛Ω¯÷∆ ˝æ›¿‡–Õ *\/$/;"	e	enum:zDBConnPool::__anon154
DB_BIN2	base/zDBConnPool.h	/^		DB_BIN2,    \/**< ¿©’π∂˛Ω¯÷∆ ˝æ›¿‡–Õ *\/$/;"	e	enum:zDBConnPool::__anon154
DB_BYTE	base/zDBConnPool.h	/^		DB_BYTE,    \/**< BYTE¿‡–Õ 1◊÷Ω⁄≥§∂» *\/$/;"	e	enum:zDBConnPool::__anon154
DB_CHAR	base/zDBConnPool.h	/^		DB_CHAR,    \/**< CHAR¿‡–Õ 1◊÷Ω⁄≥§∂» *\/$/;"	e	enum:zDBConnPool::__anon154
DB_DWORD	base/zDBConnPool.h	/^		DB_DWORD,    \/**< unsigned int¿‡–Õ 4◊÷Ω⁄≥§∂» *\/$/;"	e	enum:zDBConnPool::__anon154
DB_ERROR	FLServer/UserHttpPub.h	16;"	d
DB_QWORD	base/zDBConnPool.h	/^		DB_QWORD,    \/**< QWORD¿‡–Õ 8◊÷Ω⁄≥§∂» *\/$/;"	e	enum:zDBConnPool::__anon154
DB_STR	base/zDBConnPool.h	/^		DB_STR,      \/**< ◊÷∑˚¥Æ¿‡–Õ *\/$/;"	e	enum:zDBConnPool::__anon154
DB_WORD	base/zDBConnPool.h	/^		DB_WORD,    \/**< WORD¿‡–Õ 2◊÷Ω⁄≥§∂» *\/$/;"	e	enum:zDBConnPool::__anon154
DB_ZIP	base/zDBConnPool.h	/^		DB_ZIP,      \/**< zip—πÀı ˝æ›¿‡–Õ *\/$/;"	e	enum:zDBConnPool::__anon154
DB_ZIP2	base/zDBConnPool.h	/^		DB_ZIP2      \/**< ¿©’πzip—πÀı ˝æ›¿‡–Õ *\/$/;"	e	enum:zDBConnPool::__anon154
DDDDDDDDDD	base/Command.h	/^  BYTE DDDDDDDDDD;$/;"	m	struct:Cmd::t_UserData
DEATH_WRITEBACK	base/RecordCommand.h	/^      DEATH_WRITEBACK,\/\/Ê≠ª‰∫°$/;"	e	enum:Cmd::Record::enumWriteBackTest_Type
DEBUG	base/zLogger.h	/^	    static const zLevel * DEBUG;$/;"	m	class:zLogger::zLevel
DEBUG_NEW	base/zDebugNew.h	39;"	d
DECAY_FINISH_TIME_LINGQI_PARA	tmpcode/commond.h	/^const BYTE DECAY_FINISH_TIME_LINGQI_PARA = 20;$/;"	v
DECAY_HOUSE_LEVELUP	tmpcode/commond.h	/^	DECAY_HOUSE_LEVELUP = 3,        \/\/…˝º∂÷–$/;"	e	enum:__anon378
DECAY_HOUSE_RESTING	tmpcode/commond.h	/^	DECAY_HOUSE_RESTING = 2,        \/\/ø’œ–÷–$/;"	e	enum:__anon378
DECAY_HOUSE_USING	tmpcode/commond.h	/^	DECAY_HOUSE_USING   = 1,        \/\/ π”√÷–$/;"	e	enum:__anon378
DECLARE	ScenesServer/zObject.h	174;"	d
DECOMPOSE	tmpcode/commond.h	/^            DECOMPOSE = 6,$/;"	e	enum:ReuildType
DECOMPOSE_PROPERTY_USERCMD_PARA	base/Command.h	2929;"	d
DECOMPOSE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	7170;"	d
DECORATION_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE DECORATION_MAPSCREEN_USERCMD_PARA = 125;$/;"	v
DECORATION_USERCMD	tmpcode/commond.h	/^const BYTE DECORATION_USERCMD = 137;$/;"	v
DEDUCT_POINT	SessionServer/CRelationManager.h	15;"	d
DEFAULTMASTERALIAS	base/Union.h	79;"	d
DEFAULTMEMBERALIAS	base/Union.h	80;"	d
DEFAULT_BILL_TIMEOUT	BillServer/BillCache.h	15;"	d
DELETE_ERROR_SELECT_USERCMD_PARA	base/Command.h	/^const BYTE DELETE_ERROR_SELECT_USERCMD_PARA = 8;$/;"	v
DELETE_ERROR_SELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE DELETE_ERROR_SELECT_USERCMD_PARA = 8;$/;"	v
DELETE_SELECT_USERCMD_PARA	base/Command.h	/^const BYTE DELETE_SELECT_USERCMD_PARA = 4;$/;"	v
DELETE_SELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE DELETE_SELECT_USERCMD_PARA = 4;$/;"	v
DELMAPOBJECT_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE DELMAPOBJECT_MAPSCREEN_USERCMD_PARA = 21;$/;"	v
DELPET_PET_PARA	base/Command.h	/^const BYTE DELPET_PET_PARA = 6;$/;"	v
DELPET_PET_PARA	tmpcode/commond.h	/^const BYTE DELPET_PET_PARA = 6;$/;"	v
DELSKILL_PET_PARA	base/Command.h	/^const BYTE DELSKILL_PET_PARA = 7;$/;"	v
DEL_DECORATION	tmpcode/commond.h	/^	DEL_DECORATION = 2,$/;"	e	enum:__anon359
DEL_DECORATION_PARA	tmpcode/commond.h	/^const BYTE DEL_DECORATION_PARA = 2;$/;"	v
DEL_ENEMY_HAND_CARD_PROPERTY_CMD	base/HeroCardCmd.h	/^    const BYTE DEL_ENEMY_HAND_CARD_PROPERTY_CMD = 40;$/;"	v
DEL_ITEM_STALL_PARAMETER	tmpcode/commond.h	12254;"	d
DEL_MAIL_PARA	base/Command.h	/^const BYTE DEL_MAIL_PARA = 11;$/;"	v
DEL_MAIL_PARA	tmpcode/commond.h	/^const BYTE DEL_MAIL_PARA = 11;$/;"	v
DEL_NOTICE	tmpcode/commond.h	/^	DEL_NOTICE = 2,  \/\/≥∑œ˙$/;"	e	enum:putType
DEL_SOME_MAIL_PARA	tmpcode/commond.h	/^const BYTE DEL_SOME_MAIL_PARA = 15;$/;"	v
DEL_TEAM_RECRUIT_INFO_PARA	tmpcode/commond.h	/^const BYTE DEL_TEAM_RECRUIT_INFO_PARA = 4;$/;"	v
DEPS	BillServer/Makefile	/^DEPS = $(OBJS:%.o=.%.d)$/;"	m
DEPS	FLServer/Makefile	/^DEPS = $(OBJS:%.o=.%.d)$/;"	m
DEPS	GatewayServer/Makefile	/^DEPS = $(OBJS:%.o=.%.d)$/;"	m
DEPS	RecordServer/Makefile	/^DEPS = $(OBJS:%.o=.%.d)$/;"	m
DEPS	Robot/Makefile	/^DEPS = $(OBJS:%.o=.%.d)$/;"	m
DEPS	ScenesServer/Makefile	/^DEPS = $(OBJS:%.o=.%.d)$/;"	m
DEPS	SessionServer/Makefile	/^DEPS = $(OBJS:%.o=.%.d)$/;"	m
DEPS	SuperServer/Makefile	/^DEPS = $(OBJS:%.o=.%.d)$/;"	m
DEPS	base/EncDec/Makefile	/^DEPS = $(OBJS:%.o=.%.d)$/;"	m
DEPS	base/Makefile	/^DEPS = $(OBJS:%.o=.%.d)$/;"	m
DEPS	roleChangeServer/Makefile	/^DEPS = $(OBJS:%.o=.%.d)$/;"	m
DEPS	roleRegServer/Makefile	/^DEPS = $(OBJS:%.o=.%.d)$/;"	m
DESK_INFO_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE DESK_INFO_HOUSE_USER_CMD = 52;$/;"	v
DESTROYTIME	base/Sept.h	/^const DWORD DESTROYTIME          = 60;\/\/ 30*24*60*60; \/\/Õ∂∆±”––ß∆⁄ “ª∏ˆ‘¬µƒ√Î ˝$/;"	v
DESTROYTIME	base/Union.h	/^const DWORD DESTROYTIME        = 30*24*60*60; \/\/ÊäïÁ•®ÊúâÊïàÊúü ‰∏Ä‰∏™ÊúàÁöÑÁßíÊï∞$/;"	v
DESTROY_OBJECT_HOUSE_USER_CMD	tmpcode/commond.h	/^const  BYTE DESTROY_OBJECT_HOUSE_USER_CMD = 9;$/;"	v
DESTROY_TANK_PARA	tmpcode/commond.h	/^const BYTE DESTROY_TANK_PARA = 34;$/;"	v
DES_DECRYPT	base/EncDec/EncDec.h	98;"	d
DES_DECRYPT	base/EncDec/mydes.h	6;"	d
DES_ENCRYPT	base/EncDec/EncDec.h	97;"	d
DES_ENCRYPT	base/EncDec/mydes.h	5;"	d
DES_KEY_SZ	base/EncDec/EncDec.h	124;"	d
DES_KEY_SZ	base/EncDec/mydes.h	25;"	d
DES_LONG	base/EncDec/EncDec.h	101;"	d
DES_LONG	base/EncDec/mydes.h	8;"	d
DES_cblock	base/EncDec/EncDec.h	/^typedef unsigned char  DES_cblock[8];$/;"	t
DES_cblock	base/EncDec/mydes.h	/^typedef unsigned char DES_cblock[8];$/;"	t
DES_decrypt3	base/EncDec/mydes.cpp	/^void DES_decrypt3(DES_LONG *data,DES_key_schedule *ks1,$/;"	f
DES_encrypt1	base/EncDec/EncDec.cpp	/^void CEncrypt::DES_encrypt1( DES_LONG *data, DES_key_schedule *ks,int enc)$/;"	f	class:CEncrypt
DES_encrypt1	base/EncDec/mydes.cpp	/^void DES_encrypt1(DES_LONG *data,DES_key_schedule *ks1,int enc){$/;"	f
DES_encrypt2	base/EncDec/mydes.cpp	/^void DES_encrypt2(DES_LONG *data,DES_key_schedule *ks,int enc)$/;"	f
DES_encrypt3	base/EncDec/mydes.cpp	/^void DES_encrypt3(DES_LONG *data,DES_key_schedule *ks1,$/;"	f
DES_is_weak_key	base/EncDec/mydes.cpp	/^int DES_is_weak_key(const_DES_cblock *key)$/;"	f
DES_key_schedule	base/EncDec/EncDec.h	/^}  DES_key_schedule;$/;"	t	typeref:struct:DES_ks
DES_key_schedule	base/EncDec/mydes.h	/^} DES_key_schedule;$/;"	t	typeref:struct:DES_ks
DES_ks	base/EncDec/EncDec.h	/^typedef struct  DES_ks$/;"	s
DES_ks	base/EncDec/mydes.h	/^typedef struct DES_ks$/;"	s
DES_random_key	base/EncDec/EncDec.cpp	/^void CEncrypt::DES_random_key( DES_cblock *ret)$/;"	f	class:CEncrypt
DES_random_key	base/EncDec/mydes.cpp	/^void DES_random_key(DES_cblock *ret)	$/;"	f
DES_set_key	base/EncDec/EncDec.cpp	/^void CEncrypt::DES_set_key(const_DES_cblock *key, DES_key_schedule *schedule)$/;"	f	class:CEncrypt
DES_set_key	base/EncDec/mydes.cpp	/^void DES_set_key(const_DES_cblock *key,DES_key_schedule *schedule)$/;"	f
DES_set_odd_parity	base/EncDec/mydes.cpp	/^void DES_set_odd_parity(DES_cblock *key)$/;"	f
DETAIL_FIGHT_CONTENT_PARA	tmpcode/commond.h	/^const BYTE DETAIL_FIGHT_CONTENT_PARA = 4;$/;"	v
DETAIL_GIFT_PARA	base/Command.h	/^const BYTE DETAIL_GIFT_PARA = 4;$/;"	v
DETAIL_GIFT_PARA	tmpcode/commond.h	/^const BYTE DETAIL_GIFT_PARA = 4;$/;"	v
DEVELOP_SEPTSKILL_USERCMD	tmpcode/commond.h	/^const BYTE DEVELOP_SEPTSKILL_USERCMD = 2;$/;"	v
DEVOTE_EQUIP_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE DEVOTE_EQUIP_PROPERTY_USERCMD_PARA = 180;$/;"	v
DEVOTE_USERLEVEL_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE DEVOTE_USERLEVEL_PROPERTY_USERCMD_PARA = 181;$/;"	v
DG_COOL	tmpcode/commond.h	/^	DG_COOL, \/\/ Àß                                           $/;"	e	enum:__anon306
DG_GOOD	tmpcode/commond.h	/^	DG_GOOD, \/\/ ∫√                                           $/;"	e	enum:__anon306
DG_MAX_NUM	tmpcode/commond.h	/^	DG_MAX_NUM                                                   $/;"	e	enum:__anon306
DG_MISS	tmpcode/commond.h	/^	DG_MISS = 0,\/\/ ßŒÛ                                                                                                $/;"	e	enum:__anon306
DG_PERFECT	tmpcode/commond.h	/^	DG_PERFECT, \/\/ ÕÍ√¿                                      $/;"	e	enum:__anon306
DIE_HUA	tmpcode/commond.h	/^	DIE_HUA = 52001,\/\/µ˙ªØ$/;"	e	enum:__anon205
DIE_HUA_STATE_MAX	tmpcode/commond.h	/^const WORD DIE_HUA_STATE_MAX = 5;\/\/µ˙ªØººƒ‹◊¥Ã¨◊Ó¥Û÷µ$/;"	v
DIE_HUA_STATE_MIN	tmpcode/commond.h	/^const WORD DIE_HUA_STATE_MIN = 1;\/\/µ˙ªØººƒ‹◊¥Ã¨◊Ó–°÷µ$/;"	v
DIG_TREASURE_INTERRUPTED_PARA	tmpcode/commond.h	/^const BYTE DIG_TREASURE_INTERRUPTED_PARA = 2;$/;"	v
DIG_TREASURE_USERCMD	tmpcode/commond.h	/^const BYTE DIG_TREASURE_USERCMD = 126;$/;"	v
DIR	ScenesServer/QuestEvent.cpp	/^const std::string Trigger::Die::DIR = "on_die\/";$/;"	m	class:Trigger::Die
DIR	ScenesServer/QuestEvent.cpp	/^const std::string Trigger::Drop::DIR = "on_drop\/";$/;"	m	class:Trigger::Drop
DIR	ScenesServer/QuestEvent.cpp	/^const std::string Trigger::Enter::DIR = "on_enter\/";$/;"	m	class:Trigger::Enter
DIR	ScenesServer/QuestEvent.cpp	/^const std::string Trigger::Get::DIR = "on_get\/";$/;"	m	class:Trigger::Get
DIR	ScenesServer/QuestEvent.cpp	/^const std::string Trigger::Kill::DIR = "on_kill\/";$/;"	m	class:Trigger::Kill
DIR	ScenesServer/QuestEvent.cpp	/^const std::string Trigger::KillByLevel::DIR = "on_kill_by_level\/";$/;"	m	class:Trigger::KillByLevel
DIR	ScenesServer/QuestEvent.cpp	/^const std::string Trigger::KillBySelf::DIR = "on_kill_by_self\/";$/;"	m	class:Trigger::KillBySelf
DIR	ScenesServer/QuestEvent.cpp	/^const std::string Trigger::Other::DIR = "on_other\/";$/;"	m	class:Trigger::Other
DIR	ScenesServer/QuestEvent.cpp	/^const std::string Trigger::Quit::DIR = "on_quit\/";$/;"	m	class:Trigger::Quit
DIR	ScenesServer/QuestEvent.cpp	/^const std::string Trigger::Ride::DIR = "on_ride\/";$/;"	m	class:Trigger::Ride
DIR	ScenesServer/QuestEvent.cpp	/^const std::string Trigger::Timer::DIR = "on_timer\/";$/;"	m	class:Trigger::Timer
DIR	ScenesServer/QuestEvent.cpp	/^const std::string Trigger::Use::DIR = "on_use\/";$/;"	m	class:Trigger::Use
DIR	ScenesServer/QuestEvent.cpp	/^const std::string Trigger::Visit::DIR = "on_visit\/";$/;"	m	class:Trigger::Visit
DIR	ScenesServer/QuestEvent.h	/^    static const std::string DIR;$/;"	m	class:Trigger::Die
DIR	ScenesServer/QuestEvent.h	/^    static const std::string DIR;$/;"	m	class:Trigger::Drop
DIR	ScenesServer/QuestEvent.h	/^    static const std::string DIR;$/;"	m	class:Trigger::Enter
DIR	ScenesServer/QuestEvent.h	/^    static const std::string DIR;$/;"	m	class:Trigger::Get
DIR	ScenesServer/QuestEvent.h	/^    static const std::string DIR;$/;"	m	class:Trigger::Kill
DIR	ScenesServer/QuestEvent.h	/^    static const std::string DIR;$/;"	m	class:Trigger::KillByLevel
DIR	ScenesServer/QuestEvent.h	/^    static const std::string DIR;$/;"	m	class:Trigger::KillBySelf
DIR	ScenesServer/QuestEvent.h	/^    static const std::string DIR;$/;"	m	class:Trigger::Other
DIR	ScenesServer/QuestEvent.h	/^    static const std::string DIR;$/;"	m	class:Trigger::Quit
DIR	ScenesServer/QuestEvent.h	/^    static const std::string DIR;$/;"	m	class:Trigger::Ride
DIR	ScenesServer/QuestEvent.h	/^    static const std::string DIR;$/;"	m	class:Trigger::Timer
DIR	ScenesServer/QuestEvent.h	/^    static const std::string DIR;$/;"	m	class:Trigger::Use
DIR	ScenesServer/QuestEvent.h	/^    static const std::string DIR;$/;"	m	class:Trigger::Visit
DIRTYUSER_DEBUGGER	base/Command.h	/^    DIRTYUSER_DEBUGGER = 2,\/\/ ÂêØÁî®Ë∞ÉËØïÂô®Ë∞ÉËØïÊú¨ËøõÁ®ãÔºåÂèØËÉΩÊòØÂ§ñÊåÇÂà∂‰ΩúËÄÖ$/;"	e	enum:Cmd::DIRTYUSER_TYPE
DIRTYUSER_DLL_CALL	base/Command.h	/^    DIRTYUSER_DLL_CALL = 1,\/\/ Â§ñÈÉ®DLLË∞ÉÁî®Êú¨ËøõÁ®ãÂáΩÊï∞Ôºå‰∏ÄËà¨Â§ñÊåÇÁî®Êà∑$/;"	e	enum:Cmd::DIRTYUSER_TYPE
DIRTYUSER_TYPE	base/Command.h	/^enum DIRTYUSER_TYPE{$/;"	g	namespace:Cmd
DIRTY_USER_USERCMD_PARA	base/Command.h	3729;"	d
DISABLE	ScenesServer/QuestAction.h	/^    DISABLE = 2,    $/;"	e	enum:Action::__anon163
DISABLE_LOGIN	base/SceneCommand.h	/^      DISABLE_LOGIN,$/;"	e	enum:Cmd::Scene::ChangeCountryOper
DISABLE_REGISTER	base/SceneCommand.h	/^      DISABLE_REGISTER,$/;"	e	enum:Cmd::Scene::ChangeCountryOper
DISBURDEN_EQUIP_DRAGON_PARA	tmpcode/commond.h	/^const BYTE DISBURDEN_EQUIP_DRAGON_PARA = 19;$/;"	v
DISENABLEL_OGIN_COUNTRY_PARA	base/Command.h	5223;"	d
DISENABLEL_OGIN_COUNTRY_PARA	tmpcode/commond.h	20955;"	d
DISPLAY_HEALTHY_GMAE	tmpcode/commond.h	/^const BYTE DISPLAY_HEALTHY_GMAE = 71;$/;"	v
DISTRIBUTEUPOINT_PROPERTY_USERCMD_PARA	base/Command.h	2815;"	d
DISTRIBUTEUPOINT_PROPERTY_USERCMD_PARA	tmpcode/commond.h	11670;"	d
DIS_MERCENERY_COUNTRY_CMD	tmpcode/commond.h	30500;"	d
DIS_RECEIVE	base/RolechangeCommand.h	/^	DIS_RECEIVE,	\/\/æ‹æ¯Ω” ’ ˝æ›$/;"	e	enum:Cmd::Rolechange::__anon22
DIYU_RUSH	tmpcode/commond.h	/^	DIYU_RUSH = 23104, \/\/µÿ”¸≥Â∑Ê$/;"	e	enum:__anon205
DIY_ADORN	tmpcode/commond.h	/^	DIY_ADORN                 \/\/ ≥«∞Óπ§Ω≥÷∞Œª$/;"	e	enum:UNIONPOWER
DOING	ScenesServer/Quest.h	/^    DOING = 0,$/;"	e	enum:Quest::__anon180
DONATE_HONOR_PARA	base/Command.h	/^const BYTE DONATE_HONOR_PARA = 17;$/;"	v
DOUQI_RUSH	tmpcode/commond.h	/^	DOUQI_RUSH = 3113,\/\/∂∑∆¯≥Â∑Ê$/;"	e	enum:__anon205
DOU_QI_QUAN	tmpcode/commond.h	/^	DOU_QI_QUAN = 31108,\/\/∂∑∆¯»≠$/;"	e	enum:__anon205
DOWN	tmpcode/commond.h	/^	DOWN  = 2,   \/\/œ¬º‹  $/;"	e	enum:MERCH_STATE
DO_PLANT_ACTION	tmpcode/commond.h	/^const BYTE DO_PLANT_ACTION = 6;$/;"	v
DRAGONRIDE_PET_PATA	tmpcode/commond.h	/^const BYTE DRAGONRIDE_PET_PATA = 19;$/;"	v
DRAGONTOTEM_USERCMD	tmpcode/commond.h	/^const BYTE DRAGONTOTEM_USERCMD = 146;$/;"	v
DRAGON_ACTION_TYPE	tmpcode/commond.h	/^enum DRAGON_ACTION_TYPE$/;"	g
DRAGON_CHALLENGE	tmpcode/commond.h	/^        DRAGON_CHALLENGE        = 0x00000004, \/\/ÃÙ’Ω$/;"	e	enum:DRAGON_ACTION_TYPE
DRAGON_CHAT_IN_CHALLENGE_DRAGON_PARA	tmpcode/commond.h	/^const BYTE DRAGON_CHAT_IN_CHALLENGE_DRAGON_PARA = 21;$/;"	v
DRAGON_CONSIGN_QUEST	tmpcode/commond.h	/^        DRAGON_CONSIGN_QUEST    = 0x00000001, \/\/ŒØÕ–»ŒŒÒ$/;"	e	enum:DRAGON_ACTION_TYPE
DRAGON_DATA_PARA	tmpcode/commond.h	/^const BYTE DRAGON_DATA_PARA = 5;$/;"	v
DRAGON_DATA_TYPE	tmpcode/commond.h	/^enum DRAGON_DATA_TYPE$/;"	g
DRAGON_FEED	tmpcode/commond.h	/^        DRAGON_FEED             = 0x000000016,\/\/Œπ—¯$/;"	e	enum:DRAGON_ACTION_TYPE
DRAGON_FEILONG_RIDE_PET_PATA	tmpcode/commond.h	/^const BYTE DRAGON_FEILONG_RIDE_PET_PATA = 37;$/;"	v
DRAGON_FIND_TREASURE	tmpcode/commond.h	/^        DRAGON_FIND_TREASURE    = 0x00000002, \/\/Õ‚≥ˆ—∞±¶$/;"	e	enum:DRAGON_ACTION_TYPE
DRAGON_ISLAND_MAZE_BOSS_STATE	tmpcode/commond.h	/^const BYTE DRAGON_ISLAND_MAZE_BOSS_STATE = 51;$/;"	v
DRAGON_ISLAND_MAZE_TREASURE_BOX_POS	tmpcode/commond.h	/^const BYTE DRAGON_ISLAND_MAZE_TREASURE_BOX_POS = 50;$/;"	v
DRAGON_ISLAND_MAZE_USER_END_TIME	tmpcode/commond.h	/^const BYTE DRAGON_ISLAND_MAZE_USER_END_TIME = 52;$/;"	v
DRAGON_TRAINING	tmpcode/commond.h	/^        DRAGON_TRAINING         = 0x00000008, \/\/—µ¡∑$/;"	e	enum:DRAGON_ACTION_TYPE
DRAGON_USERCMD	tmpcode/commond.h	/^const BYTE DRAGON_USERCMD = 147;$/;"	v
DRAON_CHAT_NUMS	tmpcode/commond.h	/^const BYTE DRAON_CHAT_NUMS = 5; \/\/¡˙≥ËÀµª∞◊‹Ãı ˝$/;"	v
DRAWEXP_CARTOON_PARA	base/Command.h	8246;"	d
DRAW_DAILYBOX_AWARD_PARA	tmpcode/commond.h	/^const BYTE DRAW_DAILYBOX_AWARD_PARA = 174;$/;"	v
DRAW_LEVELUPBOX_AWARD_PARA	tmpcode/commond.h	/^const BYTE DRAW_LEVELUPBOX_AWARD_PARA = 176;$/;"	v
DRAW_OVERDUE_CRYSTAL_WEEK_ASSURANCE_PARA	tmpcode/commond.h	/^const BYTE DRAW_OVERDUE_CRYSTAL_WEEK_ASSURANCE_PARA = 39;$/;"	v
DRAW_WEEK_ASSURANCE_PARA	tmpcode/commond.h	/^const BYTE DRAW_WEEK_ASSURANCE_PARA = 32;$/;"	v
DRINK_BEER	tmpcode/commond.h	/^	 DRINK_BEER,$/;"	e	enum:__anon288
DRINK_COCKTAIL	tmpcode/commond.h	/^	 DRINK_COCKTAIL,$/;"	e	enum:__anon288
DRINK_TITLE	tmpcode/commond.h	/^	 DRINK_TITLE,$/;"	e	enum:__anon288
DRINK_USQUEBAUGH	tmpcode/commond.h	/^	 DRINK_USQUEBAUGH,$/;"	e	enum:__anon288
DRINK_WATER	tmpcode/commond.h	/^	 DRINK_WATER = 1,$/;"	e	enum:__anon288
DRINK_WINE	tmpcode/commond.h	/^	 DRINK_WINE,$/;"	e	enum:__anon288
DRIVE_AWAY_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE DRIVE_AWAY_HOUSE_USER_CMD = 20;$/;"	v
DROP_CITY_DEF_ITEM	tmpcode/commond.h	/^const BYTE DROP_CITY_DEF_ITEM = 209;$/;"	v
DROP_OBJ_SEPT_POPO_PARA	tmpcode/commond.h	26532;"	d
DROP_ZHANLING_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE DROP_ZHANLING_ZHENXUAN_PARA = 21;$/;"	v
DRUNKSTATE_BIGFIRE_PARA	tmpcode/commond.h	/^const BYTE DRUNKSTATE_BIGFIRE_PARA = 6;$/;"	v
DRUNKSTATE_GOUHUO_PARA	tmpcode/commond.h	/^const BYTE DRUNKSTATE_GOUHUO_PARA = 4;$/;"	v
DUJIAO_RUSH	tmpcode/commond.h	/^	DUJIAO_RUSH = 13104, \/\/∂¿Ω«≥Â∑Ê$/;"	e	enum:__anon205
DUN_JI	tmpcode/commond.h	/^    DUN_JI	= 2107,	\/\/∂‹ª˜$/;"	e	enum:__anon205
DURABIILTY_USERCMD_PARA	base/Command.h	/^const BYTE DURABIILTY_USERCMD_PARA = 31;$/;"	v
DURABIILTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE DURABIILTY_USERCMD_PARA = 31;$/;"	v
DWORD	base/zType.h	/^typedef unsigned int DWORD;$/;"	t
DYN_LIB_ENCDEC	base/EncDec/Makefile	/^DYN_LIB_ENCDEC = ..\/libencdec.so$/;"	m
DYN_LIB_ZEBRA	base/Makefile	/^DYN_LIB_ZEBRA = libzebra.so$/;"	m
D_ENCRYPT	base/EncDec/EncDec.h	131;"	d
D_ENCRYPT	base/EncDec/mydes.h	32;"	d
D_RC5_32	base/EncDec/EncDec.h	80;"	d
D_RC5_32	base/EncDec/myrc5.h	68;"	d
DaggerAddDam	ScenesServer/ScenePk.h	/^	  SWORD DaggerAddDam;	\/\/sky Â¢ûÂä†ÂåïÈ¶ñ‰º§ÂÆ≥ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
DaggerAddDamA	ScenesServer/ScenePk.h	/^	  SWORD DaggerAddDamA;	\/\/sky Â¢ûÂä†ÂåïÈ¶ñ‰º§ÂÆ≥Âõ∫ÂÆöÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
Daggerflag	ScenesServer/SceneEntryPk.h	/^	bool Daggerflag;	\/\/sky ÂåïÈ¶ñÂ¢ûÂä†‰º§ÂÆ≥Ê†áÂøó$/;"	m	struct:SceneEntryPk
DanceGamePerfectEnum	tmpcode/commond.h	/^} DanceGamePerfectEnum;                                              $/;"	t	typeref:enum:__anon306
DarkAddDam	ScenesServer/ScenePk.h	/^	  SWORD DarkAddDam;		\/\/sky Â¢ûÂä†ÈªëÊöóÈ≠îÊ≥ï‰º§ÂÆ≥ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
DarkAddDamA	ScenesServer/ScenePk.h	/^	  SWORD DarkAddDamA;	\/\/sky Â¢ûÂä†ÈªëÊöóÈ≠îÊ≥ï‰º§ÂÆ≥Âõ∫ÂÆöÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
Darkflag	ScenesServer/SceneEntryPk.h	/^	bool Darkflag;		\/\/sky ÈªëÊöóÈ≠îÊ≥ïÂ¢ûÂä†‰º§ÂÆ≥Ê†áÂøó$/;"	m	struct:SceneEntryPk
Data	SuperServer/RoleregCache.h	/^      Data(const Cmd::Super::t_Charname_Gateway &cmd)$/;"	f	struct:RoleregCache::Data
Data	SuperServer/RoleregCache.h	/^      Data(const Data &data)$/;"	f	struct:RoleregCache::Data
Data	SuperServer/RoleregCache.h	/^    struct Data$/;"	s	class:RoleregCache
DataCache	SuperServer/RoleregCache.h	/^    typedef std::list<Data> DataCache;$/;"	t	class:RoleregCache
Datas	base/Command.h	/^	} Datas[0];$/;"	m	struct:Cmd::stUpdateShopAdvcmd	typeref:struct:Cmd::stUpdateShopAdvcmd::stAdv
DecayHouseBaseData	tmpcode/commond.h	/^	DecayHouseBaseData()$/;"	f	struct:DecayHouseBaseData
DecayHouseBaseData	tmpcode/commond.h	/^struct DecayHouseBaseData$/;"	s
DecayHouseSession	tmpcode/commond.h	/^	DecayHouseSession() : level(0), usingState(0), canOfferForFriend(false) {}$/;"	f	struct:DecayHouseSession
DecayHouseSession	tmpcode/commond.h	/^struct DecayHouseSession$/;"	s
DecayNewLingQi	tmpcode/commond.h	/^	DecayNewLingQi()$/;"	f	struct:DecayNewLingQi
DecayNewLingQi	tmpcode/commond.h	/^struct DecayNewLingQi$/;"	s
Del	ScenesServer/SceneUserManager.cpp	/^struct Del $/;"	s
DelProtectOverdue	ScenesServer/zObject.h	/^  bool DelProtectOverdue()$/;"	f	struct:zSceneObject
DestInfo	tmpcode/commond.h	/^	DestInfo()$/;"	f	struct:DestInfo
DestInfo	tmpcode/commond.h	/^struct DestInfo$/;"	s
Die	ScenesServer/QuestEvent.h	/^  class Die$/;"	c	namespace:Trigger
Differ	ScenesServer/QuestCondition.h	/^  class Differ$/;"	c	namespace:Op
Dir	tmpcode/commond.h	/^	BYTE	Dir;$/;"	m	struct:FurnitureMapData
Dir	tmpcode/commond.h	/^	BYTE	Dir;$/;"	m	struct:stNotifyAddFurnitureHomeUserCmd
Div	ScenesServer/QuestAction.h	/^  class Div$/;"	c	namespace:Op
DragonEquip	tmpcode/commond.h	/^    struct DragonEquip$/;"	s	struct:t_DragonData
Drop	ScenesServer/QuestEvent.h	/^  class Drop$/;"	c	namespace:Trigger
DropFromPack	ScenesServer/zObject.cpp	/^DropFromPack::DropFromPack(const Packages* ps,const Param& p) : _ps(ps),_p(p)$/;"	f	class:DropFromPack
DropFromPack	ScenesServer/zObject.h	/^struct DropFromPack : public PackageCallback$/;"	s
DropRate	ScenesServer/ScenesServer.h	/^    int DropRate;$/;"	m	class:ScenesService
DropRateLevel	ScenesServer/ScenesServer.h	/^    int DropRateLevel;$/;"	m	class:ScenesService
EARTHQUAKE_USERCMD	tmpcode/commond.h	/^const BYTE EARTHQUAKE_USERCMD = 83;$/;"	v
EBONY	base/Command.h	/^  EBONY  =5,\/\/‰πåÊú®$/;"	e	enum:Cmd::__anon102
EI_BODY	tmpcode/commond.h	/^    EI_BODY,        \/\/ 0$/;"	e	enum:__anon248
EI_BOOTS	tmpcode/commond.h	/^    EI_BOOTS,       \/\/ 6 $/;"	e	enum:__anon248
EI_HANDL	tmpcode/commond.h	/^    EI_HANDL,       \/\/ 5$/;"	e	enum:__anon248
EI_HANDR	tmpcode/commond.h	/^    EI_HANDR,       \/\/ 4$/;"	e	enum:__anon248
EI_HEAD	tmpcode/commond.h	/^    EI_HEAD,        \/\/ 1$/;"	e	enum:__anon248
EI_ILLEGAL	tmpcode/commond.h	/^	EI_ILLEGAL ,$/;"	e	enum:__anon248
EI_MAX_EFFECT_NUM	tmpcode/commond.h	/^    EI_MAX_EFFECT_NUM,   \/\/ 8$/;"	e	enum:__anon248
EI_OTHER	tmpcode/commond.h	/^    EI_OTHER,       \/\/ 7 $/;"	e	enum:__anon248
EI_SHOULDERL	tmpcode/commond.h	/^    EI_SHOULDERL,   \/\/ 3$/;"	e	enum:__anon248
EI_SHOULDERR	tmpcode/commond.h	/^    EI_SHOULDERR,   \/\/ 2$/;"	e	enum:__anon248
ELECHAMMER	tmpcode/commond.h	/^			ELECHAMMER = 20,    \/\/ π”√±¶ Ø¥∏$/;"	e	enum:ReuildType
EMBRANCHMENT	ScenesServer/QuestEvent.h	/^  typedef __gnu_cxx::hash_map<DWORD,Embranchment *> EMBRANCHMENT; \/\/embranchment_id$/;"	t	class:Event
EMOTE_QUEST_PARA	tmpcode/commond.h	/^const BYTE EMOTE_QUEST_PARA  = 14;     \/\/øÕªß∂À∑¢ÀÕ¥Àœ˚œ¢¥•∑¢≈›≈›±Ì«È“˝∆µƒ ¬º˛÷¥–– $/;"	v
EMPEROR_DARE	base/Command.h	/^  EMPEROR_DARE  = 7,\/\/ ÁöáÂüé‰∫âÂ§∫Êàò$/;"	e	enum:Cmd::__anon120
EMPEROR_DARE	base/SessionCommand.h	/^      EMPEROR_DARE,\/\/ ÁöáÂüé‰∫âÂ§∫Êàò$/;"	e	enum:Cmd::Session::__anon42
EMPEROR_GOLD	base/SessionCommand.h	/^      EMPEROR_GOLD,\/\/ ÁöáÂ∏ùÊØèÊó•Â•ñÂä±Èáë$/;"	e	enum:Cmd::Session::__anon44
EMPEROR_HORSE_ID	ScenesServer/SceneNpc.h	/^const DWORD EMPEROR_HORSE_ID = 3202;\/\/ÁöáÂ∏ùÁöÑÈ©¨ID$/;"	v
EMPEROR_PUNISH_COUNTRY_PARA	base/Command.h	5298;"	d
EMPLOY_NPC_AD_PARA	tmpcode/commond.h	/^const BYTE EMPLOY_NPC_AD_PARA = 12;$/;"	v
ENABLE_LOGIN	base/SceneCommand.h	/^      ENABLE_LOGIN,$/;"	e	enum:Cmd::Scene::ChangeCountryOper
ENABLE_REGISTER	base/SceneCommand.h	/^      ENABLE_REGISTER,$/;"	e	enum:Cmd::Scene::ChangeCountryOper
ENA_RECEIVE	base/RolechangeCommand.h	/^	ENA_RECEIVE,	\/\/ø…“‘Ω” ‹ ˝æ›$/;"	e	enum:Cmd::Rolechange::__anon22
ENCDEC_DES	base/EncDec/EncDec.h	/^    ENCDEC_DES,$/;"	e	enum:CEncrypt::encMethod
ENCDEC_NONE	base/EncDec/EncDec.h	/^    ENCDEC_NONE,$/;"	e	enum:CEncrypt::encMethod
ENCDEC_RC5	base/EncDec/EncDec.h	/^    ENCDEC_RC5$/;"	e	enum:CEncrypt::encMethod
ENCHANCE	tmpcode/commond.h	/^            ENCHANCE = 5,$/;"	e	enum:ReuildType
ENCHASEL_PROPERTY_USERCMD_PARA	base/Command.h	2892;"	d
ENCHASEL_PROPERTY_USERCMD_PARA	tmpcode/commond.h	4683;"	d
ENDOFINITDATA_DATA_USERCMD_PARA	base/Command.h	/^const BYTE ENDOFINITDATA_DATA_USERCMD_PARA = 255;$/;"	v
ENDREAD_HEROISLAND_PARA	tmpcode/commond.h	/^const BYTE ENDREAD_HEROISLAND_PARA = 2;$/;"	v
END_CHAT_GM_USER_PARA	tmpcode/commond.h	22875;"	d
END_DAREPRAY_PARA	tmpcode/commond.h	/^const BYTE END_DAREPRAY_PARA = 15;$/;"	v
END_DIG_TREASURE_PARA	tmpcode/commond.h	/^const BYTE END_DIG_TREASURE_PARA = 3;$/;"	v
END_PLAYSOUND_QUEST_PARA	tmpcode/commond.h	/^static const BYTE END_PLAYSOUND_QUEST_PARA  = 11; \/\/Õ£÷π≤•∑≈“Ù¿÷$/;"	v
END_PUNISH_SPECIAL_CMD_PARA	tmpcode/commond.h	/^static const BYTE END_PUNISH_SPECIAL_CMD_PARA = 9;$/;"	v
END_RECALL_SEPT_CMD	tmpcode/commond.h	/^const BYTE END_RECALL_SEPT_CMD = 121;$/;"	v
END_STOVE_DATA_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE END_STOVE_DATA_PROPERTY_USERCMD_PARA = 164;$/;"	v
ENEMY_LIST_PARA	tmpcode/commond.h	6058;"	d
ENERGY_TRANSFORM_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ENERGY_TRANSFORM_USERCMD_PARA = 228;$/;"	v
ENOUGH_MONEY	tmpcode/commond.h	/^	 ENOUGH_MONEY,	\/\/◊„πªΩ«Æ$/;"	e	enum:__anon296
ENTER_DT	tmpcode/commond.h	/^const BYTE ENTER_DT = 5;$/;"	v
ENTER_EMPEROR_DARE_ACTIVE	base/Command.h	/^const BYTE ENTER_EMPEROR_DARE_ACTIVE = 9;$/;"	v
ENTER_EMPEROR_DARE_ZONE	base/Command.h	/^const BYTE ENTER_EMPEROR_DARE_ZONE = 8;$/;"	v
ENTER_MAXLEVEL_LIMIT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ENTER_MAXLEVEL_LIMIT_USERCMD_PARA = 2;$/;"	v
ENTER_RESIDENTBATTLE	tmpcode/commond.h	/^const BYTE ENTER_RESIDENTBATTLE = 8 ;   $/;"	v
ENTER_TRANS_PROPERTY_USERCMD_PARA	tmpcode/commond.h	24276;"	d
ENTER_UNION_CITY_AREA_PARA	base/Command.h	/^const BYTE ENTER_UNION_CITY_AREA_PARA = 17;$/;"	v
ENTER_UNION_CITY_AREA_PARA	tmpcode/commond.h	/^ const BYTE ENTER_UNION_CITY_AREA_PARA = 17;$/;"	v
ENTRY_STATE	base/CharBase.h	/^  ENTRY_STATE,\/\/Èòü‰ºç$/;"	e	enum:TempArchiveType
EQUIP1_PACK	ScenesServer/zCard.h	/^      EQUIP1_PACK = 16,$/;"	e	enum:CardSlots::__anon197
EQUIP2_PACK	ScenesServer/zCard.h	/^      EQUIP2_PACK = 32,$/;"	e	enum:CardSlots::__anon197
EQUIPACTION_AUTOGET	tmpcode/commond.h	/^        EQUIPACTION_AUTOGET,    \/\/\/ ◊‘∂Ø ∞»°ŒÔ∆∑$/;"	e	enum:__anon228
EQUIPACTION_DROP	base/Command.h	/^  EQUIPACTION_DROP,\/\/\/ Ë£ÖÂ§á‰∏¢ÂºÉ$/;"	e	enum:Cmd::__anon87
EQUIPACTION_DROP	tmpcode/commond.h	/^        EQUIPACTION_DROP,		\/\/\/ ◊∞±∏∂™∆˙$/;"	e	enum:__anon228
EQUIPACTION_INIT	base/Command.h	/^  EQUIPACTION_INIT,\/\/\/ ÂàùÂßãË£ÖÂ§á$/;"	e	enum:Cmd::__anon87
EQUIPACTION_INIT	tmpcode/commond.h	/^        EQUIPACTION_INIT,       \/\/\/ ≥ı º◊∞±∏$/;"	e	enum:__anon228
EQUIPACTION_MOVE	base/Command.h	/^  EQUIPACTION_MOVE,\/\/\/ ÁßªÂä®Ë£ÖÂ§á$/;"	e	enum:Cmd::__anon87
EQUIPACTION_MOVE	tmpcode/commond.h	/^        EQUIPACTION_MOVE,       \/\/\/ “∆∂Ø◊∞±∏$/;"	e	enum:__anon228
EQUIPACTION_OBTAIN	base/Command.h	/^  EQUIPACTION_OBTAIN,\/\/\/ Ë£ÖÂ§áËé∑Âæó$/;"	e	enum:Cmd::__anon87
EQUIPACTION_OBTAIN	tmpcode/commond.h	/^        EQUIPACTION_OBTAIN,		\/\/\/ ◊∞±∏ªÒµ√$/;"	e	enum:__anon228
EQUIPACTION_REFRESH	base/Command.h	/^  EQUIPACTION_REFRESH,\/\/\/ Âà∑Êñ∞Ë£ÖÂ§á$/;"	e	enum:Cmd::__anon87
EQUIPACTION_REFRESH	tmpcode/commond.h	/^        EQUIPACTION_REFRESH,    \/\/\/ À¢–¬◊∞±∏$/;"	e	enum:__anon228
EQUIPACTION_SHATTER	base/Command.h	/^  EQUIPACTION_SHATTER,\/\/\/ Ë£ÖÂ§áÊçüÂùè$/;"	e	enum:Cmd::__anon87
EQUIPACTION_SHATTER	tmpcode/commond.h	/^        EQUIPACTION_SHATTER,    \/\/\/ ◊∞±∏Àªµ$/;"	e	enum:__anon228
EQUIPAWARD	tmpcode/commond.h	/^enum EQUIPAWARD$/;"	g
EQUIPCELLTYPE_ADORN	base/Command.h	/^  EQUIPCELLTYPE_ADORN=13,\/\/\/ Ë£ÖÈ•∞ÂìÅ$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_AUTOADDBLOOD	base/Command.h	/^  EQUIPCELLTYPE_AUTOADDBLOOD=21				\/\/Ëá™Âä®Âä†Ë°Ä$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_BELT	base/Command.h	/^  EQUIPCELLTYPE_BELT=8,\/\/\/ ËÖ∞Â∏¶$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_BODY	base/Command.h	/^  EQUIPCELLTYPE_BODY=2,\/\/\/ ÊúçË£Ö$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_BOWLDER	base/Command.h	/^  EQUIPCELLTYPE_BOWLDER=19,			\/\/Áéâ‰Ω©$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_CUFF	base/Command.h	/^  EQUIPCELLTYPE_CUFF=16,				\/\/Êä§ËÖï$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_FASHION	base/Command.h	/^  EQUIPCELLTYPE_FASHION=20,				\/\/Êó∂Ë£Ö$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_GLOVE	base/Command.h	/^  EQUIPCELLTYPE_GLOVE=15,				\/\/ÊâãÂ•ó$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_GLOVES	base/Command.h	/^  EQUIPCELLTYPE_GLOVES=6,\/\/\/ ÊâãÂ•ó,ÊâãÈïØ$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_HANDL	base/Command.h	/^  EQUIPCELLTYPE_HANDL=4,\/\/\/ Â∑¶Êâã$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_HANDR	base/Command.h	/^  EQUIPCELLTYPE_HANDR=3,\/\/\/ Âè≥Êâã$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_HELM	base/Command.h	/^  EQUIPCELLTYPE_HELM=1,\/\/\/ Â§¥Áõî$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_LEFT	base/Command.h	/^  EQUIPCELLTYPE_LEFT,\/\/\/Â∑¶Ëæπ$/;"	e	enum:Cmd::__anon86
EQUIPCELLTYPE_MAKE	base/Command.h	/^  EQUIPCELLTYPE_MAKE=12,\/\/\/ ÂêàÊàê„ÄÅÂçáÁ∫ßÔºåÈï∂ÂµåÁöÑÂåÖË£π$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_MANTEAU	base/Command.h	/^  EQUIPCELLTYPE_MANTEAU=17,					\/\/Êä´È£é$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_NECKLACE	base/Command.h	/^  EQUIPCELLTYPE_NECKLACE=5,\/\/\/ È°πÈìæ$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_NONE	base/Command.h	/^  EQUIPCELLTYPE_NONE=0,\/\/\/ ‰∏çËÉΩË£ÖÂ§á$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_OTHER	base/Command.h	/^  EQUIPCELLTYPE_OTHER=10,\/\/\/ ÁâπÊÆäÁâ©ÂìÅ,ÊØîÂ¶ÇÈ©¨Áâå$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_PACKAGE	base/Command.h	/^  EQUIPCELLTYPE_PACKAGE=11,\/\/\/ Ë£ÖÂ§áÁöÑÂåÖË£π$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_RIGHT	base/Command.h	/^  EQUIPCELLTYPE_RIGHT,\/\/\/Âè≥Ëæπ$/;"	e	enum:Cmd::__anon86
EQUIPCELLTYPE_RING	base/Command.h	/^  EQUIPCELLTYPE_RING=7,\/\/\/ ÊàíÊåá$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_SHOES	base/Command.h	/^  EQUIPCELLTYPE_SHOES=9,\/\/\/ ÈûãÂ≠ê$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_SHOULDER	base/Command.h	/^  EQUIPCELLTYPE_SHOULDER=18,				\/\/ËÇ©ËÜÄ$/;"	e	enum:Cmd::__anon85
EQUIPCELLTYPE_TROUSERS	base/Command.h	/^  EQUIPCELLTYPE_TROUSERS=14,				\/\/Ë£§Â≠ê$/;"	e	enum:Cmd::__anon85
EQUIPJOB_ENERGY_MAX1	tmpcode/commond.h	/^const DWORD EQUIPJOB_ENERGY_MAX1 = 200;$/;"	v
EQUIPJOB_ENERGY_MAX2	tmpcode/commond.h	/^const DWORD EQUIPJOB_ENERGY_MAX2 = 700;$/;"	v
EQUIPJOB_ENERGY_MAX3	tmpcode/commond.h	/^const DWORD EQUIPJOB_ENERGY_MAX3 = 1700;$/;"	v
EQUIPJOB_ENERGY_MAX4	tmpcode/commond.h	/^const DWORD EQUIPJOB_ENERGY_MAX4 = 4200;$/;"	v
EQUIPJOB_ENERGY_MAX5	tmpcode/commond.h	/^const DWORD EQUIPJOB_ENERGY_MAX5 = 9200;$/;"	v
EQUIPJOB_ITEN_COMMON1	tmpcode/commond.h	/^const DWORD EQUIPJOB_ITEN_COMMON1 = 66301;  \/\/ø…∂‘50£¨60£¨70£¨80º∂µƒ“¬∑˛≥Âƒ‹     ‘ˆº”1~2º∂ººƒ‹$/;"	v
EQUIPJOB_ITEN_COMMON2	tmpcode/commond.h	/^const DWORD EQUIPJOB_ITEN_COMMON2 = 66302;  \/\/ø…∂‘90£¨100£¨110£¨120º∂µƒ“¬∑˛≥Âƒ‹  ‘ˆº”1~2º∂ººƒ‹$/;"	v
EQUIPJOB_ITEN_COMMON3	tmpcode/commond.h	/^const DWORD EQUIPJOB_ITEN_COMMON3 = 66303;  \/\/ø…∂‘50£¨60£¨70£¨80º∂µƒ“¬∑˛≥Âƒ‹     ‘ˆº”3~4º∂ººƒ‹$/;"	v
EQUIPJOB_ITEN_COMMON4	tmpcode/commond.h	/^const DWORD EQUIPJOB_ITEN_COMMON4 = 66304;  \/\/ø…∂‘90£¨100£¨110£¨120º∂µƒ“¬∑˛≥Âƒ‹  ‘ˆº”3~4º∂ººƒ‹$/;"	v
EQUIPJOB_ITEN_COMMON5	tmpcode/commond.h	/^const DWORD EQUIPJOB_ITEN_COMMON5 = 66305;  \/\/ø…∂‘50£¨60£¨70£¨80º∂µƒ“¬∑˛≥Âƒ‹     ‘ˆº”5º∂ººƒ‹$/;"	v
EQUIPJOB_ITEN_COMMON6	tmpcode/commond.h	/^const DWORD EQUIPJOB_ITEN_COMMON6 = 66306;  \/\/ø…∂‘90£¨100£¨110£¨120º∂µƒ“¬∑˛≥Âƒ‹  ‘ˆº”5º∂ººƒ‹$/;"	v
EQUIPJOB_ITEN_MAX1	tmpcode/commond.h	/^const DWORD EQUIPJOB_ITEN_MAX1 = 66072;$/;"	v
EQUIPJOB_ITEN_MAX2	tmpcode/commond.h	/^const DWORD EQUIPJOB_ITEN_MAX2 = 66172;$/;"	v
EQUIPJOB_ITEN_MAX3	tmpcode/commond.h	/^const DWORD EQUIPJOB_ITEN_MAX3 = 66272;$/;"	v
EQUIPJOB_ITEN_MIN1	tmpcode/commond.h	/^const DWORD EQUIPJOB_ITEN_MIN1 = 66001;$/;"	v
EQUIPJOB_ITEN_MIN2	tmpcode/commond.h	/^const DWORD EQUIPJOB_ITEN_MIN2 = 66101;$/;"	v
EQUIPJOB_ITEN_MIN3	tmpcode/commond.h	/^const DWORD EQUIPJOB_ITEN_MIN3 = 66201;$/;"	v
EQUIPNO	ScenesServer/zObject.h	/^    enum EQUIPNO{    $/;"	g	class:EquipPack
EQUIP_DOWNGRADE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE EQUIP_DOWNGRADE_USERCMD_PARA = 217;$/;"	v
EQUIP_INENSIFY_RESULT	tmpcode/commond.h	/^const BYTE EQUIP_INENSIFY_RESULT = 162;$/;"	v
EQUIP_INTENSIFY_CONSUME_INFO	tmpcode/commond.h	/^const BYTE EQUIP_INTENSIFY_CONSUME_INFO = 160;$/;"	v
EQUIP_INTENSIFY_INFO	tmpcode/commond.h	/^const BYTE EQUIP_INTENSIFY_INFO = 159;$/;"	v
EQUIP_INTENSIFY_START	tmpcode/commond.h	/^const BYTE EQUIP_INTENSIFY_START = 161;$/;"	v
EQUIP_MASK_USERCMD_PARA	tmpcode/commond.h	4269;"	d
EQUIP_MAX_GROOVENUM	base/Object.h	385;"	d
EQUIP_PACK	ScenesServer/zObject.h	/^      EQUIP_PACK = 8,$/;"	e	enum:Packages::__anon178
EQUIP_PACK	base/Object.h	/^	EQUIP_PACK = 8, $/;"	e	enum:__anon54
EQUIP_SIMULATE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE EQUIP_SIMULATE_PROPERTY_USERCMD_PARA = 184;$/;"	v
EQUIP_UPGRADE2_RESULT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE EQUIP_UPGRADE2_RESULT_USERCMD_PARA = 208;$/;"	v
EQUIP_UPGRADE2_USERCMD_PARA	tmpcode/commond.h	/^const BYTE EQUIP_UPGRADE2_USERCMD_PARA = 207;$/;"	v
EQUIP_UPGRADE_RESULT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE EQUIP_UPGRADE_RESULT_USERCMD_PARA = 196;$/;"	v
EQUIP_UPGRADE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE EQUIP_UPGRADE_USERCMD_PARA = 195;$/;"	v
ERROR	base/zLogger.h	/^	    static const zLevel * ERROR;$/;"	m	class:zLogger::zLevel
ER_CI_TIAO_ZHAN	tmpcode/commond.h	/^	ER_CI_TIAO_ZHAN = 11106,\/\/∂˛¥ŒÃ¯’∂$/;"	e	enum:__anon205
ER_DU_KUANG_BAO	tmpcode/commond.h	/^	ER_DU_KUANG_BAO = 1111,\/\/∂˛∂»øÒ±©	$/;"	e	enum:__anon205
ESALES_CONSUME	base/UserCommand.h	/^      ESALES_CONSUME = -1  \/\/ÁîµÂ≠êÂïÜÂüéÊ∂àË¥π$/;"	e	enum:Cmd::UserServer::__anon152
ESALES_FILLIN	base/UserCommand.h	/^      ESALES_FILLIN = 1,\/\/ÁîµÂ≠êÂïÜÂüéÂÖÖÂç°$/;"	e	enum:Cmd::UserServer::__anon152
EVOLVE_HORSE_RESULT_PARA	tmpcode/commond.h	/^const BYTE EVOLVE_HORSE_RESULT_PARA = 50;$/;"	v
EVOLVE_HORSE_SOUL_PARA	tmpcode/commond.h	/^const BYTE EVOLVE_HORSE_SOUL_PARA = 35;$/;"	v
EVOLVE_LINGQI_PARA	tmpcode/commond.h	20847;"	d
EVOLVE_USE_LINGYUANZHU_LINGQI_PARA	tmpcode/commond.h	20870;"	d
EXCHANGE2_GIFTS_NUM	tmpcode/commond.h	/^const int EXCHANGE2_GIFTS_NUM = 4;$/;"	v
EXCHANGE_ESSENCE_USERCMD_PARA	tmpcode/commond.h	30160;"	d
EXCHANGE_GOLDCARD_USERCMD	tmpcode/commond.h	/^const BYTE EXCHANGE_GOLDCARD_USERCMD =213;$/;"	v
EXCHANGE_HORSE_PET_PARA	tmpcode/commond.h	/^const BYTE EXCHANGE_HORSE_PET_PARA = 18;$/;"	v
EXIT_ARMY_PARA	base/Command.h	5728;"	d
EXPMODE_TEAMMEMBER_USERCMD_PARA	base/Command.h	3681;"	d
EXPMODE_TEAMMEMBER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE EXPMODE_TEAMMEMBER_USERCMD_PARA = 16;$/;"	v
E_MO_CHONG_ZHUANG	tmpcode/commond.h	/^	E_MO_CHONG_ZHUANG = 21102,\/\/∂Òƒß≥Â◊≤$/;"	e	enum:__anon205
E_RC5_32	base/EncDec/EncDec.h	70;"	d
E_RC5_32	base/EncDec/myrc5.h	58;"	d
EffectIndexEnum	tmpcode/commond.h	/^} EffectIndexEnum;$/;"	t	typeref:enum:__anon248
Embranchment	ScenesServer/QuestEvent.cpp	/^Event::Embranchment::Embranchment() : _active(false)$/;"	f	class:Event::Embranchment
Embranchment	ScenesServer/QuestEvent.h	/^  class Embranchment$/;"	c	class:Event
EnemyOnOff	tmpcode/commond.h	/^struct EnemyOnOff$/;"	s
Enter	ScenesServer/QuestEvent.h	/^  class Enter$/;"	c	namespace:Trigger
EnumMarriageDinnerType	tmpcode/commond.h	/^enum EnumMarriageDinnerType$/;"	g
Equal	ScenesServer/QuestCondition.h	/^  class Equal$/;"	c	namespace:Op
EquipPack	ScenesServer/zObject.cpp	/^EquipPack::EquipPack(SceneUser* user):Package(Cmd::OBJECTCELLTYPE_EQUIP,0,1,20),owner(user)$/;"	f	class:EquipPack
EquipPack	ScenesServer/zObject.h	/^class EquipPack : public Package$/;"	c
EquipSimulate	tmpcode/commond.h	/^	EquipSimulate()$/;"	f	struct:EquipSimulate
EquipSimulate	tmpcode/commond.h	/^struct EquipSimulate{$/;"	s
EquipSlot	ScenesServer/zCard.cpp	/^EquipSlot::EquipSlot():CardSlot(Cmd::CARDCELLTYPE_EQUIP, 0, EquipSlot::WIDTH,EquipSlot::HEIGHT)$/;"	f	class:EquipSlot
EquipSlot	ScenesServer/zCard.h	/^class EquipSlot:public CardSlot$/;"	c
EquipSortObjItem	tmpcode/commond.h	/^struct EquipSortObjItem$/;"	s
Equip_bangleL	base/Command.h	/^  Equip_bangleL,$/;"	e	enum:Cmd::enumEquipType
Equip_bangleR	base/Command.h	/^  Equip_bangleR,$/;"	e	enum:Cmd::enumEquipType
Equip_belt	base/Command.h	/^  Equip_belt,$/;"	e	enum:Cmd::enumEquipType
Equip_body	base/Command.h	/^  Equip_body,$/;"	e	enum:Cmd::enumEquipType
Equip_boots	base/Command.h	/^  Equip_boots,$/;"	e	enum:Cmd::enumEquipType
Equip_handL	base/Command.h	/^  Equip_handL,$/;"	e	enum:Cmd::enumEquipType
Equip_handR	base/Command.h	/^  Equip_handR,$/;"	e	enum:Cmd::enumEquipType
Equip_head	base/Command.h	/^  Equip_head,$/;"	e	enum:Cmd::enumEquipType
Equip_necklace	base/Command.h	/^  Equip_necklace,$/;"	e	enum:Cmd::enumEquipType
Equip_others1	base/Command.h	/^  Equip_others1,$/;"	e	enum:Cmd::enumEquipType
Equip_others2	base/Command.h	/^  Equip_others2,$/;"	e	enum:Cmd::enumEquipType
Equip_others3	base/Command.h	/^  Equip_others3,$/;"	e	enum:Cmd::enumEquipType
Equip_others4	base/Command.h	/^  Equip_others4,$/;"	e	enum:Cmd::enumEquipType
Equip_others5	base/Command.h	/^  Equip_others5$/;"	e	enum:Cmd::enumEquipType
Equip_ringL	base/Command.h	/^  Equip_ringL,$/;"	e	enum:Cmd::enumEquipType
Equip_ringR	base/Command.h	/^  Equip_ringR,$/;"	e	enum:Cmd::enumEquipType
EquipedObject	base/Command.h	/^struct EquipedObject$/;"	s	namespace:Cmd
EquipedObject	tmpcode/commond.h	/^struct EquipedObject$/;"	s
Equips	ScenesServer/zObject.h	/^  Equips()$/;"	f	class:Equips
Equips	ScenesServer/zObject.h	/^class Equips $/;"	c
ErrorCode	tmpcode/commond.h	/^    WORD ErrorCode;$/;"	m	struct:stTicketSelectUser
Event	ScenesServer/QuestEvent.cpp	/^Event::Event() : _id(0)$/;"	f	class:Event
Event	ScenesServer/QuestEvent.h	/^class Event$/;"	c
EventManager	ScenesServer/QuestEvent.h	/^  EventManager()$/;"	f	class:EventManager
EventManager	ScenesServer/QuestEvent.h	/^class EventManager$/;"	c
EventTable	ScenesServer/QuestTable.cpp	/^EventTable::EventTable()$/;"	f	class:EventTable
EventTable	ScenesServer/QuestTable.h	/^class EventTable$/;"	c
EventTrigger	ScenesServer/QuestEvent.h	/^  EventTrigger(DWORD id) : _id(id)$/;"	f	class:EventTrigger
EventTrigger	ScenesServer/QuestEvent.h	/^class EventTrigger$/;"	c
EventTrigger2	ScenesServer/QuestEvent.h	/^  EventTrigger2(DWORD id,DWORD quest_id = 0,DWORD offset = 0) : EventTrigger<T>(id),_quest_id(quest_id),_offset(offset)$/;"	f	class:EventTrigger2
EventTrigger2	ScenesServer/QuestEvent.h	/^class EventTrigger2 : public EventTrigger<T> $/;"	c
EveryMapExec	ScenesServer/SceneManager.cpp	/^  EveryMapExec(Scene *s):_scene(s)$/;"	f	struct:EveryMapExec
EveryMapExec	ScenesServer/SceneManager.cpp	/^struct EveryMapExec : public execEntry<SceneManager::MapInfo>$/;"	s
EverySceneEntryAction	ScenesServer/TimeTick.cpp	/^  EverySceneEntryAction(const DWORD group) : group(group) {}$/;"	f	struct:EverySceneEntryAction
EverySceneEntryAction	ScenesServer/TimeTick.cpp	/^struct EverySceneEntryAction : public SceneCallBack$/;"	s
EveryUserSessionAction	SessionServer/SessionTask.cpp	/^struct EveryUserSessionAction: public execEntry<UserSession>$/;"	s
Exchange2GiftItem	tmpcode/commond.h	/^struct Exchange2GiftItem$/;"	s
Exchange4ConfigItem	tmpcode/commond.h	/^struct Exchange4ConfigItem$/;"	s
Exchange4ConfigItemClient	tmpcode/commond.h	/^struct Exchange4ConfigItemClient$/;"	s
Exchange5ConfigItem	tmpcode/commond.h	/^typedef Exchange4ConfigItem Exchange5ConfigItem;$/;"	t
Exile	ScenesServer/SceneEntryPk.h	/^	bool Exile;			\/\/\/ sky ÊîæÈÄê$/;"	m	struct:SceneEntryPk
Exp	base/xmlparser/herobase.h	/^    struct Exp$/;"	s	struct:HeroBaseCFG
ExpRate	ScenesServer/ScenesServer.h	/^    int ExpRate;$/;"	m	class:ScenesService
ExterData	base/Sept.h	/^  char		ExterData[512];			\/\/ Shx Add »®œﬁ∫Õ÷∞Œª$/;"	m	struct:SeptDef::stSeptInfo
FACE_PROPERTY_USERCMD_PARA	base/Command.h	3065;"	d
FAILED	ScenesServer/QuestAction.h	/^    FAILED = 1,$/;"	e	enum:Action::__anon163
FALSE_COUNTRY_STATUS	base/Command.h	/^enum  FALSE_COUNTRY_STATUS$/;"	g	namespace:Cmd
FALSE_COUNTRY_STATUS	tmpcode/commond.h	/^enum  FALSE_COUNTRY_STATUS$/;"	g
FALSE_LOGIN_COUNTRY	base/Command.h	/^  FALSE_LOGIN_COUNTRY     \/\/ return when login fail $/;"	e	enum:Cmd::FALSE_COUNTRY_STATUS
FALSE_LOGIN_COUNTRY	tmpcode/commond.h	/^	FALSE_LOGIN_COUNTRY,     \/\/ return when login fail$/;"	e	enum:FALSE_COUNTRY_STATUS
FALSE_REGISTER_COUNTRY	base/Command.h	/^  FALSE_REGISTER_COUNTRY,\/\/return when register fail $/;"	e	enum:Cmd::FALSE_COUNTRY_STATUS
FALSE_REGISTER_COUNTRY	tmpcode/commond.h	/^	FALSE_REGISTER_COUNTRY,  \/\/return when register fail $/;"	e	enum:FALSE_COUNTRY_STATUS
FALSE_REGISTER_OWINGTO_COUNT	tmpcode/commond.h	/^	FALSE_REGISTER_OWINGTO_COUNT \/\/ΩÁ”Ú»À ˝œﬁ÷∆     $/;"	e	enum:FALSE_COUNTRY_STATUS
FAMILIAR_DEGREE	tmpcode/commond.h	/^        FAMILIAR_DEGREE = 3,    \/\/«◊√‹∂»$/;"	e	enum:DRAGON_DATA_TYPE
FAMILY_REG_WITHID	base/RoleregCommand.h	/^	FAMILY_REG_WITHID = 2,$/;"	e	enum:Cmd::RoleReg::__anon52
FAMILY_REG_WITHID	roleRegServer/RoleregCommand.h	/^	FAMILY_REG_WITHID = 2,$/;"	e	enum:Cmd::RoleReg::__anon204
FAMILY_TYPE_APLYNPC	tmpcode/commond.h	/^	FAMILY_TYPE_APLYNPC,               \/\/…Í«Î’˘∂·NPC≥…π¶$/;"	e	enum:__anon209
FAMILY_TYPE_FAILEDJIAZUJINGJI	tmpcode/commond.h	/^	FAMILY_TYPE_FAILEDJIAZUJINGJI,     \/\/º“◊Âæ∫ºº ß∞‹$/;"	e	enum:__anon209
FAMILY_TYPE_FAILEDNPC	tmpcode/commond.h	/^	FAMILY_TYPE_FAILEDNPC,             \/\/’˘∂·NPC ß∞‹$/;"	e	enum:__anon209
FAMILY_TYPE_FAILEDTUREIMU	tmpcode/commond.h	/^	FAMILY_TYPE_FAILEDTUREIMU,         \/\/Õº¿◊ƒ∑µƒ“≈º£ ß∞‹$/;"	e	enum:__anon209
FAMILY_TYPE_FAILEDYUNBIAO	tmpcode/commond.h	/^	FAMILY_TYPE_FAILEDYUNBIAO,         \/\/‘ÀÔ⁄ ß∞‹$/;"	e	enum:__anon209
FAMILY_TYPE_LEVELUP	tmpcode/commond.h	/^    FAMILY_TYPE_LEVELUP = 21,          \/\/º“◊Â£¨”∂±¯Õ≈…˝º∂$/;"	e	enum:__anon209
FAMILY_TYPE_RECEIVE_PERFORM	tmpcode/commond.h	/^	FAMILY_TYPE_RECEIVE_PERFORM = 215,      \/\/\/ º“◊Â◊Â≥§¡Ï»°¡Àº®–ßΩ±¿¯$/;"	e	enum:__anon209
FAMILY_TYPE_SUCJIAZUJINGJI	tmpcode/commond.h	/^	FAMILY_TYPE_SUCJIAZUJINGJI,        \/\/”Æµ√º“◊Âæ∫ºº$/;"	e	enum:__anon209
FAMILY_TYPE_SUCNPC	tmpcode/commond.h	/^    FAMILY_TYPE_SUCNPC,                \/\/≥…π¶’˘∂·∏√NPC$/;"	e	enum:__anon209
FAMILY_TYPE_SUCTUREIMU	tmpcode/commond.h	/^	FAMILY_TYPE_SUCTUREIMU,            \/\/≥…π¶ÕÍ≥…Õº¿◊ƒ∑µƒ“≈º£   $/;"	e	enum:__anon209
FAMILY_TYPE_SUCYUNBIAO	tmpcode/commond.h	/^    FAMILY_TYPE_SUCYUNBIAO,            \/\/‘ÀÔ⁄≥…π¶$/;"	e	enum:__anon209
FARM_NOTICE_OP	tmpcode/commond.h	/^enum FARM_NOTICE_OP$/;"	g
FARM_NOTICE_TYPE	tmpcode/commond.h	/^enum FARM_NOTICE_TYPE$/;"	g
FAR_NORMAL_ATTACK_TYPE	tmpcode/commond.h	/^const WORD FAR_NORMAL_ATTACK_TYPE = 378;\/\/∆’Õ®π•ª˜¿‡–Õ£®‘∂…Ì£©$/;"	v
FAR_NORMAL_ATTACK_TYPE2	tmpcode/commond.h	/^const WORD FAR_NORMAL_ATTACK_TYPE2 = 380;\/\/∆’Õ®π•ª˜¿‡–Õ£®‘∂…Ì2£©$/;"	v
FASHION_FLY_STATE_MIN	tmpcode/commond.h	/^const BYTE FASHION_FLY_STATE_MIN = 50;\/\/ ±◊∞∑…––◊¥Ã¨µƒ◊Ó–°÷µ$/;"	v
FATAL	base/zLogger.h	/^	    static const zLevel * FATAL;$/;"	m	class:zLogger::zLevel
FEED_DRAGON_PARA	tmpcode/commond.h	/^const BYTE FEED_DRAGON_PARA = 8;$/;"	v
FEED_EQUIP_LINGQI_PARA	tmpcode/commond.h	20733;"	d
FEI_DUN_JI	tmpcode/commond.h	/^	FEI_DUN_JI = 12104,\/\/∑…∂‹ª˜$/;"	e	enum:__anon205
FETCH_UNION_WEEK_SALARY_PARA	tmpcode/commond.h	/^const BYTE FETCH_UNION_WEEK_SALARY_PARA  = 140;$/;"	v
FETCH_WEEK_SALARY_UNION_PARA	tmpcode/commond.h	/^const BYTE FETCH_WEEK_SALARY_UNION_PARA  = 140;$/;"	v
FETESTATE_PARA	tmpcode/commond.h	/^const BYTE FETESTATE_PARA = 7;$/;"	v
FFFFFFFFFFF	base/Command.h	/^  BYTE FFFFFFFFFFF;$/;"	m	struct:Cmd::t_UserData
FIELD	base/zMetaData.h	/^	typedef std::map<std::string,std::string> FIELD;$/;"	t	class:DBRecord
FINDTREASURE_TIMES	tmpcode/commond.h	/^        FINDTREASURE_TIMES = 8, \/\/ΩÒÃÏ—∞±¶¥Œ ˝$/;"	e	enum:DRAGON_DATA_TYPE
FIND_TREASURE_DRAGON_PARA	tmpcode/commond.h	/^const BYTE FIND_TREASURE_DRAGON_PARA = 7;$/;"	v
FINISHED	ScenesServer/Quest.h	/^    FINISHED = -3,$/;"	e	enum:Quest::__anon180
FINISHED_NAME	ScenesServer/Quest.cpp	/^const std::string Quest::FINISHED_NAME = "state";$/;"	m	class:Quest
FINISHED_NAME	ScenesServer/Quest.h	/^  static const std::string FINISHED_NAME;$/;"	m	class:Quest
FINISHED_NOT_SAVE	ScenesServer/Quest.h	/^    FINISHED_NOT_SAVE = -2,$/;"	e	enum:Quest::__anon180
FINISHED_SAVE	ScenesServer/Quest.h	/^    FINISHED_SAVE = -1,$/;"	e	enum:Quest::__anon180
FINISH_BET_CHALLENGE_USERCMD_PARAMETER	tmpcode/commond.h	22159;"	d
FINISH_DECAY_LINGQI_PARA	tmpcode/commond.h	/^const BYTE FINISH_DECAY_LINGQI_PARA = 7;   $/;"	v
FINISH_QUEST_PROPERTY_USERCMD_PARA	tmpcode/commond.h	18574;"	d
FINISH_SELL_USERCMD_PARAMETER	base/Command.h	4035;"	d
FINISH_SELL_USERCMD_PARAMETER	tmpcode/commond.h	12149;"	d
FINISH_TECH	base/Command.h	/^  FINISH_TECH = 3,\/\/ Â∑≤ÁªèÂÆåÊàêÂçáÁ∫ßÔºåÂèØ‰ª•ÊâìÈÄ†Áõ∏Â∫îË£ÖÂ§á(ÂåÖÊã¨Á≠âÁ∫ßÂ§ß‰∫é0ÁöÑÊâÄÊúâÁä∂ÊÄÅÁöÑÁßëÊäÄ)$/;"	e	enum:Cmd::__anon113
FINISH_TRADE_USERCMD_PARAMETER	base/Command.h	3907;"	d
FINISH_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE FINISH_TRADE_USERCMD_PARAMETER = 7;$/;"	v
FIN_QUEST	tmpcode/commond.h	/^	FIN_QUEST = 3, \/\/◊ˆÕÍ¡À—´’¬»ŒŒÒ$/;"	e	enum:TitleState
FIREWORK_USERCMD_PARA	base/Command.h	/^const BYTE FIREWORK_USERCMD_PARA = 24;$/;"	v
FIRE_ARMY_CAPTAIN_PARA	base/Command.h	5792;"	d
FIRE_MEMBER	base/Command.h	/^  FIRE_MEMBER,       \/\/ ÂºÄÈô§ÊàêÂëò$/;"	e	enum:Cmd::UNIONPOWER
FIRE_MEMBER	tmpcode/commond.h	/^	FIRE_MEMBER,               \/\/ ø™≥˝≥…‘±$/;"	e	enum:UNIONPOWER
FIRE_MEMBER_FROM_SEPT_PARA	base/Command.h	/^const BYTE FIRE_MEMBER_FROM_SEPT_PARA = 8;$/;"	v
FIRE_MEMBER_FROM_SEPT_PARA	tmpcode/commond.h	/^const BYTE FIRE_MEMBER_FROM_SEPT_PARA = 8;$/;"	v
FIRE_MEMBER_FROM_UNION_PARA	base/Command.h	/^const BYTE FIRE_MEMBER_FROM_UNION_PARA = 8;$/;"	v
FIRE_MEMBER_FROM_UNION_PARA	tmpcode/commond.h	/^const BYTE FIRE_MEMBER_FROM_UNION_PARA = 8;$/;"	v
FIRE_POSITION	tmpcode/commond.h	/^        FIRE_POSITION			= 1,			\/\/\/ Ω‚≥˝÷∞ŒÒ$/;"	e	enum:POSTIONOP
FIRSTFIVE_LIST_STOCKPARA	base/Command.h	7623;"	d
FIRSTFIVE_LIST_STOCKPARA	tmpcode/commond.h	23605;"	d
FISHING_ACTION	tmpcode/commond.h	/^	FISHING_ACTION,         \/\/\/ “—≥ˆπ≥$/;"	e	enum:__anon361
FISHING_CATCH	tmpcode/commond.h	/^	FISHING_CATCH,          \/\/\/ µˆµΩ”„$/;"	e	enum:__anon361
FISHING_FINISH	tmpcode/commond.h	/^	FISHING_FINISH,         \/\/\/ µˆ”„ÕÍ≥…(¿≠∆ÕÍ≥…)$/;"	e	enum:__anon361
FISHING_NOT	tmpcode/commond.h	/^	FISHING_NOT = 0,        \/\/\/ √ª”–µˆ”„$/;"	e	enum:__anon361
FISHING_UP	tmpcode/commond.h	/^	FISHING_UP,             \/\/\/ ¿≠∆◊¥Ã¨$/;"	e	enum:__anon361
FISHING_USERCMD	tmpcode/commond.h	/^const BYTE FISHING_USERCMD = 140;$/;"	v
FISHING_WAIT_ACTION	tmpcode/commond.h	/^	FISHING_WAIT_ACTION,    \/\/\/ µ»¥˝ø™ º≥ˆπ≥$/;"	e	enum:__anon361
FISK_COUNTRY_PARA	base/Command.h	/^const BYTE FISK_COUNTRY_PARA = 13;$/;"	v
FL	base/FLCommand.h	/^  namespace FL$/;"	n	namespace:Cmd
FLAG_POS_SC_PARA	tmpcode/commond.h	/^const BYTE FLAG_POS_SC_PARA				= 14;$/;"	v
FLAG_RELEGATION_LUORI_PARA	tmpcode/commond.h	/^const BYTE FLAG_RELEGATION_LUORI_PARA = 11;$/;"	v
FLClient	SuperServer/FLClient.cpp	/^FLClient::FLClient(const std::string &ip, const WORD port) : zTCPClientTask(ip,port,true),tempid(++tempidAllocator),netType(NetType_near)$/;"	f	class:FLClient
FLClient	SuperServer/FLClient.h	/^class FLClient : public zTCPClientTask$/;"	c
FLClientContainer	SuperServer/FLClientManager.h	/^    typedef __gnu_cxx::hash_map<WORD,FLClient *> FLClientContainer;$/;"	t	class:FLClientManager
FLClientManager	SuperServer/FLClientManager.cpp	/^FLClientManager::FLClientManager()$/;"	f	class:FLClientManager
FLClientManager	SuperServer/FLClientManager.h	/^class FLClientManager$/;"	c
FLService	FLServer/FLServer.cpp	/^FLService::FLService()$/;"	f	class:FLService
FLService	FLServer/FLServer.h	/^class FLService : public Singleton<FLService>, public zMNetService$/;"	c
FLTimeTick	FLServer/TimeTick.h	/^	FLTimeTick() : zThread("TimeTick")$/;"	f	class:FLTimeTick
FLTimeTick	FLServer/TimeTick.h	/^class FLTimeTick : public zThread$/;"	c
FLYSKILL_DIEHUA_1	tmpcode/commond.h	/^	FLYSKILL_DIEHUA_1       =1,\/\/µ˚ªØ1$/;"	e	enum:__anon372
FLYSKILL_DIEHUA_2	tmpcode/commond.h	/^	FLYSKILL_DIEHUA_2       =2,\/\/µ˚ªØ2$/;"	e	enum:__anon372
FLYSKILL_DIEHUA_3	tmpcode/commond.h	/^	FLYSKILL_DIEHUA_3       =3,\/\/µ˚ªØ3$/;"	e	enum:__anon372
FLYSKILL_DIEHUA_4	tmpcode/commond.h	/^	FLYSKILL_DIEHUA_4       =4,\/\/µ˚ªØ4$/;"	e	enum:__anon372
FLYSKILL_DIEHUA_5	tmpcode/commond.h	/^	FLYSKILL_DIEHUA_5       =5,\/\/µ˚ªØ5$/;"	e	enum:__anon372
FLYSKILL_NONE	tmpcode/commond.h	/^	FLYSKILL_NONE           =0,\/\/Œﬁ◊¥Ã¨$/;"	e	enum:__anon372
FLYSKILL_YUHUA_1	tmpcode/commond.h	/^	FLYSKILL_YUHUA_1        =15,\/\/”ªØ1$/;"	e	enum:__anon372
FLYSKILL_YUHUA_2	tmpcode/commond.h	/^	FLYSKILL_YUHUA_2        =16,\/\/”ªØ2$/;"	e	enum:__anon372
FLYSKILL_YUHUA_3	tmpcode/commond.h	/^	FLYSKILL_YUHUA_3        =17,\/\/”ªØ3$/;"	e	enum:__anon372
FLYSKILL_YUHUA_4	tmpcode/commond.h	/^	FLYSKILL_YUHUA_4        =18,\/\/”ªØ4$/;"	e	enum:__anon372
FLYSKILL_YUHUA_5	tmpcode/commond.h	/^	FLYSKILL_YUHUA_5        =19,\/\/”ªØ5$/;"	e	enum:__anon372
FLYSKILL_YUHUA_6	tmpcode/commond.h	/^	FLYSKILL_YUHUA_6        =20,\/\/”ªØ6$/;"	e	enum:__anon372
FLYSKILL_YUHUA_7	tmpcode/commond.h	/^	FLYSKILL_YUHUA_7        =21,\/\/”ªØ7$/;"	e	enum:__anon372
FLYSKILL_YUHUA_8	tmpcode/commond.h	/^	FLYSKILL_YUHUA_8        =22\/\/”ªØ8$/;"	e	enum:__anon372
FOLLOW_CARTOON_PARA	base/Command.h	8197;"	d
FORBID_SAMEIP_USRE_INFO_PARA	tmpcode/commond.h	/^const BYTE FORBID_SAMEIP_USRE_INFO_PARA = 149;$/;"	v
FORBID_TALK_COUNTRY_PARA	base/Command.h	5086;"	d
FORBID_TALK_COUNTRY_PARA	tmpcode/commond.h	/^const BYTE FORBID_TALK_COUNTRY_PARA = 21;$/;"	v
FORCESETUP_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE FORCESETUP_DATA_USERCMD_PARA = 129;$/;"	v
FORCESKILL_NUM	tmpcode/commond.h	/^const WORD FORCESKILL_NUM = 10;               \/\/¡Ï”Ú÷Æ¡¶ººƒ‹◊‹ ˝$/;"	v
FORCE_RELATION_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE FORCE_RELATION_DATA_USERCMD_PARA = 65;$/;"	v
FOREVER_CHANGE_ZONE	base/BattleUserCmd.h	/^	FOREVER_CHANGE_ZONE,   \/\/”¿æ√◊™«¯$/;"	e	enum:Cmd::__anon12
FORGET_LIFESKILL_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	18562;"	d
FOUNDITEM_PROPERTY_USERCMD_PARA	base/Command.h	2610;"	d
FOUNDITEM_PROPERTY_USERCMD_PARA	tmpcode/commond.h	4618;"	d
FOUND_FASHION_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  FOUND_FASHION_PROPERTY_USERCMD_PARA = 139;$/;"	v
FOUND_FASHION_SKILLSTORE_PARA	tmpcode/commond.h	5575;"	d
FOUND_LEECHDOM_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  FOUND_LEECHDOM_PROPERTY_USERCMD_PARA = 142;$/;"	v
FOUND_LEECHDOM_SKILLSTORE	tmpcode/commond.h	5649;"	d
FOUND_SPECIALITEM_PROPERTY_USERCMD_PARA	tmpcode/commond.h	4769;"	d
FP	base/EncDec/EncDec.h	158;"	d
FP	base/EncDec/mydes.h	59;"	d
FREE_CAPTURE_DRAGON_PARA	tmpcode/commond.h	/^const BYTE FREE_CAPTURE_DRAGON_PARA = 17;$/;"	v
FREE_CUR_HORSE_PET_PARA	tmpcode/commond.h	/^const BYTE FREE_CUR_HORSE_PET_PARA = 24;$/;"	v
FREE_ENTER	tmpcode/commond.h	/^	FREE_ENTER = 0 , \/\/◊‘”…º”»Î$/;"	e	enum:NoticeState
FREE_HORSE_PET_PARA	tmpcode/commond.h	/^const BYTE FREE_HORSE_PET_PARA = 17;$/;"	v
FREE_JOIN	tmpcode/commond.h	/^	FREE_JOIN,        \/\/◊‘”…º”»Î$/;"	e	enum:SEPT_ADD_MEMBER
FREE_OFFICIAL_PARA	tmpcode/commond.h	/^const BYTE FREE_OFFICIAL_PARA = 4;$/;"	v
FRESH_SHENLONG_REWARD_USERCMD_PARA	tmpcode/commond.h	/^const BYTE FRESH_SHENLONG_REWARD_USERCMD_PARA = 86;$/;"	v
FRESH_TEAMMEMBER_USERCMD_PARA	base/Command.h	3711;"	d
FRESH_TEAMMEMBER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE FRESH_TEAMMEMBER_USERCMD_PARA = 19;$/;"	v
FRIEDMSN_TYPE_BOSS	tmpcode/commond.h	/^	FRIEDMSN_TYPE_BOSS = 1,      \/\/¥ÚBOSS$/;"	e	enum:__anon209
FRIEDMSN_TYPE_EQUIP	tmpcode/commond.h	/^    FRIEDMSN_TYPE_EQUIP ,        \/\/¥Ú≥ˆ¡Àº´∆∑◊∞±∏$/;"	e	enum:__anon209
FRIEDMSN_TYPE_LEVELUP	tmpcode/commond.h	/^	FRIEDMSN_TYPE_LEVELUP,       \/\/…˝º∂$/;"	e	enum:__anon209
FRIEDMSN_TYPE_MSN	tmpcode/commond.h	/^	FRIEDMSN_TYPE_MSN,           \/\/º”»Î”∂±¯Õ≈ªÚ’ﬂº“◊Â$/;"	e	enum:__anon209
FRIEDMSN_TYPE_SHENYU	tmpcode/commond.h	/^    FRIEDMSN_TYPE_SHENYU,        \/\/≤¬÷–…Ò‘¢$/;"	e	enum:__anon209
FRIEDMSN_TYPE_SOUHUN	tmpcode/commond.h	/^	FRIEDMSN_TYPE_SOUHUN,        \/\/À—ªÍ$/;"	e	enum:__anon209
FRIEDMSN_TYPE_STARTSINGLEPK	tmpcode/commond.h	/^	FRIEDMSN_TYPE_STARTSINGLEPK, \/\/ø™ º∏ˆ»ÀÃÙ’Ω»¸$/;"	e	enum:__anon209
FRIEDMSN_TYPE_WINSINGLEPK	tmpcode/commond.h	/^	FRIEDMSN_TYPE_WINSINGLEPK,   \/\/”Æµ√∏ˆ»ÀÃÙ’Ω»¸ $/;"	e	enum:__anon209
FRIENDMSN_DRAGON_CHALLENGE_FAIL	tmpcode/commond.h	/^	FRIENDMSN_DRAGON_CHALLENGE_FAIL   = 226,       \/\/∫√”—¡˙≥ËÃÙ’Ω ß∞‹$/;"	e	enum:__anon209
FRIENDMSN_DRAGON_CHALLENGE_WIN	tmpcode/commond.h	/^	FRIENDMSN_DRAGON_CHALLENGE_WIN   = 225,       \/\/∫√”—¡˙≥ËÃÙ’Ω §¿˚$/;"	e	enum:__anon209
FRIENDMSN_DRAGON_INTO32	tmpcode/commond.h	/^	FRIENDMSN_DRAGON_INTO32        = 221,       \/\/»¸¡˙ª·Ω¯32«ø$/;"	e	enum:__anon209
FRIENDMSN_DRAGON_INTOPROMOTION	tmpcode/commond.h	/^	FRIENDMSN_DRAGON_INTOPROMOTION   = 222,       \/\/»¸¡˙ª·Ω˙º∂$/;"	e	enum:__anon209
FRIENDMSN_DRAGON_INTOTOP	tmpcode/commond.h	/^	FRIENDMSN_DRAGON_INTOTOP   = 223,       \/\/»¸¡˙ª·π⁄æ¸$/;"	e	enum:__anon209
FRIENDMSN_DRAGON_INTO_SECOND	tmpcode/commond.h	/^	FRIENDMSN_DRAGON_INTO_SECOND   = 224,       \/\/»¸¡˙ª·—«æ¸$/;"	e	enum:__anon209
FRIENDMSN_FLOWER_SORT_LAST	tmpcode/commond.h	/^	FRIENDMSN_FLOWER_SORT_LAST      = 228,          \/\/∫√”—…œ÷‹œ ª®∞Ò…œ∞Ò$/;"	e	enum:__anon209
FRIENDMSN_FLOWER_SORT_THEWEEK	tmpcode/commond.h	/^	FRIENDMSN_FLOWER_SORT_THEWEEK   = 227,          \/\/∫√”—±æ÷‹œ ª®∞Ò…œ∞Ò$/;"	e	enum:__anon209
FRIENDMSN_TYPE_DATAOSHA	tmpcode/commond.h	/^	FRIENDMSN_TYPE_DATAOSHA,      \/\/¥ÛÃ”…±«∞√˚$/;"	e	enum:__anon209
FRIENDMSN_TYPE_DIAL_FACTOR	tmpcode/commond.h	/^	FRIENDMSN_TYPE_DIAL_FACTOR = 211,        \/\/√¸‘À÷Æ¬÷µƒæ≠—È±∂ ˝¥ÔµΩ±∂“‘…œ$/;"	e	enum:__anon209
FRIENDMSN_TYPE_EQUIP_MOON	tmpcode/commond.h	/^	FRIENDMSN_TYPE_EQUIP_MOON = 210,        \/\/∫√”—◊∞±∏≥Â¬˙‘¬$/;"	e	enum:__anon209
FRIENDMSN_TYPE_GAOJI_GOUHUO	tmpcode/commond.h	/^	FRIENDMSN_TYPE_GAOJI_GOUHUO = 212,        \/\/∏ﬂº∂ÛÙª$/;"	e	enum:__anon209
FRIENDMSN_TYPE_GET_ZHENXUANSORT_AWARD	tmpcode/commond.h	/^	FRIENDMSN_TYPE_GET_ZHENXUANSORT_AWARD = 232,    \/\/ªÒµ√’˘∞‘»¸≈≈––∞ÒΩ±¿¯$/;"	e	enum:__anon209
FRIENDMSN_TYPE_GOUHUO	tmpcode/commond.h	/^	FRIENDMSN_TYPE_GOUHUO,       \/\/ÛÙª$/;"	e	enum:__anon209
FRIENDMSN_TYPE_GRECOMMEND	tmpcode/commond.h	/^	FRIENDMSN_TYPE_GRECOMMEND = 217,         \/\/  ¶ÕΩπÿœµ$/;"	e	enum:__anon209
FRIENDMSN_TYPE_GUARDREWARD	tmpcode/commond.h	/^	FRIENDMSN_TYPE_GUARDREWARD,   \/\/¿≠Ô⁄±∂ ˝¥ÔµΩ5±∂“‘…œ$/;"	e	enum:__anon209
FRIENDMSN_TYPE_GUARDREWARD_LESS_3	tmpcode/commond.h	/^	FRIENDMSN_TYPE_GUARDREWARD_LESS_3,   \/\/¿≠Ô⁄±∂ ˝¥ÔµΩ3±∂“‘œ¬ = 37$/;"	e	enum:__anon209
FRIENDMSN_TYPE_HEROISLAND	tmpcode/commond.h	/^	FRIENDMSN_TYPE_HEROISLAND = 17,         \/\/”¢–€µ∫ƒ⁄¡¨…±»À ˝¥ÔµΩ“ª∂® ˝∂Ó$/;"	e	enum:__anon209
FRIENDMSN_TYPE_HERO_AWARDED	tmpcode/commond.h	/^	FRIENDMSN_TYPE_HERO_AWARDED = 213,        \/\/¡Ï»°◊Ú»’ª§ΩÁ”¢–€∞Ò…œΩ±¿¯$/;"	e	enum:__anon209
FRIENDMSN_TYPE_HORSESOUL	tmpcode/commond.h	/^	FRIENDMSN_TYPE_HORSESOUL = 216,         \/\/ ◊¯∆Ô–ƒªÍΩ¯ªØ$/;"	e	enum:__anon209
FRIENDMSN_TYPE_KILLCITYNPC	tmpcode/commond.h	/^	FRIENDMSN_TYPE_KILLCITYNPC = 201,    \/\/…±À¿Õ‚ΩÁ”Ú≥« –NPC$/;"	e	enum:__anon209
FRIENDMSN_TYPE_LUORIXIAGU	tmpcode/commond.h	/^	FRIENDMSN_TYPE_LUORIXIAGU,    \/\/¬‰»’’Ω≥°«∞√˚$/;"	e	enum:__anon209
FRIENDMSN_TYPE_MAGICSTOVEBEGIN	tmpcode/commond.h	/^	FRIENDMSN_TYPE_MAGICSTOVEBEGIN,		\/\/ƒß¡¶¬Ø»€¡∂ø™ º$/;"	e	enum:__anon209
FRIENDMSN_TYPE_MAGICSTOVESUCCESS	tmpcode/commond.h	/^	FRIENDMSN_TYPE_MAGICSTOVESUCCESS,	\/\/ƒß¡¶¬Ø»€¡∂≥…π¶$/;"	e	enum:__anon209
FRIENDMSN_TYPE_MAKE_EQUIP	tmpcode/commond.h	/^	FRIENDMSN_TYPE_MAKE_EQUIP,   \/\/¥Ú‘Ï≥ˆÃÿ∂®∆∑÷ µƒ◊∞±∏$/;"	e	enum:__anon209
FRIENDMSN_TYPE_MARRY	tmpcode/commond.h	/^	FRIENDMSN_TYPE_MARRY            = 230,          \/\/Ω·ªÈ$/;"	e	enum:__anon209
FRIENDMSN_TYPE_MATIAN	tmpcode/commond.h	/^	FRIENDMSN_TYPE_MATIAN = 20,     \/\/  ÿŒ¿¬ÛÃÔªÒµ√«∞3√˚$/;"	e	enum:__anon209
FRIENDMSN_TYPE_MERGELINGQI	tmpcode/commond.h	/^	FRIENDMSN_TYPE_MERGELINGQI = 218,       \/\/¡È∆˜»⁄∫œ$/;"	e	enum:__anon209
FRIENDMSN_TYPE_RECEIVE_PERFORM	tmpcode/commond.h	/^	FRIENDMSN_TYPE_RECEIVE_PERFORM = 214,   \/\/\/ ÕÊº“(◊Â≥§)¡Ï»°¡Àº®–ßΩ±¿¯$/;"	e	enum:__anon209
FRIENDMSN_TYPE_SEPTSIGN	tmpcode/commond.h	/^	FRIENDMSN_TYPE_SEPTSIGN = 19,    \/\/º“◊Â«©√˚–˚¥´$/;"	e	enum:__anon209
FRIENDMSN_TYPE_SHI_TU_ZHAO_MU	tmpcode/commond.h	/^	FRIENDMSN_TYPE_SHI_TU_ZHAO_MU = 219,         \/\/  ¶ÕΩ’–ƒº$/;"	e	enum:__anon209
FRIENDMSN_TYPE_SHOULIETOP	tmpcode/commond.h	/^	FRIENDMSN_TYPE_SHOULIETOP = 18,	\/\/·˜¡‘º¿«∞3√˚$/;"	e	enum:__anon209
FRIENDMSN_TYPE_TOP_COUNTRY_LEVEL	tmpcode/commond.h	/^	FRIENDMSN_TYPE_TOP_COUNTRY_LEVEL = 203,  \/\/ ’π æ±æΩÁ∏ˆ»À√˚¥Œ$/;"	e	enum:__anon209
FRIENDMSN_TYPE_TOP_COUNTRY_SEPT	tmpcode/commond.h	/^	FRIENDMSN_TYPE_TOP_COUNTRY_SEPT = 209,  \/\/ ’π æΩÁ”Úº“◊Â≈≈––$/;"	e	enum:__anon209
FRIENDMSN_TYPE_TOP_COUNTRY_UNION	tmpcode/commond.h	/^	FRIENDMSN_TYPE_TOP_COUNTRY_UNION = 207,  \/\/ ’π æΩÁ”Ú”∂±¯Õ≈≈≈––$/;"	e	enum:__anon209
FRIENDMSN_TYPE_TOP_HERO_TODAY	tmpcode/commond.h	/^	FRIENDMSN_TYPE_TOP_HERO_TODAY = 204,  \/\/ ’π æΩÒ»’ΩÁ”Úª§ΩÁ∞Ò$/;"	e	enum:__anon209
FRIENDMSN_TYPE_TOP_HERO_YESTERDAY	tmpcode/commond.h	/^	FRIENDMSN_TYPE_TOP_HERO_YESTERDAY = 205,  \/\/ ’π æ◊Ú»’ΩÁ”Úª§ΩÁ∞Ò$/;"	e	enum:__anon209
FRIENDMSN_TYPE_TOP_WORLD_LEVEL	tmpcode/commond.h	/^	FRIENDMSN_TYPE_TOP_WORLD_LEVEL = 202,  \/\/ ’π æ∆ﬂΩÁ∏ˆ»À√˚¥Œ$/;"	e	enum:__anon209
FRIENDMSN_TYPE_TOP_WORLD_SEPT	tmpcode/commond.h	/^	FRIENDMSN_TYPE_TOP_WORLD_SEPT = 208,  \/\/ ’π æ∆ﬂΩÁº“◊Â≈≈––$/;"	e	enum:__anon209
FRIENDMSN_TYPE_TOP_WORLD_UNION	tmpcode/commond.h	/^	FRIENDMSN_TYPE_TOP_WORLD_UNION = 206,  \/\/ ’π æ∆ﬂΩÁ”∂±¯Õ≈≈≈––$/;"	e	enum:__anon209
FRIENDMSN_TYPE_ZHENGBA_GUANZHONG	tmpcode/commond.h	/^	FRIENDMSN_TYPE_ZHENGBA_GUANZHONG = 231,         \/\/ ’˘∞‘»¸æˆ»¸¿≠π€÷⁄Ω¯µÿÕº$/;"	e	enum:__anon209
FRIENDMSN_TYPE_ZHENXUAN_JINGJI	tmpcode/commond.h	/^	FRIENDMSN_TYPE_ZHENXUAN_JINGJI = 229,         \/\/ ’Á—°æ∫ºº»¸«∞2√˚$/;"	e	enum:__anon209
FRIENDMSN_TYPE_ZHUANZHI	tmpcode/commond.h	/^	FRIENDMSN_TYPE_ZHUANZHI,     \/\/◊™÷∞$/;"	e	enum:__anon209
FRIEND_HELP_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE FRIEND_HELP_PROPERTY_USERCMD_PARA = 158;$/;"	v
FUMO	tmpcode/commond.h	/^			FUMO    = 13,	\/\/◊∞±∏∏Ωƒß$/;"	e	enum:ReuildType
FUWEN_MOZHU_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	27190;"	d
FU_HUO_SHU	tmpcode/commond.h	/^	FU_HUO_SHU  = 1307,\/\/∏¥ªÓ ı	$/;"	e	enum:__anon205
Face	base/RecordCommand.h	/^	  WORD  Face;            \/\/\/ [shx Add Â§¥ÂÉè]$/;"	m	struct:Cmd::Record::t_CreateChar_GateRecord
FadeFactor	tmpcode/commond.h	/^	WORD	FadeFactor;		\/\/Õ∏√˜”√$/;"	m	struct:st_CharShow2
FamilyVar	ScenesServer/Quest.h	/^typedef GlobalVarImpl<3> FamilyVar;$/;"	t
FarmNotice	tmpcode/commond.h	/^	FarmNotice()$/;"	f	struct:FarmNotice
FarmNotice	tmpcode/commond.h	/^struct FarmNotice$/;"	s
FightDescrip	tmpcode/commond.h	/^	FightDescrip()$/;"	f	struct:FightDescrip
FightDescrip	tmpcode/commond.h	/^struct FightDescrip$/;"	s
FillSuit	ScenesServer/zObject.cpp	/^void zObject::FillSuit()$/;"	f	class:zObject
FillSuitPPT	ScenesServer/zObject.cpp	/^void zObject::FillSuitPPT(int nIndex)$/;"	f	class:zObject
FirstTen	base/Command.h	/^struct FirstTen$/;"	s	namespace:Cmd
FirstTen	tmpcode/commond.h	/^struct FirstTen$/;"	s
Five_Relation	ScenesServer/SceneUser.h	/^    static DWORD Five_Relation[];$/;"	m	struct:SceneUser
FixedRush	ScenesServer/Scene.h	/^      FixedRush()$/;"	f	struct:Scene::FixedRush
FixedRush	ScenesServer/Scene.h	/^    struct FixedRush$/;"	s	class:Scene
FlameAddDam	ScenesServer/ScenePk.h	/^	  SWORD FlameAddDam;	\/\/sky Â¢ûÂä†ÁÅ´ÁÑ∞È≠îÊ≥ï‰º§ÂÆ≥ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
FlameAddDamA	ScenesServer/ScenePk.h	/^	  SWORD FlameAddDamA;	\/\/sky Â¢ûÂä†ÁÅ´ÁÑ∞È≠îÊ≥ï‰º§ÂÆ≥Âõ∫ÂÆöÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
Flameflag	ScenesServer/SceneEntryPk.h	/^	bool Flameflag;		\/\/sky ÁÅ´ÁÑ∞È≠îÊ≥ïÂ¢ûÂä†‰º§ÂÆ≥Ê†áÂøó$/;"	m	struct:SceneEntryPk
FlowerDef	tmpcode/commond.h	/^    FlowerDef()$/;"	f	struct:FlowerDef
FlowerDef	tmpcode/commond.h	/^struct FlowerDef$/;"	s
FlowerSortData	tmpcode/commond.h	/^	FlowerSortData()                $/;"	f	struct:FlowerSortData
FlowerSortData	tmpcode/commond.h	/^struct FlowerSortData$/;"	s
FreeMemory	GatewayServer/CmdChecker.h	/^	class FreeMemory $/;"	c	class:CheckerTable
FreeMemory	ScenesServer/QuestEvent.h	/^  class FreeMemory $/;"	c	class:Event
Freedom	ScenesServer/zObject.h	/^  } Freedom;$/;"	m	class:Equips	typeref:struct:Equips::Freedom_Attribute
Freedom_Attribute	ScenesServer/zObject.h	/^  struct Freedom_Attribute {$/;"	s	class:Equips
FundUnionHistory	tmpcode/commond.h	/^	FundUnionHistory()$/;"	f	struct:FundUnionHistory
FundUnionHistory	tmpcode/commond.h	/^struct FundUnionHistory$/;"	s
FurnitureMapData	tmpcode/commond.h	/^	FurnitureMapData()$/;"	f	struct:FurnitureMapData
FurnitureMapData	tmpcode/commond.h	/^struct FurnitureMapData$/;"	s
GAMEMAP	ScenesServer/ChallengeGameManager.h	/^    typedef std::map<DWORD, ChallengeGame *> GAMEMAP;$/;"	t	class:ChallengeGameManager
GAMEMAP_ITER	ScenesServer/ChallengeGameManager.h	/^    typedef std::map<DWORD, ChallengeGame *>::iterator GAMEMAP_ITER;$/;"	t	class:ChallengeGameManager
GAMETIME_TIMER_USERCMD_PARA	base/Command.h	/^const BYTE GAMETIME_TIMER_USERCMD_PARA = 1;$/;"	v
GAMETIME_TIMER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE GAMETIME_TIMER_USERCMD_PARA = 1;$/;"	v
GAME_VERSION	base/Command.h	/^const DWORD GAME_VERSION = 1999;$/;"	v
GAME_VERSION	tmpcode/commond.h	/^const DWORD GAME_VERSION = 1999;$/;"	v
GANG	ScenesServer/Scene.h	/^      GANG    \/\/\/ Âä®ÊÄÅÂú∞Âõæ$/;"	e	enum:Scene::SceneType
GANG	ScenesServer/SceneNpc.h	/^    GANG        \/\/\/ Âä®ÊÄÅÁöÑ$/;"	e	enum:SceneNpc::SceneNpcType
GATEWAYSERVER	base/zMisc.h	/^	GATEWAYSERVER  =  22, \/** ÁΩëÂÖ≥ÊúçÂä°Âô® *\/$/;"	e	enum:ServerType
GBUG	base/zLogger.h	/^	    static const zLevel * GBUG;$/;"	m	class:zLogger::zLevel
GBUG_INT	base/zLogger.h	/^		GBUG_INT    =   log4cxx::Level::DEBUG_INT$/;"	e	enum:zLogger::zLevel::zLevelInt
GEMPIECE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE GEMPIECE_USERCMD_PARA = 220;$/;"	v
GEM_COM	tmpcode/commond.h	/^			GEM_COM=11,$/;"	e	enum:ReuildType
GEM_USERCMD	base/CmdType.h	/^const BYTE GEM_USERCMD      = 42;$/;"	v
GENERAL	base/Command.h	/^  GENERAL,           \/\/ ÊôÆÈÄö‰ºöÂëò$/;"	e	enum:Cmd::UNIONPOWER
GENERAL	tmpcode/commond.h	/^	GENERAL,                   \/\/ ∆’Õ®ª·‘±$/;"	e	enum:UNIONPOWER
GETBACK_CARTOON_PARA	base/Command.h	8237;"	d
GETITEM_FROMNPC_PROGRESSBAR_PARA	tmpcode/commond.h	/^const BYTE GETITEM_FROMNPC_PROGRESSBAR_PARA = 66;$/;"	v
GETITEM_PROGRESSBAR_SECOND_PARA	tmpcode/commond.h	/^const BYTE GETITEM_PROGRESSBAR_SECOND_PARA = 68;$/;"	v
GETITEM_PROGRESSBAR_THIRD_PARA	tmpcode/commond.h	/^const BYTE GETITEM_PROGRESSBAR_THIRD_PARA = 102;$/;"	v
GETOFF_TOWER_TANK_PARA	tmpcode/commond.h	/^const BYTE GETOFF_TOWER_TANK_PARA = 24;$/;"	v
GETON_TOWER_TANK_PARA	tmpcode/commond.h	/^const BYTE GETON_TOWER_TANK_PARA = 23;$/;"	v
GET_AWARD_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE GET_AWARD_ZHENXUAN_PARA = 26;$/;"	v
GET_BACK_TANK_PARA	tmpcode/commond.h	/^const BYTE GET_BACK_TANK_PARA = 16;$/;"	v
GET_BETRADE_IMAGE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE GET_BETRADE_IMAGE_USERCMD_PARAMETER = 43;$/;"	v
GET_BOUNTY	base/Command.h	/^  GET_BOUNTY,\/\/ ÊèêÂèñÂΩìÂâçÂ•ñÂä±Èáë$/;"	e	enum:Cmd::__anon143
GET_CITY_DEF_ITEM	tmpcode/commond.h	/^const BYTE GET_CITY_DEF_ITEM = 208;$/;"	v
GET_CREATE_UNION_ITEM_PARA	base/SessionCommand.h	/^    const BYTE GET_CREATE_UNION_ITEM_PARA = 2;$/;"	v
GET_DAILY_RANDOM_QUEST_PARA	tmpcode/commond.h	/^const BYTE GET_DAILY_RANDOM_QUEST_PARA = 7;$/;"	v
GET_DAY_FLOWERLIST_AWARD	tmpcode/commond.h	/^const BYTE GET_DAY_FLOWERLIST_AWARD = 187;$/;"	v
GET_DECAYED_LINGQI_PARA	tmpcode/commond.h	/^const BYTE GET_DECAYED_LINGQI_PARA = 15;$/;"	v
GET_DETAIL_GIFT_PARA	base/Command.h	/^const BYTE GET_DETAIL_GIFT_PARA = 3;$/;"	v
GET_DETAIL_GIFT_PARA	tmpcode/commond.h	/^const BYTE GET_DETAIL_GIFT_PARA = 3;$/;"	v
GET_EARNING_INFO_UNION_PARA	tmpcode/commond.h	/^const BYTE GET_EARNING_INFO_UNION_PARA  = 143;$/;"	v
GET_EMPLOY_GATHER	tmpcode/commond.h	16612;"	d
GET_EXCHANGE2_GIFT_PARA	tmpcode/commond.h	/^const BYTE GET_EXCHANGE2_GIFT_PARA = 23;$/;"	v
GET_EXCHANGE3_GIFT_PARA	tmpcode/commond.h	/^const BYTE GET_EXCHANGE3_GIFT_PARA = 30;$/;"	v
GET_EXCHANGE4_GIFT_PARA	tmpcode/commond.h	/^const BYTE GET_EXCHANGE4_GIFT_PARA = 46;$/;"	v
GET_EXCHANGE5_GIFT_PARA	tmpcode/commond.h	/^const BYTE GET_EXCHANGE5_GIFT_PARA = 52;$/;"	v
GET_EXCHANGE_GIFT_PARA	tmpcode/commond.h	/^const BYTE GET_EXCHANGE_GIFT_PARA = 16;$/;"	v
GET_FLOWERLIST_AWARD	tmpcode/commond.h	/^const BYTE GET_FLOWERLIST_AWARD = 154;$/;"	v
GET_FORLIFE_AWARD_PROMOTER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE GET_FORLIFE_AWARD_PROMOTER_USERCMD_PARA = 73;$/;"	v
GET_HW_INFO	tmpcode/commond.h	/^const BYTE GET_HW_INFO  = 76;$/;"	v
GET_ITEM_GIFT_PARA	base/Command.h	/^const BYTE GET_ITEM_GIFT_PARA = 5;$/;"	v
GET_ITEM_GIFT_PARA	tmpcode/commond.h	/^const BYTE GET_ITEM_GIFT_PARA = 5;$/;"	v
GET_ITEM_MAIL_PARA	base/Command.h	/^const BYTE GET_ITEM_MAIL_PARA = 9;$/;"	v
GET_ITEM_MAIL_PARA	tmpcode/commond.h	/^const BYTE GET_ITEM_MAIL_PARA = 9;$/;"	v
GET_ITEM_PURCHASE_PARA	tmpcode/commond.h	/^const BYTE GET_ITEM_PURCHASE_PARA = 64;$/;"	v
GET_KING_PURSE_LIST	tmpcode/commond.h	/^const BYTE GET_KING_PURSE_LIST = 95;$/;"	v
GET_LINGQIEGG_USERCMD_PARA	tmpcode/commond.h	/^const BYTE GET_LINGQIEGG_USERCMD_PARA = 219;$/;"	v
GET_LIST_AUCTION_PARA	base/Command.h	/^const BYTE GET_LIST_AUCTION_PARA = 7;$/;"	v
GET_LIST_AUCTION_PARA	tmpcode/commond.h	/^const BYTE GET_LIST_AUCTION_PARA = 7;$/;"	v
GET_LIST_GIFT_PARA	base/Command.h	/^const BYTE GET_LIST_GIFT_PARA = 1;$/;"	v
GET_LIST_GIFT_PARA	tmpcode/commond.h	/^const BYTE GET_LIST_GIFT_PARA = 1;$/;"	v
GET_LIST_MAIL_PARA	base/Command.h	/^const BYTE GET_LIST_MAIL_PARA = 5;$/;"	v
GET_LIST_MAIL_PARA	tmpcode/commond.h	/^const BYTE GET_LIST_MAIL_PARA = 5;$/;"	v
GET_MAGIC_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE GET_MAGIC_PROPERTY_USERCMD_PARA = 159;$/;"	v
GET_MEMBER_LIST_SEPT_GUARD_PARA	tmpcode/commond.h	/^const BYTE GET_MEMBER_LIST_SEPT_GUARD_PARA = 57;$/;"	v
GET_NEWBIE_GIFT_USERCMD	tmpcode/commond.h	/^const BYTE GET_NEWBIE_GIFT_USERCMD = 216;$/;"	v
GET_OFF_TANK_PARA	tmpcode/commond.h	/^const BYTE GET_OFF_TANK_PARA = 11;$/;"	v
GET_ON_TANK_PARA	tmpcode/commond.h	/^const BYTE GET_ON_TANK_PARA = 8;$/;"	v
GET_PACK_BUSINESS_USERCMD	tmpcode/commond.h	/^const BYTE GET_PACK_BUSINESS_USERCMD = 4;$/;"	v
GET_SEPT_EXP_PARA	base/SessionCommand.h	/^    const BYTE GET_SEPT_EXP_PARA = 3;$/;"	v
GET_SEPT_MANTEAU	tmpcode/commond.h	/^const BYTE GET_SEPT_MANTEAU = 86;$/;"	v
GET_SEPT_NORMAL_EXP_PARA	base/SessionCommand.h	/^    const BYTE GET_SEPT_NORMAL_EXP_PARA = 5;$/;"	v
GET_SUIT_PROPERTY_USERCMD_PARA	tmpcode/commond.h	17782;"	d
GET_TANK_PARA	tmpcode/commond.h	/^const BYTE GET_TANK_PARA = 5;$/;"	v
GET_TM_POWER_VALUE_LIST	tmpcode/commond.h	/^const BYTE GET_TM_POWER_VALUE_LIST = 81;$/;"	v
GET_UNION_BUSINESSMEN_USERCMD	tmpcode/commond.h	/^const BYTE GET_UNION_BUSINESSMEN_USERCMD = 19;$/;"	v
GET_UNION_CITY_TAX_PARA	base/Command.h	/^const BYTE GET_UNION_CITY_TAX_PARA = 7;$/;"	v
GET_UNION_MANTEAU	tmpcode/commond.h	/^const BYTE GET_UNION_MANTEAU = 40;$/;"	v
GET_WINNER_GIFT_PARA	base/Command.h	/^const BYTE GET_WINNER_GIFT_PARA = 6;$/;"	v
GET_WINNER_GIFT_PARA	tmpcode/commond.h	/^const BYTE GET_WINNER_GIFT_PARA = 6;$/;"	v
GIFTBAG_RESULT_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE GIFTBAG_RESULT_PROPERTY_USERCMD_PARA = 176;$/;"	v
GIFT_USERCMD	base/CmdType.h	/^const BYTE GIFT_USERCMD      = 44;$/;"	v
GIFT_USERCMD	tmpcode/commond.h	/^const BYTE GIFT_USERCMD                 = 44;$/;"	v
GIVE_BUSINESS_STATE	tmpcode/commond.h	/^const BYTE GIVE_BUSINESS_STATE = 3;$/;"	v
GIVE_RIGHT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE GIVE_RIGHT_USERCMD_PARA = 46;$/;"	v
GLOBAL_MESSAGE_PARA	base/SessionCommand.h	/^	const BYTE GLOBAL_MESSAGE_PARA = 227;$/;"	v
GM	SessionServer/SessionServer.h	/^  char GM[32];$/;"	m	struct:worldMsg
GM	base/GmToolCommand.h	/^      char GM[MAX_NAMESIZE];$/;"	m	struct:Cmd::GmTool::t_Broadcast_GmTool
GM	base/GmToolCommand.h	/^      char GM[MAX_NAMESIZE];$/;"	m	struct:Cmd::GmTool::t_Punish_GmTool
GM	base/GmToolCommand.h	/^      char GM[MAX_NAMESIZE];\/\/GMÂêçÂ≠ó$/;"	m	struct:Cmd::GmTool::t_Log_GmTool
GM	base/SessionCommand.h	/^      char GM[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_broadcastScene_SceneSession
GMTOOL_USERCMD	base/CmdType.h	/^const BYTE GMTOOL_USERCMD    = 34;$/;"	v
GMTOOL_USERCMD	tmpcode/commond.h	/^const BYTE GMTOOL_USERCMD               = 34;$/;"	v
GM_COMMAND_CATCHUSER	base/SessionCommand.h	/^    const BYTE GM_COMMAND_CATCHUSER = 3;  \/\/Êåá‰ª§catchuser$/;"	v
GM_COMMAND_CMD_FILTER	base/SceneCommand.h	/^    const BYTE GM_COMMAND_CMD_FILTER = 1;   \/\/∆¡±Œ÷∏¡Ó$/;"	v
GM_COMMAND_DONTTALK	base/SessionCommand.h	/^    const BYTE GM_COMMAND_DONTTALK = 4;  \/\/Êåá‰ª§donttalk$/;"	v
GM_COMMAND_EMBAR	base/SessionCommand.h	/^    const BYTE GM_COMMAND_EMBAR = 12;  \/\/Êåá‰ª§embar$/;"	v
GM_COMMAND_ERR_FAIL	base/SessionCommand.h	/^    const BYTE GM_COMMAND_ERR_FAIL = 4;  \/\/Êåá‰ª§ÊâßË°åÂ§±Ë¥•$/;"	v
GM_COMMAND_ERR_NOERR	base/SessionCommand.h	/^    const BYTE GM_COMMAND_ERR_NOERR = 0;  \/\/Ê≤°ÊúâÈîôËØØ$/;"	v
GM_COMMAND_ERR_NOUSER	base/SessionCommand.h	/^    const BYTE GM_COMMAND_ERR_NOUSER = 1;  \/\/Áé©ÂÆ∂‰∏çÂú®Á∫ø$/;"	v
GM_COMMAND_ERR_PARAM	base/SessionCommand.h	/^    const BYTE GM_COMMAND_ERR_PARAM = 3;  \/\/ÂèÇÊï∞ÈîôËØØ$/;"	v
GM_COMMAND_ERR_PRIV	base/SessionCommand.h	/^    const BYTE GM_COMMAND_ERR_PRIV = 2;  \/\/ÊùÉÈôê‰∏çË∂≥$/;"	v
GM_COMMAND_FINDUSER	base/SessionCommand.h	/^    const BYTE GM_COMMAND_FINDUSER = 1;  \/\/Êåá‰ª§finduser$/;"	v
GM_COMMAND_GOTOUSER	base/SessionCommand.h	/^    const BYTE GM_COMMAND_GOTOUSER = 2;  \/\/Êåá‰ª§gotouser$/;"	v
GM_COMMAND_KICK	base/SessionCommand.h	/^    const BYTE GM_COMMAND_KICK = 6;  \/\/Êåá‰ª§kick$/;"	v
GM_COMMAND_LEVELUP	base/SessionCommand.h	/^    const BYTE GM_COMMAND_LEVELUP = 9;  \/\/Êåá‰ª§levelup$/;"	v
GM_COMMAND_LOAD_AUTO_XML_CONFIG	base/SessionCommand.h	/^    const BYTE GM_COMMAND_LOAD_AUTO_XML_CONFIG = 218;	\/\/º”‘ÿ◊‘∂ØªØxml$/;"	v
GM_COMMAND_LOAD_GIFT	base/SessionCommand.h	/^    const BYTE GM_COMMAND_LOAD_GIFT = 10;  \/\/Êåá‰ª§loadgift$/;"	v
GM_COMMAND_LOAD_PROCESS	base/SessionCommand.h	/^    const BYTE GM_COMMAND_LOAD_PROCESS = 11;  \/\/Êåá‰ª§loadprocess$/;"	v
GM_COMMAND_LOAD_QUEST	base/SessionCommand.h	/^    const BYTE GM_COMMAND_LOAD_QUEST = 20;$/;"	v
GM_COMMAND_LOCKVALUE	base/SessionCommand.h	/^    const BYTE GM_COMMAND_LOCKVALUE = 8;  \/\/Êåá‰ª§lockvalue$/;"	v
GM_COMMAND_NEWZONE	base/SessionCommand.h	/^    const BYTE GM_COMMAND_NEWZONE = 13;  \/\/ÈÖçÁΩÆÈáçÁîüÁÇπ$/;"	v
GM_COMMAND_REFRESH_GENERAL	base/SessionCommand.h	/^    const BYTE GM_COMMAND_REFRESH_GENERAL = 14;  \/\/Âà∑Êñ∞Â§ßÂ∞ÜÂÜ$/;"	v
GM_COMMAND_SETPRIV	base/SessionCommand.h	/^    const BYTE GM_COMMAND_SETPRIV = 7;  \/\/Êåá‰ª§setpriv$/;"	v
GM_COMMAND_STATE_REQ	base/SessionCommand.h	/^    const BYTE GM_COMMAND_STATE_REQ = 1;  \/\/Êåá‰ª§Áä∂ÊÄÅreqË°®Á§∫ËØ∑Ê±Ç$/;"	v
GM_COMMAND_STATE_RET	base/SessionCommand.h	/^    const BYTE GM_COMMAND_STATE_RET = 2;  \/\/Êåá‰ª§Áä∂ÊÄÅretË°®Á§∫ËøîÂõûÁªìÊûú$/;"	v
GM_COMMAND_TALK	base/SessionCommand.h	/^    const BYTE GM_COMMAND_TALK = 5;  \/\/Êåá‰ª§talk$/;"	v
GM_SHOW_DYNAMIC_MAP_PARA	tmpcode/commond.h	/^const BYTE GM_SHOW_DYNAMIC_MAP_PARA = 99;$/;"	v
GODSEAL_ASSAULT	base/Object.h	/^        GODSEAL_ASSAULT = 104,   \/\/«øœÆÃ◊◊∞$/;"	e	enum:__anon55
GODSEAL_Attr_AttackAndDefend	base/Object.h	/^	GODSEAL_Attr_AttackAndDefend = 40,	\/\/‘ˆº”À´π•xµ„,ºı…ŸÀ´∑¿yµ„$/;"	e	enum:__anon56
GODSEAL_Attr_Bdam	base/Object.h	/^	GODSEAL_Attr_Bdam = 3,				\/\/…À∫¶‘ˆº” %0.2f%%$/;"	e	enum:__anon56
GODSEAL_Attr_Blife	base/Object.h	/^	GODSEAL_Attr_Blife = 7,				\/\/…˙√¸     %0.2f%%$/;"	e	enum:__anon56
GODSEAL_Attr_DecDam_Num	base/Object.h	/^	GODSEAL_Attr_DecDam_Num = 21,				\/\/ ‹…Àºı…Ÿ%dµ„$/;"	e	enum:__anon56
GODSEAL_Attr_DefendAndAttack	base/Object.h	/^	GODSEAL_Attr_DefendAndAttack = 41,	\/\/‘ˆº”À´∑¿xµ„,ºı…ŸÀ´π•yµ„$/;"	e	enum:__anon56
GODSEAL_Attr_Dmdam	base/Object.h	/^	GODSEAL_Attr_Dmdam = 2,				\/\/ƒß∑®…À∫¶ºı√‚ %0.2f%%$/;"	e	enum:__anon56
GODSEAL_Attr_Dpdam	base/Object.h	/^	GODSEAL_Attr_Dpdam = 1,				\/\/ŒÔ¿Ì…À∫¶ºı√‚ %0.2f%%$/;"	e	enum:__anon56
GODSEAL_Attr_ExcellentAttack	base/Object.h	/^	GODSEAL_Attr_ExcellentAttack = 6,	\/\/◊ø‘Ω“ªª˜ %d$/;"	e	enum:__anon56
GODSEAL_Attr_GainExp	base/Object.h	/^	GODSEAL_Attr_GainExp = 28,			\/\/…±œ‡≤Ó10º∂“‘ƒ⁄µƒπ÷‘ˆº”%dµ„æ≠—È$/;"	e	enum:__anon56
GODSEAL_Attr_Ignoredef	base/Object.h	/^	GODSEAL_Attr_Ignoredef = 5,			\/\/∫ˆ ”∑¿”˘ %d$/;"	e	enum:__anon56
GODSEAL_Attr_IncAllAttrs_NUM	base/Object.h	/^	GODSEAL_Attr_IncAllAttrs_NUM = 26,	\/\/»´ Ù–‘Ã·…˝xµ„$/;"	e	enum:__anon56
GODSEAL_Attr_IncCruel	base/Object.h	/^	GODSEAL_Attr_IncCruel = 27,			\/\/±©ª˜Ã·…˝x%$/;"	e	enum:__anon56
GODSEAL_Attr_IncCruelDefend_NUM	base/Object.h	/^	GODSEAL_Attr_IncCruelDefend_NUM = 31,		\/\/∑¿±©ª˜‘ˆº”xµ„$/;"	e	enum:__anon56
GODSEAL_Attr_IncDam_Num	base/Object.h	/^	GODSEAL_Attr_IncDam_Num = 20,				\/\/…À∫¶‘ˆº”%dµ„$/;"	e	enum:__anon56
GODSEAL_Attr_IncEvadeRate	base/Object.h	/^	GODSEAL_Attr_IncEvadeRate = 32,			\/\/∂„±‹¬ ‘ˆº”xµ„$/;"	e	enum:__anon56
GODSEAL_Attr_IncMagicAttack	base/Object.h	/^	GODSEAL_Attr_IncMagicAttack = 25,	\/\/ƒß∑®π•ª˜¡¶Ã·…˝x%$/;"	e	enum:__anon56
GODSEAL_Attr_IncMagicAttack_NUM	base/Object.h	/^	GODSEAL_Attr_IncMagicAttack_NUM = 23,	\/\/ƒß∑®π•ª˜¡¶‘ˆº”xµ„$/;"	e	enum:__anon56
GODSEAL_Attr_IncMagicDefend_NUM	base/Object.h	/^	GODSEAL_Attr_IncMagicDefend_NUM = 30,	\/\/ƒß∑®∑¿”˘¡¶‘ˆº”xµ„$/;"	e	enum:__anon56
GODSEAL_Attr_IncPhicAttack	base/Object.h	/^	GODSEAL_Attr_IncPhicAttack = 24,		\/\/ŒÔ¿Ìπ•ª˜¡¶Ã·…˝x%$/;"	e	enum:__anon56
GODSEAL_Attr_IncPhicAttack_NUM	base/Object.h	/^	GODSEAL_Attr_IncPhicAttack_NUM = 22,		\/\/ŒÔ¿Ìπ•ª˜¡¶‘ˆº”xµ„$/;"	e	enum:__anon56
GODSEAL_Attr_IncPhicDefend_NUM	base/Object.h	/^	GODSEAL_Attr_IncPhicDefend_NUM = 29,	\/\/ŒÔ¿Ì∑¿”˘¡¶‘ˆº”xµ„$/;"	e	enum:__anon56
GODSEAL_Attr_MobExpPercent	base/Object.h	/^	GODSEAL_Attr_MobExpPercent = 33,		\/\/…±π÷æ≠—È‘ˆº”x%$/;"	e	enum:__anon56
GODSEAL_Attr_Rdam	base/Object.h	/^	GODSEAL_Attr_Rdam = 4,				\/\/…À∫¶∑¥µØ %0.2f%%$/;"	e	enum:__anon56
GODSEAL_Attr_RetrieveLife	base/Object.h	/^	GODSEAL_Attr_RetrieveLife = 42,		\/\/√øx√Î…˙√¸ª÷∏¥yµ„$/;"	e	enum:__anon56
GODSEAL_Attr_RetrieveMagical	base/Object.h	/^	GODSEAL_Attr_RetrieveMagical = 43	\/\/√øx√Îƒß¡¶ª÷∏¥yµ„$/;"	e	enum:__anon56
GODSEAL_BENLEI	base/Object.h	/^		GODSEAL_BENLEI = 123,      \/\/±º¿◊Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_BLOOD	base/Object.h	/^        GODSEAL_BLOOD = 111,     \/\/—™…´Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_CANGQIONG	base/Object.h	/^		GODSEAL_CANGQIONG = 113, \/\/≤‘Ò∑Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_CHAOS	base/Object.h	/^        GODSEAL_CHAOS = 2,   \/\/ªÏ„ÁÃ◊◊∞$/;"	e	enum:__anon55
GODSEAL_CROSS	base/Object.h	/^        GODSEAL_CROSS = 106,      \/\/ Æ◊÷æ¸Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_DARK	base/Object.h	/^        GODSEAL_DARK  = 4,   \/\/∫⁄∞µÃ◊◊∞$/;"	e	enum:__anon55
GODSEAL_DEFENCE	base/Object.h	/^        GODSEAL_DEFENCE = 105,   \/\/≥«∑¿æ¸Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_ESSENCE	base/Object.h	/^		GODSEAL_ESSENCE = 108,    \/\/æ´”¢Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_FENGBAO	base/Object.h	/^		GODSEAL_FENGBAO = 126,     \/\/∑Á±©Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_FLAME	base/Object.h	/^        GODSEAL_FLAME = 103,     \/\/¡“—ÊÃ◊◊∞$/;"	e	enum:__anon55
GODSEAL_GUANGHUI	base/Object.h	/^		GODSEAL_GUANGHUI = 117,  \/\/π‚ª‘Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_GUYONGJUN	base/Object.h	/^		GODSEAL_GUYONGJUN = 107,  \/\/πÕ”∂æ¸Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_HEIYI	base/Object.h	/^		GODSEAL_HEIYI = 127,       \/\/∫⁄“ÌÃ◊◊∞$/;"	e	enum:__anon55
GODSEAL_KUANGSHEN	base/Object.h	/^		GODSEAL_KUANGSHEN = 130,   \/\/øÒ…ÒÃ◊◊∞$/;"	e	enum:__anon55
GODSEAL_KUANSHU	base/Object.h	/^		GODSEAL_KUANSHU = 121,     \/\/øÌÀ°Ã◊◊∞		$/;"	e	enum:__anon55
GODSEAL_LIGHT	base/Object.h	/^        GODSEAL_LIGHT = 1,   \/\/π‚√˜Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_MINGHUO	base/Object.h	/^		GODSEAL_MINGHUO = 128,     \/\/⁄§—◊Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_MINGSHEN	base/Object.h	/^		GODSEAL_MINGSHEN = 114,  \/\/⁄§…ÒÃ◊◊∞$/;"	e	enum:__anon55
GODSEAL_MINGYAN	base/Object.h	/^		GODSEAL_MINGYAN = 125,     \/\/⁄§—€Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_MOON	base/Object.h	/^		GODSEAL_MOON = 110,      \/\/√˜‘¬Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_NONE	base/Object.h	/^        GODSEAL_NONE  = 0,    \/\/Œﬁ$/;"	e	enum:__anon55
GODSEAL_PURPLE	base/Object.h	/^        GODSEAL_PURPLE = 112,    \/\/◊œΩÃ◊◊∞$/;"	e	enum:__anon55
GODSEAL_QIANCHENG	base/Object.h	/^		GODSEAL_QIANCHENG = 119,   \/\/ÚØ≥œÃ◊◊∞$/;"	e	enum:__anon55
GODSEAL_SHEHUN	base/Object.h	/^		GODSEAL_SHEHUN = 115,    \/\/…„ªÍÃ◊◊∞$/;"	e	enum:__anon55
GODSEAL_SHENGGUANG	base/Object.h	/^		GODSEAL_SHENGGUANG = 120,  \/\/ •π‚Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_SHENGJIE	base/Object.h	/^		GODSEAL_SHENGJIE = 122,    \/\/ •Ω‡Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_SPIRIT	base/Object.h	/^        GODSEAL_SPIRIT = 101,    \/\/ •¡ÈÃ◊◊∞$/;"	e	enum:__anon55
GODSEAL_SUN	base/Object.h	/^		GODSEAL_SUN  = 100,      \/\/–Ò»’Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_TANXI	base/Object.h	/^		GODSEAL_TANXI = 118,     \/\/Ãæœ¢Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_THORNS	base/Object.h	/^        GODSEAL_THORNS = 102,    \/\/æ£º¨Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_WARD	base/Object.h	/^        GODSEAL_WARD = 109,       \/\/ ÿª§Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_XUANMO	base/Object.h	/^		GODSEAL_XUANMO = 124,      \/\/Ï≈ƒßÃ◊◊∞$/;"	e	enum:__anon55
GODSEAL_ZIDI	base/Object.h	/^		GODSEAL_ZIDI = 129,        \/\/◊œµ€Ã◊◊∞$/;"	e	enum:__anon55
GODSEAL_ZIYAN	base/Object.h	/^		GODSEAL_ZIYAN = 116,     \/\/◊œ—◊Ã◊◊∞$/;"	e	enum:__anon55
GOLD_GIVE_USERCMD_PARAMETER	base/Command.h	4125;"	d
GOLD_USERCMD	base/CmdType.h	/^const BYTE GOLD_USERCMD      = 31;$/;"	v
GOLD_USERCMD	tmpcode/commond.h	/^const BYTE GOLD_USERCMD         = 31; $/;"	v
GONG_JI_ZHUANG_HUAN	tmpcode/commond.h	/^	GONG_JI_ZHUANG_HUAN = 1203,\/\/π•ª˜◊™ªª$/;"	e	enum:__anon205
GOODNESS_0	base/Command.h	/^  GOODNESS_0    = -120 & 0x0000FFFF,\/\/Ëã±ÈõÑ$/;"	e	enum:Cmd::__anon70
GOODNESS_1	base/Command.h	/^  GOODNESS_1    = -60 & 0x0000FFFF, \/\/‰æ†Â£´$/;"	e	enum:Cmd::__anon70
GOODNESS_2_1	base/Command.h	/^  GOODNESS_2_1  = 0,       \/\/ÊôÆÈÄö1$/;"	e	enum:Cmd::__anon70
GOODNESS_2_2	base/Command.h	/^  GOODNESS_2_2  = 0xFF000000,   \/\/ÊôÆÈÄö2$/;"	e	enum:Cmd::__anon70
GOODNESS_3	base/Command.h	/^  GOODNESS_3    = 60,       \/\/Ê≠πÂæí$/;"	e	enum:Cmd::__anon70
GOODNESS_4	base/Command.h	/^  GOODNESS_4    = 120,       \/\/ÊÅ∂Âæí$/;"	e	enum:Cmd::__anon70
GOODNESS_5	base/Command.h	/^  GOODNESS_5    = 180,       \/\/ÊÅ∂È≠î$/;"	e	enum:Cmd::__anon70
GOODNESS_6	base/Command.h	/^  GOODNESS_6    = 300,       \/\/È≠îÂ§¥$/;"	e	enum:Cmd::__anon70
GOODNESS_7	base/Command.h	/^  GOODNESS_7    = 10000,     \/\/ÂèõÂõΩ$/;"	e	enum:Cmd::__anon70
GOODNESS_ATT	base/Command.h	/^  GOODNESS_ATT  = 0x00010000,   \/\/‰∏ªÂä®‰º§ÂÆ≥Âà´‰∫∫$/;"	e	enum:Cmd::__anon70
GOODNESS_DEF	base/Command.h	/^  GOODNESS_DEF  = 0x00010000 << 1        \/\/Ëá™Âç´Êñπ$/;"	e	enum:Cmd::__anon70
GOODNESS_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE GOODNESS_MAPSCREEN_USERCMD_PARA = 67;$/;"	v
GOODNESS_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE GOODNESS_MAPSCREEN_USERCMD_PARA = 67;$/;"	v
GOTO_ATT_GUARDNPC_USERCMD	tmpcode/commond.h	/^const BYTE GOTO_ATT_GUARDNPC_USERCMD = 14;$/;"	v
GOTO_CITIZEN_USERCMD	tmpcode/commond.h	/^const BYTE GOTO_CITIZEN_USERCMD = 109;$/;"	v
GOTO_HOME_PARA	tmpcode/commond.h	/^const BYTE GOTO_HOME_PARA						= 1;$/;"	v
GOTO_MY_SPOUSE_PARA	tmpcode/commond.h	/^const BYTE GOTO_MY_SPOUSE_PARA = 31;$/;"	v
GOTO_PLAYER_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE GOTO_PLAYER_ZHENXUAN_PARA = 23;$/;"	v
GOT_REWARD_PARA	tmpcode/commond.h	/^const  BYTE GOT_REWARD_PARA = 3;$/;"	v
GOUHUO_USERCMD	tmpcode/commond.h	/^const BYTE GOUHUO_USERCMD			= 134;$/;"	v
GO_TRAIN_PROPERTY_USERCMD_PARA	base/Command.h	3182;"	d
GROWUP_DEGREE	tmpcode/commond.h	/^        GROWUP_DEGREE   = 2,    \/\/≥…≥§∂»$/;"	e	enum:DRAGON_DATA_TYPE
GUESS_BARKEEPER_STATE	tmpcode/commond.h	/^const BYTE GUESS_BARKEEPER_STATE = 22;$/;"	v
GUESS_CLOTH	tmpcode/commond.h	/^	 GUESS_CLOTH = 2,   \/\/≤¬»≠◊¥Ã¨≤º$/;"	e	enum:__anon290
GUESS_OVER	tmpcode/commond.h	/^	 GUESS_OVER = 3,     \/\/\/ ≤ª∫»¡À(Ω·’À)$/;"	e	enum:__anon290
GUESS_SHEAR	tmpcode/commond.h	/^	 GUESS_SHEAR = 1,  \/\/≤¬»≠◊¥Ã¨ºÙ◊”$/;"	e	enum:__anon290
GUESS_STONE	tmpcode/commond.h	/^	 GUESS_STONE = 0,  \/\/≤¬»≠◊¥Ã¨ ØÕ∑$/;"	e	enum:__anon290
GUIZU	tmpcode/commond.h	/^	 GUIZU,               \/\/πÛ◊Â  $/;"	e	enum:__anon215
GUYDEAD_DTS_PARA	tmpcode/commond.h	/^ const BYTE GUYDEAD_DTS_PARA = 4;$/;"	v
GYList	FLServer/GYListManager.h	/^	GYList()$/;"	f	struct:GYList
GYList	FLServer/GYListManager.h	/^	GYList(const GYList& gy)$/;"	f	struct:GYList
GYList	FLServer/GYListManager.h	/^struct GYList$/;"	s
GYListContainer	FLServer/GYListManager.h	/^	typedef std::multimap<const GameZone_t,GYList> GYListContainer;$/;"	t	class:GYListManager
GYListContainer_iterator	FLServer/GYListManager.h	/^	typedef GYListContainer::iterator GYListContainer_iterator;$/;"	t	class:GYListManager
GYListContainer_value_type	FLServer/GYListManager.h	/^	typedef GYListContainer::value_type GYListContainer_value_type;$/;"	t	class:GYListManager
GYListManager	FLServer/GYListManager.h	/^	GYListManager() {};$/;"	f	class:GYListManager
GYListManager	FLServer/GYListManager.h	/^class GYListManager$/;"	c
GameAccelKeyType_Equipment	tmpcode/commond.h	/^	GameAccelKeyType_Equipment, \/\/◊∞±∏£®ø…“‘◊∞‘⁄…Ì…œµƒ£©$/;"	e	enum:enumGameAccelKeyType
GameAccelKeyType_Face	base/Command.h	/^  GameAccelKeyType_Face,\/\/ Ë°®ÊÉÖ$/;"	e	enum:Cmd::enumGameAccelKeyType
GameAccelKeyType_Face	tmpcode/commond.h	/^	GameAccelKeyType_Face,	\/\/ ±Ì«È$/;"	e	enum:enumGameAccelKeyType
GameAccelKeyType_Item	base/Command.h	/^  GameAccelKeyType_Item,\/\/ ‰ΩøÁî®Áâ©ÂìÅ$/;"	e	enum:Cmd::enumGameAccelKeyType
GameAccelKeyType_Item	tmpcode/commond.h	/^	GameAccelKeyType_Item,	\/\/  π”√ŒÔ∆∑£®ø…“‘≥‘µƒ£©$/;"	e	enum:enumGameAccelKeyType
GameAccelKeyType_None	base/Command.h	/^  GameAccelKeyType_None = 0,$/;"	e	enum:Cmd::enumGameAccelKeyType
GameAccelKeyType_None	tmpcode/commond.h	/^	GameAccelKeyType_None = 0,$/;"	e	enum:enumGameAccelKeyType
GameAccelKeyType_Num	base/Command.h	/^  GameAccelKeyType_Num,$/;"	e	enum:Cmd::enumGameAccelKeyType
GameAccelKeyType_Num	tmpcode/commond.h	/^	GameAccelKeyType_Num,$/;"	e	enum:enumGameAccelKeyType
GameAccelKeyType_OneSuit	tmpcode/commond.h	/^	GameAccelKeyType_OneSuit, \/\/“ªº¸ªª◊∞£®ø…“‘◊∞‘⁄…Ì…œµƒ£©$/;"	e	enum:enumGameAccelKeyType
GameAccelKeyType_Skill	base/Command.h	/^  GameAccelKeyType_Skill,\/\/ ÊäÄËÉΩ$/;"	e	enum:Cmd::enumGameAccelKeyType
GameAccelKeyType_Skill	tmpcode/commond.h	/^	GameAccelKeyType_Skill,	\/\/ ººƒ‹$/;"	e	enum:enumGameAccelKeyType
GameCardM	ScenesServer/CardManager.cpp	/^GameCardM::GameCardM()$/;"	f	class:GameCardM
GameCardM	ScenesServer/CardManager.h	/^class GameCardM:private zEntryManager< zEntryID >$/;"	c
GameTimeSyn	GatewayServer/GatewayTask.h	/^	zRTime GameTimeSyn;$/;"	m	class:GatewayTask
GameType	tmpcode/commond.h	/^	WORD GameType;$/;"	m	struct:stRtnSoundTokenCmd
GameZone	base/RolechangeCommand.h	/^	GameZone_t GameZone;$/;"	m	struct:Cmd::Rolechange::t_Req_ZoneList
GameZone_t	base/zType.h	/^  GameZone_t()$/;"	f	struct:GameZone_t
GameZone_t	base/zType.h	/^  GameZone_t(const GameZone_t &gameZone)$/;"	f	struct:GameZone_t
GameZone_t	base/zType.h	/^struct GameZone_t$/;"	s
GangScene	ScenesServer/Scene.cpp	/^GangScene::GangScene():Scene()$/;"	f	class:GangScene
GangScene	ScenesServer/Scene.h	/^class GangScene : public Scene$/;"	c
GangSceneTime	ScenesServer/Scene.h	/^	virtual void GangSceneTime(const zRTime& ctv) { return; }$/;"	f	class:Scene
GateCmdCheck	GatewayServer/GatewayTask.h	/^class GateCmdCheck : public CmdCheck$/;"	c
GateSelectUserSession	GatewayServer/GateUser.h	/^	GateSelectUserSession(DWORD accid)$/;"	f	class:GateSelectUserSession
GateSelectUserSession	GatewayServer/GateUser.h	/^class GateSelectUserSession:private zNoncopyable$/;"	c
GateUser	GatewayServer/GateUser.cpp	/^GateUser::GateUser(DWORD accID,GatewayTask *histask):zUser(),GateSelectUserSession(accID)$/;"	f	class:GateUser
GateUser	GatewayServer/GateUser.h	/^class GateUser:public zUser,public GateSelectUserSession$/;"	c
GateUserAccountID	GatewayServer/GateUserManager.h	/^	GateUserAccountID() {}$/;"	f	class:GateUserAccountID
GateUserAccountID	GatewayServer/GateUserManager.h	/^class GateUserAccountID:protected LimitHash<DWORD,GateUser *>$/;"	c
GateUserManager	GatewayServer/GateUserManager.cpp	/^GateUserManager::GateUserManager()$/;"	f	class:GateUserManager
GateUserManager	GatewayServer/GateUserManager.h	/^class GateUserManager:public zEntryManager<zEntryID, zEntryTempID, zEntryName>, protected GateUserAccountID$/;"	c
GateUser_SET	GatewayServer/GateUserManager.h	/^	typedef std::set<GateUser *> GateUser_SET;$/;"	t	class:GateUserManager
GateUser_SET_iter	GatewayServer/GateUserManager.h	/^	typedef GateUser_SET::iterator GateUser_SET_iter;$/;"	t	class:GateUserManager
GatewayConfile	GatewayServer/GatewayServer.cpp	/^class GatewayConfile:public zConfile$/;"	c
GatewayService	GatewayServer/GatewayServer.h	/^	GatewayService() : zSubNetService("Õ¯πÿ∑˛ŒÒ∆˜",GATEWAYSERVER)$/;"	f	class:GatewayService
GatewayService	GatewayServer/GatewayServer.h	/^class GatewayService : public zSubNetService$/;"	c
GatewayTask	GatewayServer/GatewayTask.cpp	/^GatewayTask::GatewayTask(zTCPTaskPool *pool, $/;"	f	class:GatewayTask
GatewayTask	GatewayServer/GatewayTask.h	/^class GatewayTask : public zTCPTask$/;"	c
GatewayTaskCallback	GatewayServer/GatewayTaskManager.h	/^	typedef zEntryCallback<GatewayTask> GatewayTaskCallback;$/;"	t	class:GatewayTaskManager
GatewayTaskCheckTime	GatewayServer/TimeTick.cpp	/^struct GatewayTaskCheckTime : public GatewayTaskManager::GatewayTaskCallback$/;"	s
GatewayTaskHashmap	GatewayServer/GatewayTaskManager.h	/^	typedef __gnu_cxx::hash_map<DWORD,GatewayTask *> GatewayTaskHashmap;$/;"	t	class:GatewayTaskManager
GatewayTaskHashmap_const_iterator	GatewayServer/GatewayTaskManager.h	/^	typedef GatewayTaskHashmap::const_iterator GatewayTaskHashmap_const_iterator;$/;"	t	class:GatewayTaskManager
GatewayTaskHashmap_iterator	GatewayServer/GatewayTaskManager.h	/^	typedef GatewayTaskHashmap::iterator GatewayTaskHashmap_iterator;$/;"	t	class:GatewayTaskManager
GatewayTaskHashmap_pair	GatewayServer/GatewayTaskManager.h	/^	typedef GatewayTaskHashmap::value_type GatewayTaskHashmap_pair;$/;"	t	class:GatewayTaskManager
GatewayTaskManager	GatewayServer/GatewayTaskManager.cpp	/^GatewayTaskManager::GatewayTaskManager()$/;"	f	class:GatewayTaskManager
GatewayTaskManager	GatewayServer/GatewayTaskManager.h	/^class GatewayTaskManager$/;"	c
GatewayTimeTick	GatewayServer/TimeTick.h	/^	GatewayTimeTick() : zThread("TimeTick"),one_second(1) {};$/;"	f	class:GatewayTimeTick
GatewayTimeTick	GatewayServer/TimeTick.h	/^class GatewayTimeTick : public zThread$/;"	c
GemIDs	tmpcode/commond.h	/^        DWORD GemIDs[5]; \/\/±¶ Øæ´ Ø¿‡ŒÔ∆∑µƒŒ®“ªid$/;"	m	struct:stComposeElecGemUserCmd
GemIDs	tmpcode/commond.h	/^    DWORD GemIDs[5]; \/\/±¶ Øæ´ Ø¿‡ŒÔ∆∑µƒŒ®“ªid$/;"	m	struct:stChangeElecColorUserCmd
Get	ScenesServer/QuestEvent.h	/^  class Get$/;"	c	namespace:Trigger
GetAffectScreen	ScenesServer/Scene.cpp	/^  GetAffectScreen(DWORD g) :group(g) {};$/;"	f	struct:GetAffectScreen
GetAffectScreen	ScenesServer/Scene.cpp	/^struct GetAffectScreen : public zSceneEntryCallBack$/;"	s
GetAllRemovePosNpc	ScenesServer/SceneUser.cpp	/^	GetAllRemovePosNpc(SceneUser* pUser) {$/;"	f	struct:GetAllRemovePosNpc
GetAllRemovePosNpc	ScenesServer/SceneUser.cpp	/^struct GetAllRemovePosNpc : public zSceneEntryCallBack$/;"	s
GetAllRemovePosUser	ScenesServer/SceneUser.cpp	/^	GetAllRemovePosUser(SceneUser* pUser) {$/;"	f	struct:GetAllRemovePosUser
GetAllRemovePosUser	ScenesServer/SceneUser.cpp	/^struct GetAllRemovePosUser : public zSceneEntryCallBack$/;"	s
GetEnvryOneAndSend	ScenesServer/SceneUser.cpp	/^	GetEnvryOneAndSend(SceneUser *pUser) : pUser(pUser) $/;"	f	struct:GetEnvryOneAndSend
GetEnvryOneAndSend	ScenesServer/SceneUser.cpp	/^struct GetEnvryOneAndSend : public zSceneEntryCallBack$/;"	s
GetIntervalAmendmaent	ScenesServer/SceneDefine.h	/^  DWORD GetIntervalAmendmaent(bool Dead)$/;"	f	struct:t_NpcDefine
GetP	ScenesServer/QuestAction.h	/^  class GetP$/;"	c	namespace:Op
GetRandPos	ScenesServer/WayPoint.h	/^	zPos GetRandPos() \/\/ ËøîÂõûËØ•Âå∫ÂüüÂÜÖÈöèÊú∫‰∏ÄÁÇπ$/;"	f	struct:zZone
GetSceneByFileName	ScenesServer/SceneManager.cpp	/^    GetSceneByFileName(const char *name) : ret(NULL),name(name) {};$/;"	f	class:GetSceneByFileName
GetSceneByFileName	ScenesServer/SceneManager.cpp	/^class GetSceneByFileName:public SceneCallBack$/;"	c
GetServerTypeName	SuperServer/ServerTask.cpp	/^const char* ServerTask::GetServerTypeName(const WORD wdServerType)$/;"	f	class:ServerTask
Gift	base/xmlparser/giftbag.h	/^    struct Gift$/;"	s	struct:GiftBagConfig
GiftBagConfig	base/xmlparser/giftbag.h	/^struct GiftBagConfig$/;"	s
GiftBagManager	ScenesServer/GiftBagManager.cpp	/^GiftBagManager::GiftBagManager()$/;"	f	class:GiftBagManager
GiftBagManager	ScenesServer/GiftBagManager.h	/^class GiftBagManager : public Singleton<GiftBagManager>$/;"	c
GiftItem	tmpcode/commond.h	/^struct GiftItem$/;"	s
GiftMap	base/xmlparser/giftbag.h	/^    typedef xml_node_map<DWORD,Gift>	GiftMap;$/;"	t	struct:GiftBagConfig
GiftMapConstIter	base/xmlparser/giftbag.h	/^    typedef GiftMap::const_iterator	GiftMapConstIter;$/;"	t	struct:GiftBagConfig
GiftMapIter	base/xmlparser/giftbag.h	/^    typedef GiftMap::iterator	GiftMapIter;$/;"	t	struct:GiftBagConfig
Give_MatarialNum	ScenesServer/SceneUser.h	/^    DWORD Give_MatarialNum;$/;"	m	struct:SceneUser
GlobalAction	ScenesServer/QuestAction.h	/^  GlobalAction(ScenesParser& p) : _id(0)$/;"	f	class:GlobalAction
GlobalAction	ScenesServer/QuestAction.h	/^class GlobalAction : public Action$/;"	c
GlobalCardIndex	ScenesServer/CardManager.cpp	/^GlobalCardIndex::GlobalCardIndex()$/;"	f	class:GlobalCardIndex
GlobalCardIndex	ScenesServer/CardManager.h	/^class GlobalCardIndex:private zEntryManager< zEntryID >$/;"	c
GlobalCondition	ScenesServer/QuestCondition.h	/^  GlobalCondition(ScenesParser& p)$/;"	f	class:GlobalCondition
GlobalCondition	ScenesServer/QuestCondition.h	/^class GlobalCondition : public Condition$/;"	c
GlobalObjectIndex	ScenesServer/ObjectManager.cpp	/^GlobalObjectIndex::GlobalObjectIndex()$/;"	f	class:GlobalObjectIndex
GlobalObjectIndex	ScenesServer/ObjectManager.h	/^class GlobalObjectIndex:private zEntryManager< zEntryID >$/;"	c
GlobalTempArchiveIndex	SessionServer/TempArchive.cpp	/^GlobalTempArchiveIndex::GlobalTempArchiveIndex()$/;"	f	class:GlobalTempArchiveIndex
GlobalTempArchiveIndex	SessionServer/TempArchive.h	/^class GlobalTempArchiveIndex\/\/:private zEntryManager< zEntryID >$/;"	c
GlobalVar	ScenesServer/Quest.h	/^typedef GlobalVarImpl<1> GlobalVar;$/;"	t
GlobalVarImpl	ScenesServer/Quest.h	/^  GlobalVarImpl()$/;"	f	class:GlobalVarImpl
GlobalVarImpl	ScenesServer/Quest.h	/^class GlobalVarImpl$/;"	c
GlobalVars	ScenesServer/script_func.h	/^class GlobalVars$/;"	c
Gm	ScenesServer/Chat.h	/^struct Gm$/;"	s
GmCmds	ScenesServer/Chat.cpp	/^Gm GmCmds[]=$/;"	v
GmTool	base/GmToolCommand.h	/^  namespace GmTool$/;"	n	namespace:Cmd
GouhuoMemInfo	tmpcode/commond.h	/^struct GouhuoMemInfo$/;"	s
Great	ScenesServer/QuestCondition.h	/^  class Great$/;"	c	namespace:Op
GroupCardData	ScenesServer/GroupCardManager.h	/^	GroupCardData()$/;"	f	class:GroupCardData
GroupCardData	ScenesServer/GroupCardManager.h	/^class GroupCardData$/;"	c
GroupCardManager	ScenesServer/GroupCardManager.cpp	/^GroupCardManager::GroupCardManager()$/;"	f	class:GroupCardManager
GroupCardManager	ScenesServer/GroupCardManager.h	/^class GroupCardManager : public Singleton<GroupCardManager>$/;"	c
GuardSortData	tmpcode/commond.h	/^	GuardSortData()$/;"	f	struct:GuardSortData
GuardSortData	tmpcode/commond.h	/^struct GuardSortData$/;"	s
H	ScenesServer/zObject.h	/^    H = 6,$/;"	e	enum:StorePack::__anon177
H	ScenesServer/zObject.h	/^  static const BYTE H = 10;$/;"	m	class:PetPack
HAIRRGB_MASK	base/CharBase.h	15;"	d
HAIRTYPE_MASK	base/CharBase.h	14;"	d
HAIR_PROPERTY_USERCMD_PARA	base/Command.h	2948;"	d
HALF_ITERATIONS	base/EncDec/EncDec.h	171;"	d
HALF_ITERATIONS	base/EncDec/mydes.h	72;"	d
HAND1_PACK	ScenesServer/zCard.h	/^      HAND1_PACK = 4,$/;"	e	enum:CardSlots::__anon197
HAND2_PACK	ScenesServer/zCard.h	/^      HAND2_PACK = 8,$/;"	e	enum:CardSlots::__anon197
HANDL	ScenesServer/zObject.h	/^      HANDL,$/;"	e	enum:EquipPack::EQUIPNO
HANDLE_BLACK_LIST_PARA	base/SessionCommand.h	/^    const BYTE HANDLE_BLACK_LIST_PARA = 1;$/;"	v
HANDR	ScenesServer/zObject.h	/^      HANDR,$/;"	e	enum:EquipPack::EQUIPNO
HARVEST_SOIL_HOUSE_USERCMD	tmpcode/commond.h	/^const BYTE HARVEST_SOIL_HOUSE_USERCMD = 25;$/;"	v
HAS_EXPRESS_TIMES_WEEKEND_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE HAS_EXPRESS_TIMES_WEEKEND_ZHENXUAN_PARA = 17;$/;"	v
HAS_TASK_DIALOG	ScenesServer/Quest.h	14;"	d
HAVE_QUEST	tmpcode/commond.h	/^	HAVE_QUEST = 2, \/\/’˝‘⁄◊ˆ—´’¬»ŒŒÒ$/;"	e	enum:TitleState
HEAD	ScenesServer/zObject.h	/^      HEAD,$/;"	e	enum:EquipPack::EQUIPNO
HEAD_TOP_TIPS_USERCMD_PARA	tmpcode/commond.h	/^const BYTE HEAD_TOP_TIPS_USERCMD_PARA = 88;\/\/‘⁄»ÀŒÔÕ∑∂•œ‘ æÃ· æ–≈œ¢$/;"	v
HEIGHT	ScenesServer/zCard.h	/^	    HEIGHT = 1,$/;"	e	enum:BattleSlot::__anon191
HEIGHT	ScenesServer/zCard.h	/^	    HEIGHT = 1,$/;"	e	enum:EquipSlot::__anon193
HEIGHT	ScenesServer/zCard.h	/^	    HEIGHT = 1,$/;"	e	enum:HandSlot::__anon192
HEIGHT	ScenesServer/zCard.h	/^	    HEIGHT = 1,$/;"	e	enum:HeroSlot::__anon195
HEIGHT	ScenesServer/zCard.h	/^	    HEIGHT = 1,$/;"	e	enum:SkillSlot::__anon194
HEIGHT	ScenesServer/zCard.h	/^	    HEIGHT = 1,$/;"	e	enum:TombSlot::__anon196
HEIGHT	ScenesServer/zObject.h	/^		HEIGHT = 8,$/;"	e	enum:MainPack::__anon176
HERO1_PACK	ScenesServer/zCard.h	/^      HERO1_PACK = 256,$/;"	e	enum:CardSlots::__anon197
HERO2_PACK	ScenesServer/zCard.h	/^      HERO2_PACK = 512,$/;"	e	enum:CardSlots::__anon197
HEROISLAND_USERCMD	tmpcode/commond.h	/^const BYTE HEROISLAND_USERCMD   = 135;  $/;"	v
HEROLIST_USERCMD	base/CmdType.h	/^const BYTE HEROLIST_USERCMD		= 56;$/;"	v
HEROLIST_USERCMD	tmpcode/commond.h	/^const BYTE HEROLIST_USERCMD		= 56;$/;"	v
HERO_CARD_USERCMD	base/CmdType.h	/^const BYTE HERO_CARD_USERCMD	= 162;$/;"	v
HERO_OCCUPATION_1	ScenesServer/HeroInfoManager.h	/^    HERO_OCCUPATION_1 = 1,	\/\/÷∞“µ1	$/;"	e	enum:__anon168
HERO_OCCUPATION_2	ScenesServer/HeroInfoManager.h	/^    HERO_OCCUPATION_2 = 2,	\/\/÷∞“µ2$/;"	e	enum:__anon168
HERO_OCCUPATION_3	ScenesServer/HeroInfoManager.h	/^    HERO_OCCUPATION_3 = 3,	\/\/÷∞“µ3$/;"	e	enum:__anon168
HERO_OCCUPATION_MAX	ScenesServer/HeroInfoManager.h	/^    HERO_OCCUPATION_MAX,	\/\/÷∞“µMAX$/;"	e	enum:__anon168
HERO_OCCUPATION_NONE	ScenesServer/HeroInfoManager.h	/^    HERO_OCCUPATION_NONE = 0,	\/\/NONE	$/;"	e	enum:__anon168
HIG_GRADE_HERO_ISLAND	tmpcode/commond.h	24181;"	d
HISTORY_GOLD_STOCKPARA	base/Command.h	7695;"	d
HISTORY_MONEY_STOCKPARA	base/Command.h	7706;"	d
HISTORY_TALK_LTQ_PARA	tmpcode/commond.h	24635;"	d
HOLE	tmpcode/commond.h	/^            HOLE = 4,$/;"	e	enum:ReuildType
HOLE_PROPERTY_USERCMD_PARA	base/Command.h	2901;"	d
HOLE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	4667;"	d
HOME_NAME_HOME_PARA	tmpcode/commond.h	/^const BYTE HOME_NAME_HOME_PARA					= 26;$/;"	v
HOME_USERCMD	tmpcode/commond.h	/^const BYTE HOME_USERCMD							= 60;$/;"	v
HONGSHI_CHENGZHU	tmpcode/commond.h	/^	 HONGSHI_CHENGZHU,       \/\/\/ ∫Ï Ø≥«≥«÷˜$/;"	e	enum:__anon215
HONGSHI_CITY	tmpcode/commond.h	/^        HONGSHI_CITY,$/;"	e	enum:SHOP_MEETING
HONGSHI_KING	tmpcode/commond.h	/^	 HONGSHI_KING,           \/\/\/ ∫Ï Ø≥«≥«÷˜+ΩÁÕı$/;"	e	enum:__anon215
HONOR_ADVENT	tmpcode/commond.h	/^	HONOR_ADVENT=1,\/\/√∞œ’$/;"	e	enum:HONOR_TYPE
HONOR_DEFPOWER	tmpcode/commond.h	/^	HONOR_DEFPOWER=8,\/\/∑¿”˘¡¶≥∆∫≈$/;"	e	enum:HONOR_TYPE
HONOR_ENEMYDEF	tmpcode/commond.h	/^	HONOR_ENEMYDEF=4,\/\/”˘µ–≥∆∫≈$/;"	e	enum:HONOR_TYPE
HONOR_ENEMYKILL	tmpcode/commond.h	/^	HONOR_ENEMYKILL=5,\/\/∑•µ–≥∆∫≈$/;"	e	enum:HONOR_TYPE
HONOR_EQUIP	tmpcode/commond.h	/^	HONOR_EQUIP=9,\/\/◊∞±∏∆¿∂®$/;"	e	enum:HONOR_TYPE
HONOR_EXPLOIT	tmpcode/commond.h	/^	HONOR_EXPLOIT=6,\/\/’Ωπ¶≥∆∫≈$/;"	e	enum:HONOR_TYPE
HONOR_FIREPOWER	tmpcode/commond.h	/^	HONOR_FIREPOWER=7,\/\/ª¡¶≥∆∫≈$/;"	e	enum:HONOR_TYPE
HONOR_LIFE	tmpcode/commond.h	/^	HONOR_LIFE=3,\/\/…˙¥Ê$/;"	e	enum:HONOR_TYPE
HONOR_MAX	tmpcode/commond.h	/^	HONOR_MAX=10,\/\/Œﬁ–ß≥∆∫≈$/;"	e	enum:HONOR_TYPE
HONOR_MEDAL	tmpcode/commond.h	/^	HONOR_MEDAL=0,\/\/ƒ¨»œ—´’¬$/;"	e	enum:HONOR_TYPE
HONOR_MOBKILL	tmpcode/commond.h	/^	HONOR_MOBKILL=2,\/\/…±π÷$/;"	e	enum:HONOR_TYPE
HONOR_TO_PKVALUE_PROPERTY_USERCMD_PARA	base/Command.h	3074;"	d
HONOR_TYPE	tmpcode/commond.h	/^enum HONOR_TYPE$/;"	g
HORSEDATA_PET_PARA	base/Command.h	/^const BYTE HORSEDATA_PET_PARA = 10;$/;"	v
HORSEDATA_PET_PARA	tmpcode/commond.h	/^const BYTE HORSEDATA_PET_PARA = 10;$/;"	v
HORSESOUL_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE HORSESOUL_PROPERTY_USERCMD_PARA = 165;$/;"	v
HORSETRAINING_USERCMD	base/CmdType.h	/^const BYTE HORSETRAINING_USERCMD	= 53;$/;"	v
HORSE_EVOLVE_PARA	tmpcode/commond.h	/^const BYTE HORSE_EVOLVE_PARA = 49;$/;"	v
HORSE_EVOLVE_RESULT_PARA	tmpcode/commond.h	/^const BYTE HORSE_EVOLVE_RESULT_PARA = 44;$/;"	v
HORSE_LIFE_OVER_PARA	tmpcode/commond.h	/^const BYTE HORSE_LIFE_OVER_PARA = 38;$/;"	v
HORSE_SKILL_DEF_UP	base/Command.h	/^  HORSE_SKILL_DEF_UP = 1,\/\/ÊèêÈ´òÁâ©Èò≤È≠îÈò≤$/;"	e	enum:Cmd::horseSkill
HORSE_SKILL_DMG_DOWN	base/Command.h	/^  HORSE_SKILL_DMG_DOWN,\/\/ÂáèÂ∞ëËá™Ë∫´‰º§ÂÆ≥$/;"	e	enum:Cmd::horseSkill
HORSE_SKILL_DMG_UP	base/Command.h	/^  HORSE_SKILL_DMG_UP,\/\/ÈôÑÂä†‰º§ÂÆ≥$/;"	e	enum:Cmd::horseSkill
HORSE_SKILL_HP_UP	base/Command.h	/^  HORSE_SKILL_HP_UP,\/\/ÊèêÈ´òÁîüÂëΩ‰∏äÈôê$/;"	e	enum:Cmd::horseSkill
HORSE_SKILL_MATK_UP	base/Command.h	/^  HORSE_SKILL_MATK_UP,\/\/ÊèêÈ´òÈ≠îÊîª$/;"	e	enum:Cmd::horseSkill
HORSE_SKILL_MP_UP	base/Command.h	/^  HORSE_SKILL_MP_UP,\/\/ÊèêÈ´òÈ≠îÊ≥ï‰∏äÈôê$/;"	e	enum:Cmd::horseSkill
HORSE_SKILL_PATK_UP	base/Command.h	/^  HORSE_SKILL_PATK_UP,\/\/ÊèêÈ´òÁâ©Êîª$/;"	e	enum:Cmd::horseSkill
HORSE_SOUL_EVOLVE_RESULT_PARA	tmpcode/commond.h	/^const BYTE HORSE_SOUL_EVOLVE_RESULT_PARA = 36;$/;"	v
HORSE_STATE_FOLLOW	base/Command.h	/^  HORSE_STATE_FOLLOW,\/\/Ë∑üÈöè$/;"	e	enum:Cmd::horseState
HORSE_STATE_FOLLOW	tmpcode/commond.h	/^    HORSE_STATE_FOLLOW,     \/\/∏˙ÀÊ$/;"	e	enum:horseState
HORSE_STATE_PUTUP	base/Command.h	/^  HORSE_STATE_PUTUP,\/\/Êî∂Ëµ∑$/;"	e	enum:Cmd::horseState
HORSE_STATE_PUTUP	tmpcode/commond.h	/^    HORSE_STATE_PUTUP,      \/\/ ’∆$/;"	e	enum:horseState
HORSE_STATE_RIDE	base/Command.h	/^  HORSE_STATE_RIDE  \/\/È™ë‰πò$/;"	e	enum:Cmd::horseState
HORSE_STATE_RIDE	tmpcode/commond.h	/^    HORSE_STATE_RIDE        \/\/∆Ô≥À$/;"	e	enum:horseState
HORSE_YVMA	tmpcode/commond.h	/^	HORSE_YVMA = 51004,	\/\/ ¬Ì∆•ººƒ‹ "º›‘¶"	$/;"	e	enum:__anon205
HOTSPRING_USERCMD	base/CmdType.h	/^const BYTE HOTSPRING_USERCMD = 51;$/;"	v
HOUSE_FURNITURE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE HOUSE_FURNITURE_PROPERTY_USERCMD_PARA = 179;$/;"	v
HOUSE_ROOMDESK_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE HOUSE_ROOMDESK_PROPERTY_USERCMD_PARA = 183;$/;"	v
HOUSE_ROOM_DATA_MAP_USER_CMD	tmpcode/commond.h	/^const BYTE HOUSE_ROOM_DATA_MAP_USER_CMD = 7;$/;"	v
HOUSE_USERCMD	tmpcode/commond.h	/^const BYTE HOUSE_USERCMD               = 61; $/;"	v
HP	tmpcode/commond.h	/^		DWORD HP;$/;"	m	struct:stStatueInfoUserCmd::__anon319
HPERM_OP	base/EncDec/EncDec.h	168;"	d
HPERM_OP	base/EncDec/mydes.h	69;"	d
HPMP	tmpcode/commond.h	/^	HPMP=4$/;"	e	enum:__anon320
HP_EXP_CARTOON_PARA	base/Command.h	8333;"	d
HP_EXP_PET_PARA	base/Command.h	/^const BYTE HP_EXP_PET_PARA = 12;$/;"	v
HP_EXP_PET_PARA	tmpcode/commond.h	/^const BYTE HP_EXP_PET_PARA = 12;$/;"	v
HP_STONE	tmpcode/commond.h	/^const DWORD HP_STONE  = 10000;  \/\/…˙√¸±¶ Ø$/;"	v
HP_WRITEBACK	base/RecordCommand.h	/^      HP_WRITEBACK,\/\/HP$/;"	e	enum:Cmd::Record::enumWriteBackTest_Type
HUANJIAN_MOXI	tmpcode/commond.h	/^	HUANJIAN_MOXI = 31209,	\/\/ª√Ω£°§ƒßŒ¸$/;"	e	enum:__anon205
HUANJIAN_WUXI	tmpcode/commond.h	/^	HUANJIAN_WUXI = 31207,	\/\/ª√Ω£°§ŒÔŒ¸$/;"	e	enum:__anon205
HUODUI_LEVEL_USERCMD_PARA	tmpcode/commond.h	/^const BYTE HUODUI_LEVEL_USERCMD_PARA = 1;$/;"	v
HURT_TYPE_ADDHP	tmpcode/commond.h	/^	HURT_TYPE_ADDHP,          \/\/ º”—™$/;"	e	enum:__anon250
HURT_TYPE_ADDMP	tmpcode/commond.h	/^	HURT_TYPE_ADDMP,			\/\/º”¿∂$/;"	e	enum:__anon250
HURT_TYPE_ASSIST	tmpcode/commond.h	/^	HURT_TYPE_ASSIST,          \/\/ ∏®÷˙ººƒ‹$/;"	e	enum:__anon250
HURT_TYPE_DANCE_COOL	tmpcode/commond.h	/^	HURT_TYPE_DANCE_COOL,	\/\/Ã¯ŒËÀß$/;"	e	enum:__anon250
HURT_TYPE_DANCE_GOOD	tmpcode/commond.h	/^	HURT_TYPE_DANCE_GOOD,	\/\/Ã¯ŒËhao$/;"	e	enum:__anon250
HURT_TYPE_DANCE_MISS	tmpcode/commond.h	/^	HURT_TYPE_DANCE_MISS,	\/\/Ã¯ŒË ßŒÛ$/;"	e	enum:__anon250
HURT_TYPE_DANCE_PERFECT	tmpcode/commond.h	/^	HURT_TYPE_DANCE_PERFECT,	\/\/Ã¯ŒËÕÍ√¿$/;"	e	enum:__anon250
HURT_TYPE_ELEC	tmpcode/commond.h	/^	HURT_TYPE_ELEC,			\/\/\/\/µÁ‘™Àÿ$/;"	e	enum:__anon250
HURT_TYPE_EXP	tmpcode/commond.h	/^	HURT_TYPE_EXP,			\/\/ æ≠—È÷µ$/;"	e	enum:__anon250
HURT_TYPE_FIRE	tmpcode/commond.h	/^	HURT_TYPE_FIRE,			\/\/\/\/ª‘™Àÿ$/;"	e	enum:__anon250
HURT_TYPE_ICE	tmpcode/commond.h	/^	HURT_TYPE_ICE,			\/\/\/\/±˘‘™Àÿ$/;"	e	enum:__anon250
HURT_TYPE_IN_UI	tmpcode/commond.h	/^	HURT_TYPE_IN_UI,\/\/‘⁄ui…œœ‘ æ√∞—™$/;"	e	enum:__anon250
HURT_TYPE_NOMP	tmpcode/commond.h	/^	HURT_TYPE_NOMP,  \/\/ ∑®¡¶≤ª◊„$/;"	e	enum:__anon250
HURT_TYPE_NOSP	tmpcode/commond.h	/^	HURT_TYPE_NOSP,  \/\/ SP≤ª◊„$/;"	e	enum:__anon250
HURT_TYPE_SKILLCHECK	tmpcode/commond.h	/^	HURT_TYPE_SKILLCHECK,          \/\/ ººƒ‹∑¢∂Ø–Ë«Û$/;"	e	enum:__anon250
HURT_TYPE_SKILLNAME	tmpcode/commond.h	/^	HURT_TYPE_SKILLNAME,  \/\/ ººƒ‹√˚≥∆$/;"	e	enum:__anon250
HURT_TYPE_SKILL_INTERRUPT	tmpcode/commond.h	/^	HURT_TYPE_SKILL_INTERRUPT,  \/\/ººƒ‹÷–∂œ$/;"	e	enum:__anon250
HURT_TYPE_STATUS_DAMAGE	tmpcode/commond.h	/^	HURT_TYPE_STATUS_DAMAGE,          \/\/ ∏∫œÚ◊¥Ã¨À—™$/;"	e	enum:__anon250
HURT_TYPE_STATUS_DAMAGE_MP	tmpcode/commond.h	/^	HURT_TYPE_STATUS_DAMAGE_MP,		\/\/ ∏∫œÚ◊¥Ã¨À¿∂$/;"	e	enum:__anon250
HURT_TYPE_THUNDER	tmpcode/commond.h	/^	HURT_TYPE_THUNDER,			\/\/\/\/\/\/¿◊‘™Àÿ$/;"	e	enum:__anon250
HURT_TYPE_WIND	tmpcode/commond.h	/^	HURT_TYPE_WIND,			\/\/\/\/\/\/∑Á‘™Àÿ$/;"	e	enum:__anon250
HURT_TYPE_WORK	tmpcode/commond.h	/^	HURT_TYPE_WORK,			\/\/ ≤…ºØ$/;"	e	enum:__anon250
HairColor_black	base/Command.h	/^  HairColor_black = 0x00001900,\/\/ÈªëËâ≤$/;"	e	enum:Cmd::enumHairColor
HairColor_drink	base/Command.h	/^  HairColor_drink = 0x00C9004C,\/\/ÈÖíÁ∫¢$/;"	e	enum:Cmd::enumHairColor
HairColor_purple	base/Command.h	/^  HairColor_purple = 0x009300DD\/\/ÈÖ±Á¥´$/;"	e	enum:Cmd::enumHairColor
HairStype_1	base/Command.h	/^  HairStype_1,\/\/Á≤óÊó∑Âûã$/;"	e	enum:Cmd::enumHairStyle
HairStype_2	base/Command.h	/^  HairStype_2,\/\/ÊΩáÊ¥íÂûã$/;"	e	enum:Cmd::enumHairStyle
HairStype_3	base/Command.h	/^  HairStype_3,\/\/Ë±™ÊîæÂûã$/;"	e	enum:Cmd::enumHairStyle
HairStype_4	base/Command.h	/^  HairStype_4,\/\/Èùì‰∏ΩÂûã$/;"	e	enum:Cmd::enumHairStyle
HairStype_5	base/Command.h	/^  HairStype_5,\/\/Ê∏ÖÁßÄÂûã$/;"	e	enum:Cmd::enumHairStyle
HairStype_6	base/Command.h	/^  HairStype_6\/\/È´òË¥µÂûã$/;"	e	enum:Cmd::enumHairStyle
HandAddDam	ScenesServer/ScenePk.h	/^	  SWORD HandAddDam;		\/\/sky Â¢ûÂä†ÂçïÊâãÊ≠¶Âô®‰º§ÂÆ≥ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
HandAddDamA	ScenesServer/ScenePk.h	/^	  SWORD HandAddDamA;	\/\/sky Â¢ûÂä†ÂçïÊâãÊ≠¶Âô®‰º§ÂÆ≥Âõ∫ÂÆöÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
HandSlot	ScenesServer/zCard.cpp	/^HandSlot::HandSlot():CardSlot(Cmd::CARDCELLTYPE_HAND, 0, HandSlot::WIDTH, HandSlot::HEIGHT)$/;"	f	class:HandSlot
HandSlot	ScenesServer/zCard.h	/^class HandSlot:public CardSlot$/;"	c
Handflag	ScenesServer/SceneEntryPk.h	/^	bool Handflag;		\/\/sky ÂçïÊâãÊ≠¶Âô®Â¢ûÂä†‰º§ÂÆ≥Ê†áÂøó$/;"	m	struct:SceneEntryPk
HandsAddDam	ScenesServer/ScenePk.h	/^	  SWORD HandsAddDam;	\/\/sky Â¢ûÂä†ÂèåÊâãÊ≠¶Âô®‰º§ÂÆ≥ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
HandsAddDamA	ScenesServer/ScenePk.h	/^	  SWORD HandsAddDamA;	\/\/sky Â¢ûÂä†ÂèåÊâãÊ≠¶Âô®‰º§ÂÆ≥Âõ∫ÂÆöÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
Handsflag	ScenesServer/SceneEntryPk.h	/^	bool Handsflag;		\/\/sky ÂèåÊâãÊ≠¶Âô®Â¢ûÂä†‰º§ÂÆ≥Ê†áÂøó$/;"	m	struct:SceneEntryPk
HappyCardBoxAutoCfg	tmpcode/commond.h	/^struct HappyCardBoxAutoCfg$/;"	s
HappyCardInfo	tmpcode/commond.h	/^struct HappyCardInfo$/;"	s
HasArrange	tmpcode/commond.h	/^	HasArrange,		 \/\/ “—∞⁄∑≈$/;"	e	enum:__anon268
HasnotArrange	tmpcode/commond.h	/^	HasnotArrange	 \/\/ Œ¥∞⁄∑≈$/;"	e	enum:__anon268
HasnotBuild	tmpcode/commond.h	/^	HasnotBuild = 0, \/\/ Œ¥Ω®‘Ï$/;"	e	enum:__anon268
HeroAward	tmpcode/commond.h	/^	struct HeroAward$/;"	s	struct:stRetRanksChatCmd
HeroBaseCFG	base/xmlparser/herobase.h	/^struct HeroBaseCFG$/;"	s
HeroCardManager	SessionServer/HeroCardManager.cpp	/^HeroCardManager::HeroCardManager()$/;"	f	class:HeroCardManager
HeroCardManager	SessionServer/HeroCardManager.h	/^class HeroCardManager : public Singleton<HeroCardManager>$/;"	c
HeroData	ScenesServer/HeroInfoManager.h	/^    HeroData()$/;"	f	struct:HeroData
HeroData	ScenesServer/HeroInfoManager.h	/^struct HeroData$/;"	s
HeroInfoManager	ScenesServer/HeroInfoManager.cpp	/^HeroInfoManager::HeroInfoManager()$/;"	f	class:HeroInfoManager
HeroInfoManager	ScenesServer/HeroInfoManager.h	/^class HeroInfoManager : public Singleton<HeroInfoManager>$/;"	c
HeroLevelCondition	ScenesServer/QuestCondition.h	/^  HeroLevelCondition(ScenesParser& p) : TeamCondition(p)$/;"	f	class:HeroLevelCondition
HeroLevelCondition	ScenesServer/QuestCondition.h	/^class HeroLevelCondition : public TeamCondition$/;"	c
HeroSlot	ScenesServer/zCard.cpp	/^HeroSlot::HeroSlot():CardSlot(Cmd::CARDCELLTYPE_HERO,0,HeroSlot::WIDTH,HeroSlot::HEIGHT)$/;"	f	class:HeroSlot
HeroSlot	ScenesServer/zCard.h	/^class HeroSlot:public CardSlot$/;"	c
HistoryIndex	BillServer/StockConsign.h	/^    typedef __gnu_cxx::hash_multimap<DWORD,Cmd::ConsignHistoryType> HistoryIndex;$/;"	t	class:ConsignHistoryManager
HistoryRange	BillServer/StockConsign.h	/^    typedef __gnu_cxx::pair<HistoryIndex::iterator,HistoryIndex::iterator> HistoryRange;$/;"	t	class:ConsignHistoryManager
HomeMapData	tmpcode/commond.h	/^	HomeMapData()$/;"	f	struct:HomeMapData
HomeMapData	tmpcode/commond.h	/^struct HomeMapData$/;"	s
Hongbao	tmpcode/commond.h	/^        DWORD Hongbao;                          \/\/∫Ï∞¸ ˝∂Ó$/;"	m	struct:stNotifyHongbaoIssueQuestUserCmd
HorseSkill	tmpcode/commond.h	/^    HorseSkill()$/;"	f	struct:HorseSkill
HorseSkill	tmpcode/commond.h	/^struct HorseSkill$/;"	s
HouseData	tmpcode/commond.h	/^}HouseData;$/;"	t	typeref:struct:__anon355
HouseDataCmpEquip	tmpcode/commond.h	/^struct HouseDataCmpEquip : public binary_function<HouseRoomData, HouseRoomData, bool>$/;"	s
HouseLog	tmpcode/commond.h	/^struct HouseLog$/;"	s
HouseObjDef	tmpcode/commond.h	/^	HouseObjDef()$/;"	f	struct:HouseObjDef
HouseObjDef	tmpcode/commond.h	/^struct HouseObjDef$/;"	s
HouseObjType	tmpcode/commond.h	/^enum HouseObjType$/;"	g
HouseRoomData	tmpcode/commond.h	/^	HouseRoomData()$/;"	f	struct:HouseRoomData
HouseRoomData	tmpcode/commond.h	/^struct HouseRoomData$/;"	s
HouseRoomDataMapUserCmd	tmpcode/commond.h	/^	HouseRoomDataMapUserCmd()     $/;"	f	struct:HouseRoomDataMapUserCmd
HouseRoomDataMapUserCmd	tmpcode/commond.h	/^struct HouseRoomDataMapUserCmd : public stHouseUserCmd$/;"	s
HouseUserData	tmpcode/commond.h	/^}HouseUserData;\/\/◊°ªß–≈œ¢$/;"	t	typeref:struct:__anon356
ICmdChecker	GatewayServer/CmdChecker.h	/^class ICmdChecker$/;"	c
IDENTIFIER_NAME	tmpcode/commond.h	/^const BYTE IDENTIFIER_NAME  = 72;$/;"	v
ID_MAX_LENGTH	base/UserCommand.h	/^    const int ID_MAX_LENGTH = 64;    \/\/Â∏êÂè∑ÈïøÂ∫¶$/;"	v
IFFY	base/zLogger.h	/^	    static const zLevel * IFFY;$/;"	m	class:zLogger::zLevel
IFFY_INT	base/zLogger.h	/^		IFFY_INT    =	log4cxx::Level::WARN_INT,$/;"	e	enum:zLogger::zLevel::zLevelInt
ILLEGAL_COUNTRY_ALLY_ACTION	tmpcode/commond.h	/^	ILLEGAL_COUNTRY_ALLY_ACTION = 0,  \/\/ ≥ı º÷µŒ™∑«∑®÷µ$/;"	e	enum:CountryAllyActionEnum
IMAGE_VERIFY_CANCEL_USERCMD_PARA	tmpcode/commond.h	/^const BYTE IMAGE_VERIFY_CANCEL_USERCMD_PARA = 5;$/;"	v
IMAGE_VERIFY_IMAGE_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE IMAGE_VERIFY_IMAGE_DATA_USERCMD_PARA = 1;$/;"	v
IMAGE_VERIFY_REFRESH_USERCMD_PARA	tmpcode/commond.h	/^const BYTE IMAGE_VERIFY_REFRESH_USERCMD_PARA = 2;$/;"	v
IMAGE_VERIFY_RETRY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE IMAGE_VERIFY_RETRY_USERCMD_PARA = 4;$/;"	v
IMAGE_VERIFY_RETURN_CHARS_USERCMD_PARA	tmpcode/commond.h	/^const BYTE IMAGE_VERIFY_RETURN_CHARS_USERCMD_PARA = 3;$/;"	v
IMAGE_VERIFY_THREEERR_USERCMD_PARA	tmpcode/commond.h	/^const BYTE IMAGE_VERIFY_THREEERR_USERCMD_PARA =6;$/;"	v
IMAGE_VERIFY_USERCMD	tmpcode/commond.h	/^const BYTE IMAGE_VERIFY_USERCMD = 139;$/;"	v
INCOMPLETE_READ	base/zSocket.h	/^	static const DWORD INCOMPLETE_READ  =  0x00000001;        \/**< …œ¥Œ∂‘Ã◊Ω”ø⁄Ω¯––∂¡»°≤Ÿ◊˜√ª”–∂¡»°ÕÍ»´µƒ±Í÷æ *\/$/;"	m	class:zSocket
INCOMPLETE_WRITE	base/zSocket.h	/^	static const DWORD INCOMPLETE_WRITE  =  0x00000002;        \/**< …œ¥Œ∂‘Ã◊Ω”ø⁄Ω¯–––¥»Î≤Ÿ◊˜√∫”Õ–¥»ÎÕÍ±œµƒ±Í÷æ *\/$/;"	m	class:zSocket
INFO	base/zLogger.h	/^	    static const zLevel * INFO;$/;"	m	class:zLogger::zLevel
INFO_CHALLENGE_PARA	tmpcode/commond.h	21858;"	d
INFO_DUKESORT_LASTWEED	tmpcode/commond.h	/^const BYTE INFO_DUKESORT_LASTWEED = 9;$/;"	v
INFO_DUKESORT_THISWEEK	tmpcode/commond.h	/^const BYTE INFO_DUKESORT_THISWEEK = 7;$/;"	v
INFO_GOUHUO_PARA	tmpcode/commond.h	/^const BYTE INFO_GOUHUO_PARA = 2;$/;"	v
INFO_MARQUISSORT_LASTWEEK	tmpcode/commond.h	/^const BYTE INFO_MARQUISSORT_LASTWEEK = 10;$/;"	v
INFO_MARQUISSORT_THISWEEK	tmpcode/commond.h	/^const BYTE INFO_MARQUISSORT_THISWEEK = 8;$/;"	v
INFO_SCREEN_MIDDLE_AND_DOWN	tmpcode/commond.h	/^		INFO_SCREEN_MIDDLE_AND_DOWN,\/\/‘⁄∆¡ƒª÷–º‰∫Õœ¬√Êπˆ∂ØÕ¨ ±œ‘ æπ´∏Ê$/;"	e	enum:enumSysInfoType
INFO_SEPTTEAM_CHALLENGE_PARA	tmpcode/commond.h	21993;"	d
INFO_TYPE_ACT	tmpcode/commond.h	/^		INFO_TYPE_ACT,  \/\/ ªÓ∂Ø¿‡œ˚œ¢$/;"	e	enum:enumSysInfoType
INFO_TYPE_ADDFRIEND	base/Command.h	/^  INFO_TYPE_ADDFRIEND,\/\/\/ Âä†Â•ΩÂèã‰ªªÂä°ÊòæÁ§∫ÂíåÂä®ÁîªÊí≠Êîæ$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_ADDFRIEND	tmpcode/commond.h	/^        INFO_TYPE_ADDFRIEND,    \/\/\/ º”∫√”—»ŒŒÒœ‘ æ∫Õ∂Øª≠≤•∑≈$/;"	e	enum:enumSysInfoType
INFO_TYPE_ATTACKNPC	tmpcode/commond.h	/^		INFO_TYPE_ATTACKNPC,  \/\/π•ª˜Õ‚ΩÁ”ÚNPC  ◊Ó∫Û“ª∏ˆ√∂æŸ$/;"	e	enum:enumSysInfoType
INFO_TYPE_ATT_FLAG	base/Command.h	/^  INFO_TYPE_ATT_FLAG,\/\/\/ ÊóóÂ≠êË¢´ÊîªÂáª$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_ATT_FLAG	tmpcode/commond.h	/^        INFO_TYPE_ATT_FLAG,     \/\/\/ ∆Ï◊”±ªπ•ª˜$/;"	e	enum:enumSysInfoType
INFO_TYPE_BOSS	tmpcode/commond.h	/^        INFO_TYPE_BOSS,         \/\/boss¿‡,π÷ŒÔπ•≥«$/;"	e	enum:enumSysInfoType
INFO_TYPE_BOSS_KILLED	tmpcode/commond.h	/^		INFO_TYPE_BOSS_KILLED,  \/\/ ª˜…±BOSS,  Ù”⁄BOSS¿‡œ˚œ¢$/;"	e	enum:enumSysInfoType
INFO_TYPE_BOSS_REFRESH	tmpcode/commond.h	/^		INFO_TYPE_BOSS_REFRESH,  \/\/ BOSS‘§∏Ê,  Ù”⁄BOSS¿‡œ˚œ¢$/;"	e	enum:enumSysInfoType
INFO_TYPE_BREAKFRIEND	base/Command.h	/^  INFO_TYPE_BREAKFRIEND,\/\/\/ Ââ≤Ë¢çÊñ≠‰πâ‰ªªÂä°ÊòæÁ§∫ÂíåÂä®ÁîªÊí≠Êîæ$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_BREAKFRIEND	tmpcode/commond.h	/^        INFO_TYPE_BREAKFRIEND,  \/\/\/ ∏Ó≈€∂œ“Â»ŒŒÒœ‘ æ∫Õ∂Øª≠≤•∑≈$/;"	e	enum:enumSysInfoType
INFO_TYPE_BUGLE	tmpcode/commond.h	/^		INFO_TYPE_BUGLE,        \/\/∫∞ª∞–°¿Æ∞»$/;"	e	enum:enumSysInfoType
INFO_TYPE_BUTOU	tmpcode/commond.h	/^        INFO_TYPE_BUTOU,        \/\/\/ ≤∂Õ∑Àµª∞----∂‘”¶ÕÚÕıΩ´æ¸$/;"	e	enum:enumSysInfoType
INFO_TYPE_CASTELLAN	base/Command.h	/^  INFO_TYPE_CASTELLAN,\/\/\/ Âüé‰∏ªÂèëÂá∫ÁöÑËÅäÂ§©Ê∂àÊÅØ$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_CASTELLAN	tmpcode/commond.h	/^        INFO_TYPE_CASTELLAN,    \/\/\/ ≥«÷˜∑¢≥ˆµƒ¡ƒÃÏœ˚œ¢$/;"	e	enum:enumSysInfoType
INFO_TYPE_COUNTRYDARE_PURPLE_EMPEROR	tmpcode/commond.h	/^        INFO_TYPE_COUNTRYDARE_PURPLE_EMPEROR ,       \/\/\/ ◊œ…´µÁ ”£¨π˙Õı‘⁄π˙’Ω∆⁄º‰Àµª∞£¨ π”√∏√¿‡–Õ£¨”“œ¬Ω≈∫ÕÕ∑∂•∂º“™œ‘ æ$/;"	e	enum:enumSysInfoType
INFO_TYPE_COUNTRYDARE_PURPLE_KING	tmpcode/commond.h	/^        INFO_TYPE_COUNTRYDARE_PURPLE_KING ,       \/\/\/ ◊œ…´µÁ ”£¨π˙Õı‘⁄π˙’Ω∆⁄º‰Àµª∞£¨ π”√∏√¿‡–Õ£¨”“œ¬Ω≈∫ÕÕ∑∂•∂º“™œ‘ æ$/;"	e	enum:enumSysInfoType
INFO_TYPE_COUNTRYDARE_PURPLE_NVHUANG	tmpcode/commond.h	/^        INFO_TYPE_COUNTRYDARE_PURPLE_NVHUANG ,       \/\/\/ ◊œ…´µÁ ”£¨π˙Õı‘⁄π˙’Ω∆⁄º‰Àµª∞£¨ π”√∏√¿‡–Õ£¨”“œ¬Ω≈∫ÕÕ∑∂•∂º“™œ‘ æ$/;"	e	enum:enumSysInfoType
INFO_TYPE_COUNTRYDARE_PURPLE_NVWANG	tmpcode/commond.h	/^        INFO_TYPE_COUNTRYDARE_PURPLE_NVWANG ,       \/\/\/ ◊œ…´µÁ ”£¨π˙Õı‘⁄π˙’Ω∆⁄º‰Àµª∞£¨ π”√∏√¿‡–Õ£¨”“œ¬Ω≈∫ÕÕ∑∂•∂º“™œ‘ æ$/;"	e	enum:enumSysInfoType
INFO_TYPE_COUNTRYDARE_PURPLE_YUANSHUAI	tmpcode/commond.h	/^        INFO_TYPE_COUNTRYDARE_PURPLE_YUANSHUAI, \/\/‘™Àß$/;"	e	enum:enumSysInfoType
INFO_TYPE_DARK_YELLOW	tmpcode/commond.h	/^        INFO_TYPE_DARK_YELLOW ,       \/\/\/…Óª∆…´µƒµÁ ”π´∏Ê$/;"	e	enum:enumSysInfoType
INFO_TYPE_EMOTIONCMD	tmpcode/commond.h	/^		INFO_TYPE_EMOTIONCMD,   \/\/«È∏–÷∏¡Ó------ÕÚÕı2008.8.21º”$/;"	e	enum:enumSysInfoType
INFO_TYPE_EMPEROR	base/Command.h	/^  INFO_TYPE_EMPEROR,\/\/\/ ÁöáÂ∏ùÂèëÂá∫ÁöÑËÅäÂ§©Ê∂àÊÅØ$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_EMPEROR	tmpcode/commond.h	/^        INFO_TYPE_EMPEROR,      \/\/\/ ª µ€∑¢≥ˆµƒ¡ƒÃÏœ˚œ¢$/;"	e	enum:enumSysInfoType
INFO_TYPE_EXP	base/Command.h	/^  INFO_TYPE_EXP,  \/\/\/ ÁâπÊÆä‰ø°ÊÅØ,Ëé∑ÂæóÁªèÈ™å„ÄÅÁâ©ÂìÅÔºåÂú®‰∫∫Áâ©Â§¥‰∏ä$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_EXP	tmpcode/commond.h	/^        INFO_TYPE_EXP,          \/\/\/ ∆¡ƒª÷–—ÎµƒœµÕ≥Ã· æ–≈œ¢$/;"	e	enum:enumSysInfoType
INFO_TYPE_FAIL	base/Command.h	/^  INFO_TYPE_FAIL,         \/\/\/ Â§±Ë¥•‰ø°ÊÅØÔºåÂ±èÂπïÂ∑¶‰∏ä$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_FAIL	tmpcode/commond.h	/^        INFO_TYPE_FAIL,                 \/\/\/  ß∞‹–≈œ¢£¨∆¡ƒª◊Û…œ$/;"	e	enum:enumSysInfoType
INFO_TYPE_FELLING	tmpcode/commond.h	/^		INFO_TYPE_FELLING,  \/\/ ∑¢ÀÕ«È–˜≈›≈› $/;"	e	enum:enumSysInfoType
INFO_TYPE_GAME	base/Command.h	/^  INFO_TYPE_GAME, \/\/\/ Ê∏∏Êàè‰ø°ÊÅØÔºåÂ±èÂπïÂ∑¶‰∏ä$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_GAME	tmpcode/commond.h	/^        INFO_TYPE_GAME,         \/\/\/ ”Œœ∑–≈œ¢£¨∆¡ƒª◊Û…œ$/;"	e	enum:enumSysInfoType
INFO_TYPE_GM	tmpcode/commond.h	/^        INFO_TYPE_GM,   \/\/gmÀµª∞$/;"	e	enum:enumSysInfoType
INFO_TYPE_GMGUIDE	tmpcode/commond.h	/^		INFO_TYPE_GMGUIDE,              \/\/GMœÚµº$/;"	e	enum:enumSysInfoType
INFO_TYPE_GM_BROADCAST	tmpcode/commond.h	/^		INFO_TYPE_GM_BROADCAST,  \/\/ GMπ´∏Ê$/;"	e	enum:enumSysInfoType
INFO_TYPE_GRECOMMEND	tmpcode/commond.h	/^		INFO_TYPE_GRECOMMEND,\/\/ ¶ÕΩπÿœµ»∑¡¢$/;"	e	enum:enumSysInfoType
INFO_TYPE_GUARD_OUT	tmpcode/commond.h	/^		INFO_TYPE_GUARD_OUT,		\/\/ª§ÀÕNPC‘∂¿Î$/;"	e	enum:enumSysInfoType
INFO_TYPE_HASNEWDAILYQUEST	tmpcode/commond.h	/^		INFO_TYPE_HASNEWDAILYQUEST,			\/\/ √ø»’ªÓ∂ØÕ®÷™°™°™ªπ”– « Æ∑÷÷”“™ø™ º$/;"	e	enum:enumSysInfoType
INFO_TYPE_HAUNGFU	tmpcode/commond.h	/^        INFO_TYPE_HAUNGFU,      \/\/\/ ª ∑ÚÀµª∞$/;"	e	enum:enumSysInfoType
INFO_TYPE_HUANGHOU	tmpcode/commond.h	/^        INFO_TYPE_HUANGHOU,     \/\/\/ ª ∫ÛÀµª∞$/;"	e	enum:enumSysInfoType
INFO_TYPE_IMPORTANCE	tmpcode/commond.h	/^        INFO_TYPE_IMPORTANCE, \/\/gm÷ÿ“™π´∏Ê$/;"	e	enum:enumSysInfoType
INFO_TYPE_IMPORTANT	tmpcode/commond.h	/^        INFO_TYPE_IMPORTANT, \/\/÷ÿ“™µƒœ˚œ¢£¨‘⁄”“œ¬Ω«µØ≥ˆ$/;"	e	enum:enumSysInfoType
INFO_TYPE_INFO	tmpcode/commond.h	/^		INFO_TYPE_INFO,$/;"	e	enum:enumSysInfoType
INFO_TYPE_ISSUE_TREND	tmpcode/commond.h	/^		INFO_TYPE_ISSUE_TREND,	\/\/ŒØÕ–≥ˆµƒ»ŒŒÒ, ±ª∆‰À¸ÕÊº“Ω”µΩ∫Û,  ’µΩµƒœµÕ≥œ˚œ¢$/;"	e	enum:enumSysInfoType
INFO_TYPE_KING	base/Command.h	/^  INFO_TYPE_KING, \/\/\/ ÂõΩÁéãÂèëÂá∫ÁöÑËÅäÂ§©Ê∂àÊÅØ$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_KING	tmpcode/commond.h	/^        INFO_TYPE_KING,         \/\/\/ π˙Õı∑¢≥ˆµƒ¡ƒÃÏœ˚œ¢-----∂‘”¶ÕÚÕıΩÁÕı$/;"	e	enum:enumSysInfoType
INFO_TYPE_MEILIBAOBEI	tmpcode/commond.h	/^        INFO_TYPE_MEILIBAOBEI,          \/\/˜»¡¶±¶±¥$/;"	e	enum:enumSysInfoType
INFO_TYPE_MMVOTE	tmpcode/commond.h	/^        INFO_TYPE_MMVOTE,               \/\/≥¡”„¬‰—„ √¿≈Æ¡ƒÃÏ¿‡–Õ 50$/;"	e	enum:enumSysInfoType
INFO_TYPE_MSG	base/Command.h	/^  INFO_TYPE_MSG,  \/\/\/ ÂºπÂá∫Áî®Êà∑Á°ÆËÆ§Ê°ÜÁöÑÁ≥ªÁªüÊ∂àÊÅØ$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_MSG	tmpcode/commond.h	/^        INFO_TYPE_MSG,          \/\/\/ µØ≥ˆ”√ªß»∑»œøÚµƒœµÕ≥œ˚œ¢$/;"	e	enum:enumSysInfoType
INFO_TYPE_NVHUANG	tmpcode/commond.h	/^        INFO_TYPE_NVHUANG,      \/\/\/ ≈Æª Àµª∞$/;"	e	enum:enumSysInfoType
INFO_TYPE_NVWANG	tmpcode/commond.h	/^        INFO_TYPE_NVWANG,       \/\/\/ ≈ÆÕıÀµª∞$/;"	e	enum:enumSysInfoType
INFO_TYPE_OTHER	tmpcode/commond.h	/^        INFO_TYPE_OTHER,    \/\/∆‰À˚¿‡–Õµƒœ˚œ¢£¨∫Õ’Ω’˘¿‡“ª∏ˆº∂±$/;"	e	enum:enumSysInfoType
INFO_TYPE_PLEDGE_PURPLE	tmpcode/commond.h	/^        INFO_TYPE_PLEDGE_PURPLE,          \/\/\/ π¶—´µÿÕºœ˚œ¢,◊œ…´µÁ ”$/;"	e	enum:enumSysInfoType
INFO_TYPE_PLEDGE_YELLOW	tmpcode/commond.h	/^        INFO_TYPE_PLEDGE_YELLOW,                \/\/\/ π¶—´µÿÕºœ˚œ¢£¨ª∆…´µÁ ”$/;"	e	enum:enumSysInfoType
INFO_TYPE_RENQIBAOBEI	tmpcode/commond.h	/^        INFO_TYPE_RENQIBAOBEI   ,               \/\/»À∆¯±¶±¥$/;"	e	enum:enumSysInfoType
INFO_TYPE_SCREEN_DOWN	tmpcode/commond.h	/^        INFO_TYPE_SCREEN_DOWN,          \/\/∆¡ƒªœ¬∑Ω$/;"	e	enum:enumSysInfoType
INFO_TYPE_SCROLL	base/Command.h	/^  INFO_TYPE_SCROLL,\/\/\/ Â±èÂπï‰∏äÊñπÊªöÂä®ÁöÑÁ≥ªÁªü‰ø°ÊÅØ$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_SCROLL	tmpcode/commond.h	/^        INFO_TYPE_SCROLL,       \/\/\/ ∆¡ƒª…œ∑Ωπˆ∂ØµƒœµÕ≥–≈œ¢$/;"	e	enum:enumSysInfoType
INFO_TYPE_SECSEPTMASTER	tmpcode/commond.h	/^		INFO_TYPE_SECSEPTMASTER,	\/\/ ∏±◊Â≥§Àµª∞ [8\/25\/2009]$/;"	e	enum:enumSysInfoType
INFO_TYPE_SEPTMASTER	tmpcode/commond.h	/^		INFO_TYPE_SEPTMASTER,           \/\/º“◊Â≥§Àµª∞$/;"	e	enum:enumSysInfoType
INFO_TYPE_SKYROCKET1	base/Command.h	/^  INFO_TYPE_SKYROCKET1,\/\/\/ ÁÑ∞ÁÅ´Á±ªÂûã1$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_SKYROCKET1	tmpcode/commond.h	/^        INFO_TYPE_SKYROCKET1,   \/\/\/ —Êª¿‡–Õ1$/;"	e	enum:enumSysInfoType
INFO_TYPE_SKYROCKET2	base/Command.h	/^  INFO_TYPE_SKYROCKET2,\/\/\/ ÁÑ∞ÁÅ´Á±ªÂûã2$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_SKYROCKET2	tmpcode/commond.h	/^        INFO_TYPE_SKYROCKET2,   \/\/\/ —Êª¿‡–Õ2$/;"	e	enum:enumSysInfoType
INFO_TYPE_STATE	base/Command.h	/^  INFO_TYPE_STATE,        \/\/\/ Áä∂ÊÄÅËΩ¨Êç¢ÔºåÂ±èÂπïÂ∑¶‰∏ä$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_STATE	tmpcode/commond.h	/^        INFO_TYPE_STATE,                \/\/\/ ◊¥Ã¨◊™ªª£¨∆¡ƒª◊Û…œ$/;"	e	enum:enumSysInfoType
INFO_TYPE_SYS	base/Command.h	/^  INFO_TYPE_SYS   =       1,\/\/\/ Á≥ªÁªü‰ø°ÊÅØ„ÄÅGM‰ø°ÊÅØÔºåÂú®ËÅäÂ§©Á™óÂè£$/;"	e	enum:Cmd::enumSysInfoType
INFO_TYPE_SYS	tmpcode/commond.h	/^        INFO_TYPE_SYS   =       1,      \/\/\/ œµÕ≥–≈œ¢°¢GM–≈œ¢£¨‘⁄¡ƒÃÏ¥∞ø⁄$/;"	e	enum:enumSysInfoType
INFO_TYPE_UNIONMASTER	tmpcode/commond.h	/^        INFO_TYPE_UNIONMASTER,          \/\/∞Ô÷˜Àµª∞$/;"	e	enum:enumSysInfoType
INFO_TYPE_UNION_PROFIT	tmpcode/commond.h	/^		INFO_TYPE_UNION_PROFIT, \/\/Õ≈¿˚»Û’π æ$/;"	e	enum:enumSysInfoType
INFO_TYPE_WAGNHOU	tmpcode/commond.h	/^        INFO_TYPE_WAGNHOU,      \/\/\/ Õı∫ÛÀµª∞$/;"	e	enum:enumSysInfoType
INFO_TYPE_WANGFU	tmpcode/commond.h	/^        INFO_TYPE_WANGFU,       \/\/\/ Õı∑ÚÀµª∞$/;"	e	enum:enumSysInfoType
INFO_TYPE_WAR	tmpcode/commond.h	/^        INFO_TYPE_WAR,\/\/’Ω’˘¿‡œ˚œ¢$/;"	e	enum:enumSysInfoType
INFO_TYPE_XIANHUABAOBEI	tmpcode/commond.h	/^        INFO_TYPE_XIANHUABAOBEI,                \/\/œ ª®±¶±¥$/;"	e	enum:enumSysInfoType
INFO_TYPE_YUANSHUAI	tmpcode/commond.h	/^        INFO_TYPE_YUANSHUAI,    \/\/\/ ‘™ÀßÀµª∞----∂‘”¶ÕÚÕı¥Û‘™Àß$/;"	e	enum:enumSysInfoType
INFO_TYPE_YUSHI	tmpcode/commond.h	/^        INFO_TYPE_YUSHI,        \/\/\/ ”˘ ∑Àµª∞----∂‘”¶ÕÚÕı¥Û≥º$/;"	e	enum:enumSysInfoType
INFO_TYPE_ZAIXIANG	tmpcode/commond.h	/^        INFO_TYPE_ZAIXIANG,     \/\/\/ ‘◊œ‡Àµª∞----∂‘”¶ÕÚÕı÷¥’˛πŸ$/;"	e	enum:enumSysInfoType
INFO_TYPE_ZHENGTUBAOBEI	tmpcode/commond.h	/^        INFO_TYPE_ZHENGTUBAOBEI,                \/\/’˜Õæ±¶±¥Àµª∞$/;"	e	enum:enumSysInfoType
INSERT_FLOWER_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE INSERT_FLOWER_HOUSE_USER_CMD = 50;$/;"	v
INSTATE_UNION_BUSINESSMAN_USERCMD	tmpcode/commond.h	/^const BYTE INSTATE_UNION_BUSINESSMAN_USERCMD = 17;$/;"	v
INTERRUPT	tmpcode/commond.h	/^	INTERRUPT  = 2,   \/\/¥Ú∂œ¡À$/;"	e	enum:__anon298
INVALID_LOC	base/Object.h	/^	INVALID_LOC = (DWORD)-1,$/;"	e	enum:Object::__anon58
INVALID_POS	base/Object.h	/^    static stObjectLocation INVALID_POS;$/;"	v
INVALID_TAB	base/Object.h	/^	INVALID_TAB = (DWORD)-1,$/;"	e	enum:Object::__anon58
INVALID_X	base/Object.h	/^	INVALID_X = (WORD)-1,$/;"	e	enum:Object::__anon58
INVALID_Y	base/Object.h	/^	INVALID_Y = (WORD)-1,$/;"	e	enum:Object::__anon58
INVITEGROUP_CHANNEL_USERCMD_PARAMETER	tmpcode/commond.h	12537;"	d
INVITE_CHALLENGE_PARA	tmpcode/commond.h	21817;"	d
INVITE_CHANNEL_USERCMD_PARAMETER	base/Command.h	3557;"	d
INVITE_CHANNEL_USERCMD_PARAMETER	tmpcode/commond.h	12438;"	d
INVITE_DANCE_PARA	tmpcode/commond.h	/^const BYTE INVITE_DANCE_PARA = 7;$/;"	v
INVITE_DRAGON_CHALLENGE_PARA	tmpcode/commond.h	/^const BYTE INVITE_DRAGON_CHALLENGE_PARA = 6;$/;"	v
INVITE_DTS_PARA	tmpcode/commond.h	/^const BYTE INVITE_DTS_PARA = 2;$/;"	v
INVITE_INTOTANK_PARA	tmpcode/commond.h	/^const BYTE INVITE_INTOTANK_PARA = 39;$/;"	v
INVITE_LTQ_PARA	tmpcode/commond.h	24382;"	d
INVITE_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE INVITE_QUESTROOM_PARA = 8;$/;"	v
INVITE_RET_TANK_PARA	tmpcode/commond.h	/^const BYTE INVITE_RET_TANK_PARA = 10;$/;"	v
INVITE_SC_PARA	tmpcode/commond.h	/^const BYTE INVITE_SC_PARA				= 1;$/;"	v
INVITE_TANK_PARA	tmpcode/commond.h	/^const BYTE INVITE_TANK_PARA = 9;$/;"	v
IN_RECALL_SEPT_CMD	tmpcode/commond.h	/^const BYTE IN_RECALL_SEPT_CMD = 117;$/;"	v
IP	base/EncDec/EncDec.h	148;"	d
IP	base/EncDec/mydes.h	49;"	d
IS_MASK_SET	ScenesServer/script.cpp	59;"	d
ITEM_COOLTIME	base/CharBase.h	/^  ITEM_COOLTIME,\/\/ sky Áâ©ÂìÅÂÜ∑Âç¥Êó∂Èó¥$/;"	e	enum:TempArchiveType
ITERATIONS	base/EncDec/EncDec.h	170;"	d
ITERATIONS	base/EncDec/mydes.h	71;"	d
IceAddDam	ScenesServer/ScenePk.h	/^	  SWORD IceAddDam;		\/\/sky Â¢ûÂä†ÂÜ∞ÈúúÈ≠îÊ≥ï‰º§ÂÆ≥ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
IceAddDamA	ScenesServer/ScenePk.h	/^	  SWORD IceAddDamA;		\/\/sky Â¢ûÂä†ÂÜ∞ÈúúÈ≠îÊ≥ï‰º§ÂÆ≥Âõ∫ÂÆöÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
Iceflag	ScenesServer/SceneEntryPk.h	/^	bool Iceflag;		\/\/sky ÂÜ∞ÈúúÈ≠îÊ≥ïÂ¢ûÂä†‰º§ÂÆ≥Ê†áÂøó$/;"	m	struct:SceneEntryPk
Immolate	ScenesServer/SceneEntryPk.h	/^	bool Immolate;		\/\/sky ÁåÆÁ•≠Ê†áÂøó$/;"	m	struct:SceneEntryPk
ImmuneComa	ScenesServer/SceneEntryPk.h	/^	bool ImmuneComa;	\/\/\/ sky ÂÖçÁñ´ÊòèËø∑Áä∂ÊÄÅ$/;"	m	struct:SceneEntryPk
ImmuneDread	ScenesServer/SceneEntryPk.h	/^	bool ImmuneDread;	\/\/\/ sky ÂÖçÁñ´ÊÅêÊÉßÁä∂ÊÄÅ$/;"	m	struct:SceneEntryPk
ImmuneExile	ScenesServer/SceneEntryPk.h	/^	bool ImmuneExile;	\/\/\/ sky ÂÖçÁñ´ÊîæÈÄêÁä∂ÊÄÅ$/;"	m	struct:SceneEntryPk
ImmuneFrozen	ScenesServer/SceneEntryPk.h	/^	bool ImmuneFrozen;	\/\/\/ sky ÂÖçÁñ´ÂÜ∞ÂÜªÁä∂ÊÄÅ$/;"	m	struct:SceneEntryPk
ImmuneSilence	ScenesServer/SceneEntryPk.h	/^	bool ImmuneSilence;	\/\/\/ sky ÂÖçÁñ´Ê≤âÈªòÁä∂ÊÄÅ$/;"	m	struct:SceneEntryPk
Info	GatewayServer/CountryInfo.h	/^		Info()$/;"	f	struct:CountryInfo::Info
Info	GatewayServer/CountryInfo.h	/^	struct Info$/;"	s	class:CountryInfo
Info	SessionServer/CountryInfo.h	/^		Info()$/;"	f	struct:CountryInfo::Info
Info	SessionServer/CountryInfo.h	/^	struct Info$/;"	s	class:CountryInfo
InfoClient	SuperServer/InfoClient.cpp	/^InfoClient::InfoClient($/;"	f	class:InfoClient
InfoClient	SuperServer/InfoClient.h	/^class InfoClient : public zTCPClientTask$/;"	c
InfoClientManager	SuperServer/InfoClientManager.cpp	/^InfoClientManager::InfoClientManager()$/;"	f	class:InfoClientManager
InfoClientManager	SuperServer/InfoClientManager.h	/^class InfoClientManager$/;"	c
InfoClient_map	SuperServer/InfoClientManager.h	/^    typedef std::map<const DWORD,InfoClient *> InfoClient_map;$/;"	t	class:InfoClientManager
InfoClient_set	SuperServer/InfoClientManager.h	/^    typedef std::multiset<InfoClient *,lt_client> InfoClient_set;$/;"	t	class:InfoClientManager
Init	base/xmlparser/herobase.h	/^    struct Init$/;"	s	struct:HeroBaseCFG
InitIntervalAmendment	ScenesServer/SceneDefine.h	/^  void InitIntervalAmendment()$/;"	f	struct:t_NpcDefine
IsBackToCity	base/Command.h	/^  WORD IsBackToCity;$/;"	m	struct:Cmd::stUserGotoMapMoveUserCmd
IsBuffSkill	ScenesServer/Skill.cpp	/^bool zSkill::IsBuffSkill()		\/\/sky Ê£ÄÊµãÊäÄËÉΩÊòØÂê¶ÊòØÂ¢ûÁõäBUFFÁ≥ª$/;"	f	class:zSkill
IsDeBuffSkill	ScenesServer/Skill.cpp	/^bool zSkill::IsDeBuffSkill()	\/\/sky Ê£ÄÊµãÊäÄËÉΩÊòØÂê¶ÊòØÂáèÁõäBUFFÁ≥ª$/;"	f	class:zSkill
IsDrugSkill	ScenesServer/Skill.cpp	/^bool zSkill::IsDrugSkill()		\/\/sky Ê£ÄÊµãÊäÄËÉΩÊòØÂê¶ÊòØÊØíÁ≥ª$/;"	f	class:zSkill
IsEmpty	ScenesServer/WayPoint.h	/^	bool IsEmpty()$/;"	f	struct:zZone
IsFemaleFace	base/Command.h	/^inline bool IsFemaleFace(int face)$/;"	f	namespace:Cmd
IsGangScene	ScenesServer/Scene.h	/^	virtual bool IsGangScene() $/;"	f	class:StaticScene
IsGangScene	ScenesServer/Scene.h	/^	virtual bool IsGangScene() { return false; }$/;"	f	class:Scene
IsImmuneSkill	ScenesServer/Skill.cpp	/^bool zSkill::IsImmuneSkill()	\/\/sky Ê£ÄÊµãÊäÄËÉΩÊòØÂê¶ËÉΩË¢´ÂÖçÁñ´$/;"	f	class:zSkill
IsInZone	ScenesServer/WayPoint.h	/^	bool IsInZone( zPos p ) \/\/ Âà§Êñ≠ÁÇπpÊòØÂê¶Âú®Ê≠§Âå∫ÂüüÂÜÖ$/;"	f	struct:zZone
IsJobEquip	ScenesServer/zObject.cpp	/^bool EquipPack::IsJobEquip(DWORD useJob, DWORD EquipType)$/;"	f	class:EquipPack
IsJoin	ScenesServer/SceneUser.cpp	/^bool SceneUser::IsJoin(DWORD five)$/;"	f	class:SceneUser
IsMagicSkill	ScenesServer/Skill.cpp	/^bool zSkill::IsMagicSkill()	\/\/sky Ê£ÄÊµãÊäÄËÉΩÊòØÂê¶ÊòØÈ≠îÊ≥ïÁ≥ªÊäÄËÉΩ$/;"	f	class:zSkill
IsMaleFace	base/Command.h	/^inline bool IsMaleFace(int face)$/;"	f	namespace:Cmd
IsNotify	tmpcode/commond.h	/^	BYTE IsNotify ; \/\/0,µ⁄“ª¥ŒÕ®÷™≈≈√˚,1,∑«µ⁄“ª¥Œ$/;"	m	struct:stReQueueNum
IsOppose	ScenesServer/SceneNpc.cpp	/^int SceneNpc::IsOppose(DWORD five)$/;"	f	class:SceneNpc
IsOppose	ScenesServer/SceneUser.cpp	/^int SceneUser::IsOppose(DWORD five)$/;"	f	class:SceneUser
IsOtherSkill	ScenesServer/Skill.cpp	/^bool zSkill::IsOtherSkill()		\/\/sky Ê£ÄÊµãÊäÄËÉΩÊòØÂê¶ÊòØÂÖ∂‰ªñÁ≥ª$/;"	f	class:zSkill
IsPhysicsSkill	ScenesServer/Skill.cpp	/^bool zSkill::IsPhysicsSkill()	\/\/sky Ê£ÄÊµãÊäÄËÉΩÊòØÂê¶ÊòØÁâ©ÁêÜÁ≥ªÊäÄËÉΩ$/;"	f	class:zSkill
IsPkTimeOver	ScenesServer/SceneUser.cpp	/^bool SceneUser::IsPkTimeOver()$/;"	f	class:SceneUser
IsPking	ScenesServer/SceneUser.h	/^    bool IsPking()$/;"	f	struct:SceneUser
IsPveOrPvp	ScenesServer/SceneUser.cpp	/^useFightState SceneUser::IsPveOrPvp()$/;"	f	class:SceneUser
IsReboundSkill	ScenesServer/Skill.cpp	/^bool zSkill::IsReboundSkill()	\/\/sky Ê£ÄÊµãÊäÄËÉΩÊòØÂê¶ËÉΩË¢´ÂèçÂ∞Ñ$/;"	f	class:zSkill
IsTreatmentSkill	ScenesServer/Skill.cpp	/^bool zSkill::IsTreatmentSkill()	\/\/sky Ê£ÄÊµãÊäÄËÉΩÊòØÂê¶ÊòØÊ≤ªÁñóÁ≥ª$/;"	f	class:zSkill
Item	base/xmlparser/giftbag.h	/^            struct Item$/;"	s	struct:GiftBagConfig::Bag::Quality
Item	base/xmlparser/herobase.h	/^        struct Item$/;"	s	struct:HeroBaseCFG::Exp
Item	base/xmlparser/herobase.h	/^        struct Item$/;"	s	struct:HeroBaseCFG::Init
Item	base/xmlparser/market.h	/^        struct Item$/;"	s	struct:MarketConfig::Obj
Item	base/xmlparser/test.h	/^        struct Item$/;"	s	struct:TestConfig::Reward
ItemCondition	ScenesServer/QuestCondition.h	/^  ItemCondition(ScenesParser& p) : TeamCondition(p)$/;"	f	class:ItemCondition
ItemCondition	ScenesServer/QuestCondition.h	/^class ItemCondition : public TeamCondition$/;"	c
ItemIndex	tmpcode/commond.h	/^	BYTE	ItemIndex;$/;"	m	struct:FurnitureMapData
ItemIndex	tmpcode/commond.h	/^	BYTE	ItemIndex;$/;"	m	struct:stMoveFurnitureHomeUserCmd
ItemIndex	tmpcode/commond.h	/^	BYTE	ItemIndex;$/;"	m	struct:stNotifyAddFurnitureHomeUserCmd
ItemMap	base/xmlparser/giftbag.h	/^            typedef xml_node_map<DWORD,Item>	ItemMap;$/;"	t	struct:GiftBagConfig::Bag::Quality
ItemMap	base/xmlparser/herobase.h	/^        typedef xml_node_map<DWORD,Item>	ItemMap;$/;"	t	struct:HeroBaseCFG::Init
ItemMap	base/xmlparser/herobase.h	/^        typedef xml_node_map<WORD,Item>	ItemMap;$/;"	t	struct:HeroBaseCFG::Exp
ItemMap	base/xmlparser/market.h	/^        typedef xml_node_map<DWORD,Item>	ItemMap;$/;"	t	struct:MarketConfig::Obj
ItemMap	base/xmlparser/test.h	/^        typedef xml_node_map<int,Item>	ItemMap;$/;"	t	struct:TestConfig::Reward
ItemMapConstIter	base/xmlparser/giftbag.h	/^            typedef ItemMap::const_iterator	ItemMapConstIter;$/;"	t	struct:GiftBagConfig::Bag::Quality
ItemMapConstIter	base/xmlparser/herobase.h	/^        typedef ItemMap::const_iterator	ItemMapConstIter;$/;"	t	struct:HeroBaseCFG::Exp
ItemMapConstIter	base/xmlparser/herobase.h	/^        typedef ItemMap::const_iterator	ItemMapConstIter;$/;"	t	struct:HeroBaseCFG::Init
ItemMapConstIter	base/xmlparser/market.h	/^        typedef ItemMap::const_iterator	ItemMapConstIter;$/;"	t	struct:MarketConfig::Obj
ItemMapConstIter	base/xmlparser/test.h	/^        typedef ItemMap::const_iterator	ItemMapConstIter;$/;"	t	struct:TestConfig::Reward
ItemMapIter	base/xmlparser/giftbag.h	/^            typedef ItemMap::iterator	ItemMapIter;$/;"	t	struct:GiftBagConfig::Bag::Quality
ItemMapIter	base/xmlparser/herobase.h	/^        typedef ItemMap::iterator	ItemMapIter;$/;"	t	struct:HeroBaseCFG::Exp
ItemMapIter	base/xmlparser/herobase.h	/^        typedef ItemMap::iterator	ItemMapIter;$/;"	t	struct:HeroBaseCFG::Init
ItemMapIter	base/xmlparser/market.h	/^        typedef ItemMap::iterator	ItemMapIter;$/;"	t	struct:MarketConfig::Obj
ItemMapIter	base/xmlparser/test.h	/^        typedef ItemMap::iterator	ItemMapIter;$/;"	t	struct:TestConfig::Reward
ItemObjectCompare	ScenesServer/Skill.cpp	/^class ItemObjectCompare:public UserObjectCompare $/;"	c
ItemType_ActiveReward	base/Object.h	/^    ItemType_ActiveReward = 207,  \/\/ ªÓ∂Ø‘˘ÀÕŒÔ∆∑$/;"	e	enum:enumItemType
ItemType_AddLingQiMinusExp	base/Object.h	/^	ItemType_AddLingQiMinusExp = 266,  \/\/Œ™¡È∆˜æ≠—ÈŒ™∏∫ ±‘ˆº”æ≠—È$/;"	e	enum:enumItemType
ItemType_AddPersonAttribute	base/Object.h	/^	ItemType_AddPersonAttribute = 250, \/\/ºÒµΩ÷±Ω”‘ˆº”ÕÊº“…˙√¸°¢ƒß∑®£¨π•ª˜µ» Ù–‘µƒŒÔ∆∑$/;"	e	enum:enumItemType
ItemType_AddRentStoreTime	base/Object.h	/^	ItemType_AddRentStoreTime = 249, \/\/◊‚¡ﬁ≤÷ø‚≥‰ ±µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_AddRing	base/Object.h	/^	ItemType_AddRing                = 283,      \/\/º” ˝ª∑µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Add_Exploit	base/Object.h	/^    ItemType_Add_Exploit = 128,     \/\/‘ˆº”π¶—´µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Adonment	base/Object.h	/^    ItemType_Adonment = 56, \/\/56¥˙±Ì◊∞ Œ∆∑$/;"	e	enum:enumItemType
ItemType_Amulet	base/Object.h	/^    ItemType_Amulet = 61, \/\/ ª§…Ì∑˚¿‡µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_AntiquityStone	base/Object.h	/^    ItemType_AntiquityStone = 203,  \/\/…œπ≈…Ò Ø$/;"	e	enum:enumItemType
ItemType_AntiquityStone_2	base/Object.h	/^    ItemType_AntiquityStone_2 = 204,    \/\/≤πÃÏ¡È Ø$/;"	e	enum:enumItemType
ItemType_AntiquityStone_3	base/Object.h	/^    ItemType_AntiquityStone_3 = 205,    \/\/≤πÃÏ Ø$/;"	e	enum:enumItemType
ItemType_Arm	base/Object.h	/^    ItemType_Arm = 152,						\/\/ ±€ª∑$/;"	e	enum:enumItemType
ItemType_Arrow	base/Object.h	/^    ItemType_Arrow,     \/\/21¥˙±Ì≈‰∫œπ≠ π”√µƒº˝÷ß¿‡$/;"	e	enum:enumItemType
ItemType_Auto	base/Object.h	/^    ItemType_Auto = 42,   \/\/42 ¥˙±Ì◊‘∂Ø¡∑π¶$/;"	e	enum:enumItemType
ItemType_AutoFireSkill	base/Object.h	/^	ItemType_AutoFireSkill = 244,  \/\/◊‘∂Ø Õ∑≈ººƒ‹≤π ±º‰µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_AutoPick	base/Object.h	/^	ItemType_AutoPick = 162,	\/\/ ◊‘∂ØºŒÔµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_AutoRepair	base/Object.h	/^    ItemType_AutoRepair = 238, \/\/◊‘∂Ø–ﬁ¿Ì Œ∆∑$/;"	e	enum:enumItemType
ItemType_Autoget	base/Object.h	/^    ItemType_Autoget = 190,         \/\/◊‘∂Ø ∞»°π§æﬂ$/;"	e	enum:enumItemType
ItemType_Axe	base/Object.h	/^    ItemType_Axe =106,				\/\/106¥˙±ÌŒ‰ ı∏´¿‡Œ‰∆˜£®’‚÷÷∏´◊”◊∞±∏‘⁄”“ ÷£¨“≤ø…◊∞±∏‘⁄◊Û ÷)$/;"	e	enum:enumItemType
ItemType_Blade	base/Object.h	/^    ItemType_Blade =104,            \/\/104¥˙±ÌŒ‰ ıµ∂¿‡Œ‰∆˜$/;"	e	enum:enumItemType
ItemType_Book	base/Object.h	/^    ItemType_Book = 44, \/\/44¥˙±Ì ÈºÆ$/;"	e	enum:enumItemType
ItemType_BothHandAxe	base/Object.h	/^	ItemType_BothHandAxe = 139,				\/\/À´ ÷∏´£®’‚÷÷∏´÷Æ◊∞±∏‘⁄”“ ÷)$/;"	e	enum:enumItemType
ItemType_BothHandHammer	base/Object.h	/^    ItemType_BothHandHammer = 143,			\/\/À´ ÷æﬁ¥∏$/;"	e	enum:enumItemType
ItemType_BoxingGlove	base/Object.h	/^    ItemType_BoxingGlove = 140,				\/\/»≠Ã◊$/;"	e	enum:enumItemType
ItemType_Bugle	base/Object.h	/^	ItemType_Bugle                          = 278,          \/\/∫∞ª∞–°¿Æ∞»µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Caestus	base/Object.h	/^    ItemType_Caestus =114,			\/\/114¥˙±ÌΩ«…´—¸¥¯¿‡$/;"	e	enum:enumItemType
ItemType_CanNotDestroy	base/Object.h	/^    ItemType_CanNotDestroy = 70,    \/\/≤ªø…œ˙ªŸµƒµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_CaptureWeapon	base/Object.h	/^    ItemType_CaptureWeapon, \/\/28¥˙±Ì—±∑˛≥ËŒÔ”√Œ‰∆˜$/;"	e	enum:enumItemType
ItemType_Change	base/Object.h	/^    ItemType_Change = 41,   \/\/41 ¥˙±Ì∫œ≥…µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_ChuanChengFull	base/Object.h	/^	ItemType_ChuanChengFull   = 260,  \/\/\/¥´≥–÷Æ È,≥‰¬˙µƒ$/;"	e	enum:enumItemType
ItemType_ChuanChengNotFull	base/Object.h	/^	ItemType_ChuanChengNotFull   = 259,  \/\/\/¥´≥–÷Æ È,Œ¥≥‰¬˙µƒ$/;"	e	enum:enumItemType
ItemType_ClearDrunkennessTime	base/Object.h	/^	ItemType_ClearDrunkennessTime = 267,     \/\/Ω‚æ∆“© $/;"	e	enum:enumItemType
ItemType_ClearFashion	base/Object.h	/^    ItemType_ClearFashion = 125,			\/\/125¥˙±Ì±Ì∏Ò≈‰÷√∞ÊÕ∏√˜ ±◊∞$/;"	e	enum:enumItemType
ItemType_ClearProperty	base/Object.h	/^    ItemType_ClearProperty = 59, \/\/59œ¥µ„µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Cloak	base/Object.h	/^    ItemType_Cloak = 154,					\/\/ ≈˚∑Á$/;"	e	enum:enumItemType
ItemType_ClothBody	base/Object.h	/^    ItemType_ClothBody =101,		\/\/101¥˙±Ì≤º÷ º”…˙√¸¿‡∑˛◊∞		$/;"	e	enum:enumItemType
ItemType_Crossbow	base/Object.h	/^    ItemType_Crossbow =109,         \/\/109¥˙±Ìº˝ ıπ≠¿‡Œ‰∆˜$/;"	e	enum:enumItemType
ItemType_CrystalCertificate	base/Object.h	/^	ItemType_CrystalCertificate     = 286,  \/\/ÀÆæß±“∂“ªª»Ø(∞Û∂®ÀÆæß±“µ¿æﬂ‘ˆº”µ¿æﬂ)$/;"	e	enum:enumItemType
ItemType_CrystalHead	base/Object.h	/^    ItemType_CrystalHead = 144,				\/\/ÀÆæß«Ú$/;"	e	enum:enumItemType
ItemType_Cuff	base/Object.h	/^    ItemType_Cuff = 115,			\/\/115¥˙±ÌΩ«…´ª§ÕÛ¿‡$/;"	e	enum:enumItemType
ItemType_Dagger	base/Object.h	/^    ItemType_Dagger = 136,					\/\/ ÿ∞ ◊$/;"	e	enum:enumItemType
ItemType_DearObject	base/Object.h	/^	ItemType_DearObject = 226,      \/\/’‰πÛŒÔ∆∑  ¬Ù∏¯NPC ±∞¥‘≠º€¥¶“‘3$/;"	e	enum:enumItemType
ItemType_DecayLingQi_ReRound	base/Object.h	/^	ItemType_DecayLingQi_ReRound = 296,      \/\/Õ…±‰¡È∆˜±‰ªÿ10º∂µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_DoubleExp	base/Object.h	/^    ItemType_DoubleExp = 52, \/\/52¥˙±ÌÀ´±∂æ≠—È¿‡–Õ$/;"	e	enum:enumItemType
ItemType_DoubleExpObject	base/Object.h	/^	ItemType_DoubleExpObject = 247, \/\/À´±∂æ≠—È≤€µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Dragon	base/Object.h	/^    ItemType_Dragon                         = 275,         \/\/≥ËŒÔ¡˙$/;"	e	enum:enumItemType
ItemType_DragonEquip	base/Object.h	/^	ItemType_DragonEquip                    = 274,          \/\/¡˙◊∞±∏¿‡–Õ$/;"	e	enum:enumItemType
ItemType_DragonFood	base/Object.h	/^    ItemType_DragonFood                     = 276,          \/\/¡˙≥Ë ≥¡œ$/;"	e	enum:enumItemType
ItemType_EGObject	base/Object.h	/^    ItemType_EGObject = 71,     \/\/71¥˙±Ì∂Ò∏„¿‡µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Earing	base/Object.h	/^    ItemType_Earing = 151,					\/\/ ∂˙ª∑$/;"	e	enum:enumItemType
ItemType_ElemEss	base/Object.h	/^    ItemType_ElemEss = 212, \/\/ œ‚«∂‘™Àÿæ´ Ø¿‡,œ‚«∂µΩ∑¿”˘¿‡◊∞±∏$/;"	e	enum:enumItemType
ItemType_ElemGem	base/Object.h	/^    ItemType_ElemGem = 211, \/\/ œ‚«∂‘™Àÿ±¶ Ø¿‡,œ‚«∂µΩπ•ª˜¿‡◊∞±∏$/;"	e	enum:enumItemType
ItemType_EmotionTalk	base/Object.h	/^	ItemType_EmotionTalk = 234, \/\/◊‘∂®“Â«È–˜≈›≈›$/;"	e	enum:enumItemType
ItemType_EmployGather	base/Object.h	/^	 ItemType_EmployGather = 248,  \/\/πÕ”∂≤…ºØ∆æ÷§$/;"	e	enum:enumItemType
ItemType_EquipAid	base/Object.h	/^	ItemType_EquipAid   = 261,  \/\/◊∞±∏∏®÷˙µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_EvolveHorseScroll	base/Object.h	/^	ItemType_EvolveHorseScroll              = 279,          \/\/◊¯∆ÔΩ¯ªØæÌ÷·$/;"	e	enum:enumItemType
ItemType_EvolveHorseStone	base/Object.h	/^	ItemType_EvolveHorseStone               = 280,          \/\/◊¯∆ÔΩ¯ªØ»€ Ø$/;"	e	enum:enumItemType
ItemType_Exp	base/Object.h	/^	ItemType_Exp         = 239,  \/\/æ≠—È÷È£¨ π”√∫Û÷±Ω”∏¯æ≠—È$/;"	e	enum:enumItemType
ItemType_Exp_To_LingQiExp	base/Object.h	/^	ItemType_Exp_To_LingQiExp = 294,  \/\/»ÀŒÔæ≠—ÈµΩ¡È∆˜æ≠—È$/;"	e	enum:enumItemType
ItemType_FAMILY	base/Object.h	/^    ItemType_FAMILY = 55,  \/\/ º“◊Â’ŸºØ¡Ó£®º“◊Â¡Ó£©$/;"	e	enum:enumItemType
ItemType_FamilyCloak	base/Object.h	/^    ItemType_FamilyCloak = 156,				\/\/º“◊Â≈˚∑Á$/;"	e	enum:enumItemType
ItemType_Fan	base/Object.h	/^    ItemType_Fan =110,				\/\/110¥˙±Ì√¿≈Æ…»¿‡$/;"	e	enum:enumItemType
ItemType_Fashion	base/Object.h	/^    ItemType_Fashion = 124,					\/\/124¥˙±Ì≈‰÷√∞Ê ±◊∞$/;"	e	enum:enumItemType
ItemType_Fashion140	base/Object.h	/^    ItemType_Fashion140 = 122,				\/\/122¥˙±Ì140º∂ ±◊∞$/;"	e	enum:enumItemType
ItemType_FashionBody	base/Object.h	/^    ItemType_FashionBody = 119,     \/\/119¥˙±Ì ±◊∞$/;"	e	enum:enumItemType
ItemType_FashionCloak	base/Object.h	/^    ItemType_FashionCloak = 161,			\/\/  ±◊∞≈˚∑Á$/;"	e	enum:enumItemType
ItemType_FashionHelm	base/Object.h	/^    ItemType_FashionHelm = 160,				\/\/  ±◊∞Õ∑ Œ$/;"	e	enum:enumItemType
ItemType_FashionPattern	base/Object.h	/^    ItemType_FashionPattern = 218, \/\/÷∆‘Ï ±◊∞À˘–ËµƒÕº÷Ω¿‡–Õ$/;"	e	enum:enumItemType
ItemType_FellBody	base/Object.h	/^    ItemType_FellBody =102,         \/\/102¥˙±Ì∆§º◊º”ƒß∑¿¿‡∑˛◊∞$/;"	e	enum:enumItemType
ItemType_Fight	base/Object.h	/^	ItemType_Fight				    = 285,		\/\/’Ω’˘µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_FineSword	base/Object.h	/^    ItemType_FineSword = 219,\/\/œ∏Ω£$/;"	e	enum:enumItemType
ItemType_Fing	base/Object.h	/^    ItemType_Fing = 118,			\/\/118¥˙±ÌΩ«…´Ω‰÷∏¿‡$/;"	e	enum:enumItemType
ItemType_Fire	base/Object.h	/^	ItemType_Fire = 235,		\/\/ ∏ˆ»ÀÛÙª$/;"	e	enum:enumItemType
ItemType_FishingBait	base/Object.h	/^	ItemType_FishingBait = 252,  \/\/\/ ”„∂¸$/;"	e	enum:enumItemType
ItemType_FishingRob	base/Object.h	/^	ItemType_FishingRob = 251,  \/\/\/ ”„∏Õ$/;"	e	enum:enumItemType
ItemType_Flower	base/Object.h	/^    ItemType_Flower = 120,      \/\/120¥˙±Ìœ ª®,≤…ºØ ÷Ã◊...$/;"	e	enum:enumItemType
ItemType_FlyItem	base/Object.h	/^	ItemType_FlyItem                        = 273,          \/\/ Œ∆∑¿‡µ¿æﬂ≥·∞Ú$/;"	e	enum:enumItemType
ItemType_Food	base/Object.h	/^    ItemType_Food,      \/\/19¥˙±Ì ≥ŒÔ¿‡$/;"	e	enum:enumItemType
ItemType_FoodRes	base/Object.h	/^    ItemType_FoodRes,   \/\/18¥˙±Ì ≥ŒÔ‘≠¡œ¿‡$/;"	e	enum:enumItemType
ItemType_ForeverMedal	base/Object.h	/^	ItemType_ForeverMedal   = 241,		\/\/”¿æ√–Õ—´’¬$/;"	e	enum:enumItemType
ItemType_FuWenQiangHua	base/Object.h	/^	ItemType_FuWenQiangHua			= 270,		\/\/∑˚Œƒ«øªØ¿‡$/;"	e	enum:enumItemType
ItemType_FuWenStone	base/Object.h	/^	ItemType_FuWenStone               = 282,          \/\/…˝–«…˝‘¬ ØÕ∑$/;"	e	enum:enumItemType
ItemType_FunctionObject	base/Object.h	/^	ItemType_FunctionObject = 245, \/\/π¶ƒ‹–‘µ¿æﬂ£¨±»»Á”“º¸µ„ª˜µØ≥ˆ¡ÌÕ‚“ª∏ˆ∂‘ª∞øÚ£¨π¶ƒ‹÷˜“™‘⁄¡Ì“ª∏ˆ∂‘ª∞øÚ¥¶¿Ìµƒ$/;"	e	enum:enumItemType
ItemType_Furniture	base/Object.h	/^    ItemType_Furniture = 99,  \/\/º“æﬂ$/;"	e	enum:enumItemType
ItemType_FuwenMozhu	base/Object.h	/^	ItemType_FuwenMozhu  = 253,  \/\/\/∑˚Œ∆ƒß÷È£¨∏¯◊∞±∏º”∑˚Œ∆ƒ‹¡ø$/;"	e	enum:enumItemType
ItemType_GemHammer	base/Object.h	/^	ItemType_GemHammer				= 284,		\/\/±¶ Ø¥∏$/;"	e	enum:enumItemType
ItemType_GemPiece	base/Object.h	/^	ItemType_GemPiece = 224,        \/\/±¶ ØÀÈ∆¨ æ´ ØÀÈ∆¨ ¿‡µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_GeniusSkillBook	base/Object.h	/^    ItemType_GeniusSkillBook = 83,  \/\/ÃÏ∏≥ººƒ‹ È$/;"	e	enum:enumItemType
ItemType_GeniusSkillBookPage	base/Object.h	/^    ItemType_GeniusSkillBookPage = 49, \/\/ÃÏ∏≥ È≤–“≥$/;"	e	enum:enumItemType
ItemType_Gift	base/Object.h	/^    ItemType_Gift,  \/\/31¥˙±Ì¿Ò∆∑¿‡ŒÔ∆∑.$/;"	e	enum:enumItemType
ItemType_GiftBag	base/Object.h	/^    ItemType_GiftBag = 213,  \/\/ ±£¡Ù’˜Õæ¥Û¿Ò∞¸¿‡–Õ$/;"	e	enum:enumItemType
ItemType_GiftBag_Card	base/Object.h	/^	ItemType_GiftBag_Card	    =	300,	\/\/ø®≈∆ÕÊ∑®£¨ø®≈∆¿Ò∞¸$/;"	e	enum:enumItemType
ItemType_GiftBox	base/Object.h	/^    ItemType_GiftBox = 126,     \/\/±¶∫–ø™Ω±”√µƒ±¶œ‰$/;"	e	enum:enumItemType
ItemType_GiftBox_Key	base/Object.h	/^    ItemType_GiftBox_Key = 127,     \/\/±¶∫–ø™Ω±”√µƒ‘ø≥◊$/;"	e	enum:enumItemType
ItemType_GiftBox_WenMing	base/Object.h	/^	ItemType_GiftBox_WenMing = 295,  \/\/◊∞±∏Œƒ√˜±¶œ‰$/;"	e	enum:enumItemType
ItemType_GoldToMoney	base/Object.h	/^	ItemType_GoldToMoney = 228,      \/\/”√”⁄∞—ÀÆæß±“∂“ªª≥…Ω Ù±“µƒµ¿æﬂ¿‡–Õ$/;"	e	enum:enumItemType
ItemType_GreatLeechdom	base/Object.h	/^    ItemType_GreatLeechdom = 58, \/\/58¥Ûº∆¡ø“©∆∑$/;"	e	enum:enumItemType
ItemType_GreatLeechdomMp	base/Object.h	/^    ItemType_GreatLeechdomMp = 62,\/\/62¥Ûº∆¡ø◊‘∂Ø≤π¿ºµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_HairDyes	base/Object.h	/^	ItemType_HairDyes = 225,        \/\/»æ∑¢º¡¿‡µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Hammer	base/Object.h	/^    ItemType_Hammer =107,           \/\/107¥˙±ÌŒ‰ ı∏´¿‡Œ‰∆˜$/;"	e	enum:enumItemType
ItemType_HappyCard	base/Object.h	/^	ItemType_HappyCard						= 281,			\/\/¡˙÷È≥ÈΩ± ª∂¿÷ø®∆¨$/;"	e	enum:enumItemType
ItemType_Helm	base/Object.h	/^    ItemType_Helm =113,				\/\/113¥˙±ÌΩ«…´Õ∑ø¯¿‡$/;"	e	enum:enumItemType
ItemType_HoleStuff	base/Object.h	/^    ItemType_HoleStuff = 215,   \/\/¥Úø◊À˘”√µƒµ¿æﬂ¿‡–Õ$/;"	e	enum:enumItemType
ItemType_HomePetFood	base/Object.h	/^    ItemType_HomePetFood = 214, \/\/±£¡Ù’˜Õæ≥ËŒÔ ≥ŒÔ¿‡–Õ$/;"	e	enum:enumItemType
ItemType_Honor	base/Object.h	/^    ItemType_Honor = 53, \/\/53¥˙±Ì»Ÿ”˛÷Æ–«¿‡–Õ$/;"	e	enum:enumItemType
ItemType_HorseCard	base/Object.h	/^    ItemType_HorseCard = 222,   \/\/¬Ì≈∆  $/;"	e	enum:enumItemType
ItemType_HorseSoul	base/Object.h	/^	ItemType_HorseSoul = 130,               \/\/ ◊¯∆Ô¡ÈªÍ$/;"	e	enum:enumItemType
ItemType_HouseGardenMaterial	base/Object.h	/^	ItemType_HouseGardenMaterial    = 96,   \/\/∑øŒ›ª®‘∞ŒÔ∆∑$/;"	e	enum:enumItemType
ItemType_HouseGardenSeed	base/Object.h	/^	ItemType_HouseGardenSeed        = 95,   \/\/∑øŒ›ª®‘∞÷÷◊”$/;"	e	enum:enumItemType
ItemType_HouseItem	base/Object.h	/^	ItemType_HouseItem              = 98,   \/\/∑øŒ›ŒÔ∆∑$/;"	e	enum:enumItemType
ItemType_HpJewel	base/Object.h	/^    ItemType_HpJewel = 163,					\/\/ …˙√¸ Œ∆∑$/;"	e	enum:enumItemType
ItemType_HuShenFu	base/Object.h	/^    ItemType_HuShenFu  = 80,  \/\/ª§…Ì∑˚$/;"	e	enum:enumItemType
ItemType_HumanSkeleton	base/Object.h	/^    ItemType_HumanSkeleton= 145,			\/\/˜º˜√Õ∑$/;"	e	enum:enumItemType
ItemType_JieZhanMedal	base/Object.h	/^	ItemType_JieZhanMedal           = 271,      \/\/ΩÁ’Ω÷∏ª”πŸ”°º«$/;"	e	enum:enumItemType
ItemType_KING	base/Object.h	/^    ItemType_KING = 65, \/\/ ΩÁ”Ú’ŸºØ¡Ó(π˙Õı¡Ó)$/;"	e	enum:enumItemType
ItemType_Knee	base/Object.h	/^    ItemType_Knee = 153,					\/\/ ª§œ•$/;"	e	enum:enumItemType
ItemType_Lance	base/Object.h	/^    ItemType_Lance = 149,					\/\/ ≥§√¨,«π$/;"	e	enum:enumItemType
ItemType_Leechdom	base/Object.h	/^    ItemType_Leechdom,  \/\/17¥˙±Ì“©∆∑¿‡$/;"	e	enum:enumItemType
ItemType_LevelUp	base/Object.h	/^    ItemType_LevelUp,   \/\/27¥˙±Ìµ¿æﬂ…˝º∂–Ë“™µƒ≤ƒ¡œ¿‡$/;"	e	enum:enumItemType
ItemType_LingQi	base/Object.h	/^    ItemType_LingQi     =229,   \/\/¡È∆˜$/;"	e	enum:enumItemType
ItemType_LingQiAddExp	base/Object.h	/^	ItemType_LingQiAddExp = 246, \/\/¡È∆˜‘ˆº”æ≠—Èµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_LingQiFeedUp	base/Object.h	/^	ItemType_LingQiFeedUp   = 237,  \/\/¡È∆˜—¯≥…¿‡$/;"	e	enum:enumItemType
ItemType_LingQi_ExpZhu	base/Object.h	/^	ItemType_LingQi_ExpZhu = 293,  \/\/¡È∆˜æ≠—È÷È£¨¥Úπ÷ ±æ≠—È±∂ ˝$/;"	e	enum:enumItemType
ItemType_LingQi_Model	base/Object.h	/^	ItemType_LingQi_Model           = 272,        \/\/¡È∆˜ƒ£–Õ¿‡$/;"	e	enum:enumItemType
ItemType_LingYuanZhu	base/Object.h	/^	ItemType_LingYuanZhu       = 257,  \/\/\/¡È‘™÷È$/;"	e	enum:enumItemType
ItemType_LingYuanZhu_CanAdd	base/Object.h	/^	ItemType_LingYuanZhu_CanAdd = 268,       \/\/ø…µ˛º”µƒ¡È‘™÷È$/;"	e	enum:enumItemType
ItemType_MASK	base/Object.h	/^    ItemType_MASK = 33,     \/\/33¥˙±Ì√…√ÊΩÌ$/;"	e	enum:enumItemType
ItemType_Mace	base/Object.h	/^    ItemType_Mace = 150,					\/\/ È≥$/;"	e	enum:enumItemType
ItemType_MagicBook	base/Object.h	/^    ItemType_MagicBook = 142,				\/\/ƒß∑® È$/;"	e	enum:enumItemType
ItemType_MagicSword	base/Object.h	/^    ItemType_MagicSword = 147,				\/\/ ƒß∑®Ω£$/;"	e	enum:enumItemType
ItemType_MakePattern	base/Object.h	/^    ItemType_MakePattern = 216, \/\/÷∆‘Ïººƒ‹À˘–ËµƒÕº÷ΩªÚ’ﬂ≈‰∑Ω¿‡–Õ.$/;"	e	enum:enumItemType
ItemType_Material	base/Object.h	/^    ItemType_Material = 73,     \/\/73¥˙±Ì≤ƒ¡œ$/;"	e	enum:enumItemType
ItemType_Medal	base/Object.h	/^    ItemType_Medal = 206,       \/\/—´’¬, Medal ◊∞±∏∫Ûø…‘ˆº”»ÀŒÔ Ù–‘$/;"	e	enum:enumItemType
ItemType_MerchAddit	base/Object.h	/^	ItemType_MerchAddit     = 254,  \/\/\/”∂±¯Õ≈…Ã≥«∏®¡œ$/;"	e	enum:enumItemType
ItemType_MetalBody	base/Object.h	/^    ItemType_MetalBody =103,        \/\/103¥˙±ÌΩ ÙÓ¯º◊º”ŒÔ∑¿¿‡∑˛◊∞$/;"	e	enum:enumItemType
ItemType_Money	base/Object.h	/^    ItemType_Money,     \/\/24¥˙±ÌΩ«Æ¿‡$/;"	e	enum:enumItemType
ItemType_MountElse	base/Object.h	/^    ItemType_MountElse = 171,       \/\/ ∑≈…‰”’µº∆˜$/;"	e	enum:enumItemType
ItemType_Move	base/Object.h	/^    ItemType_Move,      \/\/26¥˙±ÌÃÿ ‚“∆∂Øµ¿æﬂ¿‡$/;"	e	enum:enumItemType
ItemType_MpJewel	base/Object.h	/^    ItemType_MpJewel = 164,					\/\/ ƒß¡¶ Œ∆∑$/;"	e	enum:enumItemType
ItemType_MusicBow	base/Object.h	/^    ItemType_MusicBow = 141,				\/\/«Ÿπ≠$/;"	e	enum:enumItemType
ItemType_Necklace	base/Object.h	/^    ItemType_Necklace = 117,		\/\/117¥˙±ÌΩ«…´œÓ¡¥¿‡$/;"	e	enum:enumItemType
ItemType_NewGiftBox	base/Object.h	/^	ItemType_NewGiftBox                     = 277,          \/\/–¬±¶œ‰µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_NewOneFiveExp	base/Object.h	/^    ItemType_NewOneFiveExp = 69,  \/\/ƒÕæ√∞¥∑÷À„µƒ1.5±∂æ≠—Èµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_NewSword	base/Object.h	/^    ItemType_NewSword = 137,				\/\/ –¬Ω£$/;"	e	enum:enumItemType
ItemType_New_OneFiveExp	base/Object.h	/^    ItemType_New_OneFiveExp = 75,  \/\/–¬1.5±∂æ≠—Èµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_New_OneSevenFiveExp	base/Object.h	/^    ItemType_New_OneSevenFiveExp = 76,  \/\/–¬1.75±∂æ≠—Èµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_None	base/Object.h	/^    ItemType_None,$/;"	e	enum:enumItemType
ItemType_OffPurple	base/Object.h	/^	ItemType_OffPurple = 297,  \/\/ »°œ¬◊œ◊∞µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Offline	base/Object.h	/^    ItemType_Offline = 180,         \/\/¿Îœﬂπ§æﬂ$/;"	e	enum:enumItemType
ItemType_OneFiveExp	base/Object.h	/^    ItemType_OneFiveExp = 66,  \/\/1.5±∂æ≠—Èµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_OneSevenFiveExp	base/Object.h	/^    ItemType_OneSevenFiveExp = 68,  \/\/1.75±∂æ≠—Èµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_OneTwoFiveExp	base/Object.h	/^    ItemType_OneTwoFiveExp = 67,  \/\/1.25±∂æ≠—Èµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Other	base/Object.h	/^    ItemType_Other,$/;"	e	enum:enumItemType
ItemType_Pack	base/Object.h	/^    ItemType_Pack = 23,      \/\/23¥˙±Ì∞¸π¸¿‡$/;"	e	enum:enumItemType
ItemType_PastorBar	base/Object.h	/^    ItemType_PastorBar =217,    \/\/ƒ¡ ¶”√µƒ»®’»¿‡$/;"	e	enum:enumItemType
ItemType_PerfectLevelup	base/Object.h	/^    ItemType_PerfectLevelup = 201,  \/\/ ◊Í Ø$/;"	e	enum:enumItemType
ItemType_PointOpenGiftBag	base/Object.h	/^	ItemType_PointOpenGiftBag       = 288,  \/\/ (¿Ò∞¸)µ„ ˝¥Úø™¿Ò∞¸µ¿æﬂ£¨√ø¥Œ¥Úø™œ˚∫ƒ∂‘”¶µ„ ˝£¨∏¥”√ƒÕæ√◊÷∂Œ$/;"	e	enum:enumItemType
ItemType_PointOpenGiftBox	base/Object.h	/^	ItemType_PointOpenGiftBox       = 287,  \/\/ (±¶œ‰)µ„ ˝¥Úø™±¶œ‰µ¿æﬂ£¨√ø¥Œ¥Úø™œ˚∫ƒ∂‘”¶µ„ ˝£¨∏¥”√ƒÕæ√◊÷∂Œ$/;"	e	enum:enumItemType
ItemType_PurpleDef	base/Object.h	/^	ItemType_PurpleDef   = 289,  \/\/ ◊œ◊∞Ã·…˝µ¿æﬂ Ã·…˝∑¿æﬂ$/;"	e	enum:enumItemType
ItemType_PurpleJew	base/Object.h	/^    ItemType_PurpleJew   = 290,  \/\/ ◊œ◊∞Ã·…˝µ¿æﬂ Ã·…˝ Œ∆∑$/;"	e	enum:enumItemType
ItemType_PurplePiece	base/Object.h	/^    ItemType_PurplePiece = 292,  \/\/ ◊œ◊∞Ã·…˝ÀÈ∆¨$/;"	e	enum:enumItemType
ItemType_PurpleWeapon	base/Object.h	/^    ItemType_PurpleWeapon  = 291,  \/\/ ◊œ◊∞Ã·…˝µ¿æﬂ Ã·…˝Œ‰∆˜$/;"	e	enum:enumItemType
ItemType_Qianneng_Obj	base/Object.h	/^	ItemType_Qianneng_Obj       = 269,      \/\/«±ƒ‹¿‡µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Quest	base/Object.h	/^    ItemType_Quest = 34,$/;"	e	enum:enumItemType
ItemType_QuestTrigger	base/Object.h	/^    ItemType_QuestTrigger = 223,    \/\/¥•∑¢»ŒŒÒµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_QuestTriggerCool	base/Object.h	/^	ItemType_QuestTriggerCool = 227, \/\/¥•∑¢»ŒŒÒµ¿æﬂ,”–¿‰»¥ ±º‰,√ø¥Œºı100ƒÕæ√∂»$/;"	e	enum:enumItemType
ItemType_Reload	base/Object.h	/^    ItemType_Reload = 170,          \/\/ ÃÓ≥‰ŒÔ$/;"	e	enum:enumItemType
ItemType_Renew	base/Object.h	/^    ItemType_Renew = 46,   \/\/46 ¥˙±Ìœ¥µ„µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Repair	base/Object.h	/^    ItemType_Repair = 47, \/\/47¥˙±Ì–ﬁ∏¥±¶ Ø¿‡$/;"	e	enum:enumItemType
ItemType_ResetEvolveTimes	base/Object.h	/^	ItemType_ResetEvolveTimes  = 256,  \/\/\/÷ÿ÷√¡È∆˜Ω¯ªØ¥Œ ˝∫Õ÷µ$/;"	e	enum:enumItemType
ItemType_Resource	base/Object.h	/^    ItemType_Resource = 16, \/\/16¥˙±Ì“ª∞„µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_RongLingFen	base/Object.h	/^	ItemType_RongLingFen       = 258,  \/\/\/»⁄¡È∑€$/;"	e	enum:enumItemType
ItemType_SOULSTONE	base/Object.h	/^    ItemType_SOULSTONE = 37, \/\/37¥˙±ÌªÍ∆« Ø¿‡$/;"	e	enum:enumItemType
ItemType_Scroll	base/Object.h	/^    ItemType_Scroll,    \/\/25¥˙±Ì◊™“∆æÌ÷·¿‡$/;"	e	enum:enumItemType
ItemType_SeaWarItem	base/Object.h	/^    ItemType_SeaWarItem  = 79,  \/\/∫£’Ωµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Shield	base/Object.h	/^    ItemType_Shield =112,			\/\/112¥˙±Ì∂‹≈∆¿‡$/;"	e	enum:enumItemType
ItemType_Shoes	base/Object.h	/^    ItemType_Shoes = 116,			\/\/116¥˙±ÌΩ«…´–¨◊”¿‡$/;"	e	enum:enumItemType
ItemType_Shoulder	base/Object.h	/^    ItemType_Shoulder = 155,				\/\/ ºÁº◊$/;"	e	enum:enumItemType
ItemType_SkillBookBlank	base/Object.h	/^	ItemType_SkillBookBlank = 265,    \/\/ ø’∞◊µƒººƒ‹ È$/;"	e	enum:enumItemType
ItemType_SkillBookNotFull	base/Object.h	/^	ItemType_SkillBookNotFull = 264,  \/\/ Œ¥ÕÍ≥…µƒººƒ‹ È$/;"	e	enum:enumItemType
ItemType_SkillObject	base/Object.h	/^    ItemType_SkillObject = 81,  \/\/ººƒ‹¿‡–Õµƒµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_SkillUp	base/Object.h	/^    ItemType_SkillUp = 43,   \/\/43 ¥˙±Ìººƒ‹…˝º∂µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_SpecialBook	base/Object.h	/^    ItemType_SpecialBook = 57, \/\/57¥˙±ÌÃÿ ‚ ÈºÆ$/;"	e	enum:enumItemType
ItemType_Staff	base/Object.h	/^    ItemType_Staff =108,            \/\/108¥˙±Ì∑® ı’»¿‡Œ‰∆˜$/;"	e	enum:enumItemType
ItemType_StarKeeper	base/Object.h	/^	ItemType_StarKeeper   = 262,  \/\/∑˚Œ∆£®–«–«£©±£¡Ùµ¿æﬂ (±£–« Ø)$/;"	e	enum:enumItemType
ItemType_Stick	base/Object.h	/^    ItemType_Stick =111,            \/\/111¥˙±Ì’ŸªΩπ˜¿‡Œ‰∆˜$/;"	e	enum:enumItemType
ItemType_Store	base/Object.h	/^    ItemType_Store = 45,   \/\/45 ¥˙±Ì≤÷ø‚$/;"	e	enum:enumItemType
ItemType_Stuff	base/Object.h	/^    ItemType_Stuff = 72,		\/\/72¥˙±Ì‘≠¡œ$/;"	e	enum:enumItemType
ItemType_Sword	base/Object.h	/^    ItemType_Sword =105,            \/\/105¥˙±ÌŒ‰ ıΩ£¿‡Œ‰∆˜$/;"	e	enum:enumItemType
ItemType_TEAM	base/Object.h	/^    ItemType_TEAM = 64, \/\/ √∞œ’∂”ŒÈ’ŸºØ¡Ó$/;"	e	enum:enumItemType
ItemType_TONG	base/Object.h	/^    ItemType_TONG = 54,  \/\/ ”∂±¯Õ≈’ŸºØ¡Ó£®∞Ô÷˜¡Ó£©$/;"	e	enum:enumItemType
ItemType_Tactics	base/Object.h	/^    ItemType_Tactics = 208, \/\/ ’Ω ıµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Talon	base/Object.h	/^    ItemType_Talon = 148,					\/\/ »≠»–$/;"	e	enum:enumItemType
ItemType_Tank	base/Object.h	/^    ItemType_Tank = 221, \/\/’Ω≥µ≈∆$/;"	e	enum:enumItemType
ItemType_TankObj	base/Object.h	/^	ItemType_TankObj = 230,		\/\/ ’Ω≥µº”—™µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_TankPark	base/Object.h	/^    ItemType_TankPark = 210,    \/\/ ’Ω≥µ≈‰º˛$/;"	e	enum:enumItemType
ItemType_TankPartPic	base/Object.h	/^    ItemType_TankPartPic = 209, \/\/ ’Ω≥µ≈‰º˛Õº÷Ω$/;"	e	enum:enumItemType
ItemType_TimeEraseMedal	base/Object.h	/^	ItemType_TimeEraseMedal = 242,		\/\/ ±œﬁ–Õ—´’¬(µΩ∆⁄…æ≥˝) $/;"	e	enum:enumItemType
ItemType_TimeInvalidMedal	base/Object.h	/^	ItemType_TimeInvalidMedal = 243,	\/\/ ±œﬁ–Õ—´’¬(µΩ∆⁄ ß»•◊˜”√)$/;"	e	enum:enumItemType
ItemType_Tonic	base/Object.h	/^    ItemType_Tonic, \/\/30±Ì æ◊‘∂Ø≤π“©¿‡µ¿æﬂ.$/;"	e	enum:enumItemType
ItemType_Tools	base/Object.h	/^    ItemType_Tools,     \/\/20¥˙±Ì¿Õ∂Øπ§æﬂ¿‡$/;"	e	enum:enumItemType
ItemType_TransFashion140	base/Object.h	/^    ItemType_TransFashion140 = 123,			\/\/123¥˙±Ì140º∂Õ∏√˜ ±◊∞$/;"	e	enum:enumItemType
ItemType_TreasureMap	base/Object.h	/^    ItemType_TreasureMap = 220, \/\/≤ÿ±¶Õº$/;"	e	enum:enumItemType
ItemType_TwoExp	base/Object.h	/^    ItemType_TwoExp = 74,       \/\/À´±∂æ≠—Èµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Union	base/Object.h	/^    ItemType_Union, \/\/29¥˙±Ì¥¥Ω®∞Ôª·–Ë“™µƒµ¿æﬂ.$/;"	e	enum:enumItemType
ItemType_UnionItems	base/Object.h	/^    ItemType_UnionItems = 129,  \/\/∞Ôª·µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_UnionMoney	base/Object.h	/^	ItemType_UnionMoney         = 240,  \/\/∏¯Õ≈÷±Ω”º”«Æµ¿æﬂ$/;"	e	enum:enumItemType
ItemType_UnionObject	base/Object.h	/^	ItemType_UnionObject     = 255,  \/\/\/≥«∞ÓŒÔ∆∑$/;"	e	enum:enumItemType
ItemType_UnionSeed	base/Object.h	/^	ItemType_UnionSeed = 263,   \/\/ Õ≈÷÷◊”$/;"	e	enum:enumItemType
ItemType_UseSkill	base/Object.h	/^    ItemType_UseSkill = 60, \/\/ ∏Ω¥¯ººƒ‹¿‡µ¿æﬂ$/;"	e	enum:enumItemType
ItemType_Wedding	base/Object.h	/^    ItemType_Wedding = 38, \/\/38¥˙±ÌªÈ¿Ò¿‡$/;"	e	enum:enumItemType
ItemType_Wine	base/Object.h	/^	ItemType_Wine = 236,		\/\/ øæª ±∫»µƒæ∆$/;"	e	enum:enumItemType
ItemType_breastplate	base/Object.h	/^    ItemType_breastplate = 138,				\/\/ ª§–ƒæµ$/;"	e	enum:enumItemType
ItemType_immortalmedicines	base/Object.h	/^	ItemType_immortalmedicines = 77,        \/\/◊¯∆ÔÀ«¡œ¿‡–Õ$/;"	e	enum:enumItemType
ItemType_tCloak	base/Object.h	/^	ItemType_tCloak = 232,		\/\/ Õ≈≈˚∑Á$/;"	e	enum:enumItemType
ItemType_tCoGift	base/Object.h	/^	ItemType_tCoGift = 233,     \/\/ª•∂Ø¿ÒŒÔ$/;"	e	enum:enumItemType
ItemType_tFuMo	base/Object.h	/^	ItemType_tFuMo = 231,		\/\/  ∏Ωƒß”√∆∑$/;"	e	enum:enumItemType
JIANGJUN	tmpcode/commond.h	/^	 JIANGJUN,            \/\/Ω´æ¸  $/;"	e	enum:__anon215
JIAO_DOU_LING_YU	tmpcode/commond.h	/^	JIAO_DOU_LING_YU = 31101,\/\/Ω«∂∑¡Ï”Ú$/;"	e	enum:__anon205
JIEZHAN_AWARD_ICON_INFO	tmpcode/commond.h	/^const BYTE JIEZHAN_AWARD_ICON_INFO = 140;$/;"	v
JIEZHAN_ICON	tmpcode/commond.h	/^const BYTE JIEZHAN_ICON = 131;$/;"	v
JIEZHAN_JISHI_INFO	tmpcode/commond.h	/^const BYTE JIEZHAN_JISHI_INFO = 141;$/;"	v
JIFENGZHISHU_SKILL	tmpcode/commond.h	/^	JIFENGZHISHU_SKILL=2109,\/\/º≤∑Á÷ÆÀŸ$/;"	e	enum:__anon205
JIN_JI_QIU_ZHU	tmpcode/commond.h	/^	JIN_JI_QIU_ZHU = 4005, \/\/ΩÙº±«Û÷˙	$/;"	e	enum:__anon205
JI_JIU	tmpcode/commond.h	/^	JI_JIU	= 2103,	\/\/º±æ»$/;"	e	enum:__anon205
JOB_FIGHTER	base/Command.h	/^    JOB_FIGHTER = 1,	\/\/ÊàòÂ£´$/;"	e	enum:__anon64
JOB_MASTER	base/Command.h	/^    JOB_MASTER	= 3,	    \/\/Ê≥ïÂ∏à$/;"	e	enum:__anon64
JOB_NULL	base/Command.h	/^    JOB_NULL	    = 0,	\/\/Êó†‰∏ö$/;"	e	enum:__anon64
JOB_PASTOR	base/Command.h	/^    JOB_PASTOR    = 4,	\/\/ÁâßÂ∏à$/;"	e	enum:__anon64
JOB_THIEVES	base/Command.h	/^    JOB_THIEVES	= 2,	    \/\/ÁõóË¥º$/;"	e	enum:__anon64
JOINMODE_TEAMMEMBER_USERCMD_PARA	tmpcode/commond.h	8300;"	d
JOINQUICKLY_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE JOINQUICKLY_QUESTROOM_PARA = 23;$/;"	v
JOIN_CHALLENGE_PARA	tmpcode/commond.h	21975;"	d
JOIN_CHANNEL_USERCMD_PARAMETER	base/Command.h	3570;"	d
JOIN_CHANNEL_USERCMD_PARAMETER	tmpcode/commond.h	12455;"	d
JOIN_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE JOIN_QUESTROOM_PARA = 11;$/;"	v
JOIN_SEPT_NEED_LEVEL	base/Sept.h	/^const DWORD JOIN_SEPT_NEED_LEVEL    = 1;  \/\/ º”»Îº“◊Â–Ë“™µƒ»ÀŒÔµ»º∂$/;"	v
JPEG_PASSPORT_USERCMD_PARA	base/Command.h	/^const BYTE JPEG_PASSPORT_USERCMD_PARA = 11;$/;"	v
JUMP_MOVE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE JUMP_MOVE_USERCMD_PARA = 38;$/;"	v
JUNXIAN_SCORE_LUORI_PARA	tmpcode/commond.h	/^const BYTE JUNXIAN_SCORE_LUORI_PARA=8;$/;"	v
JobType	base/RecordCommand.h	/^	  WORD	JobType;			\/\/[shx Add ËÅå‰∏ö]$/;"	m	struct:Cmd::Record::t_CreateChar_GateRecord
JobVector	base/zDatabase.h	/^    typedef std::vector<DWORD> JobVector;$/;"	t	struct:zObjectB
KEEP	base/UserCommand.h	/^      KEEP = 0,     \/\/‰øùÁïô$/;"	e	enum:Cmd::UserServer::__anon152
KEEPKILLCOUNT_HEROISLAND_PARA	tmpcode/commond.h	/^const BYTE KEEPKILLCOUNT_HEROISLAND_PARA = 4;$/;"	v
KEYUSE_ACCELCMD_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE KEYUSE_ACCELCMD_PROPERTY_USERCMD_PARA = 148;$/;"	v
KEY_B	tmpcode/commond.h	/^	KEY_B,          \/\/»ÀŒÔ∞¸π¸ΩÁ√Ê$/;"	e	enum:__anon226
KEY_C	tmpcode/commond.h	/^	KEY_C,          \/\/»ÀŒÔ Ù–‘ΩÁ√Ê      $/;"	e	enum:__anon226
KEY_CTRL_Q	tmpcode/commond.h	/^	KEY_CTRL_Q,      \/\/…˙ªÓººƒ‹$/;"	e	enum:__anon226
KEY_DEFAULT	tmpcode/commond.h	/^	KEY_DEFAULT,$/;"	e	enum:__anon226
KEY_L	tmpcode/commond.h	/^	KEY_L = 1,      \/\/»ŒŒÒ¡–±ÌΩÁ√Ê$/;"	e	enum:__anon226
KEY_M	tmpcode/commond.h	/^	KEY_M,          \/\/–°µÿÕº$/;"	e	enum:__anon226
KEY_N	tmpcode/commond.h	/^	KEY_N,          \/\/◊¯∆Ô $/;"	e	enum:__anon226
KEY_V	tmpcode/commond.h	/^	KEY_V,          \/\/»ÀŒÔººƒ‹ΩÁ√Ê$/;"	e	enum:__anon226
KEY_Y	tmpcode/commond.h	/^	KEY_Y,          \/\/¥ÛµÿÕº$/;"	e	enum:__anon226
KICKMEM_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE KICKMEM_QUESTROOM_PARA = 20;$/;"	v
KILL_BOSS_USERCMD_PARA	base/Command.h	3805;"	d
KILL_FOREIGNER_USERCMD_PARA	base/Command.h	3777;"	d
KILL_FOREIGNER_USERCMD_PARA	tmpcode/commond.h	19795;"	d
KING	tmpcode/commond.h	/^	 KING = 1,            \/\/ΩÁÕı “≤æÕ «∫Ï Ø≥«≥«÷˜ $/;"	e	enum:__anon215
KING_CALL_COUNTRY_PARA	tmpcode/commond.h	7945;"	d
KING_CITY_ID	tmpcode/commond.h	/^const DWORD KING_CITY_ID = 1029;		\/\/∫Ï Ø≥«Õı≥«$/;"	v
KING_HORSE_ID	ScenesServer/SceneNpc.h	/^const DWORD KING_HORSE_ID = 3204;\/\/ÂõΩÁéãÁöÑÈ©¨ID$/;"	v
KING_PUNISH_COUNTRY_PARA	base/Command.h	5286;"	d
KING_PUNISH_COUNTRY_PARA	tmpcode/commond.h	/^const BYTE KING_PUNISH_COUNTRY_PARA  = 34;$/;"	v
KOK_CHAT_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE KOK_CHAT_USERCMD_PARAMETER = 2;$/;"	v
KUANGBAOSWITCH_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE KUANGBAOSWITCH_MAGIC_USERCMD_PARA = 42;$/;"	v
KUANG_BAO	tmpcode/commond.h	/^	KUANG_BAO = 1102,\/\/øÒ±©$/;"	e	enum:__anon205
KV	ScenesServer/QuestCondition.h	/^  typedef std::map<std::string,std::string> KV;$/;"	t	class:ScenesParser
KeyHole	tmpcode/commond.h	/^struct KeyHole$/;"	s
Kill	ScenesServer/QuestEvent.h	/^  class Kill$/;"	c	namespace:Trigger
KillByLevel	ScenesServer/QuestEvent.h	/^  class KillByLevel$/;"	c	namespace:Trigger
KillBySelf	ScenesServer/QuestEvent.h	/^  class KillBySelf$/;"	c	namespace:Trigger
KillData	tmpcode/commond.h	/^		KillData()$/;"	f	struct:stRetKillNumsListZhenxuanUserCmd::KillData
KillData	tmpcode/commond.h	/^	struct KillData{$/;"	s	struct:stRetKillNumsListZhenxuanUserCmd
LACK	tmpcode/commond.h	/^	LACK  = 3,   \/\/√ª”–  $/;"	e	enum:MERCH_STATE
LANDMASSJUMP_MOVE_USERCMD_PARA	base/Command.h	/^const BYTE LANDMASSJUMP_MOVE_USERCMD_PARA = 32;$/;"	v
LAST_LOGIN_INFO_SELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE LAST_LOGIN_INFO_SELECT_USERCMD_PARA = 11;$/;"	v
LATERSELECT_GIFTBOX_USERCMD	tmpcode/commond.h	21207;"	d
LEARN_FAKESKILL_LINGQI_PARA	tmpcode/commond.h	24804;"	d
LEAVEONLINE_USERCMD	base/CmdType.h	/^const BYTE LEAVEONLINE_USERCMD    = 15;$/;"	v
LEAVEROOM_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE LEAVEROOM_QUESTROOM_PARA = 14;$/;"	v
LEAVE_CHANNEL_USERCMD_PARAMETER	base/Command.h	3582;"	d
LEAVE_CHANNEL_USERCMD_PARAMETER	tmpcode/commond.h	12523;"	d
LEAVE_DT	tmpcode/commond.h	/^const BYTE LEAVE_DT = 6;$/;"	v
LEAVE_DTS_PARA	tmpcode/commond.h	/^ const BYTE LEAVE_DTS_PARA = 5;$/;"	v
LEAVE_HEROISLAND_PARA	tmpcode/commond.h	/^const BYTE LEAVE_HEROISLAND_PARA = 3;$/;"	v
LEAVE_MSG_UNION_CMD	tmpcode/commond.h	/^const BYTE LEAVE_MSG_UNION_CMD = 215;$/;"	v
LEAVE_PRISON_PARA	base/Command.h	/^const BYTE LEAVE_PRISON_PARA = 4;$/;"	v
LEAVE_QUESTMAP_PARA	tmpcode/commond.h	/^const BYTE LEAVE_QUESTMAP_PARA = 25;$/;"	v
LEAVE_SEPT_BATTLE_PARA	tmpcode/commond.h	/^const BYTE LEAVE_SEPT_BATTLE_PARA				= 10;$/;"	v
LEAVE_SEPT_POPO_PARA	tmpcode/commond.h	26544;"	d
LEFTTIME_MAXLEVEL_LIMIT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE LEFTTIME_MAXLEVEL_LIMIT_USERCMD_PARA = 3;$/;"	v
LEFTTIME_PRISON_PARA	tmpcode/commond.h	/^const BYTE LEFTTIME_PRISON_PARA =5;$/;"	v
LEFT_PACK	ScenesServer/zObject.h	/^      LEFT_PACK = 2,$/;"	e	enum:Packages::__anon178
LEFT_PACK	base/Object.h	/^	LEFT_PACK = 2,  \/\/◊∞±∏∞¸π¸µƒ◊”∞¸π¸$/;"	e	enum:__anon54
LETOUT_CARTOON_PARA	base/Command.h	8207;"	d
LET_OFF_TANK_PARA	tmpcode/commond.h	/^const BYTE LET_OFF_TANK_PARA = 12;$/;"	v
LEVELALARM	base/zLogger.h	/^	    static const log4cxx::LevelPtr LEVELALARM;$/;"	m	class:zLogger::zLevel
LEVELDEGREE_DATA_USERCMD_PARA	base/Command.h	/^const BYTE LEVELDEGREE_DATA_USERCMD_PARA = 30;$/;"	v
LEVELDEGREE_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE LEVELDEGREE_DATA_USERCMD_PARA = 30;$/;"	v
LEVELFORM_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE LEVELFORM_QUESTROOM_PARA = 10;$/;"	v
LEVELGBUG	base/zLogger.h	/^	    static const log4cxx::LevelPtr LEVELGBUG;$/;"	m	class:zLogger::zLevel
LEVELIFFY	base/zLogger.h	/^	    static const log4cxx::LevelPtr LEVELIFFY;$/;"	m	class:zLogger::zLevel
LEVELTRACE	base/zLogger.h	/^	    static const log4cxx::LevelPtr LEVELTRACE;$/;"	m	class:zLogger::zLevel
LEVELUP_ATTACKDODGE_N	base/CharBase.h	28;"	d
LEVELUP_ATTACKRATING_N	base/CharBase.h	27;"	d
LEVELUP_ATTACKSPEED_N	base/CharBase.h	31;"	d
LEVELUP_BANG_N	base/CharBase.h	38;"	d
LEVELUP_HP_N	base/CharBase.h	19;"	d
LEVELUP_LINGQI_USERCMD	tmpcode/commond.h	24850;"	d
LEVELUP_MDAMAGE_N	base/CharBase.h	34;"	d
LEVELUP_MDEFENCE_N	base/CharBase.h	36;"	d
LEVELUP_MOVESPEED_N	base/CharBase.h	30;"	d
LEVELUP_MP_N	base/CharBase.h	20;"	d
LEVELUP_NEEDTHING_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE LEVELUP_NEEDTHING_HOUSE_USER_CMD = 58;$/;"	v
LEVELUP_PDAMAGE_N	base/CharBase.h	33;"	d
LEVELUP_PDEFENCE_N	base/CharBase.h	35;"	d
LEVELUP_RESUMEHP_N	base/CharBase.h	23;"	d
LEVELUP_RESUMEMP_N	base/CharBase.h	24;"	d
LEVELUP_RESUMESP_N	base/CharBase.h	25;"	d
LEVELUP_SP_N	base/CharBase.h	21;"	d
LEVELUP_USERCMD_PARA	base/Command.h	/^const BYTE LEVELUP_USERCMD_PARA  = 10;$/;"	v
LEVELUP_USERCMD_PARA	tmpcode/commond.h	/^const BYTE LEVELUP_USERCMD_PARA = 10;$/;"	v
LEVELUP_WRITEBACK	base/RecordCommand.h	/^      LEVELUP_WRITEBACK,\/\/ÂçáÁ∫ß$/;"	e	enum:Cmd::Record::enumWriteBackTest_Type
LEVEL_DECAYHOUSE_PARA	tmpcode/commond.h	/^const BYTE LEVEL_DECAYHOUSE_PARA = 10;$/;"	v
LEVEL_UP_LIVINGROOM_PARA	tmpcode/commond.h	/^const BYTE LEVEL_UP_LIVINGROOM_PARA				= 61;$/;"	v
LEVEL_UP_ROOM_PARA	tmpcode/commond.h	/^const BYTE LEVEL_UP_ROOM_PARA					= 62;$/;"	v
LEVEL_UP_YARD_PARA	tmpcode/commond.h	/^const BYTE LEVEL_UP_YARD_PARA					= 63;$/;"	v
LIB_ENCDEC	base/EncDec/Makefile	/^LIB_ENCDEC = ..\/libencdec.a$/;"	m
LIB_ZEBRA	BillServer/Makefile	/^LIB_ZEBRA = ..\/base\/libzebra.a$/;"	m
LIB_ZEBRA	FLServer/Makefile	/^LIB_ZEBRA = ..\/base\/libzebra.a$/;"	m
LIB_ZEBRA	GatewayServer/Makefile	/^LIB_ZEBRA = ..\/base\/libzebra.a$/;"	m
LIB_ZEBRA	RecordServer/Makefile	/^LIB_ZEBRA = ..\/base\/libzebra.a$/;"	m
LIB_ZEBRA	Robot/Makefile	/^LIB_ZEBRA = ..\/base\/libzebra.a$/;"	m
LIB_ZEBRA	ScenesServer/Makefile	/^LIB_ZEBRA = ..\/base\/libzebra.a$/;"	m
LIB_ZEBRA	SessionServer/Makefile	/^LIB_ZEBRA = ..\/base\/libzebra.a$/;"	m
LIB_ZEBRA	SuperServer/Makefile	/^LIB_ZEBRA = ..\/base\/libzebra.a$/;"	m
LIB_ZEBRA	base/Makefile	/^LIB_ZEBRA = libzebra.a$/;"	m
LIB_ZEBRA	roleChangeServer/Makefile	/^LIB_ZEBRA = ..\/base\/libzebra.a$/;"	m
LIB_ZEBRA	roleRegServer/Makefile	/^LIB_ZEBRA = ..\/base\/libzebra.a$/;"	m
LIB_ZEBRA	tools/Makefile	/^LIB_ZEBRA = ..\/base\/libzebra.a$/;"	m
LIFEGUARD_OF_KING	tmpcode/commond.h	/^	LIFEGUARD_OF_KING = 0,$/;"	e	enum:enumLifeguardType
LIFEGUARD_OF_UNIONMASTER	tmpcode/commond.h	/^	LIFEGUARD_OF_UNIONMASTER = 1,$/;"	e	enum:enumLifeguardType
LINGQI_DECAYING	tmpcode/commond.h	/^		LINGQI_DECAYING                         = 0x00000080,\/\/’˝‘⁄Õ…±‰÷–$/;"	e	enum:LingQiFlags
LINGQI_DECAY_USERCMD	tmpcode/commond.h	/^const BYTE LINGQI_DECAY_USERCMD = 154;$/;"	v
LINGQI_FLAG_BLUE	tmpcode/commond.h	/^        LINGQI_FLAG_BLUE                        = 0x00000008,\/\/¿∂…´$/;"	e	enum:LingQiFlags
LINGQI_FLAG_FIGHT	tmpcode/commond.h	/^        LINGQI_FLAG_FIGHT                       = 0x00000001,\/\/≤Œ’Ω$/;"	e	enum:LingQiFlags
LINGQI_FLAG_GREEN	tmpcode/commond.h	/^        LINGQI_FLAG_GREEN                       = 0x00000020,\/\/¬Ã…´$/;"	e	enum:LingQiFlags
LINGQI_FLAG_HASMERGED	tmpcode/commond.h	/^        LINGQI_FLAG_HASMERGED                   = 0x00000004,\/\/“—»⁄∫œ$/;"	e	enum:LingQiFlags
LINGQI_FLAG_ISTRANS	tmpcode/commond.h	/^		LINGQI_FLAG_ISTRANS						= 0x00000100,\/\/ «∑Ò±‰“Ïµƒ≈–∂œ$/;"	e	enum:LingQiFlags
LINGQI_FLAG_PURPLE	tmpcode/commond.h	/^        LINGQI_FLAG_PURPLE                      = 0x00000040,\/\/◊œ…´$/;"	e	enum:LingQiFlags
LINGQI_FLAG_YELLOW	tmpcode/commond.h	/^        LINGQI_FLAG_YELLOW                      = 0x00000010,\/\/ª∆…´$/;"	e	enum:LingQiFlags
LINGQI_SKILLS_PARA	tmpcode/commond.h	24734;"	d
LINGQI_USERCMD	tmpcode/commond.h	/^const BYTE LINGQI_USERCMD = 129;$/;"	v
LIST	ScenesServer/QuestMaker.h	/^  typedef std::map<I,C*> LIST;$/;"	t	class:ProductFactory
LISTQUEST_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	27495;"	d
LIST_COUNTRY_INFO	base/SceneCommand.h	/^      LIST_COUNTRY_INFO$/;"	e	enum:Cmd::Scene::ChangeCountryOper
LIST_GIFT_PARA	base/Command.h	/^const BYTE LIST_GIFT_PARA = 2;$/;"	v
LIST_GIFT_PARA	tmpcode/commond.h	/^const BYTE LIST_GIFT_PARA = 2;$/;"	v
LIST_LINGQI_PARA	tmpcode/commond.h	20629;"	d
LIST_SEPT_PARA	base/Command.h	/^const BYTE LIST_SEPT_PARA = 20;$/;"	v
LIST_UNION_PARA	base/Command.h	/^const BYTE LIST_UNION_PARA = 24;$/;"	v
LIUXINGHUOYU_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE LIUXINGHUOYU_MAGIC_USERCMD_PARA =43;$/;"	v
LIU_XING_YU	tmpcode/commond.h	/^	LIU_XING_YU = 30008,\/\/¡˜–«”Í$/;"	e	enum:__anon205
LIU_XING_YU_MAX	tmpcode/commond.h	/^	LIU_XING_YU_MAX = 30510,\/\/¡˜–«”Í¡Ÿ ±ººƒ‹ -¡È∆˜ººƒ‹$/;"	e	enum:__anon205
LIU_XING_YU_MIN	tmpcode/commond.h	/^	LIU_XING_YU_MIN = 30501,	\/\/¡˜–«”Í¡Ÿ ±ººƒ‹ -¡È∆˜ººƒ‹$/;"	e	enum:__anon205
LM_PACK	ScenesServer/zObject.h	/^      LM_PACK = 32,$/;"	e	enum:Packages::__anon178
LM_PACK	base/Object.h	/^	LM_PACK = 32, $/;"	e	enum:__anon54
LOADMAPOK_DATA_USERCMD_PARA	base/Command.h	/^const BYTE LOADMAPOK_DATA_USERCMD_PARA = 29;$/;"	v
LOAD_DATA	base/EncDec/EncDec.h	126;"	d
LOAD_DATA	base/EncDec/mydes.h	27;"	d
LOAD_DATA_tmp	base/EncDec/EncDec.h	129;"	d
LOAD_DATA_tmp	base/EncDec/mydes.h	30;"	d
LOCK_BET_CHALLENGE_USERCMD_PARAMETER	tmpcode/commond.h	22126;"	d
LOCK_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE LOCK_TRADE_USERCMD_PARAMETER = 70;$/;"	v
LOGINSERVER	base/zMisc.h	/^	LOGINSERVER     =  10, \/** ÁôªÈôÜÊúçÂä°Âô® *\/$/;"	e	enum:ServerType
LOGIN_FAIL	base/Command.h	/^    LOGIN_FAIL = 0,$/;"	e	enum:loginLoginServer_retVal
LOGIN_ID_IN_USE	base/Command.h	/^    LOGIN_ID_IN_USE = 2$/;"	e	enum:loginLoginServer_retVal
LOGIN_PING_PARA	base/Command.h	/^const BYTE LOGIN_PING_PARA = 3;$/;"	v
LOGIN_RETURN_ACCOUNTEXIST	base/Command.h	/^	LOGIN_RETURN_ACCOUNTEXIST,              \/\/\/ ’ ∫≈“—æ≠¥Ê‘⁄$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_ACCOUNTEXIST	tmpcode/commond.h	/^	LOGIN_RETURN_ACCOUNTEXIST,              \/\/\/ ’ ∫≈“—æ≠¥Ê‘⁄$/;"	e	enum:__anon210
LOGIN_RETURN_ALREADY_TOZONE	base/Command.h	/^	LOGIN_RETURN_ALREADY_TOZONE=35,       \/\/“—µ«¬º’Ω«¯,≤ªƒ‹‘⁄±æ«¯‘Ÿµ«¬Ω$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_BUSY	base/Command.h	/^	LOGIN_RETURN_BUSY=32,						\/\/∑˛ŒÒ∆˜∑±√¶$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_BUSY	tmpcode/commond.h	/^	LOGIN_RETURN_BUSY=32,						\/\/∑˛ŒÒ∆˜∑±√¶$/;"	e	enum:__anon210
LOGIN_RETURN_CHANGEPASSWORD	base/Command.h	/^	LOGIN_RETURN_CHANGEPASSWORD,            \/\/\/ –ﬁ∏ƒ√‹¬Î≥…π¶$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_CHANGEPASSWORD	tmpcode/commond.h	/^	LOGIN_RETURN_CHANGEPASSWORD,            \/\/\/ –ﬁ∏ƒ√‹¬Î≥…π¶$/;"	e	enum:__anon210
LOGIN_RETURN_CHANGE_LOGIN	base/Command.h	/^	LOGIN_RETURN_CHANGE_LOGIN,              \/\/\/ øÁ«¯µ«¬Ω—È÷§ ß∞‹$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_CHANGE_LOGIN	tmpcode/commond.h	/^	LOGIN_RETURN_CHANGE_LOGIN,              \/\/\/ øÁ«¯µ«¬Ω—È÷§ ß∞‹$/;"	e	enum:__anon210
LOGIN_RETURN_CHARNAMEREPEAT	base/Command.h	/^	LOGIN_RETURN_CHARNAMEREPEAT,            \/\/\/ Ω«…´√˚≥∆÷ÿ∏¥$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_CHARNAMEREPEAT	tmpcode/commond.h	/^	LOGIN_RETURN_CHARNAMEREPEAT,            \/\/\/ Ω«…´√˚≥∆÷ÿ∏¥$/;"	e	enum:__anon210
LOGIN_RETURN_DB	base/Command.h	/^	LOGIN_RETURN_DB,                        \/\/\/  ˝æ›ø‚≥ˆ¥Ì$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_DB	tmpcode/commond.h	/^	LOGIN_RETURN_DB,                        \/\/\/  ˝æ›ø‚≥ˆ¥Ì$/;"	e	enum:__anon210
LOGIN_RETURN_FORBID	base/Command.h	/^	LOGIN_RETURN_FORBID     = 33,           \/\/’ ∫≈±ª∑‚Õ£$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_FORBID	tmpcode/commond.h	/^	LOGIN_RETURN_FORBID     = 33,           \/\/’ ∫≈±ª∑‚Õ£$/;"	e	enum:__anon210
LOGIN_RETURN_GATEWAYNOTAVAILABLE	base/Command.h	/^	LOGIN_RETURN_GATEWAYNOTAVAILABLE,       \/\/\/ Õ¯πÿ∑˛ŒÒ∆˜Œ¥ø™$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_GATEWAYNOTAVAILABLE	tmpcode/commond.h	/^	LOGIN_RETURN_GATEWAYNOTAVAILABLE,       \/\/\/ Õ¯πÿ∑˛ŒÒ∆˜Œ¥ø™$/;"	e	enum:__anon210
LOGIN_RETURN_IDINCLOSE	base/Command.h	/^	LOGIN_RETURN_IDINCLOSE,                 \/\/\/ ID±ª∑‚$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_IDINCLOSE	tmpcode/commond.h	/^	LOGIN_RETURN_IDINCLOSE,                 \/\/\/ ID±ª∑‚$/;"	e	enum:__anon210
LOGIN_RETURN_IDINUSE	base/Command.h	/^	LOGIN_RETURN_IDINUSE,                   \/\/\/ ID’˝‘⁄±ª π”√÷–$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_IDINUSE	tmpcode/commond.h	/^	LOGIN_RETURN_IDINUSE,                   \/\/\/ ID’˝‘⁄±ª π”√÷–$/;"	e	enum:__anon210
LOGIN_RETURN_IMG_LOCK	base/Command.h	/^	LOGIN_RETURN_IMG_LOCK,		           \/\/Õº–Œ—È÷§¡¨–¯¥ÌŒÛ,Ω«…´±ªÀ¯∂®$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_IMG_LOCK	tmpcode/commond.h	/^	LOGIN_RETURN_IMG_LOCK,		           \/\/Õº–Œ—È÷§¡¨–¯¥ÌŒÛ,Ω«…´±ªÀ¯∂®$/;"	e	enum:__anon210
LOGIN_RETURN_JPEG_PASSPORT	base/Command.h	/^	LOGIN_RETURN_JPEG_PASSPORT,             \/\/\/ Õº–Œ—È÷§¬Î ‰»Î¥ÌŒÛ$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_JPEG_PASSPORT	tmpcode/commond.h	/^	LOGIN_RETURN_JPEG_PASSPORT,             \/\/\/ Õº–Œ—È÷§¬Î ‰»Î¥ÌŒÛ$/;"	e	enum:__anon210
LOGIN_RETURN_LOCK	base/Command.h	/^	LOGIN_RETURN_LOCK,						\/\/\/ ’ ∫≈±ªÀ¯∂®$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_LOCK	tmpcode/commond.h	/^	LOGIN_RETURN_LOCK,						\/\/\/ ’ ∫≈±ªÀ¯∂®$/;"	e	enum:__anon210
LOGIN_RETURN_MATRIX_DOWN	base/Command.h	/^	LOGIN_RETURN_MATRIX_DOWN,               \/\/\/ ”Îæÿ’Ûø®—È÷§∑˛ŒÒ∆˜ ß»•¡¨Ω”,Œﬁ∑®Ω¯––æÿ’Ûø®—È÷§$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_MATRIX_DOWN	tmpcode/commond.h	/^	LOGIN_RETURN_MATRIX_DOWN,               \/\/\/ ”Îæÿ’Ûø®—È÷§∑˛ŒÒ∆˜ ß»•¡¨Ω”,Œﬁ∑®Ω¯––æÿ’Ûø®—È÷§$/;"	e	enum:__anon210
LOGIN_RETURN_MATRIX_ERROR	base/Command.h	/^	LOGIN_RETURN_MATRIX_ERROR,              \/\/\/ µ«¬ºæÿ’Ûø®√‹¬Î¥ÌŒÛ$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_MATRIX_ERROR	tmpcode/commond.h	/^	LOGIN_RETURN_MATRIX_ERROR,              \/\/\/ µ«¬ºæÿ’Ûø®√‹¬Î¥ÌŒÛ$/;"	e	enum:__anon210
LOGIN_RETURN_MATRIX_LOCK	base/Command.h	/^	LOGIN_RETURN_MATRIX_LOCK,				\/\/\/ Ã· æÕÊº“æÿ’Ûø®±ªÀ¯£®¡˘∏ˆ–° ±∫ÛΩ‚À¯£©$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_MATRIX_LOCK	tmpcode/commond.h	/^	LOGIN_RETURN_MATRIX_LOCK,				\/\/\/ Ã· æÕÊº“æÿ’Ûø®±ªÀ¯£®¡˘∏ˆ–° ±∫ÛΩ‚À¯£©$/;"	e	enum:__anon210
LOGIN_RETURN_MATRIX_NEED	base/Command.h	/^	LOGIN_RETURN_MATRIX_NEED,               \/\/\/ Ã· æÕÊº“–Ë“™ ‰»Îæÿ’Ûø®√‹¬Î$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_MATRIX_NEED	tmpcode/commond.h	/^	LOGIN_RETURN_MATRIX_NEED,               \/\/\/ Ã· æÕÊº“–Ë“™ ‰»Îæÿ’Ûø®√‹¬Î$/;"	e	enum:__anon210
LOGIN_RETURN_MAXCHARBASELIMIT	base/Command.h	/^	LOGIN_RETURN_MAXCHARBASELIMIT=34,       \/\/∏√π˙º“»À ˝“—¬˙£¨«Î—°‘Ò∆‰À˚π˙º“$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_MAXCHARBASELIMIT	tmpcode/commond.h	/^	LOGIN_RETURN_MAXCHARBASELIMIT=34,       \/\/∏√π˙º“»À ˝“—¬˙£¨«Î—°‘Ò∆‰À˚π˙º“$/;"	e	enum:__anon210
LOGIN_RETURN_NEWUSER_OLDZONE	base/Command.h	/^	LOGIN_RETURN_NEWUSER_OLDZONE,           \/\/\/ –¬’À∫≈≤ª‘ –Ìµ«»Îæ…µƒ”Œœ∑«¯ $/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_NEWUSER_OLDZONE	tmpcode/commond.h	/^	LOGIN_RETURN_NEWUSER_OLDZONE,           \/\/\/ –¬’À∫≈≤ª‘ –Ìµ«»Îæ…µƒ”Œœ∑«¯ $/;"	e	enum:__anon210
LOGIN_RETURN_OLDUSER_NEWZONE	base/Command.h	/^	LOGIN_RETURN_OLDUSER_NEWZONE,				\/\/æ…’ ∫≈≤ª‘ –Ìµ«¬Ω–¬«¯$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_OLDUSER_NEWZONE	tmpcode/commond.h	/^	LOGIN_RETURN_OLDUSER_NEWZONE,				\/\/æ…’ ∫≈≤ª‘ –Ìµ«¬Ω–¬«¯$/;"	e	enum:__anon210
LOGIN_RETURN_PASSPOD_DOWN	base/Command.h	/^	LOGIN_RETURN_PASSPOD_DOWN=31,			\/\/”Î√‹±£∑˛ŒÒ∆˜ ß»•¡¨Ω”$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_PASSPOD_DOWN	tmpcode/commond.h	/^	LOGIN_RETURN_PASSPOD_DOWN=31,			\/\/”Î√‹±£∑˛ŒÒ∆˜ ß»•¡¨Ω”$/;"	e	enum:__anon210
LOGIN_RETURN_PASSPOD_PASSWORDERROR	base/Command.h	/^	LOGIN_RETURN_PASSPOD_PASSWORDERROR=30,	\/\/\/√‹±£√‹¬Î¥ÌŒÛ$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_PASSPOD_PASSWORDERROR	tmpcode/commond.h	/^	LOGIN_RETURN_PASSPOD_PASSWORDERROR=30,	\/\/\/√‹±£√‹¬Î¥ÌŒÛ$/;"	e	enum:__anon210
LOGIN_RETURN_PASSWORDERROR	base/Command.h	/^	LOGIN_RETURN_PASSWORDERROR,             \/\/\/ ’ ∫≈√‹¬Î¥ÌŒÛ$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_PASSWORDERROR	tmpcode/commond.h	/^	LOGIN_RETURN_PASSWORDERROR,             \/\/\/ ’ ∫≈√‹¬Î¥ÌŒÛ$/;"	e	enum:__anon210
LOGIN_RETURN_PAYFAILED	base/Command.h	/^	LOGIN_RETURN_PAYFAILED,                 \/\/\/ º∆∑— ß∞‹$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_PAYFAILED	tmpcode/commond.h	/^	LOGIN_RETURN_PAYFAILED,                 \/\/\/ º∆∑— ß∞‹$/;"	e	enum:__anon210
LOGIN_RETURN_TIMEOUT	base/Command.h	/^	LOGIN_RETURN_TIMEOUT,                   \/\/\/ ¡¨Ω”≥¨ ±$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_TIMEOUT	tmpcode/commond.h	/^	LOGIN_RETURN_TIMEOUT,                   \/\/\/ ¡¨Ω”≥¨ ±$/;"	e	enum:__anon210
LOGIN_RETURN_UNKNOWN	base/Command.h	/^	LOGIN_RETURN_UNKNOWN,                   \/\/\/ Œ¥÷™¥ÌŒÛ$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_UNKNOWN	tmpcode/commond.h	/^	LOGIN_RETURN_UNKNOWN,                   \/\/\/ Œ¥÷™¥ÌŒÛ$/;"	e	enum:__anon210
LOGIN_RETURN_USERDATANOEXIST	base/Command.h	/^	LOGIN_RETURN_USERDATANOEXIST,           \/\/\/ ”√ªßµµ∞∏≤ª¥Ê‘⁄$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_USERDATANOEXIST	tmpcode/commond.h	/^	LOGIN_RETURN_USERDATANOEXIST,           \/\/\/ ”√ªßµµ∞∏≤ª¥Ê‘⁄$/;"	e	enum:__anon210
LOGIN_RETURN_USERMAX	base/Command.h	/^	LOGIN_RETURN_USERMAX,                   \/\/\/ ”√ªß¬˙$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_USERMAX	tmpcode/commond.h	/^	LOGIN_RETURN_USERMAX,                   \/\/\/ ”√ªß¬˙$/;"	e	enum:__anon210
LOGIN_RETURN_USERNAMEREPEAT	base/Command.h	/^	LOGIN_RETURN_USERNAMEREPEAT,            \/\/\/ ”√ªß√˚÷ÿ∏¥$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_USERNAMEREPEAT	tmpcode/commond.h	/^	LOGIN_RETURN_USERNAMEREPEAT,            \/\/\/ ”√ªß√˚÷ÿ∏¥$/;"	e	enum:__anon210
LOGIN_RETURN_USER_TOZONE	base/Command.h	/^	LOGIN_RETURN_USER_TOZONE,               \/\/\/ Ω«…´“—µ«¬º’Ω«¯,≤ª‘ –Ì¥¥Ω®Ω«…´$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_USER_TOZONE	tmpcode/commond.h	/^	LOGIN_RETURN_USER_TOZONE,               \/\/\/ Ω«…´“—µ«¬º’Ω«¯,≤ª‘ –Ì¥¥Ω®Ω«…´$/;"	e	enum:__anon210
LOGIN_RETURN_UUID	base/Command.h	/^	LOGIN_RETURN_UUID,                      \/\/\/ UUIDµ«¬Ω∑Ω Ω√ª”– µœ÷$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_UUID	tmpcode/commond.h	/^	LOGIN_RETURN_UUID,                      \/\/\/ UUIDµ«¬Ω∑Ω Ω√ª”– µœ÷$/;"	e	enum:__anon210
LOGIN_RETURN_UUID_ERROR	base/Command.h	/^	LOGIN_RETURN_UUID_ERROR,                \/\/\/ µ«¬ºUUID¥ÌŒÛ$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_UUID_ERROR	tmpcode/commond.h	/^	LOGIN_RETURN_UUID_ERROR,                \/\/\/ µ«¬ºUUID¥ÌŒÛ$/;"	e	enum:__anon210
LOGIN_RETURN_VERSIONERROR	base/Command.h	/^	LOGIN_RETURN_VERSIONERROR,              \/\/\/ ∞Ê±æ¥ÌŒÛ$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_VERSIONERROR	tmpcode/commond.h	/^	LOGIN_RETURN_VERSIONERROR,              \/\/\/ ∞Ê±æ¥ÌŒÛ$/;"	e	enum:__anon210
LOGIN_RETURN_WAITACTIVE	base/Command.h	/^	LOGIN_RETURN_WAITACTIVE,                \/\/\/ ’ ∫≈¥˝º§ªÓ$/;"	e	enum:Cmd::__anon65
LOGIN_RETURN_WAITACTIVE	tmpcode/commond.h	/^	LOGIN_RETURN_WAITACTIVE,                \/\/\/ ’ ∫≈¥˝º§ªÓ$/;"	e	enum:__anon210
LOGIN_SELECT_SUCCESS_USERCMD_PARA	base/Command.h	/^const BYTE LOGIN_SELECT_SUCCESS_USERCMD_PARA = 14;$/;"	v
LOGIN_SELECT_SUCCESS_USERCMD_PARA	tmpcode/commond.h	/^const BYTE LOGIN_SELECT_SUCCESS_USERCMD_PARA = 14;$/;"	v
LOGIN_SELECT_USERCMD_PARA	base/Command.h	/^const BYTE LOGIN_SELECT_USERCMD_PARA = 3;$/;"	v
LOGIN_SELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE LOGIN_SELECT_USERCMD_PARA = 3;$/;"	v
LOGIN_SUCCESS	base/Command.h	/^    LOGIN_SUCCESS = 1,$/;"	e	enum:loginLoginServer_retVal
LOGOFF_BUSINESS_TASK_USERCMD	tmpcode/commond.h	/^const BYTE LOGOFF_BUSINESS_TASK_USERCMD = 2;$/;"	v
LOGON_RETURN_ACCOUNTSUCCESS	base/Command.h	/^	LOGON_RETURN_ACCOUNTSUCCESS,            \/\/\/ ◊¢≤·’ ∫≈≥…π¶$/;"	e	enum:Cmd::__anon65
LOGON_RETURN_ACCOUNTSUCCESS	tmpcode/commond.h	/^	LOGON_RETURN_ACCOUNTSUCCESS,            \/\/\/ ◊¢≤·’ ∫≈≥…π¶$/;"	e	enum:__anon210
LOGON_USERCMD	base/CmdType.h	/^const BYTE LOGON_USERCMD    = 104;$/;"	v
LOGON_USERCMD	tmpcode/commond.h	/^const BYTE LOGON_USERCMD		  = 104;$/;"	v
LOGOUT_QUIT	tmpcode/commond.h	/^	LOGOUT_QUIT   = 2,$/;"	e	enum:__anon259
LOGOUT_WRITEBACK	base/RecordCommand.h	/^      LOGOUT_WRITEBACK,\/\/\/ ÈÄÄÂá∫ÂõûÂÜôÊ°£Ê°à$/;"	e	enum:Cmd::Record::WriteBack_Type
LONG_YU_ZHAO_HUAN	tmpcode/commond.h	/^	LONG_YU_ZHAO_HUAN = 33101,\/\/¡˙”Ô°§’ŸªΩ$/;"	e	enum:__anon205
LOSE_AIM_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE LOSE_AIM_MAGIC_USERCMD_PARA = 67;$/;"	v
LOW_GRADE_HERO_ISLAND	tmpcode/commond.h	24173;"	d
LTQRecord	tmpcode/commond.h	/^	LTQRecord()$/;"	f	struct:LTQRecord
LTQRecord	tmpcode/commond.h	/^struct LTQRecord$/;"	s
LTQUserData	tmpcode/commond.h	/^	LTQUserData()$/;"	f	struct:LTQUserData
LTQUserData	tmpcode/commond.h	/^struct LTQUserData$/;"	s
LTQ_DATA_LTQ_PARA	tmpcode/commond.h	24360;"	d
LTQ_USERCMD	tmpcode/commond.h	/^const BYTE LTQ_USERCMD			= 63;$/;"	v
LUORIXIAGU_USERCMD	tmpcode/commond.h	/^const BYTE LUORIXIAGU_USERCMD =127;$/;"	v
L_MAKE	ScenesServer/zObject.h	/^      L_MAKE,$/;"	e	enum:EquipPack::PACKNO
L_PACK	ScenesServer/zObject.h	/^      L_PACK,$/;"	e	enum:EquipPack::PACKNO
LaterSelectGiftBoxPropertyUserCmd	tmpcode/commond.h	/^        LaterSelectGiftBoxPropertyUserCmd()$/;"	f	struct:LaterSelectGiftBoxPropertyUserCmd
LaterSelectGiftBoxPropertyUserCmd	tmpcode/commond.h	/^struct LaterSelectGiftBoxPropertyUserCmd :public stPropertyUserCmd$/;"	s
LeaberID	base/SessionCommand.h	/^		DWORD LeaberID; \/\/ÈòüÈïøID$/;"	m	struct:Cmd::Session::t_Team_AddMe
LeaderID	base/SessionCommand.h	/^		DWORD LeaderID;		\/\/\/ sky ÈòüÈïøID$/;"	m	struct:Cmd::Session::t_Team_Data
LeaderName	base/Command.h	/^	 char LeaderName[MAX_NAMESIZE];			\/\/ Êñ∞ÈòüÈïøID$/;"	m	struct:Cmd::stRemoveTeamChangeLeaderUserCmd
LeaveScene	ScenesServer/SceneUser.cpp	/^bool SceneUser::LeaveScene()$/;"	f	class:SceneUser
LeechdomType	base/Object.h	/^enum LeechdomType  \/\/“©ÀÆ◊˜”√$/;"	g
Leechdom_UnionItemsAttack_3	base/Object.h	/^	Leechdom_UnionItemsAttack_3 = 22,	\/\/∞Ôª·µ¿æﬂ£¨π•ª˜¿‡£¨.5√Î¿‰»¥$/;"	e	enum:LeechdomType
Leechdom_UnionItemsHP_3	base/Object.h	/^	Leechdom_UnionItemsHP_3 = 23,		\/\/∞Ôª·µ¿æﬂ£¨º”—™¿‡£¨.5√Î¿‰»¥$/;"	e	enum:LeechdomType
Leechdom_chocolate	base/Object.h	/^	Leechdom_chocolate = 17,    \/\/«…øÀ¡¶$/;"	e	enum:LeechdomType
Leechdom_dam	base/Object.h	/^	Leechdom_dam = 1,          \/\/‘ˆº”…À∫¶¡¶$/;"	e	enum:LeechdomType
Leechdom_def	base/Object.h	/^	Leechdom_def = 2,          \/\/‘ˆº”∑¿”˘¡¶$/;"	e	enum:LeechdomType
Leechdom_default	base/Object.h	/^	Leechdom_default = 0,$/;"	e	enum:LeechdomType
Leechdom_hp	base/Object.h	/^	Leechdom_hp = 8,           \/\/“ª¥Œ–‘ª÷∏¥…˙√¸$/;"	e	enum:LeechdomType
Leechdom_hp5	base/Object.h	/^	Leechdom_hp5 = 13,         \/\/“ª¥Œ–‘ª÷∏¥…˙√¸$/;"	e	enum:LeechdomType
Leechdom_hpManyPersist	base/Object.h	/^	Leechdom_hpManyPersist = 37,$/;"	e	enum:LeechdomType
Leechdom_hpmax	base/Object.h	/^	Leechdom_hpmax = 15,       \/\/œ˚∫ƒƒÕæ√“ª¥Œº”¬˙HP$/;"	e	enum:LeechdomType
Leechdom_hpmax25	base/Object.h	/^	Leechdom_hpmax25 = 18,     \/\/œ˚∫ƒƒÕæ√“ª¥Œº”¬˙HP,¿‰»¥.5√Î$/;"	e	enum:LeechdomType
Leechdom_hpmax25_3500	base/Object.h	/^	Leechdom_hpmax25_3500 = 24,  \/\/œ˚∫ƒƒÕæ√£¨“ª¥Œº”—™£¨¿‰»¥.5√Î$/;"	e	enum:LeechdomType
Leechdom_hpmax25_4000	base/Object.h	/^	Leechdom_hpmax25_4000 = 25,  \/\/œ˚∫ƒƒÕæ√£¨“ª¥Œº”—™£¨¿‰»¥.5√Î$/;"	e	enum:LeechdomType
Leechdom_hpmax25_4300	base/Object.h	/^	Leechdom_hpmax25_4300 = 29,$/;"	e	enum:LeechdomType
Leechdom_hpmax25_4500	base/Object.h	/^	Leechdom_hpmax25_4500 = 26,  \/\/œ˚∫ƒƒÕæ√£¨“ª¥Œº”—™£¨¿‰»¥.5√Î$/;"	e	enum:LeechdomType
Leechdom_hpmax25_4600	base/Object.h	/^	Leechdom_hpmax25_4600 = 30,$/;"	e	enum:LeechdomType
Leechdom_hpmax25_4900	base/Object.h	/^	Leechdom_hpmax25_4900 = 31,$/;"	e	enum:LeechdomType
Leechdom_hpmax25_5000	base/Object.h	/^	Leechdom_hpmax25_5000 = 27,  \/\/œ˚∫ƒƒÕæ√£¨“ª¥Œº”—™£¨¿‰»¥.5√Î$/;"	e	enum:LeechdomType
Leechdom_hpmax25_5200	base/Object.h	/^	Leechdom_hpmax25_5200 = 32,$/;"	e	enum:LeechdomType
Leechdom_hpmax25_5500	base/Object.h	/^	Leechdom_hpmax25_5500 = 33,$/;"	e	enum:LeechdomType
Leechdom_hpmax25_6000	base/Object.h	/^	Leechdom_hpmax25_6000 = 28,  \/\/œ˚∫ƒƒÕæ√£¨“ª¥Œº”—™£¨¿‰»¥.5√Î$/;"	e	enum:LeechdomType
Leechdom_hpmax25_8000	base/Object.h	/^	Leechdom_hpmax25_8000 = 34,$/;"	e	enum:LeechdomType
Leechdom_hppercent	base/Object.h	/^	Leechdom_hppercent = 35,     \/\/∞Ÿ∑÷±»ª÷∏¥…˙√¸ $/;"	e	enum:LeechdomType
Leechdom_hppercent_dutypet	base/Object.h	/^	Leechdom_hppercent_dutypet = 39,  \/\/  π√¸’ŸªΩ»ŒŒÒµƒ’ŸªΩ ﬁª÷∏¥—™¡ø∞Ÿ∑÷±»$/;"	e	enum:LeechdomType
Leechdom_hppersist	base/Object.h	/^	Leechdom_hppersist = 9,    \/\/≥÷–¯ª÷∏¥…˙√¸$/;"	e	enum:LeechdomType
Leechdom_hppersist5	base/Object.h	/^	Leechdom_hppersist5 = 14,   \/\/≥÷–¯ª÷∏¥…˙√¸$/;"	e	enum:LeechdomType
Leechdom_mp	base/Object.h	/^	Leechdom_mp = 10,          \/\/“ª¥Œ–‘ª÷∏¥∑® ı÷µ$/;"	e	enum:LeechdomType
Leechdom_mpManyPersist	base/Object.h	/^	Leechdom_mpManyPersist = 38,$/;"	e	enum:LeechdomType
Leechdom_mpmax	base/Object.h	/^	Leechdom_mpmax = 16,       \/\/œ˚∫ƒƒÕæ√“ª¥Œº”¬˙MP$/;"	e	enum:LeechdomType
Leechdom_mpmax25	base/Object.h	/^	Leechdom_mpmax25 = 19,     \/\/œ˚∫ƒƒÕæ√“ª¥Œº”¬˙MP£¨¿‰»¥.5√Î$/;"	e	enum:LeechdomType
Leechdom_mppercent	base/Object.h	/^	Leechdom_mppercent = 36,     \/\/∞Ÿ∑÷±»ª÷∏¥ƒß∑®$/;"	e	enum:LeechdomType
Leechdom_mppersist	base/Object.h	/^	Leechdom_mppersist = 11,   \/\/≥÷–¯ª÷∏¥∑® ı$/;"	e	enum:LeechdomType
Leechdom_poison	base/Object.h	/^	Leechdom_poison = 3,       \/\/“©ŒÔ π»À≥÷–¯÷–∂æ$/;"	e	enum:LeechdomType
Leechdom_sp	base/Object.h	/^	Leechdom_sp = 12,          \/\/“ª¥Œ–‘ª÷∏¥ÃÂ¡¶÷µ$/;"	e	enum:LeechdomType
Leechdom_spcostdown	base/Object.h	/^	Leechdom_spcostdown = 6,   \/\/ºı¬˝ÃÂ¡¶œ˚∫ƒÀŸ∂»$/;"	e	enum:LeechdomType
Leechdom_sppersist	base/Object.h	/^	Leechdom_sppersist = 4,    \/\/ŒÔ∆∑ π»ÀÃÂ¡¶÷µ±£≥÷µ±«∞÷µ≤ª±‰$/;"	e	enum:LeechdomType
Leechdom_spresumeup	base/Object.h	/^	Leechdom_spresumeup = 7,   \/\/º”øÏÃÂ¡¶ª÷∏¥ÀŸ∂»$/;"	e	enum:LeechdomType
Leechdom_spup	base/Object.h	/^	Leechdom_spup = 5,         \/\/“©ŒÔ‘ˆº”»ÀÃÂ¡¶÷µ∞Ÿ∑÷±»$/;"	e	enum:LeechdomType
Less	ScenesServer/QuestCondition.h	/^  class Less$/;"	c	namespace:Op
LessIgnoreHB	ScenesServer/QuestEvent.h	/^  class LessIgnoreHB : public std::binary_function<T,T,bool>$/;"	c	class:Event
LevelCondition	ScenesServer/QuestCondition.h	/^  LevelCondition(ScenesParser& p) : TeamCondition(p)$/;"	f	class:LevelCondition
LevelCondition	ScenesServer/QuestCondition.h	/^class LevelCondition : public TeamCondition$/;"	c
Limit	base/xmlparser/battle.h	/^    struct Limit$/;"	s	struct:BattleConfig
LimitHash	base/zEntryManager.h	/^	LimitHash()$/;"	f	class:LimitHash
LimitHash	base/zEntryManager.h	/^class LimitHash:private zNoncopyable$/;"	c
LingQiAllData	tmpcode/commond.h	/^struct LingQiAllData$/;"	s
LingQiData	tmpcode/commond.h	/^	LingQiData()$/;"	f	struct:LingQiData
LingQiData	tmpcode/commond.h	/^struct LingQiData$/;"	s
LingQiEvolveData	tmpcode/commond.h	/^	LingQiEvolveData()$/;"	f	struct:LingQiEvolveData
LingQiEvolveData	tmpcode/commond.h	/^struct LingQiEvolveData$/;"	s
LingQiFlags	tmpcode/commond.h	/^enum LingQiFlags$/;"	g
LingQiMaxCoefData	tmpcode/commond.h	/^	LingQiMaxCoefData()$/;"	f	struct:LingQiMaxCoefData
LingQiMaxCoefData	tmpcode/commond.h	/^struct LingQiMaxCoefData$/;"	s
LingQiPkData	tmpcode/commond.h	/^	LingQiPkData()$/;"	f	struct:LingQiPkData
LingQiPkData	tmpcode/commond.h	/^struct LingQiPkData$/;"	s
LingQiSimulate	tmpcode/commond.h	/^	LingQiSimulate()$/;"	f	struct:LingQiSimulate
LingQiSimulate	tmpcode/commond.h	/^struct LingQiSimulate{$/;"	s
LingQiWatchData	tmpcode/commond.h	/^    LingQiWatchData()$/;"	f	struct:LingQiWatchData
LingQiWatchData	tmpcode/commond.h	/^struct LingQiWatchData$/;"	s
LinkInfo	tmpcode/commond.h	/^struct LinkInfo$/;"	s
ListData	base/Command.h	/^	ListData()$/;"	f	struct:Cmd::ListData
ListData	base/Command.h	/^struct ListData$/;"	s	namespace:Cmd
ListData	tmpcode/commond.h	/^	ListData()$/;"	f	struct:ListData
ListData	tmpcode/commond.h	/^struct ListData$/;"	s
LoadItmeCoolTime	ScenesServer/ScenesServer.cpp	/^bool ScenesService::LoadItmeCoolTime()$/;"	f	class:ScenesService
LoadMap	Robot/LoadMap.cpp	/^bool LoadMap(const char* pszFileName,zTiles &aTiles,DWORD & width,DWORD & height)$/;"	f
LoadMap	ScenesServer/LoadMap.cpp	/^bool LoadMap(const char* pszFileName,zTiles &aTiles,DWORD & width,DWORD & height)$/;"	f
LoadSuitInfo	ScenesServer/ScenesServer.cpp	/^bool ScenesService::LoadSuitInfo()$/;"	f	class:ScenesService
LogAction	ScenesServer/QuestAction.h	/^  LogAction(ScenesParser& p) : TeamAction(p)$/;"	f	class:LogAction
LogAction	ScenesServer/QuestAction.h	/^class LogAction : public TeamAction$/;"	c
LoginClient	Robot/LoginClient.h	/^    LoginClient($/;"	f	class:LoginClient
LoginClient	Robot/LoginClient.h	/^class LoginClient : public zTCPClient$/;"	c
LoginConfile	FLServer/FLServer.cpp	/^class LoginConfile:public zConfile$/;"	c
LoginManager	FLServer/LoginManager.h	/^	LoginManager(){};$/;"	f	class:LoginManager
LoginManager	FLServer/LoginManager.h	/^class LoginManager$/;"	c
LoginReturn	FLServer/LoginTask.h	/^	void LoginReturn(const BYTE retcode,const bool tm = true)$/;"	f	class:LoginTask
LoginSession	GatewayServer/LoginSessionManager.h	/^		LoginSession(const LoginSession& ls)$/;"	f	struct:LoginSessionManager::LoginSession
LoginSession	GatewayServer/LoginSessionManager.h	/^		LoginSession(const t_NewLoginSession &session) : session(session), timestamp()$/;"	f	struct:LoginSessionManager::LoginSession
LoginSession	GatewayServer/LoginSessionManager.h	/^	struct LoginSession$/;"	s	class:LoginSessionManager
LoginSessionHashmap	GatewayServer/LoginSessionManager.h	/^	typedef __gnu_cxx::hash_map<DWORD, LoginSession> LoginSessionHashmap;$/;"	t	class:LoginSessionManager
LoginSessionHashmap_iterator	GatewayServer/LoginSessionManager.h	/^	typedef LoginSessionHashmap::iterator LoginSessionHashmap_iterator;$/;"	t	class:LoginSessionManager
LoginSessionHashmap_pair	GatewayServer/LoginSessionManager.h	/^	typedef LoginSessionHashmap::value_type LoginSessionHashmap_pair;$/;"	t	class:LoginSessionManager
LoginSessionManager	GatewayServer/LoginSessionManager.h	/^	LoginSessionManager() : lastUpdateTime() {};$/;"	f	class:LoginSessionManager
LoginSessionManager	GatewayServer/LoginSessionManager.h	/^class LoginSessionManager$/;"	c
LoginState	BillServer/BillUser.h	/^    enum LoginState$/;"	g	class:BillUser
LoginTask	FLServer/LoginTask.cpp	/^LoginTask::LoginTask( zTCPTaskPool *pool,const int sock) : zTCPTask(pool,sock,NULL,true,false),lifeTime(), tempid(0)$/;"	f	class:LoginTask
LoginTask	FLServer/LoginTask.h	/^class LoginTask : public zTCPTask$/;"	c
LoginTaskCallback	FLServer/LoginManager.h	/^	typedef zEntryCallback<LoginTask,void> LoginTaskCallback;$/;"	t	class:LoginManager
LoginTaskHashmap	FLServer/LoginManager.h	/^	typedef __gnu_cxx::hash_map<DWORD,LoginTask *> LoginTaskHashmap;$/;"	t	class:LoginManager
LoginTaskHashmap_const_iterator	FLServer/LoginManager.h	/^	typedef LoginTaskHashmap::const_iterator LoginTaskHashmap_const_iterator;$/;"	t	class:LoginManager
LoginTaskHashmap_iterator	FLServer/LoginManager.h	/^	typedef LoginTaskHashmap::iterator LoginTaskHashmap_iterator;$/;"	t	class:LoginManager
LoginTaskHashmap_pair	FLServer/LoginManager.h	/^	typedef LoginTaskHashmap::value_type LoginTaskHashmap_pair;$/;"	t	class:LoginManager
LoginTimeout	FLServer/TimeTick.cpp	/^    LoginTimeout(const zTime &ct) : ct(ct) {}$/;"	f	struct:LoginTimeout
LoginTimeout	FLServer/TimeTick.cpp	/^struct LoginTimeout : public LoginManager::LoginTaskCallback$/;"	s
LuaScript	ScenesServer/script.cpp	/^LuaScript::LuaScript() $/;"	f	class:LuaScript
LuaVM	ScenesServer/script.cpp	/^LuaVM::LuaVM( DWORD libs ) $/;"	f	class:LuaVM
MAGICHORSE_LAST_TIME_PARA	tmpcode/commond.h	/^const BYTE MAGICHORSE_LAST_TIME_PARA =  94;$/;"	v
MAGIC_EFFECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE MAGIC_EFFECT_USERCMD_PARA = 83;$/;"	v
MAGIC_USERCMD	base/CmdType.h	/^const BYTE MAGIC_USERCMD    = 18;$/;"	v
MAGIC_USERCMD	tmpcode/commond.h	/^const BYTE MAGIC_USERCMD		= 18;$/;"	v
MAGIC_USERCMD_PARA	base/Command.h	/^const BYTE MAGIC_USERCMD_PARA = 5;$/;"	v
MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE MAGIC_USERCMD_PARA = 5;$/;"	v
MAIL_STATE_DEL	base/SessionCommand.h	/^      MAIL_STATE_DEL    = 3$/;"	e	enum:Cmd::Session::mailState
MAIL_STATE_DEL	tmpcode/commond.h	/^	MAIL_STATE_DEL		= 3$/;"	e	enum:mailState
MAIL_STATE_NEW	base/SessionCommand.h	/^      MAIL_STATE_NEW    = 1,$/;"	e	enum:Cmd::Session::mailState
MAIL_STATE_NEW	tmpcode/commond.h	/^	MAIL_STATE_NEW		= 1,$/;"	e	enum:mailState
MAIL_STATE_OPENED	base/SessionCommand.h	/^      MAIL_STATE_OPENED  = 2,$/;"	e	enum:Cmd::Session::mailState
MAIL_STATE_OPENED	tmpcode/commond.h	/^	MAIL_STATE_OPENED	= 2,$/;"	e	enum:mailState
MAIL_TYPE_AUCTION	base/SessionCommand.h	/^      MAIL_TYPE_AUCTION  =4,\/\/ÊãçÂçñÁî®ÈÇÆ‰ª∂$/;"	e	enum:Cmd::Session::mailType
MAIL_TYPE_AUCTION	tmpcode/commond.h	/^	MAIL_TYPE_AUCTION	    =4,	\/\/≈ƒ¬Ù”√” º˛$/;"	e	enum:mailType
MAIL_TYPE_BIND	tmpcode/commond.h	/^	MAIL_TYPE_BIND          =8,      \/\/∞Û∂®Ω Ù±“” º˛£¨∑¢ÀÕ∞Û∂®µƒΩ Ù±“$/;"	e	enum:mailType
MAIL_TYPE_MAIL	base/SessionCommand.h	/^      MAIL_TYPE_MAIL    = 1,\/\/ÈÇÆ‰ª∂$/;"	e	enum:Cmd::Session::mailType
MAIL_TYPE_MAIL	tmpcode/commond.h	/^	MAIL_TYPE_MAIL		    = 1,	\/\/” º˛$/;"	e	enum:mailType
MAIL_TYPE_MSG	base/SessionCommand.h	/^      MAIL_TYPE_MSG     = 2,\/\/ÁïôË®Ä$/;"	e	enum:Cmd::Session::mailType
MAIL_TYPE_MSG	tmpcode/commond.h	/^	MAIL_TYPE_MSG	 	    = 2,	\/\/¡Ù—‘$/;"	e	enum:mailType
MAIL_TYPE_RETURN	base/SessionCommand.h	/^      MAIL_TYPE_RETURN  =3,\/\/ÈÄÄÂõûÁöÑÈÇÆ‰ª∂$/;"	e	enum:Cmd::Session::mailType
MAIL_TYPE_RETURN	tmpcode/commond.h	/^	MAIL_TYPE_RETURN	    =3,	\/\/ÕÀªÿµƒ” º˛$/;"	e	enum:mailType
MAIL_TYPE_SYS	base/SessionCommand.h	/^      MAIL_TYPE_SYS    =5  \/\/Á≥ªÁªüÈÇÆ‰ª∂Ôºå‰∏çÂèØÈÄÄÂõû$/;"	e	enum:Cmd::Session::mailType
MAIL_TYPE_SYS	tmpcode/commond.h	/^	MAIL_TYPE_SYS		    =5,	\/\/œµÕ≥” º˛£¨≤ªø…ÕÀªÿ$/;"	e	enum:mailType
MAIL_TYPE_TAKE_WITH	tmpcode/commond.h	/^	MAIL_TYPE_TAKE_WITH		=6,    \/\/ÀÊ…Ì” $/;"	e	enum:mailType
MAIL_TYPE_UNION_SALARY	tmpcode/commond.h	/^	MAIL_TYPE_UNION_SALARY  =7,   \/\/Added for KOK æ¸Õ≈π§◊ :∑¢ÀÕŒÔ∆∑Œ™∞Û∂®µƒ$/;"	e	enum:mailType
MAIL_USERCMD	base/CmdType.h	/^const BYTE MAIL_USERCMD      = 35;$/;"	v
MAIL_USERCMD	tmpcode/commond.h	/^const BYTE MAIL_USERCMD                 = 35;$/;"	v
MAIN1_PACK	ScenesServer/zCard.h	/^      MAIN1_PACK = 1,$/;"	e	enum:CardSlots::__anon197
MAIN2_PACK	ScenesServer/zCard.h	/^      MAIN2_PACK = 2,$/;"	e	enum:CardSlots::__anon197
MAINUSERDEATH_RELIVE_USERCMD_PARA	base/Command.h	/^const BYTE MAINUSERDEATH_RELIVE_USERCMD_PARA = 1;$/;"	v
MAINUSERDEATH_RELIVE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE MAINUSERDEATH_RELIVE_USERCMD_PARA = 1;$/;"	v
MAINUSERRELIVE_RELIVE_USERCMD_PARA	base/Command.h	/^const BYTE MAINUSERRELIVE_RELIVE_USERCMD_PARA = 2;$/;"	v
MAINUSERRELIVE_RELIVE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE MAINUSERRELIVE_RELIVE_USERCMD_PARA = 2;$/;"	v
MAIN_ACCESS_KEY_GROUP	base/Command.h	2654;"	d
MAIN_ACCESS_KEY_GROUP	tmpcode/commond.h	13066;"	d
MAIN_ACCESS_KEY_NUM	base/Command.h	2653;"	d
MAIN_ACCESS_KEY_NUM	tmpcode/commond.h	13065;"	d
MAIN_PACK	ScenesServer/zObject.h	/^      MAIN_PACK = 1,$/;"	e	enum:Packages::__anon178
MAIN_PACK	base/Object.h	/^	MAIN_PACK = 1,$/;"	e	enum:__anon54
MAIN_USER_DATA_USERCMD_PARA	base/Command.h	/^const BYTE MAIN_USER_DATA_USERCMD_PARA = 2;$/;"	v
MAIN_USER_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE MAIN_USER_DATA_USERCMD_PARA = 2;$/;"	v
MAKE	tmpcode/commond.h	/^            MAKE = 2,$/;"	e	enum:ReuildType
MAKECELLTYPE_EQUIP	base/Command.h	/^  MAKECELLTYPE_EQUIP=0, \/\/\/ Ë¢´ÂêàÊàê„ÄÅÂçáÁ∫ßÔºåÈï∂ÂµåÁöÑÁâ©ÂìÅ$/;"	e	enum:Cmd::__anon89
MAKECELLTYPE_MATERIAL1	base/Command.h	/^  MAKECELLTYPE_MATERIAL1=1,\/\/\/ ÊùêÊñô1$/;"	e	enum:Cmd::__anon89
MAKECELLTYPE_MATERIAL2	base/Command.h	/^  MAKECELLTYPE_MATERIAL2=2,\/\/\/ ÊùêÊñô2$/;"	e	enum:Cmd::__anon89
MAKECELLTYPE_MATERIAL3	base/Command.h	/^  MAKECELLTYPE_MATERIAL3=3,\/\/\/ ÊùêÊñô3$/;"	e	enum:Cmd::__anon89
MAKECELLTYPE_MATERIAL4	base/Command.h	/^  MAKECELLTYPE_MATERIAL4=4,\/\/\/ ÊùêÊñô4$/;"	e	enum:Cmd::__anon89
MAKEOBJECT_USERCMD	base/CmdType.h	/^const BYTE MAKEOBJECT_USERCMD    = 10;$/;"	v
MAN_LI_QIAN_YING	tmpcode/commond.h	/^	MAN_LI_QIAN_YING = 11103,\/\/¬˘¡¶«£“˝$/;"	e	enum:__anon205
MAPBUILD_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE MAPBUILD_MAPSCREEN_USERCMD_PARA = 117;$/;"	v
MAPDATATYPE_BUILDING	base/Command.h	/^	MAPDATATYPE_BUILDING,$/;"	e	enum:Cmd::enumMapDataType
MAPDATATYPE_BUILDING	tmpcode/commond.h	/^	MAPDATATYPE_BUILDING,$/;"	e	enum:enumMapDataType
MAPDATATYPE_DANCE	tmpcode/commond.h	/^    MAPDATATYPE_DANCE,\/\/KOK20080905$/;"	e	enum:enumMapDataType
MAPDATATYPE_ITEM	base/Command.h	/^	MAPDATATYPE_ITEM,$/;"	e	enum:Cmd::enumMapDataType
MAPDATATYPE_ITEM	tmpcode/commond.h	/^	MAPDATATYPE_ITEM,$/;"	e	enum:enumMapDataType
MAPDATATYPE_NPC	base/Command.h	/^	MAPDATATYPE_NPC,$/;"	e	enum:Cmd::enumMapDataType
MAPDATATYPE_NPC	tmpcode/commond.h	/^	MAPDATATYPE_NPC,$/;"	e	enum:enumMapDataType
MAPDATATYPE_PET	base/Command.h	/^	MAPDATATYPE_PET$/;"	e	enum:Cmd::enumMapDataType
MAPDATATYPE_PET	tmpcode/commond.h	/^	MAPDATATYPE_PET,$/;"	e	enum:enumMapDataType
MAPDATATYPE_PKGAME	tmpcode/commond.h	/^	MAPDATATYPE_PKGAME,$/;"	e	enum:enumMapDataType
MAPDATATYPE_PRIVETE_STORE	tmpcode/commond.h	/^	MAPDATATYPE_PRIVETE_STORE,$/;"	e	enum:enumMapDataType
MAPDATATYPE_SKILLSTORE	tmpcode/commond.h	/^	MAPDATATYPE_SKILLSTORE,   \/\/…˙ªÓººƒ‹∞⁄ÃØ$/;"	e	enum:enumMapDataType
MAPDATATYPE_TANK	tmpcode/commond.h	/^	MAPDATATYPE_TANK,$/;"	e	enum:enumMapDataType
MAPDATATYPE_USER	base/Command.h	/^	MAPDATATYPE_USER,$/;"	e	enum:Cmd::enumMapDataType
MAPDATATYPE_USER	tmpcode/commond.h	/^	MAPDATATYPE_USER,$/;"	e	enum:enumMapDataType
MAPDATA_MAPSCREEN_STATE_USERCMD_PARA	base/Command.h	/^const BYTE MAPDATA_MAPSCREEN_STATE_USERCMD_PARA = 73;$/;"	v
MAPDATA_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE MAPDATA_MAPSCREEN_USERCMD_PARA = 55;$/;"	v
MAPDATA_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE MAPDATA_MAPSCREEN_USERCMD_PARA = 55;$/;"	v
MAPSCREENSIZE_DATA_USERCMD_PARA	base/Command.h	/^const BYTE MAPSCREENSIZE_DATA_USERCMD_PARA = 124;$/;"	v
MAPSCREENSIZE_DATA_USERCMD_PARA_KOK	tmpcode/commond.h	/^const BYTE MAPSCREENSIZE_DATA_USERCMD_PARA_KOK = 124;$/;"	v
MAPSCREEN_USERCMD	base/CmdType.h	/^const BYTE MAPSCREEN_USERCMD    = 5;$/;"	v
MAPSCREEN_USERCMD	tmpcode/commond.h	/^const BYTE MAPSCREEN_USERCMD	  = 5;$/;"	v
MAP_DATA_HOME_PARA	tmpcode/commond.h	/^const BYTE MAP_DATA_HOME_PARA				= 2;$/;"	v
MAP_FUNCTION_BATTLEFIEL	ScenesServer/Scene.h	/^	MAP_FUNCTION_BATTLEFIEL	= 0x100,\/\/sky ÊàòÂú∫Á±ªÂú∞Âõæ$/;"	e	enum:__anon202
MAP_FUNCTION_CAPITAL	ScenesServer/Scene.h	/^	MAP_FUNCTION_CAPITAL	= 0x2,	\/\/sky È¶ñÈÉΩ$/;"	e	enum:__anon202
MAP_FUNCTION_MAZE	ScenesServer/Scene.h	/^	MAP_FUNCTION_MAZE		= 0x4,	\/\/sky Âú∞‰∏ãÂüé$/;"	e	enum:__anon202
MAP_FUNCTION_NOCALLOBJ	ScenesServer/Scene.h	/^	MAP_FUNCTION_NOCALLOBJ	= 0x80, \/\/sky ‰∏çÂèØ‰ª•‰ΩøÁî®‰ª§Áâå$/;"	e	enum:__anon202
MAP_FUNCTION_NORED	ScenesServer/Scene.h	/^	MAP_FUNCTION_NORED		= 0x10,	\/\/sky ‰∏çÁ∫¢Âêç$/;"	e	enum:__anon202
MAP_FUNCTION_NORIDE	ScenesServer/Scene.h	/^	MAP_FUNCTION_NORIDE		= 0x1,	\/\/sky ‰∏çÂèØ‰ª•È™ëÂùêÈ™ë$/;"	e	enum:__anon202
MAP_FUNCTION_NOSCROLL	ScenesServer/Scene.h	/^	MAP_FUNCTION_NOSCROLL	= 0x8,	\/\/sky ‰∏çÂèØ‰ª•‰ΩøÁî®Âç∑ËΩ¥$/;"	e	enum:__anon202
MAP_FUNCTION_NOTEAM	ScenesServer/Scene.h	/^	MAP_FUNCTION_NOTEAM		= 0x40, \/\/sky ‰∏çÂèØ‰ª•ÁªÑÈòü$/;"	e	enum:__anon202
MAP_FUNCTION_NOVICE	ScenesServer/Scene.h	/^	MAP_FUNCTION_NOVICE		= 0x20,	\/\/sky Êñ∞Êâã‰øùÊä§$/;"	e	enum:__anon202
MAP_HOUSE_GARDEN	tmpcode/commond.h	25166;"	d
MAP_ID_FENGYIN	tmpcode/commond.h	27687;"	d
MAP_ID_SEPT_LTT_NO1	tmpcode/commond.h	30257;"	d
MAP_ID_SEPT_LTT_NO2	tmpcode/commond.h	30261;"	d
MAP_MAGICEFFECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE MAP_MAGICEFFECT_USERCMD_PARA = 87;$/;"	v
MAP_REGION_FUBEN	tmpcode/commond.h	92;"	d
MAP_SETTING_RIDE	base/Command.h	/^  MAP_SETTING_RIDE  = 0x00000001,\/\/\/ Â§ßÈôÜÂèØ‰ª•È™ëÈ©¨$/;"	e	enum:Cmd::__anon76
MAP_SETTING_WEATHER	base/Command.h	/^  MAP_SETTING_WEATHER  = 0x00000002  \/\/\/ Â§ßÈôÜÊúâÈõ®Èõ™Â§©Ê∞îÂèòÂåñ$/;"	e	enum:Cmd::__anon76
MARK	ScenesServer/Quest.cpp	798;"	d
MARKER	tmpcode/commond.h	/^	MARKER 	= 2,  	\/\/±Í ∂Ω®÷˛$/;"	e	enum:__anon358
MARRIAGE_DINNER_TYPE	tmpcode/commond.h	/^	MARRIAGE_DINNER_TYPE,	\/\/\/ ∂©—Á(…Ë÷√ªÈ—Á¿‡–ÕEnumMarriageDinnerType)$/;"	e	enum:__anon239
MARRIAGE_ESCAPE	tmpcode/commond.h	/^	MARRIAGE_ESCAPE,         \/\/\/ Ã”ªÈ$/;"	e	enum:__anon239
MARRIAGE_FLOWER	tmpcode/commond.h	/^	MARRIAGE_FLOWER = 0,    \/\/\/ »ˆª®$/;"	e	enum:__anon239
MARRIAGE_GIFT	tmpcode/commond.h	/^	MARRIAGE_GIFT,          \/\/\/ »ˆ∫Ï∞¸$/;"	e	enum:__anon239
MARRIAGE_HOLD	tmpcode/commond.h	/^	MARRIAGE_HOLD,          \/\/\/ ¿≠»À$/;"	e	enum:__anon239
MARRIAGE_HOLD_FRIEND	tmpcode/commond.h	/^        MARRIAGE_HOLD_FRIEND,           \/\/\/ ∫√”—$/;"	e	enum:__anon238
MARRIAGE_HOLD_INIT	tmpcode/commond.h	/^        MARRIAGE_HOLD_INIT = 0,         \/\/\/ ≥ı º÷µ$/;"	e	enum:__anon238
MARRIAGE_HOLD_SEPT	tmpcode/commond.h	/^        MARRIAGE_HOLD_SEPT,             \/\/\/ º“◊Â$/;"	e	enum:__anon238
MARRIAGE_HOLD_UNION	tmpcode/commond.h	/^        MARRIAGE_HOLD_UNION             \/\/\/ Õ≈$/;"	e	enum:__anon238
MARRIAGE_PRESENT_BLESS_PARA	tmpcode/commond.h	/^const BYTE MARRIAGE_PRESENT_BLESS_PARA = 15;$/;"	v
MARRIAGE_PRESENT_FLOWER_PARA	tmpcode/commond.h	/^const BYTE MARRIAGE_PRESENT_FLOWER_PARA = 16;$/;"	v
MARRIAGE_PRESS_SIZE	tmpcode/commond.h	/^const DWORD MARRIAGE_PRESS_SIZE = 128;$/;"	v
MARRIAGE_SPREAD_FLOWER_PARA	tmpcode/commond.h	/^const BYTE MARRIAGE_SPREAD_FLOWER_PARA = 12;$/;"	v
MARRY_AGREE	base/Command.h	/^  MARRY_AGREE,$/;"	e	enum:Cmd::__anon126
MARRY_AGREE	tmpcode/commond.h	/^	MARRY_AGREE,                    \/\/ Õ¨“‚Ω·ªÈ$/;"	e	enum:__anon237
MARRY_AHEAD_CHECK	base/Command.h	/^  MARRY_AHEAD_CHECK,$/;"	e	enum:Cmd::__anon126
MARRY_AHEAD_CHECK	tmpcode/commond.h	/^	MARRY_AHEAD_CHECK,              \/\/ªÈ«∞µƒºÏ≤È$/;"	e	enum:__anon237
MARRY_AHEAD_CHECK_FAIL	base/Command.h	/^  MARRY_AHEAD_CHECK_FAIL,$/;"	e	enum:Cmd::__anon126
MARRY_AHEAD_CHECK_FAIL	tmpcode/commond.h	/^	MARRY_AHEAD_CHECK_FAIL,         \/\/ºÏ≤È ß∞‹$/;"	e	enum:__anon237
MARRY_ANSWER	base/Command.h	/^  MARRY_ANSWER,$/;"	e	enum:Cmd::__anon126
MARRY_ANSWER	tmpcode/commond.h	/^	MARRY_ANSWER,	            \/\/Ω·ªÈ—∂Œ $/;"	e	enum:__anon237
MARRY_CALL_GUESTS	tmpcode/commond.h	/^	MARRY_CALL_GUESTS,      \/\/¿≠»À  $/;"	e	enum:MARRY_STATE
MARRY_END	tmpcode/commond.h	/^	MARRY_END               \/\/Ω· ¯  $/;"	e	enum:MARRY_STATE
MARRY_INTERACT	tmpcode/commond.h	/^	MARRY_INTERACT,         \/\/Ω·ªÈª•∂Ø$/;"	e	enum:MARRY_STATE
MARRY_ITEM_CHECK	base/Command.h	/^  MARRY_ITEM_CHECK,$/;"	e	enum:Cmd::__anon126
MARRY_MARRY	tmpcode/commond.h	/^	MARRY_MARRY,            \/\/Ω·ªÈ  $/;"	e	enum:MARRY_STATE
MARRY_MONEY_CHECK	tmpcode/commond.h	/^	MARRY_MONEY_CHECK,		      \/\/ø€«ÆºÏ≤È$/;"	e	enum:__anon237
MARRY_NO_ITEM	base/Command.h	/^  MARRY_NO_ITEM,$/;"	e	enum:Cmd::__anon126
MARRY_NO_MONEY	base/Command.h	/^  MARRY_NO_MONEY$/;"	e	enum:Cmd::__anon126
MARRY_PAY_MONEY	base/Command.h	/^  MARRY_PAY_MONEY,$/;"	e	enum:Cmd::__anon126
MARRY_PAY_MONEY1	base/Command.h	/^  MARRY_PAY_MONEY1,$/;"	e	enum:Cmd::__anon126
MARRY_PAY_MONEY2	base/Command.h	/^  MARRY_PAY_MONEY2,$/;"	e	enum:Cmd::__anon126
MARRY_PRAY_PARA	tmpcode/commond.h	/^const BYTE MARRY_PRAY_PARA = 9;$/;"	v
MARRY_PREPARE	tmpcode/commond.h	/^	MARRY_PREPARE,          \/\/◊º±∏  $/;"	e	enum:MARRY_STATE
MARRY_PRESENT_FEME	ScenesServer/SceneRelation.cpp	16;"	d
MARRY_PRESENT_MALE	ScenesServer/SceneRelation.cpp	15;"	d
MARRY_REFUSE	base/Command.h	/^  MARRY_REFUSE,$/;"	e	enum:Cmd::__anon126
MARRY_REFUSE	tmpcode/commond.h	/^	MARRY_REFUSE,			 \/\/Ω·ªÈæ‹æ¯ $/;"	e	enum:__anon237
MARRY_REGISTER	tmpcode/commond.h	/^	MARRY_REGISTER = 0,     \/\/µ«º«  $/;"	e	enum:MARRY_STATE
MARRY_REQUEST_LEVEL	ScenesServer/SceneRelation.cpp	9;"	d
MARRY_REQUEST_MONEY	ScenesServer/SceneRelation.cpp	12;"	d
MARRY_REQUEST_MONEY1	ScenesServer/SceneRelation.cpp	13;"	d
MARRY_REQUEST_MONEY2	ScenesServer/SceneRelation.cpp	14;"	d
MARRY_REQUEST_M_ITEM_ID	ScenesServer/SceneRelation.cpp	10;"	d
MARRY_REQUEST_W_ITEM_ID	ScenesServer/SceneRelation.cpp	11;"	d
MARRY_REQ_HALL	tmpcode/commond.h	/^	MARRY_REQ_HALL,         \/\/…Í«Î≥°æ∞$/;"	e	enum:MARRY_STATE
MARRY_STATE	tmpcode/commond.h	/^enum MARRY_STATE$/;"	g
MARRY_STATUS_CHECK_PARA	base/Command.h	/^const BYTE MARRY_STATUS_CHECK_PARA = 4;$/;"	v
MARRY_STATUS_CHECK_PARA	tmpcode/commond.h	/^const BYTE MARRY_STATUS_CHECK_PARA = 4;$/;"	v
MASTER	base/Command.h	/^  MASTER,  \/\/ Â∏Æ‰∏ªÊùÉÈôê$/;"	e	enum:Cmd::UNIONPOWER
MASTER	tmpcode/commond.h	/^	MASTER,			   \/\/ ∞Ô÷˜»®œﬁ$/;"	e	enum:UNIONPOWER
MASTER_PROVE	tmpcode/commond.h	/^	MASTER_PROVE = 1, \/\/◊Â≥§»∑»œ$/;"	e	enum:NoticeState
MASTER_TYPE	tmpcode/commond.h	/^	MASTER_TYPE = 1, \/\/  ¶∏µ $/;"	e	enum:__anon371
MATERIAL_POINT_DECAYHOUSE_PARA	tmpcode/commond.h	/^const BYTE MATERIAL_POINT_DECAYHOUSE_PARA = 8;$/;"	v
MAXLEVELLIMIT_USERCMD	tmpcode/commond.h	/^const BYTE MAXLEVELLIMIT_USERCMD = 143;$/;"	v
MAXWRITE	base/EncDec/EncDec.h	173;"	d
MAXWRITE	base/EncDec/mydes.h	74;"	d
MAX_ACCNAMESIZE	base/Command.h	24;"	d
MAX_ACCNAMESIZE	base/zType.h	49;"	d
MAX_ACCNAMESIZE	tmpcode/commond.h	28;"	d
MAX_ADVERT_SIZE	tmpcode/commond.h	/^const DWORD MAX_ADVERT_SIZE = 512;$/;"	v
MAX_ANILENGTH	tmpcode/commond.h	/^const BYTE MAX_ANILENGTH = 7;$/;"	v
MAX_ATTACKDODGE	base/CharBase.h	/^const WORD  MAX_ATTACKDODGE    = 999;          \/\/\/ ÊîªÂáªË∫≤ÈÅø$/;"	v
MAX_ATTACKRATING	base/CharBase.h	/^const WORD  MAX_ATTACKRATING    = 999;          \/\/\/ ÊîªÂáªÂëΩ‰∏≠$/;"	v
MAX_ATTACKSPEED	base/CharBase.h	/^const WORD  MAX_ATTACKSPEED    = 100;          \/\/\/ ÊîªÂáªÈÄüÂ∫¶$/;"	v
MAX_BUF_SIZE	ScenesServer/Quest.h	/^    MAX_BUF_SIZE = 4096*8,$/;"	e	enum:GlobalVarImpl::__anon181
MAX_BUF_SIZE	ScenesServer/Quest.h	/^    MAX_BUF_SIZE = 4096*8,$/;"	e	enum:UserVar::__anon182
MAX_BUILD_TECH	tmpcode/commond.h	/^        MAX_BUILD_TECH$/;"	e	enum:BUILD_TECH
MAX_CHARINFO	base/Command.h	/^const WORD MAX_CHARINFO = 3;$/;"	v
MAX_CHARINFO	tmpcode/commond.h	/^const WORD MAX_CHARINFO = 3;$/;"	v
MAX_CHATINFO	base/Command.h	34;"	d
MAX_CHATINFO	tmpcode/commond.h	36;"	d
MAX_CMD_GROUP	ScenesServer/TimeTick.cpp	14;"	d
MAX_DATABUFFERSIZE	base/zSocket.h	/^	static const DWORD MAX_DATABUFFERSIZE  =  PACKET_MASK;            \/**<  ˝æ›∞¸◊Ó¥Û≥§∂»£¨∞¸¿®∞¸Õ∑4◊÷Ω⁄ *\/$/;"	m	class:zSocket
MAX_DATASIZE	base/zSocket.h	/^	static const DWORD MAX_DATASIZE      =  (MAX_DATABUFFERSIZE - PH_LEN);    \/**<  ˝æ›∞¸◊Ó¥Û≥§∂» *\/$/;"	m	class:zSocket
MAX_DBSIZE	base/zDBConnPool.h	9;"	d
MAX_EDIT_DANCENUM	tmpcode/commond.h	12976;"	d
MAX_EFFECT_SIZE	tmpcode/commond.h	1359;"	d
MAX_EXP	base/CharBase.h	/^const QWORD MAX_EXP      = 9999999999LL;      \/\/\/ ÊúÄÂ§ßÁªèÈ™åÂÄº$/;"	v
MAX_EXP	base/CharBase.h	/^const QWORD MAX_EXP      = 9999999999i64;$/;"	v
MAX_FAKELINGQI_SKILL	tmpcode/commond.h	/^const DWORD MAX_FAKELINGQI_SKILL = 30999;$/;"	v
MAX_FIRE	base/CharBase.h	/^const WORD  MAX_FIRE      = 999;          \/\/\/ ÁÅ´$/;"	v
MAX_FIRERESISTANCE	base/CharBase.h	/^const WORD  MAX_FIRERESISTANCE    = 10000;        \/\/\/ ÁÅ´Á≥ªÊäµÊäó$/;"	v
MAX_GATEWAYUSER	base/zType.h	61;"	d
MAX_GOODNESS	base/CharBase.h	/^const DWORD MAX_GOODNESS    = 9999;          \/\/\/ ÊúÄÂ§ßÂñÑÊÅ∂Â∫¶$/;"	v
MAX_GROUP_TIME_GAP	SessionServer/CRelationManager.h	12;"	d
MAX_HOSTSIZE	base/zDBConnPool.h	7;"	d
MAX_HP	base/CharBase.h	/^const DWORD MAX_HP      = 999999;        \/\/\/ ÊúÄÂ§ßÁîüÂëΩÂÄº$/;"	v
MAX_INFO_SIZE	tmpcode/commond.h	/^	 enum { MAX_INFO_SIZE = 256 };$/;"	e	enum:stStopServerTimeUserCmd::__anon286
MAX_INTERVAL	GatewayServer/CmdChecker.h	/^		MAX_INTERVAL = static_cast<int>(interval*(1.0+percent\/100.0)), $/;"	e	enum:percent_up_off::__anon2
MAX_IP_LENGTH	base/Command.h	30;"	d
MAX_IP_LENGTH	base/zType.h	55;"	d
MAX_IP_LENGTH	tmpcode/commond.h	32;"	d
MAX_KOKOPTION	tmpcode/commond.h	5731;"	d
MAX_LAND_OWNER_NAME	tmpcode/commond.h	/^const DWORD MAX_LAND_OWNER_NAME = 16;$/;"	v
MAX_LEVEL	base/CharBase.h	/^const WORD  MAX_LEVEL      = 150;          \/\/\/ ÊúÄÂ§ßËßíËâ≤Á≠âÁ∫ß$/;"	v
MAX_LIFEGUARD_TYPE	tmpcode/commond.h	/^	MAX_LIFEGUARD_TYPE$/;"	e	enum:enumLifeguardType
MAX_LINGLI	tmpcode/commond.h	/^const WORD MAX_LINGLI = 300;   \/\/¡È¡¶◊Ó¥Û÷µŒ™300$/;"	v
MAX_LUCKY	base/CharBase.h	/^const WORD  MAX_LUCKY      = 999;          \/\/\/ Âπ∏ËøêÂÄº$/;"	v
MAX_MAGICDODGE	base/CharBase.h	/^const WORD  MAX_MAGICDODGE    = 999;          \/\/\/ Ê≥ïÊúØË∫≤ÈÅø$/;"	v
MAX_MAGICRATING	base/CharBase.h	/^const WORD  MAX_MAGICRATING    = 999;          \/\/\/ Ê≥ïÊúØÂëΩ‰∏≠$/;"	v
MAX_MAGICSPEED	base/CharBase.h	/^const WORD  MAX_MAGICSPEED    = 100;          \/\/\/ ÊñΩÊ≥ïÈÄüÂ∫¶$/;"	v
MAX_MAILITEM	base/Command.h	42;"	d
MAX_MDAMAGE	base/CharBase.h	/^const DWORD MAX_MDAMAGE      = 999999;        \/\/\/ ÊúÄÂ§ßÊ≥ïÊúØÊîªÂáªÂäõ$/;"	v
MAX_MDEFENCE	base/CharBase.h	/^const DWORD MAX_MDEFENCE    = 999999;        \/\/\/ ÊúÄÂ§ßÊ≥ïÊúØÈò≤Âæ°Âäõ$/;"	v
MAX_MEETING_NUM	tmpcode/commond.h	/^        MAX_MEETING_NUM$/;"	e	enum:SHOP_MEETING
MAX_METAL	base/CharBase.h	/^const WORD  MAX_METAL      = 999;          \/\/\/ Èáë$/;"	v
MAX_METALRESISTANCE	base/CharBase.h	/^const WORD  MAX_METALRESISTANCE    = 10000;        \/\/\/ ÈáëÁ≥ªÊäµÊäó$/;"	v
MAX_MODELSIZE	tmpcode/commond.h	/^const BYTE MAX_MODELSIZE = 16;	$/;"	v
MAX_MOVESPEED	base/CharBase.h	/^const WORD  MAX_MOVESPEED    = 200;          \/\/\/ ÁßªÂä®ÈÄüÂ∫¶$/;"	v
MAX_MP	base/CharBase.h	/^const DWORD MAX_MP      = 999999;        \/\/\/ ÊúÄÂ§ßÊ≥ïÊúØÂÄº$/;"	v
MAX_NAMESIZE	base/Command.h	19;"	d
MAX_NAMESIZE	base/zType.h	44;"	d
MAX_NAMESIZE	tmpcode/commond.h	24;"	d
MAX_NICKSIZE	tmpcode/commond.h	1360;"	d
MAX_NOTICEINFO	tmpcode/commond.h	/^const WORD MAX_NOTICEINFO = 33;$/;"	v
MAX_NPC_GROUP	ScenesServer/zSceneEntryIndex.h	10;"	d
MAX_NUM	ScenesServer/Quest.h	/^    MAX_NUM = 20,$/;"	e	enum:QuestList::__anon183
MAX_NUMPASSWORD	base/Command.h	39;"	d
MAX_NUMPASSWORD	base/zType.h	102;"	d
MAX_NUMPASSWORD	tmpcode/commond.h	898;"	d
MAX_PASSWORD	base/Command.h	14;"	d
MAX_PASSWORD	base/zType.h	67;"	d
MAX_PASSWORD	tmpcode/commond.h	20;"	d
MAX_PASSWORD_LENGTH	tmpcode/commond.h	/^const BYTE MAX_PASSWORD_LENGTH = 16;$/;"	v
MAX_PDAMAGE	base/CharBase.h	/^const DWORD MAX_PDAMAGE      = 999999;        \/\/\/ ÊúÄÂ§ßÁâ©ÁêÜÊîªÂáªÂäõ$/;"	v
MAX_PDEFENCE	base/CharBase.h	/^const DWORD MAX_PDEFENCE    = 999999;        \/\/\/ ÊúÄÂ§ßÁâ©ÁêÜÈò≤Âæ°Âäõ$/;"	v
MAX_PLAYER_QUIT_CLOCK	tmpcode/commond.h	7308;"	d
MAX_POINTS	base/CharBase.h	/^const WORD  MAX_POINTS      = 1500;          \/\/\/ ÁÇπÊï∞$/;"	v
MAX_QUESTINFO	tmpcode/commond.h	16670;"	d
MAX_RDAMAGE	base/CharBase.h	/^const DWORD MAX_RDAMAGE      = 999999;        \/\/\/ ÊúÄÂ§ßËøúÁ®ãÊîªÂáªÂäõ$/;"	v
MAX_RESUMEHP	base/CharBase.h	/^const DWORD MAX_RESUMEHP    = 1000;          \/\/\/ ÁîüÂëΩÂÄºÊÅ¢Â§ç$/;"	v
MAX_RESUMEMP	base/CharBase.h	/^const DWORD MAX_RESUMEMP    = 1000;          \/\/\/ Ê≥ïÊúØÂÄºÊÅ¢Â§ç$/;"	v
MAX_RESUMESP	base/CharBase.h	/^const DWORD MAX_RESUMESP    = 1000;          \/\/\/ ‰ΩìÂäõÂÄºÊÅ¢Â§ç$/;"	v
MAX_ROOMPASSWORD	tmpcode/commond.h	/^const BYTE MAX_ROOMPASSWORD = 7;$/;"	v
MAX_SEQ_WIN_TIMES	tmpcode/commond.h	/^		MAX_SEQ_WIN_TIMES = 10, \/\/ΩÒÃÏ◊Ó¥Û¡¨ §¥Œ ˝$/;"	e	enum:DRAGON_DATA_TYPE
MAX_SHOPADV	base/zType.h	85;"	d
MAX_SKILL_STATE_NUM	ScenesServer/SkillStatusManager.h	/^  static const int MAX_SKILL_STATE_NUM = 4*1024;$/;"	m	class:SkillStatusManager
MAX_SOIL	base/CharBase.h	/^const WORD  MAX_SOIL      = 999;          \/\/\/ Âúü$/;"	v
MAX_SOILRESISTANCE	base/CharBase.h	/^const WORD  MAX_SOILRESISTANCE    = 10000;        \/\/\/ ÂúüÁ≥ªÊäµÊäó$/;"	v
MAX_SP	base/CharBase.h	/^const DWORD MAX_SP      = 999999;        \/\/\/ ÊúÄÂ§ß‰ΩìÂäõÂÄº$/;"	v
MAX_STATE	base/Command.h	/^  MAX_STATE = 691                         \/\/\/ ÊúÄÂ§ßÁä∂ÊÄÅÊï∞$/;"	e	enum:Cmd::__anon69
MAX_STATE	tmpcode/commond.h	/^	MAX_STATE$/;"	e	enum:__anon224
MAX_TAB_NUM	ScenesServer/zCard.h	239;"	d
MAX_TAB_NUM	ScenesServer/zObject.h	956;"	d
MAX_TDAMAGE	base/CharBase.h	/^const DWORD MAX_TDAMAGE     = 999999;        \/\/\/ ÊúÄÂ§ß‰ªôÊúØÊîªÂáªÂäõ$/;"	v
MAX_TEMPARCHIVE_SIZE	base/CharBase.h	232;"	d
MAX_TEMP_REWARD_OBJ_NUM	tmpcode/commond.h	33356;"	d
MAX_TIMES	tmpcode/commond.h	/^        MAX_TIMES,      \/\/¥Œ ˝Ã´∂‡$/;"	e	enum:__anon343
MAX_USERDATASIZE	base/zSocket.h	/^	static const DWORD MAX_USERDATASIZE    =  (MAX_DATASIZE - 128);        \/**< ”√ªß ˝æ›∞¸◊Ó¥Û≥§∂» *\/$/;"	m	class:zSocket
MAX_USERLINGQI_SKILL	tmpcode/commond.h	/^const DWORD MAX_USERLINGQI_SKILL = 30499;$/;"	v
MAX_USERSIZE	base/zDBConnPool.h	8;"	d
MAX_UZLIB_CHAR	ScenesServer/SceneUser.cpp	20;"	d
MAX_VALUE_COUNTRYID	GatewayServer/CountryInfo.cpp	203;"	d
MAX_WAITQUEUE	base/zMTCPServer.h	/^	static const int MAX_WAITQUEUE = 2000;  \/**< ◊Ó¥Ûµ»¥˝∂”¡– *\/$/;"	m	class:zMTCPServer
MAX_WAITQUEUE	base/zTCPServer.h	/^	static const int MAX_WAITQUEUE = 2000;  \/**< ◊Ó¥Ûµ»¥˝∂”¡– *\/$/;"	m	class:zTCPServer
MAX_WATER	base/CharBase.h	/^const WORD  MAX_WATER      = 999;          \/\/\/ Ê∞¥$/;"	v
MAX_WATERRESISTANCE	base/CharBase.h	/^const WORD  MAX_WATERRESISTANCE    = 10000;        \/\/\/ Ê∞¥Á≥ªÊäµÊäó$/;"	v
MAX_WOOD	base/CharBase.h	/^const WORD  MAX_WOOD      = 999;          \/\/\/ Êú®$/;"	v
MAX_WOODRESISTANCE	base/CharBase.h	/^const WORD  MAX_WOODRESISTANCE    = 10000;        \/\/\/ Êú®Á≥ªÊäµÊäó$/;"	v
MDEFENCE	tmpcode/commond.h	/^	MDEFENCE=3,$/;"	e	enum:__anon320
MDT_BASIC	tmpcode/commond.h	/^	MDT_BASIC,  \/\/ ≥ıº∂ªÈ—Á$/;"	e	enum:EnumMarriageDinnerType
MDT_DEFAULT	tmpcode/commond.h	/^	MDT_DEFAULT,  \/\/ ƒ¨»œ$/;"	e	enum:EnumMarriageDinnerType
MDT_HIGH	tmpcode/commond.h	/^	MDT_HIGH,  \/\/ ∏ﬂº∂ªÈ—Á$/;"	e	enum:EnumMarriageDinnerType
MDT_MAX	tmpcode/commond.h	/^	MDT_MAX$/;"	e	enum:EnumMarriageDinnerType
MDT_MIDDLE	tmpcode/commond.h	/^	MDT_MIDDLE,  \/\/ ÷–º∂ªÈ—Á$/;"	e	enum:EnumMarriageDinnerType
MDT_SUPER	tmpcode/commond.h	/^	MDT_SUPER,  \/\/ Ãÿº∂ªÈ—Á$/;"	e	enum:EnumMarriageDinnerType
MEDAL_TYPE_EXP_NUM	tmpcode/commond.h	/^     MEDAL_TYPE_EXP_NUM,             \/\/◊€∫œæ≠—È÷ªº”∞Ÿ∑÷±»$/;"	e	enum:__anon227
MEDAL_TYPE_EXP_NUM_TIME	tmpcode/commond.h	/^     MEDAL_TYPE_EXP_NUM_TIME         \/\/Ãÿ ‚ªÓ∂Ø¿‡£¨◊€∫œæ≠—È÷ªº”∞Ÿ∑÷±»$/;"	e	enum:__anon227
MEDAL_TYPE_EXP_PER	tmpcode/commond.h	/^     MEDAL_TYPE_EXP_PER,             \/\/◊€∫œæ≠—È÷ªº” ˝÷µ$/;"	e	enum:__anon227
MEDAL_TYPE_EXP_PER_TIME	tmpcode/commond.h	/^     MEDAL_TYPE_EXP_PER_TIME,        \/\/Ãÿ ‚ªÓ∂Ø¿‡£¨◊€∫œæ≠—È÷ªº” ˝÷µ$/;"	e	enum:__anon227
MEDAL_TYPE_PROPERTY_NUM	tmpcode/commond.h	/^     MEDAL_TYPE_PROPERTY_NUM,        \/\/PK∫Õ»ÀŒÔ Ù–‘÷ªº” ˝÷µ$/;"	e	enum:__anon227
MEDAL_TYPE_PROPERTY_NUM_TIME	tmpcode/commond.h	/^     MEDAL_TYPE_PROPERTY_NUM_TIME,   \/\/Ãÿ ‚ªÓ∂Ø¿‡£¨PK∫Õ»ÀŒÔ Ù–‘÷ªº” ˝÷µ$/;"	e	enum:__anon227
MEDAL_TYPE_PROPERTY_PER	tmpcode/commond.h	/^     MEDAL_TYPE_PROPERTY_PER,        \/\/PK∫Õ»ÀŒÔ Ù–‘÷ªº”∞Ÿ∑÷±»$/;"	e	enum:__anon227
MEDAL_TYPE_PROPERTY_PER_TIME	tmpcode/commond.h	/^     MEDAL_TYPE_PROPERTY_PER_TIME,   \/\/Ãÿ ‚ªÓ∂Ø¿‡£¨PK∫Õ»ÀŒÔ Ù–‘÷ªº”∞Ÿ∑÷±»$/;"	e	enum:__anon227
MENU	ScenesServer/Quest.h	/^  typedef std::map<DWORD, std::string> MENU;$/;"	t	class:QuestList
MERCENARY_CALL_DUTY	tmpcode/commond.h	/^const BYTE MERCENARY_CALL_DUTY = 19;$/;"	v
MERCENARY_COUNTRY_HELP_USERCMD_PARA	tmpcode/commond.h	/^const BYTE MERCENARY_COUNTRY_HELP_USERCMD_PARA =87;$/;"	v
MERCH_MEETING_OP	tmpcode/commond.h	/^const DWORD MERCH_MEETING_OP = 185;$/;"	v
MERCH_STATE	tmpcode/commond.h	/^enum MERCH_STATE$/;"	g
MERGE_LINGQI_PARA	tmpcode/commond.h	20896;"	d
MERGE_VERSION_CHECK_USERCMD_PARA	base/Command.h	/^const BYTE MERGE_VERSION_CHECK_USERCMD_PARA = 53;$/;"	v
MIANLONG_CHENGZHU	tmpcode/commond.h	/^	 MIANLONG_CHENGZHU,   \/\/√ﬂ¡˙≥«÷˜$/;"	e	enum:__anon215
MIANLONG_CITY	tmpcode/commond.h	/^        MIANLONG_CITY,$/;"	e	enum:SHOP_MEETING
MIANLONG_CITY_ID	tmpcode/commond.h	/^const DWORD MIANLONG_CITY_ID = 1020;	\/\/√ﬂ¡˙≥«$/;"	v
MIANLONG_KING	tmpcode/commond.h	/^	 MIANLONG_KING,          \/\/\/ √ﬂ¡˙≥«≥«÷˜+ΩÁÕı$/;"	e	enum:__anon215
MID_GRADE_HERO_ISLAND	tmpcode/commond.h	24177;"	d
MID_JOIN_QUESTMAP_PARA	tmpcode/commond.h	18223;"	d
MINIGAME_USERCMD	base/CmdType.h	/^const BYTE MINIGAME_USERCMD    = 46;$/;"	v
MINISERVER	base/zMisc.h	/^	MINISERVER      =  23    \/** Â∞èÊ∏∏ÊàèÊúçÂä°Âô® *\/$/;"	e	enum:ServerType
MIN_FAKELINGQI_SKILL	tmpcode/commond.h	/^const DWORD MIN_FAKELINGQI_SKILL = 30500;\/\/ºŸ¡È∆˜ººƒ‹30500~30999 Œ™±ª∂Øººƒ‹ID$/;"	v
MIN_INTERVAL	GatewayServer/CmdChecker.h	/^		MIN_INTERVAL = static_cast<int>(interval*(1.0-percent\/100.0)),$/;"	e	enum:percent_up_off::__anon2
MIN_TAB_NUM	ScenesServer/zCard.h	240;"	d
MIN_TAB_NUM	ScenesServer/zObject.h	957;"	d
MIN_USERLINGQI_SKILL	tmpcode/commond.h	/^const DWORD MIN_USERLINGQI_SKILL = 30000;\/\/¡È∆˜ººƒ‹µƒ∑∂Œß’Ê(30000~30499 Œ™÷˜∂Øººƒ‹)$/;"	v
MOB_ESCAPE_COUNT_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE MOB_ESCAPE_COUNT_MAPSCREEN_USERCMD_PARA = 126;$/;"	v
MOB_KILL_CONTRIBUTE	tmpcode/commond.h	/^struct MOB_KILL_CONTRIBUTE$/;"	s
MODIFY_HOMEDATA_PARA	tmpcode/commond.h	/^const BYTE MODIFY_HOMEDATA_PARA					= 64;$/;"	v
MOLI_BAOZHA	tmpcode/commond.h	/^	MOLI_BAOZHA		=33207,\/\/ƒß¡¶±¨’®$/;"	e	enum:__anon205
MONEY	tmpcode/commond.h	/^	MONEY = 1,  \/\/«Æ$/;"	e	enum:buyState
MONEY_ZYZ	tmpcode/commond.h	/^const BYTE MONEY_ZYZ = 2;$/;"	v
MOONSTONECOMP	tmpcode/commond.h	/^			MOONSTONECOMP = 16, \/\/∫œ≥……˝‘¬ Ø$/;"	e	enum:ReuildType
MOONUP	tmpcode/commond.h	/^			MOONUP = 14,	\/\/‘¬¡¡ Ø…˝º∂$/;"	e	enum:ReuildType
MOUNT_EFFECT_ID	tmpcode/commond.h	/^const WORD MOUNT_EFFECT_ID = 130;\/\/∆Ô¬Ì—ÃŒÌ$/;"	v
MOVE_CARD_USERCMD_PARAMETER	base/HeroCardCmd.h	/^    const BYTE MOVE_CARD_USERCMD_PARAMETER = 29;$/;"	v
MOVE_DECORATION	tmpcode/commond.h	/^	MOVE_DECORATION = 3,$/;"	e	enum:__anon359
MOVE_DECORATION_PARA	tmpcode/commond.h	/^const BYTE MOVE_DECORATION_PARA = 3;$/;"	v
MOVE_FURNITURE_HOME_PARA	tmpcode/commond.h	/^const BYTE MOVE_FURNITURE_HOME_PARA			= 5;$/;"	v
MOVE_FURNITURE_IN_STORAGE	tmpcode/commond.h	/^const BYTE MOVE_FURNITURE_IN_STORAGE			= 59;$/;"	v
MOVE_HORSE_TO_STABLE_PARA	tmpcode/commond.h	/^const BYTE MOVE_HORSE_TO_STABLE_PARA = 26;$/;"	v
MOVE_ITEM_STORE_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE MOVE_ITEM_STORE_HOUSE_USER_CMD = 57;$/;"	v
MOVE_OBJECT_HOUSE_USER_CMD	tmpcode/commond.h	/^const  BYTE MOVE_OBJECT_HOUSE_USER_CMD =  8;$/;"	v
MOVE_USERCMD	base/CmdType.h	/^const BYTE MOVE_USERCMD      = 6;$/;"	v
MOVE_USERCMD	tmpcode/commond.h	/^const BYTE MOVE_USERCMD			  = 6;$/;"	v
MO_DONG_ZI_TAI	tmpcode/commond.h	/^	MO_DONG_ZI_TAI = 13203,\/\/ƒß∂Ø◊ÀÃ¨$/;"	e	enum:__anon205
MO_LI_HUO_SHE	tmpcode/commond.h	/^	MO_LI_HUO_SHE = 13201,\/\/ƒß¡¶ª…ﬂ$/;"	e	enum:__anon205
MO_NENG_ZI_TAI	tmpcode/commond.h	/^	MO_NENG_ZI_TAI = 13202,\/\/ƒßƒ‹◊ÀÃ¨$/;"	e	enum:__anon205
MO_YUE_ZHAN	tmpcode/commond.h	/^	MO_YUE_ZHAN = 1212,\/\/ƒß‘¬’∂$/;"	e	enum:__anon205
MP_STONE	tmpcode/commond.h	/^const DWORD MP_STONE  = 10001;  \/\/ƒß¡¶±¶ Ø$/;"	v
MP_WRITEBACK	base/RecordCommand.h	/^      MP_WRITEBACK,\/\/MP$/;"	e	enum:Cmd::Record::enumWriteBackTest_Type
MSGBUF_MAX	base/zLogger.h	8;"	d
MSGTIME_GMTOL_PARA	base/SessionCommand.h	/^    const BYTE MSGTIME_GMTOL_PARA = 1;$/;"	v
MSG_CENTER	base/MsgDelegate.h	/^namespace MSG_CENTER$/;"	n
MSG_GMTOOL_PARA	base/Command.h	/^const BYTE MSG_GMTOOL_PARA = 2;$/;"	v
MSG_MF_LEN	base/MsgDelegate.h	25;"	d
MY_CONTRIBUTE_SEPT_PARA	tmpcode/commond.h	/^const BYTE MY_CONTRIBUTE_SEPT_PARA = 69;$/;"	v
MagicPoint	ScenesServer/ChallengeGame.h	/^	MagicPoint()$/;"	f	class:MagicPoint
MagicPoint	ScenesServer/ChallengeGame.h	/^class MagicPoint$/;"	c
MagicReflex	ScenesServer/ScenePk.h	/^	  SWORD MagicReflex;	\/\/sky È≠îÊ≥ïÁ≥ªÊäÄËÉΩÂèçÂ∞Ñ(Áõ¥Êé•ÊääÊäÄËÉΩÂèçÂ∞ÑÂõûÂéª)$/;"	m	struct:SkillState::__anon155::__anon156
MainMenuAction	ScenesServer/QuestAction.h	/^  MainMenuAction(const std::string& menu) : _menu(menu)$/;"	f	class:MainMenuAction
MainMenuAction	ScenesServer/QuestAction.h	/^class MainMenuAction : public Action$/;"	c
MainPack	ScenesServer/zObject.cpp	/^MainPack::MainPack():Package(Cmd::OBJECTCELLTYPE_COMMON,0,MainPack::WIDTH,MainPack::HEIGHT)$/;"	f	class:MainPack
MainPack	ScenesServer/zObject.h	/^class MainPack:public Package$/;"	c
Make	tmpcode/commond.h	/^        stPattern Make[0];     \/\/◊∞±∏≈‰∑Ω               $/;"	m	struct:stNotifyPatternUserCmd
MakeFunction	ScenesServer/QuestMaker.h	/^namespace MakeFunction {$/;"	n
MakeSuit	ScenesServer/zObject.cpp	/^void zObject::MakeSuit(zObjectB *objbase)$/;"	f	class:zObject
Maker	ScenesServer/QuestMaker.h	/^  class Maker$/;"	c	namespace:MakeFunction
MapBaseID	base/SessionCommand.h	/^		DWORD MapBaseID;				\/\/sky Âú∞ÂõæÊ∫êID$/;"	m	struct:Cmd::Session::t_Sports_RequestMap
MapData_ItemHeader	base/Command.h	/^    struct MapData_ItemHeader$/;"	s	namespace:Cmd
MapData_ItemHeader	tmpcode/commond.h	/^struct MapData_ItemHeader $/;"	s
MapDic	GatewayServer/CountryInfo.h	/^		MapDic()$/;"	f	struct:CountryInfo::MapDic
MapDic	GatewayServer/CountryInfo.h	/^	struct MapDic$/;"	s	class:CountryInfo
MapIndex	GatewayServer/ScreenIndex.h	/^typedef std::map<DWORD,ScreenIndex*> MapIndex;$/;"	t
MapIndexIter	GatewayServer/ScreenIndex.h	/^typedef MapIndex::iterator MapIndexIter;$/;"	t
MapIndexXY	base/SceneCommand.h	/^    struct MapIndexXY$/;"	s	namespace:Cmd::Scene
MapInfo	ScenesServer/SceneManager.h	/^    struct MapInfo$/;"	s	class:SceneManager
MapMap	GatewayServer/CountryInfo.h	/^	typedef std::map<DWORD,MapDic> MapMap;$/;"	t	class:CountryInfo
MapMap	ScenesServer/SceneManager.h	/^    typedef std::map<DWORD,MapInfo> MapMap;$/;"	t	class:SceneManager
MapMap_iter	GatewayServer/CountryInfo.h	/^	typedef MapMap::iterator MapMap_iter;$/;"	t	class:CountryInfo
MapMap_iter	ScenesServer/SceneManager.h	/^    typedef MapMap::iterator MapMap_iter;$/;"	t	class:SceneManager
MapMap_value_type	GatewayServer/CountryInfo.h	/^	typedef MapMap::value_type MapMap_value_type;$/;"	t	class:CountryInfo
MapMap_value_type	ScenesServer/SceneManager.h	/^    typedef MapMap::value_type MapMap_value_type;$/;"	t	class:SceneManager
MapName	ScenesServer/SceneUser.h	/^	char MapName[MAX_NAMESIZE+1];	\/\/sky Âú∞ÂõæÂêç$/;"	m	struct:stUserBattfieldData
MapdwNpcNum	ScenesServer/SceneNpc.cpp	/^DWORD MapdwNpcNum = 0;$/;"	v
MarketConfig	base/xmlparser/market.h	/^struct MarketConfig$/;"	s
MarketSystemManager	ScenesServer/MarketSystemManager.cpp	/^MarketSystemManager::MarketSystemManager()$/;"	f	class:MarketSystemManager
MarketSystemManager	ScenesServer/MarketSystemManager.h	/^class MarketSystemManager : public Singleton<MarketSystemManager>$/;"	c
MasterPerformInfo	tmpcode/commond.h	/^	MasterPerformInfo()$/;"	f	struct:MasterPerformInfo
MasterPerformInfo	tmpcode/commond.h	/^struct MasterPerformInfo$/;"	s
Matarial_num	base/Command.h	/^  DWORD Matarial_num; \/\/ÊùêÊñôÁªÑÊï∞$/;"	m	struct:Cmd::stReturnGoldGiveTradeUserCmd
MatchedList	SessionServer/HeroCardManager.h	/^    typedef std::list<stMatchedInfo> MatchedList;		\/\/“—æ≠∆•≈‰∫√µƒlist $/;"	t	class:HeroCardManager
MeID	base/SessionCommand.h	/^		DWORD MeID;		\/\/Áî®Êà∑Ëá™Â∑±ÁöÑID$/;"	m	struct:Cmd::Session::t_Team_AddMe
Member	base/SessionCommand.h	/^		stMember Member[0];	\/\/\/ ÈòüÂëòÂàóË°®$/;"	m	struct:Cmd::Session::t_Team_Data
MemberID	base/SessionCommand.h	/^		DWORD MemberID;			\/\/sky Ë¶ÅÂä†Âà∞ÂÆπÂô®ÁöÑÁî®Êà∑ID$/;"	m	struct:Cmd::Session::t_Team_AddMoveSceneMember
MemberNeam	base/SessionCommand.h	/^		char MemberNeam[MAX_NAMESIZE];			\/\/\/ Ë¶ÅÂà†Èô§ËßíËâ≤							$/;"	m	struct:Cmd::Session::t_Team_DelMember
MenuAction	ScenesServer/QuestAction.h	/^  MenuAction(const std::string& menu) : _menu(menu)$/;"	f	class:MenuAction
MenuAction	ScenesServer/QuestAction.h	/^class MenuAction : public Action$/;"	c
MercenaryReplayCountryList	tmpcode/commond.h	/^struct MercenaryReplayCountryList$/;"	s
MerceryList	tmpcode/commond.h	/^		MerceryList()$/;"	f	struct:MerceryList
MerceryList	tmpcode/commond.h	/^struct MerceryList$/;"	s
Merch	tmpcode/commond.h	/^	Merch()$/;"	f	struct:Merch
Merch	tmpcode/commond.h	/^	Merch(const DWORD ID, const DWORD monCount, const DWORD conCount, const BYTE mState)$/;"	f	struct:Merch
Merch	tmpcode/commond.h	/^struct Merch$/;"	s
MergeTeam	tmpcode/commond.h	/^		MergeTeam()$/;"	f	struct:stReturnMergeServerTeamUserCmd::MergeTeam
MergeTeam	tmpcode/commond.h	/^	struct MergeTeam$/;"	s	struct:stReturnMergeServerTeamUserCmd
Message	tmpcode/commond.h	/^  char          *Message;$/;"	m	struct:stPopupUI
MessageQueue	base/MessageQueue.h	/^class MessageQueue$/;"	c
Mini	base/MiniCommand.h	/^  namespace Mini$/;"	n	namespace:Cmd
MiniClient	GatewayServer/MiniClient.h	/^	MiniClient($/;"	f	class:MiniClient
MiniClient	GatewayServer/MiniClient.h	/^class MiniClient : public zTCPBufferClient$/;"	c
MiniClient	ScenesServer/MiniClient.h	/^    MiniClient($/;"	f	class:MiniClient
MiniClient	ScenesServer/MiniClient.h	/^class MiniClient : public zTCPBufferClient$/;"	c
MonkeyNpcs	ScenesServer/SceneNpc.h	/^typedef std::set<SceneNpc *> MonkeyNpcs;$/;"	t
MonkeyNpcs	ScenesServer/SceneNpcManager.h	/^typedef std::set<SceneNpc *> MonkeyNpcs;$/;"	t
MoveChecker	GatewayServer/CmdChecker.h	/^	typedef CmdChecker< percent_up_off<512,10,5> > MoveChecker;$/;"	t	class:CheckerTable
MoveSceneMemberMap	SessionServer/SessionServer.cpp	/^std::map<DWORD, DWORD> MoveSceneMemberMap;$/;"	v
MsgCenter	base/MsgDelegate.h	/^class MsgCenter : public Singleton<MsgCenter>$/;"	c
MsgDelegate	base/MsgDelegate.h	/^	    MsgDelegate(const F &arg)$/;"	f	class:MsgDelegate
MsgDelegate	base/MsgDelegate.h	/^	MsgDelegate()$/;"	f	class:MsgDelegate
MsgDelegate	base/MsgDelegate.h	/^class MsgDelegate$/;"	c
MsgQueue	base/zMisc.h	/^	MsgQueue()$/;"	f	class:MsgQueue
MsgQueue	base/zMisc.h	/^class MsgQueue$/;"	c
Mul	ScenesServer/QuestAction.h	/^  class Mul$/;"	c	namespace:Op
MultiHash	base/zEntryManager.h	/^	MultiHash()$/;"	f	class:MultiHash
MultiHash	base/zEntryManager.h	/^class MultiHash:private zNoncopyable$/;"	c
MyDES_SPtrans	base/EncDec/mydes.cpp	/^t_DES_SPtrans MyDES_SPtrans = {$/;"	v
NAME_CARD_USERCMD	tmpcode/commond.h	31121;"	d
NEAR_NORMAL_ATTACK_TYPE	tmpcode/commond.h	/^const WORD NEAR_NORMAL_ATTACK_TYPE = 377;\/\/∆’Õ®π•ª˜¿‡–Õ£®Ω¸…Ì£©$/;"	v
NEAR_NORMAL_ATTACK_TYPE2	tmpcode/commond.h	/^const WORD NEAR_NORMAL_ATTACK_TYPE2 = 379;\/\/∆’Õ®π•ª˜¿‡–Õ£®Ω¸…Ì2£©$/;"	v
NECKLACE	ScenesServer/zObject.h	/^      NECKLACE,\/\/5$/;"	e	enum:EquipPack::EQUIPNO
NEED_AFFIRM	tmpcode/commond.h	/^	NEED_AFFIRM,              \/\/÷˜∂Ø—ØŒ $/;"	e	enum:SEPT_ADD_MEMBER
NEED_EXIST	ScenesServer/QuestCondition.h	/^      NEED_EXIST = 0,$/;"	e	enum:Op::Differ::__anon201
NEED_EXIST	ScenesServer/QuestCondition.h	/^      NEED_EXIST = 0,$/;"	e	enum:Op::Less::__anon199
NEED_EXIST	ScenesServer/QuestCondition.h	/^      NEED_EXIST = 1,$/;"	e	enum:Op::Equal::__anon200
NEED_EXIST	ScenesServer/QuestCondition.h	/^      NEED_EXIST = 1,$/;"	e	enum:Op::Great::__anon198
NEED_MASTER_AFFRIM_JOIN	tmpcode/commond.h	/^const BYTE NEED_MASTER_AFFRIM_JOIN = 98;$/;"	v
NEED_MONEY_AND_BASE_SUCCESS_RATE_PARA	tmpcode/commond.h	/^const BYTE NEED_MONEY_AND_BASE_SUCCESS_RATE_PARA = 48;$/;"	v
NEWBIE_GIFT_USERCMD	tmpcode/commond.h	/^const BYTE NEWBIE_GIFT_USERCMD = 215;$/;"	v
NEWCHAR_WRITEBACK	base/RecordCommand.h	/^      NEWCHAR_WRITEBACK,\/\/Êñ∞ËßíËâ≤ÊèíÂÖ•$/;"	e	enum:Cmd::Record::enumWriteBackTest_Type
NEWGIFTBAG	tmpcode/commond.h	/^		NEWGIFTBAG      =3,\/\/–¬¿Ò∞¸20110621$/;"	e	enum:__anon342
NEWGIFTBOX	tmpcode/commond.h	/^		NEWGIFTBOX      =2, \/\/–¬±¶œ‰201008006$/;"	e	enum:__anon342
NEWMASTER_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE NEWMASTER_QUESTROOM_PARA = 19;$/;"	v
NEWYEARACTION_USERCMD	tmpcode/commond.h	/^const BYTE NEWYEARACTION_USERCMD = 142;$/;"	v
NEW_FACE_PROTECT_LEVEL	tmpcode/commond.h	/^const WORD NEW_FACE_PROTECT_LEVEL = 30;\/\/–¬»À ‹±£ª§µ»º∂$/;"	v
NEW_HISTORY_STOCKPARA	base/Command.h	7684;"	d
NEW_UNION_MERCH_INFO	tmpcode/commond.h	/^const DWORD NEW_UNION_MERCH_INFO = 182;$/;"	v
NOBILITY_SORT_USERCMD	tmpcode/commond.h	/^const BYTE NOBILITY_SORT_USERCMD = 113;$/;"	v
NOBILITY_USERCMD	tmpcode/commond.h	/^const BYTE NOBILITY_USERCMD = 116;$/;"	v
NOFITY_ALL_CARD_TUJIAN_INFO_CMD	base/HeroCardCmd.h	/^    const BYTE NOFITY_ALL_CARD_TUJIAN_INFO_CMD = 1;$/;"	v
NOFITY_MARKET_ALL_OBJECT_CMD	base/Command.h	/^const BYTE NOFITY_MARKET_ALL_OBJECT_CMD = 45;$/;"	v
NOFITY_ONE_CARD_TUJIAN_INFO_CMD	base/HeroCardCmd.h	/^    const BYTE NOFITY_ONE_CARD_TUJIAN_INFO_CMD = 2;$/;"	v
NOMINATE_OFFICIAL_PARA	tmpcode/commond.h	/^const BYTE NOMINATE_OFFICIAL_PARA = 1;$/;"	v
NONE_SING_TYPE	tmpcode/commond.h	/^	NONE_SING_TYPE,         \/\/      $/;"	e	enum:__anon282
NORMALGIFTBOX	tmpcode/commond.h	/^        NORMALGIFTBOX   =0, \/\/∆’Õ®±¶œ‰$/;"	e	enum:__anon342
NOTACCEPTSURVEY_PARA	tmpcode/commond.h	/^static const BYTE NOTACCEPTSURVEY_PARA 	= 1;$/;"	v
NOTAGREE_REPLAYMERENCY_COUNTRY_CMD	tmpcode/commond.h	30489;"	d
NOTE	ScenesServer/ScenePk.cpp	7;"	d
NOTE_SEPT_PARA	base/Command.h	/^const BYTE NOTE_SEPT_PARA = 15;$/;"	v
NOTE_SEPT_PARA	tmpcode/commond.h	/^const BYTE NOTE_SEPT_PARA = 15;$/;"	v
NOTE_UNION_PARA	base/Command.h	/^const BYTE NOTE_UNION_PARA = 15;$/;"	v
NOTE_UNION_PARA	tmpcode/commond.h	/^const BYTE NOTE_UNION_PARA = 15;$/;"	v
NOTHING	tmpcode/commond.h	/^        NOTHING = 0,    \/\/ƒ¨»œ ß∞‹$/;"	e	enum:__anon341
NOTICE_DEBUG	tmpcode/commond.h	/^	NOTICE_DEBUG,$/;"	e	enum:FARM_NOTICE_OP
NOTICE_MASTER_PERFORM_FLAG_CMD	tmpcode/commond.h	/^const BYTE NOTICE_MASTER_PERFORM_FLAG_CMD = 123;$/;"	v
NOTICE_NONE	tmpcode/commond.h	/^	NOTICE_NONE = 0,$/;"	e	enum:FARM_NOTICE_OP
NOTICE_POLL	tmpcode/commond.h	/^	NOTICE_POLL,$/;"	e	enum:FARM_NOTICE_OP
NOTICE_REAP	tmpcode/commond.h	/^	NOTICE_REAP$/;"	e	enum:FARM_NOTICE_OP
NOTICE_STOP_SEPT_FLAG	tmpcode/commond.h	/^const BYTE NOTICE_STOP_SEPT_FLAG = 122;$/;"	v
NOTICE_USER_PERFORM_FLAG_CMD	tmpcode/commond.h	/^const BYTE NOTICE_USER_PERFORM_FLAG_CMD = 72;$/;"	v
NOTICE_WATER	tmpcode/commond.h	/^	NOTICE_WATER,$/;"	e	enum:FARM_NOTICE_OP
NOTIFY	base/Command.h	/^  NOTIFY,  \/\/ ÂèëÂÖ¨Âëä$/;"	e	enum:Cmd::UNIONPOWER
NOTIFY	tmpcode/commond.h	/^	NOTIFY,			   \/\/ ∑¢π´∏Ê$/;"	e	enum:UNIONPOWER
NOTIFY_ADD_EXP_LINGQI_PARA	tmpcode/commond.h	20883;"	d
NOTIFY_ADD_FURNITURE_HOME_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_ADD_FURNITURE_HOME_PARA	= 8;$/;"	v
NOTIFY_BETRESULT_IN_CHALLENGE_DRAGON_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_BETRESULT_IN_CHALLENGE_DRAGON_PARA = 24;$/;"	v
NOTIFY_BET_DRAGON_FIGHT_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_BET_DRAGON_FIGHT_PARA = 31;$/;"	v
NOTIFY_BET_OBJECT_CHALLENGE_USERCMD_PARAMETER	tmpcode/commond.h	22179;"	d
NOTIFY_CANCEL_TIME	tmpcode/commond.h	29032;"	d
NOTIFY_CATCH_BEGIN_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_CATCH_BEGIN_PARA = 1;$/;"	v
NOTIFY_CATCH_LINGQI_BEGIN_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_CATCH_LINGQI_BEGIN_PARA = 8;$/;"	v
NOTIFY_CHALLENGE_STATE_DRAGON_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_CHALLENGE_STATE_DRAGON_PARA = 25;$/;"	v
NOTIFY_CHANGEJOB_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_CHANGEJOB_DATA_USERCMD_PARA = 254;$/;"	v
NOTIFY_CHANGEJOB_OR_ZHUANZHI_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_CHANGEJOB_OR_ZHUANZHI_PARA = 33;$/;"	v
NOTIFY_CITYDARE_LADDER_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_CITYDARE_LADDER_PARA = 13;$/;"	v
NOTIFY_CITYDARE_SCENE_PARA	tmpcode/commond.h	/^ const BYTE NOTIFY_CITYDARE_SCENE_PARA = 1;$/;"	v
NOTIFY_CLEARSKILL_USERCMD	tmpcode/commond.h	/^const BYTE NOTIFY_CLEARSKILL_USERCMD = 12;                                              $/;"	v
NOTIFY_CLEAR_SEAL_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_CLEAR_SEAL_MAGIC_USERCMD_PARA = 59;$/;"	v
NOTIFY_DAOJISHI_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_DAOJISHI_PARA=14;$/;"	v
NOTIFY_DARE_PARA	base/Command.h	/^const BYTE NOTIFY_DARE_PARA = 2;$/;"	v
NOTIFY_DATA_CHANGE_DRAGON_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_DATA_CHANGE_DRAGON_PARA = 13;$/;"	v
NOTIFY_DECORATION_UNIQUE_ID	tmpcode/commond.h	/^const BYTE NOTIFY_DECORATION_UNIQUE_ID = 4;$/;"	v
NOTIFY_EDITDANCE_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_EDITDANCE_PARA = 5;$/;"	v
NOTIFY_ENTER	tmpcode/commond.h	/^const BYTE NOTIFY_ENTER = 1;$/;"	v
NOTIFY_ENTER_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_ENTER_MAPSCREEN_USERCMD_PARA = 108;$/;"	v
NOTIFY_ENTER_ZONE	base/SessionCommand.h	/^    const BYTE NOTIFY_ENTER_ZONE = 1;$/;"	v
NOTIFY_EQUIP_LINGLI_LINGQI_PARA	tmpcode/commond.h	20749;"	d
NOTIFY_FIGHT_ENEMY_INFO_CMD	base/HeroCardCmd.h	/^    const BYTE NOTIFY_FIGHT_ENEMY_INFO_CMD = 27;$/;"	v
NOTIFY_FINISHED_ISSUE_QUEST_PARA	tmpcode/commond.h	/^static const BYTE NOTIFY_FINISHED_ISSUE_QUEST_PARA = 51;  \/\/∑¢ÀÕŒØÕ–»ŒŒÒÕÍ≥…Ã· æ server->client$/;"	v
NOTIFY_FINISH_DECAYHOUSE_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_FINISH_DECAYHOUSE_PARA = 12;$/;"	v
NOTIFY_GET_DRAGON_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_GET_DRAGON_PARA = 16;$/;"	v
NOTIFY_GET_OFF_TANK_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_GET_OFF_TANK_PARA = 14;$/;"	v
NOTIFY_GET_ON_TANK_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_GET_ON_TANK_PARA = 13;$/;"	v
NOTIFY_GET_SERVER_POS_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_GET_SERVER_POS_USERCMD_PARA = 71;$/;"	v
NOTIFY_GET_TRUEASURE_DRAGON_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_GET_TRUEASURE_DRAGON_PARA = 32;$/;"	v
NOTIFY_GOTTEN_LIFEAWARD_PROMOTER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_GOTTEN_LIFEAWARD_PROMOTER_USERCMD_PARA = 74;$/;"	v
NOTIFY_HODEGATHERPOINT_SEC	tmpcode/commond.h	/^const BYTE NOTIFY_HODEGATHERPOINT_SEC = 141;$/;"	v
NOTIFY_HONGBAO_ISSUE_QUEST_PARA	tmpcode/commond.h	/^static const BYTE NOTIFY_HONGBAO_ISSUE_QUEST_PARA = 52;  \/\/∑¢≤º’ﬂ∏¯¥˙◊ˆ’ﬂ∑¢∫Ï∞¸∫ÛµƒÕ®÷™œ˚œ¢$/;"	v
NOTIFY_JOIN_LTQ_PARA	tmpcode/commond.h	24398;"	d
NOTIFY_KAIQU_OVER_30DAY_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_KAIQU_OVER_30DAY_PARA = 178;$/;"	v
NOTIFY_KILLCOUNT_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_KILLCOUNT_MAPSCREEN_USERCMD_PARA = 119;$/;"	v
NOTIFY_LAST_BET_WIN_DRAGON_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_LAST_BET_WIN_DRAGON_PARA = 34;$/;"	v
NOTIFY_LEAVE_LTQ_PARA	tmpcode/commond.h	24412;"	d
NOTIFY_LINGLI_LINGQI_PARA	tmpcode/commond.h	20719;"	d
NOTIFY_MINUS_EXP_LINGQI_PARA	tmpcode/commond.h	20917;"	d
NOTIFY_NAME_CARD_CHANGE_USERCMD	tmpcode/commond.h	31174;"	d
NOTIFY_NEW_MAIL_PARA	base/Command.h	/^const BYTE NOTIFY_NEW_MAIL_PARA = 12;$/;"	v
NOTIFY_NEW_MAIL_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_NEW_MAIL_PARA = 12;$/;"	v
NOTIFY_NOTE	tmpcode/commond.h	/^const BYTE NOTIFY_NOTE = 7;$/;"	v
NOTIFY_NO_EXIST	base/Command.h	/^    NOTIFY_NO_EXIST,\/\/ Â∏Æ‰ºöÊàñÂ∏àÈó®ÊàñÂÆ∂ÊóèÂêç‰∏çÂ≠òÂú®$/;"	e	enum:Cmd::__anon123
NOTIFY_ONLINEINFO_GRECOMMEND_USER_PARA	tmpcode/commond.h	28851;"	d
NOTIFY_OPEN_MANTEAU_WINDOW	tmpcode/commond.h	/^const BYTE NOTIFY_OPEN_MANTEAU_WINDOW = 166;$/;"	v
NOTIFY_PATTERN_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  NOTIFY_PATTERN_PROPERTY_USERCMD_PARA = 138;$/;"	v
NOTIFY_REQ_JOIN_LTQ_PARA	tmpcode/commond.h	24572;"	d
NOTIFY_SAFETY_DETAIL_PARA	tmpcode/commond.h	29086;"	d
NOTIFY_SAFETY_PARA	tmpcode/commond.h	28969;"	d
NOTIFY_SCENESERVER_GAME_COUNT_PARA	base/SessionCommand.h	/^    const BYTE NOTIFY_SCENESERVER_GAME_COUNT_PARA = 4;$/;"	v
NOTIFY_SEAL_VALUE_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_SEAL_VALUE_MAGIC_USERCMD_PARA = 58;$/;"	v
NOTIFY_SEPT_LEAVE	tmpcode/commond.h	/^const BYTE NOTIFY_SEPT_LEAVE = 191;$/;"	v
NOTIFY_SHENLONG_REWARD_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_SHENLONG_REWARD_USERCMD_PARA = 82;$/;"	v
NOTIFY_SPECIAL_FEED_DRAGON_DATA_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_SPECIAL_FEED_DRAGON_DATA_PARA = 12;$/;"	v
NOTIFY_STATE_AND_TIME_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_STATE_AND_TIME_ZHENXUAN_PARA = 6;$/;"	v
NOTIFY_STOP_CHANGE	base/SessionCommand.h	/^    const BYTE NOTIFY_STOP_CHANGE = 2;$/;"	v
NOTIFY_SUCCESS_PUT_CITYQUEST	tmpcode/commond.h	/^const BYTE NOTIFY_SUCCESS_PUT_CITYQUEST = 116;$/;"	v
NOTIFY_TOP2_DRAGON_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_TOP2_DRAGON_PARA = 18;$/;"	v
NOTIFY_TRANS_PROPERTY_USERCMD_PARA	tmpcode/commond.h	24297;"	d
NOTIFY_UNION_SALARY	tmpcode/commond.h	/^const BYTE NOTIFY_UNION_SALARY = 216;$/;"	v
NOTIFY_USER_BODY_POWER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_USER_BODY_POWER_USERCMD_PARA = 182;$/;"	v
NOTIFY_USER_PARY	tmpcode/commond.h	/^const BYTE NOTIFY_USER_PARY = 14;$/;"	v
NOTIFY_WENMING_INFO_PARA	tmpcode/commond.h	/^const BYTE NOTIFY_WENMING_INFO_PARA = 1;$/;"	v
NOT_USED__SAFE_GOLD_STOCK	tmpcode/commond.h	/^	NOT_USED__SAFE_GOLD_STOCK = 2,   \/\/ Ω±“π∫¬Úπ…∆±	$/;"	e	enum:SafeFlagEnum
NOW_PARY	tmpcode/commond.h	/^	NOW_PARY   = 1,   \/\/’˝‘⁄∆Ìµª$/;"	e	enum:__anon298
NOW_STATE_DANCE	tmpcode/commond.h	/^	 NOW_STATE_DANCE,	\/\/’˝‘⁄Ã¯ŒË $/;"	e	enum:__anon294
NOW_STATE_WAITE	tmpcode/commond.h	/^	 NOW_STATE_WAITE,		\/\/¥¶”⁄µ»¥˝$/;"	e	enum:__anon294
NO_ACCOUNT_EXIT	FLServer/UserHttpPub.h	15;"	d
NO_ARMY_GEN	base/Command.h	/^  NO_ARMY_GEN,\/\/ ÊãíÁªùÊàê‰∏∫Â∞ÜÂÜõ$/;"	e	enum:Cmd::__anon118
NO_CONFIRM_SEARCHER	base/Command.h	/^  NO_CONFIRM_SEARCHER \/\/ ‰∏çÂêåÊÑèÊàê‰∏∫Á†îÁ©∂Âëò$/;"	e	enum:Cmd::__anon114
NO_COUNTRY_ALLY	base/Command.h	/^  NO_COUNTRY_ALLY,\/\/ ÊãíÁªùËØ∑Ê±Ç$/;"	e	enum:Cmd::__anon142
NO_DANCE	tmpcode/commond.h	/^        NO_DANCE,               \/\/Õ£÷πÃ¯ŒË$/;"	e	enum:enumDanceType
NO_DRAGON_TYPE	tmpcode/commond.h	/^        NO_DRAGON_TYPE  = 0,    \/\/ø’¿‡–Õ$/;"	e	enum:DRAGON_DATA_TYPE
NO_GOLD	tmpcode/commond.h	/^        NO_GOLD,        \/\/√ª«Æ$/;"	e	enum:__anon343
NO_NOTICE	tmpcode/commond.h	/^	NO_NOTICE = 2,  \/\/Œﬁπ´∏Ê$/;"	e	enum:NoticeState
NO_QUEST	tmpcode/commond.h	/^	NO_QUEST = 1,  \/\/√ª”–Ω”»°—´’¬»ŒŒÒ$/;"	e	enum:TitleState
NO_TASK_DIALOG	ScenesServer/Quest.h	15;"	d
NO_UID_EXIT	FLServer/UserHttpPub.h	14;"	d
NO_UNION_ALLY	tmpcode/commond.h	/^	NO_UNION_ALLY, \/\/ æ‹æ¯«Î«Û$/;"	e	enum:__anon283
NPCDARE_DARE_PARA	base/Command.h	/^const BYTE NPCDARE_DARE_PARA = 1;$/;"	v
NPCDARE_GETGOLD_PARA	base/Command.h	/^const BYTE NPCDARE_GETGOLD_PARA = 2;$/;"	v
NPCDARE_STOPTIMER_PARA	tmpcode/commond.h	/^ const BYTE NPCDARE_STOPTIMER_PARA = 11;$/;"	v
NPCDARE_TIME_PARA	tmpcode/commond.h	/^const BYTE NPCDARE_TIME_PARA					= 10;$/;"	v
NPCDARE_USERCMD	base/CmdType.h	/^const BYTE NPCDARE_USERCMD    = 33;$/;"	v
NPCDARE_USERCMD	tmpcode/commond.h	/^const BYTE NPCDARE_USERCMD						 = 33;$/;"	v
NPCDEATH_USERCMD_PARA	base/Command.h	/^const BYTE NPCDEATH_USERCMD_PARA = 9;$/;"	v
NPCDEATH_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NPCDEATH_USERCMD_PARA = 9;$/;"	v
NPCHP_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE NPCHP_MAPSCREEN_USERCMD_PARA = 53;$/;"	v
NPCLIMIT_MAGIC_ATTACK	tmpcode/commond.h	/^	NPCLIMIT_MAGIC_ATTACK=7,              \/\/ ≤ªø…π•ª˜◊¥Ã¨±ª√‚“ﬂ$/;"	e	enum:__anon353
NPCLIMIT_MAGIC_CHONGFENG	tmpcode/commond.h	/^	NPCLIMIT_MAGIC_CHONGFENG=6,           \/\/ ≥Â∑Ê◊¥Ã¨±ª√‚“ﬂ$/;"	e	enum:__anon353
NPCLIMIT_MAGIC_DEBUFF	tmpcode/commond.h	/^	NPCLIMIT_MAGIC_DEBUFF=11,             \/\/ ∏∫√Ê◊¥Ã¨±ª√‚“ﬂ$/;"	e	enum:__anon353
NPCLIMIT_MAGIC_DOWNSPEED	tmpcode/commond.h	/^	NPCLIMIT_MAGIC_DOWNSPEED=4,           \/\/ ºıÀŸ◊¥Ã¨±ª√‚“ﬂ$/;"	e	enum:__anon353
NPCLIMIT_MAGIC_DREAD	tmpcode/commond.h	/^	NPCLIMIT_MAGIC_DREAD=10,              \/\/ ªÏ¬“◊¥Ã¨±ª√‚“ﬂ$/;"	e	enum:__anon353
NPCLIMIT_MAGIC_FAINT	tmpcode/commond.h	/^	NPCLIMIT_MAGIC_FAINT=5,               \/\/ —£‘Œ◊¥Ã¨±ª√‚“ﬂ$/;"	e	enum:__anon353
NPCLIMIT_MAGIC_ICE	tmpcode/commond.h	/^	NPCLIMIT_MAGIC_ICE=3,                 \/\/ ±˘∂≥◊¥Ã¨±ª√‚“ﬂ $/;"	e	enum:__anon353
NPCLIMIT_MAGIC_MABI	tmpcode/commond.h	/^	NPCLIMIT_MAGIC_MABI=8,                \/\/ ¬È±‘◊¥Ã¨±ª√‚“ﬂ$/;"	e	enum:__anon353
NPCLIMIT_MAGIC_SKILL	tmpcode/commond.h	/^	NPCLIMIT_MAGIC_SKILL=9,               \/\/ ≤ªø… π”√ººƒ‹◊¥Ã¨±ª√‚“ﬂ$/;"	e	enum:__anon353
NPCLIMIT_MAGIC_STILL	tmpcode/commond.h	/^	NPCLIMIT_MAGIC_STILL=1,               \/\/ ∂®…Ì◊¥Ã¨±ª√‚“ﬂ$/;"	e	enum:__anon353
NPCLIMIT_MAGIC_STONE	tmpcode/commond.h	/^	NPCLIMIT_MAGIC_STONE=2,               \/\/  ØªØ◊¥Ã¨±ª√‚“ﬂ$/;"	e	enum:__anon353
NPCLIMIT_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NPCLIMIT_MAGIC_USERCMD_PARA  =45;$/;"	v
NPCMOVE_MOVE_USERCMD_PARA	base/Command.h	/^const BYTE NPCMOVE_MOVE_USERCMD_PARA = 20;$/;"	v
NPCMOVE_MOVE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NPCMOVE_MOVE_USERCMD_PARA = 20;$/;"	v
NPCSTATE_MAKE	base/Command.h	/^  NPCSTATE_MAKE = 100,$/;"	e	enum:Cmd::__anon69
NPC_AI_ATTACK	ScenesServer/SceneNpcAI.h	/^  NPC_AI_ATTACK,\/\/\/Âú®ÊüêËåÉÂõ¥ÂÜÖÊîªÂáª$/;"	e	enum:SceneNpcAIType
NPC_AI_CALL_PET	ScenesServer/SceneNpcAI.h	/^  NPC_AI_CALL_PET,\/\/\/ÊãõÂÆ†Áâ©$/;"	e	enum:SceneNpcAIType
NPC_AI_CHANGE_MAP	ScenesServer/SceneNpcAI.h	/^  NPC_AI_CHANGE_MAP,\/\/\/ÂàáÊç¢Âú∞ÂõæÔºàÂêå‰∏ÄÊúçÂä°Âô®ÂÜÖÔºâ$/;"	e	enum:SceneNpcAIType
NPC_AI_CLEAR	ScenesServer/SceneNpcAI.h	/^  NPC_AI_CLEAR,\/\/\/Ê∏ÖÈô§ËØ•npc$/;"	e	enum:SceneNpcAIType
NPC_AI_DROP_ITEM	ScenesServer/SceneNpcAI.h	/^  NPC_AI_DROP_ITEM,\/\/\/‰∏¢‰∏úË•ø$/;"	e	enum:SceneNpcAIType
NPC_AI_FLEE	ScenesServer/SceneNpcAI.h	/^  NPC_AI_FLEE,\/\/\/ÈÄÉÁ¶ªÁé©ÂÆ∂$/;"	e	enum:SceneNpcAIType
NPC_AI_GO_ON_PATH	ScenesServer/SceneNpcAI.h	/^  NPC_AI_GO_ON_PATH,\/\/\/ÊåâÁÖß‰∏ÄÂÆöË∑ØÁ∫øÁßªÂä®$/;"	e	enum:SceneNpcAIType
NPC_AI_GUARD_ARCHER	ScenesServer/SceneNpcAI.h	/^  NPC_AI_GUARD_ARCHER,\/\/\/ÂºìÂç´$/;"	e	enum:SceneNpcAIType
NPC_AI_GUARD_DOOR	ScenesServer/SceneNpcAI.h	/^  NPC_AI_GUARD_DOOR,\/\/\/Èó®Âç´$/;"	e	enum:SceneNpcAIType
NPC_AI_GUARD_GUARD	ScenesServer/SceneNpcAI.h	/^  NPC_AI_GUARD_GUARD,\/\/\/‰æçÂç´$/;"	e	enum:SceneNpcAIType
NPC_AI_GUARD_PATROL	ScenesServer/SceneNpcAI.h	/^  NPC_AI_GUARD_PATROL,\/\/\/Â∑°ÈÄªÂç´Â£´$/;"	e	enum:SceneNpcAIType
NPC_AI_MOVETO	ScenesServer/SceneNpcAI.h	/^  NPC_AI_MOVETO,\/\/\/ÁßªÂä®Âà∞Êüê‰ΩçÁΩÆ$/;"	e	enum:SceneNpcAIType
NPC_AI_NORMAL	ScenesServer/SceneNpcAI.h	/^  NPC_AI_NORMAL,\/\/\/ÊôÆÈÄöAI$/;"	e	enum:SceneNpcAIType
NPC_AI_PATROL	ScenesServer/SceneNpcAI.h	/^  NPC_AI_PATROL,\/\/\/Â∑°ÈÄª$/;"	e	enum:SceneNpcAIType
NPC_AI_RANDOM_CHAT	ScenesServer/SceneNpcAI.h	/^  NPC_AI_RANDOM_CHAT\/\/\/ÈöèÊú∫ËØ¥ËØù$/;"	e	enum:SceneNpcAIType
NPC_AI_RETURN_TO_REGION	ScenesServer/SceneNpcAI.h	/^  NPC_AI_RETURN_TO_REGION,\/\/\/ÂõûÂà∞Ê¥ªÂä®ËåÉÂõ¥$/;"	e	enum:SceneNpcAIType
NPC_AI_SAY	ScenesServer/SceneNpcAI.h	/^  NPC_AI_SAY,\/\/\/ËØ¥ËØù$/;"	e	enum:SceneNpcAIType
NPC_AI_WAIT	ScenesServer/SceneNpcAI.h	/^  NPC_AI_WAIT,\/\/\/Á≠âÂæÖ,‰ªÄ‰πà‰πü‰∏çÂÅö$/;"	e	enum:SceneNpcAIType
NPC_AI_WARP	ScenesServer/SceneNpcAI.h	/^  NPC_AI_WARP,\/\/\/Âêå‰∏ÄÂú∞ÂõæÂÜÖÁû¨Èó¥ÁßªÂä®$/;"	e	enum:SceneNpcAIType
NPC_ATTACKTYPE_NOHAND	tmpcode/commond.h	/^const WORD NPC_ATTACKTYPE_NOHAND = 375;            \/\/ø’ ÷1 $/;"	v
NPC_ATTACKTYPE_NOHAND2	tmpcode/commond.h	/^const WORD NPC_ATTACKTYPE_NOHAND2 = 376;           \/\/ø’ ÷2 $/;"	v
NPC_ATYPE_ANIMAL	base/zDatabase.h	/^    NPC_ATYPE_ANIMAL    = 6  \/\/\/ ∂ØŒÔ¿‡$/;"	e	enum:__anon31
NPC_ATYPE_FAR	base/zDatabase.h	/^    NPC_ATYPE_FAR    = 2,\/\/\/ ‘∂æ‡¿Îπ•ª˜$/;"	e	enum:__anon31
NPC_ATYPE_MFAR	base/zDatabase.h	/^    NPC_ATYPE_MFAR    = 3,\/\/\/ ∑® ı‘∂≥Ãπ•ª˜$/;"	e	enum:__anon31
NPC_ATYPE_MNEAR	base/zDatabase.h	/^    NPC_ATYPE_MNEAR    = 4,\/\/\/ ∑® ıΩ¸…Ìπ•ª˜$/;"	e	enum:__anon31
NPC_ATYPE_NEAR	base/zDatabase.h	/^    NPC_ATYPE_NEAR    = 1,\/\/\/ Ω¸æ‡¿Îπ•ª˜$/;"	e	enum:__anon31
NPC_ATYPE_NOACTION	base/zDatabase.h	/^    NPC_ATYPE_NOACTION  = 5,    \/\/\/ Œﬁπ•ª˜∂Ø◊˜$/;"	e	enum:__anon31
NPC_BUY_OBJECT	ScenesServer/NpcTrade.h	/^      NPC_BUY_OBJECT    = 1, \/\/\/‰π∞$/;"	e	enum:NpcTrade::__anon162
NPC_CHAT_ON_ATTACK	ScenesServer/SceneNpcAI.h	/^  NPC_CHAT_ON_ATTACK,\/\/\/ÊîªÂáªÊó∂ËØ¥ÁöÑËØù$/;"	e	enum:NpcChatType
NPC_CHAT_ON_BE_HELP	ScenesServer/SceneNpcAI.h	/^  NPC_CHAT_ON_BE_HELP,\/\/\/Âêå‰º¥Êù•Â∏ÆÂä©Êó∂ËØ¥ÁöÑËØù$/;"	e	enum:NpcChatType
NPC_CHAT_ON_DIE	ScenesServer/SceneNpcAI.h	/^  NPC_CHAT_ON_DIE,\/\/\/Ê≠ªÁöÑÊó∂ÂÄôËØ¥ÁöÑËØù$/;"	e	enum:NpcChatType
NPC_CHAT_ON_FIND_ENEMY	ScenesServer/SceneNpcAI.h	/^  NPC_CHAT_ON_FIND_ENEMY = 1,\/\/\/ÂèëÁé∞Êïå‰∫∫$/;"	e	enum:NpcChatType
NPC_CHAT_ON_FLEE	ScenesServer/SceneNpcAI.h	/^  NPC_CHAT_ON_FLEE,\/\/\/ÈÄÉË∑ëÊó∂ËØ¥ÁöÑËØù$/;"	e	enum:NpcChatType
NPC_CHAT_ON_HELP	ScenesServer/SceneNpcAI.h	/^  NPC_CHAT_ON_HELP,\/\/\/Â∏ÆÂä©Âêå‰º¥Êó∂ËØ¥ÁöÑËØù$/;"	e	enum:NpcChatType
NPC_CHAT_ON_HIT	ScenesServer/SceneNpcAI.h	/^  NPC_CHAT_ON_HIT,\/\/\/Ë¢´ÊâìÊó∂ËØ¥ÁöÑËØù$/;"	e	enum:NpcChatType
NPC_CHAT_ON_RETURN	ScenesServer/SceneNpcAI.h	/^  NPC_CHAT_ON_RETURN,\/\/\/ËøΩÈÄêËøîÂõûÊó∂ËØ¥ÁöÑËØù$/;"	e	enum:NpcChatType
NPC_CHAT_RANDOM	ScenesServer/SceneNpcAI.h	/^  NPC_CHAT_RANDOM    \/\/\/ÈöèÊú∫ËØ¥ËØù$/;"	e	enum:NpcChatType
NPC_CHAT_USERCMD_PARA	tmpcode/commond.h	19285;"	d
NPC_COMPOSEITEM_PROPERTY_USERCMD_PARA	tmpcode/commond.h	4476;"	d
NPC_DECOMPOSE_OBJECT	ScenesServer/NpcTrade.h	/^      NPC_DECOMPOSE_OBJECT = 1024,\/\/ÂàÜËß£$/;"	e	enum:NpcTrade::__anon162
NPC_DOACTION_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NPC_DOACTION_USERCMD_PARA = 89;$/;"	v
NPC_EMOTE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NPC_EMOTE_USERCMD_PARA = 97;$/;"	v
NPC_ENCHANCE_OBJECT	ScenesServer/NpcTrade.h	/^      NPC_ENCHANCE_OBJECT = 64,\/\/Èï∂Âµå$/;"	e	enum:NpcTrade::__anon162
NPC_HOLE_OBJECT	ScenesServer/NpcTrade.h	/^      NPC_HOLE_OBJECT = 256,\/\/ÊâìÂ≠î$/;"	e	enum:NpcTrade::__anon162
NPC_KILL	ScenesServer/script.h	/^    NPC_KILL = 2,$/;"	e	enum:ScriptQuest::__anon169
NPC_LIFE_TIME_COUNT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NPC_LIFE_TIME_COUNT_USERCMD_PARA = 98;$/;"	v
NPC_MAKE_OBJECT	ScenesServer/NpcTrade.h	/^      NPC_MAKE_OBJECT    = 8, \/\/\/ÊâìÈÄ†$/;"	e	enum:NpcTrade::__anon162
NPC_MERGE_OBJECT	ScenesServer/NpcTrade.h	/^      NPC_MERGE_OBJECT  = 32, \/\/\/ÂêàÊàê$/;"	e	enum:NpcTrade::__anon162
NPC_MERGE_SOUL_OBJECT	ScenesServer/NpcTrade.h	/^      NPC_MERGE_SOUL_OBJECT = 128,\/\/È≠ÇÈ≠ÑÂêàÊàê$/;"	e	enum:NpcTrade::__anon162
NPC_REPAIR_OBJECT	ScenesServer/NpcTrade.h	/^      NPC_REPAIR_OBJECT  = 4, \/\/\/‰øÆÁêÜ$/;"	e	enum:NpcTrade::__anon162
NPC_SELL_OBJECT	ScenesServer/NpcTrade.h	/^      NPC_SELL_OBJECT    = 2, \/\/\/Âçñ$/;"	e	enum:NpcTrade::__anon162
NPC_STORE_OBJECT	ScenesServer/NpcTrade.h	/^      NPC_STORE_OBJECT = 512,\/\/‰ªìÂ∫ì$/;"	e	enum:NpcTrade::__anon162
NPC_TYPE_ABERRANCE	base/zDatabase.h	/^    NPC_TYPE_ABERRANCE  = 14,\/\/\/ ±‰“Ï¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_AGGRANDIZEMENT	base/zDatabase.h	/^    NPC_TYPE_AGGRANDIZEMENT = 13,\/\/\/ «øªØ¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_ANIMON	base/zDatabase.h	/^    NPC_TYPE_ANIMON   = 33,   \/\/\/ ∂ØŒÔ¿‡π÷ŒÔ$/;"	e	enum:__anon30
NPC_TYPE_AUCTION	base/zDatabase.h	/^    NPC_TYPE_AUCTION  =25,\/\/\/≈ƒ¬Ùπ‹¿Ì‘±$/;"	e	enum:__anon30
NPC_TYPE_BACKBONE	base/zDatabase.h	/^    NPC_TYPE_BACKBONE  = 4,\/\/\/ æ´”¢¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_BACKBONEBUG	base/zDatabase.h	/^    NPC_TYPE_BACKBONEBUG= 10,\/\/\/ æ´π÷¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_BANNER	base/zDatabase.h	/^    NPC_TYPE_BANNER    = 22,\/\/\/ ∆Ï÷ƒ¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_BARRACKS	base/zDatabase.h	/^    NPC_TYPE_BARRACKS = 40, \/\/\/ ±¯”™$/;"	e	enum:__anon30
NPC_TYPE_BBOSS	base/zDatabase.h	/^    NPC_TYPE_BBOSS    = 2,\/\/\/ ¥ÛBoss¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_CAMP	base/zDatabase.h	/^    NPC_TYPE_CAMP = 41,		\/\/\/ ª˘µÿ$/;"	e	enum:__anon30
NPC_TYPE_CARTOONPET	base/zDatabase.h	/^    NPC_TYPE_CARTOONPET = 30,\/\/\/ ÃÊ…Ì±¶±¶$/;"	e	enum:__anon30
NPC_TYPE_DUCKHIT	base/zDatabase.h	/^    NPC_TYPE_DUCKHIT  = 21,\/\/\/ ∂◊œ¬≤≈ƒ‹¥Úµƒnpc$/;"	e	enum:__anon30
NPC_TYPE_FIGHTPET	base/zDatabase.h	/^    NPC_TYPE_FIGHTPET	= 37, \/\/\/’Ω∂∑≥ËŒÔ$/;"	e	enum:__anon30
NPC_TYPE_GHOST	base/zDatabase.h	/^    NPC_TYPE_GHOST	= 999,  \/\/\/ ‘™…Ò¿‡NPC$/;"	e	enum:__anon30
NPC_TYPE_GOLD	base/zDatabase.h	/^    NPC_TYPE_GOLD    = 5,\/\/\/ ª∆Ω¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_GOTO	base/zDatabase.h	/^    NPC_TYPE_GOTO	= 34,	\/\/\/¥´ÀÕµ„$/;"	e	enum:__anon30
NPC_TYPE_GUARD	base/zDatabase.h	/^    NPC_TYPE_GUARD    = 8,\/\/\/  ø±¯¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_HUMAN	base/zDatabase.h	/^    NPC_TYPE_HUMAN    = 0,\/\/\/»À–Õ$/;"	e	enum:__anon30
NPC_TYPE_LBOSS	base/zDatabase.h	/^    NPC_TYPE_LBOSS    = 3,\/\/\/ –°Boss¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_LIVENPC	base/zDatabase.h	/^    NPC_TYPE_LIVENPC  = 20,\/\/\/ …˙ªÓnpc£®≤ª’Ω∂∑£¨π•≥« ±œ˚ ß£©$/;"	e	enum:__anon30
NPC_TYPE_MAILBOX	base/zDatabase.h	/^    NPC_TYPE_MAILBOX  =24,\/\/\/” œ‰$/;"	e	enum:__anon30
NPC_TYPE_MOBILETRADE	base/zDatabase.h	/^    NPC_TYPE_MOBILETRADE  = 19,\/\/\/ ¡˜¿À–°∑∑$/;"	e	enum:__anon30
NPC_TYPE_NORMAL	base/zDatabase.h	/^    NPC_TYPE_NORMAL    = 1,\/\/\/ ∆’Õ®¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_PBOSS	base/zDatabase.h	/^    NPC_TYPE_PBOSS = 31,\/\/\/ ◊œ…´BOSS$/;"	e	enum:__anon30
NPC_TYPE_PET	base/zDatabase.h	/^    NPC_TYPE_PET    = 9,\/\/\/ ≥ËŒÔ¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_RESOURCE	base/zDatabase.h	/^    NPC_TYPE_RESOURCE = 32, \/\/\/ ◊ ‘¥¿‡NPC$/;"	e	enum:__anon30
NPC_TYPE_RESUR	base/zDatabase.h	/^    NPC_TYPE_RESUR  = 35,	\/\/\/∏¥ªÓµ„$/;"	e	enum:__anon30
NPC_TYPE_RIDE	base/zDatabase.h	/^    NPC_TYPE_RIDE		= 38, \/\/\/◊¯∆Ô$/;"	e	enum:__anon30
NPC_TYPE_ROADSIGN	base/zDatabase.h	/^    NPC_TYPE_ROADSIGN  = 16,\/\/\/ ¬∑±Í¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_SOLDIER	base/zDatabase.h	/^    NPC_TYPE_SOLDIER  =27,\/\/\/ ø±¯£¨÷ªπ•ª˜Õ‚π˙»À$/;"	e	enum:__anon30
NPC_TYPE_STORAGE	base/zDatabase.h	/^    NPC_TYPE_STORAGE  = 15,\/\/\/ ≤÷ø‚¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_SUMMONS	base/zDatabase.h	/^    NPC_TYPE_SUMMONS  = 11,\/\/\/ ’ŸªΩ¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_SURFACE	base/zDatabase.h	/^    NPC_TYPE_SURFACE = 29,\/\/\/ µÿ±Ì¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_TASK	base/zDatabase.h	/^    NPC_TYPE_TASK    = 7,\/\/\/ »ŒŒÒ¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_TOTEM	base/zDatabase.h	/^    NPC_TYPE_TOTEM    = 12,\/\/\/ ÕºÃ⁄¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_TRADE	base/zDatabase.h	/^    NPC_TYPE_TRADE    = 6,\/\/\/ ¬Ú¬Ù¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_TRAP	base/zDatabase.h	/^    NPC_TYPE_TRAP    = 23,\/\/\/ œ›⁄Â¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_TREASURE	base/zDatabase.h	/^    NPC_TYPE_TREASURE  = 17,\/\/\/ ±¶œ‰¿‡–Õ$/;"	e	enum:__anon30
NPC_TYPE_TURRET	base/zDatabase.h	/^    NPC_TYPE_TURRET	= 39, \/\/\/ ≈⁄À˛$/;"	e	enum:__anon30
NPC_TYPE_UNFIGHTPET	base/zDatabase.h	/^    NPC_TYPE_UNFIGHTPET	= 36, \/\/\/∑«’Ω∂∑≥ËŒÔ$/;"	e	enum:__anon30
NPC_TYPE_UNIONATTACKER	base/zDatabase.h	/^    NPC_TYPE_UNIONATTACKER  =28,\/\/\/π•∑Ω ø±¯$/;"	e	enum:__anon30
NPC_TYPE_UNIONGUARD	base/zDatabase.h	/^    NPC_TYPE_UNIONGUARD  =26,\/\/\/∞Ôª· ÿŒ¿$/;"	e	enum:__anon30
NPC_TYPE_WILDHORSE	base/zDatabase.h	/^    NPC_TYPE_WILDHORSE  = 18,\/\/\/ “∞¬Ì¿‡–Õ$/;"	e	enum:__anon30
NPC_UPDATE_OBJECT	ScenesServer/NpcTrade.h	/^      NPC_UPDATE_OBJECT  = 16, \/\/\/ÊîπÈÄ†$/;"	e	enum:NpcTrade::__anon162
NPC_UPGRADE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  NPC_UPGRADE_PROPERTY_USERCMD_PARA = 131;$/;"	v
NPC_VISIT	ScenesServer/script.h	/^    NPC_VISIT = 1,$/;"	e	enum:ScriptQuest::__anon169
NPCdataID	tmpcode/commond.h	/^	DWORD NPCdataID; \/\/NPCID$/;"	m	struct:st_CharShow2
NULLPASSWD	tmpcode/commond.h	/^const DWORD NULLPASSWD = 0xFFFFFFFE;$/;"	v
NULL_USERCMD	base/CmdType.h	/^const BYTE NULL_USERCMD      = 0;$/;"	v
NULL_USERCMD	tmpcode/commond.h	/^const BYTE NULL_USERCMD			  = 0;$/;"	v
NULL_USERCMD_PARA	base/NullUserCmd.h	/^const BYTE NULL_USERCMD_PARA = 0;$/;"	v
NULL_USERCMD_PARA	tmpcode/commond.h	/^const BYTE NULL_USERCMD_PARA = 0;$/;"	v
NUM_WEAK_KEY	base/EncDec/mydes.cpp	539;"	d
NameAndScore	tmpcode/commond.h	/^		NameAndScore()$/;"	f	struct:stReturnScoreListZhenxuanUserCmd::NameAndScore
NameAndScore	tmpcode/commond.h	/^	struct NameAndScore$/;"	s	struct:stReturnScoreListZhenxuanUserCmd
NameAndScore	tmpcode/commond.h	/^                NameAndScore()$/;"	f	struct:stReturnScoreListLuoRiUserCmd::NameAndScore
NameAndScore	tmpcode/commond.h	/^        struct NameAndScore$/;"	s	struct:stReturnScoreListLuoRiUserCmd
NeedMaterial	tmpcode/commond.h	/^	NeedMaterial()$/;"	f	struct:NeedMaterial
NeedMaterial	tmpcode/commond.h	/^struct NeedMaterial$/;"	s
NetInfo_multimap	roleChangeServer/ChangeTask.h	/^	typedef std::multimap<const NetType, ChangeTask *> NetInfo_multimap;$/;"	t	class:RoleContainer
NetServiceType	BillServer/BillClient.h	/^typedef NetType NetServiceType;$/;"	t
NetType	base/NetType.h	/^enum NetType$/;"	g
NetType_far	base/NetType.h	/^	NetType_far = 1			\/\/ËøúÁ´ØË∑ØÁî±ÔºåÁîµ‰ø°Âå∫ËøûÊé•ÁΩëÈÄöÔºåÁΩëÈÄöÂå∫ËøûÊé•Áîµ‰ø°$/;"	e	enum:NetType
NetType_near	base/NetType.h	/^	NetType_near = 0,		\/\/ËøëÁ´ØË∑ØÁî±ÔºåÁîµ‰ø°Âå∫ËøûÊé•Áîµ‰ø°ÔºåÁΩëÈÄöÂå∫ËøûÊé•ÁΩëÈÄö$/;"	e	enum:NetType
NetUser_multimap	FLServer/UserTask.h	/^	typedef std::multimap<const NetType, UserTask*> NetUser_multimap;$/;"	t	class:UserContainer
NewBoxSendObj	tmpcode/commond.h	/^	NewBoxSendObj()$/;"	f	struct:NewBoxSendObj
NewBoxSendObj	tmpcode/commond.h	/^struct NewBoxSendObj$/;"	s
NewGlobalVar	ScenesServer/Quest.h	/^typedef GlobalVarImpl<7> NewGlobalVar;$/;"	t
NewLeaderName	base/SessionCommand.h	/^		char NewLeaderName[MAX_NAMESIZE];			\/\/\/ ËÆæÁΩÆ‰∏∫ÈòüÈïøÁöÑ‰∫∫Áâ©ID$/;"	m	struct:Cmd::Session::t_Team_ChangeLeader
NewZoneVec	ScenesServer/SceneManager.h	/^    typedef std::vector<std::pair<DWORD,DWORD> > NewZoneVec;$/;"	t	class:SceneManager
NewbieGiftItem	tmpcode/commond.h	/^struct NewbieGiftItem$/;"	s
NewbieLimit	SessionServer/NewbieLimit.cpp	/^NewbieLimit::NewbieLimit(void)$/;"	f	class:NewbieLimit
NewbieLimit	SessionServer/NewbieLimit.h	/^class NewbieLimit$/;"	c
NineScreen_map	GatewayServer/ScreenIndex.h	/^	typedef __gnu_cxx::hash_map<DWORD,zPosIVector> NineScreen_map;$/;"	t	class:ScreenIndex
NineScreen_map	ScenesServer/zSceneEntryIndex.h	/^    typedef __gnu_cxx::hash_map<DWORD,zPosIVector> NineScreen_map;$/;"	t	class:zSceneEntryIndex
NineScreen_map_const_iter	ScenesServer/zSceneEntryIndex.h	/^    typedef NineScreen_map::const_iterator NineScreen_map_const_iter;$/;"	t	class:zSceneEntryIndex
NineScreen_map_iter	GatewayServer/ScreenIndex.h	/^	typedef NineScreen_map::iterator NineScreen_map_iter;$/;"	t	class:ScreenIndex
NineScreen_map_iter	ScenesServer/zSceneEntryIndex.h	/^    typedef NineScreen_map::iterator NineScreen_map_iter;$/;"	t	class:zSceneEntryIndex
NineScreen_map_value_type	GatewayServer/ScreenIndex.h	/^	typedef NineScreen_map::value_type NineScreen_map_value_type;$/;"	t	class:ScreenIndex
NineScreen_map_value_type	ScenesServer/zSceneEntryIndex.h	/^    typedef NineScreen_map::value_type NineScreen_map_value_type;$/;"	t	class:zSceneEntryIndex
NoticeState	tmpcode/commond.h	/^enum NoticeState  \/\/≤º∏Ê◊¥Ã¨$/;"	g
Notify1Action	ScenesServer/QuestAction.h	/^  Notify1Action(ScenesParser& p) : TeamAction(p)$/;"	f	class:Notify1Action
Notify1Action	ScenesServer/QuestAction.h	/^class Notify1Action : public TeamAction$/;"	c
NotifyAction	ScenesServer/QuestAction.h	/^  NotifyAction(ScenesParser& p) : TeamAction(p)$/;"	f	class:NotifyAction
NotifyAction	ScenesServer/QuestAction.h	/^class NotifyAction : public TeamAction$/;"	c
NpcAIController	ScenesServer/SceneNpcAI.cpp	/^NpcAIController::NpcAIController(SceneNpc * sn)$/;"	f	class:NpcAIController
NpcAIController	ScenesServer/SceneNpcAI.h	/^class NpcAIController$/;"	c
NpcAIDefineVec	ScenesServer/SceneNpcAI.h	/^typedef std::vector<t_NpcAIDefine> NpcAIDefineVec;$/;"	t
NpcAIFlag	ScenesServer/SceneNpcAI.h	/^enum NpcAIFlag$/;"	g
NpcBase	base/zDatabase.h	/^struct NpcBase$/;"	s
NpcCarryObject	base/zDatabase.h	/^    NpcCarryObject() {};$/;"	f	struct:NpcCarryObject
NpcCarryObject	base/zDatabase.h	/^struct NpcCarryObject : private zNoncopyable$/;"	s
NpcChatType	ScenesServer/SceneNpcAI.h	/^enum NpcChatType$/;"	g
NpcCommonChatRate	ScenesServer/SceneNpcManager.h	/^    std::map<DWORD,int> NpcCommonChatRate;$/;"	m	class:SceneNpcManager
NpcCommonChatTable	ScenesServer/SceneNpcManager.h	/^    std::map<DWORD,std::vector<std::string> > NpcCommonChatTable;$/;"	m	class:SceneNpcManager
NpcDefineVector	ScenesServer/SceneDefine.h	/^typedef std::vector<t_NpcDefine> NpcDefineVector;$/;"	t
NpcDialog	ScenesServer/NpcTrade.h	/^      NpcDialog()$/;"	f	struct:NpcTrade::NpcDialog
NpcDialog	ScenesServer/NpcTrade.h	/^      NpcDialog(const NpcDialog& nd)$/;"	f	struct:NpcTrade::NpcDialog
NpcDialog	ScenesServer/NpcTrade.h	/^    struct NpcDialog$/;"	s	class:NpcTrade
NpcDialogMultiMap	ScenesServer/NpcTrade.h	/^    typedef __gnu_cxx::hash_multimap<DWORD,NpcDialog> NpcDialogMultiMap;$/;"	t	class:NpcTrade
NpcHpHashmap	ScenesServer/SceneNpc.h	/^  typedef std::map<DWORD,t_expRec> NpcHpHashmap;$/;"	t	class:SceneNpc
NpcHpHashmap_const_iterator	ScenesServer/SceneNpc.h	/^  typedef NpcHpHashmap::const_iterator NpcHpHashmap_const_iterator;$/;"	t	class:SceneNpc
NpcHpHashmap_iterator	ScenesServer/SceneNpc.h	/^  typedef NpcHpHashmap::iterator NpcHpHashmap_iterator;$/;"	t	class:SceneNpc
NpcHpHashmap_pair	ScenesServer/SceneNpc.h	/^  typedef NpcHpHashmap::value_type NpcHpHashmap_pair;$/;"	t	class:SceneNpc
NpcItem	ScenesServer/NpcTrade.h	/^      NpcItem()$/;"	f	struct:NpcTrade::NpcItem
NpcItem	ScenesServer/NpcTrade.h	/^    struct NpcItem$/;"	s	class:NpcTrade
NpcItemMultiMap	ScenesServer/NpcTrade.h	/^    typedef __gnu_cxx::hash_multimap<DWORD,NpcItem> NpcItemMultiMap;$/;"	t	class:NpcTrade
NpcLostObject	base/zDatabase.h	/^typedef std::vector<CarryObject> NpcLostObject;$/;"	t
NpcTrade	ScenesServer/NpcTrade.h	/^    NpcTrade() {};$/;"	f	class:NpcTrade
NpcTrade	ScenesServer/NpcTrade.h	/^class NpcTrade$/;"	c
OBJECTACTION_DROP	base/Command.h	/^    OBJECTACTION_DROP,\/\/\/ ÊéâËêΩÁâ©ÂìÅ$/;"	e	enum:Cmd::__anon78
OBJECTACTION_DROP	tmpcode/commond.h	/^        OBJECTACTION_DROP,              \/\/\/ µÙ¬‰ŒÔ∆∑$/;"	e	enum:__anon279
OBJECTACTION_UPDATE	base/Command.h	/^      OBJECTACTION_UPDATE,\/\/\/ Êõ¥Êñ∞Áâ©ÂìÅÊï∞ÊçÆ$/;"	e	enum:Cmd::__anon78
OBJECTACTION_UPDATE	tmpcode/commond.h	/^        OBJECTACTION_UPDATE,            \/\/\/ ∏¸–¬ŒÔ∆∑ ˝æ›$/;"	e	enum:__anon279
OBJECTCELLTYPE_BANK	base/Command.h	/^  OBJECTCELLTYPE_BANK,\/\/\/ Èì∂Ë°å$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_COMMON	base/Command.h	/^  OBJECTCELLTYPE_COMMON,\/\/\/ ÊôÆÈÄöÁâ©ÂìÅÊ†ºÂ≠ê$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_COUNTRY_SAVEBOX	base/Command.h	/^  OBJECTCELLTYPE_COUNTRY_SAVEBOX,\/\/\/ ÂõΩÂÆ∂ÂÄâÂ∫ì$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_EQUIP	base/Command.h	/^  OBJECTCELLTYPE_EQUIP,\/\/\/ Ë£ÖÂ§á$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_EQUIPSHOW	base/Command.h	/^  OBJECTCELLTYPE_EQUIPSHOW,\/\/\/ ÈùûËá™Â∑±Á©øÁùÄÁöÑË£ÖÂ§á$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_MAIL	base/Command.h	/^  OBJECTCELLTYPE_MAIL,\/\/\/ ÈÇÆ‰ª∂Á≥ªÁªüÁöÑÊ†ºÂ≠ê$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_MAKE	base/Command.h	/^  OBJECTCELLTYPE_MAKE,\/\/\/ ÂêàÊàê„ÄÅÂçáÁ∫ßÔºåÈï∂ÂµåÁöÑÊ†ºÂ≠ê$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_MOUSE	base/Command.h	/^  OBJECTCELLTYPE_MOUSE,\/\/\/ Èº†Ê†á$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_MYSHOP	base/Command.h	/^  OBJECTCELLTYPE_MYSHOP,\/\/\/ Ëá™Â∑±Êëä‰ΩçÁöÑÊ†ºÂ≠ê$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_NONE	base/Command.h	/^  OBJECTCELLTYPE_NONE,\/\/\/ ‰∏çÊòØÊ†ºÂ≠êÔºåÁî®‰∫é‰∏¢ÂºÉÊàñÊç°Âà∞Áâ©ÂìÅ$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_OTHERSSHOP	base/Command.h	/^  OBJECTCELLTYPE_OTHERSSHOP,\/\/\/ Âà´ÁöÑÁé©ÂÆ∂Êëä‰ΩçÁöÑÊ†ºÂ≠ê$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_OTHERTRADE	base/Command.h	/^  OBJECTCELLTYPE_OTHERTRADE,\/\/\/ ÂØπÊñπÁöÑ‰∫§ÊòìÊ†ºÂ≠ê$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_PACKAGE	base/Command.h	/^  OBJECTCELLTYPE_PACKAGE,\/\/\/ ÂåÖË£πÁöÑÊ†ºÂ≠ê$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_PET	base/Command.h	/^  OBJECTCELLTYPE_PET,\/\/\/ ÂÆ†Áâ©ÂåÖË£π$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_SELL	base/Command.h	/^  OBJECTCELLTYPE_SELL,\/\/\/ Âçñ$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_STORE	base/Command.h	/^  OBJECTCELLTYPE_STORE,\/\/\/ ‰ªìÂ∫ì$/;"	e	enum:Cmd::__anon88
OBJECTCELLTYPE_TRADE	base/Command.h	/^  OBJECTCELLTYPE_TRADE,\/\/\/ Ëá™Â∑±ÁöÑ‰∫§ÊòìÊ†ºÂ≠ê$/;"	e	enum:Cmd::__anon88
OBJECT_EXCHANGE	tmpcode/commond.h	/^const BYTE OBJECT_EXCHANGE = 234;$/;"	v
OBJECT_EXP_USERCMD_PARA	base/Command.h	/^const BYTE OBJECT_EXP_USERCMD_PARA = 22;$/;"	v
OBJECT_EXP_USERCMD_PARA	tmpcode/commond.h	/^const BYTE OBJECT_EXP_USERCMD_PARA = 22;$/;"	v
OBJECT_HPMP_POP_PARA	base/Command.h	/^const BYTE OBJECT_HPMP_POP_PARA = 11;$/;"	v
OBJECT_HPMP_POP_PARA	tmpcode/commond.h	/^const BYTE OBJECT_HPMP_POP_PARA = 11;$/;"	v
OBJECT_LURE_BUYFROMMARKET	base/Object.h	610;"	d
OBJECT_LURE_JingJie	base/Object.h	612;"	d
OBJECT_LURE_MADED	base/Object.h	611;"	d
OBJMODE_TEAMMEMBER_USERCMD_PARA	base/Command.h	3691;"	d
OBJMODE_TEAMMEMBER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE OBJMODE_TEAMMEMBER_USERCMD_PARA = 17;$/;"	v
OBJS	BillServer/Makefile	/^OBJS = \\$/;"	m
OBJS	FLServer/Makefile	/^OBJS = FLServer.o ServerTask.o ServerManager.o TimeTick.o \\$/;"	m
OBJS	GatewayServer/Makefile	/^OBJS = \\$/;"	m
OBJS	RecordServer/Makefile	/^OBJS = \\$/;"	m
OBJS	Robot/Makefile	/^OBJS = \\$/;"	m
OBJS	ScenesServer/Makefile	/^OBJS = \\$/;"	m
OBJS	SessionServer/Makefile	/^OBJS = \\$/;"	m
OBJS	SuperServer/Makefile	/^OBJS = \\$/;"	m
OBJS	base/EncDec/Makefile	/^OBJS = EncDec.o myrc5.o mydes.o $/;"	m
OBJS	base/Makefile	/^OBJS = zArg.o zConfile.o Zebra.o zLogger.o zMetaData.o zMysqlDBConnPool.o zNetService.o zProperties.o zRegex.o zService.o zSocket.o zSubNetService.o zTCPClient.o zTCPClientTask.o zTCPClientTaskPool.o zTCPServer.o zTCPTask.o zTCPTaskPool.o zThread.o zTime.o zXMLParser.o zMTCPServer.o zMNetService.o ServerACL.o zXML.o zDatabaseManager.o zDatabase.o SaveObject.o$/;"	m
OBJS	roleChangeServer/Makefile	/^OBJS = ChangeTask.o roleChangeServer.o$/;"	m
OBJS	roleRegServer/Makefile	/^OBJS = RoleTask.o roleRegServer.o$/;"	m
OBJ_DROP	ScenesServer/script.h	/^    OBJ_DROP = 16,$/;"	e	enum:ScriptQuest::__anon169
OBJ_GET	ScenesServer/script.h	/^    OBJ_GET = 8,$/;"	e	enum:ScriptQuest::__anon169
OBJ_GOLD_NEWUSER	tmpcode/commond.h	/^	OBJ_GOLD_NEWUSER = 16, \/\/–¬ ÷ø®$/;"	e	enum:__anon318
OBJ_GOLD_OBJECT	base/Command.h	/^  OBJ_GOLD_OBJECT = 2,\/\/ÈÄÅÈáëËâ≤Ë£ÖÂ§á$/;"	e	enum:Cmd::__anon134
OBJ_GOLD_OBJECT	tmpcode/commond.h	/^	OBJ_GOLD_OBJECT = 2,\/\/ÀÕΩ…´◊∞±∏$/;"	e	enum:__anon318
OBJ_GOLD_STONE	base/Command.h	/^  OBJ_GOLD_STONE = 1,\/\/ÈÄÅÁ≤æËá¥ÂçáÁ∫ßÂÆùÁü≥$/;"	e	enum:Cmd::__anon134
OBJ_GOLD_STONE	tmpcode/commond.h	/^	OBJ_GOLD_STONE = 1,\/\/ÀÕæ´÷¬…˝º∂±¶ Ø$/;"	e	enum:__anon318
OBJ_GREEN_OBJECT	base/Command.h	/^  OBJ_GREEN_OBJECT = 3,\/\/ÈÄÅÁ•ûÂú£Ë£ÖÂ§á$/;"	e	enum:Cmd::__anon134
OBJ_GREEN_OBJECT	tmpcode/commond.h	/^	OBJ_GREEN_OBJECT = 3,\/\/ÀÕ…Ò •◊∞±∏$/;"	e	enum:__anon318
OBJ_TYPE_BED	tmpcode/commond.h	/^    OBJ_TYPE_BED            = 7,    \/\/¥≤$/;"	e	enum:HouseObjType
OBJ_TYPE_CHEST	tmpcode/commond.h	/^    OBJ_TYPE_CHEST          = 8,    \/\/“¬πÒ$/;"	e	enum:HouseObjType
OBJ_TYPE_DESK	tmpcode/commond.h	/^    OBJ_TYPE_DESK           = 14,   \/\/ È◊¿$/;"	e	enum:HouseObjType
OBJ_TYPE_FIREPLACE	tmpcode/commond.h	/^    OBJ_TYPE_FIREPLACE      = 4,    \/\/±⁄¬Ø$/;"	e	enum:HouseObjType
OBJ_TYPE_LINQI_STORE	tmpcode/commond.h	/^    OBJ_TYPE_LINQI_STORE    = 13,   \/\/¡È∆˜÷¸≤ÿπÒ$/;"	e	enum:HouseObjType
OBJ_TYPE_MAX	tmpcode/commond.h	/^    OBJ_TYPE_MAX            = 22,  \/\/◊Ó¥Û≤ª π”√$/;"	e	enum:HouseObjType
OBJ_TYPE_ORNAMENTAL	tmpcode/commond.h	/^    OBJ_TYPE_ORNAMENTAL     = 6,    \/\/◊∞ ŒŒÔ                $/;"	e	enum:HouseObjType
OBJ_TYPE_PRIVATE_CASE	tmpcode/commond.h	/^    OBJ_TYPE_PRIVATE_CASE   = 9,    \/\/ÀΩ»Àœ‰◊” (∏ˆ»À¥¢≤ÿπÒ)$/;"	e	enum:HouseObjType
OBJ_TYPE_SELLER	tmpcode/commond.h	/^    OBJ_TYPE_SELLER         = 15,   \/\/∑∑¬ÙπÒ$/;"	e	enum:HouseObjType
OBJ_TYPE_STORE	tmpcode/commond.h	/^    OBJ_TYPE_STORE          = 2,    \/\/¥¢≤ÿπÒ (π´”√¥¢≤ÿπÒ)$/;"	e	enum:HouseObjType
OBJ_TYPE_TRANSPORT	tmpcode/commond.h	/^    OBJ_TYPE_TRANSPORT      = 3,    \/\/¥´ÀÕ’Û$/;"	e	enum:HouseObjType
OBJ_TYPE_VASE	tmpcode/commond.h	/^    OBJ_TYPE_VASE           = 5,    \/\/ª®∆ø$/;"	e	enum:HouseObjType
OBJ_TYPE_WORKTABLE	tmpcode/commond.h	/^    OBJ_TYPE_WORKTABLE      = 1,    \/\/π§◊˜Ã®$/;"	e	enum:HouseObjType
OBJ_USE	ScenesServer/script.h	/^    OBJ_USE = 4,$/;"	e	enum:ScriptQuest::__anon169
OBSERVE_FIREPLACE_USER_CMD	tmpcode/commond.h	/^const BYTE OBSERVE_FIREPLACE_USER_CMD = 45;$/;"	v
OBSERVE_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE OBSERVE_QUESTROOM_PARA = 7;$/;"	v
OBTAINEXP_USERCMD_PARA	base/Command.h	/^const BYTE OBTAINEXP_USERCMD_PARA = 8;$/;"	v
OBTAINEXP_USERCMD_PARA	tmpcode/commond.h	/^const BYTE OBTAINEXP_USERCMD_PARA = 8;$/;"	v
OFF	base/zLogger.h	/^	    static const zLevel * OFF;$/;"	m	class:zLogger::zLevel
OFFICIAL_BUTOU	tmpcode/commond.h	/^        OFFICIAL_BUTOU,                 \/\/≤∂Õ∑----∂‘”¶ÕÚÕıΩ´æ¸$/;"	e	enum:OfficialPosition
OFFICIAL_GUIZU	tmpcode/commond.h	/^	    OFFICIAL_GUIZU,                \/\/ÕÚÕı–¬ÃÌπÛ◊Â$/;"	e	enum:OfficialPosition
OFFICIAL_GUOWANG	tmpcode/commond.h	/^        OFFICIAL_GUOWANG = 1,   \/\/π˙Õı-----∂‘”¶ÕÚÕıΩÁÕı$/;"	e	enum:OfficialPosition
OFFICIAL_KEJI	tmpcode/commond.h	/^        OFFICIAL_KEJI,                  \/\/ø∆ºº----ÕÚÕı‘›Œﬁ∂‘”¶$/;"	e	enum:OfficialPosition
OFFICIAL_USERCMD	tmpcode/commond.h	/^const BYTE OFFICIAL_USERCMD			= 67;$/;"	v
OFFICIAL_YUANSHUAI	tmpcode/commond.h	/^        OFFICIAL_YUANSHUAI,             \/\/‘™Àß----∂‘”¶ÕÚÕı¥Û‘™Àß$/;"	e	enum:OfficialPosition
OFFICIAL_YUSHI	tmpcode/commond.h	/^        OFFICIAL_YUSHI,                 \/\/”˘ ∑----∂‘”¶ÕÚÕı¥Û≥º$/;"	e	enum:OfficialPosition
OFFICIAL_ZAIXIANG	tmpcode/commond.h	/^        OFFICIAL_ZAIXIANG,              \/\/‘◊œ‡----∂‘”¶ÕÚÕı÷¥’˛πŸ$/;"	e	enum:OfficialPosition
OFFLINE_LTQ_PARA	tmpcode/commond.h	24502;"	d
OK_RELIVE_USERCMD_PARA	base/Command.h	/^const BYTE OK_RELIVE_USERCMD_PARA = 3;$/;"	v
OK_RELIVE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE OK_RELIVE_USERCMD_PARA = 3;$/;"	v
ONEROOMALLINFO_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE ONEROOMALLINFO_QUESTROOM_PARA = 16;$/;"	v
ONLINE_LTQ_PARA	tmpcode/commond.h	24488;"	d
ONOFF_RECEIVE_TLQ_PARA	tmpcode/commond.h	24655;"	d
OPENWINDOW_CHANNEL_USERCMD_PARA	tmpcode/commond.h	12483;"	d
OPEN_BOX_USERCMD	tmpcode/commond.h	21096;"	d
OPEN_FARM_PARA	tmpcode/commond.h	/^const BYTE OPEN_FARM_PARA = 12;$/;"	v
OPEN_HELP_PARA	tmpcode/commond.h	/^const BYTE OPEN_HELP_PARA = 6;$/;"	v
OPEN_MAGICFROGE_OBJECT	tmpcode/commond.h	/^const BYTE OPEN_MAGICFROGE_OBJECT = 211;$/;"	v
OPEN_MAIL_PARA	base/Command.h	/^const BYTE OPEN_MAIL_PARA = 7;$/;"	v
OPEN_MAIL_PARA	tmpcode/commond.h	/^const BYTE OPEN_MAIL_PARA = 7;$/;"	v
OPEN_MARRIAGE_PRESS_PARA	tmpcode/commond.h	/^const BYTE OPEN_MARRIAGE_PRESS_PARA = 28;$/;"	v
OPEN_MARRY_SET_PARA	tmpcode/commond.h	/^const BYTE OPEN_MARRY_SET_PARA = 27;$/;"	v
OPEN_MARRY_STATE_PARA	tmpcode/commond.h	/^const BYTE OPEN_MARRY_STATE_PARA = 20;$/;"	v
OPEN_MERCH_ROAD	tmpcode/commond.h	/^const DWORD OPEN_MERCH_ROAD = 183;$/;"	v
OPEN_PRIVATECHAT_FORCE	tmpcode/commond.h	6828;"	d
OPEN_STORE_NPCTRADE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE OPEN_STORE_NPCTRADE_USERCMD_PARAMETER		= 67;$/;"	v
OPEN_TREASURE_USER_PARA	tmpcode/commond.h	/^const BYTE OPEN_TREASURE_USER_PARA = 35;$/;"	v
OPEN_WINDOW_EVOLVE_HORSE_PARA	tmpcode/commond.h	/^const BYTE OPEN_WINDOW_EVOLVE_HORSE_PARA = 47;$/;"	v
OPERATION_WRITEBACK	base/RecordCommand.h	/^      OPERATION_WRITEBACK,\/\/\/ Êìç‰ΩúÂõûÂÜôÊ°£Ê°à$/;"	e	enum:Cmd::Record::WriteBack_Type
OPT_GMTOOL_PARA	tmpcode/commond.h	/^const BYTE OPT_GMTOOL_PARA = 5;$/;"	v
OP_GEMSTATE_SCENE_PARA	base/SessionCommand.h	/^    const BYTE OP_GEMSTATE_SCENE_PARA = 7;$/;"	v
OP_LEVEL_PARA	base/SessionCommand.h	/^    const BYTE OP_LEVEL_PARA = 2;$/;"	v
OP_REPUTE_PARA	base/SessionCommand.h	/^    const BYTE OP_REPUTE_PARA = 1;$/;"	v
OP_UNION_ACTION_PARA	base/SessionCommand.h	/^    const BYTE OP_UNION_ACTION_PARA = 2;$/;"	v
OP_UNION_MONEY_PARA	base/SessionCommand.h	/^    const BYTE OP_UNION_MONEY_PARA = 1;$/;"	v
OTHERS	ScenesServer/zObject.h	/^      OTHERS, $/;"	e	enum:EquipPack::EQUIPNO
OTHERS1	ScenesServer/zObject.h	/^      OTHERS1, $/;"	e	enum:EquipPack::EQUIPNO
OTHERS2	ScenesServer/zObject.h	/^      OTHERS2, $/;"	e	enum:EquipPack::EQUIPNO
OTHERS3	ScenesServer/zObject.h	/^      OTHERS3,$/;"	e	enum:EquipPack::EQUIPNO
OTHERS4	ScenesServer/zObject.h	/^      OTHERS4, \/\/15  $/;"	e	enum:EquipPack::EQUIPNO
OTHERUSERMOVE_MOVE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE OTHERUSERMOVE_MOVE_USERCMD_PARA = 36;$/;"	v
OUT_PRISON_PARA	base/Command.h	/^const BYTE OUT_PRISON_PARA = 1;$/;"	v
OVERMAN_TICKET_ADD	base/SessionCommand.h	/^    const BYTE OVERMAN_TICKET_ADD = 243; $/;"	v
OVERTOPMONEY_UNION_BUSINESS_USERCMD	tmpcode/commond.h	/^const BYTE OVERTOPMONEY_UNION_BUSINESS_USERCMD = 23;$/;"	v
OVER_ONEHOUR_ISSUE_QUEST_PARA	tmpcode/commond.h	/^static const BYTE OVER_ONEHOUR_ISSUE_QUEST_PARA = 50;  \/\/»ŒŒÒΩ”»°≥¨π˝1–° ±  server->client$/;"	v
Obj	base/xmlparser/market.h	/^    struct Obj$/;"	s	struct:MarketConfig
ObjID	tmpcode/commond.h	/^	DWORD ObjID;					\/\/ œ˚∫ƒµƒŒÔ∆∑(…Ò√ÿ‘ø≥◊)µƒid$/;"	m	struct:ReturnOpenBoxPropertyUserCmd
ObjID_vec	ScenesServer/CardManager.h	/^    typedef std::vector<DWORD > ObjID_vec;$/;"	t	class:GameCardM
ObjID_vec	ScenesServer/ObjectManager.h	/^    typedef std::vector<DWORD > ObjID_vec;$/;"	t	class:UserObjectM
ObjNum	tmpcode/commond.h	/^	DWORD ObjNum;					\/\/ –Ëœ˚∫ƒ…Ò√ÿ‘ø≥◊ ˝¡ø$/;"	m	struct:ReturnOpenBoxPropertyUserCmd
Obj_vec	ScenesServer/CardManager.h	/^    typedef std::vector<zCard *> Obj_vec;$/;"	t	class:GameCardM
Obj_vec	ScenesServer/ObjectManager.h	/^    typedef std::vector<zObject *> Obj_vec;$/;"	t	class:UserObjectM
Object	base/Object.h	/^namespace Object$/;"	n
ObjectBase	base/zDatabase.h	/^struct ObjectBase$/;"	s
ObjectPack	ScenesServer/zObject.cpp	/^ObjectPack::ObjectPack(zObject* ob,int type,bool consume)  :$/;"	f	class:ObjectPack
ObjectPack	ScenesServer/zObject.h	/^class ObjectPack : public Package$/;"	c
OfficialItem	tmpcode/commond.h	/^        OfficialItem()$/;"	f	struct:OfficialItem
OfficialItem	tmpcode/commond.h	/^struct OfficialItem$/;"	s
OfficialPosition	tmpcode/commond.h	/^enum OfficialPosition$/;"	g
OfficialSend	tmpcode/commond.h	/^        OfficialSend()$/;"	f	struct:OfficialSend
OfficialSend	tmpcode/commond.h	/^struct OfficialSend$/;"	s
OnDie	ScenesServer/QuestEvent.h	/^typedef EventTrigger<Trigger::Die> OnDie;$/;"	t
OnDrop	ScenesServer/QuestEvent.h	/^typedef EventTrigger<Trigger::Drop> OnDrop;$/;"	t
OnEnter	ScenesServer/QuestEvent.h	/^typedef EventTrigger<Trigger::Enter> OnEnter;$/;"	t
OnGet	ScenesServer/QuestEvent.h	/^typedef EventTrigger<Trigger::Get> OnGet;$/;"	t
OnKill	ScenesServer/QuestEvent.h	/^typedef EventTrigger<Trigger::Kill> OnKill;$/;"	t
OnKillByLevel	ScenesServer/QuestEvent.h	/^typedef EventTrigger<Trigger::KillByLevel> OnKillByLevel;$/;"	t
OnKillBySelf	ScenesServer/QuestEvent.h	/^typedef EventTrigger<Trigger::KillBySelf> OnKillBySelf;$/;"	t
OnOther	ScenesServer/QuestEvent.h	/^typedef EventTrigger<Trigger::Other> OnOther;$/;"	t
OnQuit	ScenesServer/QuestEvent.h	/^typedef EventTrigger<Trigger::Quit> OnQuit;$/;"	t
OnRide	ScenesServer/QuestEvent.h	/^typedef EventTrigger<Trigger::Ride> OnRide;$/;"	t
OnTimer	ScenesServer/QuestEvent.h	/^typedef EventTrigger<Trigger::Timer> OnTimer;$/;"	t
OnUse	ScenesServer/QuestEvent.h	/^typedef EventTrigger2<Trigger::Use> OnUse;$/;"	t
OnVisit	ScenesServer/QuestEvent.h	/^typedef EventTrigger2<Trigger::Visit> OnVisit;$/;"	t
OneCountryScene	SessionServer/SessionServer.h	/^struct OneCountryScene: public execEntry<UserSession>$/;"	s
OneCountryUserSessionAction	SessionServer/SessionTask.cpp	/^struct OneCountryUserSessionAction: public execEntry<UserSession>$/;"	s
OneGuardGoodsGrid	tmpcode/commond.h	/^struct OneGuardGoodsGrid$/;"	s
OneHorseSuit	tmpcode/commond.h	/^    OneHorseSuit()$/;"	f	struct:OneHorseSuit
OneHorseSuit	tmpcode/commond.h	/^struct OneHorseSuit$/;"	s
OneLifeSkill	tmpcode/commond.h	/^struct OneLifeSkill$/;"	s
OneQuestInfo	tmpcode/commond.h	/^struct OneQuestInfo$/;"	s
OneSuit	tmpcode/commond.h	/^    OneSuit()$/;"	f	struct:OneSuit
OneSuit	tmpcode/commond.h	/^struct OneSuit$/;"	s
Online	base/SuperCommand.h	/^      struct Online$/;"	s	struct:Cmd::Super::t_CountryOnline
OnlineNum	SuperServer/ServerTask.h	/^    DWORD      OnlineNum;      \/**< ‘⁄œﬂ»À ˝Õ≥º∆ *\/$/;"	m	class:ServerTask
OnlineNum	base/SuperCommand.h	/^      DWORD    OnlineNum;$/;"	m	struct:Cmd::Super::t_CountryOnline
Online_Max	GatewayServer/CountryInfo.h	/^ 		DWORD Online_Max;$/;"	m	struct:CountryInfo::Info
Online_Now	GatewayServer/CountryInfo.h	/^ 		DWORD Online_Now;$/;"	m	struct:CountryInfo::Info
Online_Now	base/SessionCommand.h	/^		DWORD Online_Now;$/;"	m	struct:Cmd::Session::Country_Online
Op	ScenesServer/QuestAction.h	/^namespace Op {$/;"	n
Op	ScenesServer/QuestCondition.h	/^namespace Op {$/;"	n
Open	base/xmlparser/giftbag.h	/^    struct Open$/;"	s	struct:GiftBagConfig
Open	base/xmlparser/market.h	/^    struct Open$/;"	s	struct:MarketConfig
OpenBoxPropertyUserCmd	tmpcode/commond.h	/^        OpenBoxPropertyUserCmd()$/;"	f	struct:OpenBoxPropertyUserCmd
OpenBoxPropertyUserCmd	tmpcode/commond.h	/^struct OpenBoxPropertyUserCmd : public stPropertyUserCmd$/;"	s
Other	ScenesServer/QuestEvent.h	/^  class Other$/;"	c	namespace:Trigger
PACKET_MASK	base/zSocket.h	/^	static const DWORD PACKET_MASK      =  trunkSize - 1;  \/**< ◊Ó¥Û ˝æ›∞¸≥§∂»—⁄¬Î *\/$/;"	m	class:zSocket
PACKET_ZIP	base/zSocket.h	/^	static const DWORD PACKET_ZIP    =  0x40000000;        \/**<  ˝æ›∞¸—πÀı±Í÷æ *\/$/;"	m	class:zSocket
PACKET_ZIP_BUFFER	base/zSocket.h	/^const DWORD PACKET_ZIP_BUFFER  =  unzip_size(trunkSize - 1) + sizeof(DWORD) + 8;  \/**< —πÀı–Ë“™µƒª∫≥Â *\/$/;"	v
PACKET_ZIP_MIN	base/zSocket.h	/^	static const DWORD PACKET_ZIP_MIN  =  32;            \/**<  ˝æ›∞¸—πÀı◊Ó–°¥Û–° *\/$/;"	m	class:zSocket
PACKNO	ScenesServer/zObject.h	/^    enum PACKNO{$/;"	g	class:EquipPack
PACTION_AUTOGETZEBRA_DIST_OPT	Makefile	/^PACTION_AUTOGETZEBRA_DIST_OPT = -g -o2 -Werror -D_USE_CMD_NAMESPACE $(BATTLE_OPTIONS) -DVS=$(VERSIONSTRING)$/;"	m
PARA_ACTION_FISH_USER_CMD	tmpcode/commond.h	/^const BYTE PARA_ACTION_FISH_USER_CMD = 2;$/;"	v
PARA_ACTION_TIMEOUT_FISH_USER_CMD	tmpcode/commond.h	/^const BYTE PARA_ACTION_TIMEOUT_FISH_USER_CMD = 5;$/;"	v
PARA_ACTIVEDARE	base/SessionCommand.h	/^    const BYTE PARA_ACTIVEDARE = 1;$/;"	v
PARA_ADD_GEN_EXP	base/SessionCommand.h	/^    const BYTE PARA_ADD_GEN_EXP = 17;$/;"	v
PARA_ADD_RELATION_ENEMY	base/SessionCommand.h	/^    const BYTE PARA_ADD_RELATION_ENEMY = 53;$/;"	v
PARA_ALLY_NPC_CLEAR	base/SessionCommand.h	/^    const BYTE PARA_ALLY_NPC_CLEAR = 14;$/;"	v
PARA_AUCTION_BID	base/SessionCommand.h	/^    const BYTE PARA_AUCTION_BID = 3;$/;"	v
PARA_AUCTION_CANCEL	base/SessionCommand.h	/^    const BYTE PARA_AUCTION_CANCEL = 6;$/;"	v
PARA_AUCTION_CHECK_BID	base/SessionCommand.h	/^    const BYTE PARA_AUCTION_CHECK_BID = 2;$/;"	v
PARA_AUCTION_CHECK_CANCEL	base/SessionCommand.h	/^    const BYTE PARA_AUCTION_CHECK_CANCEL = 5;$/;"	v
PARA_AUCTION_CMD	base/SessionCommand.h	/^    const BYTE PARA_AUCTION_CMD = 199;$/;"	v
PARA_AUCTION_GET_LIST	base/SessionCommand.h	/^    const BYTE PARA_AUCTION_GET_LIST = 7;$/;"	v
PARA_AUCTION_QUERY	base/SessionCommand.h	/^    const BYTE PARA_AUCTION_QUERY = 4;$/;"	v
PARA_AUCTION_SALE	base/SessionCommand.h	/^    const BYTE PARA_AUCTION_SALE = 1;$/;"	v
PARA_AUTOSKILL_START_CMD	tmpcode/commond.h	/^const BYTE PARA_AUTOSKILL_START_CMD = 3;$/;"	v
PARA_AUTO_PAY_AUTOSKILL_CMD	tmpcode/commond.h	/^const BYTE PARA_AUTO_PAY_AUTOSKILL_CMD = 2;$/;"	v
PARA_BEGIN_EMPEROR_DARE	base/SessionCommand.h	/^    const BYTE PARA_BEGIN_EMPEROR_DARE = 10;$/;"	v
PARA_BILL_FORWARD_SCENE	base/SceneCommand.h	/^    const BYTE PARA_BILL_FORWARD_SCENE = 7;$/;"	v
PARA_BILL_IDINUSE	base/SuperCommand.h	/^    const BYTE PARA_BILL_IDINUSE = 2;$/;"	v
PARA_BILL_NEWSESSION	base/SuperCommand.h	/^    const BYTE PARA_BILL_NEWSESSION = 1;$/;"	v
PARA_BROADCAST_GMTOOL	base/GmToolCommand.h	/^    const BYTE PARA_BROADCAST_GMTOOL = 5;$/;"	v
PARA_BROADCAST_SCENE	base/SessionCommand.h	/^    const BYTE PARA_BROADCAST_SCENE = 29;$/;"	v
PARA_BROADMESSAGE	base/BroadCastCommand.h	/^    const BYTE PARA_BROADMESSAGE = 1;$/;"	v
PARA_BUYTIME_AUTOSKILL_CMD	tmpcode/commond.h	/^const BYTE PARA_BUYTIME_AUTOSKILL_CMD = 1;$/;"	v
PARA_CANCELLISTALL_STOCKPARA	base/Command.h	7796;"	d
PARA_CARTOON_ADD	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_ADD = 2;$/;"	v
PARA_CARTOON_ADOPT	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_ADOPT = 5;$/;"	v
PARA_CARTOON_BUY	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_BUY = 1;$/;"	v
PARA_CARTOON_CHARGE	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_CHARGE = 11;\/\/ÂÖÖÂÄº$/;"	v
PARA_CARTOON_CHARGE_NOTIFY	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_CHARGE_NOTIFY = 12;\/\/ÈÄöÁü•È¢ÜÂÖªËÄÖÂÆ†Áâ©ÂÖÖÂÄº$/;"	v
PARA_CARTOON_CMD	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_CMD = 179;$/;"	v
PARA_CARTOON_CONSIGN	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_CONSIGN = 15;\/\/ÂßîÊâòÈ¢ÜÂÖª$/;"	v
PARA_CARTOON_CONSIGN_RET	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_CONSIGN_RET = 16;\/\/ÂßîÊâòÈ¢ÜÂÖªËøîÂõû$/;"	v
PARA_CARTOON_CORRECT	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_CORRECT = 9;\/\/Á∫†ÈîôÔºåÊ†áËÆ∞‰∏∫Ë¢´È¢ÜÂÖª‰ΩÜÊòØÈ¢ÜÂÖªËÄÖÊ≤°ÊúâÂÆ†Áâ©Êó∂ÔºåÊîπ‰∏∫Á≠âÂæÖ$/;"	v
PARA_CARTOON_DRAW	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_DRAW = 14;\/\/ÊèêÂèñÁªèÈ™å$/;"	v
PARA_CARTOON_GET_BACK	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_GET_BACK = 6;$/;"	v
PARA_CARTOON_GET_LIST	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_GET_LIST = 3;$/;"	v
PARA_CARTOON_LEVEL_NOTIFY	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_LEVEL_NOTIFY = 13;\/\/ÈÄöÁü•È¢ÜÂÖªËÄÖÂÆ†Áâ©ÂÖÖÂÄº$/;"	v
PARA_CARTOON_LOAD	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_LOAD = 8;\/\/‰∏äÁ∫øÊó∂ÔºåËé∑ÂèñÂÆ†Áâ©ÂàóË°®$/;"	v
PARA_CARTOON_NOTIFY	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_NOTIFY = 7;\/\/ÈÄöÁü•È¢ÜÂÖªËÄÖ‰∏ª‰∫∫‰∏ä‰∏ãÁ∫ø$/;"	v
PARA_CARTOON_SALE	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_SALE = 10;\/\/‰∏äÁ∫øÊó∂ÔºåËé∑ÂèñÂÆ†Áâ©ÂàóË°®$/;"	v
PARA_CARTOON_SAVE	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_SAVE = 4;$/;"	v
PARA_CARTOON_SET_REPAIR	base/SessionCommand.h	/^    const BYTE PARA_CARTOON_SET_REPAIR = 17;\/\/ËÆæÁΩÆËá™Âä®‰øÆÁêÜ$/;"	v
PARA_CATION_FISH_USER_CMD	tmpcode/commond.h	/^const BYTE PARA_CATION_FISH_USER_CMD = 3;$/;"	v
PARA_CATION_INFO_FISH_USER_CMD	tmpcode/commond.h	/^const BYTE PARA_CATION_INFO_FISH_USER_CMD = 4;$/;"	v
PARA_CHANGESERVER_SESSIONCHECK	FLServer/DBAccessCommand.h	/^    const BYTE PARA_CHANGESERVER_SESSIONCHECK = 2;$/;"	v
PARA_CHANGE_COUNTRY	base/SessionCommand.h	/^    const BYTE  PARA_CHANGE_COUNTRY = 215;$/;"	v
PARA_CHANGE_COUNTRY_STATE	base/SceneCommand.h	/^    const BYTE PARA_CHANGE_COUNTRY_STATE = 5;$/;"	v
PARA_CHANGE_USER_DATA	base/SessionCommand.h	/^    const BYTE PARA_CHANGE_USER_DATA = 224;$/;"	v
PARA_CHANGE_VERIFY_VERSION	base/SceneCommand.h	/^    const BYTE PARA_CHANGE_VERIFY_VERSION = 6;$/;"	v
PARA_CHANGE_ZONE_DEL	base/SuperCommand.h	/^	const BYTE PARA_CHANGE_ZONE_DEL = 6;$/;"	v
PARA_CHARNAME_GATEWAY	base/SuperCommand.h	/^    const BYTE PARA_CHARNAME_GATEWAY = 4;$/;"	v
PARA_CHARNAME_REG_WITHID	base/RoleregCommand.h	/^    const BYTE PARA_CHARNAME_REG_WITHID = 1;$/;"	v
PARA_CHARNAME_REG_WITHID	roleRegServer/RoleregCommand.h	/^    const BYTE PARA_CHARNAME_REG_WITHID = 1;$/;"	v
PARA_CHAT_GMTOOL	base/GmToolCommand.h	/^    const BYTE PARA_CHAT_GMTOOL = 1;$/;"	v
PARA_CHECK_CALLTIMES_LEADER	base/SessionCommand.h	/^    const BYTE PARA_CHECK_CALLTIMES_LEADER = 13;$/;"	v
PARA_CHECK_USER	base/SessionCommand.h	/^    const BYTE PARA_CHECK_USER = 19;$/;"	v
PARA_CHECK_USER_CITY	base/SessionCommand.h	/^    const BYTE PARA_CHECK_USER_CITY = 4;$/;"	v
PARA_CHECK_VALID	base/RolechangeCommand.h	/^    const BYTE PARA_CHECK_VALID = 1;$/;"	v
PARA_CHECK_ZONE_STATE	base/RolechangeCommand.h	/^    const BYTE PARA_CHECK_ZONE_STATE = 6;$/;"	v
PARA_CHK_USER_EXIST	base/RecordCommand.h	/^    const BYTE PARA_CHK_USER_EXIST = 1;$/;"	v
PARA_CLEAR_UNION_MANOR	base/SessionCommand.h	/^    const BYTE PARA_CLEAR_UNION_MANOR = 220;$/;"	v
PARA_CLOSE_NPC	base/SessionCommand.h	/^    const BYTE PARA_CLOSE_NPC = 246;$/;"	v
PARA_CONFIRM_RECEIVE	base/RolechangeCommand.h	/^    const BYTE PARA_CONFIRM_RECEIVE = 5;$/;"	v
PARA_CONSEQUENT_FISH_USER_CMD	tmpcode/commond.h	/^const BYTE PARA_CONSEQUENT_FISH_USER_CMD = 7;$/;"	v
PARA_CONTRIBUTE_COUNTRY	base/SessionCommand.h	/^    const BYTE PARA_CONTRIBUTE_COUNTRY = 2;$/;"	v
PARA_COUNTRYONLINE	base/SuperCommand.h	/^    const BYTE PARA_COUNTRYONLINE = 1;$/;"	v
PARA_COUNTRY_AND_SCENE	base/SceneCommand.h	/^    const BYTE PARA_COUNTRY_AND_SCENE = 2;$/;"	v
PARA_COUNTRY_DARE_RESULT	base/SessionCommand.h	/^    const BYTE PARA_COUNTRY_DARE_RESULT = 3;$/;"	v
PARA_COUNTRY_NOTIFY	base/SessionCommand.h	/^    const BYTE PARA_COUNTRY_NOTIFY = 125;$/;"	v
PARA_COUNTRY_POWER_SORT	base/SessionCommand.h	/^    const BYTE PARA_COUNTRY_POWER_SORT = 22;$/;"	v
PARA_COUNTRY_PUNISH_USER	base/SessionCommand.h	/^    const BYTE PARA_COUNTRY_PUNISH_USER = 6;$/;"	v
PARA_DARE_GOLD	base/SessionCommand.h	/^    const BYTE  PARA_DARE_GOLD = 4;$/;"	v
PARA_DARE_PK	base/SessionCommand.h	/^    const BYTE PARA_DARE_PK = 3;$/;"	v
PARA_DEBUG_COUNTRYPOWER	base/SessionCommand.h	/^    const BYTE PARA_DEBUG_COUNTRYPOWER = 247;$/;"	v
PARA_EMPEROR_PUNISH_USER	base/SessionCommand.h	/^    const BYTE PARA_EMPEROR_PUNISH_USER = 18;$/;"	v
PARA_EMPTY_FISH_USER_CMD	tmpcode/commond.h	/^const BYTE PARA_EMPTY_FISH_USER_CMD = 8;$/;"	v
PARA_ENTERWAR	base/SessionCommand.h	/^    const BYTE PARA_ENTERWAR = 2;$/;"	v
PARA_ENTER_UNION_MANOR	base/SessionCommand.h	/^    const BYTE PARA_ENTER_UNION_MANOR = 218;$/;"	v
PARA_EXIT_QUIZ	base/SessionCommand.h	/^    const BYTE PARA_EXIT_QUIZ = 103;$/;"	v
PARA_FL_GYLIST	base/FLCommand.h	/^    const BYTE PARA_FL_GYLIST = 1;$/;"	v
PARA_FL_RQGYLIST	base/FLCommand.h	/^    const BYTE PARA_FL_RQGYLIST = 2;$/;"	v
PARA_FORWARD_BILL	base/BillCommand.h	/^    const BYTE PARA_FORWARD_BILL = 2;$/;"	v
PARA_FORWARD_BILL_TO_SCENE	base/BillCommand.h	/^    const BYTE PARA_FORWARD_BILL_TO_SCENE = 3;$/;"	v
PARA_FORWARD_COUNTRY	base/SessionCommand.h	/^    const BYTE PARA_FORWARD_COUNTRY = 3;$/;"	v
PARA_FORWARD_DUPCHANGE	base/SceneCommand.h	/^    const BYTE PARA_FORWARD_DUPCHANGE = 11;$/;"	v
PARA_FORWARD_MAP	base/SceneCommand.h	/^    const BYTE PARA_FORWARD_MAP = 6;$/;"	v
PARA_FORWARD_MINI_TO_SCENE	base/MiniCommand.h	/^    const BYTE PARA_FORWARD_MINI_TO_SCENE = 3;$/;"	v
PARA_FORWARD_MSG	base/RolechangeCommand.h	/^    const BYTE PARA_FORWARD_MSG = 1;$/;"	v
PARA_FORWARD_MSG_SCENE	base/SuperCommand.h	/^    const BYTE PARA_FORWARD_MSG_SCENE = 2;$/;"	v
PARA_FORWARD_NINE	base/SceneCommand.h	/^    const BYTE PARA_FORWARD_NINE = 1;$/;"	v
PARA_FORWARD_NINE_DIR	base/SceneCommand.h	/^    const BYTE PARA_FORWARD_NINE_DIR = 2;$/;"	v
PARA_FORWARD_NINE_EXCEPTME	base/SceneCommand.h	/^    const BYTE PARA_FORWARD_NINE_EXCEPTME = 10;$/;"	v
PARA_FORWARD_NINE_RDIR	base/SceneCommand.h	/^    const BYTE PARA_FORWARD_NINE_RDIR = 3;$/;"	v
PARA_FORWARD_SCENE	base/SceneCommand.h	/^    const BYTE PARA_FORWARD_SCENE = 5;$/;"	v
PARA_FORWARD_SCENEUSER_TO_BILL	base/SceneCommand.h	/^    const BYTE PARA_FORWARD_SCENEUSER_TO_BILL = 9;$/;"	v
PARA_FORWARD_SCENE_TO_BILL	base/SceneCommand.h	/^    const BYTE PARA_FORWARD_SCENE_TO_BILL = 8;$/;"	v
PARA_FORWARD_SCENE_TO_MINI	base/MiniCommand.h	/^    const BYTE PARA_FORWARD_SCENE_TO_MINI = 4;$/;"	v
PARA_FORWARD_USER	base/BillCommand.h	/^    const BYTE PARA_FORWARD_USER = 1;$/;"	v
PARA_FORWARD_USER	base/SceneCommand.h	/^    const BYTE PARA_FORWARD_USER = 4;$/;"	v
PARA_FORWARD_USER	base/SessionCommand.h	/^    const BYTE PARA_FORWARD_USER = 1;$/;"	v
PARA_FORWARD_WORLD	base/SessionCommand.h	/^    const BYTE PARA_FORWARD_WORLD = 2;$/;"	v
PARA_FRESH_MAPINDEX	base/SceneCommand.h	/^    const BYTE PARA_FRESH_MAPINDEX = 4;$/;"	v
PARA_FRESH_SCREENINDEX	base/SceneCommand.h	/^    const BYTE PARA_FRESH_SCREENINDEX = 3;$/;"	v
PARA_FRIENDDEGREE_COUNT	base/SessionCommand.h	/^    const BYTE PARA_FRIENDDEGREE_COUNT = 150;$/;"	v
PARA_FRIENDDEGREE_REQUEST	base/SessionCommand.h	/^    const BYTE PARA_FRIENDDEGREE_REQUEST = 151;$/;"	v
PARA_FRIENDDEGREE_RETURN	base/SessionCommand.h	/^    const BYTE PARA_FRIENDDEGREE_RETURN = 152;$/;"	v
PARA_GAMETIME	base/BroadCommand.h	/^    const BYTE PARA_GAMETIME = 6;$/;"	v
PARA_GAMETIME	base/SuperCommand.h	/^    const BYTE PARA_GAMETIME = 6;$/;"	v
PARA_GATEWAY_GYLIST	base/SuperCommand.h	/^    const BYTE PARA_GATEWAY_GYLIST = 1;$/;"	v
PARA_GATEWAY_NEWSESSION	base/SuperCommand.h	/^    const BYTE PARA_GATEWAY_NEWSESSION = 3;$/;"	v
PARA_GATEWAY_RQGYLIST	base/SuperCommand.h	/^    const BYTE PARA_GATEWAY_RQGYLIST = 2;$/;"	v
PARA_GATE_CHANGE_SCENE_USER	base/SessionCommand.h	/^    const BYTE PARA_GATE_CHANGE_SCENE_USER = 3;$/;"	v
PARA_GATE_CHECKNAME	base/RecordCommand.h	/^    const BYTE PARA_GATE_CHECKNAME = 7;$/;"	v
PARA_GATE_CHECKNAME_RETURN	base/RecordCommand.h	/^    const BYTE PARA_GATE_CHECKNAME_RETURN = 8;$/;"	v
PARA_GATE_CONSUME_CARD	base/BillCommand.h	/^    const BYTE PARA_GATE_CONSUME_CARD = 12;$/;"	v
PARA_GATE_COUNTRY_INC_LOGIN_COUNT	base/SessionCommand.h	/^    const BYTE PARA_GATE_COUNTRY_INC_LOGIN_COUNT = 8;$/;"	v
PARA_GATE_COUNTRY_ORDER	base/RecordCommand.h	/^    const BYTE PARA_GATE_COUNTRY_ORDER = 10;$/;"	v
PARA_GATE_COUNTRY_ORDER	base/SessionCommand.h	/^    const BYTE PARA_GATE_COUNTRY_ORDER = 6;$/;"	v
PARA_GATE_CREATECHAR	base/RecordCommand.h	/^    const BYTE PARA_GATE_CREATECHAR = 3;$/;"	v
PARA_GATE_CREATECHAR_RETURN	base/RecordCommand.h	/^    const BYTE PARA_GATE_CREATECHAR_RETURN = 4;$/;"	v
PARA_GATE_DELCHAR	base/RecordCommand.h	/^    const BYTE PARA_GATE_DELCHAR = 5;$/;"	v
PARA_GATE_DELCHAR	base/SessionCommand.h	/^    const BYTE PARA_GATE_DELCHAR = 102;$/;"	v
PARA_GATE_DELCHAR_RETURN	base/RecordCommand.h	/^    const BYTE PARA_GATE_DELCHAR_RETURN = 6;$/;"	v
PARA_GATE_FORWARD_USER	base/SessionCommand.h	/^    const BYTE PARA_GATE_FORWARD_USER = 7;$/;"	v
PARA_GATE_GET_SELECTINFO	base/RecordCommand.h	/^    const BYTE PARA_GATE_GET_SELECTINFO = 1;$/;"	v
PARA_GATE_LOGINVERIFY	base/BillCommand.h	/^    const BYTE PARA_GATE_LOGINVERIFY = 2;$/;"	v
PARA_GATE_LOGINVERIFY_RETURN	base/BillCommand.h	/^    const BYTE PARA_GATE_LOGINVERIFY_RETURN = 3;$/;"	v
PARA_GATE_LOGOUT	base/BillCommand.h	/^    const BYTE PARA_GATE_LOGOUT = 4;$/;"	v
PARA_GATE_NEWSESSION	base/BillCommand.h	/^    const BYTE PARA_GATE_NEWSESSION = 1;$/;"	v
PARA_GATE_REDEEM_GOLD	base/BillCommand.h	/^    const BYTE PARA_GATE_REDEEM_GOLD = 6;$/;"	v
PARA_GATE_REDEEM_MONTH_CARD	base/BillCommand.h	/^    const BYTE PARA_GATE_REDEEM_MONTH_CARD = 8;$/;"	v
PARA_GATE_REGUSER	base/SessionCommand.h	/^    const BYTE PARA_GATE_REGUSER = 1;$/;"	v
PARA_GATE_REQUECT_CARD_GOLD	base/BillCommand.h	/^    const BYTE PARA_GATE_REQUECT_CARD_GOLD = 9;$/;"	v
PARA_GATE_REQUECT_POINT	base/BillCommand.h	/^    const BYTE PARA_GATE_REQUECT_POINT = 10;$/;"	v
PARA_GATE_RETURN_CARD	base/BillCommand.h	/^    const BYTE PARA_GATE_RETURN_CARD = 13;$/;"	v
PARA_GATE_RETURN_CARD_GOLD	base/BillCommand.h	/^    const BYTE PARA_GATE_RETURN_CARD_GOLD = 10;$/;"	v
PARA_GATE_RETURN_POINT	base/BillCommand.h	/^    const BYTE PARA_GATE_RETURN_POINT = 11;$/;"	v
PARA_GATE_RET_SELECTINFO	base/RecordCommand.h	/^    const BYTE PARA_GATE_RET_SELECTINFO = 2;$/;"	v
PARA_GATE_UNREGUSER	base/SessionCommand.h	/^    const BYTE PARA_GATE_UNREGUSER = 2;$/;"	v
PARA_GATE_UPDATEONLINE	base/SessionCommand.h	/^	const BYTE PARA_GATE_UPDATEONLINE = 4;$/;"	v
PARA_GATE_UPDATE_ZONE_STATE	base/RecordCommand.h	/^    const BYTE PARA_GATE_UPDATE_ZONE_STATE = 18;$/;"	v
PARA_GATE_USER_DELETE	base/MiniCommand.h	/^    const BYTE PARA_GATE_USER_DELETE = 3;$/;"	v
PARA_GATE_USER_LOGIN	base/MiniCommand.h	/^    const BYTE PARA_GATE_USER_LOGIN = 1;$/;"	v
PARA_GATE_USER_LOGOUT	base/MiniCommand.h	/^    const BYTE PARA_GATE_USER_LOGOUT = 2;$/;"	v
PARA_GET_HEROLIST_CMD	base/Command.h	/^const BYTE PARA_GET_HEROLIST_CMD = 1;$/;"	v
PARA_GET_HEROLIST_CMD	tmpcode/commond.h	/^const BYTE PARA_GET_HEROLIST_CMD = 1;$/;"	v
PARA_GET_HERO_MEDAL_CMD	tmpcode/commond.h	/^const BYTE PARA_GET_HERO_MEDAL_CMD = 14;$/;"	v
PARA_GET_SORTLIST_CMD	base/Command.h	/^const BYTE PARA_GET_SORTLIST_CMD = 4;$/;"	v
PARA_GET_SORTLIST_CMD	tmpcode/commond.h	/^const BYTE PARA_GET_SORTLIST_CMD = 4;$/;"	v
PARA_GIVEUP_FISH_USER_CMD	tmpcode/commond.h	/^const BYTE PARA_GIVEUP_FISH_USER_CMD = 6;$/;"	v
PARA_GM_COMMAND_SCENEGATE	base/SceneCommand.h	/^    const BYTE PARA_GM_COMMAND_SCENEGATE = 25;$/;"	v
PARA_GM_CREATE_UNION_CITY	base/SessionCommand.h	/^    const BYTE PARA_GM_CREATE_UNION_CITY = 7;$/;"	v
PARA_GOTO_LEADER	base/SessionCommand.h	/^    const BYTE PARA_GOTO_LEADER = 11;$/;"	v
PARA_GOTO_LEADER_CHECK	base/SessionCommand.h	/^    const BYTE PARA_GOTO_LEADER_CHECK = 12;$/;"	v
PARA_INIT_FISH_USER_CMD	tmpcode/commond.h	/^const BYTE PARA_INIT_FISH_USER_CMD = 1;$/;"	v
PARA_JIEZHAN_HIS_LIST	tmpcode/commond.h	/^const BYTE PARA_JIEZHAN_HIS_LIST = 137;$/;"	v
PARA_JIEZHAN_LIVE	tmpcode/commond.h	/^const BYTE PARA_JIEZHAN_LIVE = 139;$/;"	v
PARA_KICK_USER	base/SceneCommand.h	/^    const BYTE PARA_KICK_USER = 6;$/;"	v
PARA_LAST_POSITION_TIME_LIST_SEPT	tmpcode/commond.h	/^const BYTE PARA_LAST_POSITION_TIME_LIST_SEPT = 92;$/;"	v
PARA_LOGIN	base/BillCommand.h	/^    const BYTE PARA_LOGIN = 1;$/;"	v
PARA_LOGIN	base/BroadCastCommand.h	/^    const BYTE PARA_LOGIN = 1;$/;"	v
PARA_LOGIN	base/FLCommand.h	/^    const BYTE PARA_LOGIN = 1;$/;"	v
PARA_LOGIN	base/MiniCommand.h	/^    const BYTE PARA_LOGIN = 1;$/;"	v
PARA_LOGIN	base/RecordCommand.h	/^    const BYTE PARA_LOGIN = 1;$/;"	v
PARA_LOGIN	base/RolechangeCommand.h	/^    const BYTE PARA_LOGIN = 1;$/;"	v
PARA_LOGIN	base/RoleregCommand.h	/^    const BYTE PARA_LOGIN = 1;$/;"	v
PARA_LOGIN	base/SceneCommand.h	/^    const BYTE PARA_LOGIN = 1;$/;"	v
PARA_LOGIN	base/SessionCommand.h	/^    const BYTE PARA_LOGIN = 1;$/;"	v
PARA_LOGIN	roleRegServer/RoleregCommand.h	/^    const BYTE PARA_LOGIN = 1;$/;"	v
PARA_LOGINSERVER_SESSIONCHECK	FLServer/DBAccessCommand.h	/^    const BYTE PARA_LOGINSERVER_SESSIONCHECK = 1;$/;"	v
PARA_LOGIN_OK	base/BroadCastCommand.h	/^    const BYTE PARA_LOGIN_OK = 2;$/;"	v
PARA_LOGIN_OK	base/FLCommand.h	/^    const BYTE PARA_LOGIN_OK = 2;$/;"	v
PARA_LOGIN_OK	base/RolechangeCommand.h	/^    const BYTE PARA_LOGIN_OK = 2;$/;"	v
PARA_LOGIN_OK	base/RoleregCommand.h	/^    const BYTE PARA_LOGIN_OK = 2;$/;"	v
PARA_LOGIN_OK	roleRegServer/RoleregCommand.h	/^    const BYTE PARA_LOGIN_OK = 2;$/;"	v
PARA_LOGIN_REFRESH	base/SceneCommand.h	/^    const BYTE PARA_LOGIN_REFRESH = 2;$/;"	v
PARA_LOGIN_UNREG	base/SceneCommand.h	/^    const BYTE PARA_LOGIN_UNREG = 3;$/;"	v
PARA_LOGIN_UNREG_OK	base/SceneCommand.h	/^    const BYTE PARA_LOGIN_UNREG_OK = 4;$/;"	v
PARA_LOGON	FLServer/DBAccessCommand.h	/^    const BYTE PARA_LOGON = 1;$/;"	v
PARA_LOG_GMTOOL	base/GmToolCommand.h	/^    const BYTE PARA_LOG_GMTOOL = 7;$/;"	v
PARA_MINI_FORWARD_USER	base/MiniCommand.h	/^    const BYTE PARA_MINI_FORWARD_USER = 1;$/;"	v
PARA_MSG_GMTOOL	base/GmToolCommand.h	/^    const BYTE PARA_MSG_GMTOOL = 2;$/;"	v
PARA_MSG_REPLY_GMTOOL	base/GmToolCommand.h	/^    const BYTE PARA_MSG_REPLY_GMTOOL = 3;$/;"	v
PARA_NEW_MSG_GMTOOL	base/GmToolCommand.h	/^    const BYTE PARA_NEW_MSG_GMTOOL = 6;$/;"	v
PARA_NOTIFYGATE_FINISH	base/SuperCommand.h	/^	const BYTE PARA_NOTIFYGATE_FINISH = 5;$/;"	v
PARA_NOTIFY_ADD_INTEGRAL	base/SessionCommand.h	/^    const BYTE PARA_NOTIFY_ADD_INTEGRAL = 55;$/;"	v
PARA_NOTIFY_AUTOSKILL_MONEYTIME_CMD	tmpcode/commond.h	/^const BYTE PARA_NOTIFY_AUTOSKILL_MONEYTIME_CMD = 0;$/;"	v
PARA_NOTIFY_NPC_HOLD_DATA	base/SessionCommand.h	/^    const BYTE PARA_NOTIFY_NPC_HOLD_DATA = 54;$/;"	v
PARA_NULL	base/zNullCmd.h	/^  const BYTE PARA_NULL = 0;  \/**< Á©∫ÁöÑÊåá‰ª§ÂèÇÊï∞ *\/$/;"	v
PARA_OP_ALLY_FRIENDDEGREE	base/SessionCommand.h	/^    const BYTE PARA_OP_ALLY_FRIENDDEGREE = 12;$/;"	v
PARA_OP_TECH_VOTE	base/SessionCommand.h	/^    const BYTE PARA_OP_TECH_VOTE = 8;$/;"	v
PARA_OVER_ZONE_CHAT	base/RolechangeCommand.h	/^    const BYTE PARA_OVER_ZONE_CHAT = 1;$/;"	v
PARA_OVER_ZONE_RET_CHAT	base/RolechangeCommand.h	/^    const BYTE PARA_OVER_ZONE_RET_CHAT = 2;$/;"	v
PARA_PUNISH_GMTOOL	base/GmToolCommand.h	/^    const BYTE PARA_PUNISH_GMTOOL = 4;$/;"	v
PARA_PUT_JIEZHAN_ASK	tmpcode/commond.h	/^const BYTE PARA_PUT_JIEZHAN_ASK = 135;$/;"	v
PARA_PUT_JIEZHAN_SURE	tmpcode/commond.h	/^const BYTE PARA_PUT_JIEZHAN_SURE = 136;$/;"	v
PARA_QUERY_ACCOUNT	base/SceneCommand.h	/^    const BYTE PARA_QUERY_ACCOUNT = 1;$/;"	v
PARA_QUERY_HEROLIST_CMD	base/Command.h	/^const BYTE PARA_QUERY_HEROLIST_CMD = 0;$/;"	v
PARA_QUERY_HEROLIST_CMD	tmpcode/commond.h	/^const BYTE PARA_QUERY_HEROLIST_CMD = 0;$/;"	v
PARA_QUERY_HERO_KILL_CMD	tmpcode/commond.h	/^const BYTE PARA_QUERY_HERO_KILL_CMD = 12;$/;"	v
PARA_QUERY_HISTORYEXPLOIT_CMD	tmpcode/commond.h	/^const BYTE PARA_QUERY_HISTORYEXPLOIT_CMD=10;$/;"	v
PARA_QUERY_SORTLIST_CMD	base/Command.h	/^const BYTE PARA_QUERY_SORTLIST_CMD = 3;$/;"	v
PARA_QUERY_SORTLIST_CMD	tmpcode/commond.h	/^const BYTE PARA_QUERY_SORTLIST_CMD = 3;$/;"	v
PARA_QUERY_THISWEEK_CMD	tmpcode/commond.h	/^const BYTE PARA_QUERY_THISWEEK_CMD=8;$/;"	v
PARA_QUESTION_NPCDARE	base/SessionCommand.h	/^    const BYTE PARA_QUESTION_NPCDARE = 135;$/;"	v
PARA_QUESTION_OBJECT	base/SessionCommand.h	/^    const BYTE PARA_QUESTION_OBJECT = 244;$/;"	v
PARA_QUESTION_UNION_CITY	base/SessionCommand.h	/^    const BYTE PARA_QUESTION_UNION_CITY = 221;$/;"	v
PARA_QUIZ_AWARD	base/SessionCommand.h	/^    const BYTE  PARA_QUIZ_AWARD = 214;$/;"	v
PARA_REFRESH_GEN	base/SessionCommand.h	/^    const BYTE PARA_REFRESH_GEN = 16;$/;"	v
PARA_REFRESH_JIEZHANSTATE_LIST	tmpcode/commond.h	/^const BYTE PARA_REFRESH_JIEZHANSTATE_LIST = 130;$/;"	v
PARA_REFRESH_JIEZHAN_INFO	tmpcode/commond.h	/^const BYTE PARA_REFRESH_JIEZHAN_INFO = 128;$/;"	v
PARA_REFRESH_JIEZHAN_TITLE_ACTIVE	tmpcode/commond.h	/^const BYTE PARA_REFRESH_JIEZHAN_TITLE_ACTIVE = 143;$/;"	v
PARA_REMOVE_MAPINDEX	base/SceneCommand.h	/^    const BYTE PARA_REMOVE_MAPINDEX = 5;$/;"	v
PARA_REQUEST_BILL	base/SceneCommand.h	/^    const BYTE PARA_REQUEST_BILL = 1;$/;"	v
PARA_REQUEST_COUNTRYONLINE	base/SuperCommand.h	/^    const BYTE PARA_REQUEST_COUNTRYONLINE = 0;$/;"	v
PARA_REQUEST_GATE_REDEEM_GOLD	base/BillCommand.h	/^    const BYTE PARA_REQUEST_GATE_REDEEM_GOLD = 5;$/;"	v
PARA_REQUEST_GATE_REDEEM_MONTH_CARD	base/BillCommand.h	/^    const BYTE PARA_REQUEST_GATE_REDEEM_MONTH_CARD = 7;$/;"	v
PARA_REQUEST_POINT	base/SceneCommand.h	/^    const BYTE PARA_REQUEST_POINT = 2;$/;"	v
PARA_REQUEST_REDEEM_CARD	base/SceneCommand.h	/^    const BYTE PARA_REQUEST_REDEEM_CARD = 4;$/;"	v
PARA_REQUEST_REDEEM_GOLD	base/SceneCommand.h	/^    const BYTE PARA_REQUEST_REDEEM_GOLD = 3;$/;"	v
PARA_REQ_POSITION_SKILL_INFO_SEPT	tmpcode/commond.h	/^const BYTE PARA_REQ_POSITION_SKILL_INFO_SEPT = 90;$/;"	v
PARA_REQ_ZONE_LIST	base/RolechangeCommand.h	/^    const BYTE PARA_REQ_ZONE_LIST = 8;$/;"	v
PARA_RESET_CALLTIMES_LEADER	base/SessionCommand.h	/^    const BYTE PARA_RESET_CALLTIMES_LEADER = 15;$/;"	v
PARA_RESIGN_POSITION_SEPT	tmpcode/commond.h	/^const BYTE PARA_RESIGN_POSITION_SEPT = 93;$/;"	v
PARA_RESTART_SERVERENTRY_NOTIFYOTHER	base/BroadCommand.h	/^    const BYTE PARA_RESTART_SERVERENTRY_NOTIFYOTHER = 9;$/;"	v
PARA_RESTART_SERVERENTRY_NOTIFYOTHER	base/SuperCommand.h	/^    const BYTE PARA_RESTART_SERVERENTRY_NOTIFYOTHER = 9;$/;"	v
PARA_RETURN_CALLTIMES_LEADER	base/SessionCommand.h	/^    const BYTE PARA_RETURN_CALLTIMES_LEADER = 14;$/;"	v
PARA_RETURN_CHANGE_COUNTRY	base/SessionCommand.h	/^    const BYTE  PARA_RETURN_CHANGE_COUNTRY = 216;$/;"	v
PARA_RETURN_ENTER_UNION_MANOR	base/SessionCommand.h	/^    const BYTE PARA_RETURN_ENTER_UNION_MANOR = 219;$/;"	v
PARA_RETURN_HERO_KILL_CMD	tmpcode/commond.h	/^const BYTE PARA_RETURN_HERO_KILL_CMD = 13;$/;"	v
PARA_RETURN_HISTORYEXPLOIT_CMD	tmpcode/commond.h	/^const BYTE PARA_RETURN_HISTORYEXPLOIT_CMD=11;$/;"	v
PARA_RETURN_OBJECT	base/SessionCommand.h	/^    const BYTE PARA_RETURN_OBJECT = 245;$/;"	v
PARA_RETURN_THISWEEK_CMD	tmpcode/commond.h	/^const BYTE PARA_RETURN_THISWEEK_CMD=9;$/;"	v
PARA_RET_CHECK_VALID	base/RolechangeCommand.h	/^    const BYTE PARA_RET_CHECK_VALID = 2;$/;"	v
PARA_RET_CHECK_ZONE_STATE	base/RolechangeCommand.h	/^    const BYTE PARA_RET_CHECK_ZONE_STATE = 7;$/;"	v
PARA_RET_SEND_USER_TOZONE	base/RolechangeCommand.h	/^    const BYTE PARA_RET_SEND_USER_TOZONE = 4;$/;"	v
PARA_RTN_ZONE_LIST	base/RolechangeCommand.h	/^    const BYTE PARA_RTN_ZONE_LIST = 9;$/;"	v
PARA_RT_POSITION_SKILL_INFO_SEPT	tmpcode/commond.h	/^const BYTE PARA_RT_POSITION_SKILL_INFO_SEPT = 91;$/;"	v
PARA_SCENE_BAIL_CHECK	base/SessionCommand.h	/^    const BYTE PARA_SCENE_BAIL_CHECK = 25;  \/\/Âèñ‰øùÂ∞±ÂåªÁöÑÊ£ÄÊü•$/;"	v
PARA_SCENE_CHANEG_SCENE	base/SessionCommand.h	/^    const BYTE PARA_SCENE_CHANEG_SCENE = 8;  \/\/ÂàáÊç¢Âú∫ÊôØ$/;"	v
PARA_SCENE_CHECKSEND	base/SessionCommand.h	/^    const BYTE PARA_SCENE_CHECKSEND = 180;$/;"	v
PARA_SCENE_CHECK_DRAW	base/MiniCommand.h	/^    const BYTE PARA_SCENE_CHECK_DRAW = 4;$/;"	v
PARA_SCENE_CHECK_NEW_MAIL	base/SessionCommand.h	/^    const BYTE PARA_SCENE_CHECK_NEW_MAIL = 188;$/;"	v
PARA_SCENE_CITY_RUSH	base/SessionCommand.h	/^    const BYTE PARA_SCENE_CITY_RUSH = 13;  \/\/ÊÄ™Áâ©ÊîªÂüéÁöÑÈÄöÁü•$/;"	v
PARA_SCENE_CITY_RUSH_CUST	base/SessionCommand.h	/^    const BYTE PARA_SCENE_CITY_RUSH_CUST = 24;  \/\/Ëá™ÂÆö‰πâÊÄ™Áâ©ÊîªÂüéÁöÑÈÄöÁü•$/;"	v
PARA_SCENE_CREATE_DARE	base/SessionCommand.h	/^    const BYTE PARA_SCENE_CREATE_DARE = 17;  \/\/ÂàõÂª∫ÂØπÊàòÊåá‰ª§$/;"	v
PARA_SCENE_CREATE_QUIZ	base/SessionCommand.h	/^    const BYTE PARA_SCENE_CREATE_QUIZ = 19;$/;"	v
PARA_SCENE_CREATE_RUSH	base/SessionCommand.h	/^    const BYTE PARA_SCENE_CREATE_RUSH = 198;$/;"	v
PARA_SCENE_CREATE_SCHOOL	base/SessionCommand.h	/^    const BYTE PARA_SCENE_CREATE_SCHOOL = 16;  \/\/GMÊåá‰ª§ÂàõÂª∫Èó®Ê¥æ$/;"	v
PARA_SCENE_DELETE_CHARTEST	base/RecordCommand.h	/^    const BYTE PARA_SCENE_DELETE_CHARTEST = 6;$/;"	v
PARA_SCENE_DEL_MAIL	base/SessionCommand.h	/^    const BYTE PARA_SCENE_DEL_MAIL = 187;$/;"	v
PARA_SCENE_DEPOSIT	base/MiniCommand.h	/^    const BYTE PARA_SCENE_DEPOSIT = 2;$/;"	v
PARA_SCENE_DEPOSIT_RET	base/MiniCommand.h	/^    const BYTE PARA_SCENE_DEPOSIT_RET = 3;$/;"	v
PARA_SCENE_DRAW_RET	base/MiniCommand.h	/^    const BYTE PARA_SCENE_DRAW_RET = 5;$/;"	v
PARA_SCENE_FORBID_TALK	base/SessionCommand.h	/^    const BYTE PARA_SCENE_FORBID_TALK = 20;$/;"	v
PARA_SCENE_FORWARD_BILL	base/BillCommand.h	/^    const BYTE PARA_SCENE_FORWARD_BILL = 4;$/;"	v
PARA_SCENE_FORWARD_USER	base/SessionCommand.h	/^    const BYTE PARA_SCENE_FORWARD_USER = 18;$/;"	v
PARA_SCENE_GET_MAIL_ITEM	base/SessionCommand.h	/^    const BYTE PARA_SCENE_GET_MAIL_ITEM = 184;$/;"	v
PARA_SCENE_GET_MAIL_ITEM_CONFIRM	base/SessionCommand.h	/^    const BYTE PARA_SCENE_GET_MAIL_ITEM_CONFIRM = 186;$/;"	v
PARA_SCENE_GET_MAIL_ITEM_RETURN	base/SessionCommand.h	/^    const BYTE PARA_SCENE_GET_MAIL_ITEM_RETURN = 185;$/;"	v
PARA_SCENE_GET_MAIL_LIST	base/SessionCommand.h	/^    const BYTE PARA_SCENE_GET_MAIL_LIST = 182;$/;"	v
PARA_SCENE_GM_COMMAND	base/SessionCommand.h	/^    const BYTE PARA_SCENE_GM_COMMAND = 9;  \/\/GMÊåá‰ª§$/;"	v
PARA_SCENE_GUARD_FAIL	base/SessionCommand.h	/^    const BYTE PARA_SCENE_GUARD_FAIL = 21;$/;"	v
PARA_SCENE_INSERT_CHARTEST	base/RecordCommand.h	/^    const BYTE PARA_SCENE_INSERT_CHARTEST = 4;$/;"	v
PARA_SCENE_LEVELUPNOTIFY	base/SessionCommand.h	/^    const BYTE PARA_SCENE_LEVELUPNOTIFY = 7;  \/\/ Áé©ÂÆ∂ÂçáÁ∫ßÈÄöÁü•‰ºöËØùÊúçÂä°Âô®$/;"	v
PARA_SCENE_MEISBATTLEFIELD	base/SessionCommand.h	/^	const BYTE PARA_SCENE_MEISBATTLEFIELD = 5;$/;"	v
PARA_SCENE_OPEN_MAIL	base/SessionCommand.h	/^    const BYTE PARA_SCENE_OPEN_MAIL = 183;$/;"	v
PARA_SCENE_PRIVATE_CHAT	base/SessionCommand.h	/^    const BYTE PARA_SCENE_PRIVATE_CHAT = 10;  \/\/Ë∑®Âú∫ÊôØÁßÅËÅä$/;"	v
PARA_SCENE_READ_CHARTEST	base/RecordCommand.h	/^    const BYTE PARA_SCENE_READ_CHARTEST = 7;$/;"	v
PARA_SCENE_REGSCENE	base/SessionCommand.h	/^    const BYTE PARA_SCENE_REGSCENE = 1;$/;"	v
PARA_SCENE_REGSCENE_RET	base/SessionCommand.h	/^    const BYTE PARA_SCENE_REGSCENE_RET = 3;$/;"	v
PARA_SCENE_REGUSER	base/SessionCommand.h	/^    const BYTE PARA_SCENE_REGUSER = 4;$/;"	v
PARA_SCENE_REGUSERSUCCESS	base/SessionCommand.h	/^    const BYTE PARA_SCENE_REGUSERSUCCESS = 6;  \/\/ Ê≥®ÂÜåÊàêÂäüÈÄöÁü•‰ºöËØùÊúçÂä°Âô®$/;"	v
PARA_SCENE_REMOVE_SCENE	base/SessionCommand.h	/^    const BYTE PARA_SCENE_REMOVE_SCENE = 14;  \/\/Âç∏ËΩΩÂú∞Âõæ$/;"	v
PARA_SCENE_REQ_ADD_SCENE	base/SessionCommand.h	/^    const BYTE PARA_SCENE_REQ_ADD_SCENE = 15;$/;"	v
PARA_SCENE_SENDMAIL	base/SessionCommand.h	/^    const BYTE PARA_SCENE_SENDMAIL = 181;$/;"	v
PARA_SCENE_SEND_CMD	base/SessionCommand.h	/^    const BYTE PARA_SCENE_SEND_CMD = 30;$/;"	v
PARA_SCENE_SEND_GIFT	base/SessionCommand.h	/^    const BYTE PARA_SCENE_SEND_GIFT = 27;  \/\/ÂèëÈÄÅÁâ©ÂìÅÈÇÆ‰ª∂ÔºåsessionÂà∞Âú∫ÊôØËé∑ÂæóÁâ©ÂìÅ$/;"	v
PARA_SCENE_SET_SCENE	base/MiniCommand.h	/^    const BYTE PARA_SCENE_SET_SCENE = 1;$/;"	v
PARA_SCENE_SYS_SETTING	base/SceneCommand.h	/^    const BYTE PARA_SCENE_SYS_SETTING = 7;  \/\/œµÕ≥…Ë÷√$/;"	v
PARA_SCENE_SYS_SETTING	base/SessionCommand.h	/^    const BYTE PARA_SCENE_SYS_SETTING = 12;  \/\/Á≥ªÁªüËÆæÁΩÆ$/;"	v
PARA_SCENE_TURN_BACK_MAIL	base/SessionCommand.h	/^    const BYTE PARA_SCENE_TURN_BACK_MAIL = 189;$/;"	v
PARA_SCENE_UNLOAD_SCENE	base/SessionCommand.h	/^    const BYTE PARA_SCENE_UNLOAD_SCENE = 11;  \/\/ÂÅúÊ≠¢Ê≥®ÂÜå$/;"	v
PARA_SCENE_UNREGSCENE	base/SessionCommand.h	/^    const BYTE PARA_SCENE_UNREGSCENE = 2;$/;"	v
PARA_SCENE_UNREGUSER	base/SessionCommand.h	/^    const BYTE PARA_SCENE_UNREGUSER = 5;$/;"	v
PARA_SCENE_UPDATE_CHARTEST	base/RecordCommand.h	/^    const BYTE PARA_SCENE_UPDATE_CHARTEST = 5;$/;"	v
PARA_SCENE_USERINFO	base/RecordCommand.h	/^    const BYTE PARA_SCENE_USERINFO = 3;$/;"	v
PARA_SCENE_USER_EXIST	base/RecordCommand.h	/^    const BYTE PARA_SCENE_USER_EXIST = 5;$/;"	v
PARA_SCENE_USER_READ	base/RecordCommand.h	/^    const BYTE PARA_SCENE_USER_READ = 1;$/;"	v
PARA_SCENE_USER_READ_ERROR	base/RecordCommand.h	195;"	d
PARA_SCENE_USER_REMOVE	base/RecordCommand.h	/^    const BYTE PARA_SCENE_USER_REMOVE = 4;$/;"	v
PARA_SCENE_USER_WRITE	base/RecordCommand.h	/^    const BYTE PARA_SCENE_USER_WRITE = 2;$/;"	v
PARA_SCENE_USER_WRITE_OK	base/RecordCommand.h	/^    const BYTE PARA_SCENE_USER_WRITE_OK = 6;$/;"	v
PARA_SCHOOL_CREATE_SUCCESS	base/SessionCommand.h	/^    const BYTE PARA_SCHOOL_CREATE_SUCCESS = 170;$/;"	v
PARA_SEL_TRANS_COUNTRY_WAR	base/SessionCommand.h	/^    const BYTE PARA_SEL_TRANS_COUNTRY_WAR = 5;$/;"	v
PARA_SEND_CHANGE_SORT	base/RolechangeCommand.h	/^    const BYTE PARA_SEND_CHANGE_SORT = 10;$/;"	v
PARA_SEND_USER_RELATION_ID	base/SessionCommand.h	/^    const BYTE PARA_SEND_USER_RELATION_ID = 50;$/;"	v
PARA_SEND_USER_TOZONE	base/RolechangeCommand.h	/^    const BYTE PARA_SEND_USER_TOZONE = 3;$/;"	v
PARA_SEPT_ADDMEMBER	base/SessionCommand.h	/^    const BYTE PARA_SEPT_ADDMEMBER = 122;$/;"	v
PARA_SEPT_ADDSEPT	base/SessionCommand.h	/^    const BYTE PARA_SEPT_ADDSEPT = 121;$/;"	v
PARA_SEPT_DISBAND	base/SessionCommand.h	/^    const BYTE PARA_SEPT_DISBAND = 101;$/;"	v
PARA_SEPT_EXP_DISTRIBUTE	base/SessionCommand.h	/^    const BYTE PARA_SEPT_EXP_DISTRIBUTE = 124;$/;"	v
PARA_SEPT_FIREMEMBER	base/SessionCommand.h	/^    const BYTE PARA_SEPT_FIREMEMBER = 123;$/;"	v
PARA_SEPT_NPCDARE_DARE	base/SessionCommand.h	/^    const BYTE PARA_SEPT_NPCDARE_DARE = 127;$/;"	v
PARA_SEPT_NPCDARE_GETGOLD	base/SessionCommand.h	/^    const BYTE PARA_SEPT_NPCDARE_GETGOLD = 130;$/;"	v
PARA_SEPT_NPCDARE_GMCMD	base/SessionCommand.h	/^    const BYTE PARA_SEPT_NPCDARE_GMCMD = 132;$/;"	v
PARA_SEPT_NPCDARE_ITEMBACK	base/SessionCommand.h	/^    const BYTE PARA_SEPT_NPCDARE_ITEMBACK = 131;$/;"	v
PARA_SEPT_NPCDARE_NOTIFYSCENE	base/SessionCommand.h	/^    const BYTE PARA_SEPT_NPCDARE_NOTIFYSCENE = 128;$/;"	v
PARA_SEPT_NPCDARE_RESULT	base/SessionCommand.h	/^    const BYTE PARA_SEPT_NPCDARE_RESULT = 129;$/;"	v
PARA_SERVER_NOTIFY	base/SessionCommand.h	/^    const BYTE PARA_SERVER_NOTIFY = 28;$/;"	v
PARA_SERVICE_GOLD	base/SceneCommand.h	/^    const BYTE PARA_SERVICE_GOLD = 8;$/;"	v
PARA_SERVICE_STOCK	base/SceneCommand.h	/^    const BYTE PARA_SERVICE_STOCK = 9;$/;"	v
PARA_SESSION_IDINUSE	base/FLCommand.h	/^    const BYTE PARA_SESSION_IDINUSE = 2;$/;"	v
PARA_SESSION_NEWSESSION	base/FLCommand.h	/^    const BYTE PARA_SESSION_NEWSESSION = 1;$/;"	v
PARA_SET_ANTI_ATT_FLAG	base/SessionCommand.h	/^    const BYTE PARA_SET_ANTI_ATT_FLAG = 8;$/;"	v
PARA_SET_CATCHER_STATE	base/SessionCommand.h	/^    const BYTE PARA_SET_CATCHER_STATE = 21;$/;"	v
PARA_SET_COUNTRY_WAR	base/SessionCommand.h	/^    const BYTE PARA_SET_COUNTRY_WAR = 4;$/;"	v
PARA_SET_DIPLOMAT_STATE	base/SessionCommand.h	/^    const BYTE PARA_SET_DIPLOMAT_STATE = 20;$/;"	v
PARA_SET_EMPEROR_DARE	base/SessionCommand.h	/^    const BYTE PARA_SET_EMPEROR_DARE = 9;$/;"	v
PARA_SET_EMPEROR_HOLD	base/SessionCommand.h	/^    const BYTE PARA_SET_EMPEROR_HOLD = 15;$/;"	v
PARA_SET_SERVICE	base/SessionCommand.h	/^    const BYTE PARA_SET_SERVICE = 23;$/;"	v
PARA_SHUTDOWN	base/SessionCommand.h	/^    const BYTE PARA_SHUTDOWN = 1;$/;"	v
PARA_SHUTDOWN	base/SuperCommand.h	/^    const BYTE PARA_SHUTDOWN =1;$/;"	v
PARA_SPEND_GOLD	base/SessionCommand.h	/^    const BYTE PARA_SPEND_GOLD = 22;$/;"	v
PARA_STARTUP_OK	base/BroadCommand.h	/^    const BYTE PARA_STARTUP_OK = 5;$/;"	v
PARA_STARTUP_OK	base/SuperCommand.h	/^    const BYTE PARA_STARTUP_OK = 5;$/;"	v
PARA_STARTUP_REQUEST	base/BroadCommand.h	/^    const BYTE PARA_STARTUP_REQUEST = 1;$/;"	v
PARA_STARTUP_REQUEST	base/SuperCommand.h	/^    const BYTE PARA_STARTUP_REQUEST = 1;$/;"	v
PARA_STARTUP_RESPONSE	base/BroadCommand.h	/^    const BYTE PARA_STARTUP_RESPONSE = 2;$/;"	v
PARA_STARTUP_RESPONSE	base/SuperCommand.h	/^    const BYTE PARA_STARTUP_RESPONSE = 2;$/;"	v
PARA_STARTUP_SERVERENTRY_NOTIFYME	base/SuperCommand.h	/^    const BYTE PARA_STARTUP_SERVERENTRY_NOTIFYME = 3;$/;"	v
PARA_STARTUP_SERVERENTRY_NOTIFYOTHER	base/SuperCommand.h	/^    const BYTE PARA_STARTUP_SERVERENTRY_NOTIFYOTHER = 4;$/;"	v
PARA_STOCK_FETCH	base/BillCommand.h	/^    const BYTE PARA_STOCK_FETCH = 1;$/;"	v
PARA_STOCK_LOGIN	base/BillCommand.h	/^    const BYTE PARA_STOCK_LOGIN = 2;$/;"	v
PARA_STOCK_LOGOUT	base/BillCommand.h	/^    const BYTE PARA_STOCK_LOGOUT = 2;$/;"	v
PARA_STOCK_SAVE	base/BillCommand.h	/^    const BYTE PARA_STOCK_SAVE = 2;$/;"	v
PARA_STOPCHANGE_SCENE	base/SuperCommand.h	/^    const BYTE PARA_STOPCHANGE_SCENE = 1;$/;"	v
PARA_SUMMON_ALLY_NPC	base/SessionCommand.h	/^    const BYTE PARA_SUMMON_ALLY_NPC = 13;$/;"	v
PARA_TAXADD_COUNTRY	base/SessionCommand.h	/^    const BYTE PARA_TAXADD_COUNTRY = 137;$/;"	v
PARA_TAX_COUNTRY	base/SessionCommand.h	/^    const BYTE PARA_TAX_COUNTRY = 136;$/;"	v
PARA_TRANS_DARE_COUNTRY	base/SessionCommand.h	/^    const BYTE PARA_TRANS_DARE_COUNTRY = 217;$/;"	v
PARA_UNION_ADDMEMBER	base/SessionCommand.h	/^    const BYTE PARA_UNION_ADDMEMBER = 102;$/;"	v
PARA_UNION_ADDUNION	base/SessionCommand.h	/^    const BYTE PARA_UNION_ADDUNION = 101;$/;"	v
PARA_UNION_CITY_DARE	base/SessionCommand.h	/^    const BYTE PARA_UNION_CITY_DARE = 5;$/;"	v
PARA_UNION_CITY_DARE_RESULT	base/SessionCommand.h	/^    const BYTE PARA_UNION_CITY_DARE_RESULT = 6;$/;"	v
PARA_UNION_DARE_NOTIFY	base/SessionCommand.h	/^    const BYTE PARA_UNION_DARE_NOTIFY = 225;$/;"	v
PARA_UNION_DISBAND	base/SessionCommand.h	/^    const BYTE PARA_UNION_DISBAND = 100;$/;"	v
PARA_UNION_FIREMEMBER	base/SessionCommand.h	/^    const BYTE PARA_UNION_FIREMEMBER = 103;$/;"	v
PARA_UPDATE_ALLY	base/SessionCommand.h	/^    const BYTE PARA_UPDATE_ALLY = 11;$/;"	v
PARA_UPDATE_CONSORT	base/SessionCommand.h	/^    const BYTE PARA_UPDATE_CONSORT = 51;$/;"	v
PARA_UPDATE_COUNTRY_STAR	base/SessionCommand.h	/^    const BYTE PARA_UPDATE_COUNTRY_STAR = 52;$/;"	v
PARA_UPDATE_SCENE_UNION	base/SessionCommand.h	/^    const BYTE PARA_UPDATE_SCENE_UNION = 9;$/;"	v
PARA_UPDATE_TECH	base/SessionCommand.h	/^    const BYTE PARA_UPDATE_TECH = 7;$/;"	v
PARA_USER_ARCHIVE_READ	base/SessionCommand.h	/^    const BYTE PARA_USER_ARCHIVE_READ = 201;$/;"	v
PARA_USER_ARCHIVE_REQ	base/SessionCommand.h	/^    const BYTE PARA_USER_ARCHIVE_REQ = 200;$/;"	v
PARA_USER_ARCHIVE_WRITE	base/SessionCommand.h	/^    const BYTE PARA_USER_ARCHIVE_WRITE = 202;$/;"	v
PARA_USER_FORWARD_MINI	base/MiniCommand.h	/^    const BYTE PARA_USER_FORWARD_MINI = 2;$/;"	v
PARA_USER_TEAM_ADDMEMBER	base/SessionCommand.h	/^    const BYTE PARA_USER_TEAM_ADDMEMBER = 203;$/;"	v
PARA_USER_TEAM_CHANGE_LEADER	base/SessionCommand.h	/^	const BYTE PARA_USER_TEAM_CHANGE_LEADER = 207;$/;"	v
PARA_USER_TEAM_DATA	base/SessionCommand.h	/^    const BYTE PARA_USER_TEAM_DATA = 206;$/;"	v
PARA_USER_TEAM_DELMEMBER	base/SessionCommand.h	/^    const BYTE PARA_USER_TEAM_DELMEMBER = 204;$/;"	v
PARA_USER_TEAM_REQUEST	base/SessionCommand.h	/^    const BYTE PARA_USER_TEAM_REQUEST = 205;$/;"	v
PARA_USER_TEAM_REQUEST_TEAM	base/SessionCommand.h	/^	const BYTE PARA_USER_TEAM_REQUEST_TEAM = 208;$/;"	v
PARA_USE_SPORTS_ADDMETOQUEUING	base/SessionCommand.h	/^	const BYTE PARA_USE_SPORTS_ADDMETOQUEUING = 1;$/;"	v
PARA_USE_SPORTS_MOVESECEN	base/SessionCommand.h	/^	const BYTE PARA_USE_SPORTS_MOVESECEN = 2;$/;"	v
PARA_USE_SPORTS_REQUESTMAP	base/SessionCommand.h	/^	const BYTE PARA_USE_SPORTS_REQUESTMAP = 3;$/;"	v
PARA_USE_SPORTS_RETURNMAPID	base/SessionCommand.h	/^	const BYTE PARA_USE_SPORTS_RETURNMAPID = 4;$/;"	v
PARA_USE_TEAM_ADDME	base/SessionCommand.h	/^	const BYTE PARA_USE_TEAM_ADDME = 210;$/;"	v
PARA_USE_TEAM_ADDMOVESCENEMAMBER	base/SessionCommand.h	/^	const BYTE PARA_USE_TEAM_ADDMOVESCENEMAMBER = 212;$/;"	v
PARA_USE_TEAM_ANSWER_TEAM	base/SessionCommand.h	/^	const BYTE PARA_USE_TEAM_ANSWER_TEAM = 209;$/;"	v
PARA_USE_TEAM_DELTEAM	base/SessionCommand.h	/^	const BYTE PARA_USE_TEAM_DELTEAM = 211;$/;"	v
PARA_USLEEP_TIME	base/SceneCommand.h	/^    const BYTE PARA_USLEEP_TIME = 10;$/;"	v
PARA_VIEW_COUNTRY_DARE	base/SessionCommand.h	/^    const BYTE PARA_VIEW_COUNTRY_DARE = 1;$/;"	v
PARA_WINNER_EXP_SCENE_COUNTRY	base/SessionCommand.h	/^    const BYTE PARA_WINNER_EXP_SCENE_COUNTRY = 10;$/;"	v
PARA_ZHONGLICITY_HOME_MENU	tmpcode/commond.h	/^const BYTE PARA_ZHONGLICITY_HOME_MENU = 148;$/;"	v
PARA_ZHONGLICITY_LIST	tmpcode/commond.h	/^const BYTE PARA_ZHONGLICITY_LIST = 145;$/;"	v
PARA_ZHONGLICITY_LIVE	tmpcode/commond.h	/^const BYTE PARA_ZHONGLICITY_LIVE = 144;$/;"	v
PARA_ZHONGLICITY_STATE_INFO	tmpcode/commond.h	/^const BYTE PARA_ZHONGLICITY_STATE_INFO = 147;$/;"	v
PARA_ZHONGLICITY_TIME	tmpcode/commond.h	/^const BYTE PARA_ZHONGLICITY_TIME = 146;$/;"	v
PASSWD_LOGON_USERCMD_PARA	base/Command.h	/^const BYTE PASSWD_LOGON_USERCMD_PARA = 5;$/;"	v
PASSWD_LOGON_USERCMD_PARA	tmpcode/commond.h	/^const BYTE PASSWD_LOGON_USERCMD_PARA = 5;$/;"	v
PASSWORD_LOGON_USERCMD_PARA	base/Command.h	/^const BYTE PASSWORD_LOGON_USERCMD_PARA = 9;$/;"	v
PASSWORD_STOCKPARA	base/Command.h	7406;"	d
PASSWORD_STOCKPARA	tmpcode/commond.h	23363;"	d
PCARD_NO_LENGTH	base/UserCommand.h	/^    const int PCARD_NO_LENGTH = 20;    \/\/ÈÅìÂÖ∑Âç°Âè∑ÈïøÂ∫¶$/;"	v
PDEFENCE	tmpcode/commond.h	/^	PDEFENCE=2,$/;"	e	enum:__anon320
PEND_COUNTRY_ALLY	tmpcode/commond.h	/^	PEND_COUNTRY_ALLY = 7,            \/\/ À´∑Ω“—Õ¨“‚Ω·√À, –Ë24h∫Û≤≈ƒ‹’˝ ΩΩ·√À$/;"	e	enum:CountryAllyActionEnum
PERFORM_TYPE	tmpcode/commond.h	/^enum PERFORM_TYPE$/;"	g
PERM_OP	base/EncDec/EncDec.h	144;"	d
PERM_OP	base/EncDec/mydes.h	45;"	d
PERSONAL_TREND_TYPE_HELP_MAGICSTOVE	tmpcode/commond.h	/^	PERSONAL_TREND_TYPE_HELP_MAGICSTOVE,  \/\/ ∞Ô÷˙ƒß¡¶¬Øπ‡ƒß$/;"	e	enum:__anon209
PERSON_RESULT_CHALLENGE_PARA	tmpcode/commond.h	21905;"	d
PER_LEVEL_MAN_NUM	base/Sept.h	/^const DWORD PER_LEVEL_MAN_NUM    = 100;    \/\/ √øº∂±‘ˆº”»À ˝$/;"	v
PET	base/CharBase.h	/^  PET,\/\/ÂÆ†Áâ©$/;"	e	enum:TempArchiveType
PETAI_ATK_ACTIVE	base/Command.h	/^  PETAI_ATK_ACTIVE  = 0x0100,\/\/ÊîªÂáªÊâÄÊúâÊïå‰∫∫$/;"	e	enum:Cmd::petAIMode
PETAI_ATK_ACTIVE	tmpcode/commond.h	/^	PETAI_ATK_ACTIVE        = 0x0100,       \/\/π•ª˜À˘”–µ–»À$/;"	e	enum:petAIMode
PETAI_ATK_NOATK	base/Command.h	/^  PETAI_ATK_NOATK    = 0x0400  \/\/‰∏çÊàòÊñó$/;"	e	enum:Cmd::petAIMode
PETAI_ATK_NOATK	tmpcode/commond.h	/^	PETAI_ATK_NOATK         = 0x0400        \/\/≤ª’Ω∂∑$/;"	e	enum:petAIMode
PETAI_ATK_PASSIVE	base/Command.h	/^  PETAI_ATK_PASSIVE  = 0x0200,\/\/ÊîªÂáªÊ≠£Âú®ÊîªÂáª‰∏ª‰∫∫ÁöÑÊïå‰∫∫$/;"	e	enum:Cmd::petAIMode
PETAI_ATK_PASSIVE	tmpcode/commond.h	/^	PETAI_ATK_PASSIVE       = 0x0200,       \/\/π•ª˜’˝‘⁄π•ª˜÷˜»Àµƒµ–»À$/;"	e	enum:petAIMode
PETAI_MOVE_FOLLOW	base/Command.h	/^  PETAI_MOVE_FOLLOW  = 0x0001,\/\/Ë∑üÈöè$/;"	e	enum:Cmd::petAIMode
PETAI_MOVE_FOLLOW	tmpcode/commond.h	/^	PETAI_MOVE_FOLLOW       = 0x0001,       \/\/∏˙ÀÊ$/;"	e	enum:petAIMode
PETAI_MOVE_NOCONTROL	tmpcode/commond.h	/^	PETAI_MOVE_NOCONTROL    = 0x0004,       \/\/≤ª∏˙ÀÊµ´ø…“∆∂Ø kok:ych$/;"	e	enum:petAIMode
PETAI_MOVE_STAND	base/Command.h	/^  PETAI_MOVE_STAND  = 0x0002,\/\/Á´ôÁ´ã‰∏çÂä®$/;"	e	enum:Cmd::petAIMode
PETAI_MOVE_STAND	tmpcode/commond.h	/^	PETAI_MOVE_STAND        = 0x0002,       \/\/’æ¡¢≤ª∂Ø$/;"	e	enum:petAIMode
PET_PACK	ScenesServer/zObject.h	/^      PET_PACK = 128,$/;"	e	enum:Packages::__anon178
PET_PACK	base/Object.h	/^	PET_PACK = 128,$/;"	e	enum:__anon54
PET_SKILL_GROUP	tmpcode/commond.h	/^	PET_SKILL_GROUP = 2,$/;"	e	enum:petSkillMode
PET_SKILL_MODE_MAX	tmpcode/commond.h	/^	PET_SKILL_MODE_MAX$/;"	e	enum:petSkillMode
PET_SKILL_NONE	tmpcode/commond.h	/^	PET_SKILL_NONE = 0,$/;"	e	enum:petSkillMode
PET_SKILL_SINGLE	tmpcode/commond.h	/^	PET_SKILL_SINGLE = 1,$/;"	e	enum:petSkillMode
PET_STATE_CONSIGN	base/Command.h	/^  PET_STATE_CONSIGN  = 4    \/\/ÂØÑÂ≠ò$/;"	e	enum:Cmd::petState
PET_STATE_CONSIGN	tmpcode/commond.h	/^	PET_STATE_CONSIGN       = 4     \/\/ºƒ¥Ê$/;"	e	enum:petState
PET_STATE_DEAD	base/Command.h	/^  PET_STATE_DEAD    = 3,\/\/Ê≠ª‰∫°$/;"	e	enum:Cmd::petState
PET_STATE_DEAD	tmpcode/commond.h	/^	PET_STATE_DEAD          = 3,    \/\/À¿Õˆ$/;"	e	enum:petState
PET_STATE_NOPET	base/Command.h	/^  PET_STATE_NOPET    = 0,\/\/Ê≤°ÊúâÂÆ†Áâ©$/;"	e	enum:Cmd::petState
PET_STATE_NOPET	tmpcode/commond.h	/^	PET_STATE_NOPET         = 0,    \/\/√ª”–≥ËŒÔ$/;"	e	enum:petState
PET_STATE_NORMAL	base/Command.h	/^  PET_STATE_NORMAL  = 1,\/\/ÊôÆÈÄö$/;"	e	enum:Cmd::petState
PET_STATE_NORMAL	tmpcode/commond.h	/^	PET_STATE_NORMAL        = 1,    \/\/∆’Õ®$/;"	e	enum:petState
PET_STATE_PUTUP	base/Command.h	/^  PET_STATE_PUTUP    = 2,\/\/Êî∂Ëµ∑$/;"	e	enum:Cmd::petState
PET_STATE_PUTUP	tmpcode/commond.h	/^	PET_STATE_PUTUP         = 2,    \/\/ ’∆$/;"	e	enum:petState
PET_TYPE_ATTENDANT	tmpcode/commond.h	/^	PET_TYPE_ATTENDANT      = 8,    \/\/ ÀÊ¥”, µ»Õ¨”⁄PET_TYPE_PET, µ´ø…“‘∂‡∏ˆ$/;"	e	enum:petType
PET_TYPE_CARTOON	base/Command.h	/^  PET_TYPE_CARTOON			= 7,\/\/Âç°ÈÄöÂÆùÂÆù$/;"	e	enum:Cmd::petType
PET_TYPE_CARTOON	tmpcode/commond.h	/^    PET_TYPE_CARTOON        = 7,     \/\/ø®Õ®±¶±¶$/;"	e	enum:petType
PET_TYPE_COUNTER	tmpcode/commond.h	/^	PET_TYPE_COUNTER        = 9,    \/\/ ∑¥◊‘º∫µƒπ÷ŒÔ£∫»ŒŒÒ≥ËŒÔ”√$/;"	e	enum:petType
PET_TYPE_GUARDNPC	base/Command.h	/^  PET_TYPE_GUARDNPC			= 5,\/\/Ë¶ÅÊä§Âç´ÁöÑnpc$/;"	e	enum:Cmd::petType
PET_TYPE_GUARDNPC	tmpcode/commond.h	/^    PET_TYPE_GUARDNPC       = 5,    \/\/“™ª§Œ¿µƒnpc$/;"	e	enum:petType
PET_TYPE_MAX	tmpcode/commond.h	/^	PET_TYPE_MAX    $/;"	e	enum:petType
PET_TYPE_NOTPET	base/Command.h	/^  PET_TYPE_NOTPET			= 0,\/\/‰∏çÊòØÂÆ†Áâ©$/;"	e	enum:Cmd::petType
PET_TYPE_NOTPET	tmpcode/commond.h	/^    PET_TYPE_NOTPET         = 0,    \/\/≤ª «≥ËŒÔ$/;"	e	enum:petType
PET_TYPE_PET	base/Command.h	/^  PET_TYPE_PET				= 2,\/\/ÂÆ†Áâ©$/;"	e	enum:Cmd::petType
PET_TYPE_PET	tmpcode/commond.h	/^    PET_TYPE_PET            = 2,    \/\/≥ËŒÔ$/;"	e	enum:petType
PET_TYPE_RIDE	base/Command.h	/^  PET_TYPE_RIDE				= 1,\/\/ÂùêÈ™ë$/;"	e	enum:Cmd::petType
PET_TYPE_RIDE	tmpcode/commond.h	/^    PET_TYPE_RIDE           = 1,    \/\/◊¯∆Ô$/;"	e	enum:petType
PET_TYPE_SEMI	base/Command.h	/^  PET_TYPE_SEMI				= 6,\/\/ÂçäÂÆ†Áâ©ÔºåË∑ü‰∏ª‰∫∫ÂêåÁîüÂêåÊ≠ªÔºåAIÂÆåÂÖ®Ê≤°ÂÖ≥Á≥ª$/;"	e	enum:Cmd::petType
PET_TYPE_SEMI	tmpcode/commond.h	/^    PET_TYPE_SEMI           = 6,    \/\/∞Î≥ËŒÔ£¨∏˙÷˜»ÀÕ¨…˙Õ¨À¿£¨AIÕÍ»´√ªπÿœµ$/;"	e	enum:petType
PET_TYPE_SUMMON	base/Command.h	/^  PET_TYPE_SUMMON			= 3,\/\/Âè¨Âî§ÂÖΩ$/;"	e	enum:Cmd::petType
PET_TYPE_SUMMON	tmpcode/commond.h	/^    PET_TYPE_SUMMON         = 3,    \/\/’ŸªΩ ﬁ$/;"	e	enum:petType
PET_TYPE_TOTEM	base/Command.h	/^  PET_TYPE_TOTEM			= 4,\/\/ÂõæËÖæ$/;"	e	enum:Cmd::petType
PET_TYPE_TOTEM	tmpcode/commond.h	/^    PET_TYPE_TOTEM          = 4,    \/\/ÕºÃ⁄$/;"	e	enum:petType
PET_TYPE_TURRET	base/Command.h	/^  PET_TYPE_TURRET			= 8	\/\/sky ÁÇÆÂ°î$/;"	e	enum:Cmd::petType
PET_USERCMD	base/CmdType.h	/^const BYTE PET_USERCMD                  = 29;$/;"	v
PET_USERCMD	tmpcode/commond.h	/^const BYTE PET_USERCMD         = 29;$/;"	v
PH_LEN	base/zSocket.h	/^	static const DWORD PH_LEN       =  sizeof(DWORD);  \/**<  ˝æ›∞¸∞¸Õ∑¥Û–° *\/$/;"	m	class:zSocket
PICKUPITEM_PROPERTY_USERCMD_PARA	base/Command.h	3273;"	d
PICKUPITEM_PROPERTY_USERCMD_PARA	tmpcode/commond.h	4374;"	d
PICKUP_MASTER_SCENE_PARA	base/SessionCommand.h	/^    const BYTE PICKUP_MASTER_SCENE_PARA = 226;$/;"	v
PICKUP_RECOMMEND_SCENE_PARA	base/SessionCommand.h	/^    const BYTE PICKUP_RECOMMEND_SCENE_PARA = 1;$/;"	v
PICK_OBJ_SEPT_POPO_PARA	tmpcode/commond.h	26518;"	d
PICTURE_EFFECT_MAP_SCREEN_USERCMD	tmpcode/commond.h	/^const BYTE  PICTURE_EFFECT_MAP_SCREEN_USERCMD = 138;$/;"	v
PING_LIST_PARA	base/Command.h	/^const BYTE PING_LIST_PARA = 1;$/;"	v
PING_TIMER_USERCMD_PARA	base/Command.h	/^const BYTE PING_TIMER_USERCMD_PARA = 4;$/;"	v
PING_TIMER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE PING_TIMER_USERCMD_PARA = 4;$/;"	v
PING_USERCMD	base/CmdType.h	/^const BYTE PING_USERCMD      = 30;$/;"	v
PIPELINE_AGREE	base/Command.h	/^  PIPELINE_AGREE,\/\/ÂêåÊÑè$/;"	e	enum:Cmd::enmCallDutyPipeline
PIPELINE_AGREE	tmpcode/commond.h	/^	PIPELINE_AGREE,		  \/\/Õ¨“‚$/;"	e	enum:enmCallDutyPipeline
PIPELINE_CALL	base/Command.h	/^  PIPELINE_CALL = 0,\/\/Âè¨Âî§$/;"	e	enum:Cmd::enmCallDutyPipeline
PIPELINE_CALL	tmpcode/commond.h	/^	PIPELINE_CALL = 0,	  \/\/’ŸªΩ$/;"	e	enum:enmCallDutyPipeline
PIPELINE_NUM	base/Command.h	/^  PIPELINE_NUM$/;"	e	enum:Cmd::enmCallDutyPipeline
PIPELINE_NUM	tmpcode/commond.h	/^	PIPELINE_NUM$/;"	e	enum:enmCallDutyPipeline
PIPELINE_REFUSE	base/Command.h	/^  PIPELINE_REFUSE,\/\/ÊãíÁªù$/;"	e	enum:Cmd::enmCallDutyPipeline
PIPELINE_REFUSE	tmpcode/commond.h	/^	PIPELINE_REFUSE,	  \/\/æ‹æ¯$/;"	e	enum:enmCallDutyPipeline
PKDATA_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE PKDATA_PROPERTY_USERCMD_PARA = 167;$/;"	v
PKMODE_ALLY	base/Command.h	/^  PKMODE_ALLY,\/\/ÂõΩÂÆ∂ËÅîÁõü$/;"	e	enum:Cmd::__anon82
PKMODE_COUNTRY	base/Command.h	/^  PKMODE_COUNTRY,\/\/ÂõΩÂÆ∂Ê®°Âºè$/;"	e	enum:Cmd::__anon82
PKMODE_ENTIRE	base/Command.h	/^  PKMODE_ENTIRE,\/\/ÂÖ®‰ΩìÊ®°Âºè$/;"	e	enum:Cmd::__anon82
PKMODE_ENTIRE	tmpcode/commond.h	/^    PKMODE_ENTIRE,        \/\/»´ÃÂƒ£ Ω$/;"	e	enum:__anon249
PKMODE_FRIEND	tmpcode/commond.h	/^	PKMODE_FRIEND,          \/\/Õ¨√À   ÕÚÕı–¬‘ˆ$/;"	e	enum:__anon249
PKMODE_GOODNESS	base/Command.h	/^  PKMODE_GOODNESS,\/\/ÂñÑÊÅ∂Ê®°Âºè$/;"	e	enum:Cmd::__anon82
PKMODE_JUSTICE	tmpcode/commond.h	/^	PKMODE_JUSTICE,		  \/\/’˝“Â   ÕÚÕı–¬‘ˆ$/;"	e	enum:__anon249
PKMODE_MAX	base/Command.h	/^  PKMODE_MAX,\/\/ÊúÄÂ§ßÂÄº$/;"	e	enum:Cmd::__anon82
PKMODE_MAX	tmpcode/commond.h	/^    PKMODE_MAX,                     \/\/◊Ó¥Û÷µ$/;"	e	enum:__anon249
PKMODE_MER	tmpcode/commond.h	/^	PKMODE_MER,		       \/\/”∂±¯Õ≈ ÕÚÕı–¬‘ˆ$/;"	e	enum:__anon249
PKMODE_NORMAL	base/Command.h	/^  PKMODE_NORMAL,\/\/ÂíåÂπ≥Ê®°Âºè$/;"	e	enum:Cmd::__anon82
PKMODE_NORMAL	tmpcode/commond.h	/^	PKMODE_NORMAL,          \/\/∫Õ∆Ω	$/;"	e	enum:__anon249
PKMODE_REGION	tmpcode/commond.h	/^	PKMODE_REGION,		   \/\/ΩÁ”Ú   ÕÚÕı–¬‘ˆ	$/;"	e	enum:__anon249
PKMODE_SEPT	base/Command.h	/^  PKMODE_SEPT,\/\/ÂÆ∂ÊóèÊ®°Âºè$/;"	e	enum:Cmd::__anon82
PKMODE_SEPT	tmpcode/commond.h	/^    PKMODE_SEPT,            \/\/º“◊Â$/;"	e	enum:__anon249
PKMODE_TEAM	base/Command.h	/^  PKMODE_TEAM,\/\/ÁªÑÈòüÊ®°Âºè$/;"	e	enum:Cmd::__anon82
PKMODE_TEAM	tmpcode/commond.h	/^	PKMODE_TEAM,            \/\/◊È∂”$/;"	e	enum:__anon249
PKMODE_TONG	base/Command.h	/^  PKMODE_TONG,\/\/Â∏Æ‰ºöÊ®°Âºè$/;"	e	enum:Cmd::__anon82
PKMODE_USERCMD_PARA	base/Command.h	/^const BYTE PKMODE_USERCMD_PARA = 20;$/;"	v
PKMODE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE PKMODE_USERCMD_PARA = 20;$/;"	v
PLACE_OBJECT_HOUSE_USER_CMD	tmpcode/commond.h	/^const  BYTE PLACE_OBJECT_HOUSE_USER_CMD =  36;$/;"	v
PLANT	tmpcode/commond.h	/^	PLANT  	= 1,  	\/\/÷≤ŒÔ$/;"	e	enum:__anon358
PLANT_ACTION	tmpcode/commond.h	/^enum PLANT_ACTION$/;"	g
PLANT_SOIL_HOUSE_USERCMD	tmpcode/commond.h	/^const BYTE PLANT_SOIL_HOUSE_USERCMD = 28;$/;"	v
PLAYER_QUITCLOCK_PARA	tmpcode/commond.h	/^const BYTE PLAYER_QUITCLOCK_PARA =128;$/;"	v
PLAYSOUND_QUEST_PARA	tmpcode/commond.h	/^static const BYTE PLAYSOUND_QUEST_PARA        = 10;   \/\/Õ®÷™øÕªß∂À≤•∑≈“Ù¿÷$/;"	v
POPUP_DIAL_DAILY_QUEST_PARA	tmpcode/commond.h	/^const BYTE POPUP_DIAL_DAILY_QUEST_PARA = 11;$/;"	v
POP_DINGZHUI	tmpcode/commond.h	/^	POP_DINGZHUI,\/\/∂®◊Ô$/;"	e	enum:enumPopEffect
POP_ELEC	tmpcode/commond.h	/^	POP_ELEC,\/\/µÁ‘™Àÿ$/;"	e	enum:enumPopEffect
POP_FIRE	tmpcode/commond.h	/^	POP_FIRE,\/\/ª‘™Àÿ$/;"	e	enum:enumPopEffect
POP_HP	base/Command.h	/^  POP_HP,$/;"	e	enum:Cmd::enumPopEffect
POP_HP	tmpcode/commond.h	/^	POP_HP, $/;"	e	enum:enumPopEffect
POP_ICE	tmpcode/commond.h	/^	POP_ICE,\/\/±˘‘™Àÿ$/;"	e	enum:enumPopEffect
POP_MP	base/Command.h	/^  POP_MP,$/;"	e	enum:Cmd::enumPopEffect
POP_MP	tmpcode/commond.h	/^	POP_MP, $/;"	e	enum:enumPopEffect
POP_NUM	base/Command.h	/^  POP_NUM,$/;"	e	enum:Cmd::enumPopEffect
POP_NUM	tmpcode/commond.h	/^	POP_NUM,$/;"	e	enum:enumPopEffect
POP_THUNDER	tmpcode/commond.h	/^	POP_THUNDER,\/\/¿◊‘™Àÿ$/;"	e	enum:enumPopEffect
POP_TISHENGZHIYING	tmpcode/commond.h	/^	POP_TISHENGZHIYING,\/\/ÃÊ…Ì÷Æ”∞$/;"	e	enum:enumPopEffect
POP_WIND	tmpcode/commond.h	/^	POP_WIND,\/\/∑Á‘™Àÿ$/;"	e	enum:enumPopEffect
POP_ZHICAI	tmpcode/commond.h	/^	POP_ZHICAI,\/\/÷∆≤√$/;"	e	enum:enumPopEffect
POSITION_NAME_LIST_PARA	tmpcode/commond.h	/^const BYTE POSITION_NAME_LIST_PARA = 89;$/;"	v
POSTIONOP	tmpcode/commond.h	/^enum POSTIONOP$/;"	g
POTENTIAL_SKILL_LEVEL_SWAP	tmpcode/commond.h	/^const BYTE POTENTIAL_SKILL_LEVEL_SWAP = 231;$/;"	v
POTENTIAL_SKILL_MAX	tmpcode/commond.h	/^const WORD POTENTIAL_SKILL_MAX = 50005;\/\/«±ƒ‹ººƒ‹◊Ó¥Û÷µ$/;"	v
POTENTIAL_SKILL_MIN	tmpcode/commond.h	/^const WORD POTENTIAL_SKILL_MIN = 50001;\/\/«±ƒ‹ººƒ‹◊Ó–°÷µ$/;"	v
PRESENT_BAR_GIRL_USERCMD	tmpcode/commond.h	/^const BYTE PRESENT_BAR_GIRL_USERCMD = 45;$/;"	v
PRE_REG_SEPT_POPO_PARA	tmpcode/commond.h	26441;"	d
PRISON_USERCMD	base/CmdType.h	/^const BYTE PRISON_USERCMD    = 43;$/;"	v
PRISON_USERCMD	tmpcode/commond.h	/^const BYTE PRISON_USERCMD               = 43;$/;"	v
PRIVATEGUARDHELP	tmpcode/commond.h	/^const BYTE PRIVATEGUARDHELP = 148;$/;"	v
PRIVATESTORE_NAME_USERCMD_PARAMETER	tmpcode/commond.h	12280;"	d
PRIVATE_CHAT_ACT_INVITE	base/SessionCommand.h	/^    const BYTE PRIVATE_CHAT_ACT_INVITE = 1;  \/\/ÈÇÄËØ∑$/;"	v
PRIVATE_CHAT_ACT_JOIN	base/SessionCommand.h	/^    const BYTE PRIVATE_CHAT_ACT_JOIN = 2;  \/\/Âä†ÂÖ•$/;"	v
PRIVATE_CHAT_ACT_LEAVE	base/SessionCommand.h	/^    const BYTE PRIVATE_CHAT_ACT_LEAVE = 3;  \/\/Á¶ªÂºÄ$/;"	v
PRIVATE_CHAT_ERR_FILTER	base/SessionCommand.h	/^    const BYTE PRIVATE_CHAT_ERR_FILTER = 2;  \/\/ÂØπÊñπÊ≤°ÂºÄÂêØÁßÅËÅä$/;"	v
PRIVATE_CHAT_ERR_NOUSER	base/SessionCommand.h	/^    const BYTE PRIVATE_CHAT_ERR_NOUSER = 1;  \/\/Áé©ÂÆ∂‰∏çÂú®Á∫ø$/;"	v
PRODUCE_INFO	tmpcode/commond.h	/^	PRODUCE_INFO,           \/\/…˙≤˙£¨add by wy 20081126$/;"	e	enum:__anon267
PRODUCE_RESOURCE	tmpcode/commond.h	/^	PRODUCE_RESOURCE = 1,  \/\/…˙≤˙ π”√◊ ‘¥$/;"	e	enum:__anon314
PRODUCING_NOW_PRO	tmpcode/commond.h	/^	PRODUCING_NOW_PRO,      \/\/’˝‘⁄…˙≤˙$/;"	e	enum:__anon272
PROFESSION_1	base/Command.h	/^    PROFESSION_1    = 1,    \/\/‰æ†ÂÆ¢$/;"	e	enum:__anon63
PROFESSION_2	base/Command.h	/^    PROFESSION_2	= 2,    \/\/‰æ†Â•≥$/;"	e	enum:__anon63
PROFESSION_3	base/Command.h	/^    PROFESSION_3    = 3,    \/\/ÁÆ≠‰æ†$/;"	e	enum:__anon63
PROFESSION_4	base/Command.h	/^    PROFESSION_4	= 4,    \/\/ÁÆ≠ÁÅµ$/;"	e	enum:__anon63
PROFESSION_5	base/Command.h	/^    PROFESSION_5    = 5,    \/\/Â§©Â∏à$/;"	e	enum:__anon63
PROFESSION_6	base/Command.h	/^    PROFESSION_6	= 6,    \/\/ÁæéÂ•≥$/;"	e	enum:__anon63
PROFESSION_7	base/Command.h	/^    PROFESSION_7    = 7,    \/\/Ê≥ïÂ∏à$/;"	e	enum:__anon63
PROFESSION_8	base/Command.h	/^    PROFESSION_8	= 8,    \/\/‰ªôÂ•≥$/;"	e	enum:__anon63
PROFESSION_NONE	base/Command.h	/^    PROFESSION_NONE = 0,$/;"	e	enum:__anon63
PROPERTY_CON	base/Command.h	/^  PROPERTY_CON = 0,\/\/‰ΩìË¥®$/;"	e	enum:Cmd::__anon92
PROPERTY_DEX	base/Command.h	/^  PROPERTY_DEX = 2,\/\/ÊïèÊç∑$/;"	e	enum:Cmd::__anon92
PROPERTY_INT	base/Command.h	/^  PROPERTY_INT = 3,\/\/Êô∫Âäõ$/;"	e	enum:Cmd::__anon92
PROPERTY_MEN	base/Command.h	/^  PROPERTY_MEN = 4  \/\/Á≤æÁ•û$/;"	e	enum:Cmd::__anon92
PROPERTY_STR	base/Command.h	/^  PROPERTY_STR = 1,\/\/ÂäõÈáè$/;"	e	enum:Cmd::__anon92
PROPERTY_USERCMD	base/CmdType.h	/^const BYTE PROPERTY_USERCMD    = 4;$/;"	v
PROPERTY_USERCMD	tmpcode/commond.h	/^const BYTE PROPERTY_USERCMD		= 4;$/;"	v
PROTECT_SEPT_GUARD	tmpcode/commond.h	/^const BYTE PROTECT_SEPT_GUARD = 34;$/;"	v
PRSET_CITY_GUARD_PARA	tmpcode/commond.h	/^const BYTE PRSET_CITY_GUARD_PARA = 12;$/;"	v
PUBLIC_COUNTRY	base/CharBase.h	/^const DWORD PUBLIC_COUNTRY = 6;$/;"	v
PUBLISH_APPLY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE PUBLISH_APPLY_USERCMD_PARA = 5;$/;"	v
PURCHASE_USERCMD	tmpcode/commond.h	/^const BYTE PURCHASE_USERCMD = 120;\/\/”Îµ•∫≈142”–≥ÂÕª,œ»Ω´∏ƒŒ™110$/;"	v
PURPLE	tmpcode/commond.h	/^            PURPLE = 8,$/;"	e	enum:ReuildType
PURPLESTONECOMP	tmpcode/commond.h	/^			PURPLESTONECOMP = 21, \/\/◊œ¡È÷È∫œ≥…$/;"	e	enum:ReuildType
PURPLE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE PURPLE_PROPERTY_USERCMD_PARA = 236;$/;"	v
PURPLE_REMOVE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE PURPLE_REMOVE_PROPERTY_USERCMD_PARA = 243;$/;"	v
PUSH_HORSE_INTO_EVOLVE_MATERIAL_PARA	tmpcode/commond.h	/^const BYTE PUSH_HORSE_INTO_EVOLVE_MATERIAL_PARA = 43;$/;"	v
PUSH_MAGICSTOVE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE PUSH_MAGICSTOVE_PROPERTY_USERCMD_PARA = 157;$/;"	v
PUSH_PURPLE_STOVE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE PUSH_PURPLE_STOVE_PROPERTY_USERCMD_PARA = 241;$/;"	v
PUTHORSE_PET_PARA	base/Command.h	/^const BYTE PUTHORSE_PET_PARA = 9;$/;"	v
PUTHORSE_PET_PARA	tmpcode/commond.h	/^const BYTE PUTHORSE_PET_PARA = 9;$/;"	v
PUT_FLAG_SC_PARA	tmpcode/commond.h	/^const BYTE PUT_FLAG_SC_PARA				= 10;$/;"	v
PUT_ITEM_STORE_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE PUT_ITEM_STORE_HOUSE_USER_CMD = 55;$/;"	v
PUT_LIST_STOCKPARA	base/Command.h	7636;"	d
PUT_LIST_STOCKPARA	tmpcode/commond.h	23620;"	d
PUT_NOTICE	tmpcode/commond.h	/^	PUT_NOTICE = 1,  \/\/∑¢≤º$/;"	e	enum:putType
PUT_ONE_GAMEID_BACK_PARA	base/SessionCommand.h	/^    const BYTE PUT_ONE_GAMEID_BACK_PARA = 5;$/;"	v
Package	ScenesServer/zObject.cpp	/^Package::Package(WORD type,DWORD id,WORD w,WORD h):_type(type),_id(id),_width(w),_height(h),_space(w*h),_size(_space)$/;"	f	class:Package
Package	ScenesServer/zObject.h	/^class Package:private zNoncopyable$/;"	c
PackageCallback	ScenesServer/zObject.h	/^struct PackageCallback$/;"	s
Packages	ScenesServer/zObject.cpp	/^Packages::Packages(SceneUser* user) : owner(user),equip(user)$/;"	f	class:Packages
Packages	ScenesServer/zObject.h	/^class Packages$/;"	c
Param	ScenesServer/zObject.h	/^    Param(Package* p,int d,const zPos& s) : pack(p),drop_num(d),pos(s)$/;"	f	struct:DropFromPack::Param
Param	ScenesServer/zObject.h	/^  struct Param$/;"	s	struct:DropFromPack
PetPack	ScenesServer/zObject.cpp	/^PetPack::PetPack()$/;"	f	class:PetPack
PetPack	ScenesServer/zObject.h	/^class PetPack : public Package$/;"	c
PhyReflex	ScenesServer/ScenePk.h	/^	  SWORD PhyReflex;		\/\/sky Áâ©ÁêÜÂèçÂ∞ÑÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
PkPreValue	ScenesServer/ScenePk.h	/^  PkPreValue()$/;"	f	struct:PkPreValue
PkPreValue	ScenesServer/ScenePk.h	/^struct PkPreValue$/;"	s
PkTime	ScenesServer/SceneUser.h	/^	int PkTime;					\/\/sky ‰øùÂ≠òÁé©ÂÆ∂ËøõÂÖ•ÊàòÊñóÁöÑÊó∂Èó¥$/;"	m	struct:SceneUser
PkValue	ScenesServer/ScenePk.h	/^  PkValue()$/;"	f	struct:PkValue
PkValue	ScenesServer/ScenePk.h	/^struct PkValue$/;"	s
PlayerInfo	tmpcode/commond.h	/^		PlayerInfo()$/;"	f	struct:stRetPlayerListZhenxuanUserCmd::PlayerInfo
PlayerInfo	tmpcode/commond.h	/^	struct PlayerInfo$/;"	s	struct:stRetPlayerListZhenxuanUserCmd
PlayerScore	tmpcode/commond.h	/^		PlayerScore()$/;"	f	struct:stReturnScoreListWeekendZhenxuanUserCmd::PlayerScore
PlayerScore	tmpcode/commond.h	/^	struct PlayerScore$/;"	s	struct:stReturnScoreListWeekendZhenxuanUserCmd
PlayerScoreSortItem	tmpcode/commond.h	/^     PlayerScoreSortItem()$/;"	f	struct:PlayerScoreSortItem
PlayerScoreSortItem	tmpcode/commond.h	/^struct PlayerScoreSortItem$/;"	s
PlayerX	base/Command.h	/^    DWORD PlayerX;$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
PlayerX	tmpcode/commond.h	/^		DWORD  PlayerX;        \/\/ ÕÊº“µƒŒª÷√$/;"	m	struct:stClientNewMap
PlayerY	base/Command.h	/^    DWORD PlayerY;$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
PlayerY	tmpcode/commond.h	/^		DWORD PlayerY;$/;"	m	struct:stClientNewMap
PointData	tmpcode/commond.h	/^		PointData()$/;"	f	struct:stRetPointListZhenxuanUserCmd::PointData
PointData	tmpcode/commond.h	/^	struct PointData{$/;"	s	struct:stRetPointListZhenxuanUserCmd
PointMap	FLServer/UserHttpPub.h	/^	typedef std::map<DWORD, DWORD> PointMap;$/;"	t	class:UserConfigM
PosIMapIndex	GatewayServer/ScreenIndex.h	/^	typedef __gnu_cxx::hash_map<DWORD,SceneEntry_SET> PosIMapIndex;$/;"	t	class:ScreenIndex
PosIMapIndex	ScenesServer/zSceneEntryIndex.h	/^    typedef __gnu_cxx::hash_map<zPosI,SceneEntry_SET> PosIMapIndex;$/;"	t	class:zSceneEntryIndex
PosiEffectMap	ScenesServer/zSceneEntryIndex.h	/^    typedef std::map<DWORD,int,std::less<DWORD> > PosiEffectMap;$/;"	t	class:zSceneEntryIndex
PosiEffectMap_iter	ScenesServer/zSceneEntryIndex.h	/^    typedef PosiEffectMap::iterator PosiEffectMap_iter;$/;"	t	class:zSceneEntryIndex
Pow	ScenesServer/QuestAction.h	/^  class Pow$/;"	c	namespace:Op
ProductFactory	ScenesServer/QuestMaker.h	/^  ProductFactory()$/;"	f	class:ProductFactory
ProductFactory	ScenesServer/QuestMaker.h	/^class ProductFactory$/;"	c
Prop	ScenesServer/QuestMaker.h	/^    Prop(ScenesParser& p) : _p(p)$/;"	f	class:MakeFunction::Prop
Prop	ScenesServer/QuestMaker.h	/^  class Prop : public Maker<typename A::Base>$/;"	c	namespace:MakeFunction
QIANG_XI	tmpcode/commond.h	/^	QIANG_XI = 105,\/\/«øœÆ$/;"	e	enum:__anon205
QIANG_YU_SHU	tmpcode/commond.h	/^	QIANG_YU_SHU = 1304,\/\/«ø”˙ ı$/;"	e	enum:__anon205
QIAN_NENG_KAI_FANG_LEVEL	tmpcode/commond.h	/^const WORD QIAN_NENG_KAI_FANG_LEVEL = 90;\/\/«±ƒ‹ø™∑≈µ»º∂$/;"	v
QIAN_NENG_LEARN_LEVEL	tmpcode/commond.h	/^const WORD QIAN_NENG_LEARN_LEVEL = 70;\/\/«±ƒ‹—ßœ∞µƒ◊ÓµÕµ»º∂$/;"	v
QIAN_NENG_SHOW_LEVEL	tmpcode/commond.h	/^const WORD QIAN_NENG_SHOW_LEVEL = 60;\/\/«±ƒ‹µƒΩÁ√Êœ‘ æµ»º∂$/;"	v
QUERY_AUCTION_PARA	base/Command.h	/^const BYTE QUERY_AUCTION_PARA = 5;$/;"	v
QUERY_AUCTION_PARA	tmpcode/commond.h	/^const BYTE QUERY_AUCTION_PARA = 5;$/;"	v
QUERY_BARKEEPER_STATE	tmpcode/commond.h	/^const BYTE QUERY_BARKEEPER_STATE = 21;$/;"	v
QUERY_BOUGHT_WEEK_ASSURANCE_PARA	tmpcode/commond.h	/^const BYTE QUERY_BOUGHT_WEEK_ASSURANCE_PARA = 35;$/;"	v
QUERY_BOUNTY	base/Command.h	/^  QUERY_BOUNTY,\/\/ Êü•ËØ¢ÂΩìÂâçÂ•ñÂä±Èáë$/;"	e	enum:Cmd::__anon143
QUERY_DARE_LIST_PARA	base/Command.h	/^const BYTE QUERY_DARE_LIST_PARA = 4;$/;"	v
QUERY_ELEMENT_SHIFT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE QUERY_ELEMENT_SHIFT_USERCMD_PARA = 61;$/;"	v
QUERY_EXCHANGE2_GIFTS_PARA	tmpcode/commond.h	/^const BYTE QUERY_EXCHANGE2_GIFTS_PARA = 19;$/;"	v
QUERY_EXCHANGE2_STATE_PARA	tmpcode/commond.h	/^const BYTE QUERY_EXCHANGE2_STATE_PARA = 21;$/;"	v
QUERY_EXCHANGE2_TIME_PARA	tmpcode/commond.h	/^const BYTE QUERY_EXCHANGE2_TIME_PARA = 17;$/;"	v
QUERY_EXCHANGE3_GIFTS_PARA	tmpcode/commond.h	/^const BYTE QUERY_EXCHANGE3_GIFTS_PARA = 26;$/;"	v
QUERY_EXCHANGE3_STATE_PARA	tmpcode/commond.h	/^const BYTE QUERY_EXCHANGE3_STATE_PARA = 28;$/;"	v
QUERY_EXCHANGE3_TIME_PARA	tmpcode/commond.h	/^const BYTE QUERY_EXCHANGE3_TIME_PARA = 24;$/;"	v
QUERY_EXCHANGE4_CONFIG_PARA	tmpcode/commond.h	/^const BYTE QUERY_EXCHANGE4_CONFIG_PARA = 42;$/;"	v
QUERY_EXCHANGE4_STATE_PARA	tmpcode/commond.h	/^const BYTE QUERY_EXCHANGE4_STATE_PARA = 44;$/;"	v
QUERY_EXCHANGE5_CONFIG_PARA	tmpcode/commond.h	/^const BYTE QUERY_EXCHANGE5_CONFIG_PARA = 48;$/;"	v
QUERY_EXCHANGE5_STATE_PARA	tmpcode/commond.h	/^const BYTE QUERY_EXCHANGE5_STATE_PARA = 50;$/;"	v
QUERY_EXCHANGE_GIFT_STATE_PARA	tmpcode/commond.h	/^const BYTE QUERY_EXCHANGE_GIFT_STATE_PARA = 14;$/;"	v
QUERY_FLOWER_LEFT_COUNT_PARA	tmpcode/commond.h	/^const BYTE QUERY_FLOWER_LEFT_COUNT_PARA = 212;$/;"	v
QUERY_FRIEND_DECAY_HOUSE_PARA	tmpcode/commond.h	/^const BYTE QUERY_FRIEND_DECAY_HOUSE_PARA = 18;$/;"	v
QUERY_FUND_STOCKPARA	base/Command.h	7447;"	d
QUERY_FUND_STOCKPARA	tmpcode/commond.h	23407;"	d
QUERY_GOLD_PARA	base/Command.h	/^const BYTE QUERY_GOLD_PARA = 1;$/;"	v
QUERY_GOLD_PARA	tmpcode/commond.h	/^const BYTE QUERY_GOLD_PARA = 1;$/;"	v
QUERY_LTQ_PARA	tmpcode/commond.h	24516;"	d
QUERY_PREV_SEAL_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE QUERY_PREV_SEAL_MAGIC_USERCMD_PARA = 56;$/;"	v
QUERY_PURCHASE_PARA	tmpcode/commond.h	/^const BYTE QUERY_PURCHASE_PARA = 62;$/;"	v
QUERY_QUIZ_PARA	base/Command.h	/^const BYTE QUERY_QUIZ_PARA = 1;$/;"	v
QUERY_RET_LTQ_PARA	tmpcode/commond.h	24543;"	d
QUERY_WEEK_ASSURANCE_CONFIG_PARA	tmpcode/commond.h	/^const BYTE QUERY_WEEK_ASSURANCE_CONFIG_PARA = 33;$/;"	v
QUERY_WEEK_ASSURANCE_DRAW_STATE_PARA	tmpcode/commond.h	/^const BYTE QUERY_WEEK_ASSURANCE_DRAW_STATE_PARA = 37;$/;"	v
QUESTING	ScenesServer/QuestEvent.h	/^    QUESTING = 1,$/;"	e	enum:Event::__anon170
QUESTION	base/Command.h	/^      QUESTION,  \/\/ ÂèëÂá∫ÈÇÄËØ∑Êüê‰∫∫ÁöÑËØ¢ÈóÆ$/;"	e	enum:Cmd::UNION_ADD_MEMBER
QUESTION	tmpcode/commond.h	/^	QUESTION,          \/\/ ∑¢≥ˆ—˚«Îƒ≥»Àµƒ—ØŒ $/;"	e	enum:UNION_ADD_MEMBER
QUESTION_ARMY_GEN	base/Command.h	/^  QUESTION_ARMY_GEN,\/\/ ËØ¢ÈóÆÊòØÂê¶ÊÑøÊÑèÊàê‰∏∫Â∞ÜÂÜõ$/;"	e	enum:Cmd::__anon118
QUESTION_CAPTAIN	base/Command.h	/^  QUESTION_CAPTAIN,\/\/ ÂèëÂá∫ËØ¢ÈóÆ$/;"	e	enum:Cmd::ADD_ARMY_CAPTAIN
QUESTION_CITY_DARE	base/Command.h	/^  QUESTION_CITY_DARE,\/\/ ÂΩìÂ§©ÂüéÂ∏Ç‰∫âÂ§∫Êàò$/;"	e	enum:Cmd::__anon107
QUESTION_CITY_HOLD	base/Command.h	/^  QUESTION_CITY_HOLD,\/\/ Êü•ËØ¢ÂüéÂ∏ÇÊâÄÂ±û$/;"	e	enum:Cmd::__anon107
QUESTION_CONFIRM_SEARCHER	base/Command.h	/^  QUESTION_CONFIRM_SEARCHER,\/\/ ËØ¢ÈóÆÊòØÂê¶ÂêåÊÑèÊàê‰∏∫Á†îÁ©∂Âëò$/;"	e	enum:Cmd::__anon114
QUESTION_COUNTRY_ALLY	base/Command.h	/^  QUESTION_COUNTRY_ALLY,\/\/ ÂèëËµ∑ËØ∑Ê±Ç$/;"	e	enum:Cmd::__anon142
QUESTION_NPCDARE_DARE	base/Command.h	/^  QUESTION_NPCDARE_DARE,\/\/ ÂΩìÂ§©ÂüéÂ∏Ç‰∫âÂ§∫Êàò$/;"	e	enum:Cmd::__anon140
QUESTION_NPCDARE_DARE	tmpcode/commond.h	/^	QUESTION_NPCDARE_DARE, \/\/ µ±ÃÏ≥« –’˘∂·’Ω$/;"	e	enum:__anon285
QUESTION_NPCDARE_HOLD	base/Command.h	/^  QUESTION_NPCDARE_HOLD,\/\/ Êü•ËØ¢ÂüéÂ∏ÇÊâÄÂ±û$/;"	e	enum:Cmd::__anon140
QUESTION_NPCDARE_HOLD	tmpcode/commond.h	/^	QUESTION_NPCDARE_HOLD, \/\/ ≤È—Ø≥« –À˘ Ù$/;"	e	enum:__anon285
QUESTION_NPCDARE_INFO_PARA	base/Command.h	/^const BYTE QUESTION_NPCDARE_INFO_PARA = 3;$/;"	v
QUESTION_OBJECT_USERCMD_PARA	base/Command.h	3622;"	d
QUESTION_OBJECT_USERCMD_PARA	tmpcode/commond.h	1133;"	d
QUESTION_QUIZ_PARA	base/Command.h	/^const BYTE QUESTION_QUIZ_PARA = 3;$/;"	v
QUESTION_UNION_ALLY	tmpcode/commond.h	/^	QUESTION_UNION_ALLY, \/\/ ∑¢∆«Î«Û$/;"	e	enum:__anon283
QUESTION_UNION_CITY_INFO_PARA	base/Command.h	/^const BYTE QUESTION_UNION_CITY_INFO_PARA = 19;$/;"	v
QUESTION_UNION_MEMBER_POWER	base/Command.h	/^  QUESTION_UNION_MEMBER_POWER,\/\/ ËØ∑Ê±ÇÂèëÈÄÅÊùÉÈôê$/;"	e	enum:Cmd::__anon106
QUESTION_UNION_MEMBER_POWER	tmpcode/commond.h	/^	QUESTION_UNION_MEMBER_POWER, \/\/ «Î«Û∑¢ÀÕ»®œﬁ$/;"	e	enum:__anon266
QUESTMAP_USERCMD	tmpcode/commond.h	/^const BYTE QUESTMAP_USERCMD =101;$/;"	v
QUESTS	ScenesServer/Quest.h	/^  typedef __gnu_cxx::hash_map<DWORD,Vars> QUESTS;  \/\/questid,vars$/;"	t	class:QuestList
QUESTS	ScenesServer/QuestEvent.h	/^  typedef std::map<DWORD,EMBRANCHMENT *,LessIgnoreHB<DWORD> > QUESTS; \/\/quest_id$/;"	t	class:Event
QUESTS	ScenesServer/QuestTable.h	/^  typedef __gnu_cxx::hash_map<DWORD,Quest> QUESTS;$/;"	t	class:QuestTable
QUEST_BULLETIN_USERCMD_PARA	base/SessionCommand.h	/^    const BYTE QUEST_BULLETIN_USERCMD_PARA = 240;$/;"	v
QUEST_CHANGE_AP	base/SessionCommand.h	/^    const BYTE QUEST_CHANGE_AP = 241;$/;"	v
QUEST_CHANGE_RP	base/SessionCommand.h	/^    const BYTE QUEST_CHANGE_RP = 242; \/\/Êõ¥ÊîπÂ®ÅÊúõ$/;"	v
QUEST_DRINKWINE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE QUEST_DRINKWINE_USERCMD_PARA = 81;$/;"	v
QUEST_INFO_PARA	base/Command.h	/^static const BYTE QUEST_INFO_PARA = 2;$/;"	v
QUEST_INFO_PARA	tmpcode/commond.h	/^static const BYTE QUEST_INFO_PARA = 2;$/;"	v
QUEST_NUM_NOW_USER_PARA	tmpcode/commond.h	22865;"	d
QUEST_TIPS_USERCMD_PARA	tmpcode/commond.h	/^const BYTE QUEST_TIPS_USERCMD_PARA =82;$/;"	v
QUEST_VARS_PARA	base/Command.h	/^static const BYTE QUEST_VARS_PARA = 1;$/;"	v
QUEST_VARS_PARA	tmpcode/commond.h	/^static const BYTE QUEST_VARS_PARA = 1;$/;"	v
QUIT_HOMEMAP_PARA	tmpcode/commond.h	/^const BYTE QUIT_HOMEMAP_PARA					= 56;$/;"	v
QUIT_LUORI_PARA	tmpcode/commond.h	/^const BYTE QUIT_LUORI_PARA = 4;$/;"	v
QUIT_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE QUIT_ZHENXUAN_PARA = 2;$/;"	v
QUIZ_CUR_SCORE_PARA	base/Command.h	/^const BYTE QUIZ_CUR_SCORE_PARA = 7;$/;"	v
QUIZ_EXIT_PARA	base/Command.h	/^const BYTE QUIZ_EXIT_PARA = 8;$/;"	v
QUIZ_NO	base/Command.h	/^  QUIZ_NO         \/\/ ÊãíÁªùÁ´ûËµõ$/;"	e	enum:Cmd::__anon138
QUIZ_PARAM_PARA	base/Command.h	/^const BYTE QUIZ_PARAM_PARA = 9;$/;"	v
QUIZ_PERSONAL	base/Command.h	/^  QUIZ_PERSONAL$/;"	e	enum:Cmd::__anon137
QUIZ_POS_LIST_PARA	base/Command.h	/^const BYTE QUIZ_POS_LIST_PARA = 6;$/;"	v
QUIZ_QUESTION	base/Command.h	/^  QUIZ_QUESTION,\/\/ ËØ¢ÈóÆÊòØÂê¶Êé•ÂèóÈóÆÁ≠îÁ´ûËµõ$/;"	e	enum:Cmd::__anon138
QUIZ_USERCMD	base/CmdType.h	/^const BYTE QUIZ_USERCMD      = 32;$/;"	v
QUIZ_WORLD	base/Command.h	/^  QUIZ_WORLD,$/;"	e	enum:Cmd::__anon137
QUIZ_YES	base/Command.h	/^  QUIZ_YES,\/\/ ÂèÇ‰∏éÁ´ûËµõ$/;"	e	enum:Cmd::__anon138
QUNTI_FUHUOSHU	tmpcode/commond.h	/^	QUNTI_FUHUOSHU  = 11304,\/\/»∫ÃÂ∏¥ªÓ ı	$/;"	e	enum:__anon205
QUNTI_ZHILIAO	tmpcode/commond.h	/^	QUNTI_ZHILIAO=11301,\/\/»∫ÃÂ÷Œ¡∆$/;"	e	enum:__anon205
QWORD	base/zType.h	/^typedef unsigned long long QWORD;$/;"	t
Quality	base/xmlparser/giftbag.h	/^        struct Quality$/;"	s	struct:GiftBagConfig::Bag
QualityMap	base/xmlparser/giftbag.h	/^        typedef xml_node_map<DWORD,Quality>	QualityMap;$/;"	t	struct:GiftBagConfig::Bag
QualityMapConstIter	base/xmlparser/giftbag.h	/^        typedef QualityMap::const_iterator	QualityMapConstIter;$/;"	t	struct:GiftBagConfig::Bag
QualityMapIter	base/xmlparser/giftbag.h	/^        typedef QualityMap::iterator	QualityMapIter;$/;"	t	struct:GiftBagConfig::Bag
Quest	ScenesServer/Quest.h	/^class Quest$/;"	c
QuestList	ScenesServer/Quest.h	/^  QuestList() $/;"	f	class:QuestList
QuestList	ScenesServer/Quest.h	/^class QuestList$/;"	c
QuestTable	ScenesServer/QuestTable.cpp	/^QuestTable::QuestTable()$/;"	f	class:QuestTable
QuestTable	ScenesServer/QuestTable.h	/^class QuestTable$/;"	c
QueueType	tmpcode/commond.h	/^enum QueueType$/;"	g
Queue_MAX	tmpcode/commond.h	/^	Queue_MAX$/;"	e	enum:QueueType
Queue_Type_Account	tmpcode/commond.h	/^	Queue_Type_Account,               \/\/’ ∫≈Œ Ã‚$/;"	e	enum:QueueType
Queue_Type_Consume	tmpcode/commond.h	/^	Queue_Type_Consume = 1,           \/\/≥‰÷µŒ Ã‚$/;"	e	enum:QueueType
Queue_Type_FindEquip	tmpcode/commond.h	/^    Queue_Type_FindEquip,             \/\/◊∞±∏’“ªÿ$/;"	e	enum:QueueType
Queue_Type_MailCheat	tmpcode/commond.h	/^	Queue_Type_MailCheat,             \/\/” º˛∆€’©Œ Ã‚$/;"	e	enum:QueueType
Queue_Type_OnlineBreakRules	tmpcode/commond.h	/^	Queue_Type_OnlineBreakRules,      \/\/‘⁄œﬂŒ•πÊŒ Ã‚$/;"	e	enum:QueueType
Queue_Type_Role	tmpcode/commond.h	/^	Queue_Type_Role,                  \/\/»ÀŒÔø®◊°Œ Ã‚$/;"	e	enum:QueueType
Quit	ScenesServer/QuestEvent.h	/^  class Quit$/;"	c	namespace:Trigger
RANDOM_QUEST_USERCMD	tmpcode/commond.h	/^const BYTE RANDOM_QUEST_USERCMD = 124;$/;"	v
RC5_12_ROUNDS	base/EncDec/EncDec.h	23;"	d
RC5_12_ROUNDS	base/EncDec/myrc5.h	12;"	d
RC5_16_P	base/EncDec/EncDec.h	56;"	d
RC5_16_P	base/EncDec/myrc5.h	44;"	d
RC5_16_Q	base/EncDec/EncDec.h	57;"	d
RC5_16_Q	base/EncDec/myrc5.h	45;"	d
RC5_16_ROUNDS	base/EncDec/EncDec.h	24;"	d
RC5_16_ROUNDS	base/EncDec/myrc5.h	13;"	d
RC5_32_BLOCK	base/EncDec/EncDec.h	14;"	d
RC5_32_INT	base/EncDec/EncDec.h	12;"	d
RC5_32_INT	base/EncDec/myrc5.h	9;"	d
RC5_32_KEY	base/EncDec/EncDec.h	/^} RC5_32_KEY;$/;"	t	typeref:struct:rc5_key_st
RC5_32_KEY	base/EncDec/myrc5.h	/^}RC5_32_KEY;$/;"	t	typeref:struct:rc5_key_st
RC5_32_KEY_LENGTH	base/EncDec/EncDec.h	15;"	d
RC5_32_MASK	base/EncDec/EncDec.h	54;"	d
RC5_32_MASK	base/EncDec/myrc5.h	42;"	d
RC5_32_P	base/EncDec/EncDec.h	58;"	d
RC5_32_P	base/EncDec/myrc5.h	46;"	d
RC5_32_Q	base/EncDec/EncDec.h	59;"	d
RC5_32_Q	base/EncDec/myrc5.h	47;"	d
RC5_32_decrypt	base/EncDec/EncDec.cpp	/^void CEncrypt::RC5_32_decrypt(RC5_32_INT*d,RC5_32_KEY *key)$/;"	f	class:CEncrypt
RC5_32_decrypt	base/EncDec/myrc5.cpp	/^void RC5_32_decrypt(RC5_32_INT *d,RC5_32_KEY *key)$/;"	f
RC5_32_encrypt	base/EncDec/EncDec.cpp	/^void CEncrypt::RC5_32_encrypt(RC5_32_INT*d,RC5_32_KEY *key)$/;"	f	class:CEncrypt
RC5_32_encrypt	base/EncDec/myrc5.cpp	/^void RC5_32_encrypt(RC5_32_INT *d,RC5_32_KEY *key)$/;"	f
RC5_32_set_key	base/EncDec/EncDec.cpp	/^void CEncrypt::RC5_32_set_key(RC5_32_KEY *key,int len,const unsigned char *data,int rounds)$/;"	f	class:CEncrypt
RC5_32_set_key	base/EncDec/myrc5.cpp	/^void RC5_32_set_key(RC5_32_KEY *key,int len,const unsigned char *data,$/;"	f
RC5_64_P	base/EncDec/EncDec.h	60;"	d
RC5_64_P	base/EncDec/myrc5.h	48;"	d
RC5_64_Q	base/EncDec/EncDec.h	61;"	d
RC5_64_Q	base/EncDec/myrc5.h	49;"	d
RC5_8_ROUNDS	base/EncDec/EncDec.h	22;"	d
RC5_8_ROUNDS	base/EncDec/myrc5.h	11;"	d
RC5_DECRYPT	base/EncDec/EncDec.h	9;"	d
RC5_DECRYPT	base/EncDec/myrc5.h	7;"	d
RC5_ENCRYPT	base/EncDec/EncDec.h	8;"	d
RC5_ENCRYPT	base/EncDec/myrc5.h	6;"	d
READFLAG_HEROISLAND_PARA	tmpcode/commond.h	/^const BYTE READFLAG_HEROISLAND_PARA = 1;$/;"	v
REALTIME_UPDATESCORE_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE REALTIME_UPDATESCORE_ZHENXUAN_PARA = 5;$/;"	v
REBUILD	tmpcode/commond.h	/^			REBUILD = 12,	\/\/◊∞±∏∏ƒ‘Ï$/;"	e	enum:ReuildType
REBUILD_TANK_PARA	tmpcode/commond.h	/^const BYTE REBUILD_TANK_PARA = 33;$/;"	v
RECALL_MASTER_VOTE_SEPT_CMD	tmpcode/commond.h	/^const BYTE RECALL_MASTER_VOTE_SEPT_CMD = 116;$/;"	v
RECALL_VOTE_SEPT_CMD	tmpcode/commond.h	/^const BYTE RECALL_VOTE_SEPT_CMD = 120;$/;"	v
RECALL_VOTE_TYPE	tmpcode/commond.h	/^enum RECALL_VOTE_TYPE$/;"	g
RECAST	tmpcode/commond.h	/^            RECAST = 7,$/;"	e	enum:ReuildType
RECEIVE_ISSUED_QUEST_PARA	tmpcode/commond.h	/^static const BYTE RECEIVE_ISSUED_QUEST_PARA = 47;   $/;"	v
RECOMMEND_TASK_USER_CMD	tmpcode/commond.h	/^const BYTE RECOMMEND_TASK_USER_CMD = 62;$/;"	v
RECOMMEND_USERCMD	base/CmdType.h	/^const BYTE RECOMMEND_USERCMD  = 47;$/;"	v
RECOMMEND_USERCMD	tmpcode/commond.h	/^const BYTE RECOMMEND_USERCMD            = 47;$/;"	v
RECORDSERVER	base/zMisc.h	/^	RECORDSERVER  =  11, \/** Ê°£Ê°àÊúçÂä°Âô® *\/$/;"	e	enum:ServerType
RECOVER_NEWGIFTBAG	tmpcode/commond.h	/^const BYTE RECOVER_NEWGIFTBAG  = 242;$/;"	v
RECRUIT_SEPT_MEMBER_CMD	tmpcode/commond.h	/^const BYTE RECRUIT_SEPT_MEMBER_CMD = 144;$/;"	v
RECV_POINT_CARD_PARA	tmpcode/commond.h	/^const BYTE RECV_POINT_CARD_PARA = 14;$/;"	v
REDEEM_BUSY	base/Command.h	/^  REDEEM_BUSY,\/\/ ÊúçÂä°Âô®Âøô$/;"	e	enum:Cmd::__anon132
REDEEM_BUSY	tmpcode/commond.h	/^	REDEEM_BUSY,       \/\/ ∑˛ŒÒ∆˜√¶$/;"	e	enum:__anon316
REDEEM_FAIL	base/Command.h	/^  REDEEM_FAIL,\/\/ Â§±Ë¥•$/;"	e	enum:Cmd::__anon132
REDEEM_FAIL	tmpcode/commond.h	/^	REDEEM_FAIL,       \/\/  ß∞‹$/;"	e	enum:__anon316
REDEEM_GOLD_PARA	base/Command.h	/^const BYTE REDEEM_GOLD_PARA = 3;$/;"	v
REDEEM_GOLD_PARA	tmpcode/commond.h	/^const BYTE REDEEM_GOLD_PARA = 3;$/;"	v
REDEEM_MONTH_CARD_PARA	base/Command.h	/^const BYTE REDEEM_MONTH_CARD_PARA = 5;$/;"	v
REDEEM_RATE_GOLD	base/Command.h	7201;"	d
REDEEM_RATE_GOLD	tmpcode/commond.h	20151;"	d
REDEEM_RATE_MONTH_CARD	base/Command.h	7202;"	d
REDEEM_STOP	base/Command.h	/^  REDEEM_STOP,\/\/ ÂÖëÊç¢Á≥ªÁªüÂÅúÊ≠¢ÊúçÂä°$/;"	e	enum:Cmd::__anon132
REDEEM_STOP	tmpcode/commond.h	/^	REDEEM_STOP,      \/\/ ∂“ªªœµÕ≥Õ£÷π∑˛ŒÒ$/;"	e	enum:__anon316
REDEEM_SUCCESS	base/Command.h	/^  REDEEM_SUCCESS,\/\/ ÂÖëÊç¢ÊàêÂäü $/;"	e	enum:Cmd::__anon132
REDEEM_SUCCESS	tmpcode/commond.h	/^	REDEEM_SUCCESS,    \/\/ ∂“ªª≥…π¶ $/;"	e	enum:__anon316
REDUCE_CITY_NPC_RELIVETIME	tmpcode/commond.h	/^const BYTE REDUCE_CITY_NPC_RELIVETIME = 1;$/;"	v
REDUCE_MP_LINGQI_PARA	tmpcode/commond.h	20790;"	d
REFCOUNTOBJECT_PROPERTY_USERCMD_PARAMETER	base/Command.h	2561;"	d
REFCOUNTOBJECT_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	4282;"	d
REFRESHDATA_PET_PARA	base/Command.h	/^const BYTE REFRESHDATA_PET_PARA = 3;$/;"	v
REFRESHDATA_PET_PARA	tmpcode/commond.h	/^const BYTE REFRESHDATA_PET_PARA = 3;$/;"	v
REFRESHSTATE_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE REFRESHSTATE_MAPSCREEN_USERCMD_PARA = 14;$/;"	v
REFRESH_BOSS_USERCMD_PARA	base/Command.h	3789;"	d
REFRESH_CANLEARNLIST_FAKESKILL	tmpcode/commond.h	24837;"	d
REFRESH_CHANGE_BACK_TITLE	tmpcode/commond.h	/^const BYTE REFRESH_CHANGE_BACK_TITLE = 5;$/;"	v
REFRESH_COMMONINFO_WEEKEND_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE REFRESH_COMMONINFO_WEEKEND_ZHENXUAN_PARA = 8;$/;"	v
REFRESH_GRECOMMEND_RELATION_PARA	tmpcode/commond.h	28810;"	d
REFRESH_IMAGEVERIFY_SCENE_USERCMD_PARA	tmpcode/commond.h	24244;"	d
REFRESH_MONEY_GOLD_PARA	tmpcode/commond.h	/^const BYTE REFRESH_MONEY_GOLD_PARA = 10;$/;"	v
REFRESH_NPCSTATE_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REFRESH_NPCSTATE_MAPSCREEN_USERCMD_PARA = 9;$/;"	v
REFRESH_RELATIVE_NUM_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE REFRESH_RELATIVE_NUM_ZHENXUAN_PARA = 24;$/;"	v
REFRESH_SAYHELLO_RECORD_PARA	tmpcode/commond.h	28825;"	d
REFRESH_SCORE_TWILINGHT_CITY_PARA	tmpcode/commond.h	/^const BYTE REFRESH_SCORE_TWILINGHT_CITY_PARA = 29;$/;"	v
REFRESH_SOUND_TOKEN_PARA	tmpcode/commond.h	/^const BYTE REFRESH_SOUND_TOKEN_PARA = 6;$/;"	v
REFRESH_TUANCAIJI_PARA	tmpcode/commond.h	/^const BYTE REFRESH_TUANCAIJI_PARA = 172;$/;"	v
REFRESH_USERDATA_NONE	tmpcode/commond.h	/^    REFRESH_USERDATA_NONE,$/;"	e	enum:__anon222
REFRESH_USERDATA_PARA	tmpcode/commond.h	/^const BYTE REFRESH_USERDATA_PARA = 183; $/;"	v
REFRESH_USERDATA_ZHANGONG	tmpcode/commond.h	/^    REFRESH_USERDATA_ZHANGONG,\/\/À¢–¬’Ωπ¶$/;"	e	enum:__anon222
REFRESH_USERINFO_WEEKEND_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE REFRESH_USERINFO_WEEKEND_ZHENXUAN_PARA = 9;$/;"	v
REFRESH_VAR_LINGQI_PARA	tmpcode/commond.h	20655;"	d
REFUSE_REQ_ADD_TEAM_PARA	tmpcode/commond.h	/^const BYTE REFUSE_REQ_ADD_TEAM_PARA = 6;$/;"	v
REGION_HORSE_SKILL_MAX	tmpcode/commond.h	/^const DWORD REGION_HORSE_SKILL_MAX  = 51999;$/;"	v
REGION_HORSE_SKILL_MIN	tmpcode/commond.h	/^const DWORD REGION_HORSE_SKILL_MIN  = 51001;$/;"	v
REGION_LINGQI_CARD_MAX	tmpcode/commond.h	/^const DWORD REGION_LINGQI_CARD_MAX  = 25199;$/;"	v
REGION_LINGQI_CARD_MIN	tmpcode/commond.h	/^const DWORD REGION_LINGQI_CARD_MIN  = 25100;$/;"	v
REGION_STRENTH_SKILL_MAX	tmpcode/commond.h	/^const DWORD REGION_STRENTH_SKILL_MAX  = 910;$/;"	v
REGION_STRENTH_SKILL_MIN	tmpcode/commond.h	/^const DWORD REGION_STRENTH_SKILL_MIN  = 901;$/;"	v
REGION_WAR_TIME	tmpcode/commond.h	15051;"	d
REGSCENE_RET_REGERR	base/SessionCommand.h	/^    const BYTE REGSCENE_RET_REGERR=  2;$/;"	v
REGSCENE_RET_REGOK	base/SessionCommand.h	/^    const BYTE REGSCENE_RET_REGOK=  0;$/;"	v
REG_COMP	base/zRegex.h	/^	static const int REG_COMP;$/;"	m	class:zRegex
REG_DEFAULT	base/zRegex.h	/^	static const int REG_DEFAULT;$/;"	m	class:zRegex
REG_FLAGS	base/zRegex.h	/^	static const int REG_FLAGS;$/;"	m	class:zRegex
REG_INFO	tmpcode/commond.h	/^const BYTE REG_INFO = 3;$/;"	v
REG_MATCH	base/zRegex.h	/^	static const int REG_MATCH;$/;"	m	class:zRegex
REG_MULTILINE	base/zRegex.h	/^	static const int REG_MULTILINE;$/;"	m	class:zRegex
REG_SEPT_POPO_PARA	tmpcode/commond.h	26376;"	d
REG_UNKNOW	base/zRegex.h	/^	static const int REG_UNKNOW;$/;"	m	class:zRegex
REJECT_APPLY_ROOMER_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE REJECT_APPLY_ROOMER_HOUSE_USER_CMD = 60;$/;"	v
REJECT_BANISH_ROOMER_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE REJECT_BANISH_ROOMER_HOUSE_USER_CMD = 17;$/;"	v
REJECT_COUNTRY_ALLY	tmpcode/commond.h	/^	REJECT_COUNTRY_ALLY = 3,          \/\/ æ‹æ¯Ω·√À, Clt->Svr$/;"	e	enum:CountryAllyActionEnum
RELATION	base/Command.h	/^enum RELATION{$/;"	g	namespace:Cmd
RELATION	tmpcode/commond.h	/^enum RELATION{$/;"	g
RELATION_ADD	base/Command.h	/^  RELATION_ADD, \/\/ Ê∑ªÂä†Áä∂ÊÄÅ$/;"	e	enum:Cmd::RELATION
RELATION_ADD	tmpcode/commond.h	/^	RELATION_ADD,				\/\/ ÃÌº”◊¥Ã¨$/;"	e	enum:RELATION
RELATION_ADD_FRIEND	base/SessionCommand.h	/^    const BYTE RELATION_ADD_FRIEND = 62;$/;"	v
RELATION_ANSWER_NO	base/Command.h	/^  RELATION_ANSWER_NO,\/\/ Âê¶ÂÆöÈÇÄËØ∑$/;"	e	enum:Cmd::RELATION
RELATION_ANSWER_NO	tmpcode/commond.h	/^	RELATION_ANSWER_NO,        \/\/ ∑Ò∂®—˚«Î$/;"	e	enum:RELATION
RELATION_ANSWER_YES	base/Command.h	/^  RELATION_ANSWER_YES,\/\/ Á°ÆËÆ§ÈÇÄËØ∑$/;"	e	enum:Cmd::RELATION
RELATION_ANSWER_YES	tmpcode/commond.h	/^	RELATION_ANSWER_YES,       \/\/ »∑»œ—˚«Î$/;"	e	enum:RELATION
RELATION_LEVEL_CHANGE	tmpcode/commond.h	/^	RELATION_LEVEL_CHANGE,      \/\/ ∫√”—∂»∏ƒ±‰$/;"	e	enum:RELATION
RELATION_OFFLINE	base/Command.h	/^  RELATION_OFFLINE,\/\/ Á¶ªÁ∫øÁä∂ÊÄÅ$/;"	e	enum:Cmd::RELATION
RELATION_OFFLINE	tmpcode/commond.h	/^	RELATION_OFFLINE,			\/\/ ¿Îœﬂ◊¥Ã¨$/;"	e	enum:RELATION
RELATION_ONLINE	base/Command.h	/^  RELATION_ONLINE,\/\/ Âú®Á∫øÁä∂ÊÄÅ$/;"	e	enum:Cmd::RELATION
RELATION_ONLINE	tmpcode/commond.h	/^	RELATION_ONLINE,			\/\/ ‘⁄œﬂ◊¥Ã¨$/;"	e	enum:RELATION
RELATION_QUERYPOS	tmpcode/commond.h	/^	RELATION_QUERYPOS,           \/\/≤È—Ø≥»ÀŒª÷√◊¥Ã¨=======zzl0817=============$/;"	e	enum:RELATION
RELATION_QUESTION	base/Command.h	/^  RELATION_QUESTION, \/\/ ÂèëÂá∫ÈÇÄËØ∑Êüê‰∫∫ÁöÑËØ¢ÈóÆ$/;"	e	enum:Cmd::RELATION
RELATION_QUESTION	tmpcode/commond.h	/^	RELATION_QUESTION,         \/\/ ∑¢≥ˆ—˚«Îƒ≥»Àµƒ—ØŒ $/;"	e	enum:RELATION
RELATION_REMOVE	base/Command.h	/^  RELATION_REMOVE        \/\/ Âà†Èô§Áä∂ÊÄÅ$/;"	e	enum:Cmd::RELATION
RELATION_REMOVE	tmpcode/commond.h	/^	RELATION_REMOVE,				\/\/ …æ≥˝◊¥Ã¨$/;"	e	enum:RELATION
RELATION_SEND_RELATIONLIST_PARA	base/Command.h	/^const BYTE RELATION_SEND_RELATIONLIST_PARA = 1;$/;"	v
RELATION_SEND_RELATIONLIST_PARA	tmpcode/commond.h	/^const BYTE RELATION_SEND_RELATIONLIST_PARA = 1;\/\/µ«¬º ±Ω” ’…Áª·πÿœµ¡–±Ì–≈œ¢$/;"	v
RELATION_STATUS_PARA	base/Command.h	/^const BYTE RELATION_STATUS_PARA =3;$/;"	v
RELATION_STATUS_PARA	tmpcode/commond.h	/^const BYTE RELATION_STATUS_PARA =3;$/;"	v
RELATION_TYPECHANGE	base/Command.h	/^  RELATION_TYPECHANGE,\/\/ Á±ªÂûãÊîπÂèò$/;"	e	enum:Cmd::RELATION
RELATION_TYPECHANGE	tmpcode/commond.h	/^	RELATION_TYPECHANGE,		\/\/ ¿‡–Õ∏ƒ±‰$/;"	e	enum:RELATION
RELATION_TYPE_BAD	base/Command.h	/^  RELATION_TYPE_BAD,\/\/ ÈªëÂêçÂçï$/;"	e	enum:Cmd::__anon124
RELATION_TYPE_BAD	tmpcode/commond.h	/^	RELATION_TYPE_BAD,			\/\/ ∫⁄√˚µ•£¨3$/;"	e	enum:__anon235
RELATION_TYPE_COUNTRY	base/SessionCommand.h	/^      RELATION_TYPE_COUNTRY,$/;"	e	enum:Cmd::Session::__anon38
RELATION_TYPE_ENEMY	base/Command.h	/^  RELATION_TYPE_ENEMY      \/\/ ‰ªá‰∫∫ÂÖ≥Á≥ª$/;"	e	enum:Cmd::__anon124
RELATION_TYPE_ENEMY	tmpcode/commond.h	/^	RELATION_TYPE_ENEMY,			\/\/ ≥»Àπÿœµ£¨5$/;"	e	enum:__anon235
RELATION_TYPE_FRIEND	base/Command.h	/^  RELATION_TYPE_FRIEND,\/\/ Â•ΩÂèãÂÖ≥Á≥ª$/;"	e	enum:Cmd::__anon124
RELATION_TYPE_FRIEND	tmpcode/commond.h	/^	RELATION_TYPE_FRIEND,		\/\/ ∫√”—πÿœµ£¨2$/;"	e	enum:__anon235
RELATION_TYPE_GROUP	tmpcode/commond.h	/^    RELATION_TYPE_GROUP                    \/\/ÃÌº”∑÷◊Èπÿœµ$/;"	e	enum:__anon235
RELATION_TYPE_LOVE	base/Command.h	/^  RELATION_TYPE_LOVE,\/\/ Â§´Â¶ªÂÖ≥Á≥ª$/;"	e	enum:Cmd::__anon124
RELATION_TYPE_LOVE	tmpcode/commond.h	/^	RELATION_TYPE_LOVE,			\/\/ ∑Ú∆ﬁπÿœµ£¨0$/;"	e	enum:__anon235
RELATION_TYPE_NOTIFY	base/SessionCommand.h	/^      RELATION_TYPE_NOTIFY$/;"	e	enum:Cmd::Session::__anon38
RELATION_TYPE_OVER	base/Command.h	/^  RELATION_TYPE_OVER,\/\/ ÂÖ≥Á≥ªÂ∑≤ÁªèÊñ≠ÁªùÔºå‰∏ªË¶ÅÊòØÁî®Âú®Êï∞ÊçÆÂ∫ì‰∏≠‰º†ËææÁ¶ªÁ∫øÈÄöÁü•ÔºåÂΩì‰∫∫Áâ©‰∏äÁ∫øÂêé‰ºöÊ†πÊçÆÁä∂ÊÄÅÂêëÂÆ¢Êà∑Á´ØÂèëÊ∂àÊÅØ„ÄÇ$/;"	e	enum:Cmd::__anon124
RELATION_TYPE_OVER	tmpcode/commond.h	/^	RELATION_TYPE_OVER,			\/\/ πÿœµ“—æ≠∂œæ¯£¨÷˜“™ «”√‘⁄ ˝æ›ø‚÷–¥´¥Ô¿ÎœﬂÕ®÷™£¨µ±»ÀŒÔ…œœﬂ∫Ûª·∏˘æ›◊¥Ã¨œÚøÕªß∂À∑¢œ˚œ¢£¨4$/;"	e	enum:__anon235
RELATION_TYPE_SCHOOL	base/SessionCommand.h	/^      RELATION_TYPE_SCHOOL,$/;"	e	enum:Cmd::Session::__anon38
RELATION_TYPE_SEPT	base/SessionCommand.h	/^      RELATION_TYPE_SEPT,$/;"	e	enum:Cmd::Session::__anon38
RELATION_TYPE_TEACHER	base/Command.h	/^  RELATION_TYPE_TEACHER,\/\/ Â∏àÂæíÂÖ≥Á≥ª$/;"	e	enum:Cmd::__anon124
RELATION_TYPE_TEACHER	tmpcode/commond.h	/^	RELATION_TYPE_TEACHER,		\/\/  ¶ÕΩπÿœµ£¨1$/;"	e	enum:__anon235
RELATION_TYPE_UNION	base/SessionCommand.h	/^      RELATION_TYPE_UNION,$/;"	e	enum:Cmd::Session::__anon38
RELATION_USERCMD	base/CmdType.h	/^const BYTE RELATION_USERCMD        = 25;$/;"	v
RELATION_USERCMD	tmpcode/commond.h	/^const BYTE RELATION_USERCMD    	= 25;$/;"	v
RELIVE_USERCMD	base/CmdType.h	/^const BYTE RELIVE_USERCMD    = 12;$/;"	v
RELIVE_USERCMD	tmpcode/commond.h	/^const BYTE RELIVE_USERCMD		= 12;$/;"	v
REMAIN_LEVELUP_DECAYHOUSE_PARA	tmpcode/commond.h	/^const BYTE REMAIN_LEVELUP_DECAYHOUSE_PARA = 9;$/;"	v
REMAKEOBJECT_USERCMD	base/CmdType.h	/^const BYTE REMAKEOBJECT_USERCMD	= 52;$/;"	v
REMAKE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REMAKE_PROPERTY_USERCMD_PARA = 197;$/;"	v
REMARK_LENGTH	base/UserCommand.h	/^    const int REMARK_LENGTH = 200;    \/\/Â§áÊ≥®ÈïøÂ∫¶$/;"	v
REMOVEMAPBUILDING_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE REMOVEMAPBUILDING_MAPSCREEN_USERCMD_PARA = 31;$/;"	v
REMOVEMAPBUILD_MAPSCREEN_USERCOM_PARA	tmpcode/commond.h	/^const BYTE REMOVEMAPBUILD_MAPSCREEN_USERCOM_PARA = 118;$/;"	v
REMOVEMAPNPC_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE REMOVEMAPNPC_MAPSCREEN_USERCMD_PARA = 51;$/;"	v
REMOVEMAPNPC_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REMOVEMAPNPC_MAPSCREEN_USERCMD_PARA = 51;$/;"	v
REMOVEMAPOBJECT_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE REMOVEMAPOBJECT_MAPSCREEN_USERCMD_PARA = 21;$/;"	v
REMOVEUSEROBJECT_PROPERTY_USERCMD_PARAMETER	base/Command.h	2516;"	d
REMOVEUSEROBJECT_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	12232;"	d
REMOVEUSERSKILL_PROPERTY_USERCMD_PARAMETER	base/Command.h	2706;"	d
REMOVEUSER_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE REMOVEUSER_MAPSCREEN_USERCMD_PARA = 11;$/;"	v
REMOVEUSER_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REMOVEUSER_MAPSCREEN_USERCMD_PARA = 11;$/;"	v
REMOVE_ARMY_PARA	base/Command.h	5738;"	d
REMOVE_BET_OBJECT_CHALLENGE_USERCMD_PARAMETER	tmpcode/commond.h	22168;"	d
REMOVE_CARTOON_PARA	base/Command.h	8187;"	d
REMOVE_COUNTRY_ALLY	tmpcode/commond.h	/^	REMOVE_COUNTRY_ALLY = 6,          \/\/ Ω‚≥˝Ω·√À, Svr->Clt$/;"	e	enum:CountryAllyActionEnum
REMOVE_DAILY_QUEST_PARA	tmpcode/commond.h	/^const BYTE REMOVE_DAILY_QUEST_PARA = 10;$/;"	v
REMOVE_FURNITURE_HOME_PARA	tmpcode/commond.h	/^const BYTE REMOVE_FURNITURE_HOME_PARA			= 6;$/;"	v
REMOVE_HORSE_SKILL_PARA	tmpcode/commond.h	/^const BYTE REMOVE_HORSE_SKILL_PARA = 41;$/;"	v
REMOVE_HORSE_SOUL_PARA	tmpcode/commond.h	/^const BYTE REMOVE_HORSE_SOUL_PARA = 30;$/;"	v
REMOVE_ITEM_MAIL_PARA	base/Command.h	/^const BYTE REMOVE_ITEM_MAIL_PARA = 10;$/;"	v
REMOVE_ITEM_MAIL_PARA	tmpcode/commond.h	/^const BYTE REMOVE_ITEM_MAIL_PARA = 10;$/;"	v
REMOVE_LINGQISKILL_PARA	tmpcode/commond.h	24764;"	d
REMOVE_LIST_AUCTION_PARA	base/Command.h	/^const BYTE REMOVE_LIST_AUCTION_PARA = 4;$/;"	v
REMOVE_LIST_AUCTION_PARA	tmpcode/commond.h	/^const BYTE REMOVE_LIST_AUCTION_PARA = 4;$/;"	v
REMOVE_NAME_SETP_GUARD_PARA	tmpcode/commond.h	/^const BYTE REMOVE_NAME_SETP_GUARD_PARA = 56;                                                                     $/;"	v
REMOVE_OBJECT_SELL_USERCMD_PARAMETER	base/Command.h	4059;"	d
REMOVE_OBJECT_SELL_USERCMD_PARAMETER	tmpcode/commond.h	12173;"	d
REMOVE_OBJECT_SEPT_STORE	tmpcode/commond.h	/^const BYTE REMOVE_OBJECT_SEPT_STORE = 141;$/;"	v
REMOVE_OBJECT_TRADE_USERCMD_PARAMETER	base/Command.h	3932;"	d
REMOVE_OBJECT_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE REMOVE_OBJECT_TRADE_USERCMD_PARAMETER = 9;$/;"	v
REMOVE_SEPTSKILL_USERCMD	tmpcode/commond.h	/^const BYTE REMOVE_SEPTSKILL_USERCMD = 11;$/;"	v
REMOVE_TANK_MAPSCREEN_STATE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REMOVE_TANK_MAPSCREEN_STATE_USERCMD_PARA = 75;$/;"	v
REMOVE_TEAMMEMBER_USERCMD_PARA	base/Command.h	3496;"	d
REMOVE_TEAMMEMBER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  REMOVE_TEAMMEMBER_USERCMD_PARA = 4;$/;"	v
REMOVE_TEAM_GHAGELEADER_USERCMD_PARA	base/Command.h	3821;"	d
REMOVE_TEAM_USERCMD_PARA	base/Command.h	3462;"	d
REMOVE_TEAM_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REMOVE_TEAM_USERCMD_PARA = 52;$/;"	v
REMOVE_WAITING_CARTOON_PARA	base/Command.h	8291;"	d
RENT_PACK_INFO	tmpcode/commond.h	/^const BYTE RENT_PACK_INFO       = 102;  $/;"	v
REPAIROBJECT_GOLD_NPCTRADE_USERCMD_PARAMETER	base/Command.h	4135;"	d
REPAIROBJECT_NPCTRADE_USERCMD_PARAMETER	base/Command.h	3989;"	d
REPAIROBJECT_NPCTRADE_USERCMD_PARAMETER	tmpcode/commond.h	5169;"	d
REPAIR_CARTOON_PARA	base/Command.h	8376;"	d
REPAIR_OBJECT_MONEY_NPCTRADE_USERCMD_PARAMETER	tmpcode/commond.h	5181;"	d
REPAIR_UNION_TOWER	tmpcode/commond.h	/^const BYTE REPAIR_UNION_TOWER = 206;$/;"	v
REPLAY_MERCENARY_COUNTRY_CMD	tmpcode/commond.h	30413;"	d
REPLY_REQUEST_GETON_TANK_PARA	tmpcode/commond.h	/^const BYTE REPLY_REQUEST_GETON_TANK_PARA = 45;$/;"	v
REPLY_TABLE_MAP_SCREEN_USERCMD	tmpcode/commond.h	/^const BYTE REPLY_TABLE_MAP_SCREEN_USERCMD = 15;$/;"	v
REPORT_CHAT_PARA	tmpcode/commond.h	22898;"	d
REQBACK	tmpcode/commond.h	/^const BYTE REQBACK = 18;$/;"	v
REQCOUNTRYINVITE_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE REQCOUNTRYINVITE_QUESTROOM_PARA = 26;$/;"	v
REQDRINK_BIGFIRE_PARA	tmpcode/commond.h	/^const BYTE REQDRINK_BIGFIRE_PARA = 5;$/;"	v
REQDRINK_GOUHUO_PARA	tmpcode/commond.h	/^const BYTE REQDRINK_GOUHUO_PARA = 3;$/;"	v
REQUESCOUNTRYTLIST_MERCENARY_COUNTRY_CMD	tmpcode/commond.h	30537;"	d
REQUESTDATA_PET_PARA	base/Command.h	/^const BYTE REQUESTDATA_PET_PARA = 2;$/;"	v
REQUESTEXCHANGECARDID_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	5702;"	d
REQUESTLANDMASS_MOVE_USERCMD_PARA	base/Command.h	/^const BYTE REQUESTLANDMASS_MOVE_USERCMD_PARA = 30;$/;"	v
REQUESTMAPNPCDATA_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE REQUESTMAPNPCDATA_MAPSCREEN_USERCMD_PARA = 52;$/;"	v
REQUESTPKDATA_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQUESTPKDATA_PROPERTY_USERCMD_PARA = 166;$/;"	v
REQUESTROOMDETAIL_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE REQUESTROOMDETAIL_QUESTROOM_PARA = 13;$/;"	v
REQUESTUSERDATA_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE REQUESTUSERDATA_MAPSCREEN_USERCMD_PARA = 12;$/;"	v
REQUESTUSERGAMETIME_TIMER_USERCMD_PARA	base/Command.h	/^const BYTE REQUESTUSERGAMETIME_TIMER_USERCMD_PARA = 2;$/;"	v
REQUESTUSERGAMETIME_TIMER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQUESTUSERGAMETIME_TIMER_USERCMD_PARA = 2;$/;"	v
REQUEST_ABJURATION_CITY_PARA	base/Command.h	/^const BYTE REQUEST_ABJURATION_CITY_PARA = 26;$/;"	v
REQUEST_ABJURATION_CITY_PARA	tmpcode/commond.h	/^const BYTE REQUEST_ABJURATION_CITY_PARA = 26;$/;"	v
REQUEST_ABJURATION_SEPTNPC_PARA	base/Command.h	/^const BYTE REQUEST_ABJURATION_SEPTNPC_PARA = 24;$/;"	v
REQUEST_ADD_OBJECT_SELL_USERCMD_PARAMETER	base/Command.h	4188;"	d
REQUEST_ADD_OBJECT_SELL_USERCMD_PARAMETER	tmpcode/commond.h	12111;"	d
REQUEST_ADVERTISE_AUCTION_PARA	tmpcode/commond.h	/^const BYTE REQUEST_ADVERTISE_AUCTION_PARA = 10;$/;"	v
REQUEST_BATTLEFIELD_COUNTRY_LIST	base/Command.h	/^  REQUEST_BATTLEFIELD_COUNTRY_LIST,\/\/ ËØ∑Ê±ÇÊàòÂú∫ÂàóË°®$/;"	e	enum:Cmd::__anon110
REQUEST_BE_WATCHER_WEEKEND_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE REQUEST_BE_WATCHER_WEEKEND_ZHENXUAN_PARA = 12;$/;"	v
REQUEST_BUSINESS_TASK_USERCMD	tmpcode/commond.h	/^const BYTE REQUEST_BUSINESS_TASK_USERCMD = 1;$/;"	v
REQUEST_CANCEL_LIST_STOCKPARA	base/Command.h	7580;"	d
REQUEST_CANCEL_UNION_ALLY_INFO	tmpcode/commond.h	13455;"	d
REQUEST_CARD_AND_GOLD_PARA	base/Command.h	/^const BYTE REQUEST_CARD_AND_GOLD_PARA = 6;$/;"	v
REQUEST_CHANGE_TEAMLEADER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  REQUEST_CHANGE_TEAMLEADER_USERCMD_PARA  = 27;$/;"	v
REQUEST_CLEAN_TASK_PARA	tmpcode/commond.h	/^const BYTE REQUEST_CLEAN_TASK_PARA					= 67;$/;"	v
REQUEST_CLIENT_IP_PARA	base/Command.h	/^const BYTE REQUEST_CLIENT_IP_PARA = 15;$/;"	v
REQUEST_CLIENT_IP_PARA	tmpcode/commond.h	/^const BYTE REQUEST_CLIENT_IP_PARA = 15;$/;"	v
REQUEST_CONSIGN_LIST_STOCKPARA	base/Command.h	7548;"	d
REQUEST_CONSIGN_LIST_STOCKPARA	tmpcode/commond.h	23519;"	d
REQUEST_COUNTRYEVENT_DATA_USERCMD_PARA	tmpcode/commond.h	8103;"	d
REQUEST_COUNTRY_ALLY	tmpcode/commond.h	/^	REQUEST_COUNTRY_ALLY = 1,         \/\/ ΩÁÕıA«Î«Û”ÎBΩ·√À(Clt->Svr),$/;"	e	enum:CountryAllyActionEnum
REQUEST_COUNTRY_HELP_USERCMD_PARA	base/Command.h	3766;"	d
REQUEST_COUNTRY_HELP_USERCMD_PARA	tmpcode/commond.h	19779;"	d
REQUEST_COUNTRY_POWER_PARA	base/Command.h	5379;"	d
REQUEST_COUNTRY_POWER_PARA	tmpcode/commond.h	/^const BYTE REQUEST_COUNTRY_POWER_PARA = 42;$/;"	v
REQUEST_COUNTRY_SELECT_USERCMD_PARA	base/Command.h	/^const BYTE REQUEST_COUNTRY_SELECT_USERCMD_PARA = 7;$/;"	v
REQUEST_COUNTRY_SELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQUEST_COUNTRY_SELECT_USERCMD_PARA = 7;$/;"	v
REQUEST_COUNTRY_SORT_LIST_USERCMD_PARA	tmpcode/commond.h	27209;"	d
REQUEST_COUNTRY_STRENGTH_USERCMD_PARA	tmpcode/commond.h	27339;"	d
REQUEST_COUNTRY_TRANSPORT_LIMIT_PARA	tmpcode/commond.h	/^const BYTE REQUEST_COUNTRY_TRANSPORT_LIMIT_PARA = 63;$/;"	v
REQUEST_DARE_COUNTRY_LIST	base/Command.h	/^  REQUEST_DARE_COUNTRY_LIST,\/\/ ËØ∑Ê±ÇÊàòÂú∫ÂàóË°®$/;"	e	enum:Cmd::__anon110
REQUEST_DARE_COUNTRY_PARA	base/Command.h	/^const BYTE REQUEST_DARE_COUNTRY_PARA =2;$/;"	v
REQUEST_DARE_RECORD_PARA	base/Command.h	/^const BYTE REQUEST_DARE_RECORD_PARA = 6;$/;"	v
REQUEST_DAY_FLOWERLIST_PARA	tmpcode/commond.h	/^const BYTE REQUEST_DAY_FLOWERLIST_PARA = 185;$/;"	v
REQUEST_DECAY_LINGQI_PARA	tmpcode/commond.h	/^const BYTE REQUEST_DECAY_LINGQI_PARA = 1;$/;"	v
REQUEST_DRAGON_PARA	base/Command.h	5835;"	d
REQUEST_ENTER	tmpcode/commond.h	/^const BYTE REQUEST_ENTER = 2;$/;"	v
REQUEST_ENTER_FARM_PARA	tmpcode/commond.h	/^const BYTE REQUEST_ENTER_FARM_PARA = 6;$/;"	v
REQUEST_FIRSTTEN_LIST_STOCKPARA	base/Command.h	7608;"	d
REQUEST_FIRSTTEN_LIST_STOCKPARA	tmpcode/commond.h	23589;"	d
REQUEST_FLOWERLIST_PARA	tmpcode/commond.h	/^const BYTE REQUEST_FLOWERLIST_PARA = 152;$/;"	v
REQUEST_FRIEND_HOME_PARA	tmpcode/commond.h	/^const BYTE REQUEST_FRIEND_HOME_PARA					= 65;$/;"	v
REQUEST_GATE_COUNTRY_ORDER	base/RecordCommand.h	/^    const BYTE REQUEST_GATE_COUNTRY_ORDER = 9;$/;"	v
REQUEST_GATE_COUNTRY_ORDER	base/SessionCommand.h	/^    const BYTE REQUEST_GATE_COUNTRY_ORDER = 5;$/;"	v
REQUEST_GET_ON_TANK_PARA	tmpcode/commond.h	/^const BYTE REQUEST_GET_ON_TANK_PARA = 44;$/;"	v
REQUEST_GOLD_GIVE_USERCMD_PARAMETER	base/Command.h	4145;"	d
REQUEST_GOODS_BONUS_INFO_PARA	tmpcode/commond.h	32284;"	d
REQUEST_GOODS_WITH_BONUS_PARA	tmpcode/commond.h	32261;"	d
REQUEST_HEALTHY_GAME_PARA	tmpcode/commond.h	/^const BYTE REQUEST_HEALTHY_GAME_PARA 	= 69;$/;"	v
REQUEST_HISTORY_STOCKPARA	base/Command.h	7671;"	d
REQUEST_HOMELIST_PARA	tmpcode/commond.h	/^const BYTE REQUEST_HOMELIST_PARA				= 54;$/;"	v
REQUEST_HW_INFO_PARA	tmpcode/commond.h	/^const BYTE REQUEST_HW_INFO_PARA = 68;$/;"	v
REQUEST_INC_MAP_PROPERTY_USERCMD_PARA	base/Command.h	/^const BYTE REQUEST_INC_MAP_PROPERTY_USERCMD_PARA = 38;$/;"	v
REQUEST_JOINRIDE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQUEST_JOINRIDE_USERCMD_PARA =  90;$/;"	v
REQUEST_JOIN_CANCEL	base/Command.h	/^  REQUEST_JOIN_CANCEL,$/;"	e	enum:Cmd::__anon130
REQUEST_JOIN_OK	base/Command.h	/^  REQUEST_JOIN_OK,$/;"	e	enum:Cmd::__anon130
REQUEST_JOIN_SEPT_PARA	base/Command.h	/^const BYTE REQUEST_JOIN_SEPT_PARA = 21;$/;"	v
REQUEST_JOIN_TIMEOUT	base/Command.h	/^  REQUEST_JOIN_TIMEOUT$/;"	e	enum:Cmd::__anon130
REQUEST_JOIN_UNION_PARA	base/Command.h	/^const BYTE REQUEST_JOIN_UNION_PARA = 25;$/;"	v
REQUEST_KING_PURSE_LIST	tmpcode/commond.h	/^const BYTE REQUEST_KING_PURSE_LIST = 94;$/;"	v
REQUEST_LEVELUP_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE REQUEST_LEVELUP_HOUSE_USER_CMD = 12;$/;"	v
REQUEST_LIST_CARTOON_PARA	base/Command.h	8301;"	d
REQUEST_MAC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQUEST_MAC_USERCMD_PARA = 54;$/;"	v
REQUEST_MANAGE_HOUSE_USER_CMD	tmpcode/commond.h	/^const  BYTE REQUEST_MANAGE_HOUSE_USER_CMD = 10;$/;"	v
REQUEST_MERCENARYLISY_COUNTRY_CMD	tmpcode/commond.h	30424;"	d
REQUEST_MERGESERVER_TEAM_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQUEST_MERGESERVER_TEAM_USERCMD_PARA =191;$/;"	v
REQUEST_NAME_TEAM_USERCMD_PARA	base/Command.h	3756;"	d
REQUEST_NAME_TEAM_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  REQUEST_NAME_TEAM_USERCMD_PARA = 22;$/;"	v
REQUEST_NINESCREEN_SEPTMEMBER_PARA	tmpcode/commond.h	/^const BYTE REQUEST_NINESCREEN_SEPTMEMBER_PARA = 37;$/;"	v
REQUEST_NINESCREEN_UNIONMEMBER_PARA	tmpcode/commond.h	/^const BYTE REQUEST_NINESCREEN_UNIONMEMBER_PARA = 46;$/;"	v
REQUEST_NPCGOODS_GUARD_PARA	tmpcode/commond.h	/^const BYTE REQUEST_NPCGOODS_GUARD_PARA = 20;$/;"	v
REQUEST_NPCINFO_SEPT_PARA	base/Command.h	/^const BYTE REQUEST_NPCINFO_SEPT_PARA = 22;$/;"	v
REQUEST_PACK_BUSINESS_USERCMD	tmpcode/commond.h	/^const BYTE REQUEST_PACK_BUSINESS_USERCMD = 13;$/;"	v
REQUEST_PETCHANGEFACE_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQUEST_PETCHANGEFACE_MAGIC_USERCMD_PARA =52;$/;"	v
REQUEST_PING_LIST_PARA	base/Command.h	/^const BYTE REQUEST_PING_LIST_PARA = 2;$/;"	v
REQUEST_POINT_CARD_PARA	tmpcode/commond.h	/^const BYTE REQUEST_POINT_CARD_PARA = 13;$/;"	v
REQUEST_POINT_PARA	base/Command.h	/^const BYTE REQUEST_POINT_PARA = 8;$/;"	v
REQUEST_POINT_PARA	tmpcode/commond.h	/^const BYTE REQUEST_POINT_PARA = 8;$/;"	v
REQUEST_QUEST_PARA	base/Command.h	/^static const BYTE REQUEST_QUEST_PARA = 13;$/;"	v
REQUEST_QUEST_PARA	tmpcode/commond.h	/^static const BYTE REQUEST_QUEST_PARA = 13;$/;"	v
REQUEST_RECOMMEND_REWARD_USERCMD_PARA	tmpcode/commond.h	5269;"	d
REQUEST_REDEEM_GOLD_PARA	base/Command.h	/^const BYTE REQUEST_REDEEM_GOLD_PARA = 2;$/;"	v
REQUEST_REDEEM_GOLD_PARA	tmpcode/commond.h	/^const BYTE REQUEST_REDEEM_GOLD_PARA = 2;$/;"	v
REQUEST_REDEEM_MONTH_CARD_PARA	base/Command.h	/^const BYTE REQUEST_REDEEM_MONTH_CARD_PARA = 4;$/;"	v
REQUEST_RENT_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE REQUEST_RENT_HOUSE_USER_CMD = 18;$/;"	v
REQUEST_REPLACE_BOSS_PARA	tmpcode/commond.h	/^const BYTE REQUEST_REPLACE_BOSS_PARA = 4;$/;"	v
REQUEST_SCORELIST_LUORI_PARA	tmpcode/commond.h	/^const BYTE REQUEST_SCORELIST_LUORI_PARA = 6;$/;"	v
REQUEST_SCORELIST_WEEKEND_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE REQUEST_SCORELIST_WEEKEND_ZHENXUAN_PARA = 10;$/;"	v
REQUEST_SCORELIST_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE REQUEST_SCORELIST_ZHENXUAN_PARA = 3;$/;"	v
REQUEST_SELF_HISTORY_STOCKPARA	base/Command.h	7717;"	d
REQUEST_SELF_HISTORY_STOCKPARA	tmpcode/commond.h	23711;"	d
REQUEST_SELL_BUY_USERCMD_PARAMETER	base/Command.h	4081;"	d
REQUEST_SELL_BUY_USERCMD_PARAMETER	tmpcode/commond.h	12195;"	d
REQUEST_SELL_INFO_USERCMD_PARAMETER	base/Command.h	4070;"	d
REQUEST_SELL_INFO_USERCMD_PARAMETER	tmpcode/commond.h	12184;"	d
REQUEST_SEPTSKILL_LIST_USERCMD	tmpcode/commond.h	/^const BYTE REQUEST_SEPTSKILL_LIST_USERCMD = 0;$/;"	v
REQUEST_SEPT_EXP_PARA	base/Command.h	/^const BYTE REQUEST_SEPT_EXP_PARA = 23;$/;"	v
REQUEST_SEPT_NORMAL_EXP_PARA	base/Command.h	/^const BYTE REQUEST_SEPT_NORMAL_EXP_PARA = 29;$/;"	v
REQUEST_SEPT_SHOP_USERCMD_PARA	tmpcode/commond.h	5279;"	d
REQUEST_SHENYU_INFO_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQUEST_SHENYU_INFO_USERCMD_PARA = 100;$/;"	v
REQUEST_SHUDU_PARA	tmpcode/commond.h	/^const BYTE REQUEST_SHUDU_PARA = 1;$/;"	v
REQUEST_SIGN_MAXLEVEL_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQUEST_SIGN_MAXLEVEL_USERCMD_PARA = 4;$/;"	v
REQUEST_START_CHALLENGE_USERCMD_PARAMETER	tmpcode/commond.h	22191;"	d
REQUEST_STATE_STOCKPARA	base/Command.h	7785;"	d
REQUEST_STATE_STOCKPARA	tmpcode/commond.h	23791;"	d
REQUEST_STRONGWEAK_COUNTRIES_USERCMD_PARA	tmpcode/commond.h	27266;"	d
REQUEST_TANKDATA_PARA	tmpcode/commond.h	/^const BYTE REQUEST_TANKDATA_PARA = 49;$/;"	v
REQUEST_TANK_SEATLIST_PARA	tmpcode/commond.h	/^const BYTE REQUEST_TANK_SEATLIST_PARA = 41;$/;"	v
REQUEST_TEAMMEMBER_POSITION_USERCMD_PARA	base/Command.h	3594;"	d
REQUEST_TEAMMEMBER_POSITION_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQUEST_TEAMMEMBER_POSITION_USERCMD_PARA = 11;$/;"	v
REQUEST_TEAM_USERCMD_PARA	base/Command.h	3518;"	d
REQUEST_TIGER_PARA	base/Command.h	5845;"	d
REQUEST_TRADE_NEW_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE REQUEST_TRADE_NEW_USERCMD_PARAMETER = 38;$/;"	v
REQUEST_TRADE_USERCMD_PARAMETER	base/Command.h	3847;"	d
REQUEST_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE REQUEST_TRADE_USERCMD_PARAMETER = 1;$/;"	v
REQUEST_TRAFFIC_TAXHISTORY	tmpcode/commond.h	/^const BYTE REQUEST_TRAFFIC_TAXHISTORY=195;$/;"	v
REQUEST_UNION_BUSINESSMEN_USERCMD	tmpcode/commond.h	/^const BYTE REQUEST_UNION_BUSINESSMEN_USERCMD = 18;$/;"	v
REQUEST_UNION_CITY_TAX	tmpcode/commond.h	/^const BYTE REQUEST_UNION_CITY_TAX=108;$/;"	v
REQUEST_UNION_CITY_TAXHISTORY	tmpcode/commond.h	/^const BYTE REQUEST_UNION_CITY_TAXHISTORY=112;$/;"	v
REQUEST_UNION_COUNTRY_TAX	tmpcode/commond.h	/^const BYTE REQUEST_UNION_COUNTRY_TAX=110;$/;"	v
REQUEST_UNION_PRO_STATE_PARA	tmpcode/commond.h	/^const BYTE REQUEST_UNION_PRO_STATE_PARA = 125;$/;"	v
REQUEST_VOTE_LIST_PARA	base/Command.h	5515;"	d
REQUEST_YINGZHAN_PARA	tmpcode/commond.h	/^const BYTE REQUEST_YINGZHAN_PARA=15;$/;"	v
REQUEST_YUYIN_CHANNEL_PARA	tmpcode/commond.h	/^const BYTE REQUEST_YUYIN_CHANNEL_PARA = 3;$/;"	v
REQUST_ROOMERNAME_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE REQUST_ROOMERNAME_HOUSE_USER_CMD = 21;$/;"	v
REQ_32_NAMELIST_PARA	tmpcode/commond.h	/^const BYTE  REQ_32_NAMELIST_PARA = 1;$/;"	v
REQ_ACCELCMD_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_ACCELCMD_PROPERTY_USERCMD_PARA = 145;$/;"	v
REQ_ACCELKEY_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_ACCELKEY_PROPERTY_USERCMD_PARA = 128;$/;"	v
REQ_ACHIVEMENT_AWARD_PARA	tmpcode/commond.h	/^const BYTE REQ_ACHIVEMENT_AWARD_PARA = 168;$/;"	v
REQ_ADDFIREWOOD_USER_CMD	tmpcode/commond.h	/^const BYTE REQ_ADDFIREWOOD_USER_CMD = 44;$/;"	v
REQ_ADD_TEAM_PARA	tmpcode/commond.h	/^const BYTE REQ_ADD_TEAM_PARA = 2;$/;"	v
REQ_ADD_TEAM_USERCMD_PARA	tmpcode/commond.h	12619;"	d
REQ_ADJUST_CITY_BONFIRE_EXP	tmpcode/commond.h	11381;"	d
REQ_AGREEMENT_UNMARRY_PARA	tmpcode/commond.h	/^const BYTE REQ_AGREEMENT_UNMARRY_PARA = 25;$/;"	v
REQ_ALL_CARD_TUJIAN_DATA_CMD	base/HeroCardCmd.h	/^    const BYTE REQ_ALL_CARD_TUJIAN_DATA_CMD = 4;$/;"	v
REQ_ALL_CITY_HEART	tmpcode/commond.h	/^const BYTE REQ_ALL_CITY_HEART = 113;$/;"	v
REQ_ALL_HERO_INFO_CMD	base/HeroCardCmd.h	/^    const BYTE REQ_ALL_HERO_INFO_CMD = 15;$/;"	v
REQ_ALTER_UNION_SELL_PRICE	tmpcode/commond.h	/^const BYTE REQ_ALTER_UNION_SELL_PRICE = 137;$/;"	v
REQ_AREA_DATA_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE REQ_AREA_DATA_HOUSE_USER_CMD = 1;$/;"	v
REQ_ARMY_GEN_PARA	base/Command.h	5634;"	d
REQ_ARMY_LIST_PARA	base/Command.h	5653;"	d
REQ_ARMY_LIST_SCENE_PARA	base/SessionCommand.h	/^    const BYTE REQ_ARMY_LIST_SCENE_PARA = 1;$/;"	v
REQ_ARMY_SPEC_PARA	base/Command.h	5690;"	d
REQ_AVATAR_INFO	tmpcode/commond.h	/^const BYTE REQ_AVATAR_INFO = 128;$/;"	v
REQ_AWARD_DAILY_QUEST_PARA	tmpcode/commond.h	/^const BYTE REQ_AWARD_DAILY_QUEST_PARA = 12;$/;"	v
REQ_BATTLEINFO_PARA	tmpcode/commond.h	/^const BYTE REQ_BATTLEINFO_PARA = 3;$/;"	v
REQ_BEGINFOUNDSKILLSTORE	tmpcode/commond.h	5517;"	d
REQ_BET_IN_CHALLENGE_DRAGON_PARA	tmpcode/commond.h	/^const BYTE REQ_BET_IN_CHALLENGE_DRAGON_PARA = 22;$/;"	v
REQ_BE_KING_PARA	tmpcode/commond.h	/^const BYTE REQ_BE_KING_PARA = 7;$/;"	v
REQ_BOSS_LIST_PARA	tmpcode/commond.h	/^const BYTE REQ_BOSS_LIST_PARA					= 91;$/;"	v
REQ_BUILDSKILLSTORE	tmpcode/commond.h	5688;"	d
REQ_BUILD_MAGICFROGE_OBJECT	tmpcode/commond.h	/^const BYTE REQ_BUILD_MAGICFROGE_OBJECT = 163;$/;"	v
REQ_BUILD_POTENTIAL_SKILL_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_BUILD_POTENTIAL_SKILL_USERCMD_PARA = 238;$/;"	v
REQ_BUYSEPT_AD	tmpcode/commond.h	/^const BYTE REQ_BUYSEPT_AD = 110;$/;"	v
REQ_BUY_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE REQ_BUY_HOUSE_USER_CMD  = 3;$/;"	v
REQ_BUY_MARKET_MOBILE_OBJECT_CMD	base/Command.h	/^const BYTE REQ_BUY_MARKET_MOBILE_OBJECT_CMD = 44;$/;"	v
REQ_CARD_GROUP_LIST_INFO_CMD	base/HeroCardCmd.h	/^    const BYTE REQ_CARD_GROUP_LIST_INFO_CMD = 5;$/;"	v
REQ_CARD_MAGIC_USERCMD_PARA	base/HeroCardCmd.h	/^    const BYTE REQ_CARD_MAGIC_USERCMD_PARA = 38;$/;"	v
REQ_CATCH_GAME_BEGIN_PARA	tmpcode/commond.h	/^const BYTE REQ_CATCH_GAME_BEGIN_PARA = 0;$/;"	v
REQ_CATCH_LINGQI_BEGIN_PARA	tmpcode/commond.h	/^const BYTE REQ_CATCH_LINGQI_BEGIN_PARA = 7;$/;"	v
REQ_CHALLENGE_PARA	tmpcode/commond.h	21804;"	d
REQ_CHANGESKILLSTORE_TYPE	tmpcode/commond.h	5503;"	d
REQ_CHANGE_BACK_TITLE	tmpcode/commond.h	/^const BYTE REQ_CHANGE_BACK_TITLE = 4;$/;"	v
REQ_CHANGE_TITLE	tmpcode/commond.h	/^const BYTE REQ_CHANGE_TITLE = 3;$/;"	v
REQ_CHANGE_ZONE	base/BattleUserCmd.h	/^    const BYTE REQ_CHANGE_ZONE = 8;$/;"	v
REQ_CHAT_ACCEL_PROPERTY_USERCMD_PARA	tmpcode/commond.h	27549;"	d
REQ_CITYDARE_INFO_PARA	tmpcode/commond.h	/^const BYTE REQ_CITYDARE_INFO_PARA = 10;$/;"	v
REQ_CITYDARE_INTO_PARA	tmpcode/commond.h	/^const BYTE REQ_CITYDARE_INTO_PARA = 12;$/;"	v
REQ_CITYDARE_MAP_PARA	tmpcode/commond.h	/^const BYTE REQ_CITYDARE_MAP_PARA = 4;$/;"	v
REQ_CITYDARE_MP_PARA	tmpcode/commond.h	/^const BYTE REQ_CITYDARE_MP_PARA = 5;$/;"	v
REQ_CITYDARE_PRAY_PARA	tmpcode/commond.h	/^const BYTE REQ_CITYDARE_PRAY_PARA = 7;$/;"	v
REQ_CITYDARE_QUIT_PARA	tmpcode/commond.h	/^const BYTE REQ_CITYDARE_QUIT_PARA = 9;$/;"	v
REQ_CITYDARE_SORT_PARA	tmpcode/commond.h	/^const BYTE REQ_CITYDARE_SORT_PARA = 2;$/;"	v
REQ_CITYQUESTLIST	tmpcode/commond.h	/^const BYTE REQ_CITYQUESTLIST = 120;$/;"	v
REQ_CITYQUEST_GET_LIST	tmpcode/commond.h	/^const BYTE REQ_CITYQUEST_GET_LIST = 123;$/;"	v
REQ_CITY_FUND_UNION_HISTORY	tmpcode/commond.h	/^const BYTE REQ_CITY_FUND_UNION_HISTORY = 177;$/;"	v
REQ_CITY_GUARD_INFO	tmpcode/commond.h	/^const BYTE REQ_CITY_GUARD_INFO = 4;$/;"	v
REQ_CITY_GUARD_SORT_PARA	tmpcode/commond.h	/^const BYTE REQ_CITY_GUARD_SORT_PARA = 13;$/;"	v
REQ_CITY_MINXIN_REC_PARA	tmpcode/commond.h	/^const BYTE REQ_CITY_MINXIN_REC_PARA = 8;$/;"	v
REQ_CITY_OWNER_LIST_PARA	base/Command.h	5440;"	d
REQ_CITY_RELIVE_NPCINFO	tmpcode/commond.h	/^const BYTE REQ_CITY_RELIVE_NPCINFO = 2;$/;"	v
REQ_CONSIGN_ISSUED_QUEST_PARA	tmpcode/commond.h	/^static const BYTE REQ_CONSIGN_ISSUED_QUEST_PARA = 45;   $/;"	v
REQ_CONTINUE_PARA	tmpcode/commond.h	/^const BYTE REQ_CONTINUE_PARA = 2;$/;"	v
REQ_CONTRIBUTE_CHANGE_UNION_COUPON	tmpcode/commond.h	/^const BYTE REQ_CONTRIBUTE_CHANGE_UNION_COUPON = 213;$/;"	v
REQ_CONVERT_SHENYU_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_CONVERT_SHENYU_USERCMD_PARA = 104;$/;"	v
REQ_COUNTRY_ALLY_INFO_PARA	base/Command.h	9053;"	d
REQ_COUNTRY_ALLY_PARA	base/Command.h	9010;"	d
REQ_COUNTRY_NOTE_PARA	base/Command.h	5276;"	d
REQ_COUNTRY_NOTE_PARA	tmpcode/commond.h	8066;"	d
REQ_COUNTRY_SEPT_NOTICE	tmpcode/commond.h	/^const BYTE REQ_COUNTRY_SEPT_NOTICE = 95;$/;"	v
REQ_COURSE_OF_KING_PARA	tmpcode/commond.h	/^const BYTE REQ_COURSE_OF_KING_PARA = 135;$/;"	v
REQ_CREATESEPT_SIGN	tmpcode/commond.h	/^const BYTE REQ_CREATESEPT_SIGN = 104;$/;"	v
REQ_CREATESEPT_SIGNINFO	tmpcode/commond.h	/^const BYTE REQ_CREATESEPT_SIGNINFO = 102;$/;"	v
REQ_CREATE_ONE_CARD_GROUP_CMD	base/HeroCardCmd.h	/^    const BYTE REQ_CREATE_ONE_CARD_GROUP_CMD = 9;$/;"	v
REQ_CRIMINAL_APPLY_INFO	tmpcode/commond.h	/^const BYTE REQ_CRIMINAL_APPLY_INFO = 200;$/;"	v
REQ_CRIMINAL_LIST_INFO	tmpcode/commond.h	/^const BYTE REQ_CRIMINAL_LIST_INFO = 198;$/;"	v
REQ_CURRENT_CITY_TAX	tmpcode/commond.h	/^const BYTE REQ_CURRENT_CITY_TAX = 114;$/;"	v
REQ_DAILY_ACHIEVEMENT_INFO_PARA	tmpcode/commond.h	/^const BYTE REQ_DAILY_ACHIEVEMENT_INFO_PARA = 173;$/;"	v
REQ_DAILY_EMPEROR_MONEY	base/Command.h	5400;"	d
REQ_DAILY_WARNING_QUEST_PARA	tmpcode/commond.h	/^static const BYTE REQ_DAILY_WARNING_QUEST_PARA = 9;\/\/«Î«Û√ø»’Ã·–—»ŒŒÒ¡–±Ì$/;"	v
REQ_DANGER_AREA_PARA	tmpcode/commond.h	8075;"	d
REQ_DECAY_TO_OTHER_LINGQI_PARA	tmpcode/commond.h	/^const BYTE REQ_DECAY_TO_OTHER_LINGQI_PARA = 2;$/;"	v
REQ_DELETE_ONE_CARD_GROUP_CMD	base/HeroCardCmd.h	/^    const BYTE REQ_DELETE_ONE_CARD_GROUP_CMD = 12;$/;"	v
REQ_DRAGON_ISLAND_MAZE_CONTINUE	tmpcode/commond.h	/^const BYTE REQ_DRAGON_ISLAND_MAZE_CONTINUE = 53;$/;"	v
REQ_DUKESORT_LASTWEEK	tmpcode/commond.h	/^const BYTE REQ_DUKESORT_LASTWEEK = 2;$/;"	v
REQ_DUKESORT_THISWEEK	tmpcode/commond.h	/^const BYTE REQ_DUKESORT_THISWEEK = 1;$/;"	v
REQ_EMPLOY_NPC_AD	tmpcode/commond.h	/^const BYTE REQ_EMPLOY_NPC_AD = 11;$/;"	v
REQ_END_COLLECT_PARA	tmpcode/commond.h	/^const BYTE REQ_END_COLLECT_PARA = 84;$/;"	v
REQ_END_MY_ROUND_CMD	base/HeroCardCmd.h	/^    const BYTE REQ_END_MY_ROUND_CMD = 22;$/;"	v
REQ_ENEMY_LIST_PARA	tmpcode/commond.h	6042;"	d
REQ_ENTER_BATTLE_PARA	base/BattleUserCmd.h	/^    const BYTE REQ_ENTER_BATTLE_PARA = 2;$/;"	v
REQ_ENTER_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE REQ_ENTER_HOUSE_USER_CMD = 6;$/;"	v
REQ_ENTER_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_ENTER_MAPSCREEN_USERCMD_PARA = 109;$/;"	v
REQ_ENTER_QUESTROOM_HAIL_PARA	tmpcode/commond.h	/^const BYTE REQ_ENTER_QUESTROOM_HAIL_PARA = 30;$/;"	v
REQ_ENTER_UNFINISHED_GAME_CMD	base/HeroCardCmd.h	/^    const BYTE REQ_ENTER_UNFINISHED_GAME_CMD = 35;$/;"	v
REQ_ENTER_UNION_SHOP	tmpcode/commond.h	/^const DWORD REQ_ENTER_UNION_SHOP = 187;$/;"	v
REQ_EQUIP_AWARD_PARA	tmpcode/commond.h	/^const BYTE REQ_EQUIP_AWARD_PARA = 169;$/;"	v
REQ_EQUIP_INTENSIFY_INFO	tmpcode/commond.h	/^const BYTE REQ_EQUIP_INTENSIFY_INFO = 158;$/;"	v
REQ_EXPLOIT_TO_EXP_PARA	tmpcode/commond.h	/^const BYTE REQ_EXPLOIT_TO_EXP_PARA = 3;$/;"	v
REQ_EXPLOIT_TO_MONEY_PARA	tmpcode/commond.h	/^const BYTE REQ_EXPLOIT_TO_MONEY_PARA = 2;$/;"	v
REQ_EXPLOIT_TO_NOBILITY_PARA	tmpcode/commond.h	/^const BYTE REQ_EXPLOIT_TO_NOBILITY_PARA = 1;$/;"	v
REQ_FARM_INFO_PARA	tmpcode/commond.h	/^const BYTE REQ_FARM_INFO_PARA = 1;$/;"	v
REQ_FETCH_SEPT_STORE_CMD	tmpcode/commond.h	/^const BYTE REQ_FETCH_SEPT_STORE_CMD = 139;$/;"	v
REQ_FIGHT_MATCH_PARA	base/SessionCommand.h	/^    const BYTE REQ_FIGHT_MATCH_PARA = 2;$/;"	v
REQ_FIGHT_PREPARE_OVER_CMD	base/HeroCardCmd.h	/^    const BYTE REQ_FIGHT_PREPARE_OVER_CMD = 28;$/;"	v
REQ_FINDOUT_AWARD_PROMOTER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_FINDOUT_AWARD_PROMOTER_USERCMD_PARA = 75;$/;"	v
REQ_FINISHSKILLSTORE	tmpcode/commond.h	5678;"	d
REQ_FLAGINFO	tmpcode/commond.h	/^const BYTE REQ_FLAGINFO = 4;$/;"	v
REQ_FORCE_RELATION_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_FORCE_RELATION_DATA_USERCMD_PARA = 66;$/;"	v
REQ_FOUNDITEM_SKILLSTORE	tmpcode/commond.h	5541;"	d
REQ_GEN_COUNTRY_PARA	base/Command.h	5310;"	d
REQ_GET_EQUIP_AWARD_INFO_PARA	tmpcode/commond.h	/^const BYTE REQ_GET_EQUIP_AWARD_INFO_PARA = 170;$/;"	v
REQ_GET_PROMOTER_REWARD_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_GET_PROMOTER_REWARD_USERCMD_PARA = 70;$/;"	v
REQ_GET_UNION_INFO	tmpcode/commond.h	/^const BYTE REQ_GET_UNION_INFO = 102;$/;"	v
REQ_GIVEUP_ONE_BATTLE_CMD	base/HeroCardCmd.h	/^    const BYTE REQ_GIVEUP_ONE_BATTLE_CMD = 25;$/;"	v
REQ_GIVE_GUARD_GOODS_SEPT_CMD	tmpcode/commond.h	/^const BYTE REQ_GIVE_GUARD_GOODS_SEPT_CMD = 115;$/;"	v
REQ_GOUHUO_PARA	tmpcode/commond.h	/^const BYTE REQ_GOUHUO_PARA = 1;$/;"	v
REQ_GO_TO_BED_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE REQ_GO_TO_BED_HOUSE_USER_CMD = 51;$/;"	v
REQ_GUARD_GOODS_SEPT_CMD	tmpcode/commond.h	/^const BYTE REQ_GUARD_GOODS_SEPT_CMD = 108;$/;"	v
REQ_HERO_FIGHT_MATCH_CMD	base/HeroCardCmd.h	/^    const BYTE REQ_HERO_FIGHT_MATCH_CMD = 18;$/;"	v
REQ_INFO_ISSUED_QUEST_PARA	tmpcode/commond.h	/^static const BYTE REQ_INFO_ISSUED_QUEST_PARA = 40;  $/;"	v
REQ_INVITE_CHUNYUN_CMD	tmpcode/commond.h	/^const BYTE  REQ_INVITE_CHUNYUN_CMD= 66;$/;"	v
REQ_IS_PROMOTER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_IS_PROMOTER_USERCMD_PARA = 72;$/;"	v
REQ_JIEZHANSTATE_LIST	tmpcode/commond.h	/^const BYTE REQ_JIEZHANSTATE_LIST = 129;$/;"	v
REQ_JOIN_CHANNEL_USERCMD_PARA	tmpcode/commond.h	12505;"	d
REQ_JOIN_CITY_BONFIRE	tmpcode/commond.h	11368;"	d
REQ_JOIN_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE REQ_JOIN_HOUSE_USER_CMD  = 4;$/;"	v
REQ_JOIN_LTQ_PARA	tmpcode/commond.h	24558;"	d
REQ_JOIN_QUESTMAP_PARA	tmpcode/commond.h	18188;"	d
REQ_JOIN_SEPT_BATTLE_PARA	tmpcode/commond.h	/^const BYTE REQ_JOIN_SEPT_BATTLE_PARA			 = 2;$/;"	v
REQ_JOIN_SEPT_POPO_PARA	tmpcode/commond.h	26388;"	d
REQ_JOIN_TABLE_MAP_SCREEN_USERCMD	tmpcode/commond.h	/^const BYTE REQ_JOIN_TABLE_MAP_SCREEN_USERCMD = 16;$/;"	v
REQ_JOIN_TEAM_USERCMD_PARA	tmpcode/commond.h	8313;"	d
REQ_KEY_OPT_SHENMI_PARA	tmpcode/commond.h	/^const BYTE REQ_KEY_OPT_SHENMI_PARA = 31;$/;"	v
REQ_KICK_USER_CHUNYUN_CMD	tmpcode/commond.h	/^const BYTE  REQ_KICK_USER_CHUNYUN_CMD = 68;$/;"	v
REQ_KING_LIST_PARA	base/Command.h	5410;"	d
REQ_LAND_ITEM_PARA	tmpcode/commond.h	/^const BYTE REQ_LAND_ITEM_PARA = 3;$/;"	v
REQ_LAST_PRIVATESTORE_INFO	tmpcode/commond.h	5492;"	d
REQ_LEAVE	tmpcode/commond.h	/^const BYTE REQ_LEAVE = 4;$/;"	v
REQ_LIST_POTENTIAL_SKILL_BUILD_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_LIST_POTENTIAL_SKILL_BUILD_USERCMD_PARA = 237;$/;"	v
REQ_LIST_RANDOM_QUEST_PARA	tmpcode/commond.h	/^const BYTE REQ_LIST_RANDOM_QUEST_PARA = 1;$/;"	v
REQ_MAGIC_FORGE_INFO	tmpcode/commond.h	/^const BYTE REQ_MAGIC_FORGE_INFO = 164;$/;"	v
REQ_MAP_DIG_TREASURE_PARA	tmpcode/commond.h	/^const BYTE REQ_MAP_DIG_TREASURE_PARA = 5;$/;"	v
REQ_MARKET_OBJECT_INFO_CMD	base/Command.h	/^const BYTE REQ_MARKET_OBJECT_INFO_CMD = 46;$/;"	v
REQ_MARQUISSORT_LASTWEEK	tmpcode/commond.h	/^const BYTE REQ_MARQUISSORT_LASTWEEK = 4;$/;"	v
REQ_MARQUISSORT_THISWEEK	tmpcode/commond.h	/^const BYTE REQ_MARQUISSORT_THISWEEK = 3;$/;"	v
REQ_MARRIAGE_HOLD_PARA	tmpcode/commond.h	/^const BYTE REQ_MARRIAGE_HOLD_PARA = 13;$/;"	v
REQ_MARRIAGE_INTERACTION_PARA	tmpcode/commond.h	/^const BYTE REQ_MARRIAGE_INTERACTION_PARA = 11;$/;"	v
REQ_MARRIAGE_PRESS_PARA	tmpcode/commond.h	/^const BYTE REQ_MARRIAGE_PRESS_PARA = 29;$/;"	v
REQ_MASTER_PERFORM_CMD	tmpcode/commond.h	/^const BYTE REQ_MASTER_PERFORM_CMD = 124;$/;"	v
REQ_MASTER_PERFORM_STATE_CMD	tmpcode/commond.h	/^const BYTE REQ_MASTER_PERFORM_STATE_CMD = 134;$/;"	v
REQ_MAXLEVEL_ICON_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_MAXLEVEL_ICON_DATA_USERCMD_PARA = 7;$/;"	v
REQ_MERCH_LIST_INFO	tmpcode/commond.h	/^const DWORD REQ_MERCH_LIST_INFO = 186;$/;"	v
REQ_MERCH_MEETING	tmpcode/commond.h	/^const DWORD REQ_MERCH_MEETING = 188;$/;"	v
REQ_MERCH_NOTICE_PRICE	tmpcode/commond.h	/^const BYTE REQ_MERCH_NOTICE_PRICE = 202;$/;"	v
REQ_MERCH_ROAD_INFO	tmpcode/commond.h	/^const DWORD REQ_MERCH_ROAD_INFO = 189;$/;"	v
REQ_MONEY_ZYZ	tmpcode/commond.h	/^const BYTE REQ_MONEY_ZYZ = 3;$/;"	v
REQ_MY_RANKS_CHAT_PARA	tmpcode/commond.h	6778;"	d
REQ_NEWBOX_LOCK_ITEM_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_NEWBOX_LOCK_ITEM_USERCMD_PARA = 224;$/;"	v
REQ_NEXT_STATE_MARRY_PARA	tmpcode/commond.h	/^const BYTE REQ_NEXT_STATE_MARRY_PARA = 23;$/;"	v
REQ_NOW_SEPTAD_PRICE	tmpcode/commond.h	/^const BYTE REQ_NOW_SEPTAD_PRICE = 111;$/;"	v
REQ_NPC_OWNER_LIST_PARA	base/Command.h	5467;"	d
REQ_OBJ_VISIT_HOUSE_USER_CMD	tmpcode/commond.h	/^const  BYTE REQ_OBJ_VISIT_HOUSE_USER_CMD =  39;$/;"	v
REQ_OCCUPIEDNPC_PARA	tmpcode/commond.h	/^const BYTE REQ_OCCUPIEDNPC_PARA = 12;$/;"	v
REQ_OFFICIAL_PARA	tmpcode/commond.h	/^const BYTE REQ_OFFICIAL_PARA = 2;$/;"	v
REQ_ONE_CARD_GROUP_INFO_CMD	base/HeroCardCmd.h	/^    const BYTE REQ_ONE_CARD_GROUP_INFO_CMD = 7;$/;"	v
REQ_OPENBOX_PARA	tmpcode/commond.h	/^const BYTE REQ_OPENBOX_PARA = 1;$/;"	v
REQ_OPEN_HAPPY_CARD_BOX_PARA	tmpcode/commond.h	/^const BYTE REQ_OPEN_HAPPY_CARD_BOX_PARA = 3;$/;"	v
REQ_OPEN_SEPT_STORE_CMD	tmpcode/commond.h	/^const BYTE REQ_OPEN_SEPT_STORE_CMD = 135;$/;"	v
REQ_PLACE_TABLE_MAP_SCREEN_USERCMD	tmpcode/commond.h	/^const BYTE REQ_PLACE_TABLE_MAP_SCREEN_USERCMD = 13;$/;"	v
REQ_PLANT_PARA	tmpcode/commond.h	/^const BYTE REQ_PLANT_PARA = 5;$/;"	v
REQ_POLL_INFO_PARA	tmpcode/commond.h	/^const BYTE REQ_POLL_INFO_PARA = 8;$/;"	v
REQ_POLL_PARA	tmpcode/commond.h	/^const BYTE REQ_POLL_PARA = 7;$/;"	v
REQ_PROCESS_RESOURCE_UNION_PARA	tmpcode/commond.h	/^const BYTE REQ_PROCESS_RESOURCE_UNION_PARA = 151;$/;"	v
REQ_PRODUCING_UNION_PRO_PARA	tmpcode/commond.h	/^const BYTE REQ_PRODUCING_UNION_PRO_PARA = 128;$/;"	v
REQ_PUT_CITYQUEST	tmpcode/commond.h	/^const BYTE REQ_PUT_CITYQUEST = 113;$/;"	v
REQ_PUT_SEPT_NOTICE	tmpcode/commond.h	/^const BYTE REQ_PUT_SEPT_NOTICE = 97;$/;"	v
REQ_PUT_SEPT_STORE_CMD	tmpcode/commond.h	/^const BYTE REQ_PUT_SEPT_STORE_CMD = 138;$/;"	v
REQ_QUIT_CHUNYUN_CMD	tmpcode/commond.h	/^const BYTE  REQ_QUIT_CHUNYUN_CMD = 69;$/;"	v
REQ_QUIT_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE REQ_QUIT_HOUSE_USER_CMD  = 5;$/;"	v
REQ_RANK_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE REQ_RANK_ZHENXUAN_PARA = 19;$/;"	v
REQ_RAPID_SELECT_QUEST_PARA	tmpcode/commond.h	/^const BYTE REQ_RAPID_SELECT_QUEST_PARA = 3;$/;"	v
REQ_RECALL_MASTER_INFO	tmpcode/commond.h	/^const BYTE REQ_RECALL_MASTER_INFO = 118;$/;"	v
REQ_RECOMMENDED_BOUNTY_PARA	base/Command.h	9127;"	d
REQ_RECOMMEND_BOUNTY_PARA	base/Command.h	9115;"	d
REQ_RENT_PACK_OBJ	tmpcode/commond.h	/^const BYTE REQ_RENT_PACK_OBJ    = 103;  $/;"	v
REQ_RESOURCEINFO_PARA	tmpcode/commond.h	/^const BYTE REQ_RESOURCEINFO_PARA = 5;$/;"	v
REQ_RESOURCE_INFO_UNION_PARA	tmpcode/commond.h	/^const BYTE REQ_RESOURCE_INFO_UNION_PARA = 147;$/;"	v
REQ_RESOURCE_PROCESS_UNION_PARA	tmpcode/commond.h	/^const BYTE REQ_RESOURCE_PROCESS_UNION_PARA = 149;$/;"	v
REQ_RESTEXPLOIT_TO_SALARY_PARA	tmpcode/commond.h	/^const BYTE REQ_RESTEXPLOIT_TO_SALARY_PARA = 4;$/;"	v
REQ_RETURN_SOURCE_PARA	base/BattleUserCmd.h	/^    const BYTE REQ_RETURN_SOURCE_PARA = 4;$/;"	v
REQ_RET_TRANS_PROPERTY_USERCMD_PARA	tmpcode/commond.h	24313;"	d
REQ_REWARD_DUKESORT	tmpcode/commond.h	/^const BYTE REQ_REWARD_DUKESORT = 5;$/;"	v
REQ_REWARD_MARQUISSORT	tmpcode/commond.h	/^const BYTE REQ_REWARD_MARQUISSORT = 6;$/;"	v
REQ_RT_CHUNYUN_LIST_CMD	tmpcode/commond.h	/^const BYTE  REQ_RT_CHUNYUN_LIST_CMD = 70;$/;"	v
REQ_SAVE_ONE_CARD_GROUP_CMD	base/HeroCardCmd.h	/^    const BYTE REQ_SAVE_ONE_CARD_GROUP_CMD = 10;$/;"	v
REQ_SCORE_SC_PARA	tmpcode/commond.h	/^const BYTE REQ_SCORE_SC_PARA = 18;$/;"	v
REQ_SECPASSWORD_SELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_SECPASSWORD_SELECT_USERCMD_PARA = 9;$/;"	v
REQ_SELL_TO_STORAGE	tmpcode/commond.h	/^const BYTE REQ_SELL_TO_STORAGE = 132;$/;"	v
REQ_SEND_ACCEL_CHAT	tmpcode/commond.h	/^const BYTE REQ_SEND_ACCEL_CHAT  = 64;$/;"	v
REQ_SEPT_AVATAR	tmpcode/commond.h	/^const BYTE REQ_SEPT_AVATAR = 131;$/;"	v
REQ_SEPT_AVATAR_INFO	tmpcode/commond.h	/^const BYTE REQ_SEPT_AVATAR_INFO = 126;$/;"	v
REQ_SEPT_MEMBERLIST_PARA	tmpcode/commond.h	/^const BYTE REQ_SEPT_MEMBERLIST_PARA = 94;$/;"	v
REQ_SEPT_NAME_LIST_PARA	base/Command.h	/^const BYTE REQ_SEPT_NAME_LIST_PARA = 27;$/;"	v
REQ_SEPT_NAME_PARA	base/Command.h	/^const BYTE REQ_SEPT_NAME_PARA = 25;$/;"	v
REQ_SEPT_NAME_PARA	tmpcode/commond.h	/^ const BYTE REQ_SEPT_NAME_PARA = 25;$/;"	v
REQ_SEPT_NOTICE_MANAGER	tmpcode/commond.h	/^const BYTE REQ_SEPT_NOTICE_MANAGER = 99; $/;"	v
REQ_SEPT_PREPARETIME_CHALLENGE_PARA	tmpcode/commond.h	22063;"	d
REQ_SEPT_SORT_PARA	base/Command.h	/^const BYTE REQ_SEPT_SORT_PARA = 18;$/;"	v
REQ_SEPT_SORT_PARA	tmpcode/commond.h	/^const BYTE REQ_SEPT_SORT_PARA = 18;$/;"	v
REQ_SET_TRAFFIC_TAX	tmpcode/commond.h	/^const BYTE REQ_SET_TRAFFIC_TAX = 194;$/;"	v
REQ_SHENLONG_REWARD_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_SHENLONG_REWARD_USERCMD_PARA = 81;$/;"	v
REQ_SHENLONG_THANKS_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_SHENLONG_THANKS_USERCMD_PARA = 84;$/;"	v
REQ_SHOWSKILLSTORE_ADS	tmpcode/commond.h	5627;"	d
REQ_SHOW_MY_RANK_CHAT_PARA	tmpcode/commond.h	6837;"	d
REQ_SOIL_HOUSE_USERCMD	tmpcode/commond.h	/^const BYTE REQ_SOIL_HOUSE_USERCMD = 23;$/;"	v
REQ_SORTLIST_WEEKEND_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE REQ_SORTLIST_WEEKEND_ZHENXUAN_PARA = 14;$/;"	v
REQ_SOUND_TOKEN_PARA	tmpcode/commond.h	/^const BYTE REQ_SOUND_TOKEN_PARA = 1;$/;"	v
REQ_STARTFIREPLACE_USER_CMD	tmpcode/commond.h	/^const BYTE REQ_STARTFIREPLACE_USER_CMD = 43;$/;"	v
REQ_START_COLLECT_PARA	tmpcode/commond.h	/^const BYTE REQ_START_COLLECT_PARA = 82;$/;"	v
REQ_STORAGE_TO_SELL	tmpcode/commond.h	/^const BYTE REQ_STORAGE_TO_SELL = 133;$/;"	v
REQ_STORE_NOTICE_PARA	tmpcode/commond.h	/^const BYTE REQ_STORE_NOTICE_PARA = 146;$/;"	v
REQ_SURE_PUT_CITYQUEST	tmpcode/commond.h	/^const BYTE REQ_SURE_PUT_CITYQUEST = 115;$/;"	v
REQ_SURVEY_CONTENT_PARA	tmpcode/commond.h	/^static const BYTE REQ_SURVEY_CONTENT_PARA	= 4;$/;"	v
REQ_TABLE_LIST_MAP_SCREEN_USERCMD	tmpcode/commond.h	/^const BYTE REQ_TABLE_LIST_MAP_SCREEN_USERCMD = 17;$/;"	v
REQ_TANK_LIST_PARA	tmpcode/commond.h	/^const BYTE REQ_TANK_LIST_PARA = 2;$/;"	v
REQ_TEAM_INFO_LIST_PARA	tmpcode/commond.h	/^const BYTE REQ_TEAM_INFO_LIST_PARA = 5;$/;"	v
REQ_TEAM_INFO_USERCMD_PARA	tmpcode/commond.h	12553;"	d
REQ_TECH_PARA	base/Command.h	5105;"	d
REQ_TITLEINFO_PARA	tmpcode/commond.h	/^const BYTE REQ_TITLEINFO_PARA = 1;$/;"	v
REQ_TOP_KILL_COUNT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_TOP_KILL_COUNT_USERCMD_PARA = 106;$/;"	v
REQ_TOTEM_END_PARA	tmpcode/commond.h	/^const BYTE REQ_TOTEM_END_PARA = 2;$/;"	v
REQ_TOTEM_START_PARA	tmpcode/commond.h	/^const BYTE REQ_TOTEM_START_PARA =1;$/;"	v
REQ_TRANSMIT_HOUSE_USER_CMD	tmpcode/commond.h	/^const  BYTE REQ_TRANSMIT_HOUSE_USER_CMD =  41;$/;"	v
REQ_TRANSPORT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE REQ_TRANSPORT_USERCMD_PARA = 178;$/;"	v
REQ_UNION_ALLY_INFO_PARA	tmpcode/commond.h	13416;"	d
REQ_UNION_ALLY_PARA	tmpcode/commond.h	13363;"	d
REQ_UNION_BUILD	tmpcode/commond.h	/^const BYTE REQ_UNION_BUILD = 49;        $/;"	v
REQ_UNION_DEL_RESIDENT_RESERVE	tmpcode/commond.h	/^const BYTE REQ_UNION_DEL_RESIDENT_RESERVE = 122;$/;"	v
REQ_UNION_HIRE_RESIDENT_RESOURCE	tmpcode/commond.h	/^const BYTE REQ_UNION_HIRE_RESIDENT_RESOURCE = 121;$/;"	v
REQ_UNION_MACKET_INFO	tmpcode/commond.h	/^const BYTE REQ_UNION_MACKET_INFO = 153;$/;"	v
REQ_UNION_MAP_BUILD	tmpcode/commond.h	/^const BYTE REQ_UNION_MAP_BUILD = 47;    $/;"	v
REQ_UNION_MONEY_PARA	base/Command.h	/^const BYTE REQ_UNION_MONEY_PARA = 23;$/;"	v
REQ_UNION_NAME_LIST_PARA	base/Command.h	/^const BYTE REQ_UNION_NAME_LIST_PARA = 29;$/;"	v
REQ_UNION_NAME_PARA	base/Command.h	/^const BYTE REQ_UNION_NAME_PARA = 27;$/;"	v
REQ_UNION_NAME_PARA	tmpcode/commond.h	/^ const BYTE REQ_UNION_NAME_PARA = 27;$/;"	v
REQ_UNION_SELL_RECOND	tmpcode/commond.h	/^const BYTE REQ_UNION_SELL_RECOND = 135;$/;"	v
REQ_UNION_SORT_PARA	base/Command.h	/^const BYTE REQ_UNION_SORT_PARA = 20;$/;"	v
REQ_UNION_SORT_PARA	tmpcode/commond.h	/^const BYTE REQ_UNION_SORT_PARA = 20;$/;"	v
REQ_UNION_STORAGE_SELL_LIST	tmpcode/commond.h	/^const BYTE REQ_UNION_STORAGE_SELL_LIST = 129;$/;"	v
REQ_UNION_TECH_INFO	tmpcode/commond.h	/^const BYTE REQ_UNION_TECH_INFO = 40;$/;"	v
REQ_UNLOCK_CHANGE_ZONE_STATE	base/Command.h	/^const BYTE REQ_UNLOCK_CHANGE_ZONE_STATE = 17;$/;"	v
REQ_USER_BASE_DATA_INFO_CMD	base/Command.h	/^const BYTE REQ_USER_BASE_DATA_INFO_CMD = 47;$/;"	v
REQ_USER_EMOTION_SORT	tmpcode/commond.h	/^const BYTE REQ_USER_EMOTION_SORT = 47;$/;"	v
REQ_USER_PERFORM_AWARD_CMD	tmpcode/commond.h	/^const BYTE REQ_USER_PERFORM_AWARD_CMD = 75;$/;"	v
REQ_USER_PERFORM_CMD	tmpcode/commond.h	/^const BYTE REQ_USER_PERFORM_CMD = 73;$/;"	v
REQ_USER_PERFORM_STATE	tmpcode/commond.h	/^const BYTE REQ_USER_PERFORM_STATE = 76;$/;"	v
REQ_VALID_QUEST_PARA	base/Command.h	/^static const BYTE REQ_VALID_QUEST_PARA = 7;\/\/Ê£ÄÊü•ÂèØ‰ª•Êé•ÁöÑ‰ªªÂä°ÂàóË°®$/;"	v
REQ_VALID_QUEST_PARA	tmpcode/commond.h	/^static const BYTE REQ_VALID_QUEST_PARA = 7;\/\/ºÏ≤Èø…“‘Ω”µƒ»ŒŒÒ¡–±Ì$/;"	v
REQ_WAIT_GEN_PARA	base/Command.h	5597;"	d
REQ_WAIT_OFFICIAL_PARA	base/Command.h	5143;"	d
REQ_WENMINGNC_CONTINUE_PARA	tmpcode/commond.h	/^const BYTE REQ_WENMINGNC_CONTINUE_PARA = 3;$/;"	v
REQ_ZONE_LIST	base/BattleUserCmd.h	/^    const BYTE REQ_ZONE_LIST = 6;$/;"	v
RESET	ScenesServer/zObject.h	175;"	d
RESET_FEED_TIMES_LINGQI_PARA	tmpcode/commond.h	20779;"	d
RESET_SAYHELLO_RECORD_PARA	tmpcode/commond.h	28795;"	d
RESET_TIME_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RESET_TIME_PROPERTY_USERCMD_PARA = 154;$/;"	v
RESET_USEREXP_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  RESET_USEREXP_PROPERTY_USERCMD_PARA =182;$/;"	v
RESIDENT_BATTLE_USERCMD	tmpcode/commond.h	/^const BYTE RESIDENT_BATTLE_USERCMD = 128;$/;"	v
RESIGN_POSITION	tmpcode/commond.h	/^		RESIGN_POSITION	= 2,        \/\/\/ «Î¥«÷∞ŒÒ$/;"	e	enum:POSTIONOP
RESOURCE_DUST	tmpcode/commond.h	/^	RESOURCE_DUST,          \/\/\/ §Õ¡$/;"	e	enum:__anon276
RESOURCE_IRON	tmpcode/commond.h	/^	RESOURCE_IRON,          \/\/\/ Ã˙øÛ$/;"	e	enum:__anon276
RESOURCE_LIST_UNION_PARA	tmpcode/commond.h	/^const BYTE RESOURCE_LIST_UNION_PARA = 148;$/;"	v
RESOURCE_STONE	tmpcode/commond.h	/^	RESOURCE_STONE          \/\/\/  ØÕ∑$/;"	e	enum:__anon276
RESOURCE_TIMBER	tmpcode/commond.h	/^	RESOURCE_TIMBER = 0,    \/\/\/ ƒæ≤ƒ$/;"	e	enum:__anon276
RESPOND_DTS_PARA	tmpcode/commond.h	/^ const BYTE RESPOND_DTS_PARA = 3;$/;"	v
RESPOND_SC_PARA	tmpcode/commond.h	/^const BYTE RESPOND_SC_PARA = 2;$/;"	v
RESPOND_UNION_MEMBER_POWER	base/Command.h	/^  RESPOND_UNION_MEMBER_POWER,\/\/  ËøîÂõûÊüêÂ∏Æ‰ºóÊùÉÈôê$/;"	e	enum:Cmd::__anon106
RESPOND_UNION_MEMBER_POWER	tmpcode/commond.h	/^	RESPOND_UNION_MEMBER_POWER, \/\/  ∑µªÿƒ≥∞Ô÷⁄»®œﬁ$/;"	e	enum:__anon266
RESPONSELANDMASS_MOVE_USERCMD_PARA	base/Command.h	/^const BYTE RESPONSELANDMASS_MOVE_USERCMD_PARA = 31;$/;"	v
RESPONSE_PROPERTY_USERCMD_PARA	base/Command.h	3285;"	d
RESPONSE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	4447;"	d
RESPONTOHELP	tmpcode/commond.h	/^const BYTE RESPONTOHELP = 16;$/;"	v
REST_RESTITUTE_SP	ScenesServer/SceneUser.h	/^      REST_RESTITUTE_SP = 3,\/\/Ëá™Âä®‰ΩìÂäõÊÅ¢Â§ç$/;"	e	enum:SceneUser::__anon187
RESULT_CHECKGOODS_GUARD_PARA	tmpcode/commond.h	/^const BYTE RESULT_CHECKGOODS_GUARD_PARA = 21;$/;"	v
RES_GATHER_FAILED_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE RES_GATHER_FAILED_USERCMD_PARA = 39;$/;"	v
RES_SOILINFO_HOUSE_USERCMD	tmpcode/commond.h	/^const BYTE RES_SOILINFO_HOUSE_USERCMD = 31;$/;"	v
RETIRE_OFFICIAL_PARA	tmpcode/commond.h	/^const BYTE RETIRE_OFFICIAL_PARA = 5;$/;"	v
RETUEN_PASSWORD_STOCKPARA	base/Command.h	7437;"	d
RETUEN_PASSWORD_STOCKPARA	tmpcode/commond.h	23395;"	d
RETURNEXCHANGECARDID_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	5712;"	d
RETURN_ATT_GUARDNPC_USERCMD	tmpcode/commond.h	/^const BYTE RETURN_ATT_GUARDNPC_USERCMD = 13;$/;"	v
RETURN_BARGIRL_ADCONTENT	tmpcode/commond.h	/^const BYTE RETURN_BARGIRL_ADCONTENT = 47;$/;"	v
RETURN_BOUGHT_WEEK_ASSURANCE_PARA	tmpcode/commond.h	/^const BYTE RETURN_BOUGHT_WEEK_ASSURANCE_PARA = 36;$/;"	v
RETURN_CANCEL_LIST_STOCKPARA	base/Command.h	7596;"	d
RETURN_CANCEL_LIST_STOCKPARA	tmpcode/commond.h	23573;"	d
RETURN_CARD_AND_GOLD_PARA	base/Command.h	/^const BYTE RETURN_CARD_AND_GOLD_PARA = 7;$/;"	v
RETURN_CARTOON_PARA	base/Command.h	8227;"	d
RETURN_CITY_GUARD_SORT_PARA	tmpcode/commond.h	/^const BYTE RETURN_CITY_GUARD_SORT_PARA = 14;$/;"	v
RETURN_CLIENT_IP_PARA	base/Command.h	/^const BYTE RETURN_CLIENT_IP_PARA = 16;$/;"	v
RETURN_CLIENT_IP_PARA	tmpcode/commond.h	/^const BYTE RETURN_CLIENT_IP_PARA = 16;$/;"	v
RETURN_CONSUME_CARD_PARA	base/Command.h	/^const BYTE RETURN_CONSUME_CARD_PARA = 12;$/;"	v
RETURN_CONSUME_CARD_PARA	tmpcode/commond.h	/^const BYTE RETURN_CONSUME_CARD_PARA = 12;$/;"	v
RETURN_COUNTRYEVENT_DATA_USERCMD_PARA	tmpcode/commond.h	8144;"	d
RETURN_COUNTRY_POWER_PARA	base/Command.h	5389;"	d
RETURN_COUNTRY_POWER_PARA	tmpcode/commond.h	/^const BYTE RETURN_COUNTRY_POWER_PARA = 43;$/;"	v
RETURN_COUNTRY_SORT_LIST_USERCMD_PARA	tmpcode/commond.h	27219;"	d
RETURN_COUNTRY_STRENGTH_USERCMD_PARA	tmpcode/commond.h	27349;"	d
RETURN_COUNTRY_TRANSPORT_LIMIT_PARA	tmpcode/commond.h	/^const BYTE RETURN_COUNTRY_TRANSPORT_LIMIT_PARA = 64;$/;"	v
RETURN_COUNTR_PASTKING_DATA_USERCMD_PARA	tmpcode/commond.h	8156;"	d
RETURN_CREATE_UNION_ITEM_PARA	base/SessionCommand.h	/^    const BYTE RETURN_CREATE_UNION_ITEM_PARA = 3;$/;"	v
RETURN_DARE_COUNTRY_PARA	base/Command.h	/^const BYTE RETURN_DARE_COUNTRY_PARA = 3;$/;"	v
RETURN_DARE_GOLD	base/SessionCommand.h	/^      RETURN_DARE_GOLD,\/\/ ËøîËøòÊåëÊàòÈáë$/;"	e	enum:Cmd::Session::__anon44
RETURN_DARE_RECORD_PLAN_PARA	base/Command.h	/^const BYTE RETURN_DARE_RECORD_PLAN_PARA =9;$/;"	v
RETURN_DARE_RECORD_RESULT_PARA	base/Command.h	/^const BYTE RETURN_DARE_RECORD_RESULT_PARA = 7;$/;"	v
RETURN_DARE_RECORD_STAT_PARA	base/Command.h	/^const BYTE RETURN_DARE_RECORD_STAT_PARA =8;$/;"	v
RETURN_DAY_FLOWERLIST_PARA	tmpcode/commond.h	/^const BYTE RETURN_DAY_FLOWERLIST_PARA = 186;$/;"	v
RETURN_DELETE_SELECT_USERCMD_PARA	base/Command.h	/^const BYTE RETURN_DELETE_SELECT_USERCMD_PARA = 6;$/;"	v
RETURN_DELETE_SELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RETURN_DELETE_SELECT_USERCMD_PARA = 6;$/;"	v
RETURN_ELEMENT_SHIFT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RETURN_ELEMENT_SHIFT_USERCMD_PARA = 62;$/;"	v
RETURN_EXCHANGE2_GIFTS_PARA	tmpcode/commond.h	/^const BYTE RETURN_EXCHANGE2_GIFTS_PARA = 20;$/;"	v
RETURN_EXCHANGE2_STATE_PARA	tmpcode/commond.h	/^const BYTE RETURN_EXCHANGE2_STATE_PARA = 22;$/;"	v
RETURN_EXCHANGE2_TIME_PARA	tmpcode/commond.h	/^const BYTE RETURN_EXCHANGE2_TIME_PARA = 18;$/;"	v
RETURN_EXCHANGE3_GIFTS_PARA	tmpcode/commond.h	/^const BYTE RETURN_EXCHANGE3_GIFTS_PARA = 27;$/;"	v
RETURN_EXCHANGE3_STATE_PARA	tmpcode/commond.h	/^const BYTE RETURN_EXCHANGE3_STATE_PARA = 29;$/;"	v
RETURN_EXCHANGE3_TIME_PARA	tmpcode/commond.h	/^const BYTE RETURN_EXCHANGE3_TIME_PARA = 25;$/;"	v
RETURN_EXCHANGE4_CONFIG_PARA	tmpcode/commond.h	/^const BYTE RETURN_EXCHANGE4_CONFIG_PARA = 43;$/;"	v
RETURN_EXCHANGE4_STATE_PARA	tmpcode/commond.h	/^const BYTE RETURN_EXCHANGE4_STATE_PARA = 45;$/;"	v
RETURN_EXCHANGE5_CONFIG_PARA	tmpcode/commond.h	/^const BYTE RETURN_EXCHANGE5_CONFIG_PARA = 49;$/;"	v
RETURN_EXCHANGE5_STATE_PARA	tmpcode/commond.h	/^const BYTE RETURN_EXCHANGE5_STATE_PARA = 51;$/;"	v
RETURN_EXCHANGE_GIFT_STATE_PARA	tmpcode/commond.h	/^const BYTE RETURN_EXCHANGE_GIFT_STATE_PARA = 15;$/;"	v
RETURN_EXCHANGE_GOLDCARD_USERCMD	tmpcode/commond.h	/^const BYTE RETURN_EXCHANGE_GOLDCARD_USERCMD =214;$/;"	v
RETURN_FLOWERLIST_PARA	tmpcode/commond.h	/^const BYTE RETURN_FLOWERLIST_PARA = 153;$/;"	v
RETURN_FOCUS_USERCMD	tmpcode/commond.h	21172;"	d
RETURN_FRIEND_HOME_PARA	tmpcode/commond.h	/^const BYTE RETURN_FRIEND_HOME_PARA						= 66;$/;"	v
RETURN_FROM_SERVER_PARA	tmpcode/commond.h	/^const BYTE RETURN_FROM_SERVER_PARA = 2;$/;"	v
RETURN_FUND_STOCKPARA	base/Command.h	7458;"	d
RETURN_FUND_STOCKPARA	tmpcode/commond.h	23417;"	d
RETURN_GOLD_GIVE_USERCMD_PARAMETER	base/Command.h	4154;"	d
RETURN_GOODS_BONUS_INFO_PARA	tmpcode/commond.h	32296;"	d
RETURN_GOODS_WITH_BONUS_PARA	tmpcode/commond.h	32271;"	d
RETURN_HEALTHY_GAME_PARA	tmpcode/commond.h	/^const BYTE RETURN_HEALTHY_GAME_PARA     = 70;   $/;"	v
RETURN_HORSE_DATA_PARA	tmpcode/commond.h	/^const BYTE RETURN_HORSE_DATA_PARA = 27;$/;"	v
RETURN_INTRODUCE_FARM_PARA	tmpcode/commond.h	/^const BYTE RETURN_INTRODUCE_FARM_PARA = 5;$/;"	v
RETURN_MAC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RETURN_MAC_USERCMD_PARA = 55;$/;"	v
RETURN_MECENARYCOUNTRYID_COUNTRY_CMD	tmpcode/commond.h	8124;"	d
RETURN_MERCENERYMANAGER_COUNTRY_CMD	tmpcode/commond.h	30522;"	d
RETURN_MERGESERVER_TEAM_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RETURN_MERGESERVER_TEAM_USERCMD_PARA =192;$/;"	v
RETURN_OPENBOX_USERCMD	tmpcode/commond.h	21126;"	d
RETURN_POINTOPEN_GIFTBAG	tmpcode/commond.h	/^const BYTE RETURN_POINTOPEN_GIFTBAG = 47;$/;"	v
RETURN_PREV_SEAL_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RETURN_PREV_SEAL_MAGIC_USERCMD_PARA = 57;$/;"	v
RETURN_PUT_LIST_STOCKPARA	base/Command.h	7648;"	d
RETURN_PUT_LIST_STOCKPARA	tmpcode/commond.h	23636;"	d
RETURN_QUESTION_JINGLING_ZHIGE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RETURN_QUESTION_JINGLING_ZHIGE_USERCMD_PARA = 63;$/;"	v
RETURN_QUESTION_LINGQI_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RETURN_QUESTION_LINGQI_USERCMD_PARA = 49;$/;"	v
RETURN_QUESTION_OBJECT_USERCMD_PARA	base/Command.h	3634;"	d
RETURN_QUESTION_OBJECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RETURN_QUESTION_OBJECT_USERCMD_PARA = 13;$/;"	v
RETURN_QUEUEU_NUM_USERCMD_PARA	tmpcode/commond.h	22827;"	d
RETURN_REQUEST_FLYSKILL_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RETURN_REQUEST_FLYSKILL_USERCMD_PARA = 80;$/;"	v
RETURN_REQUEST_POINT_PARA	base/Command.h	/^const BYTE RETURN_REQUEST_POINT_PARA = 9;$/;"	v
RETURN_REQUEST_POINT_PARA	tmpcode/commond.h	/^const BYTE RETURN_REQUEST_POINT_PARA = 9;$/;"	v
RETURN_SCORDLIST_LUORI_PARA	tmpcode/commond.h	/^const BYTE RETURN_SCORDLIST_LUORI_PARA = 7;$/;"	v
RETURN_SCORDLIST_WEEKEND_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE RETURN_SCORDLIST_WEEKEND_ZHENXUAN_PARA = 11;$/;"	v
RETURN_SCORDLIST_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE RETURN_SCORDLIST_ZHENXUAN_PARA = 4;$/;"	v
RETURN_SHENYU_INFO_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RETURN_SHENYU_INFO_USERCMD_PARA = 101;$/;"	v
RETURN_SOURCE_ZONE	base/BattleUserCmd.h	/^	RETURN_SOURCE_ZONE,	    \/\/ªÿ‘≠«¯$/;"	e	enum:Cmd::__anon12
RETURN_STRONGWEAK_COUNTRIES_USERCMD_PARA	tmpcode/commond.h	27279;"	d
RETURN_TANK_PARA	tmpcode/commond.h	/^const BYTE RETURN_TANK_PARA = 7;$/;"	v
RETURN_TEAMMEMBER_POSITION_USERCMD_PARA	base/Command.h	3605;"	d
RETURN_TEAMMEMBER_POSITION_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RETURN_TEAMMEMBER_POSITION_USERCMD_PARA = 11;$/;"	v
RETURN_TM_POWER_VALUE_LIST	tmpcode/commond.h	/^const BYTE RETURN_TM_POWER_VALUE_LIST = 82;$/;"	v
RETURN_TRAFFIC_TAXHISTORY	tmpcode/commond.h	/^const BYTE RETURN_TRAFFIC_TAXHISTORY=193;$/;"	v
RETURN_UNION_CITY_TAX	tmpcode/commond.h	/^const BYTE RETURN_UNION_CITY_TAX=109;$/;"	v
RETURN_UNION_CITY_TAXHISTORY	tmpcode/commond.h	/^const BYTE RETURN_UNION_CITY_TAXHISTORY=113;$/;"	v
RETURN_UNION_COUNTRY_TAX	tmpcode/commond.h	/^const BYTE RETURN_UNION_COUNTRY_TAX=111;$/;"	v
RETURN_UNION_MEMBER_INFO_PARA	base/Command.h	/^const BYTE RETURN_UNION_MEMBER_INFO_PARA = 6;$/;"	v
RETURN_UNION_MEMBER_INFO_PARA	tmpcode/commond.h	/^const BYTE RETURN_UNION_MEMBER_INFO_PARA = 6;$/;"	v
RETURN_USER_EMOTION_SORT	tmpcode/commond.h	/^const BYTE RETURN_USER_EMOTION_SORT = 48;$/;"	v
RETURN_VOTE_LIST_PARA	base/Command.h	5535;"	d
RETURN_WEEK_ASSURANCE_CONFIG_PARA	tmpcode/commond.h	/^const BYTE RETURN_WEEK_ASSURANCE_CONFIG_PARA = 34;$/;"	v
RETURN_WEEK_ASSURANCE_DRAW_STATE_PARA	tmpcode/commond.h	/^const BYTE RETURN_WEEK_ASSURANCE_DRAW_STATE_PARA = 38;$/;"	v
RETURN_YUYIN_CHANNEL_PARA	tmpcode/commond.h	/^const BYTE RETURN_YUYIN_CHANNEL_PARA = 4;$/;"	v
RET_32_ATTENTION_PARA	tmpcode/commond.h	/^const BYTE RET_32_ATTENTION_PARA = 29;$/;"	v
RET_32_NAMELIST_PARA	tmpcode/commond.h	/^const BYTE RET_32_NAMELIST_PARA = 2;$/;"	v
RET_ACCEPTED_DAILY_QUEST_PARA	tmpcode/commond.h	/^const BYTE RET_ACCEPTED_DAILY_QUEST_PARA = 6;$/;"	v
RET_AGREEMENT_UNMARRY_PARA	tmpcode/commond.h	/^const BYTE RET_AGREEMENT_UNMARRY_PARA = 26;$/;"	v
RET_ALL_HERO_INFO_CMD	base/HeroCardCmd.h	/^    const BYTE RET_ALL_HERO_INFO_CMD = 16;$/;"	v
RET_ALL_ISSUED_QUEST_PARA	tmpcode/commond.h	/^static const BYTE RET_ALL_ISSUED_QUEST_PARA = 44;  $/;"	v
RET_ALL_VALID_QUEST_PARA	tmpcode/commond.h	/^static const BYTE RET_ALL_VALID_QUEST_PARA = 57;$/;"	v
RET_ALTER_STORAGE_SELL_LIST	tmpcode/commond.h	/^const BYTE RET_ALTER_STORAGE_SELL_LIST = 134;$/;"	v
RET_ALTER_UNION_SELL_PRICE	tmpcode/commond.h	/^const BYTE RET_ALTER_UNION_SELL_PRICE = 138;$/;"	v
RET_ASSIGN_LIFEGUARD_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RET_ASSIGN_LIFEGUARD_USERCMD_PARA = 31;$/;"	v
RET_AVATAR_INFO	tmpcode/commond.h	/^const BYTE RET_AVATAR_INFO = 129;$/;"	v
RET_AWARD_DAILY_QUEST_PARA	tmpcode/commond.h	/^const BYTE RET_AWARD_DAILY_QUEST_PARA = 13;$/;"	v
RET_BALANCE_NOT_ENOUGH	base/UserCommand.h	/^      RET_BALANCE_NOT_ENOUGH = -3,\/\/‰ΩôÈ¢ù‰∏çË∂≥$/;"	e	enum:Cmd::UserServer::__anon149
RET_BATTLE_GAME_RESULT_CMD	base/HeroCardCmd.h	/^    const BYTE RET_BATTLE_GAME_RESULT_CMD = 44;$/;"	v
RET_BET_IN_CHALLENGE_DRAGON_PARA	tmpcode/commond.h	/^const BYTE RET_BET_IN_CHALLENGE_DRAGON_PARA = 23;$/;"	v
RET_BET_IN_COUNTRY_DRAGON_PARA	tmpcode/commond.h	/^const BYTE RET_BET_IN_COUNTRY_DRAGON_PARA = 33;$/;"	v
RET_BOSS_LIST_PARA	tmpcode/commond.h	/^const BYTE RET_BOSS_LIST_PARA					= 92;$/;"	v
RET_BUYGOODS_LIST_BUSINESS_USERCMD	tmpcode/commond.h	/^const BYTE RET_BUYGOODS_LIST_BUSINESS_USERCMD = 5;$/;"	v
RET_CARD_ATTACK_FAIL_USERCMD_PARA	base/HeroCardCmd.h	/^    const BYTE RET_CARD_ATTACK_FAIL_USERCMD_PARA = 46;$/;"	v
RET_CARD_GROUP_LIST_INFO_CMD	base/HeroCardCmd.h	/^    const BYTE RET_CARD_GROUP_LIST_INFO_CMD = 6;$/;"	v
RET_CATCH_END_PARA	tmpcode/commond.h	/^const BYTE RET_CATCH_END_PARA = 2;$/;"	v
RET_CATCH_LINGQI_END_PARA	tmpcode/commond.h	/^const BYTE RET_CATCH_LINGQI_END_PARA = 9;$/;"	v
RET_CHALLENGE_PARA	tmpcode/commond.h	21834;"	d
RET_CHECK_COUNTRY_USERCMD_PARA	base/Command.h	/^const BYTE RET_CHECK_COUNTRY_USERCMD_PARA = 15;$/;"	v
RET_CHECK_COUNTRY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RET_CHECK_COUNTRY_USERCMD_PARA = 15;$/;"	v
RET_CITYDARE_INFO_PARA	tmpcode/commond.h	/^const BYTE RET_CITYDARE_INFO_PARA = 11;$/;"	v
RET_CITYDARE_MP_PARA	tmpcode/commond.h	/^const BYTE RET_CITYDARE_MP_PARA = 6;$/;"	v
RET_CITYDARE_SORT_PARA	tmpcode/commond.h	/^const BYTE RET_CITYDARE_SORT_PARA = 3;$/;"	v
RET_CITYDARE_SUCCESS_PARA	tmpcode/commond.h	/^const BYTE RET_CITYDARE_SUCCESS_PARA = 8;$/;"	v
RET_CITYINFOLIST	tmpcode/commond.h	/^const BYTE RET_CITYINFOLIST = 111;$/;"	v
RET_CITYQUESTLIST	tmpcode/commond.h	/^const BYTE RET_CITYQUESTLIST = 112;$/;"	v
RET_CITYQUEST_GET_LIST	tmpcode/commond.h	/^const BYTE RET_CITYQUEST_GET_LIST = 124;$/;"	v
RET_CITY_FUND_UNION_HISTORY	tmpcode/commond.h	/^const BYTE RET_CITY_FUND_UNION_HISTORY = 178;$/;"	v
RET_CITY_GUARD_INFO	tmpcode/commond.h	/^const BYTE RET_CITY_GUARD_INFO = 5;$/;"	v
RET_CITY_HEART_CONTRIBUTION	tmpcode/commond.h	/^const BYTE RET_CITY_HEART_CONTRIBUTION = 115;$/;"	v
RET_CITY_HEART_STATE	tmpcode/commond.h	/^const BYTE RET_CITY_HEART_STATE = 114;$/;"	v
RET_CITY_MINXIN_REC_PARA	tmpcode/commond.h	/^const BYTE RET_CITY_MINXIN_REC_PARA = 9;$/;"	v
RET_CITY_RELIVE_INFO	tmpcode/commond.h	/^const BYTE RET_CITY_RELIVE_INFO = 3;$/;"	v
RET_CLEAR_CARD_ONE_STATE_CMD	base/HeroCardCmd.h	/^    const BYTE RET_CLEAR_CARD_ONE_STATE_CMD = 42;$/;"	v
RET_COLLECT_LIST_BUSINESS_USERCMD	tmpcode/commond.h	/^const BYTE RET_COLLECT_LIST_BUSINESS_USERCMD = 9;$/;"	v
RET_CONFIRMFEESKILLSTORE	tmpcode/commond.h	5528;"	d
RET_CONSIGN_ISSUED_QUEST_PARA	tmpcode/commond.h	/^static const BYTE RET_CONSIGN_ISSUED_QUEST_PARA = 46;  $/;"	v
RET_COUNTRY_SEPT_NOTICE	tmpcode/commond.h	/^const BYTE RET_COUNTRY_SEPT_NOTICE = 96;$/;"	v
RET_COURSE_OF_KING_PARA	tmpcode/commond.h	/^const BYTE RET_COURSE_OF_KING_PARA = 136;$/;"	v
RET_CREATESEPT_SIGN	tmpcode/commond.h	/^const BYTE RET_CREATESEPT_SIGN = 105;$/;"	v
RET_CREATESEPT_SIGNINFO	tmpcode/commond.h	/^const BYTE RET_CREATESEPT_SIGNINFO = 103;$/;"	v
RET_CREATE_ONE_CARD_GROUP_CMD	base/HeroCardCmd.h	/^    const BYTE RET_CREATE_ONE_CARD_GROUP_CMD = 11;$/;"	v
RET_CRIMINAL_APPLY_INFO	tmpcode/commond.h	/^const BYTE RET_CRIMINAL_APPLY_INFO = 201;$/;"	v
RET_CRIMINAL_LIST_INFO	tmpcode/commond.h	/^const BYTE RET_CRIMINAL_LIST_INFO = 199;$/;"	v
RET_CURRENT_CITY_TAX	tmpcode/commond.h	/^const BYTE RET_CURRENT_CITY_TAX = 115;$/;"	v
RET_DAILY_RANDOM_QUEST_PARA	tmpcode/commond.h	/^const BYTE RET_DAILY_RANDOM_QUEST_PARA = 2;$/;"	v
RET_DAILY_WARNING_QUEST_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RET_DAILY_WARNING_QUEST_USERCMD_PARA = 1;$/;"	v
RET_DANGER_AREA_PARA	tmpcode/commond.h	8084;"	d
RET_DELETE_ONE_CARD_GROUP_CMD	base/HeroCardCmd.h	/^    const BYTE RET_DELETE_ONE_CARD_GROUP_CMD = 13;$/;"	v
RET_END_DIG_TREASURE_PARA	tmpcode/commond.h	/^const BYTE RET_END_DIG_TREASURE_PARA = 4;$/;"	v
RET_ENEMY_HAND_CARD_NUM_CMD	base/HeroCardCmd.h	/^    const BYTE RET_ENEMY_HAND_CARD_NUM_CMD = 37;$/;"	v
RET_FAIL	base/UserCommand.h	/^      RET_FAIL = -1,         \/\/Â§±Ë¥•$/;"	e	enum:Cmd::UserServer::__anon149
RET_FARM_INFO_PARA	tmpcode/commond.h	/^const BYTE RET_FARM_INFO_PARA = 2;$/;"	v
RET_FARM_NOTICE_PARA	tmpcode/commond.h	/^const BYTE RET_FARM_NOTICE_PARA = 10;$/;"	v
RET_FINISH_BUILD_INFO	tmpcode/commond.h	/^const BYTE RET_FINISH_BUILD_INFO = 170;$/;"	v
RET_FIRST_HAND_CARD_CMD	base/HeroCardCmd.h	/^    const BYTE RET_FIRST_HAND_CARD_CMD = 30;$/;"	v
RET_FRIEND_DECAY_HOUSE_PARA	tmpcode/commond.h	/^const BYTE RET_FRIEND_DECAY_HOUSE_PARA = 19;$/;"	v
RET_GEN_COUNTRY_PARA	base/Command.h	5320;"	d
RET_GIFTBAG_CARDS_DATA_CMD	base/HeroCardCmd.h	/^    const BYTE RET_GIFTBAG_CARDS_DATA_CMD = 3;$/;"	v
RET_HERO_FIGHT_MATCH_CMD	base/HeroCardCmd.h	/^    const BYTE RET_HERO_FIGHT_MATCH_CMD = 19;$/;"	v
RET_HERO_INTO_BATTLE_SCENE_CMD	base/HeroCardCmd.h	/^    const BYTE RET_HERO_INTO_BATTLE_SCENE_CMD = 45;$/;"	v
RET_ID_NOT_EXIST	base/UserCommand.h	/^      RET_ID_NOT_EXIST = -2, \/\/Áî®Êà∑‰∏çÂ≠òÂú®$/;"	e	enum:Cmd::UserServer::__anon149
RET_IMAGE_SELECTION_RESULT_TRADE_WITH_NPC	tmpcode/commond.h	24265;"	d
RET_IMAGE_TRADE_WITH_NPC	tmpcode/commond.h	24253;"	d
RET_INFO_ISSUED_QUEST_PARA	tmpcode/commond.h	/^static const BYTE RET_INFO_ISSUED_QUEST_PARA = 41;$/;"	v
RET_JOIN_LTQ_PARA	tmpcode/commond.h	24588;"	d
RET_JOIN_QUESTMAP_PARA	tmpcode/commond.h	18200;"	d
RET_JOIN_SEPT_BATTLE_PARA	tmpcode/commond.h	/^const BYTE RET_JOIN_SEPT_BATTLE_PARA			 = 3;$/;"	v
RET_JOIN_SEPT_POPO_PARA	tmpcode/commond.h	26400;"	d
RET_KILLNUMS_SORTLIST_ZHENXUAN	tmpcode/commond.h	/^const BYTE RET_KILLNUMS_SORTLIST_ZHENXUAN = 20;$/;"	v
RET_LAND_ITEM_PARA	tmpcode/commond.h	/^const BYTE RET_LAND_ITEM_PARA = 4;$/;"	v
RET_LEFT_CARDLIB_NUM_CMD	base/HeroCardCmd.h	/^    const BYTE RET_LEFT_CARDLIB_NUM_CMD = 20;$/;"	v
RET_MAGIC_FORGE_INFO	tmpcode/commond.h	/^const BYTE RET_MAGIC_FORGE_INFO = 165;$/;"	v
RET_MAGIC_FORGE_SOLIDE_INFO	tmpcode/commond.h	/^const BYTE RET_MAGIC_FORGE_SOLIDE_INFO = 218;$/;"	v
RET_MAGIC_POINT_INFO_CMD	base/HeroCardCmd.h	/^    const BYTE RET_MAGIC_POINT_INFO_CMD = 21;$/;"	v
RET_MANAGE_HOUSE_USER_CMD	tmpcode/commond.h	/^const  BYTE RET_MANAGE_HOUSE_USER_CMD = 11;$/;"	v
RET_MARRIAGE_HOLD_PARA	tmpcode/commond.h	/^const BYTE RET_MARRIAGE_HOLD_PARA = 14;                 $/;"	v
RET_MASTER_PERFORM_INFO_CMD	tmpcode/commond.h	/^const BYTE RET_MASTER_PERFORM_INFO_CMD = 125;$/;"	v
RET_MAXLEVEL_ICON_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RET_MAXLEVEL_ICON_DATA_USERCMD_PARA = 8;$/;"	v
RET_MEETMAXGOLD	tmpcode/commond.h	5669;"	d
RET_MERCH_NOTICE_PRICE	tmpcode/commond.h	/^const BYTE RET_MERCH_NOTICE_PRICE = 203;$/;"	v
RET_MOVE_CARD_USERCMD_PARAMETER	base/HeroCardCmd.h	/^    const BYTE RET_MOVE_CARD_USERCMD_PARAMETER = 31;$/;"	v
RET_MSG_UNION_INFO	tmpcode/commond.h	/^const BYTE RET_MSG_UNION_INFO = 214;$/;"	v
RET_NEXT_STATE_MARRY_PARA	tmpcode/commond.h	/^const BYTE RET_NEXT_STATE_MARRY_PARA = 24;$/;"	v
RET_NOTICE_UNION_INFO	tmpcode/commond.h	/^const BYTE RET_NOTICE_UNION_INFO = 192;$/;"	v
RET_NOTIFY_HAND_IS_FULL_CMD	base/HeroCardCmd.h	/^    const BYTE RET_NOTIFY_HAND_IS_FULL_CMD = 32;$/;"	v
RET_NOTIFY_UNFINISHED_GAME_CMD	base/HeroCardCmd.h	/^    const BYTE RET_NOTIFY_UNFINISHED_GAME_CMD = 34;$/;"	v
RET_NOTUSE_GAMEZONE	base/UserCommand.h	/^      RET_NOTUSE_GAMEZONE = -5,\/\/Êú¨ÈÅìÂÖ∑Âç°‰∏çËÉΩÂú®ËØ•Âå∫‰ΩøÁî®$/;"	e	enum:Cmd::UserServer::__anon149
RET_NPCOCCUPIED_BY_SEPT_PARA	tmpcode/commond.h	/^ const BYTE RET_NPCOCCUPIED_BY_SEPT_PARA = 7;$/;"	v
RET_OCCUPIEDNPC_PARA	tmpcode/commond.h	/^const BYTE RET_OCCUPIEDNPC_PARA = 13;$/;"	v
RET_OFFICIAL_PARA	tmpcode/commond.h	/^const BYTE RET_OFFICIAL_PARA = 3;$/;"	v
RET_OK	base/UserCommand.h	/^      RET_OK = 0,             \/\/ÊàêÂäü$/;"	e	enum:Cmd::UserServer::__anon149
RET_ONE_CARD_GROUP_INFO_CMD	base/HeroCardCmd.h	/^    const BYTE RET_ONE_CARD_GROUP_INFO_CMD = 8;$/;"	v
RET_ONE_HERO_INFO_CMD	base/HeroCardCmd.h	/^    const BYTE RET_ONE_HERO_INFO_CMD = 17;$/;"	v
RET_ONE_TANK_PARA	tmpcode/commond.h	/^const BYTE RET_ONE_TANK_PARA = 50;$/;"	v
RET_PCARD_NOT_EXIST	base/UserCommand.h	/^      RET_PCARD_NOT_EXIST = -4,\/\/ÈÅìÂÖ∑Âç°‰∏çÂ≠òÂú®$/;"	e	enum:Cmd::UserServer::__anon149
RET_PCARD_NOT_REUSE	base/UserCommand.h	/^      RET_PCARD_NOT_REUSE = -6,\/\/ÈÅìÂÖ∑Âç°‰∏çËÉΩÈáçÂ§ç‰ΩøÁî®$/;"	e	enum:Cmd::UserServer::__anon149
RET_PERFORM_STATE	tmpcode/commond.h	/^const BYTE RET_PERFORM_STATE = 77;$/;"	v
RET_PICTURE_HELP_USER_CMD	tmpcode/commond.h	/^const BYTE RET_PICTURE_HELP_USER_CMD    = 58;   $/;"	v
RET_PLAYER_LIST_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE RET_PLAYER_LIST_ZHENXUAN_PARA = 25;$/;"	v
RET_POINTSORTLIST_ZHENXUAN	tmpcode/commond.h	/^const BYTE RET_POINTSORTLIST_ZHENXUAN = 15;$/;"	v
RET_POLL_INFO_PARA	tmpcode/commond.h	/^const BYTE RET_POLL_INFO_PARA = 9;$/;"	v
RET_POTENTIAL_SKILL_BUILD_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RET_POTENTIAL_SKILL_BUILD_USERCMD_PARA = 239;$/;"	v
RET_PROMOTER_ADDRESS_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RET_PROMOTER_ADDRESS_USERCMD_PARA = 67;$/;"	v
RET_PROMOTER_RELATION_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE RET_PROMOTER_RELATION_USERCMD_PARA = 68;$/;"	v
RET_PROMOTER_REWARD_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE RET_PROMOTER_REWARD_USERCMD_PARA = 69;$/;"	v
RET_PUT_CITYQUEST	tmpcode/commond.h	/^const BYTE RET_PUT_CITYQUEST = 114;$/;"	v
RET_RANKS_CHAT_PARA	tmpcode/commond.h	6788;"	d
RET_RAPID_SELECT_QUEST_PARA	tmpcode/commond.h	/^const BYTE RET_RAPID_SELECT_QUEST_PARA = 4;$/;"	v
RET_RECALL_MASTER_INFO	tmpcode/commond.h	/^const BYTE RET_RECALL_MASTER_INFO = 119;$/;"	v
RET_REFRESH_BATTLE_PRIVILEGE_CMD	base/HeroCardCmd.h	/^    const BYTE RET_REFRESH_BATTLE_PRIVILEGE_CMD = 24;$/;"	v
RET_REFRESH_BATTLE_STATE_CMD	base/HeroCardCmd.h	/^    const BYTE RET_REFRESH_BATTLE_STATE_CMD = 23;$/;"	v
RET_REFRESH_CARD_ALL_STATE_CMD	base/HeroCardCmd.h	/^    const BYTE RET_REFRESH_CARD_ALL_STATE_CMD = 41;$/;"	v
RET_REMOVE_BATTLE_CARD_USERCMD	base/HeroCardCmd.h	/^    const BYTE RET_REMOVE_BATTLE_CARD_USERCMD = 39;$/;"	v
RET_RENT_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE RET_RENT_HOUSE_USER_CMD = 19;$/;"	v
RET_RESIDENT_DARE_PARA	tmpcode/commond.h	/^const BYTE RET_RESIDENT_DARE_PARA = 4;$/;"	v
RET_RESIDENT_INFO_PARA	tmpcode/commond.h	/^const BYTE RET_RESIDENT_INFO_PARA = 6;$/;"	v
RET_RESOURCE_PROCESS_UNION_PARA	tmpcode/commond.h	/^const BYTE RET_RESOURCE_PROCESS_UNION_PARA = 150;$/;"	v
RET_ROOMERNAME_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE RET_ROOMERNAME_HOUSE_USER_CMD = 22;$/;"	v
RET_SALEGOODS_LIST_BUSINESS_USERCMD	tmpcode/commond.h	/^const BYTE RET_SALEGOODS_LIST_BUSINESS_USERCMD = 6;$/;"	v
RET_SAVE_ONE_CARD_GROUP_CMD	base/HeroCardCmd.h	/^    const BYTE RET_SAVE_ONE_CARD_GROUP_CMD = 14;$/;"	v
RET_SCARD_ERR	base/UserCommand.h	/^      RET_SCARD_ERR = -7,     \/\/‰∏ìÂå∫Âç°Âç°Âè∑ÈîôËØØ$/;"	e	enum:Cmd::UserServer::__anon149
RET_SCARD_PASSWD_ERR	base/UserCommand.h	/^      RET_SCARD_PASSWD_ERR          \/\/‰∏ìÂå∫Âç°ÂØÜÁ†ÅÈîôËØØ$/;"	e	enum:Cmd::UserServer::__anon149
RET_SCENEUSER_PK_GAME_PARA	base/SessionCommand.h	/^    const BYTE RET_SCENEUSER_PK_GAME_PARA = 6;$/;"	v
RET_SCORE_32_WINNER_PARA	tmpcode/commond.h	/^const BYTE RET_SCORE_32_WINNER_PARA = 3;$/;"	v
RET_SECPASSWORD_SELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RET_SECPASSWORD_SELECT_USERCMD_PARA = 10;$/;"	v
RET_SEPTTEAM_CHALLENGE_PARA	tmpcode/commond.h	22008;"	d
RET_SEPTTEAM_DEATH_CHALLENGE_PARA	tmpcode/commond.h	22026;"	d
RET_SEPT_AVATAR	tmpcode/commond.h	/^const BYTE RET_SEPT_AVATAR = 132;$/;"	v
RET_SEPT_AVATAR_INFO	tmpcode/commond.h	/^const BYTE RET_SEPT_AVATAR_INFO = 127;$/;"	v
RET_SEPT_AVATAR_SUCESS	tmpcode/commond.h	/^const BYTE RET_SEPT_AVATAR_SUCESS = 133;$/;"	v
RET_SEPT_RENT_STORE_CMD	tmpcode/commond.h	/^const BYTE RET_SEPT_RENT_STORE_CMD = 136;$/;"	v
RET_SEQKILL_SORTLIST_ZHENXUAN	tmpcode/commond.h	/^const BYTE RET_SEQKILL_SORTLIST_ZHENXUAN = 16;$/;"	v
RET_SET_CARD_ONE_STATE_CMD	base/HeroCardCmd.h	/^    const BYTE RET_SET_CARD_ONE_STATE_CMD = 43;$/;"	v
RET_SET_NEW_NUMPASSWD_PARA	tmpcode/commond.h	28955;"	d
RET_SET_SAFETY_DETAIL_PARA	tmpcode/commond.h	29074;"	d
RET_SET_TEMP_UNSAFETY_PARA	tmpcode/commond.h	28996;"	d
RET_SHOWSKILLSTORE_INFO	tmpcode/commond.h	5604;"	d
RET_START_DIG_TREASURE_PARA	tmpcode/commond.h	/^const BYTE RET_START_DIG_TREASURE_PARA = 1;$/;"	v
RET_STATUE_HP_PARA	tmpcode/commond.h	/^const BYTE RET_STATUE_HP_PARA = 2;$/;"	v
RET_STORE_NOTICE_PARA	tmpcode/commond.h	/^const BYTE RET_STORE_NOTICE_PARA = 145;$/;"	v
RET_SURVEY_CONTENT_PARA	tmpcode/commond.h	/^static const BYTE RET_SURVEY_CONTENT_PARA = 5;$/;"	v
RET_TANK_LIST_PARA	tmpcode/commond.h	/^const BYTE RET_TANK_LIST_PARA = 3;$/;"	v
RET_TEAM_INFO_USERCMD_PARA	tmpcode/commond.h	12579;"	d
RET_TEAM_INFO_USERCMD_PARA	tmpcode/commond.h	12600;"	d
RET_TITLEINFO_PARA	tmpcode/commond.h	/^const BYTE RET_TITLEINFO_PARA = 2;$/;"	v
RET_TRAFFIC_INFO_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RET_TRAFFIC_INFO_USERCMD_PARA = 177;$/;"	v
RET_UNION_AND_PRO_INFO	tmpcode/commond.h	/^const BYTE RET_UNION_AND_PRO_INFO = 124;$/;"	v
RET_UNION_BUILD_INFO	tmpcode/commond.h	/^const BYTE RET_UNION_BUILD_INFO = 117;$/;"	v
RET_UNION_BUSINESS_INFO	tmpcode/commond.h	/^const BYTE RET_UNION_BUSINESS_INFO = 154;$/;"	v
RET_UNION_INFO	tmpcode/commond.h	/^const BYTE RET_UNION_INFO = 118;$/;"	v
RET_UNION_NEED_BUILD_PRO_PARA	tmpcode/commond.h	/^const BYTE RET_UNION_NEED_BUILD_PRO_PARA = 127;$/;"	v
RET_UNION_PRO_STATE_PARA	tmpcode/commond.h	/^const BYTE RET_UNION_PRO_STATE_PARA = 126;$/;"	v
RET_UNION_RESIDENT_HIRE_MONEY_FAIL	tmpcode/commond.h	/^const BYTE RET_UNION_RESIDENT_HIRE_MONEY_FAIL = 139;$/;"	v
RET_UNION_SELL_LIST	tmpcode/commond.h	/^const BYTE RET_UNION_SELL_LIST = 131;$/;"	v
RET_UNION_SELL_RECOND	tmpcode/commond.h	/^const BYTE RET_UNION_SELL_RECOND = 136;$/;"	v
RET_UNION_STORAGE_LIST	tmpcode/commond.h	/^const BYTE RET_UNION_STORAGE_LIST = 130;$/;"	v
RET_UNION_TECH_INFO	tmpcode/commond.h	/^const BYTE RET_UNION_TECH_INFO = 41;$/;"	v
RET_UNLOCK_CHANGE_ZONE_STATE	base/Command.h	/^const BYTE RET_UNLOCK_CHANGE_ZONE_STATE = 18;$/;"	v
RET_USER_PERFORM_INFO_CMD	tmpcode/commond.h	/^const BYTE RET_USER_PERFORM_INFO_CMD = 74;$/;"	v
RET_VALID_QUEST_PARA	base/Command.h	/^static const BYTE RET_VALID_QUEST_PARA = 8;\/\/ËøîÂõûÂèØ‰ª•Êé•ÁöÑ‰ªªÂä°ÂàóË°®$/;"	v
RET_VALID_QUEST_PARA	tmpcode/commond.h	/^static const BYTE RET_VALID_QUEST_PARA = 8;\/\/∑µªÿø…“‘Ω”µƒ»ŒŒÒ¡–±Ì$/;"	v
RET_VISIT_RESIDENT_TOWER	tmpcode/commond.h	/^const BYTE RET_VISIT_RESIDENT_TOWER = 207;$/;"	v
RET_VOTE_IN_CHALLENGE_DRAGON_PARA	tmpcode/commond.h	/^const BYTE RET_VOTE_IN_CHALLENGE_DRAGON_PARA = 28;$/;"	v
RET_VOTE_RECORED_DRAGON_PARA	tmpcode/commond.h	/^const BYTE RET_VOTE_RECORED_DRAGON_PARA = 30;$/;"	v
RET_WATCH_DRAGON_DATA_PARA	tmpcode/commond.h	/^const BYTE RET_WATCH_DRAGON_DATA_PARA = 11;$/;"	v
REWARD_TYPE_MOON_1	tmpcode/commond.h	/^    REWARD_TYPE_MOON_1 = 4,  \/\/…˝‘¬$/;"	e	enum:__anon214
REWARD_TYPE_MOON_2	tmpcode/commond.h	/^    REWARD_TYPE_MOON_2 = 5  \/\/…˝∞µ‘¬$/;"	e	enum:__anon214
REWARD_TYPE_STAR_1	tmpcode/commond.h	/^    REWARD_TYPE_STAR_1 = 1,  \/\/…˝–«$/;"	e	enum:__anon214
REWARD_TYPE_STAR_2	tmpcode/commond.h	/^    REWARD_TYPE_STAR_2 = 2,  \/\/…˝∞µ–«$/;"	e	enum:__anon214
REWARD_TYPE_STAR_3	tmpcode/commond.h	/^    REWARD_TYPE_STAR_3 = 3,  \/\/±£–«$/;"	e	enum:__anon214
RIDE_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE RIDE_MAPSCREEN_USERCMD_PARA = 13;$/;"	v
RIDE_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RIDE_MAPSCREEN_USERCMD_PARA = 13;$/;"	v
RIDE_TANK_DATA_TANK_PARA	tmpcode/commond.h	/^const BYTE RIDE_TANK_DATA_TANK_PARA = 17;$/;"	v
RIGHT_PACK	ScenesServer/zObject.h	/^      RIGHT_PACK = 4,$/;"	e	enum:Packages::__anon178
RIGHT_PACK	base/Object.h	/^	RIGHT_PACK = 4, \/\/◊∞±∏∞¸π¸µƒ◊”∞¸π¸$/;"	e	enum:__anon54
RINGL	ScenesServer/zObject.h	/^      RINGL,$/;"	e	enum:EquipPack::EQUIPNO
RINGR	ScenesServer/zObject.h	/^      RINGR,$/;"	e	enum:EquipPack::EQUIPNO
RMB_CHUI_CHENG_JUAN_ZHOU_MAX	tmpcode/commond.h	/^const WORD RMB_CHUI_CHENG_JUAN_ZHOU_MAX = 24919;\/\/rmbªÿ≥«æÌ÷·£¨ø…—°≥« –$/;"	v
RMB_CHUI_CHENG_JUAN_ZHOU_MIN	tmpcode/commond.h	/^const WORD RMB_CHUI_CHENG_JUAN_ZHOU_MIN = 24916;\/\/rmbªÿ≥«æÌ÷·£¨ø…—°≥« –$/;"	v
RM_PACK	ScenesServer/zObject.h	/^      RM_PACK = 64,$/;"	e	enum:Packages::__anon178
RM_PACK	base/Object.h	/^	RM_PACK = 64,$/;"	e	enum:__anon54
ROLEREG_STATE_CLEAN	base/RoleregCommand.h	/^    const WORD ROLEREG_STATE_CLEAN    = 4;  \/\/Ê∏ÖÈô§$/;"	v
ROLEREG_STATE_CLEAN	base/SuperCommand.h	/^    const WORD ROLEREG_STATE_CLEAN    = 4;  \/\/Ê∏ÖÈô§$/;"	v
ROLEREG_STATE_CLEAN	roleRegServer/RoleregCommand.h	/^    const WORD ROLEREG_STATE_CLEAN    = 4;  \/\/Ê∏ÖÈô§$/;"	v
ROLEREG_STATE_HAS	base/RoleregCommand.h	/^    const WORD ROLEREG_STATE_HAS    = 8;  \/\/ÊµãËØïÊúâ$/;"	v
ROLEREG_STATE_HAS	base/SuperCommand.h	/^    const WORD ROLEREG_STATE_HAS    = 8;  \/\/ÊµãËØïÊúâ$/;"	v
ROLEREG_STATE_HAS	roleRegServer/RoleregCommand.h	/^    const WORD ROLEREG_STATE_HAS    = 8;  \/\/ÊµãËØïÊúâ$/;"	v
ROLEREG_STATE_OK	base/RoleregCommand.h	/^    const WORD ROLEREG_STATE_OK      = 16;  \/\/Ê∏ÖÈô§ÊàñÂõûÂÜôÊàêÂäü$/;"	v
ROLEREG_STATE_OK	base/SuperCommand.h	/^    const WORD ROLEREG_STATE_OK      = 16;  \/\/Ê∏ÖÈô§ÊàñÂõûÂÜôÊàêÂäü$/;"	v
ROLEREG_STATE_OK	roleRegServer/RoleregCommand.h	/^    const WORD ROLEREG_STATE_OK      = 16;  \/\/Ê∏ÖÈô§ÊàñÂõûÂÜôÊàêÂäü$/;"	v
ROLEREG_STATE_TEST	base/RoleregCommand.h	/^    const WORD ROLEREG_STATE_TEST    = 1;  \/\/ÊµãËØï$/;"	v
ROLEREG_STATE_TEST	base/SuperCommand.h	/^    const WORD ROLEREG_STATE_TEST    = 1;  \/\/ÊµãËØï$/;"	v
ROLEREG_STATE_TEST	roleRegServer/RoleregCommand.h	/^    const WORD ROLEREG_STATE_TEST    = 1;  \/\/ÊµãËØï$/;"	v
ROLEREG_STATE_WRITE	base/RoleregCommand.h	/^    const WORD ROLEREG_STATE_WRITE    = 2;  \/\/ÂõûÂÜô$/;"	v
ROLEREG_STATE_WRITE	base/SuperCommand.h	/^    const WORD ROLEREG_STATE_WRITE    = 2;  \/\/ÂõûÂÜô$/;"	v
ROLEREG_STATE_WRITE	roleRegServer/RoleregCommand.h	/^    const WORD ROLEREG_STATE_WRITE    = 2;  \/\/ÂõûÂÜô$/;"	v
ROLE_REG_WITHID	base/RoleregCommand.h	/^	ROLE_REG_WITHID = 1,$/;"	e	enum:Cmd::RoleReg::__anon52
ROLE_REG_WITHID	roleRegServer/RoleregCommand.h	/^	ROLE_REG_WITHID = 1,$/;"	e	enum:Cmd::RoleReg::__anon204
ROOMDETAIL_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE ROOMDETAIL_QUESTROOM_PARA = 12;$/;"	v
ROOMINFO_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE ROOMINFO_QUESTROOM_PARA = 9;$/;"	v
ROTATE	base/EncDec/EncDec.h	123;"	d
ROTATE	base/EncDec/mydes.h	24;"	d
ROTATE_LEFT	base/EncDec/EncDec.cpp	43;"	d
ROTATE_l32	base/EncDec/EncDec.h	63;"	d
ROTATE_l32	base/EncDec/myrc5.h	51;"	d
ROTATE_r32	base/EncDec/EncDec.h	64;"	d
ROTATE_r32	base/EncDec/myrc5.h	52;"	d
ROUTI_CHONG_ZHANG_RUSH	tmpcode/commond.h	/^	ROUTI_CHONG_ZHANG_RUSH = 1109,\/\/»‚ÃÂ≥Â◊≤$/;"	e	enum:__anon205
RQ_ACHIEVEMENT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RQ_ACHIEVEMENT_USERCMD_PARA = 156;$/;"	v
RQ_AUTO_CFG_HAPPY_CARD_BOX_PARA	tmpcode/commond.h	/^const BYTE RQ_AUTO_CFG_HAPPY_CARD_BOX_PARA = 11;$/;"	v
RQ_BLESSLIST_PARA	tmpcode/commond.h	/^const BYTE RQ_BLESSLIST_PARA = 161;$/;"	v
RQ_DEVELOP_UPDATE_PARA	tmpcode/commond.h	/^const BYTE RQ_DEVELOP_UPDATE_PARA = 164;$/;"	v
RQ_DRAW_CARD_HAPPY_CARD_BOX_PARA	tmpcode/commond.h	/^const BYTE RQ_DRAW_CARD_HAPPY_CARD_BOX_PARA = 7;$/;"	v
RQ_EQUIP_SORT_LIST_PARA	tmpcode/commond.h	/^const BYTE RQ_EQUIP_SORT_LIST_PARA = 179;$/;"	v
RQ_GET_BLESS_REWARD_PARA	tmpcode/commond.h	/^const BYTE RQ_GET_BLESS_REWARD_PARA = 163;                              $/;"	v
RQ_GET_REWARD_HAPPY_CARD_BOX_PARA	tmpcode/commond.h	/^const BYTE RQ_GET_REWARD_HAPPY_CARD_BOX_PARA = 6;$/;"	v
RQ_GET_TEMP_REWARD_PARA	tmpcode/commond.h	/^const BYTE RQ_GET_TEMP_REWARD_PARA = 190;$/;"	v
RQ_PROMOTER_INFO_PARA	tmpcode/commond.h	/^const BYTE RQ_PROMOTER_INFO_PARA = 165;$/;"	v
RQ_REFRESH_HAPPY_CARD_BOX_PARA	tmpcode/commond.h	/^const BYTE RQ_REFRESH_HAPPY_CARD_BOX_PARA = 5;$/;"	v
RQ_REG_EQUIP_SORT_LIST_PARA	tmpcode/commond.h	/^const BYTE RQ_REG_EQUIP_SORT_LIST_PARA = 180;$/;"	v
RQ_ST_CLOSE_HAPPY_CARD_BOX_PARA	tmpcode/commond.h	/^const BYTE RQ_ST_CLOSE_HAPPY_CARD_BOX_PARA = 8;$/;"	v
RQ_TAKE_CARE_SHEMU_COUNTRY_CMD	tmpcode/commond.h	30397;"	d
RQ_TEMPLIST_PARA	tmpcode/commond.h	/^const BYTE RQ_TEMPLIST_PARA = 188;$/;"	v
RST_CUR_ACHIEVEMENT_HONOR_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RST_CUR_ACHIEVEMENT_HONOR_USERCMD_PARA = 158;$/;"	v
RTMAGIC_ATTACKED	base/Command.h	/^  RTMAGIC_ATTACKED,\/\/\/ Ë¢´Âáª$/;"	e	enum:Cmd::__anon81
RTMAGIC_ATTACKED	tmpcode/commond.h	/^	RTMAGIC_ATTACKED,               \/\/\/ ±ªª˜$/;"	e	enum:__anon250
RTMAGIC_ATTACKFLY	tmpcode/commond.h	/^	RTMAGIC_ATTACKFLY,              \/\/\/ ‹µΩ…Ò •“ªª˜£¨ª˜∑…$/;"	e	enum:__anon250
RTMAGIC_ATTACKFLY_Client	tmpcode/commond.h	/^	RTMAGIC_ATTACKFLY_Client,		\/\/\/ª˜∑…---øÕªß∂ÀµƒÀ¿Õˆª˜∑…$/;"	e	enum:__anon250
RTMAGIC_BACKFACE	tmpcode/commond.h	/^	RTMAGIC_BACKFACE,               \/\/\/ ‹µΩ±©ª˜£¨∫Û—ˆ$/;"	e	enum:__anon250
RTMAGIC_BLANKSCREEN	base/Command.h	/^  RTMAGIC_BLANKSCREEN,\/\/\/ ÈªëÂ±è$/;"	e	enum:Cmd::__anon81
RTMAGIC_BLANKSCREEN	tmpcode/commond.h	/^	RTMAGIC_BLANKSCREEN,    \/\/\/ ∫⁄∆¡$/;"	e	enum:__anon250
RTMAGIC_DEFENCE	base/Command.h	/^  RTMAGIC_DEFENCE      \/\/\/ Ê†ºÊå°$/;"	e	enum:Cmd::__anon81
RTMAGIC_DEFENCE	tmpcode/commond.h	/^	RTMAGIC_DEFENCE,              \/\/\/ ∏Òµ≤$/;"	e	enum:__anon250
RTMAGIC_DINGZHUI	tmpcode/commond.h	/^	RTMAGIC_DINGZHUI,\/\/∂®◊Ô$/;"	e	enum:__anon250
RTMAGIC_DUCK	base/Command.h	/^  RTMAGIC_DUCK,\/\/\/ Èò≤Âæ°Èó™ÈÅø$/;"	e	enum:Cmd::__anon81
RTMAGIC_DUCK	tmpcode/commond.h	/^	RTMAGIC_DUCK,                   \/\/\/ ∑¿”˘…¡±‹$/;"	e	enum:__anon250
RTMAGIC_FAILURE	base/Command.h	/^  RTMAGIC_FAILURE,\/\/\/ ÊîªÂáªÂ§±Ë¥•$/;"	e	enum:Cmd::__anon81
RTMAGIC_FAILURE	tmpcode/commond.h	/^	RTMAGIC_FAILURE,                \/\/\/ π•ª˜ ß∞‹$/;"	e	enum:__anon250
RTMAGIC_FREEZE	base/Command.h	/^  RTMAGIC_FREEZE,\/\/\/ ÂÜ∞ÂÜª$/;"	e	enum:Cmd::__anon81
RTMAGIC_FREEZE	tmpcode/commond.h	/^	RTMAGIC_FREEZE,                 \/\/\/ ±˘∂≥$/;"	e	enum:__anon250
RTMAGIC_HIDE	base/Command.h	/^  RTMAGIC_HIDE,\/\/\/ ÈöêË∫´$/;"	e	enum:Cmd::__anon81
RTMAGIC_HIDE	tmpcode/commond.h	/^	RTMAGIC_HIDE,                   \/\/\/ “˛…Ì$/;"	e	enum:__anon250
RTMAGIC_IGNOREBANG	tmpcode/commond.h	/^	RTMAGIC_IGNOREBANG,             \/\/\/∑¿±©ª˜$/;"	e	enum:__anon250
RTMAGIC_IGNOREDEF	tmpcode/commond.h	/^	RTMAGIC_IGNOREDEF,              \/\/\/∫ˆ ”∑¿”˘$/;"	e	enum:__anon250
RTMAGIC_LANDIFICATION	base/Command.h	/^  RTMAGIC_LANDIFICATION,\/\/\/ Áü≥Âåñ$/;"	e	enum:Cmd::__anon81
RTMAGIC_LANDIFICATION	tmpcode/commond.h	/^	RTMAGIC_LANDIFICATION,  \/\/\/  ØªØ$/;"	e	enum:__anon250
RTMAGIC_LIAN_JI	tmpcode/commond.h	/^	RTMAGIC_LIAN_JI,\/\/¡¨ª˜-’Á—°»¸$/;"	e	enum:__anon250
RTMAGIC_MAGICBANG	tmpcode/commond.h	/^	RTMAGIC_MAGICBANG,              \/\/\/ƒß∑®±©ª˜$/;"	e	enum:__anon250
RTMAGIC_MAGICCHONGBAO	tmpcode/commond.h	/^	RTMAGIC_MAGICCHONGBAO,          \/\/\/ƒß∑®◊ø‘Ω“ªª˜$/;"	e	enum:__anon250
RTMAGIC_MAGICTOP	tmpcode/commond.h	/^	RTMAGIC_MAGICTOP,               \/\/\/ƒß∑®…Ò •“ªª˜$/;"	e	enum:__anon250
RTMAGIC_MIAN_YI_Client	tmpcode/commond.h	/^	RTMAGIC_MIAN_YI_Client,			\/\/√‚“ﬂ--øÕªß∂À$/;"	e	enum:__anon250
RTMAGIC_NOBREAKDEFENCE	tmpcode/commond.h	/^	RTMAGIC_NOBREAKDEFENCE,         \/\/\/≤ª∆∆∑¿$/;"	e	enum:__anon250
RTMAGIC_NORMALMAGICAL	tmpcode/commond.h	/^	RTMAGIC_NORMALMAGICAL,          \/\/\/∆’Õ®ƒß∑®π•ª˜$/;"	e	enum:__anon250
RTMAGIC_NORMALPHYSICS	tmpcode/commond.h	/^	RTMAGIC_NORMALPHYSICS,          \/\/\/∆’Õ®ŒÔ¿Ìπ•ª˜$/;"	e	enum:__anon250
RTMAGIC_PHYSICALBANG	tmpcode/commond.h	/^	RTMAGIC_PHYSICALBANG,           \/\/\/ŒÔ¿Ì±©ª˜$/;"	e	enum:__anon250
RTMAGIC_PHYSICALCHONGBAO	tmpcode/commond.h	/^	RTMAGIC_PHYSICALCHONGBAO,       \/\/\/ŒÔ¿Ì◊ø‘Ω“ªª˜$/;"	e	enum:__anon250
RTMAGIC_PHYSICALTOP	tmpcode/commond.h	/^	RTMAGIC_PHYSICALTOP,            \/\/\/ŒÔ¿Ì…Ò •“ªª˜$/;"	e	enum:__anon250
RTMAGIC_PLAGUE	base/Command.h	/^  RTMAGIC_PLAGUE,\/\/\/ ÁòüÁñ´$/;"	e	enum:Cmd::__anon81
RTMAGIC_PLAGUE	tmpcode/commond.h	/^	RTMAGIC_PLAGUE,                 \/\/\/ Œ¡“ﬂ$/;"	e	enum:__anon250
RTMAGIC_POISON	base/Command.h	/^  RTMAGIC_POISON,\/\/\/ ‰∏≠ÊØí$/;"	e	enum:Cmd::__anon81
RTMAGIC_POISON	tmpcode/commond.h	/^	RTMAGIC_POISON,                 \/\/\/ ÷–∂æ$/;"	e	enum:__anon250
RTMAGIC_POS_USERCMD_PARA	base/Command.h	/^const BYTE RTMAGIC_POS_USERCMD_PARA  = 12;$/;"	v
RTMAGIC_SPEEDUP	base/Command.h	/^  RTMAGIC_SPEEDUP,\/\/\/ Âä†ÈÄü$/;"	e	enum:Cmd::__anon81
RTMAGIC_SPEEDUP	tmpcode/commond.h	/^	RTMAGIC_SPEEDUP,                \/\/\/ º”ÀŸ$/;"	e	enum:__anon250
RTMAGIC_SUCCESS	base/Command.h	/^  RTMAGIC_SUCCESS,\/\/\/ ÊîªÂáªÊàêÂäü$/;"	e	enum:Cmd::__anon81
RTMAGIC_SUCCESS	tmpcode/commond.h	/^	RTMAGIC_SUCCESS,                \/\/\/ π•ª˜≥…π¶$/;"	e	enum:__anon250
RTMAGIC_TISHENGZHIYING	tmpcode/commond.h	/^	RTMAGIC_TISHENGZHIYING,\/\/ÃÊ…Ì÷Æ”∞$/;"	e	enum:__anon250
RTMAGIC_TUMBLE	tmpcode/commond.h	/^	RTMAGIC_TUMBLE,                 \/\/\/ ‹µΩ◊ø‘Ω“ªª˜£¨µ¯µπ$/;"	e	enum:__anon250
RTMAGIC_USERCMD_PARA	base/Command.h	/^const BYTE RTMAGIC_USERCMD_PARA = 6;$/;"	v
RTMAGIC_VAMPIRE	base/Command.h	/^  RTMAGIC_VAMPIRE,\/\/\/ Âê∏Ë°Ä$/;"	e	enum:Cmd::__anon81
RTMAGIC_VAMPIRE	tmpcode/commond.h	/^	RTMAGIC_VAMPIRE,                \/\/\/ Œ¸—™$/;"	e	enum:__anon250
RTMAGIC_VAMPIREMAGIC	base/Command.h	/^  RTMAGIC_VAMPIREMAGIC,\/\/\/ Âê∏È≠î$/;"	e	enum:Cmd::__anon81
RTMAGIC_VAMPIREMAGIC	tmpcode/commond.h	/^	RTMAGIC_VAMPIREMAGIC,   \/\/\/ Œ¸ƒß$/;"	e	enum:__anon250
RTMAGIC_ZHICAI	tmpcode/commond.h	/^	RTMAGIC_ZHICAI,\/\/÷∆≤√$/;"	e	enum:__anon250
RTN_ARMY_LIST_PARA	base/Command.h	5675;"	d
RTN_ARMY_SPEC_PARA	base/Command.h	5708;"	d
RTN_CANCEL_UNION_ALLY_INFO	tmpcode/commond.h	13465;"	d
RTN_CITY_OWNER_LIST_PARA	base/Command.h	5450;"	d
RTN_COUNTRY_ALLY_INFO_PARA	base/Command.h	9063;"	d
RTN_ENTER_BATTLE_PARA	base/BattleUserCmd.h	/^    const BYTE RTN_ENTER_BATTLE_PARA = 3;$/;"	v
RTN_GRECOMMENDED_BOUNTY_PARA	tmpcode/commond.h	28769;"	d
RTN_GRECOMMEND_BOUNTY_PARA	tmpcode/commond.h	28757;"	d
RTN_GRECOMMEND_RELATION_PARA	tmpcode/commond.h	28745;"	d
RTN_KING_LIST_PARA	base/Command.h	5427;"	d
RTN_NPC_OWNER_LIST_PARA	base/Command.h	5476;"	d
RTN_RECOMMENDED_BOUNTY_PARA	base/Command.h	9164;"	d
RTN_RECOMMEND_BOUNTY_PARA	base/Command.h	9146;"	d
RTN_SEPT_NAME_LIST_PARA	base/Command.h	/^const BYTE RTN_SEPT_NAME_LIST_PARA = 28;$/;"	v
RTN_SEPT_NAME_PARA	base/Command.h	/^const BYTE RTN_SEPT_NAME_PARA = 26;$/;"	v
RTN_SEPT_NAME_PARA	tmpcode/commond.h	/^ const BYTE RTN_SEPT_NAME_PARA = 26;$/;"	v
RTN_SEPT_SORT_PARA	base/Command.h	/^const BYTE RTN_SEPT_SORT_PARA = 19;$/;"	v
RTN_SEPT_SORT_PARA	tmpcode/commond.h	/^const BYTE RTN_SEPT_SORT_PARA = 19;$/;"	v
RTN_SOUND_TOKEN_PARA	tmpcode/commond.h	/^const BYTE RTN_SOUND_TOKEN_PARA = 2;$/;"	v
RTN_SPONSER_AWARD_PARA	tmpcode/commond.h	/^const BYTE RTN_SPONSER_AWARD_PARA = 4;$/;"	v
RTN_TECH_PARA	base/Command.h	5127;"	d
RTN_UNION_ALLY_INFO_PARA	tmpcode/commond.h	13442;"	d
RTN_UNION_NAME_LIST_PARA	base/Command.h	/^const BYTE RTN_UNION_NAME_LIST_PARA = 30;$/;"	v
RTN_UNION_NAME_PARA	base/Command.h	/^const BYTE RTN_UNION_NAME_PARA = 28;$/;"	v
RTN_UNION_NAME_PARA	tmpcode/commond.h	/^ const BYTE RTN_UNION_NAME_PARA = 28;$/;"	v
RTN_UNION_SORT_PARA	base/Command.h	/^const BYTE RTN_UNION_SORT_PARA = 21;$/;"	v
RTN_UNION_SORT_PARA	tmpcode/commond.h	/^const BYTE RTN_UNION_SORT_PARA = 21;$/;"	v
RTN_WAIT_GEN_PARA	base/Command.h	5613;"	d
RTN_WAIT_OFFICIAL_PARA	base/Command.h	5159;"	d
RTN_ZONE_LIST	base/BattleUserCmd.h	/^    const BYTE RTN_ZONE_LIST = 7;$/;"	v
RT_ACHIEVEMENTITEM_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RT_ACHIEVEMENTITEM_USERCMD_PARA = 191;$/;"	v
RT_ACHIEVEMENT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RT_ACHIEVEMENT_USERCMD_PARA = 157;$/;"	v
RT_ALL_FLOWER_HOUSE_USER_CMD	tmpcode/commond.h	/^const  BYTE RT_ALL_FLOWER_HOUSE_USER_CMD = 49;$/;"	v
RT_AREA_DATA_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE RT_AREA_DATA_HOUSE_USER_CMD = 2;$/;"	v
RT_BLESSLIST_PARA	tmpcode/commond.h	/^const BYTE RT_BLESSLIST_PARA = 162;$/;"	v
RT_CHUNYUN_INFO_MAP_SCREEN_CMD	tmpcode/commond.h	/^const BYTE  RT_CHUNYUN_INFO_MAP_SCREEN_CMD= 134;$/;"	v
RT_CITY_FIGHT_RULE_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RT_CITY_FIGHT_RULE_MAPSCREEN_USERCMD_PARA = 110;$/;"	v
RT_CONSUME_HAPPY_CARD_BOX_PARA	tmpcode/commond.h	/^const BYTE RT_CONSUME_HAPPY_CARD_BOX_PARA = 9;$/;"	v
RT_DROP_GUARD_GOODS_SEPT_CMD	tmpcode/commond.h	/^const BYTE RT_DROP_GUARD_GOODS_SEPT_CMD = 113;$/;"	v
RT_EARNING_INFO_UNION_PARA	tmpcode/commond.h	/^const BYTE RT_EARNING_INFO_UNION_PARA  = 144;$/;"	v
RT_EQUIP_SORT_LIST_PARA	tmpcode/commond.h	/^const BYTE RT_EQUIP_SORT_LIST_PARA = 181;$/;"	v
RT_GET_ACHIEVEMENT_HONOR_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RT_GET_ACHIEVEMENT_HONOR_USERCMD_PARA = 159;$/;"	v
RT_GIVE_GUARD_GOODS_SEPT_CMD	tmpcode/commond.h	/^const BYTE RT_GIVE_GUARD_GOODS_SEPT_CMD = 111;$/;"	v
RT_GUARD_GOODS_SEPT_CMD	tmpcode/commond.h	/^const BYTE RT_GUARD_GOODS_SEPT_CMD = 109;$/;"	v
RT_HAPPY_CARD_BOX_PARA	tmpcode/commond.h	/^const BYTE RT_HAPPY_CARD_BOX_PARA = 4;$/;"	v
RT_KEY_STATE_SHENMI_PARA	tmpcode/commond.h	/^const BYTE RT_KEY_STATE_SHENMI_PARA = 32;$/;"	v
RT_MEMBER_LIST_HOUSE_USER_CMD	tmpcode/commond.h	/^const  BYTE RT_MEMBER_LIST_HOUSE_USER_CMD =  42;$/;"	v
RT_NAME_CARD_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RT_NAME_CARD_USERCMD_PARA = 160;$/;"	v
RT_OBJECTS_HOUSE_USER_CMD	tmpcode/commond.h	/^const  BYTE RT_OBJECTS_HOUSE_USER_CMD =  37;$/;"	v
RT_OBJ_VISIT_HOUSE_USER_CMD	tmpcode/commond.h	/^const  BYTE RT_OBJ_VISIT_HOUSE_USER_CMD =  40;$/;"	v
RT_OTHER_MAGIC_USERCMD_PARA	base/Command.h	/^const BYTE RT_OTHER_MAGIC_USERCMD_PARA = 27;$/;"	v
RT_PRESENT_BAR_GIRL_USERCMD	tmpcode/commond.h	/^const BYTE RT_PRESENT_BAR_GIRL_USERCMD = 46;$/;"	v
RT_SEARCH_GUARD_GOODS_SEPT_CMD	tmpcode/commond.h	/^const BYTE RT_SEARCH_GUARD_GOODS_SEPT_CMD = 114;$/;"	v
RT_SHEMU_STATE_COUNTRY_CMD	tmpcode/commond.h	30381;"	d
RT_SHENYU_CARD_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RT_SHENYU_CARD_USERCMD_PARA = 103;$/;"	v
RT_SHOW_LINGQIHOUSE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE RT_SHOW_LINGQIHOUSE_USERCMD_PARA = 192;$/;"	v
RT_ST_AUTO_CFG_HAPPY_CARD_BOX_PARA	tmpcode/commond.h	/^const BYTE RT_ST_AUTO_CFG_HAPPY_CARD_BOX_PARA = 10;$/;"	v
RT_ST_CHAT_ACCEL_PROPERTY_USERCMD_PARA	tmpcode/commond.h	27558;"	d
RT_TABLE_LIST_MAP_SCREEN_USERCMD	tmpcode/commond.h	/^const BYTE RT_TABLE_LIST_MAP_SCREEN_USERCMD = 18;$/;"	v
RT_TEMPLIST_PARA	tmpcode/commond.h	/^const BYTE RT_TEMPLIST_PARA = 189;$/;"	v
RT_TREASURE_USER_PARA	tmpcode/commond.h	/^const BYTE RT_TREASURE_USER_PARA = 36;$/;"	v
RT_TYPE_AUTO_HAPPY_CARD_BOX_PARA	tmpcode/commond.h	/^const BYTE RT_TYPE_AUTO_HAPPY_CARD_BOX_PARA = 12;$/;"	v
RUN_CONSUME_SP	ScenesServer/SceneUser.h	/^      RUN_CONSUME_SP = 1,\/\/Ë∑ëÊ≠•‰ΩìÂäõÊ∂àËÄó$/;"	e	enum:SceneUser::__anon187
RUSH	tmpcode/commond.h	/^	RUSH = 3103,\/\/≥Â∑Ê$/;"	e	enum:__anon205
RUSH_SPEED	tmpcode/commond.h	/^const WORD RUSH_SPEED = 1000;\/\/≥Â∑Ê$/;"	v
R_MAKE	ScenesServer/zObject.h	/^      R_MAKE,$/;"	e	enum:EquipPack::PACKNO
R_PACK	ScenesServer/zObject.h	/^      R_PACK,$/;"	e	enum:EquipPack::PACKNO
RandPos	ScenesServer/SceneEntryPk.h	/^	zPos RandPos;$/;"	m	struct:SceneEntryPk
RandRegionX	ScenesServer/SceneEntryPk.h	/^	int RandRegionX,RandRegionY;$/;"	m	struct:SceneEntryPk
RandRegionY	ScenesServer/SceneEntryPk.h	/^	int RandRegionX,RandRegionY;$/;"	m	struct:SceneEntryPk
RandTimer	base/zTime.h	/^	RandTimer(const float how_long,const int delay=0) : _long((int)(how_long*1000)),_timer(delay*1000)$/;"	f	class:RandTimer
RandTimer	base/zTime.h	/^	RandTimer(const float how_long,const zRTime cur) : _long((int)(how_long*1000)),_timer(cur)$/;"	f	class:RandTimer
RandTimer	base/zTime.h	/^class RandTimer$/;"	c
ReCampThisID	ScenesServer/Scene.h	/^	virtual DWORD ReCampThisID(BYTE index) { return 0; }$/;"	f	class:Scene
RecentMsg	ScenesServer/script_func.h	/^    RecentMsg()$/;"	f	struct:RecentMsg
RecentMsg	ScenesServer/script_func.h	/^struct RecentMsg$/;"	s
Record	base/RecordCommand.h	/^  namespace Record$/;"	n	namespace:Cmd
RecordClient	GatewayServer/RecordClient.h	/^	RecordClient($/;"	f	class:RecordClient
RecordClient	GatewayServer/RecordClient.h	/^class RecordClient : public zTCPBufferClient$/;"	c
RecordClient	ScenesServer/RecordClient.h	/^    RecordClient(const std::string &name,const std::string &ip,const WORD port)$/;"	f	class:RecordClient
RecordClient	ScenesServer/RecordClient.h	/^class RecordClient : public zTCPBufferClient,public MessageQueue$/;"	c
RecordClient	SessionServer/RecordClient.h	/^    RecordClient($/;"	f	class:RecordClient
RecordClient	SessionServer/RecordClient.h	/^class RecordClient : public zTCPClient,public MessageQueue$/;"	c
RecordConfile	RecordServer/RecordServer.cpp	/^class RecordConfile:public zConfile$/;"	c
RecordConfile	Robot/ClientService.cpp	/^class RecordConfile:public zConfile$/;"	c
RecordService	RecordServer/RecordServer.h	/^    RecordService() : zSubNetService("µµ∞∏∑˛ŒÒ∆˜",RECORDSERVER)$/;"	f	class:RecordService
RecordService	RecordServer/RecordServer.h	/^class RecordService : public zSubNetService$/;"	c
RecordSession	RecordServer/RecordSessionManager.h	/^  RecordSession(const DWORD accid,const DWORD id,const WORD wdServerID) : lastsavetime()$/;"	f	struct:RecordSession
RecordSession	RecordServer/RecordSessionManager.h	/^  RecordSession(const RecordSession& rs)$/;"	f	struct:RecordSession
RecordSession	RecordServer/RecordSessionManager.h	/^struct RecordSession$/;"	s
RecordSessionHashmap	RecordServer/RecordSessionManager.h	/^    typedef __gnu_cxx::hash_map<DWORD,RecordSession> RecordSessionHashmap;$/;"	t	class:RecordSessionManager
RecordSessionHashmap_iterator	RecordServer/RecordSessionManager.h	/^    typedef RecordSessionHashmap::iterator RecordSessionHashmap_iterator;$/;"	t	class:RecordSessionManager
RecordSessionHashmap_pair	RecordServer/RecordSessionManager.h	/^    typedef RecordSessionHashmap::value_type RecordSessionHashmap_pair;$/;"	t	class:RecordSessionManager
RecordSessionManager	RecordServer/RecordSessionManager.h	/^    RecordSessionManager() {};$/;"	f	class:RecordSessionManager
RecordSessionManager	RecordServer/RecordSessionManager.h	/^class RecordSessionManager$/;"	c
RecordTask	RecordServer/RecordTask.h	/^    RecordTask($/;"	f	class:RecordTask
RecordTask	RecordServer/RecordTask.h	/^class RecordTask : public zTCPTask$/;"	c
RefreshCardState	ScenesServer/ChallengeGame.cpp	/^	RefreshCardState(ChallengeGame *game)$/;"	f	class:RefreshCardState
RefreshCardState	ScenesServer/ChallengeGame.cpp	/^class RefreshCardState:public UserCardExec$/;"	c
RegMapType	base/RecordCommand.h	/^	  BYTE RegMapType;			\/\/\/ sky$/;"	m	struct:Cmd::Record::t_ReadUser_SceneRecord
ReliveBattle	base/Command.h	/^  ReliveBattle,	\/\/sky ÊàòÂú∫Â§çÊ¥ª$/;"	e	enum:Cmd::__anon83
ReliveGatherPoint	tmpcode/commond.h	/^    ReliveGatherPoint	= 8, \/\/ºØΩ·µ„∏¥ªÓ—°œÓ$/;"	e	enum:__anon251
ReliveHome	base/Command.h	/^  ReliveHome,\/\/ÂõûÂüéÂ§çÊ¥ª$/;"	e	enum:Cmd::__anon83
ReliveHome	tmpcode/commond.h	/^	ReliveHome			= 0, \/\/ªÿ≥«∏¥ªÓ   $/;"	e	enum:__anon251
ReliveLeave	tmpcode/commond.h	/^	ReliveLeave             = 11,   \/\/”¢–€µ∫÷–¿Îµ∫∏¥ªÓ$/;"	e	enum:__anon251
ReliveMoney	base/Command.h	/^  ReliveMoney,\/\/ÈáëÈí±Â§çÊ¥ª$/;"	e	enum:Cmd::__anon83
ReliveMoney	tmpcode/commond.h	/^    ReliveMoney			= 1, \/\/Ω«Æ∏¥ªÓ          $/;"	e	enum:__anon251
ReliveMoneyHealth	tmpcode/commond.h	/^    ReliveMoneyHealth	= 2, \/\/Ω«ÆΩ°øµ∏¥ªÓ$/;"	e	enum:__anon251
ReliveNoMoneyHealth	tmpcode/commond.h	/^    ReliveNoMoneyHealth	= 7, \/\/‘≠µÿ≤ªª®«Æ¬˙—™∏¥ªÓ(”√”⁄ºØΩ·µ„µπº∆ ±∫Û∑˛ŒÒ∆˜ π”√)$/;"	e	enum:__anon251
ReliveRandomPos	tmpcode/commond.h	/^	ReliveRandomPos         = 10,   \/\/”¢–€µ∫÷–ÀÊª˙Œª÷√£®≈‰÷√£©∏¥ªÓ$/;"	e	enum:__anon251
ReliveSafe	tmpcode/commond.h	/^	ReliveSafe              = 9,    \/\/”¢–€µ∫µ∫ƒ⁄∞≤»´«¯∏¥ªÓ$/;"	e	enum:__anon251
ReliveSkill	base/Command.h	/^  ReliveSkill,\/\/ÊäÄËÉΩÂ§çÊ¥ª$/;"	e	enum:Cmd::__anon83
ReliveSkill	tmpcode/commond.h	/^    ReliveSkill			= 5, \/\/ººƒ‹∏¥ªÓ$/;"	e	enum:__anon251
ReliveStone	tmpcode/commond.h	/^	ReliveStone		= 13,  \/\/ ”√øµ∏¥ ØΩ°∏¥ªÓ$/;"	e	enum:__anon251
ReliveToDying	tmpcode/commond.h	/^    ReliveToDying		= 6, \/\/ ∏¥ªÓ∫Û¥¶”⁄÷ÿ…À◊¥Ã¨£¨Ωˆ”√”⁄∑˛ŒÒ∆˜$/;"	e	enum:__anon251
Relive_10_min	base/Command.h	/^  Relive_10_min\/\/ËøΩÊçïÂá∂ÁäØ10ÂàÜÈíü$/;"	e	enum:Cmd::__anon83
Relive_10_min	tmpcode/commond.h	/^    Relive_10_min		= 4, \/\/◊∑≤∂–◊∑∏10∑÷÷”$/;"	e	enum:__anon251
Relive_1_min	base/Command.h	/^  Relive_1_min,\/\/ËøΩÊçïÂá∂ÁäØ1ÂàÜÈíü$/;"	e	enum:Cmd::__anon83
Relive_5_min	base/Command.h	/^  Relive_5_min,\/\/ËøΩÊçïÂá∂ÁäØ5ÂàÜÈíü$/;"	e	enum:Cmd::__anon83
Relive_5_min	tmpcode/commond.h	/^    Relive_5_min		= 3, \/\/◊∑≤∂–◊∑∏5∑÷÷”    $/;"	e	enum:__anon251
RemoveItemAction	ScenesServer/QuestAction.h	/^  RemoveItemAction(ScenesParser& p) : TeamAction(p)$/;"	f	class:RemoveItemAction
RemoveItemAction	ScenesServer/QuestAction.h	/^class RemoveItemAction : public TeamAction$/;"	c
RemoveSceneObjectCallBack	ScenesServer/Scene.cpp	/^  RemoveSceneObjectCallBack(Scene *scene) : scene(scene) {};$/;"	f	struct:RemoveSceneObjectCallBack
RemoveSceneObjectCallBack	ScenesServer/Scene.cpp	/^struct RemoveSceneObjectCallBack : public zSceneEntryCallBack$/;"	s
RepairMoney2RepairGold	ScenesServer/zObject.cpp	/^DWORD zObject::RepairMoney2RepairGold(DWORD dwObjectRepair)$/;"	f	class:zObject
ReplayMerceryList	tmpcode/commond.h	/^		ReplayMerceryList()$/;"	f	struct:ReplayMerceryList
ReplayMerceryList	tmpcode/commond.h	/^struct ReplayMerceryList$/;"	s
ResAssign	tmpcode/commond.h	/^		ResAssign()$/;"	f	struct:stChangeUnionResourceType::ResAssign
ResAssign	tmpcode/commond.h	/^		ResAssign()$/;"	f	struct:stUnionResourceAssign::ResAssign
ResAssign	tmpcode/commond.h	/^	struct ResAssign$/;"	s	struct:stChangeUnionResourceType
ResAssign	tmpcode/commond.h	/^	struct ResAssign$/;"	s	struct:stUnionResourceAssign
ResetGameCardAttackTimes	ScenesServer/ChallengeGame.cpp	/^	ResetGameCardAttackTimes()$/;"	f	class:ResetGameCardAttackTimes
ResetGameCardAttackTimes	ScenesServer/ChallengeGame.cpp	/^class ResetGameCardAttackTimes:public UserCardExec$/;"	c
ResidentHireList	tmpcode/commond.h	/^struct ResidentHireList$/;"	s
ResultData	tmpcode/commond.h	/^	ResultData()$/;"	f	struct:ResultData
ResultData	tmpcode/commond.h	/^struct ResultData$/;"	s
ResultScoreAndExp	tmpcode/commond.h	/^        ResultScoreAndExp()$/;"	f	struct:ResultScoreAndExp
ResultScoreAndExp	tmpcode/commond.h	/^struct ResultScoreAndExp $/;"	s
RetBetInfo	tmpcode/commond.h	/^		RetBetInfo():betDragonIndex(0),betObjNums(0),winRate(0){}$/;"	f	struct:stRetBetInChallengeDragonUserCmd::RetBetInfo
RetBetInfo	tmpcode/commond.h	/^	struct RetBetInfo$/;"	s	struct:stRetBetInChallengeDragonUserCmd
RetMsgUnionInfoCmd	tmpcode/commond.h	/^	RetMsgUnionInfoCmd()$/;"	f	struct:RetMsgUnionInfoCmd
RetMsgUnionInfoCmd	tmpcode/commond.h	/^struct RetMsgUnionInfoCmd : public stUnionUserCmd$/;"	s
RetNoticeUnionInfoCmd	tmpcode/commond.h	/^	RetNoticeUnionInfoCmd()$/;"	f	struct:RetNoticeUnionInfoCmd
RetNoticeUnionInfoCmd	tmpcode/commond.h	/^struct RetNoticeUnionInfoCmd : public stUnionUserCmd$/;"	s
ReturnFocusPropertyUserCmd	tmpcode/commond.h	/^    ReturnFocusPropertyUserCmd()$/;"	f	struct:ReturnFocusPropertyUserCmd
ReturnFocusPropertyUserCmd	tmpcode/commond.h	/^struct ReturnFocusPropertyUserCmd : public stPropertyUserCmd$/;"	s
ReturnOpenBoxPropertyUserCmd	tmpcode/commond.h	/^    ReturnOpenBoxPropertyUserCmd()$/;"	f	struct:ReturnOpenBoxPropertyUserCmd
ReturnOpenBoxPropertyUserCmd	tmpcode/commond.h	/^struct ReturnOpenBoxPropertyUserCmd : public stPropertyUserCmd$/;"	s
ReuildType	tmpcode/commond.h	/^ enum ReuildType{$/;"	g
Reward	base/xmlparser/test.h	/^    struct Reward$/;"	s	struct:TestConfig
Reward	tmpcode/commond.h	/^		Reward()$/;"	f	struct:stRet_PromoterRewardUserCmd::Reward
Reward	tmpcode/commond.h	/^	struct Reward$/;"	s	struct:stRet_PromoterRewardUserCmd
RewardPerTask	tmpcode/commond.h	/^	DWORD RewardPerTask;      \/\/√ø∏ˆ»ŒŒÒµƒΩ±¿¯$/;"	m	struct:stRequestCleanTaskUserCmd
Ride	ScenesServer/QuestEvent.h	/^  class Ride$/;"	c	namespace:Trigger
RightList	base/Command.h	/^  } RightList[10];$/;"	m	struct:Cmd::stSeptBaseInfoCmd	typeref:struct:Cmd::stSeptBaseInfoCmd::stStepRight
RightName	base/Command.h	/^	  char	RightName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stSeptBaseInfoCmd::stStepRight
RoleContainer	roleChangeServer/ChangeTask.h	/^	RoleContainer()$/;"	f	class:RoleContainer
RoleContainer	roleChangeServer/ChangeTask.h	/^class RoleContainer : public Singleton<RoleContainer>$/;"	c
RoleData	SuperServer/RoleregCache.cpp	/^	RoleData(){accid=0;zone=0;game=0;memset(name,0,sizeof(name));}$/;"	f	struct:RoleData
RoleData	SuperServer/RoleregCache.cpp	/^	RoleData(const RoleData &rd)$/;"	f	struct:RoleData
RoleData	SuperServer/RoleregCache.cpp	/^struct RoleData$/;"	s
RoleData	roleRegServer/RoleTask.h	/^    RoleData()$/;"	f	struct:RoleData
RoleData	roleRegServer/RoleTask.h	/^    RoleData(const RoleData& rd)$/;"	f	struct:RoleData
RoleData	roleRegServer/RoleTask.h	/^struct RoleData$/;"	s
RoleDataContainer	SuperServer/RoleregCache.cpp	/^	RoleDataContainer() {};$/;"	f	class:RoleDataContainer
RoleDataContainer	SuperServer/RoleregCache.cpp	/^class RoleDataContainer$/;"	c
RoleReg	base/RoleregCommand.h	/^  namespace RoleReg$/;"	n	namespace:Cmd
RoleReg	roleRegServer/RoleregCommand.h	/^  namespace RoleReg$/;"	n	namespace:Cmd
RoleRegClientContainer	SuperServer/RoleregClientManager.h	/^    typedef std::multiset<RoleregClient *, lt_client> RoleRegClientContainer;$/;"	t	class:RoleregClientManager
RoleTask	roleRegServer/RoleTask.h	/^	RoleTask($/;"	f	class:RoleTask
RoleTask	roleRegServer/RoleTask.h	/^class RoleTask : public zTCPTask$/;"	c
Rolechange	base/RolechangeCommand.h	/^  namespace Rolechange$/;"	n	namespace:Cmd
RolechangeClient	SuperServer/RolechangeClient.cpp	/^RolechangeClient::RolechangeClient(const std::string &ip, const WORD port) : zTCPClientTask(ip, port, false), tempid(++tempidAllocator), netType(NetType_near)$/;"	f	class:RolechangeClient
RolechangeClient	SuperServer/RolechangeClient.h	/^class RolechangeClient : public zTCPClientTask$/;"	c
RolechangeClientManager	SuperServer/RolechangeClientManager.cpp	/^RolechangeClientManager::RolechangeClientManager()$/;"	f	class:RolechangeClientManager
RolechangeClientManager	SuperServer/RolechangeClientManager.h	/^class RolechangeClientManager$/;"	c
RolechangeClient_map	SuperServer/RolechangeClientManager.h	/^    typedef std::map<const DWORD, RolechangeClient *> RolechangeClient_map;$/;"	t	class:RolechangeClientManager
RolechangeClient_set	SuperServer/RolechangeClientManager.h	/^    typedef std::multiset<RolechangeClient *, lt_client> RolechangeClient_set;$/;"	t	class:RolechangeClientManager
RoleregCache	SuperServer/RoleregCache.h	/^    RoleregCache() {};$/;"	f	class:RoleregCache
RoleregCache	SuperServer/RoleregCache.h	/^class RoleregCache$/;"	c
RoleregClient	SuperServer/RoleregClient.cpp	/^RoleregClient::RoleregClient(const std::string &ip, const WORD port) : zTCPClientTask(ip, port, false),netType(NetType_near)$/;"	f	class:RoleregClient
RoleregClient	SuperServer/RoleregClient.h	/^class RoleregClient : public zTCPClientTask$/;"	c
RoleregClientManager	SuperServer/RoleregClientManager.cpp	/^RoleregClientManager::RoleregClientManager()$/;"	f	class:RoleregClientManager
RoleregClientManager	SuperServer/RoleregClientManager.h	/^class RoleregClientManager$/;"	c
RoomInfo	tmpcode/commond.h	/^	RoomInfo(): roomID(0), bPassword(false), memCount(0), levelMark(0), memCountOfAutoStart(0), masterProfession(0)$/;"	f	struct:RoomInfo
RoomInfo	tmpcode/commond.h	/^struct RoomInfo$/;"	s
RoomMemberInfo	tmpcode/commond.h	/^	RoomMemberInfo()$/;"	f	struct:RoomMemberInfo
RoomMemberInfo	tmpcode/commond.h	/^struct RoomMemberInfo$/;"	s
SAFETY_COWBOX	base/CmdType.h	/^const BYTE SAFETY_COWBOX = 49;$/;"	v
SAFETY_STATE	base/CharBase.h	/^  SAFETY_STATE,\/\/ ‰∏¥Êó∂ÂÖ≥Èó≠ÂØÜÁ†Å‰øùÊä§$/;"	e	enum:TempArchiveType
SAFETY_USERCMD	base/CmdType.h	/^const BYTE SAFETY_USERCMD    = 48;$/;"	v
SAFETY_USERCMD	tmpcode/commond.h	/^const BYTE SAFETY_USERCMD = 48;$/;"	v
SAFE_BANK	tmpcode/commond.h	/^	SAFE_BANK = 6,  \/\/ —°÷–∫Û≤ª‘ –Ì π”√“¯––π¶ƒ‹$/;"	e	enum:SafeFlagEnum
SAFE_BINDSUIT	tmpcode/commond.h	/^	SAFE_BINDSUIT = 0, \/\/ ∞Û∂®µƒÃ◊◊∞±£ª§(∂™,¬Ù,ªª,∏ƒ)$/;"	e	enum:SafeFlagEnum
SAFE_DELETE	base/zType.h	7;"	d
SAFE_DELETE_VEC	base/zType.h	8;"	d
SAFE_GOLD_PET	tmpcode/commond.h	/^	SAFE_GOLD_PET = 4,		\/\/ ≤ª‘ –Ì∏¯ÃÊ…Ì±¶±¶◊‘∂Ø≥‰÷µ$/;"	e	enum:SafeFlagEnum
SAFE_GOLD_REMOVE	tmpcode/commond.h	/^	SAFE_GOLD_REMOVE = 3,	\/\/ ÀÆæß±“œ˚∑—±£ª§, œ˚∑—µΩπ…∆±µƒ,”……œ“ªÃıΩ¯––±£ª§$/;"	e	enum:SafeFlagEnum
SAFE_MAIL_AND_AUCTION	tmpcode/commond.h	/^	SAFE_MAIL_AND_AUCTION = 7, \/\/ —°÷–∫Û≤ª‘ –Ì π”√” º˛∫Õ≈ƒ¬Ùπ¶ƒ‹$/;"	e	enum:SafeFlagEnum
SAFE_MAX	tmpcode/commond.h	/^	SAFE_MAX$/;"	e	enum:SafeFlagEnum
SAFE_PRESENT	tmpcode/commond.h	/^	SAFE_PRESENT = 5,		\/\/ ‘˘∆∑±£ª§$/;"	e	enum:SafeFlagEnum
SAFE_STORE	tmpcode/commond.h	/^	SAFE_STORE = 1,   \/\/ ≤÷ø‚¥Ê»°±£ª§,–Ë“™—È÷§$/;"	e	enum:SafeFlagEnum
SALE_AUCTION_PARA	base/Command.h	/^const BYTE SALE_AUCTION_PARA = 1;$/;"	v
SALE_AUCTION_PARA	tmpcode/commond.h	/^const BYTE SALE_AUCTION_PARA = 1;$/;"	v
SALE_BUSINESS_GOODS_USERCMD	tmpcode/commond.h	/^const BYTE SALE_BUSINESS_GOODS_USERCMD = 8;$/;"	v
SALE_CARTOON_PARA	base/Command.h	8310;"	d
SALE_PURCHASE_PARA	tmpcode/commond.h	/^const BYTE SALE_PURCHASE_PARA = 59;$/;"	v
SAVE_DANCE_PARA	tmpcode/commond.h	/^const BYTE SAVE_DANCE_PARA = 4;$/;"	v
SAVE_TYPE_ADOPT	base/SessionCommand.h	/^      SAVE_TYPE_ADOPT,$/;"	e	enum:Cmd::Session::saveType
SAVE_TYPE_DONTSAVE	base/SessionCommand.h	/^      SAVE_TYPE_DONTSAVE,$/;"	e	enum:Cmd::Session::saveType
SAVE_TYPE_LETOUT	base/SessionCommand.h	/^      SAVE_TYPE_LETOUT,$/;"	e	enum:Cmd::Session::saveType
SAVE_TYPE_PUTAWAY	base/SessionCommand.h	/^      SAVE_TYPE_PUTAWAY,$/;"	e	enum:Cmd::Session::saveType
SAVE_TYPE_RETURN	base/SessionCommand.h	/^      SAVE_TYPE_RETURN,$/;"	e	enum:Cmd::Session::saveType
SAVE_TYPE_SYN	base/SessionCommand.h	/^      SAVE_TYPE_SYN$/;"	e	enum:Cmd::Session::saveType
SAVE_TYPE_TIMEOVER	base/SessionCommand.h	/^      SAVE_TYPE_TIMEOVER,$/;"	e	enum:Cmd::Session::saveType
SAVE_TYPE_TIMETICK	base/SessionCommand.h	/^      SAVE_TYPE_TIMETICK,$/;"	e	enum:Cmd::Session::saveType
SAYNO_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE SAYNO_QUESTROOM_PARA = 24;$/;"	v
SCENESSERVER	base/zMisc.h	/^	SCENESSERVER  =  21, \/** Âú∫ÊôØÊúçÂä°Âô® *\/$/;"	e	enum:ServerType
SCENE_ACTIVEDARE_FAIL	base/SessionCommand.h	/^      SCENE_ACTIVEDARE_FAIL        \/\/ Âú∫ÊôØÂ§ÑÁêÜÊøÄÊ¥ªÊàòÊñóÂ§±Ë¥•$/;"	e	enum:Cmd::Session::__anon43
SCENE_ACTIVEDARE_SUCCESS	base/SessionCommand.h	/^      SCENE_ACTIVEDARE_SUCCESS,\/\/ Âú∫ÊôØÂ§ÑÁêÜÊøÄÊ¥ªÊàòÊñóÊàêÂäü$/;"	e	enum:Cmd::Session::__anon43
SCENE_PACKET_USERDATASIZE	ScenesServer/SceneUser.cpp	/^const DWORD SCENE_PACKET_USERDATASIZE = temp__\/4;$/;"	v
SCENE_RUNNINGSTATE_NORMAL	base/zScene.h	/^	SCENE_RUNNINGSTATE_NORMAL,\/\/øøøø$/;"	e	enum:enumSceneRunningState
SCENE_RUNNINGSTATE_REMOVE	base/zScene.h	/^		SCENE_RUNNINGSTATE_REMOVE,\/\/øøøø$/;"	e	enum:enumSceneRunningState
SCENE_RUNNINGSTATE_UNLOAD	base/zScene.h	/^	    SCENE_RUNNINGSTATE_UNLOAD,\/\/øøøø$/;"	e	enum:enumSceneRunningState
SCHOOL_DARE	base/Command.h	/^  SCHOOL_DARE  = 1,\/\/ Â∏àÈó®ÂØπÊàò$/;"	e	enum:Cmd::__anon120
SCHOOL_USERCMD	base/CmdType.h	/^const BYTE SCHOOL_USERCMD    = 26;$/;"	v
SCORE_CHALLENGE_PARA	tmpcode/commond.h	21887;"	d
SCORE_INFO_SC_PARA	tmpcode/commond.h	/^const BYTE SCORE_INFO_SC_PARA = 16;$/;"	v
SCREEN_HEIGHT	base/zType.h	77;"	d
SCREEN_WIDTH	base/zType.h	72;"	d
SCROLL_MAP_PROPERTY_USERCMD_PARA	base/Command.h	/^const BYTE SCROLL_MAP_PROPERTY_USERCMD_PARA = 36;$/;"	v
SDWORD	base/zType.h	/^typedef long int SDWORD;$/;"	t
SDWORD	tmpcode/commond.h	/^typedef signed int SDWORD;$/;"	t
SEAL_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SEAL_MAGIC_USERCMD_PARA = 55;$/;"	v
SECOND	base/Command.h	/^  SECOND,  \/\/ ÂâØÂ∏Æ‰∏ªÊùÉÈôê$/;"	e	enum:Cmd::UNIONPOWER
SECOND	tmpcode/commond.h	/^	SECOND,			   \/\/ ∏±∞Ô÷˜»®œﬁ$/;"	e	enum:UNIONPOWER
SECONDS_TO_RECOVER_FROM_DYING	tmpcode/commond.h	/^const BYTE SECONDS_TO_RECOVER_FROM_DYING = 138;$/;"	v
SECONDS_TO_RELIVE_GATHERPOINT	tmpcode/commond.h	/^const BYTE SECONDS_TO_RELIVE_GATHERPOINT = 140;$/;"	v
SECRETTREASURE_TIMES	tmpcode/commond.h	/^		SECRETTREASURE_TIMES = 11, \/\/ΩÒÃÏΩ¯…Ò√ÿ∂¥—®¥Œ ˝$/;"	e	enum:DRAGON_DATA_TYPE
SEC_MASTER_NUM	tmpcode/commond.h	/^const BYTE SEC_MASTER_NUM = 2;$/;"	v
SEDN_SEPT_STORE_DATE_CMD	tmpcode/commond.h	/^const BYTE SEDN_SEPT_STORE_DATE_CMD = 137;$/;"	v
SELECTED_HPMP_PROPERTY_USERCMD_PARA	base/Command.h	1353;"	d
SELECTED_HPMP_PROPERTY_USERCMD_PARA	tmpcode/commond.h	7428;"	d
SELECT_GIFTBOX_USERCMD	tmpcode/commond.h	21158;"	d
SELECT_GUILD_MANTEAU_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SELECT_GUILD_MANTEAU_USERCMD_PARA = 200;$/;"	v
SELECT_MAINUSER_PROPERTY_USERCMD_PARA	base/Command.h	2972;"	d
SELECT_MAINUSER_PROPERTY_USERCMD_PARA	tmpcode/commond.h	7098;"	d
SELECT_PROPERTY_USERCMD_PARA	base/Command.h	2959;"	d
SELECT_PROPERTY_USERCMD_PARA	tmpcode/commond.h	4332;"	d
SELECT_RETURN_HORSE_PROPERTY_USERCMD_PARA	base/Command.h	3172;"	d
SELECT_RETURN_HORSE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	13212;"	d
SELECT_RETURN_MAINUSER_PROPERTY_USERCMD_PARA	base/Command.h	3007;"	d
SELECT_RETURN_MAINUSER_PROPERTY_USERCMD_PARA	tmpcode/commond.h	7152;"	d
SELECT_RETURN_STATES_PROPERTY_USERCMD_PARA	base/Command.h	3033;"	d
SELECT_RETURN_STATES_PROPERTY_USERCMD_PARA	tmpcode/commond.h	4306;"	d
SELECT_TRANS_LEVEL	base/Command.h	/^const BYTE SELECT_TRANS_LEVEL= 20;$/;"	v
SELECT_USERCMD	base/CmdType.h	/^const BYTE SELECT_USERCMD    = 24;$/;"	v
SELECT_USERCMD	tmpcode/commond.h	/^const BYTE SELECT_USERCMD               = 24;$/;"	v
SELF_DECAY_LINGQI_PARA	tmpcode/commond.h	/^const BYTE SELF_DECAY_LINGQI_PARA = 13;$/;"	v
SELF_HISTORY_GOLD_STOCKPARA	base/Command.h	7743;"	d
SELF_HISTORY_GOLD_STOCKPARA	tmpcode/commond.h	23745;"	d
SELF_HISTORY_MONEY_STOCKPARA	base/Command.h	7754;"	d
SELF_HISTORY_MONEY_STOCKPARA	tmpcode/commond.h	23758;"	d
SELL	tmpcode/commond.h	/^	SELL  = 1,   \/\/œ˙ €  $/;"	e	enum:MERCH_STATE
SELLHORSE_NPCTRADE_USERCMD_PARAMETER	base/Command.h	4001;"	d
SELLOBJECT_NPCTRADE_USERCMD_PARAMETER	base/Command.h	3978;"	d
SELLOBJECT_NPCTRADE_USERCMD_PARAMETER	tmpcode/commond.h	5146;"	d
SELLOBJLIST_NPCTRADE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE SELLOBJLIST_NPCTRADE_USERCMD_PARAMETER = 65;$/;"	v
SELL_ALL_CARTOON_PARA	base/Command.h	8345;"	d
SENDALL_LINGQISKILLS_PARA	tmpcode/commond.h	24694;"	d
SENDCOUNTRYINVITE_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE SENDCOUNTRYINVITE_QUESTROOM_PARA = 27;$/;"	v
SENDCOUNTRYLIST_MERCENARY_COUNTRY_CMD	tmpcode/commond.h	30551;"	d
SENDDATA_FLYSKILL_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SENDDATA_FLYSKILL_MAGIC_USERCMD_PARA =48;$/;"	v
SEND_ACTIVITY_STATE_PARA	tmpcode/commond.h	/^const BYTE SEND_ACTIVITY_STATE_PARA = 6;$/;"	v
SEND_ALLSCORE_PARA	tmpcode/commond.h	/^const BYTE SEND_ALLSCORE_PARA = 10;$/;"	v
SEND_ALL_ACHIVEMENT_AWARD_INFO_PARA	tmpcode/commond.h	/^const BYTE SEND_ALL_ACHIVEMENT_AWARD_INFO_PARA = 166;$/;"	v
SEND_BUILDING_POTENTIAL_SKILL_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SEND_BUILDING_POTENTIAL_SKILL_USERCMD_PARA = 240;$/;"	v
SEND_CANLEARN_FAKESKILL	tmpcode/commond.h	24816;"	d
SEND_CHANGEFACENPC_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SEND_CHANGEFACENPC_MAGIC_USERCMD_PARA =53;$/;"	v
SEND_CMD	Robot/Client.h	/^	template<class T> inline bool SEND_CMD(T cmd)$/;"	f	class:Client
SEND_COUNTRYGUARD_TIME	tmpcode/commond.h	/^const BYTE SEND_COUNTRYGUARD_TIME = 12;$/;"	v
SEND_CRYSTAL_FLOWER_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SEND_CRYSTAL_FLOWER_PROPERTY_USERCMD_PARA = 210;$/;"	v
SEND_DAILYBOX_AWARD_RESULT_PARA	tmpcode/commond.h	/^const BYTE SEND_DAILYBOX_AWARD_RESULT_PARA = 175;$/;"	v
SEND_DARE_LIST_PARA	base/Command.h	/^const BYTE SEND_DARE_LIST_PARA = 5;$/;"	v
SEND_FARM_NOTICE_PARA	tmpcode/commond.h	/^const BYTE SEND_FARM_NOTICE_PARA = 11;$/;"	v
SEND_FLAGINFO	tmpcode/commond.h	/^const BYTE SEND_FLAGINFO = 5;$/;"	v
SEND_FLAG_ENDOFNOTIFY_USRE_CMD	tmpcode/commond.h	3779;"	d
SEND_FLOWER_EFFECT_NINE	tmpcode/commond.h	/^const BYTE SEND_FLOWER_EFFECT_NINE = 143;$/;"	v
SEND_FLOWER_NO_EXP_INFO_PARA	tmpcode/commond.h	/^const BYTE SEND_FLOWER_NO_EXP_INFO_PARA = 151;$/;"	v
SEND_FORCELOCKUSER_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SEND_FORCELOCKUSER_MAGIC_USERCMD_PARA  =50;$/;"	v
SEND_FRIEND_FLOWER_TO_USER	tmpcode/commond.h	/^const BYTE SEND_FRIEND_FLOWER_TO_USER = 142;$/;"	v
SEND_FRIEND_LIST_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SEND_FRIEND_LIST_PROPERTY_USERCMD_PARA = 161;$/;"	v
SEND_HOMELIST_PARA	tmpcode/commond.h	/^const BYTE SEND_HOMELIST_PARA					= 55;$/;"	v
SEND_HONOR_ZHANGONG	tmpcode/commond.h	/^const BYTE SEND_HONOR_ZHANGONG = 79;$/;"	v
SEND_INFO_PARA	tmpcode/commond.h	/^const BYTE SEND_INFO_PARA = 1;$/;"	v
SEND_LEFTTIME_AUCTION_PARA	tmpcode/commond.h	/^const BYTE SEND_LEFTTIME_AUCTION_PARA = 9;$/;"	v
SEND_LEVELUP_BOX_AWARD_RESULT_PARA	tmpcode/commond.h	/^const BYTE SEND_LEVELUP_BOX_AWARD_RESULT_PARA = 177;$/;"	v
SEND_LOVERRELATION_PARA	tmpcode/commond.h	/^const BYTE SEND_LOVERRELATION_PARA = 32;$/;"	v
SEND_MAIL_IMAGE_PARA	tmpcode/commond.h	/^const BYTE SEND_MAIL_IMAGE_PARA = 14;$/;"	v
SEND_MAIL_PARA	base/Command.h	/^const BYTE SEND_MAIL_PARA = 3;$/;"	v
SEND_MAIL_PARA	tmpcode/commond.h	/^const BYTE SEND_MAIL_PARA = 3;$/;"	v
SEND_MERCENARYLIST_COUNTRY_CMD	tmpcode/commond.h	30454;"	d
SEND_MERCH_ADVERT_INFO	tmpcode/commond.h	/^const DWORD SEND_MERCH_ADVERT_INFO = 190;$/;"	v
SEND_MUTUAL_GIFT_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SEND_MUTUAL_GIFT_PROPERTY_USERCMD_PARA = 152;$/;"	v
SEND_NEWBOX_RESULT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SEND_NEWBOX_RESULT_USERCMD_PARA = 223;$/;"	v
SEND_OBJ_NEWBOX_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SEND_OBJ_NEWBOX_USERCMD_PARA = 222;$/;"	v
SEND_ONE_ACHIVEMENT_AWARD_INFO_PARA	tmpcode/commond.h	/^const BYTE SEND_ONE_ACHIVEMENT_AWARD_INFO_PARA = 167;$/;"	v
SEND_ONE_LEVEL_EQUIP_AWARD_INFO_PARA	tmpcode/commond.h	/^const BYTE SEND_ONE_LEVEL_EQUIP_AWARD_INFO_PARA = 171;$/;"	v
SEND_QUESTION_GM_USERCMD_PARA	tmpcode/commond.h	22813;"	d
SEND_REPLAYMERCENARYLIST_COUNTRY_CMD	tmpcode/commond.h	30466;"	d
SEND_RESULTLIST_LUORI_PARA	tmpcode/commond.h	/^const BYTE SEND_RESULTLIST_LUORI_PARA = 9;$/;"	v
SEND_SCORE_SEPT_POPO_PARA	tmpcode/commond.h	26498;"	d
SEND_SEPTAD_PARA	tmpcode/commond.h	/^const BYTE SEND_SEPTAD_PARA = 112;$/;"	v
SEND_SEPT_NORMAL_PARA	base/SessionCommand.h	/^    const BYTE SEND_SEPT_NORMAL_PARA = 4;$/;"	v
SEND_SHUDU_PARA	tmpcode/commond.h	/^const BYTE SEND_SHUDU_PARA =2;$/;"	v
SEND_SKILLID_TWILINGHT_CITY_PARA	tmpcode/commond.h	/^const BYTE SEND_SKILLID_TWILINGHT_CITY_PARA = 28;$/;"	v
SEND_SOUND_USERINFO_NEW_PARA	tmpcode/commond.h	/^const BYTE SEND_SOUND_USERINFO_NEW_PARA = 5;$/;"	v
SEND_STATUE_INFO_PARA	tmpcode/commond.h	/^const BYTE SEND_STATUE_INFO_PARA  = 1;$/;"	v
SEND_UNDER_ATTACK_PARA	tmpcode/commond.h	/^const BYTE SEND_UNDER_ATTACK_PARA = 83;$/;"	v
SEND_UNION_NORMAL_PARA	base/SessionCommand.h	/^    const BYTE SEND_UNION_NORMAL_PARA = 3;$/;"	v
SEND_USEFLYSKILL_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SEND_USEFLYSKILL_MAGIC_USERCMD_PARA  =49;$/;"	v
SEND_USER_ARMY_INFO_PARA	base/SessionCommand.h	/^    const BYTE SEND_USER_ARMY_INFO_PARA = 2;$/;"	v
SEND_USER_PART_PARA	tmpcode/commond.h	/^const BYTE SEND_USER_PART_PARA =2;$/;"	v
SEND_USER_SCORE_SEPT_POPO_PARA	tmpcode/commond.h	26571;"	d
SEND_WENMINGNC_INFO_PARA	tmpcode/commond.h	/^const BYTE SEND_WENMINGNC_INFO_PARA = 2;$/;"	v
SENIORBLOOD_TEMP	tmpcode/commond.h	/^	SENIORBLOOD_TEMP = 12156,	\/\/∏ﬂº∂¡˜—™ ¡Ÿ ±$/;"	e	enum:__anon205
SENIORGROUPBLOOD_TEMP	tmpcode/commond.h	/^	SENIORGROUPBLOOD_TEMP = 12157, \/\/∏ﬂº∂»∫ÃÂ¡˜—™ ¡Ÿ ±$/;"	e	enum:__anon205
SEPTCOMPETE_USERCMD	tmpcode/commond.h	/^const BYTE SEPTCOMPETE_USERCMD		= 112;$/;"	v
SEPTGUARDHELP	tmpcode/commond.h	/^const BYTE SEPTGUARDHELP = 149;$/;"	v
SEPTMEMBER_LEAVE_SEPT_PARA	base/Command.h	/^const BYTE SEPTMEMBER_LEAVE_SEPT_PARA = 12;$/;"	v
SEPTMEMBER_LEAVE_SEPT_PARA	tmpcode/commond.h	/^const BYTE SEPTMEMBER_LEAVE_SEPT_PARA = 12;$/;"	v
SEPTSKILL_LIST_USERCMD	tmpcode/commond.h	/^const BYTE SEPTSKILL_LIST_USERCMD = 1;$/;"	v
SEPT_ADD_MEMBER	base/Command.h	/^enum SEPT_ADD_MEMBER{$/;"	g	namespace:Cmd
SEPT_ADD_MEMBER	tmpcode/commond.h	/^enum SEPT_ADD_MEMBER{$/;"	g
SEPT_ANSWER_NO	base/Command.h	/^      SEPT_ANSWER_NO          \/\/ Âê¶ÂÆöÈÇÄËØ∑$/;"	e	enum:Cmd::SEPT_ADD_MEMBER
SEPT_ANSWER_NO	tmpcode/commond.h	/^	SEPT_ANSWER_NO,          \/\/ ∑Ò∂®—˚«Î$/;"	e	enum:SEPT_ADD_MEMBER
SEPT_ANSWER_YES	base/Command.h	/^      SEPT_ANSWER_YES,\/\/ Á°ÆËÆ§ÈÇÄËØ∑$/;"	e	enum:Cmd::SEPT_ADD_MEMBER
SEPT_ANSWER_YES	tmpcode/commond.h	/^	SEPT_ANSWER_YES,        \/\/ »∑»œ—˚«Î$/;"	e	enum:SEPT_ADD_MEMBER
SEPT_BASE_INFO_PARA	base/Command.h	/^const BYTE SEPT_BASE_INFO_PARA = 11;$/;"	v
SEPT_BASE_INFO_PARA	tmpcode/commond.h	/^const BYTE SEPT_BASE_INFO_PARA = 11;$/;"	v
SEPT_BATTLE_USERCMD	tmpcode/commond.h	/^const BYTE SEPT_BATTLE_USERCMD					= 64;$/;"	v
SEPT_CAPPENTER	tmpcode/commond.h	/^	SEPT_CAPPENTER,       \/\/ƒ‹π§«…Ω≥(√ª”–”√µΩ)$/;"	e	enum:__anon262
SEPT_CAVALIER	tmpcode/commond.h	/^	SEPT_CAVALIER,       \/\/Ô⁄≥µºº ¶$/;"	e	enum:__anon262
SEPT_COMMON	tmpcode/commond.h	/^	SEPT_COMMON  = 0,    \/\/◊Â‘±(√ª”–”√µΩ)$/;"	e	enum:__anon262
SEPT_DARE	base/Command.h	/^  SEPT_DARE  = 2,\/\/ ÂÆ∂ÊóèÂØπÊàò$/;"	e	enum:Cmd::__anon120
SEPT_DEFENSE_USERCMD	tmpcode/commond.h	/^const BYTE SEPT_DEFENSE_USERCMD = 130;$/;"	v
SEPT_DOCTOR	tmpcode/commond.h	/^	SEPT_DOCTOR,         \/\/—™ ı ¶$/;"	e	enum:__anon262
SEPT_FIFTH	tmpcode/commond.h	/^	SEPT_FIFTH     =  5          \/\/”∂±¯º“◊Â$/;"	e	enum:__anon260
SEPT_FLAMEN	tmpcode/commond.h	/^	SEPT_FLAMEN,             \/\/º¿Àæ $/;"	e	enum:__anon262
SEPT_FOURTH	tmpcode/commond.h	/^	SEPT_FOURTH    =  4,         \/\/Õı “ ÿŒ¿º“◊Â$/;"	e	enum:__anon260
SEPT_GATHER_PARA	tmpcode/commond.h	/^const BYTE SEPT_GATHER_PARA = 39;$/;"	v
SEPT_GROOM	tmpcode/commond.h	/^	SEPT_GROOM,			 \/\/’Ω≥µºº ¶$/;"	e	enum:__anon262
SEPT_GUARD_STATE_PARA	tmpcode/commond.h	/^const BYTE SEPT_GUARD_STATE_PARA = 58;$/;"	v
SEPT_GUARD_VISIT_PARA	tmpcode/commond.h	/^const BYTE SEPT_GUARD_VISIT_PARA = 55;$/;"	v
SEPT_LUCKMAN	tmpcode/commond.h	/^	SEPT_LUCKMAN,        \/\/–“‘À…Ò÷Æ◊”$/;"	e	enum:__anon262
SEPT_MASTER	tmpcode/commond.h	/^	SEPT_MASTER,         \/\/◊Â≥§$/;"	e	enum:__anon262
SEPT_MEMBER_STATUS_ALIASCHANGE	base/Command.h	/^     SEPT_MEMBER_STATUS_ALIASCHANGE,\/\/ Êõ¥ÊîπÂà´Âêç$/;"	e	enum:Cmd::__anon128
SEPT_MEMBER_STATUS_ALIASCHANGE	tmpcode/commond.h	/^	SEPT_MEMBER_STATUS_ALIASCHANGE,     \/\/ ∏¸∏ƒ±√˚$/;"	e	enum:__anon261
SEPT_MEMBER_STATUS_FIRE	base/Command.h	/^     SEPT_MEMBER_STATUS_FIRE,    \/\/ ÂÆ∂ÊóèÊàêÂëòË¢´ÂºÄÈô§$/;"	e	enum:Cmd::__anon128
SEPT_MEMBER_STATUS_FIRE	tmpcode/commond.h	/^	SEPT_MEMBER_STATUS_FIRE,            \/\/ º“◊Â≥…‘±±ªø™≥˝$/;"	e	enum:__anon261
SEPT_MEMBER_STATUS_NEWMEMBER	base/Command.h	/^     SEPT_MEMBER_STATUS_NEWMEMBER,\/\/ Êñ∞Â¢ûÂä†ÂÆ∂ÊóèÊàêÂëò$/;"	e	enum:Cmd::__anon128
SEPT_MEMBER_STATUS_NEWMEMBER	tmpcode/commond.h	/^	SEPT_MEMBER_STATUS_NEWMEMBER,       \/\/ –¬‘ˆº”º“◊Â≥…‘±$/;"	e	enum:__anon261
SEPT_MEMBER_STATUS_OFFLINE	base/Command.h	/^     SEPT_MEMBER_STATUS_OFFLINE, \/\/ ÂÆ∂ÊóèÊàêÂëò‰∏ãÁ∫ø$/;"	e	enum:Cmd::__anon128
SEPT_MEMBER_STATUS_OFFLINE	tmpcode/commond.h	/^	SEPT_MEMBER_STATUS_OFFLINE,         \/\/ º“◊Â≥…‘±œ¬œﬂ$/;"	e	enum:__anon261
SEPT_MEMBER_STATUS_ONLINE	base/Command.h	/^     SEPT_MEMBER_STATUS_ONLINE,  \/\/ ÂÆ∂ÊóèÊàêÂëò‰∏äÁ∫ø$/;"	e	enum:Cmd::__anon128
SEPT_MEMBER_STATUS_ONLINE	tmpcode/commond.h	/^	SEPT_MEMBER_STATUS_ONLINE,          \/\/ º“◊Â≥…‘±…œœﬂ$/;"	e	enum:__anon261
SEPT_MEM_NAMESIZE	tmpcode/commond.h	/^const BYTE SEPT_MEM_NAMESIZE = 16;$/;"	v
SEPT_NAME_SING_TYPE	tmpcode/commond.h	/^	SEPT_NAME_SING_TYPE,    \/\/º“◊Â“˜≥™$/;"	e	enum:__anon282
SEPT_NPC_DARE	base/Command.h	/^  SEPT_NPC_DARE   = 3,\/\/ ÂÆ∂ÊóèNPC‰∫âÂ§∫Êàò$/;"	e	enum:Cmd::__anon120
SEPT_PLACE_SET	tmpcode/commond.h	/^const BYTE  SEPT_PLACE_SET= 60;$/;"	v
SEPT_POLICE	tmpcode/commond.h	/^	SEPT_POLICE,         \/\/…Ò •ª§Œ¿$/;"	e	enum:__anon262
SEPT_POPO_USERCMD	tmpcode/commond.h	/^const BYTE SEPT_POPO_USERCMD = 138;$/;"	v
SEPT_POSITION_SET	tmpcode/commond.h	/^const BYTE  SEPT_POSITION_SET= 87;$/;"	v
SEPT_PRAC_RESULT_CHALLENGE_PARA	tmpcode/commond.h	22040;"	d
SEPT_PREPARETIME_CHALLENGE_PARA	tmpcode/commond.h	22072;"	d
SEPT_QUESTION	base/Command.h	/^      SEPT_QUESTION,  \/\/ ÂèëÂá∫ÈÇÄËØ∑Êüê‰∫∫ÁöÑËØ¢ÈóÆ$/;"	e	enum:Cmd::SEPT_ADD_MEMBER
SEPT_QUESTION	tmpcode/commond.h	/^	SEPT_QUESTION,          \/\/ ∑¢≥ˆ—˚«Îƒ≥»Àµƒ—ØŒ $/;"	e	enum:SEPT_ADD_MEMBER
SEPT_SCORE_SC_PARA	tmpcode/commond.h	/^const BYTE SEPT_SCORE_SC_PARA = 17;$/;"	v
SEPT_SECOND	tmpcode/commond.h	/^	SEPT_SECOND    =  2,         \/\/Õı “«◊Œ¿º“◊Â$/;"	e	enum:__anon260
SEPT_SEC_MASTER	tmpcode/commond.h	/^	SEPT_SEC_MASTER,     \/\/∏±◊Â≥§$/;"	e	enum:__anon262
SEPT_STATUS_CHECK_PARA	base/Command.h	/^const BYTE SEPT_STATUS_CHECK_PARA = 1;$/;"	v
SEPT_THIRD	tmpcode/commond.h	/^	SEPT_THIRD     =  3,         \/\/Õı “Ω¸Œ¿º“◊Â     $/;"	e	enum:__anon260
SEPT_TOP	tmpcode/commond.h	/^	SEPT_TOP       =  1,         \/\/Õı “”˘”√º“◊Â$/;"	e	enum:__anon260
SEPT_USERCMD	base/CmdType.h	/^const BYTE SEPT_USERCMD      = 27;$/;"	v
SEPT_USERCMD	tmpcode/commond.h	/^const BYTE SEPT_USERCMD			= 27;$/;"	v
SEPT_VOTE	tmpcode/commond.h	/^	SEPT_VOTE = 0,$/;"	e	enum:RECALL_VOTE_TYPE
SEQ_KILL_WEEKEND_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE SEQ_KILL_WEEKEND_ZHENXUAN_PARA = 18;$/;"	v
SEQ_MAX_LENGTH	base/UserCommand.h	/^    const int SEQ_MAX_LENGTH = 32;    \/\/‰∫§ÊòìÂ∫èÂàóÂè∑ÈïøÂ∫¶$/;"	v
SERVER_ID	ScenesServer/Quest.cpp	/^int UserVar::SERVER_ID = 0;$/;"	m	class:UserVar
SERVER_ID	ScenesServer/Quest.h	/^  static int SERVER_ID;$/;"	m	class:GlobalVarImpl
SERVER_ID	ScenesServer/Quest.h	/^  static int SERVER_ID;$/;"	m	class:UserVar
SERVER_ID	ScenesServer/Quest.h	/^int GlobalVarImpl<dummy>::SERVER_ID = 0;$/;"	m	class:GlobalVarImpl
SERVER_KOKOPTION_PARA	tmpcode/commond.h	/^const BYTE SERVER_KOKOPTION_PARA =125;$/;"	v
SERVER_RETURN_COUNTRY_INFO	base/Command.h	/^const BYTE SERVER_RETURN_COUNTRY_INFO = 12;$/;"	v
SERVER_RETURN_COUNTRY_INFO	tmpcode/commond.h	/^const BYTE SERVER_RETURN_COUNTRY_INFO = 12;$/;"	v
SERVER_RETURN_LOGIN_FAILED	base/Command.h	/^const BYTE SERVER_RETURN_LOGIN_FAILED = 3;$/;"	v
SERVER_RETURN_LOGIN_FAILED	tmpcode/commond.h	/^const BYTE SERVER_RETURN_LOGIN_FAILED = 3;$/;"	v
SERVER_RETURN_LOGIN_OK	base/Command.h	/^const BYTE SERVER_RETURN_LOGIN_OK = 4;$/;"	v
SERVER_RETURN_LOGIN_OK	tmpcode/commond.h	/^const BYTE SERVER_RETURN_LOGIN_OK = 4;$/;"	v
SERVER_RETURN_SEPT_CREATE_FAILED	base/Command.h	/^const BYTE SERVER_RETURN_SEPT_CREATE_FAILED = 3;$/;"	v
SERVER_RETURN_SEPT_CREATE_FAILED	tmpcode/commond.h	/^const BYTE SERVER_RETURN_SEPT_CREATE_FAILED = 3;$/;"	v
SERVER_RETURN_UNION_CREATE_FAILED	base/Command.h	/^const BYTE SERVER_RETURN_UNION_CREATE_FAILED = 3;$/;"	v
SERVER_RETURN_UNION_CREATE_FAILED	tmpcode/commond.h	/^const BYTE SERVER_RETURN_UNION_CREATE_FAILED = 3;$/;"	v
SERVER_STATE	GatewayServer/GatewayServer.h	/^enum SERVER_STATE $/;"	g
SERVER_STATE	base/Command.h	/^enum SERVER_STATE $/;"	g	namespace:Cmd
SERVER_TYPE	GatewayServer/GatewayServer.h	/^enum SERVER_TYPE$/;"	g
SERVER_TYPE	base/Command.h	/^enum SERVER_TYPE$/;"	g	namespace:Cmd
SERVICE_AUCTION	base/SessionCommand.h	/^    const DWORD SERVICE_AUCTION = 2;$/;"	v
SERVICE_HORSE	base/SessionCommand.h	/^    const DWORD SERVICE_HORSE = 8;$/;"	v
SERVICE_MAIL	base/SessionCommand.h	/^    const DWORD SERVICE_MAIL = 1;$/;"	v
SERVICE_PROCESS	base/SessionCommand.h	/^    const DWORD SERVICE_PROCESS = 4;$/;"	v
SESSIONCHECK_DB_FAILURE	FLServer/DBAccessCommand.h	/^      SESSIONCHECK_DB_FAILURE = 1,$/;"	e	enum:Cmd::DBAccess::__anon4
SESSIONCHECK_PWD_FAILURE	FLServer/DBAccessCommand.h	/^      SESSIONCHECK_PWD_FAILURE = 2$/;"	e	enum:Cmd::DBAccess::__anon4
SESSIONCHECK_SUCCESS	FLServer/DBAccessCommand.h	/^      SESSIONCHECK_SUCCESS = 0,$/;"	e	enum:Cmd::DBAccess::__anon4
SESSIONSERVER	base/zMisc.h	/^	SESSIONSERVER  =  20, \/** ‰ºöËØùÊúçÂä°Âô® *\/$/;"	e	enum:ServerType
SET	tmpcode/commond.h	/^	SET   = 4,  \/\/ …Ë÷√ $/;"	e	enum:MERCH_STATE
SETAI_PET_PARA	base/Command.h	/^const BYTE SETAI_PET_PARA = 1;$/;"	v
SETAI_PET_PARA	tmpcode/commond.h	/^const BYTE SETAI_PET_PARA = 1;  $/;"	v
SETCOUNTRY_DARE_PARA	base/Command.h	/^const BYTE SETCOUNTRY_DARE_PARA = 17;$/;"	v
SETFORCE_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SETFORCE_DATA_USERCMD_PARA = 128;$/;"	v
SETHPANDMP_DATA_USERCMD_PARA	base/Command.h	/^const BYTE SETHPANDMP_DATA_USERCMD_PARA = 3;$/;"	v
SETHPANDMP_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SETHPANDMP_DATA_USERCMD_PARA = 3;$/;"	v
SETLINGLI_LINGQI_PARA	tmpcode/commond.h	24718;"	d
SETMASTERPOWER	base/Union.h	28;"	d
SETMASTERPOWER_WD	base/Union.h	61;"	d
SETMEMBERPOWER	base/Union.h	26;"	d
SETMEMBERPOWER_WD	base/Union.h	50;"	d
SETREQ_SHIKONGCHUANSONG_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SETREQ_SHIKONGCHUANSONG_USERCMD_PARA = 65;$/;"	v
SETSECONDPOWER	base/Union.h	40;"	d
SETSKILL_PET_PARA	tmpcode/commond.h	/^const BYTE SETSKILL_PET_PARA = 31;$/;"	v
SETSTATE_MAPSCREEN_USERCMD_PARA	base/Command.h	/^const BYTE SETSTATE_MAPSCREEN_USERCMD_PARA = 63;$/;"	v
SETSTATE_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SETSTATE_MAPSCREEN_USERCMD_PARA = 63;$/;"	v
SETTARGET_PET_PARA	base/Command.h	/^const BYTE SETTARGET_PET_PARA = 11;$/;"	v
SETTARGET_PET_PARA	tmpcode/commond.h	/^const BYTE SETTARGET_PET_PARA = 11;$/;"	v
SETTAX_COUNTRY_PARA	base/Command.h	/^const BYTE SETTAX_COUNTRY_PARA = 14;$/;"	v
SETTIME_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SETTIME_PROPERTY_USERCMD_PARA = 153;$/;"	v
SET_AUTO_INTO_TEAM	tmpcode/commond.h	/^const BYTE SET_AUTO_INTO_TEAM = 65;$/;"	v
SET_CHAT_DRAGON_PARA	tmpcode/commond.h	/^const BYTE SET_CHAT_DRAGON_PARA = 20;$/;"	v
SET_CITYDARE_THIRD_LEVEL	tmpcode/commond.h	/^const BYTE SET_CITYDARE_THIRD_LEVEL = 119;$/;"	v
SET_CITY_GUARD_PARA	tmpcode/commond.h	/^const BYTE SET_CITY_GUARD_PARA = 6;$/;"	v
SET_DANCER_PARA	tmpcode/commond.h	/^const BYTE SET_DANCER_PARA = 3;$/;"	v
SET_DANCER_PROFILE_PARA	tmpcode/commond.h	/^const BYTE SET_DANCER_PROFILE_PARA = 9;$/;"	v
SET_DECAY_FOR_FRIEND_LINGQI_PARA	tmpcode/commond.h	/^const BYTE SET_DECAY_FOR_FRIEND_LINGQI_PARA = 16;$/;"	v
SET_ELEMENT_SHIFT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SET_ELEMENT_SHIFT_USERCMD_PARA = 63;$/;"	v
SET_FIGHT_LINGQI_PARA	tmpcode/commond.h	20669;"	d
SET_GEMSTATE_SCENE_PARA	base/SessionCommand.h	/^    const BYTE SET_GEMSTATE_SCENE_PARA = 3;$/;"	v
SET_GRECOMMEND_PARA	tmpcode/commond.h	28690;"	d
SET_HP_TANK_PARA	tmpcode/commond.h	/^const BYTE SET_HP_TANK_PARA = 18;$/;"	v
SET_MARRIAGE_INTERACTION_PARA	tmpcode/commond.h	/^const BYTE SET_MARRIAGE_INTERACTION_PARA = 10;$/;"	v
SET_NEED_ADDIT_UNIONMERCH	tmpcode/commond.h	/^const BYTE SET_NEED_ADDIT_UNIONMERCH = 212;$/;"	v
SET_NEW_NUMPASSWD_PARA	tmpcode/commond.h	28938;"	d
SET_NO	tmpcode/commond.h	/^	 SET_NO = 0,$/;"	e	enum:__anon295
SET_OBJECT_RIGHT_SEPT_STORE	tmpcode/commond.h	/^const BYTE SET_OBJECT_RIGHT_SEPT_STORE = 142;$/;"	v
SET_OFFLINEEXP_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SET_OFFLINEEXP_PROPERTY_USERCMD_PARA = 156;$/;"	v
SET_POSITION	tmpcode/commond.h	/^        SET_POSITION			= 0,			\/\/\/ »Œ√¸÷∞ŒÒ$/;"	e	enum:POSTIONOP
SET_RECOMMEND_PARA	base/Command.h	9096;"	d
SET_SAFETY_DETAIL_PARA	tmpcode/commond.h	29060;"	d
SET_SEPT_MANTEAU	tmpcode/commond.h	/^const BYTE SET_SEPT_MANTEAU = 85;$/;"	v
SET_SPONSER_CALLBACK_PARA	tmpcode/commond.h	/^const BYTE SET_SPONSER_CALLBACK_PARA = 1;$/;"	v
SET_STABLE_HORSE_NAME_PARA	tmpcode/commond.h	/^const BYTE SET_STABLE_HORSE_NAME_PARA = 25;$/;"	v
SET_SUIT_PROPERTY_USERCMD_PARA	tmpcode/commond.h	17741;"	d
SET_TABKEY_PROPERTY_USERCMD_PARA	tmpcode/commond.h	24126;"	d
SET_TABKEY_SELECTED_ID_USERCMD_PARA	tmpcode/commond.h	24158;"	d
SET_TECH_SEARCH_PARA	base/Command.h	5173;"	d
SET_TEMP_UNSAFETY_PARA	tmpcode/commond.h	28983;"	d
SET_TEXT_LTQ_PARA	tmpcode/commond.h	24455;"	d
SET_TIME_LIMIT	tmpcode/commond.h	/^	 SET_TIME_LIMIT$/;"	e	enum:__anon296
SET_UNION_CITY_TAX	tmpcode/commond.h	/^const BYTE SET_UNION_CITY_TAX = 105;$/;"	v
SET_UNION_MANTEAU	tmpcode/commond.h	/^const BYTE SET_UNION_MANTEAU = 39;$/;"	v
SET_UNION_MEMBER_POWER	base/Command.h	/^  SET_UNION_MEMBER_POWER,\/\/  ËÆæÁΩÆÊüêÂ∏Æ‰ºóÊùÉÈôê$/;"	e	enum:Cmd::__anon106
SET_UNION_MEMBER_POWER	tmpcode/commond.h	/^	SET_UNION_MEMBER_POWER	    \/\/  …Ë÷√ƒ≥∞Ô÷⁄»®œﬁ$/;"	e	enum:__anon266
SET_UNION_MEMBER_RANK	tmpcode/commond.h	/^const BYTE SET_UNION_MEMBER_RANK = 103;$/;"	v
SET_UNION_MEMBER_RANK_NAME	tmpcode/commond.h	/^const BYTE SET_UNION_MEMBER_RANK_NAME = 104;$/;"	v
SET_UNION_MERCH_INFO	tmpcode/commond.h	/^const BYTE SET_UNION_MERCH_INFO = 157;$/;"	v
SET_UNION_RESIDENT_HIRE_MONEY	tmpcode/commond.h	/^const BYTE SET_UNION_RESIDENT_HIRE_MONEY = 123;         $/;"	v
SET_UNION_RESOURCE_ASSIGN	tmpcode/commond.h	/^const BYTE SET_UNION_RESOURCE_ASSIGN = 173;$/;"	v
SET_UP_HORSE_AUTO_EAT_GRASS_PARA	tmpcode/commond.h	/^const BYTE SET_UP_HORSE_AUTO_EAT_GRASS_PARA = 42;$/;"	v
SET_YES	tmpcode/commond.h	/^	 SET_YES =1$/;"	e	enum:__anon295
SEVEN_DRAGON_BALLS_AWARD_PARA	tmpcode/commond.h	/^const BYTE SEVEN_DRAGON_BALLS_AWARD_PARA = 218;$/;"	v
SHENGSHEN_ZHILIAO	tmpcode/commond.h	/^	SHENGSHEN_ZHILIAO=11302,\/\/…Ò •÷Œ¡∆$/;"	e	enum:__anon205
SHENG_YAN_SHU_MO	tmpcode/commond.h	/^	SHENG_YAN_SHU_MO = 258,\/\/ •—‘ ı£®ƒß£©$/;"	e	enum:__anon205
SHENG_YAN_SHU_WU	tmpcode/commond.h	/^	SHENG_YAN_SHU_WU = 208,\/\/ •—‘ ı£®ŒÔ£©$/;"	e	enum:__anon205
SHENYU_REWARD	tmpcode/commond.h	/^	SHENYU_REWARD=100,              \/\/…Ò‘§Ω±¿¯$/;"	e	enum:__anon209
SHIKAN_CHENGZHU	tmpcode/commond.h	/^	 SHIKAN_CHENGZHU,     \/\/ ∑ø≤≤º¿◊≥«≥«÷˜   $/;"	e	enum:__anon215
SHIKAN_CITY_ID	tmpcode/commond.h	/^const DWORD SHIKAN_CITY_ID = 1001;		\/\/ ∑ø≤≤º¿◊≥«$/;"	v
SHIKAN_KING	tmpcode/commond.h	/^	 SHIKAN_KING,            \/\/\/  ∑ø≤≤º¿◊≥«≥«÷˜+ΩÁÕı$/;"	e	enum:__anon215
SHITU_FOOD	tmpcode/commond.h	/^	SHITU_FOOD,							 \/\/ ¶∏µÕΩµ‹√¿ ≥$/;"	e	enum:__anon209
SHI_XUE_LIAN_JI	tmpcode/commond.h	/^	SHI_XUE_LIAN_JI = 1105,\/\/ »—™¡¨ª˜$/;"	e	enum:__anon205
SHOP_MEETING	tmpcode/commond.h	/^enum SHOP_MEETING$/;"	g
SHOULIE_ENTER_PARA	tmpcode/commond.h	/^const BYTE SHOULIE_ENTER_PARA = 145;$/;"	v
SHOULIE_REQ_SCORELIST_PARA	tmpcode/commond.h	/^const BYTE SHOULIE_REQ_SCORELIST_PARA = 148;$/;"	v
SHOULIE_SCORELIST_PARA	tmpcode/commond.h	/^const BYTE SHOULIE_SCORELIST_PARA = 147;$/;"	v
SHOULIE_TIMER_PARA	tmpcode/commond.h	/^const BYTE SHOULIE_TIMER_PARA = 146;$/;"	v
SHOWBACKINFO	tmpcode/commond.h	/^const BYTE SHOWBACKINFO = 17;$/;"	v
SHOWCODE	base/SceneCommand.h	/^      SHOWCODE$/;"	e	enum:Cmd::Scene::ChangeVerifyVersionOper
SHOW_ALLSKILL_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SHOW_ALLSKILL_USERCMD_PARA  =203;$/;"	v
SHOW_ALLUSER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SHOW_ALLUSER_USERCMD_PARA =206;$/;"	v
SHOW_BOMB_EFFECT_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE SHOW_BOMB_EFFECT_USERCMD_PARA = 41;$/;"	v
SHOW_EFFECT_WHEN_FLOWER_EGG	tmpcode/commond.h	/^const BYTE SHOW_EFFECT_WHEN_FLOWER_EGG = 22;$/;"	v
SHOW_EQUIP_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SHOW_EQUIP_USERCMD_PARA = 202;$/;"	v
SHOW_FLOWER_EFFECT_PARA	tmpcode/commond.h	/^const BYTE SHOW_FLOWER_EFFECT_PARA = 150;$/;"	v
SHOW_GUARD_POSITION_USER_CMD	tmpcode/commond.h	/^const BYTE SHOW_GUARD_POSITION_USER_CMD = 59;	\/\/client -> server.  Ô⁄≥µŒª÷√≤È—Ø$/;"	v
SHOW_HELP_UNION_PARA	tmpcode/commond.h	/^const BYTE SHOW_HELP_UNION_PARA = 65;$/;"	v
SHOW_HORSE_SKILL_PARA	tmpcode/commond.h	/^const BYTE SHOW_HORSE_SKILL_PARA = 40;$/;"	v
SHOW_MAGIC_EFFECT_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE SHOW_MAGIC_EFFECT_USERCMD_PARA = 40;$/;"	v
SHOW_MARRY_ICON_PARA	tmpcode/commond.h	/^const BYTE SHOW_MARRY_ICON_PARA = 21;$/;"	v
SHOW_MATERIAL_HORSES_AND_SKILLS_PARA	tmpcode/commond.h	/^const BYTE SHOW_MATERIAL_HORSES_AND_SKILLS_PARA = 45;$/;"	v
SHOW_MAXLEVEL_IOCN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SHOW_MAXLEVEL_IOCN_USERCMD_PARA = 6;$/;"	v
SHOW_NOW_HORSE_SOUL_ENERGY_PARA	tmpcode/commond.h	/^const BYTE SHOW_NOW_HORSE_SOUL_ENERGY_PARA = 34;$/;"	v
SHOW_PERSON_TASK_USRE_CMD	tmpcode/commond.h	/^const BYTE SHOW_PERSON_TASK_USRE_CMD = 61;$/;"	v
SHOW_SCORE_SEPT_BATTLE_PARA	tmpcode/commond.h	13830;"	d
SHOW_SHIKONGCHUANSONG_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SHOW_SHIKONGCHUANSONG_USERCMD_PARA = 64;$/;"	v
SHOW_SING_PARA	tmpcode/commond.h	/^const BYTE SHOW_SING_PARA = 1;$/;"	v
SHOW_TIP_USER_CMD	tmpcode/commond.h	/^const BYTE SHOW_TIP_USER_CMD    = 53;$/;"	v
SHOW_VIGOURVALUE_QUEST_PARA	tmpcode/commond.h	/^const BYTE SHOW_VIGOURVALUE_QUEST_PARA = 8;$/;"	v
SHOW_WINDOW_USER_CMD	tmpcode/commond.h	/^const BYTE SHOW_WINDOW_USER_CMD    = 54;$/;"	v
SHUDU_USERCMD	tmpcode/commond.h	/^const BYTE SHUDU_USERCMD = 110;$/;"	v
SIGN_MAXLEVEL_LIMIT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SIGN_MAXLEVEL_LIMIT_USERCMD_PARA = 5;$/;"	v
SILK	base/Command.h	/^  SILK  =3,\/\/‰∏ùÁª∏$/;"	e	enum:Cmd::__anon102
SIMPLE_INFO_CHALLENGE_PARA	tmpcode/commond.h	21945;"	d
SIMULATE_HORSE_DATA_PARA	tmpcode/commond.h	/^const BYTE SIMULATE_HORSE_DATA_PARA = 29;$/;"	v
SIMULATE_LINGQI_PARA	tmpcode/commond.h	27108;"	d
SIMULATE_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SIMULATE_MAGIC_USERCMD_PARA  =46;$/;"	v
SINGLE_DANCE	tmpcode/commond.h	/^        SINGLE_DANCE,           \/\/µ•»ÀŒË$/;"	e	enum:enumDanceType
SINGLE_DANCE_EDIT	tmpcode/commond.h	/^        SINGLE_DANCE_EDIT,      \/\/◊‘±‡µ•»ÀŒË$/;"	e	enum:enumDanceType
SINGLE_FIREDANCE	tmpcode/commond.h	/^	SINGLE_FIREDANCE=21,   \/\/µ•»Àª—Ê÷ÆŒË$/;"	e	enum:enumDanceNO
SINGLE_FREEDANCE	tmpcode/commond.h	/^	SINGLE_FREEDANCE=4,    \/\/µ•»À◊‘”…ŒË$/;"	e	enum:enumDanceNO
SINGLE_MODENDANCE	tmpcode/commond.h	/^	SINGLE_MODENDANCE=11,  \/\/µ•»Àœ÷¥˙ŒË$/;"	e	enum:enumDanceNO
SINGLE_SELECT_QUEST_PARA	tmpcode/commond.h	/^const BYTE SINGLE_SELECT_QUEST_PARA = 5;$/;"	v
SINGLE_SELFEDIT1	tmpcode/commond.h	/^	SINGLE_SELFEDIT1=0,    \/\/µ•»À±‡º≠ŒË≤Ω1$/;"	e	enum:enumDanceNO
SINGLE_SELFEDIT2	tmpcode/commond.h	/^	SINGLE_SELFEDIT2=1,    \/\/µ•»À±‡º≠ŒË≤Ω2$/;"	e	enum:enumDanceNO
SING_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SING_MAGIC_USERCMD_PARA = 34;$/;"	v
SING_USERCMD	tmpcode/commond.h	/^const BYTE SING_USERCMD = 125;\/\/lsj 08-10-13$/;"	v
SITDOWN_CHAIR_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SITDOWN_CHAIR_USERCMD_PARA = 37;$/;"	v
SITDOWN_MOVE_USERCMD_PARA	base/Command.h	/^const BYTE SITDOWN_MOVE_USERCMD_PARA = 33;$/;"	v
SITDOWN_MOVE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SITDOWN_MOVE_USERCMD_PARA = 35;$/;"	v
SIVER	base/Command.h	/^  SIVER =2,\/\/Èì∂$/;"	e	enum:Cmd::__anon102
SKBL_CITY	tmpcode/commond.h	/^        SKBL_CITY = 0,$/;"	e	enum:SHOP_MEETING
SKILL	ScenesServer/zObject.h	/^  typedef std::map<WORD,WORD> SKILL;$/;"	t	class:Equips
SKILL1_PACK	ScenesServer/zCard.h	/^      SKILL1_PACK = 64,$/;"	e	enum:CardSlots::__anon197
SKILL2_PACK	ScenesServer/zCard.h	/^      SKILL2_PACK = 128,$/;"	e	enum:CardSlots::__anon197
SKILLSTATENUMBER	ScenesServer/SkillStatusManager.h	42;"	d
SKILL_ACTIVE	ScenesServer/SkillStatusManager.h	/^  SKILL_ACTIVE  =  1,\/\/  Âä†Âà∞Ê¥ªÂä®MAP‰∏≠$/;"	e	enum:__anon166
SKILL_BAD	ScenesServer/SkillStatusManager.h	/^  SKILL_BAD=1$/;"	e	enum:__anon164
SKILL_BREAK	ScenesServer/SkillStatusManager.h	/^  SKILL_BREAK,    \/\/  ‰∏çÁªßÁª≠ÊäïÊîæÊìç‰Ωú$/;"	e	enum:__anon166
SKILL_ELEMENTSHIFT	tmpcode/commond.h	/^	SKILL_ELEMENTSHIFT = 22306, \/\/…ÒπŸ2◊™ººƒ‹ ‘™Àÿ◊™“∆$/;"	e	enum:__anon205
SKILL_ESSSEAL	tmpcode/commond.h	/^	SKILL_ESSSEAL = 22304, \/\/…ÒπŸ2◊™ººƒ‹ ‘™Àÿæ´ Ø∑‚”°$/;"	e	enum:__anon205
SKILL_GOOD	ScenesServer/SkillStatusManager.h	/^  SKILL_GOOD=0,$/;"	e	enum:__anon164
SKILL_PASSIVENESS	ScenesServer/SkillStatusManager.h	/^  SKILL_PASSIVENESS,  \/\/  Âä†Âà∞Ê∞∏‰πÖË¢´Âä®MAP‰∏≠$/;"	e	enum:__anon166
SKILL_RECOVERY	ScenesServer/SkillStatusManager.h	/^  SKILL_RECOVERY,    \/\/  Âä†Âà∞‰∏¥Êó∂Ë¢´Âä®MAP‰∏≠$/;"	e	enum:__anon166
SKILL_RETURN	ScenesServer/SkillStatusManager.h	/^  SKILL_RETURN,    \/\/  ‰∏çÂä†Âà∞‰ªª‰ΩïMAP‰∏≠$/;"	e	enum:__anon166
SKILL_SHIKONGTRANS	tmpcode/commond.h	/^	SKILL_SHIKONGTRANS = 13206, \/\/’ΩŒ◊  ±ø’¥´ÀÕ$/;"	e	enum:__anon205
SKILL_SING_TYPE	tmpcode/commond.h	/^	SKILL_SING_TYPE,        \/\/ººƒ‹“˜≥™$/;"	e	enum:__anon281
SKILL_STONESEAL	tmpcode/commond.h	/^	SKILL_STONESEAL = 22302, \/\/…ÒπŸ2◊™ººƒ‹ ‘™Àÿ±¶ Ø∑‚”°$/;"	e	enum:__anon205
SKILL_TYPE_INITIAVITE	ScenesServer/SkillStatusManager.h	/^  SKILL_TYPE_INITIAVITE=1,\/\/ ÊîªÂáªÊäÄËÉΩ$/;"	e	enum:__anon165
SKILL_TYPE_PASSIVENESS	ScenesServer/SkillStatusManager.h	/^  SKILL_TYPE_PASSIVENESS=3  \/\/ Ê∞∏‰πÖË¢´Âä®ÊäÄËÉΩ$/;"	e	enum:__anon165
SKILL_TYPE_RECOVERY	ScenesServer/SkillStatusManager.h	/^  SKILL_TYPE_RECOVERY=2,  \/\/ ‰∏¥Êó∂Ë¢´Âä®ÊäÄËÉΩ$/;"	e	enum:__anon165
SOCKET_MAXNUM	base/zType.h	82;"	d
SORTUSEROBJECT_PROPERTY_USERCMD_PARAMETER	base/Command.h	2591;"	d
SORTUSEROBJECT_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	21220;"	d
SOTCK_MIN_NUM	BillServer/BillUser.cpp	1094;"	d
SOTCK_TAX	BillServer/BillUser.cpp	1095;"	d
SOUND_EFFECT_LUORI_PARA	tmpcode/commond.h	/^const BYTE SOUND_EFFECT_LUORI_PARA=5;           $/;"	v
SOUND_USERCMD	tmpcode/commond.h	/^const BYTE SOUND_USERCMD = 153;$/;"	v
SPAMap	base/zType.h	/^    SPAMap = 0,\/\/Œ¬»™µÿÕº$/;"	e	enum:taskType
SPECIAL_FEED	tmpcode/commond.h	/^        SPECIAL_FEED    = 4,    \/\/Ãÿ ‚Œπ—¯$/;"	e	enum:DRAGON_DATA_TYPE
SPECIAL_TYPE_EQSUIT_CHANGE	tmpcode/commond.h	/^	SPECIAL_TYPE_EQSUIT_CHANGE,	\/\/ ªª◊∞≥…π¶$/;"	e	enum:__anon250
SPECIAL_USERCMD	tmpcode/commond.h	/^const BYTE SPECIAL_USERCMD		= 51;$/;"	v
SPEC_BUFF	ScenesServer/Skill.h	/^	SPEC_BUFF		= 32,	\/\/sky ÊúâÁõäBUFF$/;"	e	enum:__anon161
SPEC_DEBUFF	ScenesServer/Skill.h	/^	SPEC_DEBUFF		= 64,	\/\/sky ÂáèÁõäBUFF$/;"	e	enum:__anon161
SPEC_DRUG	ScenesServer/Skill.h	/^	SPEC_DRUG		= 128,	\/\/sky ÊØí$/;"	e	enum:__anon161
SPEC_IMMUNE	ScenesServer/Skill.h	/^	SPEC_IMMUNE		= 4,	\/\/sky ÂèØÂÖçÁñ´$/;"	e	enum:__anon161
SPEC_MAGIC	ScenesServer/Skill.h	/^	SPEC_MAGIC		= 1,	\/\/sky È≠îÊ≥ïÁ±ª$/;"	e	enum:__anon161
SPEC_NULL	ScenesServer/Skill.h	/^	SPEC_NULL		= 0,	\/\/sky Á©∫	$/;"	e	enum:__anon161
SPEC_OTHER	ScenesServer/Skill.h	/^	SPEC_OTHER		= 256,	\/\/sky ÂÖ∂‰ªñ$/;"	e	enum:__anon161
SPEC_PHYSICS	ScenesServer/Skill.h	/^	SPEC_PHYSICS	= 2,	\/\/sky Áâ©ÁêÜÁ±ª$/;"	e	enum:__anon161
SPEC_REBOUND	ScenesServer/Skill.h	/^	SPEC_REBOUND	= 8,	\/\/sky ÂèØË¢´ÂèçÂºπ$/;"	e	enum:__anon161
SPEC_TREATMENT	ScenesServer/Skill.h	/^	SPEC_TREATMENT	= 16,	\/\/sky Ê≤ªÁñó$/;"	e	enum:__anon161
SPLITUSEROBJECT_PROPERTY_USERCMD_PARAMETER	base/Command.h	2537;"	d
SPLITUSEROBJECT_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	4294;"	d
SPLIT_SOCKET	tmpcode/commond.h	4186;"	d
SPONSER_GET_AWARD	tmpcode/commond.h	/^const BYTE SPONSER_GET_AWARD =  5;$/;"	v
SPREAD_AREA_MAX	tmpcode/commond.h	/^	SPREAD_AREA_MAX$/;"	e	enum:SPREAD_AREA_STATE
SPREAD_AREA_STATE	tmpcode/commond.h	/^enum SPREAD_AREA_STATE$/;"	g
SPREAD_FLOWER_BEAUTIFUL	tmpcode/commond.h	/^	SPREAD_FLOWER_BEAUTIFUL,        \/\/\/ ∆Ø¡¡$/;"	e	enum:SPREAD_TYPE_STATE
SPREAD_FLOWER_BRIGHT	tmpcode/commond.h	/^	SPREAD_FLOWER_BRIGHT,           \/\/\/ Ë≠Ë≤$/;"	e	enum:SPREAD_TYPE_STATE
SPREAD_FLOWER_COUNTRY	tmpcode/commond.h	/^	SPREAD_FLOWER_COUNTRY,          \/\/\/ ΩÁ”Ú$/;"	e	enum:SPREAD_AREA_STATE
SPREAD_FLOWER_ERROR	tmpcode/commond.h	/^	SPREAD_FLOWER_ERROR = 0,         \/\/\/ ≥ı º÷µ$/;"	e	enum:SPREAD_AREA_STATE
SPREAD_FLOWER_INIT	tmpcode/commond.h	/^	SPREAD_FLOWER_INIT = 0,         \/\/\/ ≥ı º÷µ$/;"	e	enum:SPREAD_TYPE_STATE
SPREAD_FLOWER_MAY	tmpcode/commond.h	/^	SPREAD_FLOWER_MAY,              \/\/\/ µ±«∞µÿÕº$/;"	e	enum:SPREAD_AREA_STATE
SPREAD_FLOWER_NORMAL	tmpcode/commond.h	/^	SPREAD_FLOWER_NORMAL,           \/\/\/ “ª∞„$/;"	e	enum:SPREAD_TYPE_STATE
SPREAD_FLOWER_PERFECT	tmpcode/commond.h	/^	SPREAD_FLOWER_PERFECT,          \/\/\/ ÕÍ√¿$/;"	e	enum:SPREAD_TYPE_STATE
SPREAD_FLOWER_WORLD	tmpcode/commond.h	/^	SPREAD_FLOWER_WORLD,            \/\/\/  ¿ΩÁ$/;"	e	enum:SPREAD_AREA_STATE
SPREAD_TYPE_MAX	tmpcode/commond.h	/^	SPREAD_TYPE_MAX$/;"	e	enum:SPREAD_TYPE_STATE
SPREAD_TYPE_STATE	tmpcode/commond.h	/^enum SPREAD_TYPE_STATE$/;"	g
SP_WRITEBACK	base/RecordCommand.h	/^      SP_WRITEBACK,\/\/SP$/;"	e	enum:Cmd::Record::enumWriteBackTest_Type
SQWORD	base/zType.h	/^typedef signed long long SQWORD;$/;"	t
SRCS	BillServer/Makefile	/^SRCS = $(OBJS:%.o=%.cpp)$/;"	m
SRCS	FLServer/Makefile	/^SRCS = $(OBJS:%.o=%.cpp)$/;"	m
SRCS	GatewayServer/Makefile	/^SRCS = $(OBJS:%.o=%.cpp)$/;"	m
SRCS	RecordServer/Makefile	/^SRCS = $(OBJS:%.o=%.cpp)$/;"	m
SRCS	Robot/Makefile	/^SRCS = $(OBJS:%.o=%.cpp)$/;"	m
SRCS	ScenesServer/Makefile	/^SRCS = $(OBJS:%.o=%.cpp)$/;"	m
SRCS	SessionServer/Makefile	/^SRCS = $(OBJS:%.o=%.cpp)$/;"	m
SRCS	SuperServer/Makefile	/^SRCS = $(OBJS:%.o=%.cpp)$/;"	m
SRCS	base/EncDec/Makefile	/^SRCS = $(OBJS:%.o=%.cpp)$/;"	m
SRCS	base/Makefile	/^SRCS = $(OBJS:%.o=%.cpp)$/;"	m
SRCS	roleChangeServer/Makefile	/^SRCS = $(OBJS:%.o=%.cpp)$/;"	m
SRCS	roleRegServer/Makefile	/^SRCS = $(OBJS:%.o=%.cpp)$/;"	m
SSTALL_CUSTOMER_BUY	tmpcode/commond.h	5083;"	d
SSTALL_CUSTOMER_LIST_CLOSE	tmpcode/commond.h	5084;"	d
SSTALL_CUSTOMER_VIEW	tmpcode/commond.h	5082;"	d
SSTALL_SEND_OBJECT_TO_SERVER	tmpcode/commond.h	5086;"	d
SSTALL_VENDOR_ADDGOODS	tmpcode/commond.h	5078;"	d
SSTALL_VENDOR_CLOSE	tmpcode/commond.h	5080;"	d
SSTALL_VENDOR_DELGOODS	tmpcode/commond.h	5079;"	d
SSTALL_VENDOR_ENTERAREA	tmpcode/commond.h	5085;"	d
SSTALL_VENDOR_OPEN	tmpcode/commond.h	5076;"	d
SSTALL_VENDOR_RENAME	tmpcode/commond.h	5077;"	d
SSTALL_VENDOR_VIEW	tmpcode/commond.h	5081;"	d
STABLE_DATA_PARA	tmpcode/commond.h	/^const BYTE STABLE_DATA_PARA = 16;$/;"	v
STAMP_CHECK_USERCMD_PARA	base/Command.h	/^const BYTE STAMP_CHECK_USERCMD_PARA = 52;$/;"	v
STAMP_DATA_USERCMD_PARA	base/Command.h	/^const BYTE STAMP_DATA_USERCMD_PARA = 51;$/;"	v
STAMP_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE STAMP_DATA_USERCMD_PARA = 51;$/;"	v
STARSTONECOMP	tmpcode/commond.h	/^			STARSTONECOMP = 17, \/\/∫œ≥……˝–« Ø$/;"	e	enum:ReuildType
STARTQUEST_QUESTROOM_PARA	tmpcode/commond.h	/^const BYTE STARTQUEST_QUESTROOM_PARA = 22;$/;"	v
START_ACCELCMD_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE START_ACCELCMD_PROPERTY_USERCMD_PARA = 147;$/;"	v
START_COLDDOWN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE START_COLDDOWN_USERCMD_PARA =230;$/;"	v
START_COUNT_DOWN_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE START_COUNT_DOWN_MAPSCREEN_USERCMD_PARA = 15;$/;"	v
START_DIG_TREASURE_PARA	tmpcode/commond.h	/^const BYTE START_DIG_TREASURE_PARA = 0;$/;"	v
START_EMPLOY_GATHER	tmpcode/commond.h	16590;"	d
START_NEWGAME_CHALLENGE_PARA	tmpcode/commond.h	22090;"	d
START_PK_LEVEL	tmpcode/commond.h	/^const WORD START_PK_LEVEL = 30;\/\/º∂±µÕ≤ªƒ‹PK$/;"	v
START_QUEST	ScenesServer/QuestEvent.h	/^    START_QUEST = 0,$/;"	e	enum:Event::__anon170
START_SELL_USERCMD_PARAMETER	base/Command.h	4025;"	d
START_SELL_USERCMD_PARAMETER	tmpcode/commond.h	12100;"	d
START_SEPT_POPO_PARA	tmpcode/commond.h	26410;"	d
START_STALL_LEVEL	tmpcode/commond.h	/^const WORD START_STALL_LEVEL = 20;\/\/∞⁄ÃØ$/;"	v
STARUP	tmpcode/commond.h	/^			STARUP = 15,	\/\/…˝–« Ø…˝‘¬$/;"	e	enum:ReuildType
STATE_BEING_GET	tmpcode/commond.h	/^	STATE_BEING_GET$/;"	e	enum:AVATAR_STATE
STATE_BUSY	GatewayServer/GatewayServer.h	/^	STATE_BUSY		=	3, \/\/ ∑±√¶$/;"	e	enum:SERVER_STATE
STATE_BUSY	base/Command.h	/^	STATE_BUSY		=	3, \/\/ ÁπÅÂøô$/;"	e	enum:Cmd::SERVER_STATE
STATE_CANCEL	tmpcode/commond.h	/^	STATE_CANCEL     = 13,   $/;"	e	enum:__anon374
STATE_CAN_APPLY	tmpcode/commond.h	/^	STATE_CAN_APPLY,	\/\/…Í«Î$/;"	e	enum:AVATAR_STATE
STATE_CAN_GET	tmpcode/commond.h	/^	STATE_CAN_GET,	\/\/ø…¡Ï»°$/;"	e	enum:AVATAR_STATE
STATE_DANCER_PARA	tmpcode/commond.h	/^const BYTE STATE_DANCER_PARA = 10;$/;"	v
STATE_END	tmpcode/commond.h	/^	STATE_END        = 12,   $/;"	e	enum:__anon374
STATE_FULL	GatewayServer/GatewayServer.h	/^	STATE_FULL		=	4, \/\/ ±¨¬˙$/;"	e	enum:SERVER_STATE
STATE_FULL	base/Command.h	/^	STATE_FULL		=	4, \/\/ ÁàÜÊª°$/;"	e	enum:Cmd::SERVER_STATE
STATE_GETALL	tmpcode/commond.h	/^	STATE_GETALL     = 11,   $/;"	e	enum:__anon374
STATE_GETTING_1	tmpcode/commond.h	/^	STATE_GETTING_1  = 9,$/;"	e	enum:__anon374
STATE_GETTING_16	tmpcode/commond.h	/^	STATE_GETTING_16 = 1,$/;"	e	enum:__anon374
STATE_GETTING_2	tmpcode/commond.h	/^	STATE_GETTING_2  = 7,$/;"	e	enum:__anon374
STATE_GETTING_4	tmpcode/commond.h	/^	STATE_GETTING_4  = 5,$/;"	e	enum:__anon374
STATE_GETTING_8	tmpcode/commond.h	/^	STATE_GETTING_8  = 3,$/;"	e	enum:__anon374
STATE_GOOD	GatewayServer/GatewayServer.h	/^	STATE_GOOD		=	2, \/\/ ¡º∫√$/;"	e	enum:SERVER_STATE
STATE_GOOD	base/Command.h	/^	STATE_GOOD		=	2, \/\/ ËâØÂ•Ω$/;"	e	enum:Cmd::SERVER_STATE
STATE_NOMARL	GatewayServer/GatewayServer.h	/^	STATE_NOMARL	=	1, \/\/ ’˝≥£$/;"	e	enum:SERVER_STATE
STATE_NOMARL	base/Command.h	/^	STATE_NOMARL	=	1, \/\/ Ê≠£Â∏∏$/;"	e	enum:Cmd::SERVER_STATE
STATE_NONE	tmpcode/commond.h	/^	STATE_NONE = 0,	\/\/≤ªø…¡Ï»°$/;"	e	enum:AVATAR_STATE
STATE_SENDING_1	tmpcode/commond.h	/^	STATE_SENDING_1  = 10,$/;"	e	enum:__anon374
STATE_SENDING_16	tmpcode/commond.h	/^	STATE_SENDING_16 = 2,$/;"	e	enum:__anon374
STATE_SENDING_2	tmpcode/commond.h	/^	STATE_SENDING_2  = 8,$/;"	e	enum:__anon374
STATE_SENDING_4	tmpcode/commond.h	/^	STATE_SENDING_4  = 6,$/;"	e	enum:__anon374
STATE_SENDING_8	tmpcode/commond.h	/^	STATE_SENDING_8  = 4,$/;"	e	enum:__anon374
STATE_SERVICING	GatewayServer/GatewayServer.h	/^	STATE_SERVICING	=	0, \/\/ Œ¨ª§$/;"	e	enum:SERVER_STATE
STATE_SERVICING	base/Command.h	/^	STATE_SERVICING	=	0, \/\/ Áª¥Êä§$/;"	e	enum:Cmd::SERVER_STATE
STATE_WEEK_END	tmpcode/commond.h	/^	STATE_WEEK_END = 3,$/;"	e	enum:__anon376
STATE_WEEK_PLAYING	tmpcode/commond.h	/^	STATE_WEEK_PLAYING = 2,$/;"	e	enum:__anon376
STATE_WEEK_READY	tmpcode/commond.h	/^	STATE_WEEK_READY = 1,$/;"	e	enum:__anon376
STATIC	ScenesServer/Scene.h	/^      STATIC,   \/\/\/ ÈùôÊÄÅÂú∞Âõæ$/;"	e	enum:Scene::SceneType
STATIC	ScenesServer/SceneNpc.h	/^    STATIC,       \/\/\/ ÈùôÊÄÅÁöÑ$/;"	e	enum:SceneNpc::SceneNpcType
STEAL_SOIL_HOUSE_USRECMD	tmpcode/commond.h	/^const BYTE STEAL_SOIL_HOUSE_USRECMD = 24;$/;"	v
STOCK_BILL_USERCMD	base/CmdType.h	/^const BYTE STOCK_BILL_USERCMD    = 39;$/;"	v
STOCK_BILL_USERCMD	tmpcode/commond.h	/^const BYTE STOCK_BILL_USERCMD       = 39;$/;"	v
STOCK_CANCEL_ERROR	base/Command.h	/^  STOCK_CANCEL_ERROR,$/;"	e	enum:Cmd::__anon136
STOCK_CANCEL_ERROR	tmpcode/commond.h	/^	STOCK_CANCEL_ERROR,$/;"	e	enum:__anon352
STOCK_CANCEL_OK	base/Command.h	/^  STOCK_CANCEL_OK,$/;"	e	enum:Cmd::__anon136
STOCK_CANCEL_OK	tmpcode/commond.h	/^	STOCK_CANCEL_OK,$/;"	e	enum:__anon352
STOCK_CHANGE_OK	base/Command.h	/^  STOCK_CHANGE_OK,\/\/\/ ‰øÆÊîπÂØÜÁ†Å$/;"	e	enum:Cmd::__anon135
STOCK_CHANGE_OK	tmpcode/commond.h	/^	STOCK_CHANGE_OK,    \/\/\/ –ﬁ∏ƒ√‹¬Î$/;"	e	enum:__anon351
STOCK_DIFF	base/Command.h	/^  STOCK_DIFF,\/\/\/ ‰∏§Ê¨°ËæìÂÖ•ÂØÜÁ†Å‰∏ç‰∏ÄËá¥$/;"	e	enum:Cmd::__anon135
STOCK_DIFF	tmpcode/commond.h	/^	STOCK_DIFF, \/\/\/ ¡Ω¥Œ ‰»Î√‹¬Î≤ª“ª÷¬$/;"	e	enum:__anon351
STOCK_ERROR	base/Command.h	/^  STOCK_ERROR,\/\/\/ ÂØÜÁ†Å‰∏çÂØπ$/;"	e	enum:Cmd::__anon135
STOCK_ERROR	tmpcode/commond.h	/^	STOCK_ERROR,\/\/\/ √‹¬Î≤ª∂‘$/;"	e	enum:__anon351
STOCK_EXIST	base/Command.h	/^  STOCK_EXIST,\/\/\/ Â∏êÂè∑Â∑≤ÁªèÂ≠òÂú®$/;"	e	enum:Cmd::__anon135
STOCK_EXIST	tmpcode/commond.h	/^	STOCK_EXIST,\/\/\/ ’ ∫≈“—æ≠¥Ê‘⁄$/;"	e	enum:__anon351
STOCK_GOLD	base/Command.h	/^  STOCK_GOLD,$/;"	e	enum:Cmd::StockType
STOCK_GOLD	tmpcode/commond.h	/^	STOCK_GOLD,$/;"	e	enum:StockType
STOCK_GOLDLIST_MAX	base/Command.h	/^  STOCK_GOLDLIST_MAX,\/\/\/ ËÇ°Á•®ÂçñÂçïÊª°$/;"	e	enum:Cmd::__anon135
STOCK_GOLDLIST_MAX	tmpcode/commond.h	/^	STOCK_GOLDLIST_MAX,\/\/\/ π…∆±¬Ùµ•¬˙$/;"	e	enum:__anon351
STOCK_LOGIN_NOTLOGIN	base/Command.h	/^  STOCK_LOGIN_NOTLOGIN,\/\/\/ Êú™ÁôªÈôÜ(ÊèêÁ§∫ËØ∑ÂÖàÁôªÈôÜ)$/;"	e	enum:Cmd::__anon135
STOCK_LOGIN_NOTLOGIN	tmpcode/commond.h	/^	STOCK_LOGIN_NOTLOGIN,   \/\/\/ Œ¥µ«¬Ω(Ã· æ«Îœ»µ«¬Ω)$/;"	e	enum:__anon351
STOCK_LOGIN_OK	base/Command.h	/^  STOCK_LOGIN_OK,\/\/\/ ÁôªÈôÜok$/;"	e	enum:Cmd::__anon135
STOCK_LOGIN_OK	tmpcode/commond.h	/^	STOCK_LOGIN_OK, \/\/\/ µ«¬Ωok$/;"	e	enum:__anon351
STOCK_MONEY	base/Command.h	/^  STOCK_MONEY,$/;"	e	enum:Cmd::StockType
STOCK_MONEY	tmpcode/commond.h	/^	STOCK_MONEY,$/;"	e	enum:StockType
STOCK_MONEYLIST_MAX	base/Command.h	/^  STOCK_MONEYLIST_MAX,\/\/\/ ËÇ°Á•®ÂçñÂçïÊª°$/;"	e	enum:Cmd::__anon135
STOCK_MONEYLIST_MAX	tmpcode/commond.h	/^	STOCK_MONEYLIST_MAX,\/\/\/ π…∆±¬Ùµ•¬˙$/;"	e	enum:__anon351
STOCK_NONE	base/Command.h	/^  STOCK_NONE,\/\/\/ ÂØÜÁ†Å‰∏çËÉΩ‰∏∫Á©∫$/;"	e	enum:Cmd::__anon135
STOCK_NONE	tmpcode/commond.h	/^	STOCK_NONE, \/\/\/ √‹¬Î≤ªƒ‹Œ™ø’$/;"	e	enum:__anon351
STOCK_OPEN_OK	base/Command.h	/^  STOCK_OPEN_OK,\/\/\/ ÂêØÁî®Â∏êÂè∑ok$/;"	e	enum:Cmd::__anon135
STOCK_OPEN_OK	tmpcode/commond.h	/^	STOCK_OPEN_OK,  \/\/\/ ∆Ù”√’ ∫≈ok$/;"	e	enum:__anon351
STOCK_SCENE_USERCMD	base/CmdType.h	/^const BYTE STOCK_SCENE_USERCMD    = 38;$/;"	v
STOCK_SCENE_USERCMD	tmpcode/commond.h	/^const BYTE STOCK_SCENE_USERCMD      = 38; $/;"	v
STOCK_SERVER_WRONG	base/Command.h	/^  STOCK_SERVER_WRONG,\/\/\/ ÊúçÂä°Âô®ÈîôËØØ$/;"	e	enum:Cmd::__anon135
STOCK_SERVER_WRONG	tmpcode/commond.h	/^	STOCK_SERVER_WRONG,\/\/\/ ∑˛ŒÒ∆˜¥ÌŒÛ$/;"	e	enum:__anon351
STOCK_SHORT	base/Command.h	/^  STOCK_SHORT,\/\/\/ ÂØÜÁ†ÅÂ§™Áü≠$/;"	e	enum:Cmd::__anon135
STOCK_SHORT	tmpcode/commond.h	/^	STOCK_SHORT,\/\/\/ √‹¬ÎÃ´∂Ã$/;"	e	enum:__anon351
STOPDANCE_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE STOPDANCE_MAPSCREEN_USERCMD_PARA = 86;$/;"	v
STOP_ASSAULT_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE STOP_ASSAULT_MAGIC_USERCMD_PARA =44;$/;"	v
STOP_CANCEL_NUMPASSWD_PARA	tmpcode/commond.h	29021;"	d
STOP_DANCE_PARA	tmpcode/commond.h	/^const BYTE STOP_DANCE_PARA = 3;$/;"	v
STOP_GUAJI	tmpcode/commond.h	/^        STOP_GUAJI              \/\/Õ£÷ππ“ª˙Ã¯ŒË¡∑œ∞$/;"	e	enum:enumDanceType
STOP_SCENE_ENTRY_PROTECTION	tmpcode/commond.h	/^const BYTE STOP_SCENE_ENTRY_PROTECTION = 139;$/;"	v
STOP_SERVERTIME_USERCMD_PARA	tmpcode/commond.h	/^const BYTE STOP_SERVERTIME_USERCMD_PARA = 5;$/;"	v
STOP_SERVICE_GOLD_PARA	base/Command.h	/^const BYTE STOP_SERVICE_GOLD_PARA = 10;$/;"	v
STOP_SERVICE_STOCKPARA	base/Command.h	7765;"	d
STOP_SERVICE_STOCKPARA	tmpcode/commond.h	23771;"	d
STORAGE_MONEY_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE STORAGE_MONEY_HOUSE_USER_CMD = 13;$/;"	v
STORECHEST_HEIGHT	tmpcode/commond.h	4172;"	d
STORECHEST_WIDTH	tmpcode/commond.h	4171;"	d
STORE_INFO_NPCTRADE_USERCMD_PARAMETER	base/Command.h	4013;"	d
STORE_INFO_NPCTRADE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE STORE_INFO_NPCTRADE_USERCMD_PARAMETER		= 15;$/;"	v
STORE_ITEM_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE STORE_ITEM_HOUSE_USER_CMD = 53;$/;"	v
STORE_LOG_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE STORE_LOG_HOUSE_USER_CMD = 54;$/;"	v
STORE_PACK	ScenesServer/zObject.h	/^      STORE_PACK = 16,$/;"	e	enum:Packages::__anon178
STORE_PACK	base/Object.h	/^	STORE_PACK = 16,$/;"	e	enum:__anon54
STORE_TAKE_TYPE	tmpcode/commond.h	/^enum STORE_TAKE_TYPE$/;"	g
STORN	base/Command.h	/^  STORN = 1,\/\/ÂçáÁ∫ßÂÆùÁü≥$/;"	e	enum:Cmd::__anon102
STOVE_DATA_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE STOVE_DATA_PROPERTY_USERCMD_PARA = 160;$/;"	v
STUDENT_TYPE	tmpcode/commond.h	/^	STUDENT_TYPE = 2,   \/\/ ÕΩµ‹ $/;"	e	enum:__anon371
STUDY_LINGQISKILL_PARA	tmpcode/commond.h	24778;"	d
STUDY_SEPTSKILL_USERCMD	tmpcode/commond.h	/^const BYTE STUDY_SEPTSKILL_USERCMD = 3;$/;"	v
ST_BIND_ONE_USER_TO_OTHER	tmpcode/commond.h	/^const BYTE  ST_BIND_ONE_USER_TO_OTHER= 132;$/;"	v
ST_DROP_GUARD_GOODS_SEPT_CMD	tmpcode/commond.h	/^const BYTE ST_DROP_GUARD_GOODS_SEPT_CMD = 112;$/;"	v
ST_MOVE_GOODS_TO_GUARD_SEPT_CMD	tmpcode/commond.h	/^const BYTE ST_MOVE_GOODS_TO_GUARD_SEPT_CMD = 110;$/;"	v
ST_REPLY_CHUNYUN_CMD	tmpcode/commond.h	/^const BYTE  ST_REPLY_CHUNYUN_CMD = 67;$/;"	v
ST_SHENYU_CARD_OPETION_USERCMD_PARA	tmpcode/commond.h	/^const BYTE ST_SHENYU_CARD_OPETION_USERCMD_PARA = 102;$/;"	v
ST_UNBIND_ONE_USER_TO_OTHER	tmpcode/commond.h	/^const BYTE  ST_UNBIND_ONE_USER_TO_OTHER= 133;$/;"	v
SUBAT_GOLD	base/Command.h	/^  SUBAT_GOLD = 4,\/\/‰∏ìÂå∫Âç°ÂÖÖÂÄºËøîÂõûÂ≠êÁ±ªÂûã\/\/ÈÅìÂÖ∑Âç°ÁöÑÂ≠êÁ±ªÂûã‰∏çËÉΩ‰∫éËØ•ÂÄºÈáçÂ§ç$/;"	e	enum:Cmd::__anon134
SUBAT_GOLD	base/UserCommand.h	/^      SUBAT_GOLD = 4      \/\/‰∏ìÂå∫Âç°ÂÖÖÂÄºËøîÂõûÂ≠êÁ±ªÂûã\/\/ÈÅìÂÖ∑Âç°ÁöÑÂ≠êÁ±ªÂûã‰∏çËÉΩ‰∫éËØ•ÂÄºÈáçÂ§ç$/;"	e	enum:Cmd::UserServer::__anon151
SUBAT_GOLD	tmpcode/commond.h	/^	SUBAT_GOLD = 4, \/\/◊®«¯ø®≥‰÷µ∑µªÿ◊”¿‡–Õ\/\/µ¿æﬂø®µƒ◊”¿‡–Õ≤ªƒ‹”⁄∏√÷µ÷ÿ∏¥$/;"	e	enum:__anon318
SUBAT_INVALID	base/UserCommand.h	/^      SUBAT_INVALID = -1,\/\/billclientËØ∑Ê±ÇÂ≠êÁ±ªÂûã$/;"	e	enum:Cmd::UserServer::__anon151
SUB_DIRS	Makefile	/^SUB_DIRS =  base\/EncDec SessionServer BillServer GatewayServer RecordServer ScenesServer FLServer SuperServer tools Robot roleRegServer roleChangeServer$/;"	m
SUCCESS	ScenesServer/QuestAction.h	/^    SUCCESS = 0,$/;"	e	enum:Action::__anon163
SUCCESS	tmpcode/commond.h	/^        SUCCESS,        \/\/¥Úø™≥…π¶$/;"	e	enum:__anon341
SUCCESS_OPENBOX_PARA	tmpcode/commond.h	/^const BYTE SUCCESS_OPENBOX_PARA = 2;$/;"	v
SUC_DS_REWARD	tmpcode/commond.h	/^const BYTE SUC_DS_REWARD = 11;$/;"	v
SUC_MS_REWARD	tmpcode/commond.h	/^const BYTE SUC_MS_REWARD = 12;$/;"	v
SUDOKU_OBJECT_TYPE	tmpcode/commond.h	/^const DWORD SUDOKU_OBJECT_TYPE = 61008;$/;"	v
SUDOKU_OBJECT_TYPE_OTHER_MAX	tmpcode/commond.h	/^const DWORD SUDOKU_OBJECT_TYPE_OTHER_MAX = 62925;$/;"	v
SUDOKU_OBJECT_TYPE_OTHER_MIN	tmpcode/commond.h	/^const DWORD SUDOKU_OBJECT_TYPE_OTHER_MIN = 62901;$/;"	v
SUITS_PROPERTY_USERCMD_PARA	tmpcode/commond.h	17756;"	d
SUI_SHEN_STATE	tmpcode/commond.h	4308;"	d
SUMMONSKILL_CONTROL_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE SUMMONSKILL_CONTROL_MAGIC_USERCMD_PARA = 54;$/;"	v
SUMMON_AVATAR_GUARD	tmpcode/commond.h	/^const BYTE SUMMON_AVATAR_GUARD = 32;$/;"	v
SUMMON_GEMNPC_SCENE_PARA	base/SessionCommand.h	/^    const BYTE SUMMON_GEMNPC_SCENE_PARA = 1;$/;"	v
SUMMON_TRAIN_DRAGON_PARA	tmpcode/commond.h	/^const BYTE SUMMON_TRAIN_DRAGON_PARA = 14;$/;"	v
SUNDIRY	tmpcode/commond.h	/^	SUNDIRY = 3, 	\/\/‘”ŒÔ$/;"	e	enum:__anon358
SUPERSERVER	base/zMisc.h	/^	SUPERSERVER      =  1, \/** ÁÆ°ÁêÜÊúçÂä°Âô® *\/$/;"	e	enum:ServerType
SUPER_GM_ID	ScenesServer/Chat.h	79;"	d
SURRENDER_PURCHASE_PARA	tmpcode/commond.h	/^const BYTE SURRENDER_PURCHASE_PARA = 60;$/;"	v
SURVEYOVER_PARA	tmpcode/commond.h	/^static const BYTE SURVEYOVER_PARA      = 3;$/;"	v
SURVEYRESULT_PARA	tmpcode/commond.h	/^static const BYTE SURVEYRESULT_PARA 	= 2;$/;"	v
SURVEY_USERCMD	tmpcode/commond.h	/^const BYTE SURVEY_USERCMD               = 52;$/;"	v
SWAPUSEROBJECT_PROPERTY_USERCMD_PARAMETER	base/Command.h	2526;"	d
SWAPUSEROBJECT_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	4258;"	d
SWITCH_CHARACTER_OBSTACLE_USERCMD_PARA	base/Command.h	/^const BYTE SWITCH_CHARACTER_OBSTACLE_USERCMD_PARA      = 26;$/;"	v
SWORD	base/zType.h	/^typedef signed short SWORD;$/;"	t
SYSTEMSETTINGS_PROPERTY_USERCMD_PARA	base/Command.h	2796;"	d
SYSTEMSETTINGS_PROPERTY_USERCMD_PARA	tmpcode/commond.h	5907;"	d
SYSTEM_KOKOPTION_PARA	tmpcode/commond.h	/^const BYTE SYSTEM_KOKOPTION_PARA =127;$/;"	v
SYSTEM_STATE_CREATING	GatewayServer/GateUser.h	/^		SYSTEM_STATE_CREATING,   \/\/\/ ¥¥Ω®Ω«…´◊¥Ã¨$/;"	e	enum:GateUser::Systemstate
SYSTEM_STATE_INITING	GatewayServer/GateUser.h	/^		SYSTEM_STATE_INITING,   \/\/\/ ≥ı º◊¥Ã¨$/;"	e	enum:GateUser::Systemstate
SYSTEM_STATE_PLAY	GatewayServer/GateUser.h	/^		SYSTEM_STATE_PLAY,     \/\/\/ ”Œœ∑◊¥Ã¨$/;"	e	enum:GateUser::Systemstate
SYSTEM_STATE_SELECT	GatewayServer/GateUser.h	/^		SYSTEM_STATE_SELECT,   \/\/\/ —°‘ÒΩ«…´◊¥Ã¨$/;"	e	enum:GateUser::Systemstate
SYSTEM_STATE_SELECTSERVER	GatewayServer/GateUser.h	/^		SYSTEM_STATE_SELECTSERVER, \/\/ [ranqd] µ»¥˝—°‘Ò∑˛ŒÒ∆˜◊¥Ã¨$/;"	e	enum:GateUser::Systemstate
SYSTEM_WAIT_STATE_PLAY	GatewayServer/GateUser.h	/^		SYSTEM_WAIT_STATE_PLAY,   \/\/\/ µ»¥˝”Œœ∑◊¥Ã¨$/;"	e	enum:GateUser::Systemstate
SYSTEM_WAIT_STATE_UNREG	GatewayServer/GateUser.h	/^		SYSTEM_WAIT_STATE_UNREG    \/\/\/ µ»¥˝ÕÀ≥ˆΩ«…´¡˜≥Ã$/;"	e	enum:GateUser::Systemstate
SacredAddDam	ScenesServer/ScenePk.h	/^	  SWORD SacredAddDam;	\/\/sky Â¢ûÂä†Á•ûÂú£È≠îÊ≥ï‰º§ÂÆ≥ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
SacredAddDamA	ScenesServer/ScenePk.h	/^	  SWORD SacredAddDamA;	\/\/sky Â¢ûÂä†Á•ûÂú£È≠îÊ≥ï‰º§ÂÆ≥Âõ∫ÂÆöÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
Sacredflag	ScenesServer/SceneEntryPk.h	/^	bool Sacredflag;	\/\/sky Á•ûÂú£È≠îÊ≥ïÂ¢ûÂä†‰º§ÂÆ≥Ê†áÂøó$/;"	m	struct:SceneEntryPk
SafeFlagEnum	tmpcode/commond.h	/^enum SafeFlagEnum$/;"	g
SaveObject	base/SaveObject.h	/^struct SaveObject$/;"	s
SaveObjectExec	ScenesServer/SceneUser.cpp	/^class SaveObjectExec : public UserObjectExec$/;"	c
SaveObject_h_	base/SaveObject.h	8;"	d
Scene	ScenesServer/Scene.cpp	/^Scene::Scene(): _one_sec(1)$/;"	f	class:Scene
Scene	ScenesServer/Scene.h	/^class Scene:public zScene,public zSceneEntryIndex$/;"	c
Scene	base/SceneCommand.h	/^  namespace Scene$/;"	n	namespace:Cmd
SceneCallBack	ScenesServer/SceneManager.h	/^struct SceneCallBack$/;"	s
SceneClient	GatewayServer/SceneClient.h	/^	SceneClient( const std::string &name,const Cmd::Super::ServerEntry *serverEntry)$/;"	f	class:SceneClient
SceneClient	GatewayServer/SceneClient.h	/^class SceneClient : public zTCPClientTask$/;"	c
SceneClientManager	GatewayServer/SceneClientManager.cpp	/^SceneClientManager::SceneClientManager()$/;"	f	class:SceneClientManager
SceneClientManager	GatewayServer/SceneClientManager.h	/^class SceneClientManager$/;"	c
SceneClient_map	GatewayServer/SceneClientManager.h	/^	typedef std::map<const DWORD,SceneClient *> SceneClient_map;$/;"	t	class:SceneClientManager
SceneConfile	ScenesServer/ScenesServer.cpp	/^class SceneConfile:public zConfile$/;"	c
SceneEntryAction	ScenesServer/Scene.cpp	/^bool Scene::SceneEntryAction(const zRTime& ctv,const DWORD group)$/;"	f	class:Scene
SceneEntryPk	ScenesServer/SceneEntryPk.h	/^    SceneEntryPk(SceneEntryType type,const SceneEntryState state = SceneEntry_Normal):zSceneEntry(type,state)$/;"	f	struct:SceneEntryPk
SceneEntryPk	ScenesServer/SceneEntryPk.h	/^struct SceneEntryPk: public zSceneEntry$/;"	s
SceneEntryPk_vec	ScenesServer/SceneEntryPk.h	/^typedef std::vector<SceneEntryPk *> SceneEntryPk_vec;$/;"	t
SceneEntryState	base/zSceneEntry.h	/^	enum SceneEntryState$/;"	g	struct:zSceneEntry
SceneEntryStateList	base/zSceneEntry.h	/^typedef std::list<WORD> SceneEntryStateList;$/;"	t
SceneEntryType	base/zSceneEntry.h	/^	enum SceneEntryType$/;"	g	struct:zSceneEntry
SceneEntry_Build	base/zSceneEntry.h	/^		SceneEntry_Build,\/**< Ω®÷˛*\/$/;"	e	enum:zSceneEntry::SceneEntryType
SceneEntry_Death	base/zSceneEntry.h	/^		SceneEntry_Death,  \/**< À¿Õˆ◊¥Ã¨ *\/$/;"	e	enum:zSceneEntry::SceneEntryState
SceneEntry_Hide	base/zSceneEntry.h	/^		SceneEntry_Hide      \/**< “˛≤ÿ◊¥Ã¨ *\/$/;"	e	enum:zSceneEntry::SceneEntryState
SceneEntry_MAX	base/zSceneEntry.h	/^		SceneEntry_MAX$/;"	e	enum:zSceneEntry::SceneEntryType
SceneEntry_NPC	base/zSceneEntry.h	/^		SceneEntry_NPC,  \/**< NPC*\/$/;"	e	enum:zSceneEntry::SceneEntryType
SceneEntry_Normal	base/zSceneEntry.h	/^		SceneEntry_Normal,  \/**< ∆’Õ®◊¥Ã¨ *\/$/;"	e	enum:zSceneEntry::SceneEntryState
SceneEntry_Object	base/zSceneEntry.h	/^		SceneEntry_Object,\/**< µÿ…œŒÔ∆∑*\/$/;"	e	enum:zSceneEntry::SceneEntryType
SceneEntry_Pet	base/zSceneEntry.h	/^		SceneEntry_Pet,  \/**< ≥ËŒÔ*\/$/;"	e	enum:zSceneEntry::SceneEntryType
SceneEntry_Player	base/zSceneEntry.h	/^		SceneEntry_Player,\/**< ÕÊº“Ω«…´*\/$/;"	e	enum:zSceneEntry::SceneEntryType
SceneEntry_SET	GatewayServer/ScreenIndex.h	/^	typedef std::set<GateUser *,std::less<GateUser *> > SceneEntry_SET;$/;"	t	class:ScreenIndex
SceneEntry_SET	ScenesServer/zSceneEntryIndex.h	/^    typedef std::set<zSceneEntry *,std::less<zSceneEntry *> > SceneEntry_SET;$/;"	t	class:zSceneEntryIndex
SceneID	base/SessionCommand.h	/^		DWORD  SceneID;$/;"	m	struct:Cmd::Session::t_Scene_MeIsBattlefield
SceneIndex	GatewayServer/SceneClient.h	/^    typedef __gnu_cxx::hash_map<DWORD, GateUser*> SceneIndex;$/;"	t	class:SceneClient
SceneManager	ScenesServer/SceneManager.cpp	/^SceneManager::SceneManager()$/;"	f	class:SceneManager
SceneManager	ScenesServer/SceneManager.h	/^class SceneManager :public zSceneManager$/;"	c
SceneMsgCmdHandle	ScenesServer/SceneMsgCmdHandle.cpp	/^SceneMsgCmdHandle::SceneMsgCmdHandle()$/;"	f	class:SceneMsgCmdHandle
SceneMsgCmdHandle	ScenesServer/SceneMsgCmdHandle.h	/^class SceneMsgCmdHandle : public Singleton<SceneMsgCmdHandle>$/;"	c
SceneNpc	ScenesServer/SceneNpc.cpp	/^SceneNpc::SceneNpc(Scene *scene,zNpcB *npc,const t_NpcDefine *define,const SceneNpcType type,const SceneEntryType entrytype,zNpcB *anpc) : SceneEntryPk(entrytype,SceneEntry_Hide),npc(npc),anpc(anpc),define(define),_half_sec(0.3f),_one_sec(1),_3_sec(3),lockedUserTime(),nextMoveTime(npc->distance),nextAttackTime(npc->adistance),type(type),isUse(false)$/;"	f	class:SceneNpc
SceneNpc	ScenesServer/SceneNpc.h	/^class SceneNpc : public SceneEntryPk,public zAStar<>,public zAStar<2>$/;"	c
SceneNpcAIType	ScenesServer/SceneNpcAI.h	/^enum SceneNpcAIType$/;"	g
SceneNpcChase	ScenesServer/SceneNpc.h	/^  enum SceneNpcChase$/;"	g	class:SceneNpc
SceneNpcManager	ScenesServer/SceneNpcManager.cpp	/^SceneNpcManager::SceneNpcManager()$/;"	f	class:SceneNpcManager
SceneNpcManager	ScenesServer/SceneNpcManager.h	/^class SceneNpcManager : public zEntryManager< zEntryTempID >$/;"	c
SceneNpcType	ScenesServer/SceneNpc.h	/^  enum SceneNpcType$/;"	g	class:SceneNpc
SceneNpc_vec	ScenesServer/SceneUser.cpp	/^typedef std::vector<SceneNpc * > SceneNpc_vec;$/;"	t
ScenePk	ScenesServer/ScenePk.h	/^class ScenePk  $/;"	c
ScenePkState	ScenesServer/ScenePk.h	/^  ScenePkState()$/;"	f	struct:ScenePkState
ScenePkState	ScenesServer/ScenePk.h	/^struct ScenePkState$/;"	s
SceneRecycle	ScenesServer/Recycle.h	/^	SceneRecycle() :zThread("Recycle"), _3_sec(3) { }$/;"	f	class:SceneRecycle
SceneRecycle	ScenesServer/Recycle.h	/^class SceneRecycle : public zThread$/;"	c
SceneRecycleUserManager	ScenesServer/SceneUserManager.h	/^    SceneRecycleUserManager(){}$/;"	f	class:SceneRecycleUserManager
SceneRecycleUserManager	ScenesServer/SceneUserManager.h	/^class SceneRecycleUserManager: public zEntryManager< zEntryID > $/;"	c
SceneSendToEveryOne	ScenesServer/Scene.cpp	/^  SceneSendToEveryOne(const void *cmd,const int len) : cmd(cmd),len(len) {};$/;"	f	struct:SceneSendToEveryOne
SceneSendToEveryOne	ScenesServer/Scene.cpp	/^struct SceneSendToEveryOne : public zSceneEntryCallBack$/;"	s
SceneSendToUnWatchTrap	ScenesServer/Scene.cpp	/^  SceneSendToUnWatchTrap(const void *cmd,const int len) : cmd(cmd),len(len) {};$/;"	f	struct:SceneSendToUnWatchTrap
SceneSendToUnWatchTrap	ScenesServer/Scene.cpp	/^struct SceneSendToUnWatchTrap : public zSceneEntryCallBack$/;"	s
SceneSendToWatchTrap	ScenesServer/Scene.cpp	/^  SceneSendToWatchTrap(const void *cmd,const int len) : cmd(cmd),len(len) {};$/;"	f	struct:SceneSendToWatchTrap
SceneSendToWatchTrap	ScenesServer/Scene.cpp	/^struct SceneSendToWatchTrap : public zSceneEntryCallBack$/;"	s
SceneSession	SessionServer/Session.h	/^    SceneSession(SessionTask *task)$/;"	f	class:SceneSession
SceneSession	SessionServer/Session.h	/^class SceneSession:public zScene,public Session$/;"	c
SceneSessionManager	SessionServer/SessionManager.cpp	/^SceneSessionManager::SceneSessionManager():zSceneManager()$/;"	f	class:SceneSessionManager
SceneSessionManager	SessionServer/SessionManager.h	/^class SceneSessionManager:public zSceneManager$/;"	c
SceneTask	ScenesServer/SceneTask.h	/^    SceneTask($/;"	f	class:SceneTask
SceneTask	ScenesServer/SceneTask.h	/^class SceneTask : public zEntry, public zTCPTask, public MessageQueue$/;"	c
SceneTaskHashmap	ScenesServer/SceneTaskManager.h	/^    typedef __gnu_cxx::hash_map<WORD,SceneTask *> SceneTaskHashmap;$/;"	t	class:SceneTaskManager
SceneTaskHashmap_const_iterator	ScenesServer/SceneTaskManager.h	/^    typedef SceneTaskHashmap::const_iterator SceneTaskHashmap_const_iterator;$/;"	t	class:SceneTaskManager
SceneTaskHashmap_iterator	ScenesServer/SceneTaskManager.h	/^    typedef SceneTaskHashmap::iterator SceneTaskHashmap_iterator;$/;"	t	class:SceneTaskManager
SceneTaskHashmap_pair	ScenesServer/SceneTaskManager.h	/^    typedef SceneTaskHashmap::value_type SceneTaskHashmap_pair;$/;"	t	class:SceneTaskManager
SceneTaskManager	ScenesServer/SceneTaskManager.h	/^    SceneTaskManager() {};$/;"	f	class:SceneTaskManager
SceneTaskManager	ScenesServer/SceneTaskManager.h	/^class SceneTaskManager : private zNoncopyable$/;"	c
SceneTask_Callback	ScenesServer/SceneTask.h	/^    typedef bool (SceneTask::* SceneTask_Callback)(SceneUser *pUser, const Cmd::t_NullCmd *pNullCmd, const DWORD cmdLen);$/;"	t	class:SceneTask
SceneTimeTick	ScenesServer/TimeTick.h	/^    SceneTimeTick() : zThread("TimeTick"),_one_sec(1),_five_sec(5),_one_min(60),quiz(false) {};$/;"	f	class:SceneTimeTick
SceneTimeTick	ScenesServer/TimeTick.h	/^class SceneTimeTick : public zThread$/;"	c
SceneType	ScenesServer/Scene.h	/^    enum SceneType$/;"	g	class:Scene
SceneUser	ScenesServer/SceneUser.cpp	/^SceneUser::SceneUser(const DWORD accid):SceneEntryPk(SceneEntry_Player),recycle_delay(0),_half_sec(0.3f),_one_sec(1),_five_sec(5),_3_sec(3),_ten_sec(10),_one_min(60),_five_min(5*58-1),_writeback_timer(ScenesService::getInstance().writeBackTimer,ScenesService::getInstance().writeBackTimer),loginTime(),lastIncTime(0),packs(this),lastCheckMessage(2000),lastMoveTime(0),moveFastCount(0)$/;"	f	class:SceneUser
SceneUser	ScenesServer/SceneUser.h	/^struct SceneUser:public SceneEntryPk$/;"	s
SceneUserManager	ScenesServer/SceneUserManager.cpp	/^SceneUserManager::SceneUserManager() $/;"	f	class:SceneUserManager
SceneUserManager	ScenesServer/SceneUserManager.h	/^class SceneUserManager:protected zUserManager$/;"	c
ScenesParser	ScenesServer/QuestCondition.h	/^class ScenesParser$/;"	c
ScenesService	ScenesServer/ScenesServer.h	/^    ScenesService() : zSubNetService("≥°æ∞∑˛ŒÒ∆˜",SCENESSERVER)$/;"	f	class:ScenesService
ScenesService	ScenesServer/ScenesServer.h	/^class ScenesService : public zSubNetService$/;"	c
Score_Exp	tmpcode/commond.h	/^struct Score_Exp                        $/;"	s
ScreenIndex	GatewayServer/ScreenIndex.cpp	/^ScreenIndex::ScreenIndex(const DWORD x,const DWORD y):screenx(x),screeny(y),screenMax(x*y)$/;"	f	class:ScreenIndex
ScreenIndex	GatewayServer/ScreenIndex.h	/^class ScreenIndex :private zNoncopyable$/;"	c
ScriptQuest	ScenesServer/script.h	/^  ScriptQuest() {}  $/;"	f	class:ScriptQuest
ScriptQuest	ScenesServer/script.h	/^class ScriptQuest$/;"	c
ScriptingSystemLua	ScenesServer/script.cpp	/^ScriptingSystemLua::ScriptingSystemLua()$/;"	f	class:ScriptingSystemLua
SelectGiftBoxPropertyUserCmd	tmpcode/commond.h	/^        SelectGiftBoxPropertyUserCmd()$/;"	f	struct:SelectGiftBoxPropertyUserCmd
SelectGiftBoxPropertyUserCmd	tmpcode/commond.h	/^struct SelectGiftBoxPropertyUserCmd : public stPropertyUserCmd$/;"	s
SelectUserInfo	base/Command.h	/^struct SelectUserInfo$/;"	s	namespace:Cmd
SelectUserInfo	tmpcode/commond.h	/^	SelectUserInfo()$/;"	f	struct:SelectUserInfo
SelectUserInfo	tmpcode/commond.h	/^struct SelectUserInfo$/;"	s
SelectedSet	ScenesServer/SceneEntryPk.h	/^    typedef std::set<DWORD> SelectedSet;$/;"	t	struct:SceneEntryPk
SelectedSet_iterator	ScenesServer/SceneEntryPk.h	/^    typedef SelectedSet::iterator SelectedSet_iterator;$/;"	t	struct:SceneEntryPk
SelectedSet_value_type	ScenesServer/SceneEntryPk.h	/^    typedef SelectedSet::value_type SelectedSet_value_type;$/;"	t	struct:SceneEntryPk
Send9ToMe	tmpcode/commond.h	/^	Send9ToMe = 1,$/;"	e	enum:__anon310
SendCountryInfo	GatewayServer/GateUser.cpp	/^void GateUser::SendCountryInfo()$/;"	f	class:GateUser
SendNineExec	GatewayServer/ScreenIndex.cpp	/^  SendNineExec(const void *cmd,const int cmdLen):_cmd(cmd),_cmdLen(cmdLen),_type(0),zip(false)$/;"	f	struct:SendNineExec
SendNineExec	GatewayServer/ScreenIndex.cpp	/^struct SendNineExec : public execEntry<GateUser>$/;"	s
SendNineExecExceptMe	GatewayServer/ScreenIndex.cpp	/^  SendNineExecExceptMe(const DWORD exceptme_id,const void *cmd,const int cmdLen):_exceptme_id(exceptme_id),_cmd(cmd),_cmdLen(cmdLen),_type(0)$/;"	f	struct:SendNineExecExceptMe
SendNineExecExceptMe	GatewayServer/ScreenIndex.cpp	/^struct SendNineExecExceptMe : public execEntry<GateUser>$/;"	s
SendStatusToTeamExec	ScenesServer/Skill.cpp	/^  SendStatusToTeamExec(SceneUser *pUser,const SkillStatus *pSkillStatus)$/;"	f	struct:SendStatusToTeamExec
SendStatusToTeamExec	ScenesServer/Skill.cpp	/^struct SendStatusToTeamExec : public TeamMemExec$/;"	s
SendToEveryOneExceptMe	ScenesServer/Scene.cpp	/^  SendToEveryOneExceptMe(const zSceneEntry *pEntry,const void *cmd,const int len) : me(pEntry),cmd(cmd),len(len){};$/;"	f	struct:SendToEveryOneExceptMe
SendToEveryOneExceptMe	ScenesServer/Scene.cpp	/^struct SendToEveryOneExceptMe : public zSceneEntryCallBack$/;"	s
SeptDef	base/Sept.h	/^namespace SeptDef$/;"	n
SeptGuardList	tmpcode/commond.h	/^    SeptGuardList()$/;"	f	struct:SeptGuardList
SeptGuardList	tmpcode/commond.h	/^struct SeptGuardList$/;"	s
SeptLTT	tmpcode/commond.h	/^	SeptLTT,		\/\/ º“◊Â¡˙ÕºÃ⁄’˘∂·’Ω-±®√˚º“◊Â¡–±ÌΩÁ√Ê«Î«Û$/;"	e	enum:__anon310
SeptName	base/Command.h	/^  char SeptName[MAX_NAMESIZE];  \/\/ ÂÆ∂ÊóèÂêçÁß∞$/;"	m	struct:Cmd::stCreateSeptCmd
SeptName	tmpcode/commond.h	/^	char SeptName[MAX_NAMESIZE];  \/\/ º“◊Â√˚≥∆$/;"	m	struct:stCreateSeptCmd
SeptNotice	tmpcode/commond.h	/^	SeptNotice()$/;"	f	struct:SeptNotice
SeptNotice	tmpcode/commond.h	/^struct SeptNotice$/;"	s
SeqKillData	tmpcode/commond.h	/^		SeqKillData()$/;"	f	struct:stRetSeqKillListZhenxuanUserCmd::SeqKillData
SeqKillData	tmpcode/commond.h	/^	struct SeqKillData{$/;"	s	struct:stRetSeqKillListZhenxuanUserCmd
SequeueNum	tmpcode/commond.h	/^	DWORD SequeueNum;$/;"	m	struct:stReQueueNum
SerialNumber	BillServer/BillCache.h	/^    DWORD SerialNumber;$/;"	m	class:BillCache
ServerACL	base/ServerACL.h	/^	ServerACL() {};$/;"	f	class:ServerACL
ServerACL	base/ServerACL.h	/^class ServerACL : public Singleton<ServerACL>$/;"	c
ServerEntry	base/SuperCommand.h	/^      ServerEntry()$/;"	f	struct:Cmd::Super::ServerEntry
ServerEntry	base/SuperCommand.h	/^      ServerEntry(const ServerEntry& se)$/;"	f	struct:Cmd::Super::ServerEntry
ServerEntry	base/SuperCommand.h	/^    struct ServerEntry$/;"	s	namespace:Cmd::Super
ServerManager	FLServer/ServerManager.h	/^	ServerManager() {};$/;"	f	class:ServerManager
ServerManager	FLServer/ServerManager.h	/^class ServerManager : zNoncopyable$/;"	c
ServerManager	SuperServer/ServerManager.h	/^    ServerManager() {};$/;"	f	class:ServerManager
ServerManager	SuperServer/ServerManager.h	/^class ServerManager : zNoncopyable$/;"	c
ServerTask	FLServer/ServerTask.h	/^	ServerTask($/;"	f	class:ServerTask
ServerTask	FLServer/ServerTask.h	/^class ServerTask : public zTCPTask$/;"	c
ServerTask	SuperServer/ServerTask.h	/^    ServerTask($/;"	f	class:ServerTask
ServerTask	SuperServer/ServerTask.h	/^class ServerTask : public zTCPTask$/;"	c
ServerTaskContainer	FLServer/ServerManager.h	/^	typedef std::map<const GameZone_t,ServerTask *> ServerTaskContainer;$/;"	t	class:ServerManager
ServerTaskContainer_const_iterator	FLServer/ServerManager.h	/^	typedef ServerTaskContainer::const_iterator ServerTaskContainer_const_iterator;$/;"	t	class:ServerManager
ServerTaskContainer_iterator	FLServer/ServerManager.h	/^	typedef ServerTaskContainer::iterator ServerTaskContainer_iterator;$/;"	t	class:ServerManager
ServerTaskContainer_value_type	FLServer/ServerManager.h	/^	typedef ServerTaskContainer::value_type ServerTaskContainer_value_type;$/;"	t	class:ServerManager
ServerTaskHashmap	SuperServer/ServerManager.h	/^    typedef __gnu_cxx::hash_map<WORD,ServerTask *> ServerTaskHashmap;$/;"	t	class:ServerManager
ServerTaskHashmap_const_iterator	SuperServer/ServerManager.h	/^    typedef ServerTaskHashmap::const_iterator ServerTaskHashmap_const_iterator;$/;"	t	class:ServerManager
ServerTaskHashmap_iterator	SuperServer/ServerManager.h	/^    typedef ServerTaskHashmap::iterator ServerTaskHashmap_iterator;$/;"	t	class:ServerManager
ServerTaskHashmap_pair	SuperServer/ServerManager.h	/^    typedef ServerTaskHashmap::value_type ServerTaskHashmap_pair;$/;"	t	class:ServerManager
ServerType	base/zMisc.h	/^enum ServerType$/;"	g
Session	SessionServer/Session.h	/^    Session(SessionTask *task)$/;"	f	class:Session
Session	SessionServer/Session.h	/^class Session:private zNoncopyable$/;"	c
Session	base/SessionCommand.h	/^  namespace Session$/;"	n	namespace:Cmd
SessionChannel	SessionServer/SessionChat.cpp	/^SessionChannel::SessionChannel(UserSession * creator):zEntry()$/;"	f	class:SessionChannel
SessionChannel	SessionServer/SessionChat.h	/^class SessionChannel : public zEntry$/;"	c
SessionChannelManager	SessionServer/SessionChat.cpp	/^SessionChannelManager::SessionChannelManager()$/;"	f	class:SessionChannelManager
SessionChannelManager	SessionServer/SessionChat.h	/^class SessionChannelManager : public zEntryManager< zEntryTempID,zEntryName >$/;"	c
SessionClient	GatewayServer/SessionClient.h	/^	SessionClient($/;"	f	class:SessionClient
SessionClient	GatewayServer/SessionClient.h	/^class SessionClient : public zTCPBufferClient$/;"	c
SessionClient	ScenesServer/SessionClient.h	/^    SessionClient($/;"	f	class:SessionClient
SessionClient	ScenesServer/SessionClient.h	/^class SessionClient : public zTCPBufferClient,public MessageQueue$/;"	c
SessionConfile	SessionServer/SessionServer.cpp	/^class SessionConfile:public zConfile$/;"	c
SessionObject	base/SessionCommand.h	/^    struct SessionObject$/;"	s	namespace:Cmd::Session
SessionService	SessionServer/SessionServer.h	/^    SessionService() : zSubNetService("‰ºöËØùÊúçÂä°Âô®",SESSIONSERVER)$/;"	f	class:SessionService
SessionService	SessionServer/SessionServer.h	/^class SessionService : public zSubNetService$/;"	c
SessionTask	SessionServer/SessionTask.h	/^    SessionTask($/;"	f	class:SessionTask
SessionTask	SessionServer/SessionTask.h	/^class SessionTask : public zTCPTask, public zEntry,public MessageQueue$/;"	c
SessionTaskHashmap	SessionServer/SessionTaskManager.h	/^    typedef __gnu_cxx::hash_map<WORD,SessionTask *> SessionTaskHashmap;$/;"	t	class:SessionTaskManager
SessionTaskHashmap_const_iterator	SessionServer/SessionTaskManager.h	/^    typedef SessionTaskHashmap::const_iterator SessionTaskHashmap_const_iterator;$/;"	t	class:SessionTaskManager
SessionTaskHashmap_iterator	SessionServer/SessionTaskManager.h	/^    typedef SessionTaskHashmap::iterator SessionTaskHashmap_iterator;$/;"	t	class:SessionTaskManager
SessionTaskHashmap_pair	SessionServer/SessionTaskManager.h	/^    typedef SessionTaskHashmap::value_type SessionTaskHashmap_pair;$/;"	t	class:SessionTaskManager
SessionTaskManager	SessionServer/SessionTaskManager.h	/^    SessionTaskManager() {};$/;"	f	class:SessionTaskManager
SessionTaskManager	SessionServer/SessionTaskManager.h	/^class SessionTaskManager : private zNoncopyable$/;"	c
SessionTimeTick	SessionServer/TimeTick.h	/^    SessionTimeTick() : zThread("TimeTick"),_five_sec(5),_one_sec(1),_one_min(60),_ten_min(60*10),_one_hour(3480),_five_min(300) $/;"	f	class:SessionTimeTick
SessionTimeTick	SessionServer/TimeTick.h	/^class SessionTimeTick : public zThread$/;"	c
Set	ScenesServer/QuestAction.h	/^  class Set$/;"	c	namespace:Op
SetPkTime	ScenesServer/SceneUser.cpp	/^void SceneUser::SetPkTime(DWORD time)$/;"	f	class:SceneUser
SetPveOrPvp	ScenesServer/SceneUser.cpp	/^void SceneUser::SetPveOrPvp(useFightState type)$/;"	f	class:SceneUser
SetRoleInfo	SuperServer/RoleregCache.cpp	/^static RoleDataContainer SetRoleInfo; \/\/¥Ê∑≈Ω«…´–≈œ¢µƒcontainer$/;"	v
ShiKongChuanSong	tmpcode/commond.h	/^    ShiKongChuanSong()$/;"	f	struct:ShiKongChuanSong
ShiKongChuanSong	tmpcode/commond.h	/^struct ShiKongChuanSong$/;"	s
ShiTuInfo	tmpcode/commond.h	/^        ShiTuInfo()$/;"	f	struct:ShiTuInfo
ShiTuInfo	tmpcode/commond.h	/^        ShiTuInfo(const ShiTuInfo& st)$/;"	f	struct:ShiTuInfo
ShiTuInfo	tmpcode/commond.h	/^struct ShiTuInfo$/;"	s
ShopAdv	ScenesServer/SceneUser.h	/^	char  ShopAdv[MAX_SHOPADV];			\/\/SHX ÊëÜÊëäÂπøÂëä;$/;"	m	struct:SceneUser
ShowCityDareInfo	tmpcode/commond.h	/^	ShowCityDareInfo,$/;"	e	enum:__anon310
ShowLadder	tmpcode/commond.h	/^	ShowLadder,$/;"	e	enum:__anon310
Silence	ScenesServer/SceneEntryPk.h	/^	bool Silence;		\/\/\/ sky Ê≤âÈªò$/;"	m	struct:SceneEntryPk
SimulateHorse	tmpcode/commond.h	/^	SimulateHorse()$/;"	f	struct:SimulateHorse
SimulateHorse	tmpcode/commond.h	/^struct SimulateHorse$/;"	s
Singleton	base/zSingleton.h	/^		Singleton(void)$/;"	f	class:Singleton
Singleton	base/zSingleton.h	/^class Singleton$/;"	c
SingletonBase	BillServer/BillCallback.h	/^    SingletonBase() {}$/;"	f	class:SingletonBase
SingletonBase	BillServer/BillCallback.h	/^class SingletonBase$/;"	c
SingletonFactory	base/zSingleton.h	/^class SingletonFactory$/;"	c
SkillBase	base/zDatabase.h	/^struct SkillBase$/;"	s
SkillElement	base/zDatabase.h	/^    SkillElement()$/;"	f	struct:SkillElement
SkillElement	base/zDatabase.h	/^struct SkillElement$/;"	s
SkillItem	tmpcode/commond.h	/^                SkillItem()$/;"	f	struct:stRetPotentialSkillBuildUserCmd::SkillItem
SkillItem	tmpcode/commond.h	/^        struct SkillItem$/;"	s	struct:stRetPotentialSkillBuildUserCmd
SkillManager	ScenesServer/SkillManager.h	/^class SkillManager : public zEntryManager < zEntryID,zEntryTempID >$/;"	c
SkillSlot	ScenesServer/zCard.cpp	/^SkillSlot::SkillSlot():CardSlot(Cmd::CARDCELLTYPE_SKILL,0,SkillSlot::WIDTH,SkillSlot::HEIGHT)$/;"	f	class:SkillSlot
SkillSlot	ScenesServer/zCard.h	/^class SkillSlot:public CardSlot$/;"	c
SkillState	ScenesServer/ScenePk.cpp	/^SkillState::SkillState()$/;"	f	class:SkillState
SkillState	ScenesServer/ScenePk.h	/^struct SkillState$/;"	s
SkillStatus	base/zDatabase.h	/^    SkillStatus()$/;"	f	struct:SkillStatus
SkillStatus	base/zDatabase.h	/^struct SkillStatus$/;"	s
SkillStatusCarrier	ScenesServer/SkillStatusManager.h	/^    SkillStatusCarrier()$/;"	f	struct:SkillStatusCarrier
SkillStatusCarrier	ScenesServer/SkillStatusManager.h	/^struct SkillStatusCarrier$/;"	s
SkillStatusElement	ScenesServer/SkillStatusManager.h	/^  SkillStatusElement()$/;"	f	struct:SkillStatusElement
SkillStatusElement	ScenesServer/SkillStatusManager.h	/^struct SkillStatusElement$/;"	s
SkillStatusFunc	ScenesServer/SkillStatusManager.h	/^  typedef BYTE (* SkillStatusFunc)(zCard *,SkillStatusElement &);$/;"	t	class:SkillStatusManager
SkillStatusManager	ScenesServer/SkillStatusManager.cpp	/^SkillStatusManager::SkillStatusManager()$/;"	f	class:SkillStatusManager
SkillStatusManager	ScenesServer/SkillStatusManager.h	/^class SkillStatusManager$/;"	c
SkillStatus_0	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_0(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_1	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_1(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_10	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_10(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_1000	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_1000(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_1001	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_1001(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_1002	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_1002(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_1003	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_1003(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_11	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_11(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_12	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_12(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_13	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_13(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_14	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_14(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_2	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_2(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_2000	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_2000(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_2001	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_2001(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_2002	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_2002(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_2003	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_2003(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_3	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_3(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_3000	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_3000(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_3001	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_3001(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_3002	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_3002(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_3003	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_3003(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_4	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_4(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_4000	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_4000(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_4001	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_4001(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_4002	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_4002(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_4003	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_4003(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_5	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_5(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_6	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_6(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_7	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_7(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_8	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_8(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_9	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatus_9(zCard *pEntry,SkillStatusElement &sse)$/;"	f
SkillStatus_ConstIter	ScenesServer/SkillStatusManager.h	/^  typedef std::map<DWORD,SkillStatusElement>::const_iterator SkillStatus_ConstIter;$/;"	t	class:SkillStatusManager
SkillStatus_Iter	ScenesServer/SkillStatusManager.h	/^  typedef std::map<DWORD,SkillStatusElement>::iterator SkillStatus_Iter;$/;"	t	class:SkillStatusManager
SkyType	base/Command.h	/^    BYTE SkyType;$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
SkyType	tmpcode/commond.h	/^		BYTE SkyType;       \/\/ ÃÏø’µƒ¿‡–Õ$/;"	m	struct:stClientNewMap
Sock2Port	base/zMTCPServer.h	/^	typedef std::map<int, unsigned short> Sock2Port;$/;"	t	class:zMTCPServer
Sock2Port_const_iterator	base/zMTCPServer.h	/^	typedef Sock2Port::const_iterator Sock2Port_const_iterator;$/;"	t	class:zMTCPServer
Sock2Port_iterator	base/zMTCPServer.h	/^	typedef Sock2Port::iterator Sock2Port_iterator;$/;"	t	class:zMTCPServer
Sock2Port_value_type	base/zMTCPServer.h	/^	typedef Sock2Port::value_type Sock2Port_value_type;$/;"	t	class:zMTCPServer
SocketType	tmpcode/commond.h	/^	struct SocketType$/;"	s	struct:EquipSimulate
SoilCmpEquip	tmpcode/commond.h	/^struct SoilCmpEquip : public binary_function<SoilInfo, SoilInfo, bool>$/;"	s
SoilInfo	tmpcode/commond.h	/^	SoilInfo()$/;"	f	struct:SoilInfo
SoilInfo	tmpcode/commond.h	/^struct SoilInfo$/;"	s
SortLastWeek	tmpcode/commond.h	/^	SortLastWeek(): countryID(0), exploit(0), bReward(0)$/;"	f	struct:SortLastWeek
SortLastWeek	tmpcode/commond.h	/^struct SortLastWeek$/;"	s
SortThisWeek	tmpcode/commond.h	/^	SortThisWeek(): countryID(0), exploit(0)$/;"	f	struct:SortThisWeek
SortThisWeek	tmpcode/commond.h	/^struct SortThisWeek$/;"	s
Soulflag	ScenesServer/SceneEntryPk.h	/^	bool Soulflag;$/;"	m	struct:SceneEntryPk
SoundCountryID	tmpcode/commond.h	/^	WORD SoundCountryID;$/;"	m	struct:stRtnSoundTokenCmd
SpecialAI	ScenesServer/SceneNpcManager.cpp	/^void SceneNpcManager::SpecialAI()$/;"	f	class:SceneNpcManager
SportsHonor	ScenesServer/SceneUser.h	/^	DWORD SportsHonor;		\/\/sky Á´ûÊäÄÂú∫Ëç£Ë™âÁÇπ$/;"	m	struct:stUserBattfieldData
StaticScene	ScenesServer/Scene.cpp	/^StaticScene::StaticScene():Scene()$/;"	f	class:StaticScene
StaticScene	ScenesServer/Scene.h	/^class StaticScene:public Scene$/;"	c
StlToSendData	ScenesServer/ScenesServer.cpp	/^bool ScenesService::StlToSendData()$/;"	f	class:ScenesService
StockList	base/Command.h	/^struct StockList$/;"	s	namespace:Cmd
StockList	tmpcode/commond.h	/^struct StockList$/;"	s
StockType	base/Command.h	/^enum StockType$/;"	g	namespace:Cmd
StockType	tmpcode/commond.h	/^enum StockType$/;"	g
StoreNotice	tmpcode/commond.h	/^	StoreNotice()$/;"	f	struct:StoreNotice
StoreNotice	tmpcode/commond.h	/^struct StoreNotice$/;"	s
StorePack	ScenesServer/zObject.cpp	/^StorePack::StorePack() : Package(Cmd::OBJECTCELLTYPE_STORE,0,W, H*3)$/;"	f	class:StorePack
StorePack	ScenesServer/zObject.h	/^class StorePack : public Package$/;"	c
Storn_num	base/Command.h	/^  DWORD Storn_num;\/\/ÂÆùÁü≥‰∏™Êï∞$/;"	m	struct:Cmd::stReturnGoldGiveTradeUserCmd
StrVec	GatewayServer/CountryInfo.h	/^	typedef std::vector<Info> StrVec;$/;"	t	class:CountryInfo
StrVec	SessionServer/CountryInfo.h	/^	typedef std::vector<Info> StrVec;$/;"	t	class:CountryInfo
StrVec_iterator	GatewayServer/CountryInfo.h	/^	typedef StrVec::iterator StrVec_iterator;$/;"	t	class:CountryInfo
StrVec_iterator	SessionServer/CountryInfo.h	/^	typedef StrVec::iterator StrVec_iterator;$/;"	t	class:CountryInfo
Sub	ScenesServer/QuestAction.h	/^  class Sub$/;"	c	namespace:Op
SubMenuAction	ScenesServer/QuestAction.h	/^  SubMenuAction(const std::string& menu) : _menu(menu)$/;"	f	class:SubMenuAction
SubMenuAction	ScenesServer/QuestAction.h	/^class SubMenuAction : public Action$/;"	c
SubPlayer	tmpcode/commond.h	/^		SubPlayer()$/;"	f	struct:stRet_PromoterRelationUserCmd::SubPlayer
SubPlayer	tmpcode/commond.h	/^	struct SubPlayer$/;"	s	struct:stRet_PromoterRelationUserCmd
Super	base/SuperCommand.h	/^  namespace Super$/;"	n	namespace:Cmd
SuperConfile	SuperServer/SuperServer.cpp	/^class SuperConfile:public zConfile$/;"	c
SuperService	SuperServer/SuperServer.h	/^    SuperService() : zNetService("π‹¿Ì∑˛ŒÒ∆˜")$/;"	f	class:SuperService
SuperService	SuperServer/SuperServer.h	/^class SuperService : public zNetService$/;"	c
SuperTimeTick	SuperServer/TimeTick.h	/^    SuperTimeTick() : zThread("TimeTick"),startTime()$/;"	f	class:SuperTimeTick
SuperTimeTick	SuperServer/TimeTick.h	/^class SuperTimeTick : public zThread$/;"	c
Systemstate	GatewayServer/GateUser.h	/^	enum Systemstate$/;"	g	class:GateUser
TABKEY_PROPERTY_USERCMD_PARA	tmpcode/commond.h	24140;"	d
TAKE_BACK_ALL_FURNITURE	tmpcode/commond.h	/^const BYTE TAKE_BACK_ALL_FURNITURE				= 57;$/;"	v
TAKE_OUT_ITEM_STORE_HOUSE_USER_CMD	tmpcode/commond.h	/^const BYTE TAKE_OUT_ITEM_STORE_HOUSE_USER_CMD = 56;$/;"	v
TAKE_TOTLE_EARNING	tmpcode/commond.h	/^const BYTE TAKE_TOTLE_EARNING = 4;$/;"	v
TAKE_TYPE_ALL	tmpcode/commond.h	/^	TAKE_TYPE_ALL,          \/\/À˘”–»À$/;"	e	enum:STORE_TAKE_TYPE
TAKE_TYPE_MASTER	tmpcode/commond.h	/^	TAKE_TYPE_MASTER = 0,   \/\/◊Â≥§  $/;"	e	enum:STORE_TAKE_TYPE
TAKE_TYPE_ONE	tmpcode/commond.h	/^	TAKE_TYPE_ONE           \/\/÷∏∂®»À$/;"	e	enum:STORE_TAKE_TYPE
TALK_LTQ_PARA	tmpcode/commond.h	24470;"	d
TALK_WITH_DANCER_PARA	tmpcode/commond.h	/^const BYTE TALK_WITH_DANCER_PARA = 6;$/;"	v
TANKPARTFRAGMENT	tmpcode/commond.h	15571;"	d
TANKPART_UPGRADE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  TANKPART_UPGRADE_PROPERTY_USERCMD_PARA = 133;$/;"	v
TANK_ATK_FIRE	tmpcode/commond.h	/^	 TANK_ATK_FIRE = 1,		\/\/ª$/;"	e	enum:TankAtkType
TANK_ATK_ICE	tmpcode/commond.h	/^	 TANK_ATK_ICE = 3,		\/\/±˘$/;"	e	enum:TankAtkType
TANK_ATK_NONE	tmpcode/commond.h	/^	 TANK_ATK_NONE = 0,		\/\/Œﬁ$/;"	e	enum:TankAtkType
TANK_ATK_PEOPLE	tmpcode/commond.h	/^	 TANK_ATK_PEOPLE = 1,	\/\/(ÂÛ¥≤)ø…π•ª˜»À$/;"	e	enum:UnionTankAtkType
TANK_ATK_THUNDER	tmpcode/commond.h	/^	 TANK_ATK_THUNDER = 5	\/\/¿◊$/;"	e	enum:TankAtkType
TANK_ATK_TOWER	tmpcode/commond.h	/^	 TANK_ATK_TOWER = 2,	\/\/(Õ∂ Øª˙ª…)ø…π•ª˜Ω®÷˛$/;"	e	enum:UnionTankAtkType
TANK_BUFF_ATK	tmpcode/commond.h	/^	 TANK_BUFF_ATK = 0,$/;"	e	enum:TankBuff
TANK_BUFF_DEF	tmpcode/commond.h	/^	 TANK_BUFF_DEF = 1,$/;"	e	enum:TankBuff
TANK_BUFF_HP	tmpcode/commond.h	/^	 TANK_BUFF_HP = 2$/;"	e	enum:TankBuff
TANK_COLOR_BLUE	tmpcode/commond.h	/^	 TANK_COLOR_BLUE = 1,$/;"	e	enum:TankColor
TANK_COLOR_GREEN	tmpcode/commond.h	/^	 TANK_COLOR_GREEN = 3$/;"	e	enum:TankColor
TANK_COLOR_WHITE	tmpcode/commond.h	/^	 TANK_COLOR_WHITE = 0,$/;"	e	enum:TankColor
TANK_COLOR_YELLOW	tmpcode/commond.h	/^	 TANK_COLOR_YELLOW = 2,$/;"	e	enum:TankColor
TANK_FIGHT_RANGE	tmpcode/commond.h	44;"	d
TANK_HOLE_BODY	tmpcode/commond.h	/^	 TANK_HOLE_BODY=2,       \/\/º“◊Â≥µ£∫…ÌÃÂ			\/\/”∂±¯Õ≈≥µ£∫Œ‰∆˜≈‰º˛$/;"	e	enum:TankHoleType
TANK_HOLE_CORE	tmpcode/commond.h	/^	 TANK_HOLE_CORE=0,       \/\/º“◊Â≥µ£∫ƒß∑®∫À–ƒ		\/\/”∂±¯Õ≈≥µ£∫ª˙–µ“˝«Ê$/;"	e	enum:TankHoleType
TANK_HOLE_HEAD	tmpcode/commond.h	/^	 TANK_HOLE_HEAD=1,       \/\/º“◊Â≥µ£∫Õ∑≤ø			\/\/”∂±¯Õ≈≥µ£∫«∞≤øµ≤∞Â$/;"	e	enum:TankHoleType
TANK_HOLE_MAX	tmpcode/commond.h	/^	 TANK_HOLE_MAX=4         \/\/$/;"	e	enum:TankHoleType
TANK_HOLE_TAIL	tmpcode/commond.h	/^	 TANK_HOLE_TAIL=3,       \/\/º“◊Â≥µ£∫Œ≤≤ø			\/\/”∂±¯Õ≈≥µ£∫Œ≤≤øª§¿∏$/;"	e	enum:TankHoleType
TANK_NAME_PARA	tmpcode/commond.h	/^const BYTE TANK_NAME_PARA = 4;$/;"	v
TANK_PART_ATK	tmpcode/commond.h	/^	 TANK_PART_ATK = 2,		\/\/º“◊Â≥µ£∫π•ª˜≤øº˛	”∂±¯Õ≈≥µ£∫Œ‰∆˜≤øº˛$/;"	e	enum:TankPartType
TANK_PART_DEF	tmpcode/commond.h	/^	 TANK_PART_DEF = 4,		\/\/º“◊Â≥µ£∫∑¿”˘≤øº˛	”∂±¯Õ≈≥µ£∫∑¿”˘≤øº˛$/;"	e	enum:TankPartType
TANK_PART_FLOAT	tmpcode/commond.h	/^	 TANK_PART_FLOAT = 8	\/\/º“◊Â≥µ£∫∏°¡¶≤øº˛	”∂±¯Õ≈≥µ£∫∏°¡¶≤øº˛$/;"	e	enum:TankPartType
TANK_PART_PWOER	tmpcode/commond.h	/^	 TANK_PART_PWOER = 1,	\/\/º“◊Â≥µ£∫∂Ø¡¶≤øº˛	”∂±¯Õ≈≥µ£∫“˝«Ê≤øº˛$/;"	e	enum:TankPartType
TANK_PROPERTY_SPEED_ADD	tmpcode/commond.h	/^	TANK_PROPERTY_SPEED_ADD = 0,$/;"	e	enum:__anon300
TANK_TYPE_CRYSTAL	tmpcode/commond.h	/^	 TANK_TYPE_CRYSTAL = 2,		\/\/æßº◊’Ω≥µ£¨±ª±˘øÀ£¨øÀ¿◊$/;"	e	enum:TankType
TANK_TYPE_DANCE	tmpcode/commond.h	/^	 TANK_TYPE_DANCE = 8,		\/\/À´»ÀŒË$/;"	e	enum:TankType
TANK_TYPE_DIGUO	tmpcode/commond.h	/^	 TANK_TYPE_DIGUO = 10,		\/\/µ€π˙$/;"	e	enum:TankType
TANK_TYPE_EARTH	tmpcode/commond.h	/^	 TANK_TYPE_EARTH = 1,		\/\/ºÙµ∂$/;"	e	enum:TankType
TANK_TYPE_FABAO	tmpcode/commond.h	/^	 TANK_TYPE_FABAO = 7,		\/\/∑®±¶–ﬁ¡∂$/;"	e	enum:TankType
TANK_TYPE_HAIZHAN	tmpcode/commond.h	/^	 TANK_TYPE_HAIZHAN = 9,		\/\/∫£’Ω$/;"	e	enum:TankType
TANK_TYPE_IRON	tmpcode/commond.h	/^	 TANK_TYPE_IRON = 4,		\/\/Ã˙Ó¯’Ω≥µ£¨±ª¿◊øÀ£¨øÀª$/;"	e	enum:TankType
TANK_TYPE_MAX	tmpcode/commond.h	/^	 TANK_TYPE_MAX,$/;"	e	enum:TankType
TANK_TYPE_QUEST	tmpcode/commond.h	/^	 TANK_TYPE_QUEST = 11,		\/\/»ŒŒÒ$/;"	e	enum:TankType
TANK_TYPE_RATTAN	tmpcode/commond.h	/^	 TANK_TYPE_RATTAN = 0,		\/\/√…∆§’Ω≥µ£¨±ªªøÀ£¨øÀ±˘$/;"	e	enum:TankType
TANK_TYPE_SHENGCHENG	tmpcode/commond.h	/^	 TANK_TYPE_SHENGCHENG = 12,	\/\/ •≥«’Ω$/;"	e	enum:TankType
TANK_TYPE_SHENGCHENG_NAVY	tmpcode/commond.h	/^	 TANK_TYPE_SHENGCHENG_NAVY = 13,	\/\/ •≥«∫£’Ω$/;"	e	enum:TankType
TANK_TYPE_SWEET	tmpcode/commond.h	/^	 TANK_TYPE_SWEET = 6,		\/\/«È¬¬’Ω≥µ$/;"	e	enum:TankType
TANK_TYPE_UNION	tmpcode/commond.h	/^	 TANK_TYPE_UNION = 3,		\/\/”∂±¯Õ≈’Ω≥µ(œ÷‘⁄Ω–“∆∂Ø“™»˚)$/;"	e	enum:TankType
TANK_TYPE_WATER	tmpcode/commond.h	/^	 TANK_TYPE_WATER = 0,		\/\/ ØÕ∑$/;"	e	enum:TankType
TANK_TYPE_WIND	tmpcode/commond.h	/^	 TANK_TYPE_WIND = 2,		\/\/≤º$/;"	e	enum:TankType
TANK_USERCMD	tmpcode/commond.h	/^const BYTE TANK_USERCMD     = 53;$/;"	v
TASK_BUILD_MAGICFROGE_OBJECT	tmpcode/commond.h	/^const BYTE TASK_BUILD_MAGICFROGE_OBJECT = 210;$/;"	v
TASK_USERCMD	base/CmdType.h	/^const BYTE TASK_USERCMD      = 23;$/;"	v
TASK_USERCMD	tmpcode/commond.h	/^const BYTE TASK_USERCMD			  = 23;$/;"	v
TAX_COUNTRY_PARA	base/Command.h	/^const BYTE TAX_COUNTRY_PARA = 12;$/;"	v
TEAD_STATE_MEMBER	base/Command.h	/^  TEAD_STATE_MEMBER,$/;"	e	enum:Cmd::__anon71
TEAD_STATE_NONE	base/Command.h	/^  TEAD_STATE_NONE,$/;"	e	enum:Cmd::__anon71
TEAM	base/CharBase.h	/^  TEAM,\/\/Èòü‰ºç$/;"	e	enum:TempArchiveType
TEAMMEMBER_OFFLINE_USERCMD_PARA	base/Command.h	3647;"	d
TEAMMEMBER_OFFLINE_USERCMD_PARA	tmpcode/commond.h	8401;"	d
TEAM_ANSWER_NO	tmpcode/commond.h	/^   TEAM_ANSWER_NO,$/;"	e	enum:__anon254
TEAM_ANSWER_YES	tmpcode/commond.h	/^   TEAM_ANSWER_YES$/;"	e	enum:__anon254
TEAM_DEGREE_ADD_PARA	tmpcode/commond.h	6071;"	d
TEAM_EXP_MODE_NORMAL	base/Command.h	/^  TEAM_EXP_MODE_NORMAL,\/\/ÊôÆÈÄöÂàÜÈÖçÁªèÈ™åÊ®°Âºè$/;"	e	enum:Cmd::__anon100
TEAM_EXP_MODE_NORMAL	tmpcode/commond.h	/^	TEAM_EXP_MODE_NORMAL,\/\/∆’Õ®∑÷≈‰æ≠—Èƒ£ Ω$/;"	e	enum:__anon256
TEAM_EXP_MODE_SPECIAL	base/Command.h	/^  TEAM_EXP_MODE_SPECIAL,\/\/ÁâπÊÆäÂàÜÈÖçÁªèÈ™åÊ®°Âºè$/;"	e	enum:Cmd::__anon100
TEAM_EXP_MODE_SPECIAL	tmpcode/commond.h	/^	TEAM_EXP_MODE_SPECIAL,\/\/Ãÿ ‚∑÷≈‰æ≠—Èƒ£ Ω$/;"	e	enum:__anon256
TEAM_HONOR	base/Command.h	/^  TEAM_HONOR,\/\/Ëç£Ë™âÊ®°Âºè$/;"	e	enum:Cmd::__anon99
TEAM_HONOR	tmpcode/commond.h	/^	TEAM_HONOR,\/\/»Ÿ”˛ƒ£ Ω$/;"	e	enum:__anon255
TEAM_JOIN_MODE_NORMAL	tmpcode/commond.h	/^	TEAM_JOIN_MODE_NORMAL,\/\/∆’Õ®º”»Îƒ£ Ω$/;"	e	enum:__anon258
TEAM_JOIN_MODE_SPECIAL	tmpcode/commond.h	/^	TEAM_JOIN_MODE_SPECIAL,\/\/≤ª–Ë“™…Í«Îº”»Îƒ£ Ω$/;"	e	enum:__anon258
TEAM_MAX	base/Command.h	/^  TEAM_MAX,\/\/Êó†ÊïàÊ®°Âºè$/;"	e	enum:Cmd::__anon99
TEAM_MAX	tmpcode/commond.h	/^	TEAM_MAX\/\/Œﬁ–ßƒ£ Ω$/;"	e	enum:__anon255
TEAM_MODE_USERCMD_PARA	base/Command.h	3701;"	d
TEAM_MODE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE TEAM_MODE_USERCMD_PARA = 18;$/;"	v
TEAM_NORMAL	base/Command.h	/^  TEAM_NORMAL,\/\/ÊôÆÈÄöÊ®°Âºè$/;"	e	enum:Cmd::__anon99
TEAM_NORMAL	tmpcode/commond.h	/^	TEAM_NORMAL,\/\/∆’Õ®ƒ£ Ω$/;"	e	enum:__anon255
TEAM_OBJ_MODE_CAPTAIN	base/Command.h	/^  TEAM_OBJ_MODE_CAPTAIN,	\/\/sky ÈòüÈïøÂàÜÈÖçÊ®°Âºè$/;"	e	enum:Cmd::__anon101
TEAM_OBJ_MODE_NORMAL	base/Command.h	/^  TEAM_OBJ_MODE_NORMAL,		\/\/ÊôÆÈÄöÁâ©ÂìÅÂàÜÈÖçÊ®°Âºè$/;"	e	enum:Cmd::__anon101
TEAM_OBJ_MODE_NORMAL	tmpcode/commond.h	/^	TEAM_OBJ_MODE_NORMAL,\/\/∆’Õ®ŒÔ∆∑∑÷≈‰ƒ£ Ω$/;"	e	enum:__anon257
TEAM_OBJ_MODE_SPECIAL	base/Command.h	/^  TEAM_OBJ_MODE_SPECIAL,	\/\/ËΩÆÊµÅÁâ©ÂìÅÂàÜÈÖçÊ®°Âºè$/;"	e	enum:Cmd::__anon101
TEAM_OBJ_MODE_SPECIAL	tmpcode/commond.h	/^	TEAM_OBJ_MODE_SPECIAL,\/\/¬÷¡˜ŒÔ∆∑∑÷≈‰ƒ£ Ω$/;"	e	enum:__anon257
TEAM_RECRUIT_USERCMD	tmpcode/commond.h	/^const BYTE TEAM_RECRUIT_USERCMD =  131;$/;"	v
TEAM_STATE_HONOR_LEADER	tmpcode/commond.h	/^	TEAM_STATE_HONOR_LEADER,$/;"	e	enum:__anon223
TEAM_STATE_LEADER	base/Command.h	/^  TEAM_STATE_LEADER,$/;"	e	enum:Cmd::__anon71
TEAM_STATE_LEADER	tmpcode/commond.h	/^	TEAM_STATE_LEADER,$/;"	e	enum:__anon223
TEAM_STATE_MEMBER	tmpcode/commond.h	/^	TEAM_STATE_MEMBER ,$/;"	e	enum:__anon223
TEAM_STATE_NONE	tmpcode/commond.h	/^	TEAM_STATE_NONE ,$/;"	e	enum:__anon223
TECH_INFO	tmpcode/commond.h	/^	TECH_INFO,              \/\/ø∆ºº+æ¸Õ≈–≈œ¢$/;"	e	enum:__anon267
TECH_INFO_ONLY	tmpcode/commond.h	/^	TECH_INFO_ONLY,         \/\/ø∆ºº$/;"	e	enum:__anon267
TECH_VOTE	base/Command.h	/^  TECH_VOTE \/\/ ÁßëÊäÄÊäïÁ•®$/;"	e	enum:Cmd::__anon117
TELE_PKGAME_PARA	base/SessionCommand.h	/^    const BYTE TELE_PKGAME_PARA = 1;$/;"	v
TELL_WORLD_DTS_PARA	tmpcode/commond.h	/^ const BYTE TELL_WORLD_DTS_PARA = 8;$/;"	v
TEST_SUB_DIRS	Makefile	/^TEST_SUB_DIRS =  base\/EncDec base $/;"	m
TIAN_SHI_ZHI_YI	tmpcode/commond.h	/^	TIAN_SHI_ZHI_YI = 3313,\/\/ÃÏ π÷Æ“Ì$/;"	e	enum:__anon205
TIAO_ZHAN	tmpcode/commond.h	/^	TIAO_ZHAN = 11102,\/\/Ã¯’∂$/;"	e	enum:__anon205
TICKET_SELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE TICKET_SELECT_USERCMD_PARA = 7;$/;"	v
TILE_BLOCK	Robot/LoadMap.h	20;"	d
TILE_BLOCK	ScenesServer/LoadMap.h	20;"	d
TILE_DOOR	Robot/LoadMap.h	23;"	d
TILE_DOOR	ScenesServer/LoadMap.h	23;"	d
TILE_ENTRY_BLOCK	Robot/LoadMap.h	24;"	d
TILE_ENTRY_BLOCK	ScenesServer/LoadMap.h	24;"	d
TILE_MAGIC_BLOCK	Robot/LoadMap.h	21;"	d
TILE_MAGIC_BLOCK	ScenesServer/LoadMap.h	21;"	d
TILE_NOCREATE	Robot/LoadMap.h	22;"	d
TILE_NOCREATE	ScenesServer/LoadMap.h	22;"	d
TILE_OBJECT_BLOCK	Robot/LoadMap.h	25;"	d
TILE_OBJECT_BLOCK	ScenesServer/LoadMap.h	25;"	d
TIMESYNC_USERCMD_PARA	base/Command.h	/^const BYTE TIMESYNC_USERCMD_PARA = 25;$/;"	v
TIMESYNC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE TIMESYNC_USERCMD_PARA = 25;$/;"	v
TIMETICK_WRITEBACK	base/RecordCommand.h	/^      TIMETICK_WRITEBACK,\/\/\/ ÂÆöÊó∂ÂõûÂÜôÊ°£Ê°à$/;"	e	enum:Cmd::Record::WriteBack_Type
TIME_COUNT_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE TIME_COUNT_MAPSCREEN_USERCMD_PARA = 96;$/;"	v
TIME_COUNT_TANK_PARA	tmpcode/commond.h	/^const BYTE TIME_COUNT_TANK_PARA = 51;$/;"	v
TIME_FIREPLACE_USER_CMD	tmpcode/commond.h	/^const BYTE TIME_FIREPLACE_USER_CMD = 46;$/;"	v
TIME_USERCMD	base/CmdType.h	/^const BYTE TIME_USERCMD      = 2;$/;"	v
TIME_USERCMD	tmpcode/commond.h	/^const BYTE TIME_USERCMD			  = 2;$/;"	v
TIPINFO_FIREPLACE_USER_CMD	tmpcode/commond.h	/^const BYTE TIPINFO_FIREPLACE_USER_CMD = 48;$/;"	v
TITLE_USERCMD	tmpcode/commond.h	/^const BYTE TITLE_USERCMD = 132;$/;"	v
TM_no	base/zTCPClientTask.h	/^		TM_no,          \/**< √ª”–Ω· ¯»ŒŒÒ *\/$/;"	e	enum:zTCPClientTask::TerminateMethod
TM_service_close	base/zTCPClientTask.h	/^		TM_service_close      \/**< ∑˛ŒÒ∆˜º¥Ω´πÿ±’ *\/$/;"	e	enum:zTCPClientTask::TerminateMethod
TM_sock_error	base/zTCPClientTask.h	/^		TM_sock_error,      \/**< ºÏ≤‚µΩÃ◊Ω”ø⁄πÿ±’ªÚ’ﬂÃ◊Ω”ø⁄“Ï≥£ *\/$/;"	e	enum:zTCPClientTask::TerminateMethod
TOAtt_ATTACK_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE TOAtt_ATTACK_MAGIC_USERCMD_PARA = 2;$/;"	v
TODAY_HAS_DRAGON_ISLAND_MAZE	tmpcode/commond.h	/^const BYTE TODAY_HAS_DRAGON_ISLAND_MAZE = 54;$/;"	v
TODef_ATTACK_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE TODef_ATTACK_MAGIC_USERCMD_PARA = 3;$/;"	v
TOMB_PACK	ScenesServer/zCard.h	/^      TOMB_PACK	= 1024,$/;"	e	enum:CardSlots::__anon197
TONINE_ATTACK_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE TONINE_ATTACK_MAGIC_USERCMD_PARA = 4;$/;"	v
TONINE_SHOW_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE TONINE_SHOW_MAGIC_USERCMD_PARA = 37;$/;"	v
TOPIC_ACTIVE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE TOPIC_ACTIVE_USERCMD_PARA = 80;$/;"	v
TOP_KILL_COUNT_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE TOP_KILL_COUNT_MAPSCREEN_USERCMD_PARA = 107;$/;"	v
TOTEM_ACTION_END_PARA	tmpcode/commond.h	/^const BYTE TOTEM_ACTION_END_PARA = 7; \/\/Õ®÷™øÕªß∂ÀÕºÃ⁄∂¡»°Ω· ¯«Âæ≈∆¡∂Ø◊˜ server->client$/;"	v
TOZONE_FAIL	base/RolechangeCommand.h	/^	TOZONE_FAIL,	    \/\/◊™«¯ ß∞‹$/;"	e	enum:Cmd::Rolechange::__anon21
TOZONE_SUCCESS	base/RolechangeCommand.h	/^	TOZONE_SUCCESS,	    \/\/◊™«¯≥…π¶$/;"	e	enum:Cmd::Rolechange::__anon21
TO_BATTLE_ZONE	base/BattleUserCmd.h	/^	TO_BATTLE_ZONE,	    \/\/»•’Ω«¯$/;"	e	enum:Cmd::__anon12
TO_FAMILY	tmpcode/commond.h	/^    TO_FAMILY = 2,$/;"	e	enum:__anon360
TO_FRIEND	tmpcode/commond.h	/^    TO_FRIEND = 1,$/;"	e	enum:__anon360
TO_UNION	tmpcode/commond.h	/^    TO_UNION  = 3,    $/;"	e	enum:__anon360
TRACE	base/zLogger.h	/^	    static const zLevel * TRACE;$/;"	m	class:zLogger::zLevel
TRACE_INT	base/zLogger.h	/^		TRACE_INT    =   log4cxx::Level::INFO_INT,$/;"	e	enum:zLogger::zLevel::zLevelInt
TRADE_USERCMD	base/CmdType.h	/^const BYTE TRADE_USERCMD    = 17;$/;"	v
TRADE_USERCMD	tmpcode/commond.h	/^const BYTE TRADE_USERCMD		= 17;$/;"	v
TRADE_YUYIN_ITEM_PARA	tmpcode/commond.h	/^const BYTE TRADE_YUYIN_ITEM_PARA = 9;$/;"	v
TRAFFIC_NOTICE_CLOSE_BORDER	tmpcode/commond.h	/^	TRAFFIC_NOTICE_CLOSE_BORDER\/\/∑‚±ﬂ$/;"	e	enum:traffic_notice
TRAFFIC_NOTICE_NONE	tmpcode/commond.h	/^	TRAFFIC_NOTICE_NONE = 0,$/;"	e	enum:traffic_notice
TRANSFER_COUNTRY_KING_PARA	tmpcode/commond.h	30080;"	d
TRANSFER_COUNTRY_KING_TO_CITYMASTER_PARA	tmpcode/commond.h	30095;"	d
TRANSFER_FUND_FETCH_STOCKPARA	base/Command.h	7482;"	d
TRANSFER_FUND_FETCH_STOCKPARA	tmpcode/commond.h	23445;"	d
TRANSFER_FUND_SAVE_STOCKPARA	base/Command.h	7470;"	d
TRANSFER_FUND_SAVE_STOCKPARA	tmpcode/commond.h	23431;"	d
TRANSFER_TANKDRIVER_POWER	tmpcode/commond.h	/^const BYTE TRANSFER_TANKDRIVER_POWER = 36;$/;"	v
TRANSPORT_OBJECT_CONFIG_USERCMD_PARA	tmpcode/commond.h	/^const BYTE TRANSPORT_OBJECT_CONFIG_USERCMD_PARA = 225;$/;"	v
TRANS_CRYSTAL_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE TRANS_CRYSTAL_PROPERTY_USERCMD_PARA = 43;$/;"	v
TRANS_DARE_COUNTRY_PARA	base/Command.h	/^const BYTE TRANS_DARE_COUNTRY_PARA = 4;$/;"	v
TREND_EVENT_TYPE_MAX	tmpcode/commond.h	/^	TREND_EVENT_TYPE_MAX                     \/\/◊Ó¥Û÷µ,Œﬁ–ß÷µ$/;"	e	enum:__anon209
TREND_EVENT_TYPE_SELF	tmpcode/commond.h	/^	TREND_EVENT_TYPE_SELF,                   \/\/∑¢∏¯◊‘º∫µƒ∂ØÃ¨$/;"	e	enum:__anon209
TRIGGER_REQ_MASTER_PARA	tmpcode/commond.h	28786;"	d
TRIGGER_REQ_SPONSER_PARA	tmpcode/commond.h	/^const BYTE TRIGGER_REQ_SPONSER_PARA = 6;$/;"	v
TUANZHANG	tmpcode/commond.h	/^	 TUANZHANG,           \/\/Õ≈≥§  $/;"	e	enum:__anon215
TURN_BACK_MAIL_PARA	base/Command.h	/^const BYTE TURN_BACK_MAIL_PARA = 13;$/;"	v
TURN_BACK_MAIL_PARA	tmpcode/commond.h	/^const BYTE TURN_BACK_MAIL_PARA = 13;$/;"	v
TURN_USERCMD	base/CmdType.h	/^const BYTE TURN_USERCMD = 50;$/;"	v
TWO_DANCE	tmpcode/commond.h	/^        TWO_DANCE,              \/\/À´»ÀŒË$/;"	e	enum:enumDanceType
TWO_DANCE_EDIT	tmpcode/commond.h	/^        TWO_DANCE_EDIT,         \/\/◊‘±‡À´»ÀŒË$/;"	e	enum:enumDanceType
TWO_FREEDANCE	tmpcode/commond.h	/^	TWO_FREEDANCE=5,       \/\/À´»À◊‘”…ŒË$/;"	e	enum:enumDanceNO
TWO_KICKDANCE	tmpcode/commond.h	/^	TWO_KICKDANCE=121,     \/\/À´»ÀÃﬂÃ§ŒË$/;"	e	enum:enumDanceNO
TWO_MODENDANCE	tmpcode/commond.h	/^	TWO_MODENDANCE=101,    \/\/À´»Àœ÷¥˙ŒË$/;"	e	enum:enumDanceNO
TWO_RUSHDANCE	tmpcode/commond.h	/^	TWO_RUSHDANCE=131      \/\/À´»Àº™¬≥∞Õ$/;"	e	enum:enumDanceNO
TWO_SELFEDIT1	tmpcode/commond.h	/^	TWO_SELFEDIT1=2,       \/\/À´»À±‡º≠ŒË≤Ω1$/;"	e	enum:enumDanceNO
TWO_SELFEDIT2	tmpcode/commond.h	/^	TWO_SELFEDIT2=3,       \/\/À´»À±‡º≠ŒË≤Ω2$/;"	e	enum:enumDanceNO
TWO_WALTZDANCE	tmpcode/commond.h	/^	TWO_WALTZDANCE=111,    \/\/À´»Àª™∂˚◊»$/;"	e	enum:enumDanceNO
TYEP_DAY_GUARD	tmpcode/commond.h	/^	TYEP_DAY_GUARD          = 2,\/\/¿≠≥µ$/;"	e	enum:PERFORM_TYPE
TYPE_BACKZONE	base/RolechangeCommand.h	/^	TYPE_BACKZONE,	    \/\/ªÿ‘≠«¯$/;"	e	enum:Cmd::Rolechange::__anon19
TYPE_BACK_CHANGE_TRAVEL	base/RolechangeCommand.h	/^	TYPE_BACK_CHANGE_TRAVEL,    \/\/ªÿ¬√”Œ«∞µƒ«¯$/;"	e	enum:Cmd::Rolechange::__anon19
TYPE_CHANGE_TRAVEL	base/RolechangeCommand.h	/^	TYPE_CHANGE_TRAVEL, \/\/¬√”Œ◊™«¯$/;"	e	enum:Cmd::Rolechange::__anon19
TYPE_CHANGE_ZONE	base/RolechangeCommand.h	/^	TYPE_CHANGE_ZONE,   \/\/”¿æ√◊™«¯$/;"	e	enum:Cmd::Rolechange::__anon19
TYPE_CONSORT	base/SessionCommand.h	/^      TYPE_CONSORT,\/\/ Â§´Â¶ªÁ±ªÂûã$/;"	e	enum:Cmd::Session::__anon39
TYPE_DAYGUARD_POINT	tmpcode/commond.h	/^	TYPE_DAYGUARD_POINT     = 10,\/\/æ≠—È≥µ±∂ ˝$/;"	e	enum:PERFORM_TYPE
TYPE_DRAGON	tmpcode/commond.h	/^	TYPE_DRAGON             = 7,\/\/¡˙≥ËÃÙ’Ω$/;"	e	enum:PERFORM_TYPE
TYPE_DRINK	tmpcode/commond.h	/^	TYPE_DRINK              = 12,\/\/∫»æ∆¥Œ ˝$/;"	e	enum:PERFORM_TYPE
TYPE_FRIEND	base/SessionCommand.h	/^      TYPE_FRIEND,\/\/ ÊúãÂèãÁ±ªÂûã$/;"	e	enum:Cmd::Session::__anon39
TYPE_GENERAL	GatewayServer/GatewayServer.h	/^	TYPE_GENERAL		=	0, \/\/ ∆’Õ®$/;"	e	enum:SERVER_TYPE
TYPE_GENERAL	base/Command.h	/^	TYPE_GENERAL		=	0, \/\/ ÊôÆÈÄö$/;"	e	enum:Cmd::SERVER_TYPE
TYPE_MAX_TYPE	tmpcode/commond.h	/^	TYPE_MAX_TYPE = 13$/;"	e	enum:PERFORM_TYPE
TYPE_ME_2_ME	tmpcode/commond.h	/^	TYPE_ME_2_ME = 0,$/;"	e	enum:FARM_NOTICE_TYPE
TYPE_ME_2_OTHER	tmpcode/commond.h	/^	TYPE_ME_2_OTHER,$/;"	e	enum:FARM_NOTICE_TYPE
TYPE_OTHER_2_ME	tmpcode/commond.h	/^	TYPE_OTHER_2_ME$/;"	e	enum:FARM_NOTICE_TYPE
TYPE_PEACE	GatewayServer/GatewayServer.h	/^	TYPE_PEACE		=	1,     \/\/ ∫Õ∆Ω$/;"	e	enum:SERVER_TYPE
TYPE_PEACE	base/Command.h	/^	TYPE_PEACE		=	1,     \/\/ ÂíåÂπ≥$/;"	e	enum:Cmd::SERVER_TYPE
TYPE_PRENTICE	base/SessionCommand.h	/^      TYPE_PRENTICE,\/\/ ÂæíÂºüÁ±ªÂûã$/;"	e	enum:Cmd::Session::__anon39
TYPE_RELIVE	tmpcode/commond.h	/^	TYPE_RELIVE             = 11,\/\/‘≠µÿ∏¥ªÓ¥Œ ˝$/;"	e	enum:PERFORM_TYPE
TYPE_SEPT_QUEST	tmpcode/commond.h	/^	TYPE_SEPT_QUEST         = 3,\/\/º“◊Â–¸…Õ$/;"	e	enum:PERFORM_TYPE
TYPE_SHENMI_NEXT	tmpcode/commond.h	/^	TYPE_SHENMI_NEXT        = 9,\/\/…Ò√ÿƒπ—®∫Û–¯»ŒŒÒ$/;"	e	enum:PERFORM_TYPE
TYPE_SHENMI_QUEST	tmpcode/commond.h	/^	TYPE_SHENMI_QUEST       = 8,\/\/…Ò√ÿƒπ—®»ŒŒÒ$/;"	e	enum:PERFORM_TYPE
TYPE_SHIMING	tmpcode/commond.h	/^	TYPE_SHIMING            = 1,\/\/ π√¸      $/;"	e	enum:PERFORM_TYPE
TYPE_SHOUHUN	tmpcode/commond.h	/^	TYPE_SHOUHUN            = 6,\/\/À—ªÍ$/;"	e	enum:PERFORM_TYPE
TYPE_TEACHER	base/SessionCommand.h	/^      TYPE_TEACHER,\/\/ Â∏àÂÇÖÁ±ªÂûã$/;"	e	enum:Cmd::Session::__anon39
TYPE_TOZONE	base/RolechangeCommand.h	/^	TYPE_TOZONE,	    \/\/»•’Ω«¯$/;"	e	enum:Cmd::Rolechange::__anon19
TYPE_UNION_COLLECT	tmpcode/commond.h	/^	TYPE_UNION_COLLECT      = 4,\/\/∂‡∂‡“Ê…∆$/;"	e	enum:PERFORM_TYPE
TYPE_UNION_QUEST	tmpcode/commond.h	/^	TYPE_UNION_QUEST        = 5,\/\/Õ˛√˚‘∂—Ô$/;"	e	enum:PERFORM_TYPE
T_MSEC	base/zMTCPServer.h	/^	static const int T_MSEC =2100;      \/**< ¬÷—Ø≥¨ ±£¨∫¡√Î *\/$/;"	m	class:zMTCPServer
T_MSEC	base/zTCPServer.h	/^	static const int T_MSEC =2100;      \/**< ¬÷—Ø≥¨ ±£¨∫¡√Î *\/$/;"	m	class:zTCPServer
T_RD_MSEC	base/zSocket.h	/^	static const int T_RD_MSEC          =  2100;          \/**< ∂¡»°≥¨ ±µƒ∫¡√Î ˝ *\/$/;"	m	class:zSocket
T_WR_MSEC	base/zSocket.h	/^	static const int T_WR_MSEC          =  5100;          \/**< ∑¢ÀÕ≥¨ ±µƒ∫¡√Î ˝ *\/$/;"	m	class:zSocket
TabKey	tmpcode/commond.h	/^	TabKey() $/;"	f	struct:TabKey
TabKey	tmpcode/commond.h	/^struct TabKey$/;"	s
TabKeyNum	tmpcode/commond.h	/^	struct TabKeyNum$/;"	s	struct:stTabKeyPropertyUserCmd
TabNum	ScenesServer/zCard.h	/^	BYTE TabNum; \/\/sky Áé©ÂÆ∂ÂèØ‰ª•‰ΩøÁî®ÁöÑÂåÖË£πÈ°µÊï∞$/;"	m	class:BattleSlot
TabNum	ScenesServer/zCard.h	/^	BYTE TabNum; \/\/sky Áé©ÂÆ∂ÂèØ‰ª•‰ΩøÁî®ÁöÑÂåÖË£πÈ°µÊï∞$/;"	m	class:EquipSlot
TabNum	ScenesServer/zCard.h	/^	BYTE TabNum; \/\/sky Áé©ÂÆ∂ÂèØ‰ª•‰ΩøÁî®ÁöÑÂåÖË£πÈ°µÊï∞$/;"	m	class:HandSlot
TabNum	ScenesServer/zCard.h	/^	BYTE TabNum; \/\/sky Áé©ÂÆ∂ÂèØ‰ª•‰ΩøÁî®ÁöÑÂåÖË£πÈ°µÊï∞$/;"	m	class:HeroSlot
TabNum	ScenesServer/zCard.h	/^	BYTE TabNum; \/\/sky Áé©ÂÆ∂ÂèØ‰ª•‰ΩøÁî®ÁöÑÂåÖË£πÈ°µÊï∞$/;"	m	class:SkillSlot
TabNum	ScenesServer/zCard.h	/^	BYTE TabNum; \/\/sky Áé©ÂÆ∂ÂèØ‰ª•‰ΩøÁî®ÁöÑÂåÖË£πÈ°µÊï∞$/;"	m	class:TombSlot
TabNum	ScenesServer/zObject.h	/^	BYTE TabNum; \/\/sky Áé©ÂÆ∂ÂèØ‰ª•‰ΩøÁî®ÁöÑÂåÖË£πÈ°µÊï∞$/;"	m	class:MainPack
TableManager	base/zMetaData.h	/^	typedef std::map<std::string,DBFieldSet*> TableManager;$/;"	t	class:DBMetaData
TableMember	base/zMetaData.h	/^	typedef TableManager::iterator TableMember;$/;"	t	class:DBMetaData
TankAtkType	tmpcode/commond.h	/^ enum TankAtkType$/;"	g
TankBuff	tmpcode/commond.h	/^ enum TankBuff$/;"	g
TankBuffValue	tmpcode/commond.h	/^	 TankBuffValue()$/;"	f	struct:TankBuffValue
TankBuffValue	tmpcode/commond.h	/^ struct TankBuffValue$/;"	s
TankColor	tmpcode/commond.h	/^ enum TankColor$/;"	g
TankData	tmpcode/commond.h	/^	TankData()$/;"	f	struct:TankData
TankData	tmpcode/commond.h	/^struct TankData$/;"	s
TankHole	tmpcode/commond.h	/^ struct TankHole$/;"	s
TankHoleType	tmpcode/commond.h	/^ enum TankHoleType$/;"	g
TankPartType	tmpcode/commond.h	/^ enum TankPartType$/;"	g
TankType	tmpcode/commond.h	/^ enum TankType$/;"	g
TaskContainer	SessionServer/SessionTaskManager.h	/^    typedef std::list<SessionTask *> TaskContainer;$/;"	t	class:SessionTaskManager
TaskContainer_iterator	SessionServer/SessionTaskManager.h	/^    typedef TaskContainer::iterator TaskContainer_iterator;$/;"	t	class:SessionTaskManager
TaxHistory	tmpcode/commond.h	/^	TaxHistory()$/;"	f	struct:TaxHistory
TaxHistory	tmpcode/commond.h	/^struct TaxHistory$/;"	s
TeamAction	ScenesServer/QuestAction.h	/^  TeamAction(ScenesParser& p)$/;"	f	class:TeamAction
TeamAction	ScenesServer/QuestAction.h	/^class TeamAction : public Action$/;"	c
TeamCondition	ScenesServer/QuestCondition.h	/^  TeamCondition(ScenesParser& p)$/;"	f	class:TeamCondition
TeamCondition	ScenesServer/QuestCondition.h	/^class TeamCondition : public Condition$/;"	c
TeamSkillExec	ScenesServer/SceneSkill.cpp	/^  TeamSkillExec(SceneUser *user,zSkill *s)$/;"	f	struct:TeamSkillExec
TeamSkillExec	ScenesServer/SceneSkill.cpp	/^struct TeamSkillExec : public TeamMemExec$/;"	s
TeamThisID	base/SessionCommand.h	/^		DWORD TeamThisID;		\/\/sky Èòü‰ºçÂîØ‰∏ÄID$/;"	m	struct:Cmd::Session::t_Team_AddMoveSceneMember
TeamThisID	base/SessionCommand.h	/^		DWORD TeamThisID; \/\/Èòü‰ºçÂîØ‰∏ÄID$/;"	m	struct:Cmd::Session::t_Team_AddMe
TeamThisID	base/SessionCommand.h	/^		DWORD TeamThisID;$/;"	m	struct:Cmd::Session::t_Team_DelTeam
TeamVar	ScenesServer/Quest.h	/^typedef GlobalVarImpl<6> TeamVar;$/;"	t
TempArchive	SessionServer/TempArchive.h	/^  TempArchive() $/;"	f	struct:TempArchive
TempArchive	SessionServer/TempArchive.h	/^struct TempArchive $/;"	s
TempArchiveMember	base/CharBase.h	/^struct TempArchiveMember$/;"	s
TempArchiveType	base/CharBase.h	/^enum TempArchiveType$/;"	g
TempArchive_iterator	SessionServer/TempArchive.h	/^    typedef TempArchive_map::iterator TempArchive_iterator;$/;"	t	class:GlobalTempArchiveIndex
TempArchive_map	SessionServer/TempArchive.h	/^    typedef std::map<DWORD,TempArchive *> TempArchive_map;$/;"	t	class:GlobalTempArchiveIndex
TempArchive_value_type	SessionServer/TempArchive.h	/^    typedef TempArchive_map::value_type TempArchive_value_type;$/;"	t	class:GlobalTempArchiveIndex
TempObjectItem	tmpcode/commond.h	/^struct TempObjectItem$/;"	s
TempSortData	tmpcode/commond.h	/^    TempSortData()$/;"	f	struct:TempSortData
TempSortData	tmpcode/commond.h	/^struct TempSortData$/;"	s
Terminate	GatewayServer/GateUser.cpp	/^void GateUser::Terminate()$/;"	f	class:GateUser
Terminate	GatewayServer/GatewayTask.cpp	/^void GatewayTask::Terminate(const TerminateMethod method)$/;"	f	class:GatewayTask
Terminate	base/zService.h	/^	void Terminate()$/;"	f	class:zService
Terminate	base/zTCPClientTask.h	/^	void Terminate(const TerminateMethod method)$/;"	f	class:zTCPClientTask
Terminate	base/zTCPTask.h	/^	virtual void Terminate(const TerminateMethod method = terminate_passive)$/;"	f	class:zTCPTask
TerminateMethod	base/zTCPClientTask.h	/^	enum TerminateMethod$/;"	g	class:zTCPClientTask
TerminateMethod	base/zTCPTask.h	/^	enum TerminateMethod$/;"	g	class:zTCPTask
TerminateWait	base/zTCPTask.h	/^	void TerminateWait()$/;"	f	class:zTCPTask
TestConfig	base/xmlparser/test.h	/^struct TestConfig$/;"	s
ThingID	tmpcode/commond.h	/^	DWORD ThingID;			\/\/ ∆Ô∑…¡˙¥Ê∑≈∑…¡˙µƒID$/;"	m	struct:stSetStateMapScreenUserCmd
ThingID	tmpcode/commond.h	/^	DWORD ThingID;$/;"	m	struct:stSitDownChairUserCmd
ThroAddDam	ScenesServer/ScenePk.h	/^	  SWORD ThroAddDam;		\/\/sky Â¢ûÂä†ÊäïÊé∑Ê≠¶Âô®‰º§ÂÆ≥ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
ThroAddDamA	ScenesServer/ScenePk.h	/^	  SWORD ThroAddDamA;	\/\/sky Â¢ûÂä†ÊäïÊé∑Ê≠¶Âô®‰º§ÂÆ≥Âõ∫ÂÆöÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
Throflag	ScenesServer/SceneEntryPk.h	/^	bool Throflag;		\/\/sky ÊäïÊé∑Ê≠¶Âô®Â¢ûÂä†‰º§ÂÆ≥Ê†áÂøó$/;"	m	struct:SceneEntryPk
Tile	Robot/LoadMap.h	/^typedef stSrvMapTile Tile;$/;"	t
Tile	ScenesServer/LoadMap.h	/^typedef stSrvMapTile Tile;$/;"	t
Timer	ScenesServer/QuestEvent.h	/^  class Timer$/;"	c	namespace:Trigger
Timer	base/zTime.h	/^	Timer(const float how_long,const int delay=0) : _long((int)(how_long*1000)),_timer(delay*1000)$/;"	f	class:Timer
Timer	base/zTime.h	/^	Timer(const float how_long,const zRTime cur) : _long((int)(how_long*1000)),_timer(cur)$/;"	f	class:Timer
Timer	base/zTime.h	/^class Timer$/;"	c
TitleInfo	tmpcode/commond.h	/^	TitleInfo (const TitleInfo& t)$/;"	f	struct:TitleInfo
TitleInfo	tmpcode/commond.h	/^	TitleInfo():id(0),firstQuestID(0),lastQuestID(0),x(0),y(0) $/;"	f	struct:TitleInfo
TitleInfo	tmpcode/commond.h	/^struct TitleInfo  \/\/—´’¬–≈œ¢$/;"	s
TitleQuest	tmpcode/commond.h	/^	TitleQuest()$/;"	f	struct:TitleQuest
TitleQuest	tmpcode/commond.h	/^struct TitleQuest$/;"	s
TitleState	tmpcode/commond.h	/^enum TitleState  \/\/—´’¬»ŒŒÒ◊¥Ã¨$/;"	g
ToLower	base/zString.h	/^struct ToLower$/;"	s	namespace:Zebra
ToUpper	base/zString.h	/^struct ToUpper$/;"	s	namespace:Zebra
TombSlot	ScenesServer/zCard.cpp	/^TombSlot::TombSlot():CardSlot(Cmd::CARDCELLTYPE_RECORD,0,TombSlot::WIDTH,TombSlot::HEIGHT)$/;"	f	class:TombSlot
TombSlot	ScenesServer/zCard.h	/^class TombSlot:public CardSlot$/;"	c
TongVar	ScenesServer/Quest.h	/^typedef GlobalVarImpl<2> TongVar;$/;"	t
TraceLogAction	ScenesServer/QuestAction.h	/^	TraceLogAction(ScenesParser& p)$/;"	f	class:TraceLogAction
TraceLogAction	ScenesServer/QuestAction.h	/^class TraceLogAction : public Action$/;"	c
TrafficTaxHistory	tmpcode/commond.h	/^	TrafficTaxHistory()$/;"	f	struct:TrafficTaxHistory
TrafficTaxHistory	tmpcode/commond.h	/^struct TrafficTaxHistory$/;"	s
TransportPos	tmpcode/commond.h	/^struct TransportPos$/;"	s
Trigger	ScenesServer/QuestEvent.h	/^namespace Trigger {$/;"	n
Type	base/SessionCommand.h	/^		BYTE  Type;				\/\/sky ÊéíÈòüÁ±ªÂûã(0:‰∏™‰∫∫ 1:Èòü‰ºç)$/;"	m	struct:Cmd::Session::t_Sports_AddMeToQueuing
Type2Type	ScenesServer/zObject.h	/^class Type2Type$/;"	c
Type2Type2	ScenesServer/zCard.h	/^class Type2Type2$/;"	c
UATATE_CLAW	tmpcode/commond.h	/^	UATATE_CLAW			= 193,			\/\/π≥$/;"	e	enum:__anon224
UNCOMBIN_USERCMD_PARA	base/Command.h	/^const BYTE UNCOMBIN_USERCMD_PARA = 23;$/;"	v
UNIONMEMBER_LEAVE_UNION_PARA	base/Command.h	/^const BYTE UNIONMEMBER_LEAVE_UNION_PARA = 12;$/;"	v
UNIONMEMBER_LEAVE_UNION_PARA	tmpcode/commond.h	/^const BYTE UNIONMEMBER_LEAVE_UNION_PARA = 12;$/;"	v
UNIONPOSITION	tmpcode/commond.h	/^enum UNIONPOSITION$/;"	g
UNIONPOWER	base/Command.h	/^enum UNIONPOWER {$/;"	g	namespace:Cmd
UNIONPOWER	tmpcode/commond.h	/^enum UNIONPOWER $/;"	g
UNIONSKILL_USERCMD	tmpcode/commond.h	/^const BYTE UNIONSKILL_USERCMD	= 70;$/;"	v
UNIONTANKPARTFRAGMENT	tmpcode/commond.h	15574;"	d
UNIONTANK_NAME_PARA	tmpcode/commond.h	/^const BYTE UNIONTANK_NAME_PARA = 48;$/;"	v
UNIONUSEROBJECT_PROPERTY_USERCMD_PARAMETER	base/Command.h	2550;"	d
UNION_ADD_MEMBER	base/Command.h	/^enum UNION_ADD_MEMBER{$/;"	g	namespace:Cmd
UNION_ADD_MEMBER	tmpcode/commond.h	/^enum UNION_ADD_MEMBER{$/;"	g
UNION_ADD_MEMBER_SUCCESS_PARA	tmpcode/commond.h	/^const BYTE UNION_ADD_MEMBER_SUCCESS_PARA = 175;$/;"	v
UNION_APPOINT_MASTER_PARA	tmpcode/commond.h	/^const BYTE UNION_APPOINT_MASTER_PARA = 169;$/;"	v
UNION_BASE_INFO_PARA	base/Command.h	/^const BYTE UNION_BASE_INFO_PARA = 11;$/;"	v
UNION_BASE_INFO_PARA	tmpcode/commond.h	/^const BYTE UNION_BASE_INFO_PARA = 11;$/;"	v
UNION_CFO	tmpcode/commond.h	/^	UNION_CFO							= 4,              \/\/\/ Õ≈…ÃŒÒ◊‹π‹$/;"	e	enum:UNIONPOSITION
UNION_CITY_DARE	base/Command.h	/^  UNION_CITY_DARE  = 4,\/\/ Â∏Æ‰ºöÂ§∫ÂüéÊàò$/;"	e	enum:Cmd::__anon120
UNION_COMMON	tmpcode/commond.h	/^	UNION_COMMON					= 0,				\/\/Õ≈‘±$/;"	e	enum:UNIONPOSITION
UNION_CRAFTSMAN	tmpcode/commond.h	/^	UNION_CRAFTSMAN			= 3,				\/\/\/ ≥«∞Óπ§Ω≥$/;"	e	enum:UNIONPOSITION
UNION_DARE	base/Command.h	/^  UNION_DARE  = 0,\/\/ Â∏Æ‰ºöÂØπÊàò $/;"	e	enum:Cmd::__anon120
UNION_DIY_MINISTER	tmpcode/commond.h	/^	UNION_DIY_MINISTER			= 6,				\/\/\/ Õ≈∞⁄∑≈-ø∆ºº¥Û≥º$/;"	e	enum:UNIONPOSITION
UNION_ENTER_MAP	tmpcode/commond.h	/^const BYTE UNION_ENTER_MAP = 45;$/;"	v
UNION_GENERAL	tmpcode/commond.h	/^	UNION_GENERAL					= 5,				\/\/\/ Õ≈¥ÛΩ´æ¸$/;"	e	enum:UNIONPOSITION
UNION_MARKET_DOWN_GOOD	tmpcode/commond.h	/^const BYTE UNION_MARKET_DOWN_GOOD = 155;$/;"	v
UNION_MASTER	tmpcode/commond.h	/^	UNION_MASTER					= 1,				\/\/Õ≈≥§$/;"	e	enum:UNIONPOSITION
UNION_MAX_POSITION	tmpcode/commond.h	/^	UNION_MAX_POSITION		= 7  \/\/\/ ◊Ó¥Û ˝¡ø               $/;"	e	enum:UNIONPOSITION
UNION_MEMBER_POWER_PARA	base/Command.h	/^const BYTE UNION_MEMBER_POWER_PARA = 18;$/;"	v
UNION_MEMBER_POWER_PARA	tmpcode/commond.h	/^const BYTE UNION_MEMBER_POWER_PARA = 18;$/;"	v
UNION_MEMBER_STATUS_ALIASCHANGE	base/Command.h	/^  UNION_MEMBER_STATUS_ALIASCHANGE    \/\/ ÊàêÂëòÂà´ÂêçÊîπÂèò$/;"	e	enum:Cmd::__anon105
UNION_MEMBER_STATUS_ALIASCHANGE	tmpcode/commond.h	/^	UNION_MEMBER_STATUS_ALIASCHANGE		\/\/ ≥…‘±±√˚∏ƒ±‰$/;"	e	enum:__anon265
UNION_MEMBER_STATUS_FIRE	base/Command.h	/^  UNION_MEMBER_STATUS_FIRE, \/\/ Â∏Æ‰ºöÊàêÂëòË¢´ÂºÄÈô§$/;"	e	enum:Cmd::__anon105
UNION_MEMBER_STATUS_FIRE	tmpcode/commond.h	/^	UNION_MEMBER_STATUS_FIRE,				\/\/ ∞Ôª·≥…‘±±ªø™≥˝$/;"	e	enum:__anon265
UNION_MEMBER_STATUS_NEWMEMBER	base/Command.h	/^  UNION_MEMBER_STATUS_NEWMEMBER,\/\/ Êñ∞Â¢ûÂä†Â∏Æ‰ºöÊàêÂëò$/;"	e	enum:Cmd::__anon105
UNION_MEMBER_STATUS_NEWMEMBER	tmpcode/commond.h	/^	UNION_MEMBER_STATUS_NEWMEMBER,			\/\/ –¬‘ˆº”∞Ôª·≥…‘±$/;"	e	enum:__anon265
UNION_MEMBER_STATUS_OFFLINE	base/Command.h	/^  UNION_MEMBER_STATUS_OFFLINE,\/\/ Â∏Æ‰ºöÊàêÂëò‰∏ãÁ∫ø$/;"	e	enum:Cmd::__anon105
UNION_MEMBER_STATUS_OFFLINE	tmpcode/commond.h	/^	UNION_MEMBER_STATUS_OFFLINE,			\/\/ ∞Ôª·≥…‘±œ¬œﬂ$/;"	e	enum:__anon265
UNION_MEMBER_STATUS_ONLINE	base/Command.h	/^  UNION_MEMBER_STATUS_ONLINE,\/\/ Â∏Æ‰ºöÊàêÂëò‰∏äÁ∫ø$/;"	e	enum:Cmd::__anon105
UNION_MEMBER_STATUS_ONLINE	tmpcode/commond.h	/^	UNION_MEMBER_STATUS_ONLINE,			\/\/ ∞Ôª·≥…‘±…œœﬂ$/;"	e	enum:__anon265
UNION_MERCH_INFO	tmpcode/commond.h	/^const DWORD UNION_MERCH_INFO = 181;$/;"	v
UNION_MERCH_ROAD_INFO	tmpcode/commond.h	/^const DWORD UNION_MERCH_ROAD_INFO = 180;$/;"	v
UNION_NAME_SING_TYPE	tmpcode/commond.h	/^	UNION_NAME_SING_TYPE    \/\/æ¸Õ≈“˜≥™$/;"	e	enum:__anon282
UNION_NOTICE_NORMAL	tmpcode/commond.h	/^	UNION_NOTICE_NORMAL,    \/\/\/ ”∂±¯Õ≈π´∏Ê∞Â»’≥£œ˚œ¢$/;"	e	enum:__anon311
UNION_NOTICE_NORMAL_BUILD	tmpcode/commond.h	/^	UNION_NOTICE_NORMAL_BUILD,              \/\/\/ Ω®÷˛ø∆ºº…˝º∂$/;"	e	enum:__anon313
UNION_NOTICE_NORMAL_CITY	tmpcode/commond.h	/^	UNION_NOTICE_NORMAL_CITY,               \/\/\/ …Í«Î≥«∞Ó$/;"	e	enum:__anon313
UNION_NOTICE_NORMAL_CITY_BATTLE	tmpcode/commond.h	/^	UNION_NOTICE_NORMAL_CITY_BATTLE,        \/\/\/ …Í«Î≥«’Ω$/;"	e	enum:__anon313
UNION_NOTICE_NORMAL_ESTABLISH	tmpcode/commond.h	/^	UNION_NOTICE_NORMAL_ESTABLISH = 0,      \/\/\/ Ω®¡¢”∂±¯Õ≈$/;"	e	enum:__anon313
UNION_NOTICE_NORMAL_POSITION	tmpcode/commond.h	/^	UNION_NOTICE_NORMAL_POSITION,           \/\/\/ ÷∞ŒÒ»Œ√‚$/;"	e	enum:__anon313
UNION_NOTICE_NORMAL_QUEST	tmpcode/commond.h	/^	UNION_NOTICE_NORMAL_QUEST,              \/\/\/ ∑¢≤º»ŒŒÒ$/;"	e	enum:__anon313
UNION_NOTICE_NORMAL_SALARY	tmpcode/commond.h	/^	UNION_NOTICE_NORMAL_SALARY,             \/\/\/ ∑¢π§◊ $/;"	e	enum:__anon313
UNION_NOTICE_NORMAL_SEPT	tmpcode/commond.h	/^	UNION_NOTICE_NORMAL_SEPT,               \/\/\/ ’– ’º“◊Â$/;"	e	enum:__anon313
UNION_NOTICE_SYS	tmpcode/commond.h	/^	UNION_NOTICE_SYS = 0,   \/\/\/ ”∂±¯Õ≈π´∏Ê∞ÂœµÕ≥œ˚œ¢$/;"	e	enum:__anon311
UNION_NOTICE_SYS_BUILD	tmpcode/commond.h	/^	UNION_NOTICE_SYS_BUILD,         \/\/\/ Ω®‘Ï°¢ø∆ººÕÍ≥…$/;"	e	enum:__anon312
UNION_NOTICE_SYS_MAINTAIN	tmpcode/commond.h	/^	UNION_NOTICE_SYS_MAINTAIN = 0,  \/\/\/ ≥«∞ÓŒ¨ª§∑—$/;"	e	enum:__anon312
UNION_PLANT_USERCMD	tmpcode/commond.h	/^const BYTE UNION_PLANT_USERCMD = 144;$/;"	v
UNION_RESIDENT_HIRE_LIST	tmpcode/commond.h	/^const BYTE UNION_RESIDENT_HIRE_LIST = 120;$/;"	v
UNION_SEC_MASTER	tmpcode/commond.h	/^	UNION_SEC_MASTER			= 2,				\/\/∏±Õ≈≥§$/;"	e	enum:UNIONPOSITION
UNION_SET_POSITION_PARA	tmpcode/commond.h	/^const BYTE UNION_SET_POSITION_PARA = 168;$/;"	v
UNION_SHOP_MEETING_INFO	tmpcode/commond.h	/^const DWORD UNION_SHOP_MEETING_INFO = 179;$/;"	v
UNION_STATUS_CHECK_PARA	base/Command.h	/^const BYTE UNION_STATUS_CHECK_PARA = 1;$/;"	v
UNION_TAKE_BACK_BUILD	tmpcode/commond.h	/^const BYTE UNION_TAKE_BACK_BUILD = 152;$/;"	v
UNION_UP_BUILD	tmpcode/commond.h	/^const BYTE UNION_UP_BUILD = 46;$/;"	v
UNION_USERCMD	base/CmdType.h	/^const BYTE UNION_USERCMD    = 21;$/;"	v
UNION_USERCMD	tmpcode/commond.h	/^const BYTE UNION_USERCMD		= 21;$/;"	v
UNION_VOTE	tmpcode/commond.h	/^	UNION_VOTE$/;"	e	enum:RECALL_VOTE_TYPE
UNKNOWNSERVER	base/zMisc.h	/^	UNKNOWNSERVER  =  0, \/** Êú™Áü•ÊúçÂä°Âô®Á±ªÂûã *\/$/;"	e	enum:ServerType
UNLOCK_FAIL	base/Command.h	/^    UNLOCK_FAIL,	\/\/Ω˚÷πΩ‚À¯$/;"	e	enum:Cmd::__anon68
UNLOCK_NORMAL	base/Command.h	/^    UNLOCK_NORMAL,	    \/\/Ω«…´’˝≥£$/;"	e	enum:Cmd::__anon68
UNLOCK_ONLINEINKF	base/Command.h	/^    UNLOCK_ONLINEINKF,	    \/\/‘⁄øÁ∑˛÷–¥¶”⁄‘⁄œﬂ◊¥Ã¨$/;"	e	enum:Cmd::__anon68
UNLOCK_SUCCESS	base/Command.h	/^    UNLOCK_SUCCESS,	\/\/Ω‚À¯≥…π¶$/;"	e	enum:Cmd::__anon68
UNLOCK_TARGETTIMEFAIL	base/Command.h	/^    UNLOCK_TARGETTIMEFAIL,  \/\/Ω˚÷πΩ‚À¯$/;"	e	enum:Cmd::__anon68
UNLOCK_TIMEFAIL	base/Command.h	/^    UNLOCK_TIMEFAIL,	\/\/ ±º‰≤ª◊„∞Î–° ±$/;"	e	enum:Cmd::__anon68
UNMARRY_PARA	base/Command.h	6198;"	d
UNMARRY_PARA	tmpcode/commond.h	/^const BYTE UNMARRY_PARA = 5;$/;"	v
UNREGUSER_RET_CHANGE_SCENE	base/SceneCommand.h	/^    const BYTE UNREGUSER_RET_CHANGE_SCENE=2;$/;"	v
UNREGUSER_RET_ERROR	base/SceneCommand.h	/^    const BYTE UNREGUSER_RET_ERROR=1;$/;"	v
UNREGUSER_RET_ERROR	base/SessionCommand.h	/^    const BYTE UNREGUSER_RET_ERROR=1;$/;"	v
UNREGUSER_RET_KICKOUT	base/SceneCommand.h	/^    const BYTE UNREGUSER_RET_KICKOUT=3;$/;"	v
UNREGUSER_RET_LOGOUT	base/SceneCommand.h	/^    const BYTE UNREGUSER_RET_LOGOUT=0;$/;"	v
UNREGUSER_RET_LOGOUT	base/SessionCommand.h	/^    const BYTE UNREGUSER_RET_LOGOUT=0;$/;"	v
UNREGUSER_RET_UNLOAD_SCENE	base/SceneCommand.h	/^    const BYTE UNREGUSER_RET_UNLOAD_SCENE=4;$/;"	v
UN_STATE_CHANGE_FACE	base/Command.h	/^  UN_STATE_CHANGE_FACE,$/;"	e	enum:Cmd::enmUnStateType
UN_STATE_COMBIN	base/Command.h	/^  UN_STATE_COMBIN,$/;"	e	enum:Cmd::enmUnStateType
UN_STATE_NUM	base/Command.h	/^  UN_STATE_NUM$/;"	e	enum:Cmd::enmUnStateType
UN_STATE_TEAM_ATTACK_BIRD	base/Command.h	/^  UN_STATE_TEAM_ATTACK_BIRD = USTATE_TEAM_ATTACK_BIRD_FLAG,$/;"	e	enum:Cmd::enmUnStateType
UN_STATE_TEAM_ATTACK_FLOW	base/Command.h	/^  UN_STATE_TEAM_ATTACK_FLOW = USTATE_TEAM_ATTACK_FLOW_CLOUD,$/;"	e	enum:Cmd::enmUnStateType
UN_STATE_TEAM_ATTACK_ONE_DIM	base/Command.h	/^  UN_STATE_TEAM_ATTACK_ONE_DIM = USTATE_TEAM_ATTACK_ONE_DIM,$/;"	e	enum:Cmd::enmUnStateType
UPDATE_COUNTRY_ALLY_PARA	base/Command.h	9027;"	d
UPDATE_COUNTRY_KING	base/Command.h	/^const BYTE UPDATE_COUNTRY_KING = 18;$/;"	v
UPDATE_COUNTRY_STAR	base/Command.h	/^const BYTE UPDATE_COUNTRY_STAR = 15;$/;"	v
UPDATE_HOUSEROOM_RENQI_USERCMD	tmpcode/commond.h	/^const BYTE UPDATE_HOUSEROOM_RENQI_USERCMD = 35;$/;"	v
UPDATE_INTENSIFY_RAGE_NUM	tmpcode/commond.h	/^const BYTE UPDATE_INTENSIFY_RAGE_NUM = 232;$/;"	v
UPDATE_NOTICE	tmpcode/commond.h	/^	UPDATE_NOTICE = 3, \/\/∏¸–¬$/;"	e	enum:putType
UPDATE_SCORE_SEPT_POPO_PARA	tmpcode/commond.h	26554;"	d
UPDATE_SHOP_ADV_USERCMD_PARAMETER	base/Command.h	4207;"	d
UPDATE_STORE_PASS_USERCMD_PARAMETER	base/Command.h	4093;"	d
UPDATE_STORE_PASS_USERCMD_PARAMETER	tmpcode/commond.h	12209;"	d
UPDATE_STOVE_DATA_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE UPDATE_STOVE_DATA_PROPERTY_USERCMD_PARA = 163;$/;"	v
UPDATE_TRADE_MONEY_USERCMD	base/Command.h	4224;"	d
UPDATE_UNION_ALLY_PARA	tmpcode/commond.h	13385;"	d
UPGRADE	tmpcode/commond.h	/^            UPGRADE = 3,$/;"	e	enum:ReuildType
UPGRADECELLTYPE_JEWEL1	base/Command.h	/^  UPGRADECELLTYPE_JEWEL1=1,\/\/\/ ÂçáÁ∫ßÂÆùÁü≥Ê†ºÂ≠ê1$/;"	e	enum:Cmd::__anon90
UPGRADECELLTYPE_JEWEL2	base/Command.h	/^  UPGRADECELLTYPE_JEWEL2=2,\/\/\/ ÂçáÁ∫ßÂÆùÁü≥Ê†ºÂ≠ê2$/;"	e	enum:Cmd::__anon90
UPGRADECELLTYPE_UPER	base/Command.h	/^  UPGRADECELLTYPE_UPER=0,\/\/\/ Ë¢´ÂçáÁ∫ßÁöÑÁâ©ÂìÅ$/;"	e	enum:Cmd::__anon90
UPGRADEITEM_PROPERTY_USERCMD_PARA	base/Command.h	2626;"	d
UPGRADEUSERSKILL_PROPERTY_USERCMD_PARA	base/Command.h	2693;"	d
UPGRADE_FLYSKILL_MAGUC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE UPGRADE_FLYSKILL_MAGUC_USERCMD_PARA = 47;$/;"	v
UPGRADE_GUILD_MANTEAU_USERCMD_PARA	tmpcode/commond.h	/^const BYTE UPGRADE_GUILD_MANTEAU_USERCMD_PARA = 201;$/;"	v
UPGRADE_SOIL_HOUSE_USERCMD	tmpcode/commond.h	/^const BYTE UPGRADE_SOIL_HOUSE_USERCMD = 30;$/;"	v
UP_TECH_DEGREE_PARA	base/Command.h	5188;"	d
USEOBJECT_SCROLL_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  USEOBJECT_SCROLL_PROPERTY_USERCMD_PARA = 144;$/;"	v
USEREFFECT_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE USEREFFECT_DATA_USERCMD_PARA = 132;$/;"	v
USERFULLEFFECT_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE USERFULLEFFECT_DATA_USERCMD_PARA = 133;$/;"	v
USERFULLMODEL_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE USERFULLMODEL_DATA_USERCMD_PARA = 131;$/;"	v
USERGAMETIME_TIMER_USERCMD_PARA	base/Command.h	/^const BYTE USERGAMETIME_TIMER_USERCMD_PARA  = 3;$/;"	v
USERGAMETIME_TIMER_USERCMD_PARA	tmpcode/commond.h	/^const BYTE USERGAMETIME_TIMER_USERCMD_PARA  = 3;$/;"	v
USERGOTOMAP_MOVE_USERCMD_PARA	base/Command.h	/^const BYTE USERGOTOMAP_MOVE_USERCMD_PARA = 12;$/;"	v
USERINFO_SELECT_USERCMD_PARA	base/Command.h	/^const BYTE USERINFO_SELECT_USERCMD_PARA = 1;$/;"	v
USERINFO_SELECT_USERCMD_PARA	tmpcode/commond.h	/^const BYTE USERINFO_SELECT_USERCMD_PARA = 1;$/;"	v
USERINSTANTJUMP_MOVE_USERCMD_PARA	base/Command.h	/^const BYTE USERINSTANTJUMP_MOVE_USERCMD_PARA = 10;$/;"	v
USERINSTANTJUMP_MOVE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE USERINSTANTJUMP_MOVE_USERCMD_PARA = 10;$/;"	v
USERMODEL_DATA_USERCMD_PARA	tmpcode/commond.h	/^const BYTE USERMODEL_DATA_USERCMD_PARA = 130;$/;"	v
USERMOVE_MOVE_USERCMD_PARA	base/Command.h	/^const BYTE USERMOVE_MOVE_USERCMD_PARA = 2;$/;"	v
USERMOVE_MOVE_USERCMD_PARA	tmpcode/commond.h	/^const BYTE USERMOVE_MOVE_USERCMD_PARA		= 1;$/;"	v
USER_LIST_TANK_PARA	tmpcode/commond.h	/^const BYTE USER_LIST_TANK_PARA = 15;$/;"	v
USER_REFRAIN_LOGIN_PARA	base/Command.h	/^const BYTE USER_REFRAIN_LOGIN_PARA = 23;$/;"	v
USER_REQUEST_LOGIN_PARA	base/Command.h	/^const BYTE USER_REQUEST_LOGIN_PARA = 2;$/;"	v
USER_REQUEST_LOGIN_PARA	tmpcode/commond.h	/^const BYTE USER_REQUEST_LOGIN_PARA = 2;$/;"	v
USER_REQUEST_MTCARD_PARA	tmpcode/commond.h	/^const BYTE USER_REQUEST_MTCARD_PARA = 17;$/;"	v
USER_SETTING_AUTOFINDPATH	base/Command.h	/^  USER_SETTING_AUTOFINDPATH,\/\/ Ëá™Âä®ÂØªË∑Ø$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_AUTOHP	tmpcode/commond.h	/^	USER_SETTING_AUTOHP,		\/\/◊‘∂Øªÿ—™$/;"	e	enum:enumUserSetting
USER_SETTING_AUTOMP	tmpcode/commond.h	/^	USER_SETTING_AUTOMP,		\/\/◊‘∂Øªÿ¿∂$/;"	e	enum:enumUserSetting
USER_SETTING_AUTO_KILL_SUMMON	base/Command.h	/^  USER_SETTING_AUTO_KILL_SUMMON,\/\/Ëá™Âä®ÊâìÊÄ™$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_CHAT_ANSWER	tmpcode/commond.h	/^	USER_SETTING_CHAT_ANSWER,               \/\/Ω” ‹¡ƒÃÏ “—˚«Î        $/;"	e	enum:enumUserSetting
USER_SETTING_CHAT_AREA	base/Command.h	/^  USER_SETTING_CHAT_AREA,\/\/Âå∫Âüü$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_CHAT_AREA	tmpcode/commond.h	/^	USER_SETTING_CHAT_AREA,                 \/\/«¯”Ú$/;"	e	enum:enumUserSetting
USER_SETTING_CHAT_AUCTION	tmpcode/commond.h	/^    USER_SETTING_CHAT_AUCTION,                 \/\/≈ƒ¬Ù$/;"	e	enum:enumUserSetting
USER_SETTING_CHAT_COUNTRY	base/Command.h	/^  USER_SETTING_CHAT_COUNTRY,\/\/ÂõΩÂÆ∂$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_CHAT_COUNTRY	tmpcode/commond.h	/^	USER_SETTING_CHAT_COUNTRY,              \/\/ΩÁ”Ú$/;"	e	enum:enumUserSetting
USER_SETTING_CHAT_EMOTIONACTION	tmpcode/commond.h	/^	USER_SETTING_CHAT_EMOTIONACTION,        \/\/«È–˜∂Ø◊˜$/;"	e	enum:enumUserSetting
USER_SETTING_CHAT_EMOTIONTALK	tmpcode/commond.h	/^	USER_SETTING_CHAT_EMOTIONTALK,          \/\/«È–˜≈›≈›$/;"	e	enum:enumUserSetting
USER_SETTING_CHAT_FAMILY	base/Command.h	/^  USER_SETTING_CHAT_FAMILY,\/\/ÂÆ∂Êóè$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_CHAT_FAMILY	tmpcode/commond.h	/^	USER_SETTING_CHAT_FAMILY,               \/\/º“◊Â$/;"	e	enum:enumUserSetting
USER_SETTING_CHAT_FRIEND	base/Command.h	/^  USER_SETTING_CHAT_FRIEND,\/\/Â•ΩÂèã$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_CHAT_FRIEND	tmpcode/commond.h	/^	USER_SETTING_CHAT_FRIEND,               \/\/∫√”—$/;"	e	enum:enumUserSetting
USER_SETTING_CHAT_NINE	base/Command.h	/^  USER_SETTING_CHAT_NINE,\/\/ÂÖ¨ËÅä$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_CHAT_NINE	tmpcode/commond.h	/^	USER_SETTING_CHAT_NINE,                 \/\/“ª∞„$/;"	e	enum:enumUserSetting
USER_SETTING_CHAT_PRIVATE	base/Command.h	/^  USER_SETTING_CHAT_PRIVATE,\/\/ÁßÅËÅä$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_CHAT_SCHOOL	base/Command.h	/^  USER_SETTING_CHAT_SCHOOL,\/\/Â∏àÈó®$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_CHAT_TALK	tmpcode/commond.h	/^	USER_SETTING_CHAT_TALK,                 \/\/∂‘ª∞≈›≈›$/;"	e	enum:enumUserSetting
USER_SETTING_CHAT_TEAM	base/Command.h	/^  USER_SETTING_CHAT_TEAM,\/\/ÁªÑÈòü$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_CHAT_TEAM	tmpcode/commond.h	/^	USER_SETTING_CHAT_TEAM,                 \/\/∂”ŒÈ$/;"	e	enum:enumUserSetting
USER_SETTING_CHAT_UNION	base/Command.h	/^  USER_SETTING_CHAT_UNION,\/\/Â∏Æ‰ºö$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_CHAT_UNION	tmpcode/commond.h	/^	USER_SETTING_CHAT_UNION,                \/\/”∂±¯Õ≈$/;"	e	enum:enumUserSetting
USER_SETTING_CHAT_WHISPER	base/Command.h	/^  USER_SETTING_CHAT_WHISPER,\/\/ÂØÜËÅä$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_CHAT_WHISPER	tmpcode/commond.h	/^	USER_SETTING_CHAT_WHISPER,              \/\/√‹”Ô$/;"	e	enum:enumUserSetting
USER_SETTING_CHAT_WORLD	base/Command.h	/^  USER_SETTING_CHAT_WORLD,\/\/‰∏ñÁïå$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_CHAT_WORLD	tmpcode/commond.h	/^	USER_SETTING_CHAT_WORLD,                \/\/»´”Ú$/;"	e	enum:enumUserSetting
USER_SETTING_CLICK_FIGHT	tmpcode/commond.h	/^	USER_SETTING_CLICK_FIGHT,\/\/µ•ª˜“ª¥ŒæÕ∑¢∂Øπ•ª˜$/;"	e	enum:enumUserSetting
USER_SETTING_CLOAK	tmpcode/commond.h	/^	USER_SETTING_CLOAK,             \/\/\/ ≈˚∑Á$/;"	e	enum:enumUserSetting
USER_SETTING_COUNTRYWAREXP	tmpcode/commond.h	/^	USER_SETTING_COUNTRYWAREXP,      \/\/ π˙’Ω≤ª¡Ïæ≠—È$/;"	e	enum:enumUserSetting
USER_SETTING_EFFECT	base/Command.h	/^  USER_SETTING_EFFECT      \/\/ ÂºÄÂÖ≥ÁâπÊïà$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_FAMILY	base/Command.h	/^  USER_SETTING_FAMILY,    \/\/ ÂÖÅËÆ∏Âä†ÂÖ•ÂÆ∂ÊóèÊ†áÂøó$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_FAMILY	tmpcode/commond.h	/^	USER_SETTING_FAMILY   =11,          \/\/ ‘ –Ìº”»Îº“◊Â±Í÷æ$/;"	e	enum:enumUserSetting
USER_SETTING_FRIEND	base/Command.h	/^  USER_SETTING_FRIEND,     \/\/ ÂÖÅËÆ∏Âä†‰∏∫Â•ΩÂèã$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_FRIEND	tmpcode/commond.h	/^	USER_SETTING_FRIEND   =10,          \/\/ ‘ –Ìº”Œ™∫√”—$/;"	e	enum:enumUserSetting
USER_SETTING_HELP_ACCELKEY	base/Command.h	/^  USER_SETTING_HELP_ACCELKEY,         \/\/Âø´Êç∑‰ΩøÁî®Áâ©ÂìÅ$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_ADDPROPPOINT	base/Command.h	/^  USER_SETTING_HELP_ADDPROPPOINT,     \/\/Âä†ÁÇπÂ±ûÊÄß$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_ALT_SELECT_NPC	base/Command.h	/^  USER_SETTING_HELP_ALT_SELECT_NPC,\/\/altÈÄâ‰∏≠npc$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_ATTACK	base/Command.h	/^  USER_SETTING_HELP_ATTACK,           \/\/ÊîªÂáª$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_ATTACK_MODE_CHANGE	base/Command.h	/^  USER_SETTING_HELP_ATTACK_MODE_CHANGE,\/\/ÊîªÂáªÊ®°ÂºèÂàáÊç¢$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_AUTO_FIND_PATH	base/Command.h	/^  USER_SETTING_HELP_AUTO_FIND_PATH,\/\/Ëá™Âä®ÂØªË∑Ø$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_CHAT	base/Command.h	/^  USER_SETTING_HELP_CHAT,     \/\/ËÅäÂ§©$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_CLEARREDNAME	base/Command.h	/^  USER_SETTING_HELP_CLEARREDNAME,     \/\/Ê∂àÈô§Á∫¢Âêç$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_EQUIP	base/Command.h	/^  USER_SETTING_HELP_EQUIP,            \/\/Â¶Ç‰ΩïË£ÖÂ§áÁâ©ÂìÅ$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_EXPACK	base/Command.h	/^  USER_SETTING_HELP_EXPACK,           \/\/È¢ùÂ§ñÂåÖË£π$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_ITEM_LINK	base/Command.h	/^  USER_SETTING_HELP_ITEM_LINK, \/\/Áâ©ÂìÅÈìæÊé•$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_ITEM_UPGRID	base/Command.h	/^  USER_SETTING_HELP_ITEM_UPGRID, \/\/ÈÅìÂÖ∑ÂçáÁ∫ß$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_MATERIAL_COMPOSE	base/Command.h	/^  USER_SETTING_HELP_MATERIAL_COMPOSE,\/\/ÂéüÊñôÂêàÊàê$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_MEMBERHEAD	base/Command.h	/^  USER_SETTING_HELP_MEMBERHEAD,       \/\/ÈòüÂëòÂ§¥ÂÉè$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_MOVE	base/Command.h	/^  USER_SETTING_HELP_MOVE,             \/\/ÁßªÂä®$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_NPC	base/Command.h	/^  USER_SETTING_HELP_NPC,              \/\/NPC$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_NPCDIALOG	base/Command.h	/^  USER_SETTING_HELP_NPCDIALOG,        \/\/NPCÂØπËØù$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_PACK	base/Command.h	/^  USER_SETTING_HELP_PACK,             \/\/ÂåÖË£π$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_PK	base/Command.h	/^  USER_SETTING_HELP_PK,               \/\/PK$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_PRIVATE_CHAT	base/Command.h	/^  USER_SETTING_HELP_PRIVATE_CHAT, \/\/ÊÇÑÊÇÑËØù$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_RIGHTBTN	base/Command.h	/^  USER_SETTING_HELP_RIGHTBTN,         \/\/Âè≥ÈîÆÈÄâÈ°π$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_SELECT	base/Command.h	/^  USER_SETTING_HELP_SELECT,   \/\/ÈÄâÊã©ÁõÆÊ†á$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_SKILL	base/Command.h	/^  USER_SETTING_HELP_SKILL,            \/\/ÊäÄËÉΩ$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_SOULSTONEL_COMPOSE	base/Command.h	/^  USER_SETTING_HELP_SOULSTONEL_COMPOSE,\/\/È≠ÇÈ≠ÑÂêàÊàê$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_SOULSTONE_MAKE	base/Command.h	/^  USER_SETTING_HELP_SOULSTONE_MAKE,\/\/È≠ÇÈ≠ÑÈï∂Âµå$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_STUDY	base/Command.h	/^  USER_SETTING_HELP_STUDY,            \/\/Â≠¶‰π†$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_TASK	base/Command.h	/^  USER_SETTING_HELP_TASK,             \/\/‰ªªÂä°$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_TEAM	base/Command.h	/^  USER_SETTING_HELP_TEAM,             \/\/ÁªÑÈòü$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HELP_TRADE	base/Command.h	/^  USER_SETTING_HELP_TRADE,            \/\/‰∫§Êòì$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_HIDE_HELM	tmpcode/commond.h	/^	USER_SETTING_HIDE_HELM = 58,  \/\/ “˛≤ÿÕ∑ø¯£¨ƒ¨»œfalse$/;"	e	enum:enumUserSetting
USER_SETTING_LR_AUTO_CAST	tmpcode/commond.h	/^	USER_SETTING_LR_AUTO_CAST,\/\/øÏΩ›◊Û”“º¸Ω‘Œ™¡¨–¯π•ª˜   $/;"	e	enum:enumUserSetting
USER_SETTING_MINIGAME	base/Command.h	/^  USER_SETTING_MINIGAME,\/\/ ÂÖÅËÆ∏Â∞èÊ∏∏Êàè$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_PACK1_LINK	tmpcode/commond.h	/^	USER_SETTING_PACK1_LINK,				\/\/∞¸π¸1¡¥Ω”$/;"	e	enum:enumUserSetting
USER_SETTING_PACK2_LINK	tmpcode/commond.h	/^	USER_SETTING_PACK2_LINK,				\/\/∞¸π¸2¡¥Ω”$/;"	e	enum:enumUserSetting
USER_SETTING_RELIVE_USE_CRYSTAL	tmpcode/commond.h	/^	USER_SETTING_RELIVE_USE_CRYSTAL = 54,  \/\/ ∏¥ªÓ ± π”√ÀÆæß±“$/;"	e	enum:enumUserSetting
USER_SETTING_RICHANG	tmpcode/commond.h	/^	USER_SETTING_RICHANG,		\/\/»’≥£±£ª§$/;"	e	enum:enumUserSetting
USER_SETTING_SCHOOL	base/Command.h	/^  USER_SETTING_SCHOOL,     \/\/ ÂÖÅËÆ∏Âä†ÂÖ•Â∏àÈó®Ê†áÂøó$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_SHOW_ALLMINIMAP	base/Command.h	/^  USER_SETTING_SHOW_ALLMINIMAP,\/\/Â∞èÂú∞ÂõæÂÖ®ÊòæÁ§∫$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_SHOW_COUNTRYNAME	base/Command.h	/^  USER_SETTING_SHOW_COUNTRYNAME,\/\/ÊòæÁ§∫ÂõΩÂÆ∂ÂêçÁß∞$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_SHOW_EXP	tmpcode/commond.h	/^	USER_SETTING_SHOW_EXP,\/\/œµÕ≥–≈œ¢Ã· ææ≠—È÷µ,ÕÚÕı–¬º”$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_FASHIONCHANGE	tmpcode/commond.h	/^	USER_SETTING_SHOW_FASHIONCHANGE,  \/\/œµÕ≥–≈œ¢Ã· æœ‘ æ ±◊∞±‰ªØ$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_FASHIONCLOAK	tmpcode/commond.h	/^	USER_SETTING_SHOW_FASHIONCLOAK,      \/\/œ‘ æ ±◊∞≈˚∑Á$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_FASHIONMAIN	tmpcode/commond.h	/^	USER_SETTING_SHOW_FASHIONMAIN,      \/\/œ‘ æ÷˜Ã‚ ±◊∞$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_FASHIONTITLE	tmpcode/commond.h	/^	USER_SETTING_SHOW_FASHIONTITLE,      \/\/œ‘ æ ±◊∞Õ∑œŒ$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_FLYING	tmpcode/commond.h	/^	USER_SETTING_SHOW_FLYING=53,    \/\/”≈œ»œ‘ æ ±◊∞≥·∞Ú$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_GRACENAME	base/Command.h	/^  USER_SETTING_SHOW_GRACENAME,\/\/ÊòæÁ§∫ÊñáÈáá$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_SHOW_HEADPORTRAIT	base/Command.h	/^  USER_SETTING_SHOW_HEADPORTRAIT,\/\/ÊòæÁ§∫Â∞èÂ§¥ÂÉè$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_SHOW_HELPTIP	base/Command.h	/^  USER_SETTING_SHOW_HELPTIP,\/\/ÊòæÁ§∫Â∏ÆÂä©ÊïôÁ®ã$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_SHOW_HELPTIP	tmpcode/commond.h	/^	USER_SETTING_SHOW_HELPTIP,  \/\/œ‘ æ”Œœ∑Àµ√˜$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_HORSEFACE	tmpcode/commond.h	/^	USER_SETTING_SHOW_HORSEFACE  = 55,     \/\/ ”≈œ»œ‘ æ¬Ì∆•Õ‚π€$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_ITEM	base/Command.h	/^  USER_SETTING_SHOW_ITEM,\/\/Âú∞Èù¢ÊòæÁ§∫Áâ©ÂìÅ$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_SHOW_ITEM	tmpcode/commond.h	/^	USER_SETTING_SHOW_ITEM ,\/\/µÿ√Êœ‘ æŒÔ∆∑$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_JOB_EQUIP	tmpcode/commond.h	/^	USER_SETTING_SHOW_JOB_EQUIP = 52,  \/\/ œ‘ æ÷∞“µ◊∞±∏$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_LINGQI	tmpcode/commond.h	/^	USER_SETTING_SHOW_LINGQI,      \/\/ ¡È∆˜$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_MIMIMAP	base/Command.h	/^  USER_SETTING_SHOW_MIMIMAP,\/\/ÊòæÁ§∫Â∞èÂú∞Âõæ$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_SHOW_MOBNAME	tmpcode/commond.h	/^	USER_SETTING_SHOW_MOBNAME,      \/\/œ‘ æπ÷ŒÔ√˚≥∆$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_NAME	tmpcode/commond.h	/^	USER_SETTING_SHOW_NAME ,  \/\/œµÕ≥–≈œ¢Ã· æœ‘ æ√˚≥∆$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_NPCNAME	tmpcode/commond.h	/^	USER_SETTING_SHOW_NPCNAME,      \/\/œ‘ æNPC√˚≥∆$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_OFFICENAME	base/Command.h	/^  USER_SETTING_SHOW_OFFICENAME,\/\/ÊòæÁ§∫ÂÆòËÅå$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_SHOW_OFFICENAME	tmpcode/commond.h	/^	USER_SETTING_SHOW_OFFICENAME,   \/\/œ‘ æπŸ÷∞∫Õ∑‚∫≈        $/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_PLAYERNAME	base/Command.h	/^  USER_SETTING_SHOW_PLAYERNAME,\/\/ÊòæÁ§∫Áé©ÂÆ∂ÂêçÂ≠ó$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_SHOW_PLAYERNAME	tmpcode/commond.h	/^	USER_SETTING_SHOW_PLAYERNAME,   \/\/œ‘ æÕÊº“√˚◊÷$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_PLAYETITLE	tmpcode/commond.h	/^	USER_SETTING_SHOW_PLAYETITLE,   \/\/œ‘ æÕÊº“≥∆∫≈$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_SEPTNAME	base/Command.h	/^  USER_SETTING_SHOW_SEPTNAME,\/\/ÊòæÁ§∫ÂÆ∂ÊóèÂêçÁß∞$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_SHOW_SEPTNAME	tmpcode/commond.h	/^	USER_SETTING_SHOW_SEPTNAME,     \/\/œ‘ æº“◊Â√˚≥∆$/;"	e	enum:enumUserSetting
USER_SETTING_SHOW_UNIONNAME	base/Command.h	/^  USER_SETTING_SHOW_UNIONNAME,\/\/ÊòæÁ§∫Â∏Æ‰ºöÂêçÁß∞$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_SHOW_UNIONNAME	tmpcode/commond.h	/^	USER_SETTING_SHOW_UNIONNAME,    \/\/œ‘ æ”∂±¯Õ≈√˚≥∆$/;"	e	enum:enumUserSetting
USER_SETTING_SPECIALMODE	tmpcode/commond.h	/^	USER_SETTING_SPECIALMODE = 59,\/\/Ãÿ ‚Õ‚π€$/;"	e	enum:enumUserSetting
USER_SETTING_TEAM	base/Command.h	/^  USER_SETTING_TEAM = 8,  \/\/ ÂÖÅËÆ∏ÁªÑÈòüÊ†áÂøó$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_TEAM	tmpcode/commond.h	/^	USER_SETTING_TEAM     = 9,          \/\/ ‘ –Ì◊È∂”±Í÷æ$/;"	e	enum:enumUserSetting
USER_SETTING_TRADE	base/Command.h	/^  USER_SETTING_TRADE,     \/\/ ÂÖÅËÆ∏‰∫§ÊòìÊ†áÂøó$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_TRADE	tmpcode/commond.h	/^	USER_SETTING_TRADE    = 8,          \/\/ ‘ –ÌΩª“◊±Í÷æ$/;"	e	enum:enumUserSetting
USER_SETTING_UNION	base/Command.h	/^  USER_SETTING_UNION,     \/\/ ÂÖÅËÆ∏Âä†ÂÖ•Â∏Æ‰ºöÊ†áÂøó$/;"	e	enum:Cmd::enumUserSetting
USER_SETTING_UNION	tmpcode/commond.h	/^	USER_SETTING_UNION    =12,          \/\/ ‘ –Ìº”»Î”∂±¯Õ≈±Í÷æ$/;"	e	enum:enumUserSetting
USER_SETTING_USE_BIND_MONEY	tmpcode/commond.h	/^	USER_SETTING_USE_BIND_MONEY     ,   \/\/”≈œ» π”√ÀÊ…Ì«Æ∞¸÷–µƒ“¯¡Ω$/;"	e	enum:enumUserSetting
USER_SETTING_USE_SALARY	tmpcode/commond.h	/^	USER_SETTING_USE_SALARY = 51,   \/\/\/…Ã≥« π”√∞Û∂®µƒÀÆæß±“$/;"	e	enum:enumUserSetting
USER_VERIFY_VER_PARA	base/Command.h	/^const BYTE USER_VERIFY_VER_PARA = 120;$/;"	v
USER_VERIFY_VER_PARA	tmpcode/commond.h	/^const BYTE USER_VERIFY_VER_PARA = 120;$/;"	v
USESCROLL_UP_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  USESCROLL_UP_PROPERTY_USERCMD_PARA = 209;$/;"	v
USEUSEROBJECT_PROPERTY_USERCMD_PARAMETER	base/Command.h	2574;"	d
USEUSEROBJECT_PROPERTY_USERCMD_PARAMETER	tmpcode/commond.h	11977;"	d
USE_ADD_RING_USERCMD	tmpcode/commond.h	4726;"	d
USE_BUGLE_OBJ_SAY_TO_WORLD_USERCMD_PARA	tmpcode/commond.h	/^const BYTE USE_BUGLE_OBJ_SAY_TO_WORLD_USERCMD_PARA = 227;$/;"	v
USE_CANSELECT_SCROLL_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE  USE_CANSELECT_SCROLL_PROPERTY_USERCMD_PARA = 204;$/;"	v
USE_ELEC_HAMMER_USERCMD	tmpcode/commond.h	4739;"	d
USE_FIGHT_NULL	ScenesServer/SceneEntryPk.h	/^	USE_FIGHT_NULL	= 0,$/;"	e	enum:useFightState
USE_FIGHT_PVE	ScenesServer/SceneEntryPk.h	/^	USE_FIGHT_PVE	= 1,$/;"	e	enum:useFightState
USE_FIGHT_PVP	ScenesServer/SceneEntryPk.h	/^	USE_FIGHT_PVP	= 2,$/;"	e	enum:useFightState
USE_HORSE_TAODI_USERCMD_PARA	tmpcode/commond.h	13199;"	d
USE_JOB_TOKEN_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE USE_JOB_TOKEN_PROPERTY_USERCMD_PARA = 193;$/;"	v
USE_MAINPOWER_TANK_DAMAGE_PARA	tmpcode/commond.h	/^const BYTE USE_MAINPOWER_TANK_DAMAGE_PARA = 40;$/;"	v
USE_NEWBOX_USERCMD_PARA	tmpcode/commond.h	/^const BYTE USE_NEWBOX_USERCMD_PARA = 221;$/;"	v
USE_RAGE_NUM_UPGRADE	tmpcode/commond.h	/^const BYTE USE_RAGE_NUM_UPGRADE = 233;$/;"	v
USE_STAR_STONE_USERCMD	tmpcode/commond.h	4699;"	d
USE_TOP_KILL_COUNT_MAPSCREEN_USERCMD_PARA	tmpcode/commond.h	/^const BYTE USE_TOP_KILL_COUNT_MAPSCREEN_USERCMD_PARA = 105;$/;"	v
USE_TRANSPORT_OBJECT_USER_PARA	tmpcode/commond.h	/^const BYTE USE_TRANSPORT_OBJECT_USER_PARA = 226;$/;"	v
USTATE_448_CRUSADE_PROTECT	tmpcode/commond.h	/^	USTATE_448_CRUSADE_PROTECT = 448,  \/\/  Æ◊÷æ¸≥«±§÷–∏¥ªÓ∫Ûµƒ±£ª§◊¥Ã¨$/;"	e	enum:__anon224
USTATE_ABILITY	tmpcode/commond.h	/^	USTATE_ABILITY          = 14,\/\/ anti-healthy game$/;"	e	enum:__anon224
USTATE_ABLEPSIA	base/Command.h	/^  USTATE_ABLEPSIA =42,\/\/Áü≥ÁÅ∞Á≤â$/;"	e	enum:Cmd::__anon69
USTATE_ADDEXP_COUNTRY	tmpcode/commond.h	/^	USTATE_ADDEXP_COUNTRY=106,\/\/π˙º“»ŒŒÒ‘ˆº”æ≠—È50%$/;"	e	enum:__anon224
USTATE_ADDEXP_EVERYDAY	tmpcode/commond.h	/^	USTATE_ADDEXP_EVERYDAY=109,\/\/√ø»’»ŒŒÒ‘ˆº”æ≠—È50%$/;"	e	enum:__anon224
USTATE_ADDEXP_SEPT	tmpcode/commond.h	/^	USTATE_ADDEXP_SEPT=108,\/\/º“◊Â»ŒŒÒ‘ˆº”æ≠—È50%$/;"	e	enum:__anon224
USTATE_ADDEXP_SHAGUAI	tmpcode/commond.h	/^	USTATE_ADDEXP_SHAGUAI=110,\/\/…±π÷‘ˆº”æ≠—È50%$/;"	e	enum:__anon224
USTATE_ADDEXP_UNION	tmpcode/commond.h	/^	USTATE_ADDEXP_UNION=107,\/\/æ¸Õ≈»ŒŒÒ‘ˆº”æ≠—È50%$/;"	e	enum:__anon224
USTATE_ADDPROPERTY	tmpcode/commond.h	/^	USTATE_ADDPROPERTY=105,  \/\/ Ù–‘‘ˆº”50%$/;"	e	enum:__anon224
USTATE_ADD_ATTACK_5PERCENT	tmpcode/commond.h	/^	USTATE_ADD_ATTACK_5PERCENT = 341,  \/\/ ‘ˆº”»ÀŒÔµ±«∞π•ª˜5%$/;"	e	enum:__anon224
USTATE_ALERTNESS	base/Command.h	/^  USTATE_ALERTNESS =46,\/\/Êú∫Êïè$/;"	e	enum:Cmd::__anon69
USTATE_ALLBAOJI	tmpcode/commond.h	/^	USTATE_ALLBAOJI            =244,        \/\/»´±©ª˜$/;"	e	enum:__anon224
USTATE_ALLGEDANG	tmpcode/commond.h	/^    USTATE_ALLGEDANG           =247,        \/\/»´∏Òµ≤$/;"	e	enum:__anon224
USTATE_ALLJIFEI	tmpcode/commond.h	/^    USTATE_ALLJIFEI            =246,        \/\/»´ª˜∑…$/;"	e	enum:__anon224
USTATE_ALLZHUOYUEYIJI	tmpcode/commond.h	/^    USTATE_ALLZHUOYUEYIJI      =245,        \/\/»´◊ø‘Ω“ªª˜$/;"	e	enum:__anon224
USTATE_ANYINGSHUFU	tmpcode/commond.h	/^	USTATE_ANYINGSHUFU		=161,   \/\/∞µ”∞ ¯∏ø$/;"	e	enum:__anon224
USTATE_ARROW	tmpcode/commond.h	/^	USTATE_ARROW		= 191,			\/\/π≠º˝$/;"	e	enum:__anon224
USTATE_ATTACKSTONE_ONE	tmpcode/commond.h	/^	USTATE_ATTACKSTONE_ONE    =270,   \/\/π•ª˜±¶ Ø1$/;"	e	enum:__anon224
USTATE_ATTACKSTONE_THREE	tmpcode/commond.h	/^    USTATE_ATTACKSTONE_THREE  =272,   \/\/π•ª˜±¶ Ø3$/;"	e	enum:__anon224
USTATE_ATTACKSTONE_TWO	tmpcode/commond.h	/^    USTATE_ATTACKSTONE_TWO    =271,   \/\/π•ª˜±¶ Ø2$/;"	e	enum:__anon224
USTATE_ATTCHANGEMAGSKILL	tmpcode/commond.h	/^	USTATE_ATTCHANGEMAGSKILL        = 359,  \/\/π•ª˜◊™ªªƒß∑®£¨◊ÀÃ¨ººƒ‹øÕªß∂Àœ‘ æ$/;"	e	enum:__anon224
USTATE_ATTCHANGESKILL	tmpcode/commond.h	/^	USTATE_ATTCHANGESKILL   = 356,  \/\/π•ª˜◊™ªª£¨◊ÀÃ¨ººƒ‹øÕªß∂Àœ‘ æ$/;"	e	enum:__anon224
USTATE_AT_FULL_SPLIT	base/Command.h	/^  USTATE_AT_FULL_SPLIT =45,\/\/Áé©ÂëΩ$/;"	e	enum:Cmd::__anon69
USTATE_AUTOCLOSE	tmpcode/commond.h	/^const WORD USTATE_AUTOCLOSE = 999; \/\/¿Îœﬂº∆ ±$/;"	v
USTATE_AVATARGUARD	tmpcode/commond.h	/^	USTATE_AVATARGUARD      = 282,   \/\/\/∑÷…Ìª§Œ¿$/;"	e	enum:__anon224
USTATE_BANGHUIQIZHI	tmpcode/commond.h	/^	USTATE_BANGHUIQIZHI  	= 85,\/\/’º¡Ï”∂±¯Õ≈∆Ï÷ƒ$/;"	e	enum:__anon224
USTATE_BANISH	base/Command.h	/^  USTATE_BANISH =38,\/\/ÊîæÈÄê$/;"	e	enum:Cmd::__anon69
USTATE_BEENRUSHED	tmpcode/commond.h	/^	USTATE_BEENRUSHED       =144,           \/\/±ª≥Â∑Ê$/;"	e	enum:__anon224
USTATE_BEICHAOFENG	tmpcode/commond.h	/^	USTATE_BEICHAOFENG=184,   \/\/ƒø±ÍÀ¯∂®    $/;"	e	enum:__anon224
USTATE_BELLOW	base/Command.h	/^  USTATE_BELLOW =12,\/\/ÁãÆÂ≠êÂêº$/;"	e	enum:Cmd::__anon69
USTATE_BIGFIREBOLLNUM1	tmpcode/commond.h	/^	USTATE_BIGFIREBOLLNUM1  = 322,   \/\/1∏ˆ¥Ûª‘™Àÿ«Ú---∂‘”¶»˝Œ∂’Êªººƒ‹œ‡”¶◊¥Ã¨$/;"	e	enum:__anon224
USTATE_BIGFIREBOLLNUM2	tmpcode/commond.h	/^	USTATE_BIGFIREBOLLNUM2  = 321,   \/\/2∏ˆ¥Ûª‘™Àÿ«Ú---∂‘”¶»˝Œ∂’Êªººƒ‹œ‡”¶◊¥Ã¨$/;"	e	enum:__anon224
USTATE_BIGFIREBOLLNUM3	tmpcode/commond.h	/^	USTATE_BIGFIREBOLLNUM3  = 320,   \/\/3∏ˆ¥Ûª‘™Àÿ«Ú---∂‘”¶»˝Œ∂’Êªººƒ‹œ‡”¶◊¥Ã¨$/;"	e	enum:__anon224
USTATE_BIGICEBOLLNUM1	tmpcode/commond.h	/^	USTATE_BIGICEBOLLNUM1   = 325,   \/\/1∏ˆ¥Û±˘‘™Àÿ«Ú---∂‘”¶”ƒ∫Æ÷Æ±˘ººƒ‹œ‡”¶◊¥Ã¨$/;"	e	enum:__anon224
USTATE_BIGICEBOLLNUM2	tmpcode/commond.h	/^	USTATE_BIGICEBOLLNUM2   = 324,   \/\/2∏ˆ¥Û±˘‘™Àÿ«Ú---∂‘”¶”ƒ∫Æ÷Æ±˘ººƒ‹œ‡”¶◊¥Ã¨  $/;"	e	enum:__anon224
USTATE_BIGICEBOLLNUM3	tmpcode/commond.h	/^	USTATE_BIGICEBOLLNUM3   = 323,   \/\/3∏ˆ¥Û±˘‘™Àÿ«Ú---∂‘”¶”ƒ∫Æ÷Æ±˘ººƒ‹œ‡”¶◊¥Ã¨$/;"	e	enum:__anon224
USTATE_BIKECONFUSION	tmpcode/commond.h	/^	USTATE_BIKECONFUSION		= 49,	\/\/ªÏ¬“$/;"	e	enum:__anon224
USTATE_BIKERACE	tmpcode/commond.h	/^	USTATE_BIKERACE			= 54, 	\/\/±»»¸◊¥Ã¨$/;"	e	enum:__anon224
USTATE_BIKE_BLIND	tmpcode/commond.h	/^	USTATE_BIKE_BLIND      		= 51, 	\/\/◊‘––≥µ¥Û»¸ ß√˜◊¥Ã¨$/;"	e	enum:__anon224
USTATE_BILEIPINGKUAI	tmpcode/commond.h	/^    USTATE_BILEIPINGKUAI       =250,        \/\/±⁄¿›±¿¿£$/;"	e	enum:__anon224
USTATE_BIND_FOLLOWER	tmpcode/commond.h	/^    USTATE_BIND_FOLLOWER    = 278,  \/\/¥∫‘À∏˙ÀÊ’ﬂ$/;"	e	enum:__anon224
USTATE_BIND_LEADER	tmpcode/commond.h	/^	USTATE_BIND_LEADER      = 277,  \/\/¥∫‘À“˝µº’ﬂ$/;"	e	enum:__anon224
USTATE_BINGJINSKILL	tmpcode/commond.h	/^    USTATE_BINGJINSKILL     = 376,  \/\/±˘æßª§…Ì◊¥Ã¨≥Ã–ÚÃÿ ‚¥¶¿Ì$/;"	e	enum:__anon224
USTATE_BLAZE_SHIELD	base/Command.h	/^  USTATE_BLAZE_SHIELD =20,\/\/ÁÅ´Áõæ$/;"	e	enum:Cmd::__anon69
USTATE_BLED	tmpcode/commond.h	/^	USTATE_BLED  	= 10,\/\/	¡˜—™$/;"	e	enum:__anon224
USTATE_BLESS	tmpcode/commond.h	/^	USTATE_BLESS	      = 100,\/\/◊£∏£ ı$/;"	e	enum:__anon224
USTATE_BLIND	tmpcode/commond.h	/^	USTATE_BLIND  	= 6,\/\/	 ß√˜$/;"	e	enum:__anon224
USTATE_BLOG	tmpcode/commond.h	/^	USTATE_BLOG = 71,				\/\/≤©øÕ…Ë÷√±Íº«$/;"	e	enum:__anon224
USTATE_BLOODBUFF	tmpcode/commond.h	/^    USTATE_BLOODBUFF        = 346,  \/\/ººƒ‹—™√À”°º«£¨ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_BLUECRYSTAL	tmpcode/commond.h	/^	USTATE_BLUECRYSTAL      =260, \/\/¿∂…´◊£∏£ÀÆæßbuffer◊¥Ã¨$/;"	e	enum:__anon224
USTATE_BLUE_FLAG	tmpcode/commond.h	/^	USTATE_BLUE_FLAG		=120,		\/\/ø∏∆Ï$/;"	e	enum:__anon224
USTATE_BLUE_TORCH	tmpcode/commond.h	/^	USTATE_BLUE_TORCH = 75, \/\/¿∂…´ªæÊ$/;"	e	enum:__anon224
USTATE_BOMB	base/Command.h	/^  USTATE_BOMB =18,\/\/ÁÅ´Ëõã$/;"	e	enum:Cmd::__anon69
USTATE_BOMB	tmpcode/commond.h	/^	USTATE_BOMB			= 189,			\/\/’®µØ$/;"	e	enum:__anon224
USTATE_BOUNCE	base/Command.h	/^  USTATE_BOUNCE =10,\/\/ÊíûÂáª$/;"	e	enum:Cmd::__anon69
USTATE_BRANDISH	base/Command.h	/^  USTATE_BRANDISH =3,\/\/ÂàÄÂÖâÂâëÂΩ±$/;"	e	enum:Cmd::__anon69
USTATE_BUMIEGUANGHUI	tmpcode/commond.h	/^	USTATE_BUMIEGUANGHUI = 210,         \/\/≤ª√π‚ª‘$/;"	e	enum:__anon224
USTATE_BUSIBOSS	tmpcode/commond.h	/^	USTATE_BUSIBOSS	        = 205,      \/\/≤ªÀ¿”°º«	$/;"	e	enum:__anon224
USTATE_BUSINESSTASK	tmpcode/commond.h	/^	USTATE_BUSINESSTASK		= 18,\/\/ æ≠”™»ŒŒÒ$/;"	e	enum:__anon224
USTATE_BUSIYIZHIBOSS	tmpcode/commond.h	/^	USTATE_BUSIYIZHIBOSS	= 207,      \/\/≤ªÀ¿“‚÷æ	$/;"	e	enum:__anon224
USTATE_CANFEIBOSS	tmpcode/commond.h	/^	USTATE_CANFEIBOSS	    = 199,      \/\/≤–∑œ	$/;"	e	enum:__anon224
USTATE_CARRYCRYSTAL	tmpcode/commond.h	/^	USTATE_CARRYCRYSTAL  = 217,    \/\/‘À ‰ÀÆæß◊¥Ã¨£¨±ßÀÆæß∂Ø◊˜$/;"	e	enum:__anon224
USTATE_CARRYING	tmpcode/commond.h	/^	USTATE_CARRYING			   =254,   \/\/∞·‘ÀªıŒÔ◊¥Ã¨$/;"	e	enum:__anon224
USTATE_CARRY_ZHANLING	tmpcode/commond.h	/^	USTATE_CARRY_ZHANLING   = 339,  \/\/–Ø¥¯’Ω¡Èµƒ◊¥Ã¨$/;"	e	enum:__anon224
USTATE_CELENRITY_CHOP	base/Command.h	/^  USTATE_CELENRITY_CHOP =5,\/\/Â§ßÂç∏ÂÖ´Âùó$/;"	e	enum:Cmd::__anon69
USTATE_CHALLENGE_TEAM1	tmpcode/commond.h	/^	USTATE_CHALLENGE_TEAM1=227,  \/\/∏ˆ»ÀÃÙ’Ω»¸1∂”$/;"	e	enum:__anon224
USTATE_CHALLENGE_TEAM2	tmpcode/commond.h	/^	USTATE_CHALLENGE_TEAM2=228,  \/\/∏ˆ»ÀÃÙ’Ω»¸2∂”$/;"	e	enum:__anon224
USTATE_CHALLENGE_WATCH	tmpcode/commond.h	/^	USTATE_CHALLENGE_WATCH = 238,  \/\/\/ÃÙ’Ω»¸π€÷⁄◊¥Ã¨$/;"	e	enum:__anon224
USTATE_CHANGEMODLE_COW	tmpcode/commond.h	/^	USTATE_CHANGEMODLE_COW   = 220,    \/\/Õ®π˝ ±◊∞∏ƒ±‰ƒ£–ÕÕ‚π€≈£Õ∑    $/;"	e	enum:__anon224
USTATE_CHANGEMODLE_PANDA	tmpcode/commond.h	/^	USTATE_CHANGEMODLE_PANDA = 219,    \/\/Õ®π˝ ±◊∞∏ƒ±‰ƒ£–ÕÕ‚π€–‹√®$/;"	e	enum:__anon224
USTATE_CHANGEPIG_SKILL	tmpcode/commond.h	/^	USTATE_CHANGEPIG_SKILL  = 461,  \/\/±‰…Ì÷Ì$/;"	e	enum:__anon224
USTATE_CHENGLONG	tmpcode/commond.h	/^    USTATE_CHENGLONG        = 366,  \/\/∆Ô≥À¡˙◊¯∆Ô◊¥Ã¨$/;"	e	enum:__anon224
USTATE_CHENMO	tmpcode/commond.h	/^	USTATE_CHENMO=171,            \/\/≥¡ƒ¨$/;"	e	enum:__anon224
USTATE_CHONGFENG	tmpcode/commond.h	/^	USTATE_CHONGFENG				= 42,	\/\/»‚ÃÂ≥Â◊≤$/;"	e	enum:__anon224
USTATE_CHUNYUN	tmpcode/commond.h	/^	USTATE_CHUNYUN			= 279,  \/\/¥∫‘À◊¥Ã¨$/;"	e	enum:__anon224
USTATE_CITYMP	tmpcode/commond.h	/^	USTATE_CITYMP           =114,           \/\/π‡ƒß$/;"	e	enum:__anon224
USTATE_CITYPRAY	tmpcode/commond.h	/^	USTATE_CITYPRAY         =113,           \/\/≥« –π•∑¿’Ω∆Ìµª$/;"	e	enum:__anon224
USTATE_COMA	base/Command.h	/^  USTATE_COMA =37,\/\/ÊòèËø∑$/;"	e	enum:Cmd::__anon69
USTATE_CONFUSION	tmpcode/commond.h	/^	USTATE_CONFUSION  	= 8,\/\/	ªÏ¬“$/;"	e	enum:__anon224
USTATE_COSTMP_SKILL	tmpcode/commond.h	/^	USTATE_COSTMP_SKILL     = 460,  \/\/∂‡œ˚∫ƒ¿∂£¨≥Ã–ÚÃÿ ‚¥¶¿Ì$/;"	e	enum:__anon224
USTATE_COUNTRYYUNSHU	tmpcode/commond.h	/^	USTATE_COUNTRYYUNSHU    = 209,      \/\/π˙º“»ŒŒÒ‘À ‰÷– $/;"	e	enum:__anon224
USTATE_COUNTRY_GUARD	tmpcode/commond.h	/^	USTATE_COUNTRY_GUARD	= 47,  \/\/ π˙‘À◊¥Ã¨$/;"	e	enum:__anon224
USTATE_COUNTRY_WAR	tmpcode/commond.h	/^	USTATE_COUNTRY_WAR	= 35, \/\/ π˙’Ω◊¥Ã¨(µ±∂‘∑Ω”Î◊‘º∫¥¶”⁄π˙’Ω◊¥Ã¨ ±£¨∑¢ÀÕ’‚∏ˆ±Í÷æ)$/;"	e	enum:__anon224
USTATE_CRACK	base/Command.h	/^  USTATE_CRACK =9,\/\/Âú∞Ë£ÇÊñ©$/;"	e	enum:Cmd::__anon69
USTATE_CRIMINAL	tmpcode/commond.h	/^	USTATE_CRIMINAL         = 255,  \/\/\/ Õ®º©∑∏◊¥Ã¨$/;"	e	enum:__anon224
USTATE_CRYSTALWAR	tmpcode/commond.h	/^	USTATE_CRYSTALWAR         =230,  \/\/ ÀÆæß’˘∂·’Ω,∞·‘ÀÀÆæßπ˝≥Ã÷–$/;"	e	enum:__anon224
USTATE_CUNJIEDUN	tmpcode/commond.h	/^	USTATE_CUNJIEDUN  	=137,		\/\/¥øΩ‡÷Æ∂‹$/;"	e	enum:__anon224
USTATE_DAHUIFUBOSS	tmpcode/commond.h	/^    USTATE_DAHUIFUBOSS	    = 196,       \/\/∑Á÷ÆÈ‰	$/;"	e	enum:__anon224
USTATE_DANCE	tmpcode/commond.h	/^	USTATE_DANCE = 66,	\/\/Ã¯ŒË$/;"	e	enum:__anon224
USTATE_DANCETIME	tmpcode/commond.h	/^	USTATE_DANCETIME        = 87,\/\/Ã¯ŒË ±º‰◊¥Ã¨KOK20080912$/;"	e	enum:__anon224
USTATE_DAOJISHI	base/Command.h	/^  USTATE_DAOJISHI      = 271,$/;"	e	enum:Cmd::__anon69
USTATE_DAOJISHI	tmpcode/commond.h	/^	USTATE_DAOJISHI			= 38,\/\/‘⁄ ’∑—µÿÕºµƒº∆ ±$/;"	e	enum:__anon224
USTATE_DARKHEALSKILL	tmpcode/commond.h	/^	USTATE_DARKHEALSKILL    = 342,  \/\/∫⁄∞µ÷Œ¡∆–ßπ˚$/;"	e	enum:__anon224
USTATE_DARKJIPINSKILL	tmpcode/commond.h	/^    USTATE_DARKJIPINSKILL   = 350,  \/\/∫⁄∞µº¿∆∑,ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_DEADLINESS_TOXICANT	base/Command.h	/^  USTATE_DEADLINESS_TOXICANT =41,\/\/Ëá¥ÂëΩÊØíËçØ$/;"	e	enum:Cmd::__anon69
USTATE_DEATH	base/Command.h	/^  USTATE_DEATH    = 0,\/\/  Ê≠ª‰∫°$/;"	e	enum:Cmd::__anon69
USTATE_DEATH	tmpcode/commond.h	/^	USTATE_DEATH  	= 84,\/\/	À¿Õˆ$/;"	e	enum:__anon224
USTATE_DECELERATE	base/Command.h	/^  USTATE_DECELERATE =25,\/\/ÂÜ∞ÂáèÈÄü$/;"	e	enum:Cmd::__anon69
USTATE_DECSKILLATT	tmpcode/commond.h	/^    USTATE_DECSKILLATT      = 344,  \/\/ººƒ‹ºı…Ÿ…À∫¶£¨ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_DESWUFANGSKILL	tmpcode/commond.h	/^    USTATE_DESWUFANGSKILL   = 351,  \/\/ŒÔ∑¿ΩµµÕ,ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_DEVILHUG	tmpcode/commond.h	/^	USTATE_DEVILHUG         = 317,   \/\/∂Òƒß”µ±ß$/;"	e	enum:__anon224
USTATE_DIEHUASKILL	tmpcode/commond.h	/^	USTATE_DIEHUASKILL      = 363,  \/\/µ˚ªØ◊¥Ã¨£¨◊ÀÃ¨ººƒ‹øÕªß∂Àœ‘ æ$/;"	e	enum:__anon224
USTATE_DIGGING	tmpcode/commond.h	/^	USTATE_DIGGING   	= 16,\/\/	Õ⁄æÚ$/;"	e	enum:__anon224
USTATE_DOING_QUEST	base/Command.h	/^  USTATE_DOING_QUEST   = 275,$/;"	e	enum:Cmd::__anon69
USTATE_DOING_QUEST	tmpcode/commond.h	/^	USTATE_DOING_QUEST	= 26,		\/\/\/	»ŒŒÒΩ¯––÷–$/;"	e	enum:__anon224
USTATE_DOUBLEEXP	tmpcode/commond.h	/^	USTATE_DOUBLEEXP        =269,   \/\/À´±∂æ≠—Èµ¿æﬂ$/;"	e	enum:__anon224
USTATE_DOUBLEEXPBUFF	tmpcode/commond.h	/^	USTATE_DOUBLEEXPBUFF    = 340,  \/\/À´±∂æ≠—ÈBUFF$/;"	e	enum:__anon224
USTATE_DOUKUANGDOUQI	tmpcode/commond.h	/^	USTATE_DOUKUANGDOUQI    = 315,   \/\/∂∑øÒ∂∑∆¯$/;"	e	enum:__anon224
USTATE_DOUQIBAOFA	tmpcode/commond.h	/^	USTATE_DOUQIBAOFA    = 216,    \/\/∂∑∆¯±¨∑¢$/;"	e	enum:__anon224
USTATE_DOUQIGUN	tmpcode/commond.h	/^	USTATE_DOUQIGUN		=140,		\/\/∂∑∆¯«π$/;"	e	enum:__anon224
USTATE_DOWNINT	tmpcode/commond.h	/^	USTATE_DOWNINT       = 223,     \/\/ºı…ŸÕÊº“÷«¡¶$/;"	e	enum:__anon224
USTATE_DRAGONRIDESKILL	tmpcode/commond.h	/^	USTATE_DRAGONRIDESKILL     = 360, \/\/¡˙”Ô≥À¡˙,ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_DREAD	base/Command.h	/^  USTATE_DREAD =33,\/\/ÊÅêÊÉß$/;"	e	enum:Cmd::__anon69
USTATE_DRUNK_OFF	tmpcode/commond.h	/^	USTATE_DRUNK_OFF        = 240,  \/\/\/ ◊Ìµπ◊¥Ã¨(∫Õæ∆∞…¿œ∞Â∫»∏ﬂ¡À)$/;"	e	enum:__anon224
USTATE_DT_EXP	tmpcode/commond.h	/^	USTATE_DT_EXP           = 309,  \/\/ÕºÃ⁄æ≠—È$/;"	e	enum:__anon224
USTATE_DT_HEI	tmpcode/commond.h	/^	USTATE_DT_HEI           = 305,  \/\/ \/*∫⁄¡˙*\/			ª∆Ω¡˙◊¥Ã¨$/;"	e	enum:__anon224
USTATE_DT_HONG	tmpcode/commond.h	/^	USTATE_DT_HONG          = 303,  \/\/ \/*∫Ï¡˙*\/			ª¡˙◊¥Ã¨   $/;"	e	enum:__anon224
USTATE_DT_HUO	tmpcode/commond.h	/^	USTATE_DT_HUO           = 308,  \/\/ \/*ª¡˙*\/			À¿¡È∑…¡˙◊¥Ã¨$/;"	e	enum:__anon224
USTATE_DT_JIAO	tmpcode/commond.h	/^	USTATE_DT_JIAO          = 304,  \/\/ \/*Ω«¡˙*\/			±˘¡˙◊¥Ã¨$/;"	e	enum:__anon224
USTATE_DT_SHUI	tmpcode/commond.h	/^	USTATE_DT_SHUI          = 307,  \/\/ \/*ÀÆ¡˙*\/			∫Ï¡˙◊¥Ã¨$/;"	e	enum:__anon224
USTATE_DT_YIN	tmpcode/commond.h	/^	USTATE_DT_YIN           = 306,  \/\/ \/*“¯¡˙*\/			À´Õ∑¡˙◊¥Ã¨$/;"	e	enum:__anon224
USTATE_DUJIAOSHOU	tmpcode/commond.h	/^	USTATE_DUJIAOSHOU       = 365,  \/\/∆Ô≥À∂¿Ω« ﬁ◊¥Ã¨$/;"	e	enum:__anon224
USTATE_DUZHOUSKILL	tmpcode/commond.h	/^	USTATE_DUZHOUSKILL      = 349,  \/\/∂¿◊‡,ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_EMBLAZE	base/Command.h	/^  USTATE_EMBLAZE =21,\/\/ÁÇπÁáÉ$/;"	e	enum:Cmd::__anon69
USTATE_ENTHRALL_TOXICANT	base/Command.h	/^  USTATE_ENTHRALL_TOXICANT =39,\/\/Ëø∑È≠ÇÊï£$/;"	e	enum:Cmd::__anon69
USTATE_EXP	tmpcode/commond.h	/^	USTATE_EXP	   = 39,		\/\/   1.5±∂æ≠—È◊¥Ã¨$/;"	e	enum:__anon224
USTATE_EXP1	tmpcode/commond.h	/^	USTATE_EXP1	   = 40,		\/\/   1.25±∂æ≠—È◊¥Ã¨$/;"	e	enum:__anon224
USTATE_EXP2	tmpcode/commond.h	/^	USTATE_EXP2	   = 41,		\/\/   1.75±∂æ≠—È◊¥Ã¨$/;"	e	enum:__anon224
USTATE_EXP3	tmpcode/commond.h	/^	USTATE_EXP3            = 239,  \/\/æ≠—È÷È1.5±∂ $/;"	e	enum:__anon224
USTATE_EXPREDUCE10	tmpcode/commond.h	/^	USTATE_EXPREDUCE10      = 280,   \/\/\/æ≠—ÈÀ•ºı10%$/;"	e	enum:__anon224
USTATE_EXPREDUCE50	tmpcode/commond.h	/^	USTATE_EXPREDUCE50      = 281,   \/\/\/æ≠—ÈÀ•ºı50%$/;"	e	enum:__anon224
USTATE_EXP_125	base/Command.h	/^  USTATE_EXP_125       = 283, \/\/ÁªèÈ™å1.25ÂÄçÁéáÁä∂ÊÄÅ$/;"	e	enum:Cmd::__anon69
USTATE_EXP_150	base/Command.h	/^  USTATE_EXP_150       = 284, \/\/ÁªèÈ™å1.50ÂÄçÁéáÁä∂ÊÄÅ$/;"	e	enum:Cmd::__anon69
USTATE_EXP_175	base/Command.h	/^  USTATE_EXP_175       = 285, \/\/ÁªèÈ™å1.75ÂÄçÁéáÁä∂ÊÄÅ$/;"	e	enum:Cmd::__anon69
USTATE_FALISHEQU	tmpcode/commond.h	/^	USTATE_FALISHEQU    = 224,    \/\/ Õ∑≈∑®¡¶…„»°◊¥Ã¨$/;"	e	enum:__anon224
USTATE_FASHIZHUFU	tmpcode/commond.h	/^	USTATE_FASHIZHUFU =  283,	\/\/∑® ¶π´ª·µƒ◊£∏£	$/;"	e	enum:__anon224
USTATE_FEILONG_RIDE	tmpcode/commond.h	/^	USTATE_FEILONG_RIDE     =286,   \/\/ æﬁ¡˙÷Æ’¢∆Ô∑…¡˙◊¥Ã¨$/;"	e	enum:__anon224
USTATE_FENSHEN_YINJI	tmpcode/commond.h	/^    USTATE_FENSHEN_YINJI    = 377,  \/\/∑÷…Ì”°º«◊¥Ã¨$/;"	e	enum:__anon224
USTATE_FIGHT	tmpcode/commond.h	/^	USTATE_FIGHT	      = 94,\/\/∂∑÷æ»º…’$/;"	e	enum:__anon224
USTATE_FINISH_QUEST	base/Command.h	/^  USTATE_FINISH_QUEST  = 274,$/;"	e	enum:Cmd::__anon69
USTATE_FINISH_QUEST	tmpcode/commond.h	/^	USTATE_FINISH_QUEST	= 27,		\/\/\/	»ŒŒÒÕÍ≥…$/;"	e	enum:__anon224
USTATE_FIREBOLLNUM1	tmpcode/commond.h	/^	USTATE_FIREBOLLNUM1=176,      \/\/1∏ˆª‘™Àÿ«Ú---∂‘”¶’ŸªΩª‘™Àÿººƒ‹œ‡”¶◊¥Ã¨$/;"	e	enum:__anon224
USTATE_FIREBOLLNUM2	tmpcode/commond.h	/^	USTATE_FIREBOLLNUM2=175,        \/\/2∏ˆª‘™Àÿ«Ú---∂‘”¶’ŸªΩª‘™Àÿººƒ‹œ‡”¶◊¥Ã¨$/;"	e	enum:__anon224
USTATE_FIREBOLLNUM3	tmpcode/commond.h	/^	USTATE_FIREBOLLNUM3=174,        \/\/3∏ˆª‘™Àÿ«Ú---∂‘”¶’ŸªΩª‘™Àÿººƒ‹œ‡”¶◊¥Ã¨$/;"	e	enum:__anon224
USTATE_FISHING	tmpcode/commond.h	/^	USTATE_FISHING          =273,   \/\/\/ µˆ”„$/;"	e	enum:__anon224
USTATE_FLOWER_1	tmpcode/commond.h	/^	USTATE_FLOWER_1 = 62,	\/\/œ ª®≈≈––µ⁄“ª√˚	\/\/œ ª®≈≈––ƒ–∞Òµ⁄“ª√˚		2010.7.14$/;"	e	enum:__anon224
USTATE_FLOWER_2	tmpcode/commond.h	/^	USTATE_FLOWER_2 = 63, \/\/œ ª®≈≈––µ⁄-5√˚		\/\/œ ª®≈≈––ƒ–∞Òµ⁄2-4√˚		2010.7.14$/;"	e	enum:__anon224
USTATE_FLOWER_3	tmpcode/commond.h	/^	USTATE_FLOWER_3 = 64,	\/\/œ ª®≈≈––µ⁄-10√˚	\/\/œ ª®≈≈––ƒ–∞Òµ⁄5-10√˚	2010.7.14$/;"	e	enum:__anon224
USTATE_FLOWER_TODAY_1	tmpcode/commond.h	/^	USTATE_FLOWER_TODAY_1 = 67,	\/\/œ ª®ΩÒ»’≈≈––∂‰	\/\/œ ª®≈≈––≈Æ∞Òµ⁄“ª√˚		2010.7.14$/;"	e	enum:__anon224
USTATE_FLOWER_TODAY_2	tmpcode/commond.h	/^	USTATE_FLOWER_TODAY_2 = 68,	 \/\/œ ª®ΩÒ»’≈≈––∂‰	\/\/œ ª®≈≈––≈Æ∞Òµ⁄2-4√˚		2010.7.14$/;"	e	enum:__anon224
USTATE_FLOWER_TODAY_3	tmpcode/commond.h	/^	USTATE_FLOWER_TODAY_3 = 69,	\/\/œ ª®ΩÒ»’≈≈––∂‰	\/\/œ ª®≈≈––≈Æ∞Òµ⁄5-10√˚	2010.7.14$/;"	e	enum:__anon224
USTATE_FLOWER_YESTODAY_1	tmpcode/commond.h	/^	USTATE_FLOWER_YESTODAY_1 = 70,	\/\/œ ª®◊Ú»’≈≈––µ⁄$/;"	e	enum:__anon224
USTATE_FORCELOCKUSER	tmpcode/commond.h	/^	USTATE_FORCELOCKUSER    = 318,   \/\/«ø÷∆À¯∂®»ÀŒÔ$/;"	e	enum:__anon224
USTATE_FOURMAGICSWORD	tmpcode/commond.h	/^	USTATE_FOURMAGICSWORD   = 329,   \/\/Àƒ∞—ƒß∑®Ω£$/;"	e	enum:__anon224
USTATE_FREEJOIN	tmpcode/commond.h	/^	USTATE_FREEJOIN = 243,          \/\/£®◊È∂”£©◊‘”…º”»Î◊¥Ã¨$/;"	e	enum:__anon224
USTATE_FREEJOIN_PASSWORD	tmpcode/commond.h	/^	USTATE_FREEJOIN_PASSWORD = 330,  \/\/◊È∂”◊¥Ã¨£¨√‹¬ÎΩ¯»Îƒ£ Ω$/;"	e	enum:__anon224
USTATE_FREEZE	tmpcode/commond.h	/^	USTATE_FREEZE  	= 2,\/\/	±˘∂≥$/;"	e	enum:__anon224
USTATE_FREE_LEARNSKILL	tmpcode/commond.h	/^	USTATE_FREE_LEARNSKILL  = 310,  \/\/√‚∑——ßœ∞ººƒ‹◊¥Ã¨£¨≈‰∫œ ±º‰ π”√$/;"	e	enum:__anon224
USTATE_FROST	base/Command.h	/^  USTATE_FROST =24,\/\/ÂÜ∞ÂÜª$/;"	e	enum:Cmd::__anon69
USTATE_FURY	base/Command.h	/^  USTATE_FURY =8,\/\/ÁãÇÊö¥$/;"	e	enum:Cmd::__anon69
USTATE_GALLOW	base/Command.h	/^  USTATE_GALLOW =14,\/\/Á†¥ËÉÜ$/;"	e	enum:Cmd::__anon69
USTATE_GAMEMSTER	tmpcode/commond.h	/^	USTATE_GAMEMSTER  	= 15,\/\/	GM◊¥Ã¨.$/;"	e	enum:__anon224
USTATE_GATHERING	tmpcode/commond.h	/^	USTATE_GATHERING        = 17,\/\/ ≤…ºØ$/;"	e	enum:__anon224
USTATE_GOD	tmpcode/commond.h	/^	USTATE_GOD			= 55, 	\/\/±»»¸◊¥Ã¨$/;"	e	enum:__anon224
USTATE_GOLD_HORN	tmpcode/commond.h	/^	USTATE_GOLD_HORN		= 364,	\/\/ª∆Ω’Ω’˘∫≈Ω«, ”–√‚∑—–È»ı∏¥ªÓ$/;"	e	enum:__anon224
USTATE_GOTO	tmpcode/commond.h	/^	USTATE_GOTO			= 56, 	\/\/±»»¸◊¥Ã¨$/;"	e	enum:__anon224
USTATE_GOT_BLUE_CRYSTLE	tmpcode/commond.h	/^	USTATE_GOT_BLUE_CRYSTLE = 449,  \/\/ ¿∂…´»€æß$/;"	e	enum:__anon224
USTATE_GOT_GREEN_CRYSTLE	tmpcode/commond.h	/^	USTATE_GOT_GREEN_CRYSTLE = 451,  \/\/ ¬Ã…´»€æß$/;"	e	enum:__anon224
USTATE_GOT_YELLOW_CRYSTLE	tmpcode/commond.h	/^	USTATE_GOT_YELLOW_CRYSTLE = 450,  \/\/ ª∆…´»€æß$/;"	e	enum:__anon224
USTATE_GREENCRYSTAL	tmpcode/commond.h	/^	USTATE_GREENCRYSTAL     =261, \/\/¬Ã…´◊£∏£ÀÆæßbuffer◊¥Ã¨$/;"	e	enum:__anon224
USTATE_GREEN_TORCH	tmpcode/commond.h	/^	USTATE_GREEN_TORCH = 77, \/\/¬Ã…´ªæÊ$/;"	e	enum:__anon224
USTATE_GROW_ON	base/Command.h	/^  USTATE_GROW_ON =31,\/\/‰º§ÂÆ≥Âä†Ê∑±$/;"	e	enum:Cmd::__anon69
USTATE_GUARD	base/Command.h	/^  USTATE_GUARD				 = 268, \/\/Êñ∞‰∫∫‰øùÊä§Áä∂ÊÄÅ$/;"	e	enum:Cmd::__anon69
USTATE_GUARD	tmpcode/commond.h	/^	USTATE_GUARD            = 19,\/\/ ª§±¶$/;"	e	enum:__anon224
USTATE_GUZHE_SKILL	tmpcode/commond.h	/^    USTATE_GUZHE_SKILL        =453,\/\/π«’€◊¥Ã¨£¨≥Ã–ÚÃÿ ‚¥¶¿Ì$/;"	e	enum:__anon224
USTATE_HALE_AND_HEARTY	base/Command.h	/^  USTATE_HALE_AND_HEARTY =13,\/\/ÂÆùÂàÄ‰∏çËÄÅ$/;"	e	enum:Cmd::__anon69
USTATE_HANLEIJIANSU	tmpcode/commond.h	/^	USTATE_HANLEIJIANSU=169,       \/\/À™∂≥ºıÀŸ$/;"	e	enum:__anon224
USTATE_HEIANQIYUE	tmpcode/commond.h	/^	USTATE_HEIANQIYUE    = 214,    \/\/∫⁄∞µ∆ı‘º$/;"	e	enum:__anon224
USTATE_HEROQIGAI	tmpcode/commond.h	/^	USTATE_HEROQIGAI     	=139,		\/\/”¢–€∆¯∏≈$/;"	e	enum:__anon224
USTATE_HIDE	base/Command.h	/^  USTATE_HIDE				 = 266,$/;"	e	enum:Cmd::__anon69
USTATE_HIDE	tmpcode/commond.h	/^	USTATE_HIDE  	= 3,\/\/	“˛…Ì$/;"	e	enum:__anon224
USTATE_HIT_STONE	tmpcode/commond.h	/^	USTATE_HIT_STONE        =263, \/\/\/ ƒ√¿ﬁ Ø◊¥Ã¨$/;"	e	enum:__anon224
USTATE_HONOR_FREEJOIN	tmpcode/commond.h	/^	USTATE_HONOR_FREEJOIN   =292,   \/\/»Ÿ”˛◊È∂”◊‘”…Ω¯∂”$/;"	e	enum:__anon224
USTATE_HORSEWHIP	tmpcode/commond.h	/^	USTATE_HORSEWHIP	= 86,\/\/øÏ¬Ìº”±ﬁ $/;"	e	enum:__anon224
USTATE_HORSE_GLOW	tmpcode/commond.h	/^	USTATE_HORSE_GLOW      = 37,       \/\/¬Ì∆•∑¢π‚$/;"	e	enum:__anon224
USTATE_HUICHUN	tmpcode/commond.h	/^	USTATE_HUICHUN = 131,  \/\/ªÿ¥∫$/;"	e	enum:__anon224
USTATE_HUNLIAN	tmpcode/commond.h	/^	USTATE_HUNLIAN         =156,        \/\/    ¡ÈªÍ¡¥Ω”$/;"	e	enum:__anon224
USTATE_HUOJU	tmpcode/commond.h	/^	USTATE_HUOJU = 72,		\/\/∞¬‘ÀªæÊ◊¥Ã¨$/;"	e	enum:__anon224
USTATE_HUOJU1	tmpcode/commond.h	/^	USTATE_HUOJU1=79,$/;"	e	enum:__anon224
USTATE_HUOJU2	tmpcode/commond.h	/^	USTATE_HUOJU2=80,$/;"	e	enum:__anon224
USTATE_HUSHISHANBI	tmpcode/commond.h	/^	USTATE_HUSHISHANBI		= 73,	\/\/∫ˆ ”…¡±‹$/;"	e	enum:__anon224
USTATE_ICEBOLLNUM1	tmpcode/commond.h	/^	USTATE_ICEBOLLNUM1=179,     \/\/1∏ˆ±˘‘™Àÿ«Ú---∂‘”¶’ŸªΩ±˘‘™Àÿººƒ‹œ‡”¶◊¥Ã¨$/;"	e	enum:__anon224
USTATE_ICEBOLLNUM2	tmpcode/commond.h	/^	USTATE_ICEBOLLNUM2 =178,     \/\/2∏ˆ±˘‘™Àÿ«Ú---∂‘”¶’ŸªΩ±˘‘™Àÿººƒ‹œ‡”¶◊¥Ã¨$/;"	e	enum:__anon224
USTATE_ICEBOLLNUM3	tmpcode/commond.h	/^	USTATE_ICEBOLLNUM3=177,      \/\/3∏ˆ±˘‘™Àÿ«Ú---∂‘”¶’ŸªΩ±˘‘™Àÿººƒ‹œ‡”¶◊¥Ã¨$/;"	e	enum:__anon224
USTATE_ICE_SHIELD	base/Command.h	/^  USTATE_ICE_SHIELD =26,\/\/ÂÜ∞Áõæ$/;"	e	enum:Cmd::__anon69
USTATE_ICY_WATER	base/Command.h	/^  USTATE_ICY_WATER =23,\/\/ÂÜ∞ÈúúÁªìÁïå$/;"	e	enum:Cmd::__anon69
USTATE_IMPREGNABLE	base/Command.h	/^  USTATE_IMPREGNABLE =4,\/\/Âõ∫Ëã•ÈáëÊ±§$/;"	e	enum:Cmd::__anon69
USTATE_INCDOUBLEATT	tmpcode/commond.h	/^    USTATE_INCDOUBLEATT     = 345,  \/\/ººƒ‹‘ˆº”À´π•,ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_INCISE	base/Command.h	/^  USTATE_INCISE =44,\/\/ÂàáÂâ≤$/;"	e	enum:Cmd::__anon69
USTATE_INCSKILLHURT	tmpcode/commond.h	/^	USTATE_INCSKILLHURT     = 343,  \/\/ººƒ‹‘ˆº”…À∫¶£¨ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_INVINCIBLE	base/Command.h	/^  USTATE_INVINCIBLE =30,\/\/Êó†Êïå$/;"	e	enum:Cmd::__anon69
USTATE_JIANCIBLOOD	tmpcode/commond.h	/^	USTATE_JIANCIBLOOD      = 348,  \/\/Ω£¥Ã∫Õ¥Ã±Í,ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_JIANLINGZHAO	tmpcode/commond.h	/^	USTATE_JIANLINGZHAO		=162,   \/\/Ω£¡È’ŸªΩ$/;"	e	enum:__anon224
USTATE_JIANQI_BATI	tmpcode/commond.h	/^    USTATE_JIANQI_BATI      = 374,  \/\/Ω£∆¯∞‘ÃÂ◊¥Ã¨$/;"	e	enum:__anon224
USTATE_JIANYU_JUE	tmpcode/commond.h	/^    USTATE_JIANYU_JUE       = 372,  \/\/Ω£”Íæ˜◊¥Ã¨œ¬∑≈¡Ÿ ±ººƒ‹$/;"	e	enum:__anon224
USTATE_JIAODOULINGYU	tmpcode/commond.h	/^	USTATE_JIAODOULINGYU    = 316,   \/\/Ω«∂∑¡Ï”Ú$/;"	e	enum:__anon224
USTATE_JIEJINGDUN	tmpcode/commond.h	/^	USTATE_JIEJINGDUN       =150,           \/\/Ω‡æª÷Æ∂‹$/;"	e	enum:__anon224
USTATE_JIEZHAN_TITLE_100	tmpcode/commond.h	/^    USTATE_JIEZHAN_TITLE_100 = 295, \/\/ΩÁ’ΩÕ∑œŒ$/;"	e	enum:__anon224
USTATE_JIEZHAN_TITLE_20	tmpcode/commond.h	/^	USTATE_JIEZHAN_TITLE_20 = 293,  \/\/ΩÁ’ΩÕ∑œŒ$/;"	e	enum:__anon224
USTATE_JIEZHAN_TITLE_200	tmpcode/commond.h	/^    USTATE_JIEZHAN_TITLE_200 = 296, \/\/ΩÁ’ΩÕ∑œŒ$/;"	e	enum:__anon224
USTATE_JIEZHAN_TITLE_300	tmpcode/commond.h	/^    USTATE_JIEZHAN_TITLE_300 = 297, \/\/ΩÁ’ΩÕ∑œŒ$/;"	e	enum:__anon224
USTATE_JIEZHAN_TITLE_50	tmpcode/commond.h	/^    USTATE_JIEZHAN_TITLE_50 = 294,  \/\/ΩÁ’ΩÕ∑œŒ$/;"	e	enum:__anon224
USTATE_JIEZHAN_TITLE_500	tmpcode/commond.h	/^    USTATE_JIEZHAN_TITLE_500 = 298, \/\/ΩÁ’ΩÕ∑œŒ$/;"	e	enum:__anon224
USTATE_JIEZHAN_TITLE_COMMANDER	tmpcode/commond.h	/^	USTATE_JIEZHAN_TITLE_COMMANDER = 299, \/\/ΩÁ’ΩÕ∑œŒ$/;"	e	enum:__anon224
USTATE_JIFENGJIASU	tmpcode/commond.h	/^	USTATE_JIFENGJIASU=168,        \/\/º≤∑Á÷ÆÀŸ$/;"	e	enum:__anon224
USTATE_JIJIU	tmpcode/commond.h	/^	USTATE_JIJIU=167,               \/\/º±æ»$/;"	e	enum:__anon224
USTATE_JINHUANG	tmpcode/commond.h	/^	USTATE_JINHUANG=182,		\/\/¥ÛÃ”…± º”ÀŸ$/;"	e	enum:__anon224
USTATE_JINZHI	tmpcode/commond.h	/^	USTATE_JINZHI           =148,           \/\/Ω˚÷¥$/;"	e	enum:__anon224
USTATE_KEEP_GOODBUFF_DEATH	tmpcode/commond.h	/^    USTATE_KEEP_GOODBUFF_DEATH = 378,       \/\/À¿Õˆ±£¡Ù‘ˆ“Êbuff$/;"	e	enum:__anon224
USTATE_KUAIMAJIABIAN	tmpcode/commond.h	/^	USTATE_KUAIMAJIABIAN	= 22,		\/\/\/	øÏ¬Ìº”±ﬁ$/;"	e	enum:__anon224
USTATE_KUANB	tmpcode/commond.h	/^	USTATE_KUANB  =130,   \/\/øÒ±©$/;"	e	enum:__anon224
USTATE_KUANGBAO	tmpcode/commond.h	/^	USTATE_KUANGBAO	  	=134,		\/\/ øÒ±©$/;"	e	enum:__anon224
USTATE_KUANGBAOSKILL	tmpcode/commond.h	/^	USTATE_KUANGBAOSKILL    = 355,  \/\/øÒ±©◊¥Ã¨£¨◊ÀÃ¨ººƒ‹øÕªß∂Àœ‘ æ$/;"	e	enum:__anon224
USTATE_KUANGDOUQI	tmpcode/commond.h	/^	USTATE_KUANGDOUQI 	=133,		\/\/øÒ∂∑∆¯$/;"	e	enum:__anon224
USTATE_KUANGLONGZHUAN	tmpcode/commond.h	/^	USTATE_KUANGLONGZHUAN   = 314,   \/\/øÒ¡˙æÌ--≤ªø…÷’÷π≤ªø… Õ∑≈∆‰À˚ººƒ‹,≤ª ‹∂®…Ìººƒ‹”∞œÏ$/;"	e	enum:__anon224
USTATE_KULOUMA	tmpcode/commond.h	/^    USTATE_KULOUMA          = 368,  \/\/∆Ô≥À˜º˜√¬Ì◊¥Ã¨$/;"	e	enum:__anon224
USTATE_LANCE	tmpcode/commond.h	/^	USTATE_LANCE		= 192,			\/\/√¨$/;"	e	enum:__anon224
USTATE_LEIDUN	tmpcode/commond.h	/^	USTATE_LEIDUN =163,            \/\/◊œ¿◊Ω£±⁄$/;"	e	enum:__anon224
USTATE_LIFE	tmpcode/commond.h	/^	USTATE_LIFE     = 12,\/\/healthy game$/;"	e	enum:__anon224
USTATE_LIFECONTINUE	tmpcode/commond.h	/^	USTATE_LIFECONTINUE     = 347,  \/\/…˙√¸—”–¯,ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_LIFEGUARD_OF_KING	tmpcode/commond.h	/^	USTATE_LIFEGUARD_OF_KING	= 221,\/\/π˙Õı«ÂŒ¿∂”$/;"	e	enum:__anon224
USTATE_LIFEGUUARD_OF_COMMANDER	tmpcode/commond.h	/^	USTATE_LIFEGUUARD_OF_COMMANDER	= 222,		\/\/Õ≈≥§«ÂŒ¿∂”$/;"	e	enum:__anon224
USTATE_LINGHUNCHOUQU	tmpcode/commond.h	/^    USTATE_LINGHUNCHOUQU = 211,         \/\/¡ÈªÍ≥È»°$/;"	e	enum:__anon224
USTATE_LINGQI_EXP_30	tmpcode/commond.h	/^		USTATE_LINGQI_EXP_30    =501,   \/\/¡È∆˜æ≠—È3±∂$/;"	e	enum:__anon224
USTATE_LINGQI_EXP_35	tmpcode/commond.h	/^        USTATE_LINGQI_EXP_35    =502,   \/\/¡È∆˜æ≠—È3.5±∂$/;"	e	enum:__anon224
USTATE_LINGQI_EXP_40	tmpcode/commond.h	/^        USTATE_LINGQI_EXP_40    =503,   \/\/¡È∆˜æ≠—È4±∂$/;"	e	enum:__anon224
USTATE_LINGQI_EXP_45	tmpcode/commond.h	/^        USTATE_LINGQI_EXP_45    =504,   \/\/¡È∆˜æ≠—È4.5±∂$/;"	e	enum:__anon224
USTATE_LINGQI_EXP_50	tmpcode/commond.h	/^        USTATE_LINGQI_EXP_50    =505,   \/\/¡È∆˜æ≠—È5±∂$/;"	e	enum:__anon224
USTATE_LINGQI_EXP_55	tmpcode/commond.h	/^        USTATE_LINGQI_EXP_55    =506,   \/\/¡È∆˜æ≠—È5.5±∂$/;"	e	enum:__anon224
USTATE_LINGQI_EXP_60	tmpcode/commond.h	/^        USTATE_LINGQI_EXP_60    =507,   \/\/¡È∆˜æ≠—È6±∂$/;"	e	enum:__anon224
USTATE_LINGQI_EXP_HIGH	tmpcode/commond.h	/^    USTATE_LINGQI_EXP_HIGH  = 442,   \/\/∏ﬂº∂¡È∆˜æ≠—È÷È$/;"	e	enum:__anon224
USTATE_LINGQI_EXP_LOW	tmpcode/commond.h	/^    USTATE_LINGQI_EXP_LOW   = 440,   \/\/µÕº∂¡È∆˜æ≠—È÷È$/;"	e	enum:__anon224
USTATE_LINGQI_EXP_MID	tmpcode/commond.h	/^    USTATE_LINGQI_EXP_MID   = 441,   \/\/÷–º∂¡È∆˜æ≠—È÷È$/;"	e	enum:__anon224
USTATE_LIUXINGHUOYU	tmpcode/commond.h	/^	USTATE_LIUXINGHUOYU        =253,        \/\/¡˜–«ª”Í$/;"	e	enum:__anon224
USTATE_LIUXINHUOYUSKILL	tmpcode/commond.h	/^    USTATE_LIUXINHUOYUSKILL = 375,  \/\/¡˜–«ª”Í◊¥Ã¨≥Ã–ÚÃÿ ‚¥¶¿Ì¥Ú∂œ$/;"	e	enum:__anon224
USTATE_LIYING	tmpcode/commond.h	/^	USTATE_LIYING           = 319,   \/\/ƒ‰“˛  $/;"	e	enum:__anon224
USTATE_LONGTIKUANGBAO	tmpcode/commond.h	/^    USTATE_LONGTIKUANGBAO   =289,   \/\/¡˙ÃÂøÒ±©$/;"	e	enum:__anon224
USTATE_LONGWEI	tmpcode/commond.h	/^	USTATE_LONGWEI          =287,   \/\/¡˙Õ˛  $/;"	e	enum:__anon224
USTATE_LONGZHILINGYU	tmpcode/commond.h	/^    USTATE_LONGZHILINGYU    =288,  \/\/¡˙÷Æ¡Ï”Ú$/;"	e	enum:__anon224
USTATE_LONGZHIXUEZHOU	tmpcode/commond.h	/^    USTATE_LONGZHIXUEZHOU   =290,   \/\/¡˙÷Æ—™÷‰$/;"	e	enum:__anon224
USTATE_LOSTSPRITE	tmpcode/commond.h	/^	USTATE_LOSTSPRITE	= 32,		\/\/\/ ‘Œ—£$/;"	e	enum:__anon224
USTATE_LRMOVE_SKILL	tmpcode/commond.h	/^	USTATE_LRMOVE_SKILL     = 459, \/\/◊Û”““∆∂Ø$/;"	e	enum:__anon224
USTATE_LR_HENCOURAGE	tmpcode/commond.h	/^	USTATE_LR_HENCOURAGE =128,              \/\/∫Ï Øµƒ±”ª§$/;"	e	enum:__anon224
USTATE_LR_HESCAPER	tmpcode/commond.h	/^	USTATE_LR_HESCAPER      =124,           \/\/∫Ï ØµƒÕ˛—œ---¬‰»’œøπ»∫Ï Ø≥«$/;"	e	enum:__anon224
USTATE_LR_HKILLER	tmpcode/commond.h	/^	USTATE_LR_HKILLER     =126,             \/\/∏ﬂ∏Ë√ÕΩ¯-----¬‰»’œøπ»∫Ï Ø≥«$/;"	e	enum:__anon224
USTATE_LR_HU	tmpcode/commond.h	/^	USTATE_LR_HU = 237,     \/\/\/ ¬‰»’’Ω≥°∫Ï Ø∑Ω$/;"	e	enum:__anon224
USTATE_LR_WARNING	tmpcode/commond.h	/^	USTATE_LR_WARNING =129,          \/\/æØ∏Ê$/;"	e	enum:__anon224
USTATE_LR_YA	tmpcode/commond.h	/^	USTATE_LR_YA = 236,     \/\/\/ ¬‰»’’Ω≥°—«≤Æ¿˚—«∑Ω$/;"	e	enum:__anon224
USTATE_LR_YENCOURAGE	tmpcode/commond.h	/^	USTATE_LR_YENCOURAGE =127,              \/\/—«≤®¿Ô—«µƒ”¬∆¯$/;"	e	enum:__anon224
USTATE_LR_YESCAPER	tmpcode/commond.h	/^	USTATE_LR_YESCAPER       =123,          \/\/÷Ï¿Úµƒ»®±˙---¬‰»’œøπ»—«≤®¿Ô—«$/;"	e	enum:__anon224
USTATE_LR_YKILLER	tmpcode/commond.h	/^	USTATE_LR_YKILLER      =125,            \/\/’Ω’˘µƒπƒ¿¯---¬‰»’œøπ»—«≤®¿Ô—«$/;"	e	enum:__anon224
USTATE_LULL_TOXICANT	base/Command.h	/^  USTATE_LULL_TOXICANT =43,\/\/È∫ªÁóπÊØíËçØ$/;"	e	enum:Cmd::__anon69
USTATE_LUOMA	tmpcode/commond.h	/^	USTATE_LUOMA = 59,				\/\/¬‰¬Ì$/;"	e	enum:__anon224
USTATE_LVLINGFA	tmpcode/commond.h	/^	USTATE_LVLINGFA         = 326,   \/\/¬…¡Ó°§∑£”°º«$/;"	e	enum:__anon224
USTATE_LVLINGJINGYAN_SKILL	tmpcode/commond.h	/^    USTATE_LVLINGJINGYAN_SKILL = 381,\/\/¬…¡Ó°§Ω˚—‘,BUFFœ‘ æ$/;"	e	enum:__anon224
USTATE_LVLINGZHICAI_SKILL	tmpcode/commond.h	/^    USTATE_LVLINGZHICAI_SKILL  = 380,  \/\/¬…¡Ó°§÷∆≤√,BUFFœ‘ æ$/;"	e	enum:__anon224
USTATE_MABI	tmpcode/commond.h	/^	USTATE_MABI=181,			\/\/ ¥ÛÃ”…± ¬È±‘$/;"	e	enum:__anon224
USTATE_MADEF	tmpcode/commond.h	/^	USTATE_MADEF	      = 99,\/\/ƒßº◊ ı$/;"	e	enum:__anon224
USTATE_MAGICRIDE	tmpcode/commond.h	/^	USTATE_MAGICRIDE       = 111,  	\/\/ƒß∑®◊˘∆Ô$/;"	e	enum:__anon224
USTATE_MAGIC_ECHO	base/Command.h	/^  USTATE_MAGIC_ECHO =7,\/\/È≠îÊ≥ïÂèçÂ∞Ñ$/;"	e	enum:Cmd::__anon69
USTATE_MAGIC_SHIELD	base/Command.h	/^  USTATE_MAGIC_SHIELD =29,\/\/Êä§Áõæ$/;"	e	enum:Cmd::__anon69
USTATE_MARRY_GUEST	tmpcode/commond.h	/^	USTATE_MARRY_GUEST   =301,      \/\/ªÈ«Ï±ˆøÕ$/;"	e	enum:__anon224
USTATE_MARRY_PRAY	tmpcode/commond.h	/^	USTATE_MARRY_PRAY       =302,   \/\/Ω·ªÈµª∏Ê$/;"	e	enum:__anon224
USTATE_MARRY_REGISTER	tmpcode/commond.h	/^	USTATE_MARRY_REGISTER   =300,   \/\/Ω·ªÈ◊¥Ã¨$/;"	e	enum:__anon224
USTATE_MENIM	tmpcode/commond.h	/^	USTATE_MENIM	      = 96,\/\/–ƒ¡È≥Âª˜$/;"	e	enum:__anon224
USTATE_MODONGSKILL	tmpcode/commond.h	/^	USTATE_MODONGSKILL      = 358,  \/\/ƒß∂Ø◊ÀÃ¨£¨◊ÀÃ¨ººƒ‹øÕªß∂Àœ‘ æ  $/;"	e	enum:__anon224
USTATE_MOFAFASHU	tmpcode/commond.h	/^	USTATE_MOFAFASHU=164,        \/\/∑® ıÀ≤∑¢$/;"	e	enum:__anon224
USTATE_MOJING	tmpcode/commond.h	/^	USTATE_MOJING           =147,           \/\/ƒßæµ$/;"	e	enum:__anon224
USTATE_MOLIDIAOLING	tmpcode/commond.h	/^	USTATE_MOLIDIAOLING        =248,        \/\/ƒß¡¶µÚ¡„$/;"	e	enum:__anon224
USTATE_MOLININGJV	tmpcode/commond.h	/^	USTATE_MOLININGJV    = 215,    \/\/ƒß¡¶ƒ˝æ€$/;"	e	enum:__anon224
USTATE_MONENGSKILL	tmpcode/commond.h	/^	USTATE_MONENGSKILL      = 357,  \/\/ƒßƒ‹◊ÀÃ¨£¨◊ÀÃ¨ººƒ‹øÕªß∂Àœ‘ æ$/;"	e	enum:__anon224
USTATE_MUM	base/Command.h	/^  USTATE_MUM =34,\/\/Ê≤âÈªò$/;"	e	enum:Cmd::__anon69
USTATE_MUSHIZHUFU	tmpcode/commond.h	/^	USTATE_MUSHIZHUFU = 285,	\/\/ƒ¡ ¶π´ª·µƒ◊£∏£	$/;"	e	enum:__anon224
USTATE_NEIGUA	tmpcode/commond.h	/^	USTATE_NEIGUA = 65,	\/\/ƒ⁄π“$/;"	e	enum:__anon224
USTATE_NEWEXP1	tmpcode/commond.h	/^	USTATE_NEWEXP1 = 57 ,\/\/	–¬¥˙¡∑µ√æ≠—È◊¥Ã¨$/;"	e	enum:__anon224
USTATE_NINGJU	tmpcode/commond.h	/^	USTATE_NINGJU           =149,           \/\/ƒ˝æ€$/;"	e	enum:__anon224
USTATE_NODEATHEVILSKILL	tmpcode/commond.h	/^    USTATE_NODEATHEVILSKILL = 371,  \/\/≤ªÀ¿∂Òƒß◊¥Ã¨£¨≥Ã–ÚÃÿ ‚¥¶¿Ì$/;"	e	enum:__anon224
USTATE_NOEVILYUNXI_SKILL	tmpcode/commond.h	/^	USTATE_NOEVILYUNXI_SKILL  =455,\/\/≤ª‘Ÿ÷–∂ÒƒßÀ±Œ¸£¨≤ªƒ‹«˝…¢$/;"	e	enum:__anon224
USTATE_NOSTATE	tmpcode/commond.h	/^	USTATE_NOSTATE	= 0,		\/\/\/ √ª◊¥Ã¨$/;"	e	enum:__anon224
USTATE_NOTDINGTRAP_SKILL	tmpcode/commond.h	/^  USTATE_NOTDINGTRAP_SKILL= 464,  \/\/≤ª÷–¬…¡Ó∂®œ›⁄Â$/;"	e	enum:__anon224
USTATE_NOTYINJI_SKILL	tmpcode/commond.h	/^  USTATE_NOTYINJI_SKILL   = 463,  \/\/≤ª÷–¬…¡Ó”°º«£¨À¿Õˆ≤ª«Â≥˝$/;"	e	enum:__anon224
USTATE_NOT_RIDE_FLY	tmpcode/commond.h	/^    USTATE_NOT_RIDE_FLY     = 367,  \/\/≤ªƒ‹∆Ô¬ÌªÚ’ﬂ∑…––µƒ◊¥Ã¨$/;"	e	enum:__anon224
USTATE_NOT_TRAP	tmpcode/commond.h	/^    USTATE_NOT_TRAP         = 373,  \/\/œ›⁄Â√‚“ﬂ$/;"	e	enum:__anon224
USTATE_NO_MORE_SOULSWAP	tmpcode/commond.h	/^	USTATE_NO_MORE_SOULSWAP = 456,  \/\/ ¡ÈªÍΩªªªƒø±Í60sƒ⁄≤ªª·±ª‘Ÿ¥ŒΩªªª$/;"	e	enum:__anon224
USTATE_OFFER	base/Command.h	/^  USTATE_OFFER =17,\/\/ÁåÆÁ•≠$/;"	e	enum:Cmd::__anon69
USTATE_PAIN	base/Command.h	/^  USTATE_PAIN =36,\/\/ÁóõËã¶$/;"	e	enum:Cmd::__anon69
USTATE_PALSY	tmpcode/commond.h	/^	USTATE_PALSY  	= 9,\/\/	¬È±‘$/;"	e	enum:__anon224
USTATE_PHOTO	tmpcode/commond.h	/^	USTATE_PHOTO = 61,		\/\/”–’’∆¨µƒ◊¥Ã¨$/;"	e	enum:__anon224
USTATE_PHYSICS_ECHO	base/Command.h	/^  USTATE_PHYSICS_ECHO =6 ,\/\/Áâ©ÁêÜÂèçÂ∞Ñ$/;"	e	enum:Cmd::__anon69
USTATE_PINGZHANGXIAOXI	tmpcode/commond.h	/^	USTATE_PINGZHANGXIAOXI     =249,        \/\/∆¡’œœ˚ ≈$/;"	e	enum:__anon224
USTATE_PK	base/Command.h	/^  USTATE_PK					 = 267,$/;"	e	enum:Cmd::__anon69
USTATE_PK	tmpcode/commond.h	/^	USTATE_PK               = 34, \/\/PK◊∑º”◊¥Ã¨$/;"	e	enum:__anon224
USTATE_POISON	tmpcode/commond.h	/^	USTATE_POISON  	= 1,\/\/	÷–∂æ$/;"	e	enum:__anon224
USTATE_POJIABOSS	tmpcode/commond.h	/^    USTATE_POJIABOSS	    = 198,      \/\/∆∆º◊	$/;"	e	enum:__anon224
USTATE_POPO1	tmpcode/commond.h	/^	USTATE_POPO1            =264,   \/\/≈›≈›Ã√∂‘’Ω◊¥Ã¨’Û”™1$/;"	e	enum:__anon224
USTATE_POPO2	tmpcode/commond.h	/^	USTATE_POPO2            =265,   \/\/≈›≈›Ã√∂‘’Ω◊¥Ã¨’Û”™2$/;"	e	enum:__anon224
USTATE_POPOADD	tmpcode/commond.h	/^	USTATE_POPOADD          =267,   \/\/≈›≈›‘ˆº”                      $/;"	e	enum:__anon224
USTATE_POPOENHAN	tmpcode/commond.h	/^	USTATE_POPOENHAN        =266,   \/\/≈›≈›«øªØ                      $/;"	e	enum:__anon224
USTATE_POPOSOUL	tmpcode/commond.h	/^	USTATE_POPOSOUL         =268,   \/\/≈›≈›¡ÈªÍ◊¥Ã¨$/;"	e	enum:__anon224
USTATE_PRIVATE_STORE	base/Command.h	/^  USTATE_PRIVATE_STORE = 277,	\/\/ÊëÜÊëä$/;"	e	enum:Cmd::__anon69
USTATE_PRIVATE_STORE	tmpcode/commond.h	/^	USTATE_PRIVATE_STORE		= 36, \/\/ ∞⁄ÃØ$/;"	e	enum:__anon224
USTATE_PROCTECTED	tmpcode/commond.h	/^	USTATE_PROCTECTED       = 13,\/\/ semi-healthy game$/;"	e	enum:__anon224
USTATE_PROTECTGOODS	tmpcode/commond.h	/^	USTATE_PROTECTGOODS	= 29,		\/\/\/ ª§±¶$/;"	e	enum:__anon224
USTATE_PULL_FLAG	tmpcode/commond.h	/^	USTATE_PULL_FLAG	=122,		\/\/∞Œ∆Ï$/;"	e	enum:__anon224
USTATE_PUNISH_ALARM	tmpcode/commond.h	/^	USTATE_PUNISH_ALARM      = 242, \/\/…∆∂Ò÷µ¥ÔµΩ-1300 ±∏¯≥ˆ¡˜∑≈æØ∏Ê$/;"	e	enum:__anon224
USTATE_PURPLE_TORCH	tmpcode/commond.h	/^	USTATE_PURPLE_TORCH = 78, \/\/◊œ…´ªæÊ$/;"	e	enum:__anon224
USTATE_PVE	base/Command.h	/^  USTATE_PVE	= 286,	\/\/sky PVEÁä∂ÊÄÅ$/;"	e	enum:Cmd::__anon69
USTATE_PVP	base/Command.h	/^  USTATE_PVP	= 287,	\/\/sky PVPÁä∂ÊÄÅ$/;"	e	enum:Cmd::__anon69
USTATE_QHCHONGFENG	tmpcode/commond.h	/^	USTATE_QHCHONGFENG				= 43,	\/\/≥Â∑Ê	$/;"	e	enum:__anon224
USTATE_QIANNENG	tmpcode/commond.h	/^	USTATE_QIANNENG  =155,            \/\/«±ƒ‹º§∑¢$/;"	e	enum:__anon224
USTATE_RANSHAO	tmpcode/commond.h	/^	USTATE_RANSHAO         =158,        \/\/   »º…’$/;"	e	enum:__anon224
USTATE_RECOVERY	tmpcode/commond.h	/^	USTATE_RECOVERY         = 11,\/\/ º“◊Â‘ÀÔ⁄$/;"	e	enum:__anon224
USTATE_REDCRYSTAL	tmpcode/commond.h	/^	USTATE_REDCRYSTAL       =258, \/\/∫Ï…´◊£∏£ÀÆæßbuffer◊¥Ã¨$/;"	e	enum:__anon224
USTATE_REJUVENATION	base/Command.h	/^  USTATE_REJUVENATION =28,\/\/ÂõûÊò•$/;"	e	enum:Cmd::__anon69
USTATE_RELIVEWEAK	base/Command.h	/^  USTATE_RELIVEWEAK    = 272,$/;"	e	enum:Cmd::__anon69
USTATE_RELIVEWEAK	tmpcode/commond.h	/^	USTATE_RELIVEWEAK	= 20,\/\/  ∏¥ªÓ–È»ı◊¥Ã¨$/;"	e	enum:__anon224
USTATE_RENSHENGBAOHU	tmpcode/commond.h	/^	USTATE_RENSHENGBAOHU	= 195,      \/\/»À…Ì ÿª§	$/;"	e	enum:__anon224
USTATE_RENWOYOU	tmpcode/commond.h	/^	USTATE_RENWOYOU = 60,			\/\/»ŒŒ“”Œ$/;"	e	enum:__anon224
USTATE_RESIDENT_BATTLE_ATT1	tmpcode/commond.h	/^	USTATE_RESIDENT_BATTLE_ATT1 = 231,  \/\/ ◊§µÿ’˘∂·’Ω_Ω¯π•∑Ω1◊È$/;"	e	enum:__anon224
USTATE_RESIDENT_BATTLE_ATT2	tmpcode/commond.h	/^	USTATE_RESIDENT_BATTLE_ATT2 = 232,  \/\/ ◊§µÿ’˘∂·’Ω_Ω¯π•∑Ω2◊È$/;"	e	enum:__anon224
USTATE_RESIDENT_BATTLE_ATT3	tmpcode/commond.h	/^	USTATE_RESIDENT_BATTLE_ATT3 = 233,  \/\/ ◊§µÿ’˘∂·’Ω_Ω¯π•∑Ω3◊È$/;"	e	enum:__anon224
USTATE_RESIDENT_BATTLE_DEF	tmpcode/commond.h	/^	USTATE_RESIDENT_BATTLE_DEF = 234,  \/\/ ◊§µÿ’˘∂·’Ω_∑¿”˘∑Ω$/;"	e	enum:__anon224
USTATE_RESIDENT_BATTLE_OTHER	tmpcode/commond.h	/^	USTATE_RESIDENT_BATTLE_OTHER = 235,  \/\/ ◊§µÿ’˘∂·’Ω_∆‰À˚$/;"	e	enum:__anon224
USTATE_RIDE	base/Command.h	/^  USTATE_RIDE	= 288,	\/\/sky È™ëÈ©¨Áä∂ÊÄÅ$/;"	e	enum:Cmd::__anon69
USTATE_RIDE	tmpcode/commond.h	/^	USTATE_RIDE			= 28,		\/\/\/	∆Ô¬Ì$/;"	e	enum:__anon224
USTATE_RIDERSPIRIT	tmpcode/commond.h	/^	USTATE_RIDERSPIRIT      =143,           \/\/∆Ô øæ´…Ò$/;"	e	enum:__anon224
USTATE_ROCK	tmpcode/commond.h	/^	USTATE_ROCK		= 7,\/\/	∞Î±˘∂≥---ø…“‘π•ª˜£¨µ´≤ªƒ‹“∆∂Ø$/;"	e	enum:__anon224
USTATE_ROLL_WOOD	tmpcode/commond.h	/^	USTATE_ROLL_WOOD        =262, \/\/\/ ƒ√πˆƒæ◊¥Ã¨$/;"	e	enum:__anon224
USTATE_RUSHCRAZY	tmpcode/commond.h	/^	USTATE_RUSHCRAZY	= 31,		\/\/\/ ≥Â∑Ê‘Œ—£$/;"	e	enum:__anon224
USTATE_SANGUINARY	base/Command.h	/^  USTATE_SANGUINARY =16,\/\/ÂóúË°Ä$/;"	e	enum:Cmd::__anon69
USTATE_SCOUR	base/Command.h	/^  USTATE_SCOUR =47,\/\/ÁñæË∑ë$/;"	e	enum:Cmd::__anon69
USTATE_SC_TEAM1	tmpcode/commond.h	/^	USTATE_SC_TEAM1		=118,		\/\/º“◊Â∂‘øπ÷–“ª∑Ω$/;"	e	enum:__anon224
USTATE_SC_TEAM2	tmpcode/commond.h	/^	USTATE_SC_TEAM2		=119,		\/\/º“◊Â∂‘øπ÷–¡Ì“ª∑Ω$/;"	e	enum:__anon224
USTATE_SELFJIAODOULINGYU	tmpcode/commond.h	/^    USTATE_SELFJIAODOULINGYU= 370,  \/\/∂‘◊‘º∫∑≈µƒ±Íº«Ω«∂∑¡Ï”Ú◊¥Ã¨.≥Ã–ÚÃÿ ‚¥¶¿Ì$/;"	e	enum:__anon224
USTATE_SEVER_MUSCLE	base/Command.h	/^  USTATE_SEVER_MUSCLE =11,\/\/Êñ≠Á≠ã$/;"	e	enum:Cmd::__anon69
USTATE_SHANGKOUSILIE	tmpcode/commond.h	/^	USTATE_SHANGKOUSILIE    =145,           \/\/…Àø⁄À∫¡—$/;"	e	enum:__anon224
USTATE_SHENCHENG	tmpcode/commond.h	/^    USTATE_SHENCHENG        =276,   \/\/\/…Ò∑£$/;"	e	enum:__anon224
USTATE_SHENEN	tmpcode/commond.h	/^	USTATE_SHENEN    =151,               \/\/…Ò∂˜ ı$/;"	e	enum:__anon224
USTATE_SHENFA	tmpcode/commond.h	/^	USTATE_SHENFA         =226,  \/\/ ≥«’Ω…Ò∑£ $/;"	e	enum:__anon224
USTATE_SHENFAYINJI_SKILL	tmpcode/commond.h	/^	USTATE_SHENFAYINJI_SKILL= 462,  \/\/…Ò∑£”°º«$/;"	e	enum:__anon224
USTATE_SHENGGUANG	tmpcode/commond.h	/^	USTATE_SHENGGUANG       =112,		\/\/ •π‚∏¥ªÓ$/;"	e	enum:__anon224
USTATE_SHENGGUAN_PUZHAO	tmpcode/commond.h	/^	USTATE_SHENGGUAN_PUZHAO = 452, \/\/ •π‚∆’’’,º∏√Îƒ⁄≤ªª·÷–∂®…Ì◊¥Ã¨$/;"	e	enum:__anon224
USTATE_SHENGLIJIAHU	tmpcode/commond.h	/^	USTATE_SHENGLIJIAHU     =153,		\/\/ •¡Èº”ª§$/;"	e	enum:__anon224
USTATE_SHENGMINGSHEQU	tmpcode/commond.h	/^	USTATE_SHENGMINGSHEQU =225,  \/\/ Õ∑≈…˙√¸…„»°◊¥Ã¨$/;"	e	enum:__anon224
USTATE_SHENPAN	tmpcode/commond.h	/^	USTATE_SHENPAN     =154,            \/\/…Û≈–$/;"	e	enum:__anon224
USTATE_SHENSHENGJIACHI	tmpcode/commond.h	/^	USTATE_SHENSHENGJIACHI	=138,		\/\/…Ò •º”≥÷$/;"	e	enum:__anon224
USTATE_SHENSHENGTIEBISKILL	tmpcode/commond.h	/^    USTATE_SHENSHENGTIEBISKILL = 361, \/\/…Ò •Ã˙±⁄,ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_SHENYOU	tmpcode/commond.h	/^	USTATE_SHENYOU          =275,   \/\/\/…Ò”” $/;"	e	enum:__anon224
USTATE_SHIED	tmpcode/commond.h	/^	USTATE_SHIED	      = 101,\/\/—«≤Æ¿≠÷Æ∂‹$/;"	e	enum:__anon224
USTATE_SHIELD	tmpcode/commond.h	/^	USTATE_SHIELD		= 190,			\/\/∂‹$/;"	e	enum:__anon224
USTATE_SHIFUSHU	tmpcode/commond.h	/^	USTATE_SHIFUSHU=186,       \/\/ ØÕ∑∆§∑Ù$/;"	e	enum:__anon224
USTATE_SHIHUA	tmpcode/commond.h	/^	USTATE_SHIHUA=185,        \/\/ ØªØ    $/;"	e	enum:__anon224
USTATE_SHILUOBOSS	tmpcode/commond.h	/^    USTATE_SHILUOBOSS	    = 197,      \/\/å∆¬ﬁ÷ÎÀø	$/;"	e	enum:__anon224
USTATE_SHIMEN	tmpcode/commond.h	/^	USTATE_SHIMEN           =291,  \/\/  ¶√≈πÿª≥$/;"	e	enum:__anon224
USTATE_SHOUHU	tmpcode/commond.h	/^	USTATE_SHOUHU=166,           \/\/ ÿª§$/;"	e	enum:__anon224
USTATE_SHUNHUA	tmpcode/commond.h	/^	USTATE_SHUNHUA		=160,     \/\/ÃÊ…Ì÷Æ”∞$/;"	e	enum:__anon224
USTATE_SITDOWN	base/Command.h	/^  USTATE_SITDOWN	   = 276,	\/\/Âùê‰∏ã$/;"	e	enum:Cmd::__anon69
USTATE_SITDOWN	tmpcode/commond.h	/^	USTATE_SITDOWN		= 33,		\/\/\/ ◊¯œ¬$/;"	e	enum:__anon224
USTATE_SITHIGH	tmpcode/commond.h	/^	USTATE_SITHIGH        = 102,  \/\/◊¯œ¬Œ™∏ﬂ$/;"	e	enum:__anon224
USTATE_SITLOW	tmpcode/commond.h	/^	USTATE_SITLOW         =104,  \/\/◊¯œ¬Œ™µÕ$/;"	e	enum:__anon224
USTATE_SITMEDIUM	tmpcode/commond.h	/^	USTATE_SITMEDIUM      = 103,  \/\/◊¯œ¬Œ™÷–$/;"	e	enum:__anon224
USTATE_SKILLBUFF_382	tmpcode/commond.h	/^	USTATE_SKILLBUFF_382,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_383	tmpcode/commond.h	/^    USTATE_SKILLBUFF_383,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_384	tmpcode/commond.h	/^    USTATE_SKILLBUFF_384,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_385	tmpcode/commond.h	/^    USTATE_SKILLBUFF_385,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_386	tmpcode/commond.h	/^    USTATE_SKILLBUFF_386,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_387	tmpcode/commond.h	/^    USTATE_SKILLBUFF_387,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_388	tmpcode/commond.h	/^    USTATE_SKILLBUFF_388,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_389	tmpcode/commond.h	/^    USTATE_SKILLBUFF_389,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_390	tmpcode/commond.h	/^    USTATE_SKILLBUFF_390,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_391	tmpcode/commond.h	/^    USTATE_SKILLBUFF_391,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_392	tmpcode/commond.h	/^    USTATE_SKILLBUFF_392,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_393	tmpcode/commond.h	/^    USTATE_SKILLBUFF_393,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_394	tmpcode/commond.h	/^    USTATE_SKILLBUFF_394,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_395	tmpcode/commond.h	/^    USTATE_SKILLBUFF_395,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_396	tmpcode/commond.h	/^    USTATE_SKILLBUFF_396,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_397	tmpcode/commond.h	/^    USTATE_SKILLBUFF_397,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_398	tmpcode/commond.h	/^    USTATE_SKILLBUFF_398,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_399	tmpcode/commond.h	/^    USTATE_SKILLBUFF_399,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_400	tmpcode/commond.h	/^    USTATE_SKILLBUFF_400,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_401	tmpcode/commond.h	/^    USTATE_SKILLBUFF_401,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_402	tmpcode/commond.h	/^    USTATE_SKILLBUFF_402,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_403	tmpcode/commond.h	/^    USTATE_SKILLBUFF_403,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_404	tmpcode/commond.h	/^    USTATE_SKILLBUFF_404,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_405	tmpcode/commond.h	/^    USTATE_SKILLBUFF_405,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_406	tmpcode/commond.h	/^    USTATE_SKILLBUFF_406,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_407	tmpcode/commond.h	/^    USTATE_SKILLBUFF_407,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_408	tmpcode/commond.h	/^    USTATE_SKILLBUFF_408,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_409	tmpcode/commond.h	/^    USTATE_SKILLBUFF_409,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_410	tmpcode/commond.h	/^    USTATE_SKILLBUFF_410,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_411	tmpcode/commond.h	/^    USTATE_SKILLBUFF_411,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_412	tmpcode/commond.h	/^    USTATE_SKILLBUFF_412,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_413	tmpcode/commond.h	/^    USTATE_SKILLBUFF_413,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_414	tmpcode/commond.h	/^    USTATE_SKILLBUFF_414,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_415	tmpcode/commond.h	/^    USTATE_SKILLBUFF_415,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_416	tmpcode/commond.h	/^    USTATE_SKILLBUFF_416,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_417	tmpcode/commond.h	/^    USTATE_SKILLBUFF_417,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_418	tmpcode/commond.h	/^    USTATE_SKILLBUFF_418,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_419	tmpcode/commond.h	/^    USTATE_SKILLBUFF_419,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_420	tmpcode/commond.h	/^    USTATE_SKILLBUFF_420,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_421	tmpcode/commond.h	/^    USTATE_SKILLBUFF_421,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_422	tmpcode/commond.h	/^    USTATE_SKILLBUFF_422,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_423	tmpcode/commond.h	/^    USTATE_SKILLBUFF_423,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_424	tmpcode/commond.h	/^    USTATE_SKILLBUFF_424,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_425	tmpcode/commond.h	/^    USTATE_SKILLBUFF_425,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_426	tmpcode/commond.h	/^    USTATE_SKILLBUFF_426,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_427	tmpcode/commond.h	/^    USTATE_SKILLBUFF_427,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_428	tmpcode/commond.h	/^	USTATE_SKILLBUFF_428    = 428,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_429	tmpcode/commond.h	/^    USTATE_SKILLBUFF_429    = 429,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_430	tmpcode/commond.h	/^    USTATE_SKILLBUFF_430    = 430,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_431	tmpcode/commond.h	/^    USTATE_SKILLBUFF_431    = 431,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_432	tmpcode/commond.h	/^    USTATE_SKILLBUFF_432    = 432,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_433	tmpcode/commond.h	/^    USTATE_SKILLBUFF_433    = 433, $/;"	e	enum:__anon224
USTATE_SKILLBUFF_435	tmpcode/commond.h	/^	USTATE_SKILLBUFF_435    = 435,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_437	tmpcode/commond.h	/^    USTATE_SKILLBUFF_437    = 437,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_438	tmpcode/commond.h	/^    USTATE_SKILLBUFF_438    = 438,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_439	tmpcode/commond.h	/^    USTATE_SKILLBUFF_439    = 439,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_443	tmpcode/commond.h	/^	USTATE_SKILLBUFF_443    =443,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_444	tmpcode/commond.h	/^    USTATE_SKILLBUFF_444    =444,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_445	tmpcode/commond.h	/^    USTATE_SKILLBUFF_445    =445,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_446	tmpcode/commond.h	/^    USTATE_SKILLBUFF_446    =446,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_447	tmpcode/commond.h	/^   	USTATE_SKILLBUFF_447    =447,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_465	tmpcode/commond.h	/^   USTATE_SKILLBUFF_465    =465,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_466	tmpcode/commond.h	/^        USTATE_SKILLBUFF_466    =466,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_467	tmpcode/commond.h	/^        USTATE_SKILLBUFF_467    =467,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_468	tmpcode/commond.h	/^        USTATE_SKILLBUFF_468    =468,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_469	tmpcode/commond.h	/^        USTATE_SKILLBUFF_469    =469,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_470	tmpcode/commond.h	/^        USTATE_SKILLBUFF_470    =470,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_471	tmpcode/commond.h	/^        USTATE_SKILLBUFF_471    =471,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_472	tmpcode/commond.h	/^        USTATE_SKILLBUFF_472    =472,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_473	tmpcode/commond.h	/^        USTATE_SKILLBUFF_473    =473,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_474	tmpcode/commond.h	/^        USTATE_SKILLBUFF_474    =474,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_475	tmpcode/commond.h	/^        USTATE_SKILLBUFF_475    =475,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_476	tmpcode/commond.h	/^        USTATE_SKILLBUFF_476    =476,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_477	tmpcode/commond.h	/^        USTATE_SKILLBUFF_477    =477,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_478	tmpcode/commond.h	/^        USTATE_SKILLBUFF_478    =478,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_479	tmpcode/commond.h	/^        USTATE_SKILLBUFF_479    =479,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_480	tmpcode/commond.h	/^        USTATE_SKILLBUFF_480    =480,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_481	tmpcode/commond.h	/^        USTATE_SKILLBUFF_481    =481,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_482	tmpcode/commond.h	/^        USTATE_SKILLBUFF_482    =482,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_483	tmpcode/commond.h	/^        USTATE_SKILLBUFF_483    =483,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_484	tmpcode/commond.h	/^        USTATE_SKILLBUFF_484    =484,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_485	tmpcode/commond.h	/^        USTATE_SKILLBUFF_485    =485,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_486	tmpcode/commond.h	/^        USTATE_SKILLBUFF_486    =486,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_487	tmpcode/commond.h	/^        USTATE_SKILLBUFF_487    =487,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_488	tmpcode/commond.h	/^        USTATE_SKILLBUFF_488    =488,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_489	tmpcode/commond.h	/^        USTATE_SKILLBUFF_489    =489,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_490	tmpcode/commond.h	/^        USTATE_SKILLBUFF_490    =490,   $/;"	e	enum:__anon224
USTATE_SKILLBUFF_491	tmpcode/commond.h	/^		 USTATE_SKILLBUFF_491    =491,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_492	tmpcode/commond.h	/^        USTATE_SKILLBUFF_492    =492,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_493	tmpcode/commond.h	/^        USTATE_SKILLBUFF_493    =493,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_494	tmpcode/commond.h	/^        USTATE_SKILLBUFF_494    =494,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_495	tmpcode/commond.h	/^        USTATE_SKILLBUFF_495    =495,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_496	tmpcode/commond.h	/^        USTATE_SKILLBUFF_496    =496,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_497	tmpcode/commond.h	/^        USTATE_SKILLBUFF_497    =497,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_498	tmpcode/commond.h	/^        USTATE_SKILLBUFF_498    =498,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_499	tmpcode/commond.h	/^        USTATE_SKILLBUFF_499    =499,$/;"	e	enum:__anon224
USTATE_SKILLBUFF_500	tmpcode/commond.h	/^        USTATE_SKILLBUFF_500    =500,$/;"	e	enum:__anon224
USTATE_SKILLCHAOFENG	tmpcode/commond.h	/^	USTATE_SKILLCHAOFENG    = 256,  \/\/ººƒ‹≥∞∑Ì$/;"	e	enum:__anon224
USTATE_SLOWDOWN_AND_NOTRIDE	tmpcode/commond.h	/^	USTATE_SLOWDOWN_AND_NOTRIDE = 257, \/\/ºıÀŸ≤¢«“≤ªƒ‹…œ¬Ì	$/;"	e	enum:__anon224
USTATE_SOUL	base/Command.h	/^  USTATE_SOUL	= 289,	\/\/sky ÁÅµÈ≠ÇÁä∂ÊÄÅ$/;"	e	enum:Cmd::__anon69
USTATE_SPECIAL_DEFENCE	tmpcode/commond.h	/^	USTATE_SPECIAL_DEFENCE=183, \/\/…À∫¶∑≈…‰$/;"	e	enum:__anon224
USTATE_SPEEDUP	tmpcode/commond.h	/^	USTATE_SPEEDUP			= 50, 	\/\/º”ÀŸ$/;"	e	enum:__anon224
USTATE_SPUNK	base/Command.h	/^  USTATE_SPUNK =27,\/\/Á≤æÁ•ûÁ•∑Ë®Ä$/;"	e	enum:Cmd::__anon69
USTATE_START_QUEST	base/Command.h	/^  USTATE_START_QUEST   = 273,$/;"	e	enum:Cmd::__anon69
USTATE_START_QUEST	tmpcode/commond.h	/^	USTATE_START_QUEST	= 25,		\/\/\/	»ŒŒÒø™ º$/;"	e	enum:__anon224
USTATE_STEEL	tmpcode/commond.h	/^	USTATE_STEEL	      = 95,\/\/∏÷Ã˙…Ì«˚$/;"	e	enum:__anon224
USTATE_STILL	tmpcode/commond.h	/^	USTATE_STILL			= 48, 	\/\/◊‘––≥µ∂®…Ì$/;"	e	enum:__anon224
USTATE_STONE	tmpcode/commond.h	/^	USTATE_STONE 	      = 97,\/\/”≤ªØ∆§∑Ù$/;"	e	enum:__anon224
USTATE_STRAY	tmpcode/commond.h	/^	USTATE_STRAY			= 53, 	\/\/’“≤ª◊≈±±$/;"	e	enum:__anon224
USTATE_STRUP	tmpcode/commond.h	/^	USTATE_STRUP	      = 98,\/\/«ø◊≥ ı$/;"	e	enum:__anon224
USTATE_SUMMONDUJIAOSKILL	tmpcode/commond.h	/^    USTATE_SUMMONDUJIAOSKILL  = 354,  \/\/’ŸªΩ∂¿Ω« ﬁ£¨ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_SUMMONHORSE	tmpcode/commond.h	/^	USTATE_SUMMONHORSE      =142,           \/\/’ŸªΩ’Ω¬Ì$/;"	e	enum:__anon224
USTATE_SUMMONKULOUSKILL	tmpcode/commond.h	/^	USTATE_SUMMONKULOUSKILL   = 353,  \/\/’ŸªΩ˜º˜√¬Ì£¨ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_SUMMONYINGMO	tmpcode/commond.h	/^	USTATE_SUMMONYINGMO  = 212,    \/\/’ŸªΩ”∞ƒß$/;"	e	enum:__anon224
USTATE_SUNDERARMOR	base/Command.h	/^  USTATE_SUNDERARMOR =2,\/\/Á†¥Áî≤$/;"	e	enum:Cmd::__anon69
USTATE_SWORD	tmpcode/commond.h	/^	USTATE_SWORD		= 188,			\/\/µ∂$/;"	e	enum:__anon224
USTATE_TACTICSHUANBING	tmpcode/commond.h	/^	USTATE_TACTICSHUANBING     = 88,\/\/’Ω ıµ¿æﬂ£¨ª∫±¯’Ω ı$/;"	e	enum:__anon224
USTATE_TACTICSPOJIA	tmpcode/commond.h	/^	USTATE_TACTICSPOJIA     = 89,\/\/’Ω ıµ¿æﬂ£¨∆∆º◊’Ω ı$/;"	e	enum:__anon224
USTATE_TACTICSQIANGXI	tmpcode/commond.h	/^	USTATE_TACTICSQIANGXI = 93,\/\/’Ω ıµ¿æﬂ£¨«øœÆ’Ω ı$/;"	e	enum:__anon224
USTATE_TACTICSSHENSU	tmpcode/commond.h	/^	USTATE_TACTICSSHENSU  = 91,\/\/’Ω ıµ¿æﬂ£¨…ÒÀŸ’Ω ı$/;"	e	enum:__anon224
USTATE_TACTICSTIEBI	tmpcode/commond.h	/^	USTATE_TACTICSTIEBI  = 92,\/\/’Ω ıµ¿æﬂ£¨Ã˙±⁄’Ω ı$/;"	e	enum:__anon224
USTATE_TACTICSWUDAO	tmpcode/commond.h	/^	USTATE_TACTICSWUDAO    = 90,\/\/’Ω ıµ¿æﬂ£¨ŒÛµº’Ω ı$/;"	e	enum:__anon224
USTATE_TAFENG	tmpcode/commond.h	/^	USTATE_TAFENG=165,           \/\/Ã§∑ÁŒË≤Ω$/;"	e	enum:__anon224
USTATE_TANK_ATK	tmpcode/commond.h	/^	USTATE_TANK_ATK			= 45,  \/\/π•ª˜’Ω≥µ◊¥Ã¨$/;"	e	enum:__anon224
USTATE_TANK_DEF	tmpcode/commond.h	/^	USTATE_TANK_DEF			= 46,  \/\/∑¿”˘’Ω≥µ◊¥Ã¨$/;"	e	enum:__anon224
USTATE_TANK_HP	tmpcode/commond.h	/^	USTATE_TANK_HP			= 44,  \/\/…˙√¸’Ω≥µ◊¥Ã¨$/;"	e	enum:__anon224
USTATE_TEAM_ATTACK_BIRD_FLAG	base/Command.h	/^  USTATE_TEAM_ATTACK_BIRD_FLAG = 281,$/;"	e	enum:Cmd::__anon69
USTATE_TEAM_ATTACK_FLOW_CLOUD	base/Command.h	/^  USTATE_TEAM_ATTACK_FLOW_CLOUD = 280,$/;"	e	enum:Cmd::__anon69
USTATE_TEAM_ATTACK_ONE_DIM	base/Command.h	/^  USTATE_TEAM_ATTACK_ONE_DIM = 279,$/;"	e	enum:Cmd::__anon69
USTATE_TERRIFIC	base/Command.h	/^  USTATE_TERRIFIC =15,\/\/ÁøªÊ±üÂÄíÊµ∑$/;"	e	enum:Cmd::__anon69
USTATE_THREEMAGICSWORD	tmpcode/commond.h	/^	USTATE_THREEMAGICSWORD  = 328,   \/\/»˝∞—ƒß∑®Ω£$/;"	e	enum:__anon224
USTATE_TIANLUODIWANG	tmpcode/commond.h	/^	USTATE_TIANLUODIWANG	= 23,		\/\/\/	œ›¬Ì ı(“∆∂ØÀŸ∂»ºı¬˝)$/;"	e	enum:__anon224
USTATE_TIANSHIZHIYI	tmpcode/commond.h	/^	USTATE_TIANSHIZHIYI          =157,    \/\/        ÃÏ π÷Æ“Ì$/;"	e	enum:__anon224
USTATE_TIAOWU	tmpcode/commond.h	/^	USTATE_TIAOWU=81,\/\/Ã¯ŒËæ≠—È∑≠±∂$/;"	e	enum:__anon224
USTATE_TIAOZHANSPEEDUP_SKILL	tmpcode/commond.h	/^    USTATE_TIAOZHANSPEEDUP_SKILL  = 436,   \/\/Ã¯’∂º”ÀŸ≥Ã–ÚÃÿ ‚¥¶¿Ì$/;"	e	enum:__anon224
USTATE_TIPOQIANGHUA	tmpcode/commond.h	/^	USTATE_TIPOQIANGHUA     =146,           \/\/ÃÂ∆««øªØ$/;"	e	enum:__anon224
USTATE_TOGETHER_WITH_DRAGON	base/Command.h	/^  USTATE_TOGETHER_WITH_DRAGON = 270,$/;"	e	enum:Cmd::__anon69
USTATE_TOGETHER_WITH_TIGER	base/Command.h	/^  USTATE_TOGETHER_WITH_TIGER = 269,$/;"	e	enum:Cmd::__anon69
USTATE_TOTEM	tmpcode/commond.h	/^	USTATE_TOTEM         = 218,    \/\/◊§µÿ’Ω“˝µºÕºÃ⁄◊¥Ã¨$/;"	e	enum:__anon224
USTATE_TOWER	tmpcode/commond.h	/^	USTATE_TOWER			= 274,	\/\/‘⁄º˝À˛÷–$/;"	e	enum:__anon224
USTATE_TOXICANT	base/Command.h	/^  USTATE_TOXICANT =40,\/\/Ëá¥‰º§ÊØíËçØ$/;"	e	enum:Cmd::__anon69
USTATE_TRADE	tmpcode/commond.h	/^	USTATE_TRADE  	= 4,\/\/	Ωª“◊$/;"	e	enum:__anon224
USTATE_TRAP	tmpcode/commond.h	/^	USTATE_TRAP			= 194,			\/\/œ›⁄Â$/;"	e	enum:__anon224
USTATE_TRIP	tmpcode/commond.h	/^	USTATE_TRIP			= 52,	\/\/À§µπ$/;"	e	enum:__anon224
USTATE_TUOJIU	tmpcode/commond.h	/^	USTATE_TUOJIU	  	=135,		\/\/Õ—æ $/;"	e	enum:__anon224
USTATE_TWOKUANGBAO	tmpcode/commond.h	/^	USTATE_TWOKUANGBAO	=136,		\/\/∂˛∂»øÒ±©$/;"	e	enum:__anon224
USTATE_TWOMAGICSWORD	tmpcode/commond.h	/^	USTATE_TWOMAGICSWORD    = 327,   \/\/¡Ω∞—ƒß∑®Ω£$/;"	e	enum:__anon224
USTATE_ULTRA_EQUIPMENT	base/Command.h	/^  USTATE_ULTRA_EQUIPMENT = 278,$/;"	e	enum:Cmd::__anon69
USTATE_UNARM	base/Command.h	/^  USTATE_UNARM =1,\/\/ Áº¥Ê¢∞$/;"	e	enum:Cmd::__anon69
USTATE_VAMPIRE	base/Command.h	/^  USTATE_VAMPIRE =32,\/\/Âê∏Ë°Ä$/;"	e	enum:Cmd::__anon69
USTATE_WAJIEZHIZHOU	tmpcode/commond.h	/^	USTATE_WAJIEZHIZHOU=172,      \/\/ÕﬂΩ‚÷Æ÷‰$/;"	e	enum:__anon224
USTATE_WANGZHEBOSS	tmpcode/commond.h	/^	USTATE_WANGZHEBOSS	    = 203,      \/\/Õı’ﬂ÷ÆΩ£	$/;"	e	enum:__anon224
USTATE_WANYONG	tmpcode/commond.h	/^	USTATE_WANYONG=187,     \/\/ÕÚ”√buff£¨‘› ±”√”⁄ªπ√ª»∑∂®µƒbuff$/;"	e	enum:__anon224
USTATE_WAR	base/Command.h	/^  USTATE_WAR				 = 265,$/;"	e	enum:Cmd::__anon69
USTATE_WAR	tmpcode/commond.h	/^	USTATE_WAR		= 5,\/\/	Ωª’Ω◊¥Ã¨$/;"	e	enum:__anon224
USTATE_WAR_ATTACK	tmpcode/commond.h	/^	USTATE_WAR_ATTACK       =115, 		\/\/Ω¯π• (∂‘’Ω ±µƒ◊¥Ã¨)$/;"	e	enum:__anon224
USTATE_WAR_DEFEND	tmpcode/commond.h	/^	USTATE_WAR_DEFEND       =116,           \/\/∑¿ ÿ (∂‘’Ω ±µƒ◊¥Ã¨)	$/;"	e	enum:__anon224
USTATE_WAR_HORN	tmpcode/commond.h	/^	USTATE_WAR_HORN         = 338,  \/\/’Ω’˘∫≈Ω«, ‘≠µÿ∏¥ªÓº‰∏Ù ±º‰Àı∂Ã$/;"	e	enum:__anon224
USTATE_WAR_NEUTRA	tmpcode/commond.h	/^	USTATE_WAR_NEUTRA       =117,		\/\/÷–¡¢ (∂‘’Ω ±µƒ◊¥Ã¨)$/;"	e	enum:__anon224
USTATE_WEAKNESS	base/Command.h	/^  USTATE_WEAKNESS =35,\/\/ËôöÂº±$/;"	e	enum:Cmd::__anon69
USTATE_WHITE_TORCH	tmpcode/commond.h	/^	USTATE_WHITE_TORCH = 74, \/\/µ„»ºªæÊªÓ∂Ø÷–µƒ∞◊…´ªæÊ$/;"	e	enum:__anon224
USTATE_WINDMILL	base/Command.h	/^  USTATE_WINDMILL =19,\/\/È£éÁÅ´ËΩÆ$/;"	e	enum:Cmd::__anon69
USTATE_WISDOM	base/Command.h	/^  USTATE_WISDOM =22,\/\/Êô∫ÊÖßÁ•∑Ë®Ä$/;"	e	enum:Cmd::__anon69
USTATE_WUDI	tmpcode/commond.h	/^	USTATE_WUDI=180,			\/\/¥ÛÃ”…± Œﬁµ–$/;"	e	enum:__anon224
USTATE_XIANJIFA	tmpcode/commond.h	/^	USTATE_XIANJIFA	        = 208,      \/\/œ◊º¿$/;"	e	enum:__anon224
USTATE_XIELINGBOSS	tmpcode/commond.h	/^	USTATE_XIELINGBOSS	    = 201,      \/\/–∞¡È“‚÷æ	$/;"	e	enum:__anon224
USTATE_XIEMOSKILL	tmpcode/commond.h	/^	USTATE_XIEMOSKILL       = 352,  \/\/–∞ƒßΩ£¡È,ººƒ‹BUFFœ‘ æ π”√$/;"	e	enum:__anon224
USTATE_XINLING_GUANBI	tmpcode/commond.h	/^	USTATE_XINLING_GUANBI   = 457,  \/\/–ƒ¡Èπÿ±’◊¥Ã¨$/;"	e	enum:__anon224
USTATE_XUEDUNBOSS	tmpcode/commond.h	/^	USTATE_XUEDUNBOSS	    = 206,      \/\/—™∂‹	$/;"	e	enum:__anon224
USTATE_XUENUKUANGBAO	tmpcode/commond.h	/^	USTATE_XUENUKUANGBAO = 213,    \/\/—™≈≠øÒ±©$/;"	e	enum:__anon224
USTATE_XURUO	tmpcode/commond.h	/^	USTATE_XURUO    = 83,  \/\/¥Û≥º–È»ı–ßπ˚$/;"	e	enum:__anon224
USTATE_YANZHANBOSS	tmpcode/commond.h	/^	USTATE_YANZHANBOSS	    = 200,      \/\/—·’Ω«È–˜	$/;"	e	enum:__anon224
USTATE_YELLOWCRYSTAL	tmpcode/commond.h	/^	USTATE_YELLOWCRYSTAL    =259, \/\/ª∆…´◊£∏£ÀÆæßbuffer◊¥Ã¨$/;"	e	enum:__anon224
USTATE_YELLOW_FLAG	tmpcode/commond.h	/^	USTATE_YELLOW_FLAG	=121,		\/\/ø∏∆Ï1$/;"	e	enum:__anon224
USTATE_YELLOW_TORCH	tmpcode/commond.h	/^	USTATE_YELLOW_TORCH = 76, \/\/ª∆…´ªæÊ$/;"	e	enum:__anon224
USTATE_YINGZHIDUN	tmpcode/commond.h	/^	USTATE_YINGZHIDUN          =159,      \/\/   ∞µ”∞÷Æ∂‹   $/;"	e	enum:__anon224
USTATE_YIN_QIAN	tmpcode/commond.h	/^	USTATE_YIN_QIAN         = 458,  \/\/”∞°§«±◊¥Ã¨$/;"	e	enum:__anon224
USTATE_YUHE	tmpcode/commond.h	/^	USTATE_YUHE=170,              \/\/”˙∫œ$/;"	e	enum:__anon224
USTATE_YUHUASKILL	tmpcode/commond.h	/^	USTATE_YUHUASKILL       = 362,  \/\/”ªØ◊¥Ã¨£¨◊ÀÃ¨ººƒ‹øÕªß∂Àœ‘ æ$/;"	e	enum:__anon224
USTATE_YUMASHU	tmpcode/commond.h	/^	USTATE_YUMASHU			= 24,		\/\/\/	”˘¬Ì ı$/;"	e	enum:__anon224
USTATE_YUNBIAOQIANGHUA	tmpcode/commond.h	/^	USTATE_YUNBIAOQIANGHUA	= 21,		\/\/\/	‘ÀÔ⁄«øªØ$/;"	e	enum:__anon224
USTATE_ZHANLINGTUTENG	tmpcode/commond.h	/^	USTATE_ZHANLINGTUTENG =58 , \/\/	’º¡Ïπ˙º“ÕºÃ⁄◊¥Ã¨$/;"	e	enum:__anon224
USTATE_ZHANQI	tmpcode/commond.h	/^	USTATE_ZHANQI = 30,		\/\/\/ ’Ω∆Ï$/;"	e	enum:__anon224
USTATE_ZHANSHEN_GUANGHUI	tmpcode/commond.h	/^	USTATE_ZHANSHEN_GUANGHUI = 241,	\/\/\/ ’Ω…Òπ‚ª‘$/;"	e	enum:__anon224
USTATE_ZHANSHIZHUFU	tmpcode/commond.h	/^	USTATE_ZHANSHIZHUFU	= 284,	\/\/’Ω øπ´ª·µƒ◊£∏£	$/;"	e	enum:__anon224
USTATE_ZHANYILOCK	tmpcode/commond.h	/^	USTATE_ZHANYILOCK       =132,	        \/\/’Ω“‚À¯∂®$/;"	e	enum:__anon224
USTATE_ZHANYISHUIJIE	tmpcode/commond.h	/^    USTATE_ZHANYISHUIJIE       =252,        \/\/’Ω“‚À•Ωﬂ$/;"	e	enum:__anon224
USTATE_ZHENHANSKILL	tmpcode/commond.h	/^    USTATE_ZHENHANSKILL     = 369,  \/\/’∫≥ª˜–ßπ˚°£≥Ã–ÚÃÿ ‚ π”√$/;"	e	enum:__anon224
USTATE_ZHENHANXUNYUN_SKILL	tmpcode/commond.h	/^    USTATE_ZHENHANXUNYUN_SKILL=454,\/\/’∫≥—£‘Œ◊¥Ã¨£¨≥Ã–ÚÃÿ ‚¥¶¿Ì$/;"	e	enum:__anon224
USTATE_ZHENXUAN_FIFTEEN	tmpcode/commond.h	/^	USTATE_ZHENXUAN_FIFTEEN = 333,  \/\/’˘∞‘‘§—°»¸15»À’∂$/;"	e	enum:__anon224
USTATE_ZHENXUAN_FIFTY	tmpcode/commond.h	/^	USTATE_ZHENXUAN_FIFTY   = 337,  \/\/’˘∞‘‘§—°»¸50»À’∂$/;"	e	enum:__anon224
USTATE_ZHENXUAN_FIVE	tmpcode/commond.h	/^	USTATE_ZHENXUAN_FIVE    = 331,  \/\/’˘∞‘‘§—°»¸5»À’∂$/;"	e	enum:__anon224
USTATE_ZHENXUAN_FOURTY	tmpcode/commond.h	/^	USTATE_ZHENXUAN_FOURTY  = 336,  \/\/’˘∞‘‘§—°»¸40»À’∂$/;"	e	enum:__anon224
USTATE_ZHENXUAN_HUNDRED	tmpcode/commond.h	/^	USTATE_ZHENXUAN_HUNDRED = 434,  \/\/’˘∞‘‘§—°»¸100»À’∂$/;"	e	enum:__anon224
USTATE_ZHENXUAN_REST	tmpcode/commond.h	/^	USTATE_ZHENXUAN_REST    =313,   \/\/’Á—°æ∫ºº»¸≤Œ»¸’ﬂ–›œ¢ªÚ’ﬂµ»¥˝◊¥Ã¨$/;"	e	enum:__anon224
USTATE_ZHENXUAN_SIDEA	tmpcode/commond.h	/^	USTATE_ZHENXUAN_SIDEA   =311,   \/\/’Á—°æ∫ºº»¸A∑Ω$/;"	e	enum:__anon224
USTATE_ZHENXUAN_SIDEB	tmpcode/commond.h	/^	USTATE_ZHENXUAN_SIDEB   =312,   \/\/’Á—°æ∫ºº»¸B∑Ω$/;"	e	enum:__anon224
USTATE_ZHENXUAN_TEN	tmpcode/commond.h	/^	USTATE_ZHENXUAN_TEN     = 332,  \/\/’˘∞‘‘§—°»¸10»À’∂$/;"	e	enum:__anon224
USTATE_ZHENXUAN_THIRTY	tmpcode/commond.h	/^	USTATE_ZHENXUAN_THIRTY  = 335,  \/\/’˘∞‘‘§—°»¸30»À’∂$/;"	e	enum:__anon224
USTATE_ZHENXUAN_TWENTY	tmpcode/commond.h	/^	USTATE_ZHENXUAN_TWENTY  = 334,  \/\/’˘∞‘‘§—°»¸20»À’∂$/;"	e	enum:__anon224
USTATE_ZHIDINGJIPIN_SKILL	tmpcode/commond.h	/^    USTATE_ZHIDINGJIPIN_SKILL  = 379, \/\/÷∏∂®º¿∆∑ ≥Ã–ÚÃÿ ‚¥¶¿Ì$/;"	e	enum:__anon224
USTATE_ZHILIAOLICHANG	tmpcode/commond.h	/^	USTATE_ZHILIAOLICHANG =152,          \/\/÷Œ¡∆¡¶≥°$/;"	e	enum:__anon224
USTATE_ZHISHIBOSS	tmpcode/commond.h	/^	USTATE_ZHISHIBOSS	    = 204,      \/\/…Ò÷Æ÷∏ æ	$/;"	e	enum:__anon224
USTATE_ZHIYUANYILIAO	tmpcode/commond.h	/^	USTATE_ZHIYUANYILIAO	=141,		\/\/◊‘»ª“Ω¡∆$/;"	e	enum:__anon224
USTATE_ZHONGDUBOSS	tmpcode/commond.h	/^	USTATE_ZHONGDUBOSS	    = 202,      \/\/÷–∂æ	$/;"	e	enum:__anon224
USTATE_ZHONGSHANG_TUOLI	tmpcode/commond.h	/^	USTATE_ZHONGSHANG_TUOLI = 229, \/\/÷ÿ…ÀÕ—¿Î◊¥Ã¨$/;"	e	enum:__anon224
USTATE_ZHOUWENXIAOSHAN	tmpcode/commond.h	/^    USTATE_ZHOUWENXIAOSHAN     =251,        \/\/÷‰Œƒœ˚…¢$/;"	e	enum:__anon224
USTATE_ZUISHENKONGJV	tmpcode/commond.h	/^	USTATE_ZUISHENKONGJV=173,      \/\/◊Ó…Óø÷æÂ$/;"	e	enum:__anon224
U_ID	ScenesServer/script_func.cpp	288;"	d
UnionCityDareInfo	tmpcode/commond.h	/^	UnionCityDareInfo()$/;"	f	struct:UnionCityDareInfo
UnionCityDareInfo	tmpcode/commond.h	/^struct UnionCityDareInfo$/;"	s
UnionCityDareItem	tmpcode/commond.h	/^        UnionCityDareItem()$/;"	f	struct:UnionCityDareItem
UnionCityDareItem	tmpcode/commond.h	/^struct UnionCityDareItem$/;"	s
UnionDef	base/Union.h	/^namespace UnionDef$/;"	n
UnionMsgInfo	tmpcode/commond.h	/^	UnionMsgInfo()$/;"	f	struct:UnionMsgInfo
UnionMsgInfo	tmpcode/commond.h	/^struct UnionMsgInfo$/;"	s
UnionName	base/Command.h	/^  char UnionName[MAX_NAMESIZE];  \/\/ Â∏Æ‰ºöÂêçÁß∞$/;"	m	struct:Cmd::stCreateUnionCmd
UnionName	tmpcode/commond.h	/^	char  UnionName[MAX_NAMESIZE];      \/\/—˚«Îæ¸Õ≈µƒ√˚◊÷$/;"	m	struct:stReqUnionAlly
UnionName	tmpcode/commond.h	/^	char UnionName[MAX_NAMESIZE];  \/\/ ∞Ôª·√˚≥∆$/;"	m	struct:stCreateUnionCmd
UnionNoticeInfo	tmpcode/commond.h	/^	UnionNoticeInfo()$/;"	f	struct:UnionNoticeInfo
UnionNoticeInfo	tmpcode/commond.h	/^struct UnionNoticeInfo$/;"	s
UnionTankAtkType	tmpcode/commond.h	/^ enum UnionTankAtkType$/;"	g
Update	ScenesServer/QuestMaker.h	/^    Update(ScenesParser& p) : _p(p)$/;"	f	class:MakeFunction::Update
Update	ScenesServer/QuestMaker.h	/^  class Update : public Maker<Action>$/;"	c	namespace:MakeFunction
UpdateCountryOnline	GatewayServer/CountryInfo.cpp	/^void CountryInfo::UpdateCountryOnline( DWORD country_id, DWORD online_numbers )$/;"	f	class:CountryInfo
UpdateSceneObjectCallBack	ScenesServer/Scene.cpp	/^  UpdateSceneObjectCallBack(Scene *scene) : scene(scene) {};$/;"	f	struct:UpdateSceneObjectCallBack
UpdateSceneObjectCallBack	ScenesServer/Scene.cpp	/^struct UpdateSceneObjectCallBack : public zSceneEntryCallBack$/;"	s
UrlInfo	base/zDBConnPool.h	/^	UrlInfo()$/;"	f	struct:UrlInfo
UrlInfo	base/zDBConnPool.h	/^	UrlInfo(const DWORD hashcode,const std::string &url,const bool supportTransactions)$/;"	f	struct:UrlInfo
UrlInfo	base/zDBConnPool.h	/^	UrlInfo(const UrlInfo &ui)$/;"	f	struct:UrlInfo
UrlInfo	base/zDBConnPool.h	/^struct UrlInfo$/;"	s
Use	ScenesServer/QuestEvent.h	/^  class Use$/;"	c	namespace:Trigger
UseIPEntry	Robot/LoginClient.cpp	/^void LoginClient::UseIPEntry(BYTE *pszSrc, int iNum)$/;"	f	class:LoginClient
UserCardCompare	ScenesServer/CardManager.h	/^class UserCardCompare$/;"	c
UserCardComparePos	ScenesServer/CardManager.cpp	/^class UserCardComparePos:public UserCardCompare $/;"	c
UserCardExec	ScenesServer/CardManager.h	/^class UserCardExec$/;"	c
UserConfigM	FLServer/UserHttpPub.h	/^	UserConfigM()$/;"	f	class:UserConfigM
UserConfigM	FLServer/UserHttpPub.h	/^class UserConfigM : public Singleton<UserConfigM>$/;"	c
UserContainer	FLServer/UserTask.h	/^	UserContainer()$/;"	f	class:UserContainer
UserContainer	FLServer/UserTask.h	/^class UserContainer : public Singleton<UserContainer>$/;"	c
UserHttpPub	FLServer/UserHttpPub.h	/^class UserHttpPub$/;"	c
UserID	base/SessionCommand.h	/^		DWORD UserID;					\/\/sky Ë¢´ÈÄöÁü•ÁöÑÁî®Êà∑$/;"	m	struct:Cmd::Session::t_Sports_MoveSecen
UserID	base/SessionCommand.h	/^		DWORD UserID;			\/\/sky Áî®Êà∑ID(type‰∏∫Èòü‰ºçÊó∂ÂÄôËØ•ID‰∏∫Èòü‰ºçÂîØ‰∏ÄID)$/;"	m	struct:Cmd::Session::t_Sports_AddMeToQueuing
UserID	tmpcode/commond.h	/^	DWORD UserID;                   \/\/…Í«Î»ÀµƒID$/;"	m	struct:st_BroadcastUserApplyHouseUserCmd
UserInfoBySameIP	tmpcode/commond.h	/^	UserInfoBySameIP()$/;"	f	struct:UserInfoBySameIP
UserInfoBySameIP	tmpcode/commond.h	/^struct UserInfoBySameIP$/;"	s
UserObjectCompare	ScenesServer/ObjectManager.h	/^class UserObjectCompare$/;"	c
UserObjectComparePos	ScenesServer/ObjectManager.cpp	/^class UserObjectComparePos:public UserObjectCompare $/;"	c
UserObjectExec	ScenesServer/ObjectManager.h	/^class UserObjectExec$/;"	c
UserObjectM	ScenesServer/ObjectManager.cpp	/^UserObjectM::UserObjectM()$/;"	f	class:UserObjectM
UserObjectM	ScenesServer/ObjectManager.h	/^class UserObjectM:private zEntryManager< zEntryID >$/;"	c
UserServer	base/UserCommand.h	/^  namespace UserServer$/;"	n	namespace:Cmd
UserSession	SessionServer/Session.cpp	/^UserSession::UserSession(SessionTask *task):zUser(),Session(task)$/;"	f	class:UserSession
UserSession	SessionServer/Session.h	/^class UserSession:public zUser,public Session$/;"	c
UserSessionManager	SessionServer/SessionManager.cpp	/^UserSessionManager::UserSessionManager():zUserManager()$/;"	f	class:UserSessionManager
UserSessionManager	SessionServer/SessionManager.h	/^class UserSessionManager:public zUserManager$/;"	c
UserSkillExec	ScenesServer/SkillManager.h	/^class UserSkillExec$/;"	c
UserSkillM	ScenesServer/SkillManager.cpp	/^UserSkillM::UserSkillM()$/;"	f	class:UserSkillM
UserSkillM	ScenesServer/SkillManager.h	/^class UserSkillM : private SkillManager$/;"	c
UserSkillsShow	tmpcode/commond.h	/^struct UserSkillsShow$/;"	s
UserTask	FLServer/UserTask.h	/^	UserTask($/;"	f	class:UserTask
UserTask	FLServer/UserTask.h	/^class UserTask : public zTCPTask, public UserHttpPub$/;"	c
UserVar	ScenesServer/Quest.h	/^  UserVar() : _vars(50)$/;"	f	class:UserVar
UserVar	ScenesServer/Quest.h	/^class UserVar$/;"	c
UsersVar	ScenesServer/Quest.h	/^typedef GlobalVarImpl<4> UsersVar;$/;"	t
VALUE_TYPE	ScenesServer/SkillStatusManager.h	/^  typedef std::map<DWORD,SkillStatusElement>::value_type VALUE_TYPE;$/;"	t	class:SkillStatusManager
VAR	ScenesServer/Quest.h	/^    VAR(const std::string& value="",int tmp=0) : _value(value),_tmp(tmp)$/;"	f	class:Vars::VAR
VAR	ScenesServer/Quest.h	/^  class VAR$/;"	c	class:UserVar
VAR	ScenesServer/Quest.h	/^  class VAR$/;"	c	class:Vars
VARS	ScenesServer/Quest.h	/^  typedef __gnu_cxx::hash_map<DWORD,VAR*> VARS;  \/\/$/;"	t	class:UserVar
VARS	ScenesServer/Quest.h	/^  typedef __gnu_cxx::hash_map<std::string, VAR, key_hash> VARS;$/;"	t	class:Vars
VARS	ScenesServer/Quest.h	/^  typedef std::map<QWORD,Vars*> VARS;  \/\/$/;"	t	class:GlobalVarImpl
VERSIONSTRING	Makefile	/^VERSIONSTRING = `if [ $(VERSION_STRING) ]; then echo &(VERSION_STRING); else echo "0.0.0"; fi`$/;"	m
VISITNPC_MOBILESHOP_USERCMD_PARAMETER	tmpcode/commond.h	5192;"	d
VISITNPC_TRADE_USERCMD_PARAMETER	base/Command.h	3944;"	d
VISITNPC_TRADE_USERCMD_PARAMETER	tmpcode/commond.h	/^const BYTE VISITNPC_TRADE_USERCMD_PARAMETER = 11;$/;"	v
VISIT_ALTAR_USERCMD_PARAMETER	tmpcode/commond.h	5289;"	d
VISIT_FLAG_SC_PARA	tmpcode/commond.h	/^const BYTE VISIT_FLAG_SC_PARA			= 11;$/;"	v
VISIT_MAXLEVEL_NPC_USERCMD_PARA	tmpcode/commond.h	30146;"	d
VISIT_QUESTMAP_FEILONG_NPC_USERCMD_PARA	tmpcode/commond.h	/^const BYTE VISIT_QUESTMAP_FEILONG_NPC_USERCMD_PARA = 92;$/;"	v
VISIT_ZHONGLICITY_USERCMD_PARAMETER	tmpcode/commond.h	5130;"	d
VOTELIST_SEPT_PARA	base/Command.h	/^const BYTE VOTELIST_SEPT_PARA = 13;$/;"	v
VOTELIST_UNION_PARA	base/Command.h	/^const BYTE VOTELIST_UNION_PARA = 13;$/;"	v
VOTE_IN_CHALLENGE_DRAGON_PARA	tmpcode/commond.h	/^const BYTE VOTE_IN_CHALLENGE_DRAGON_PARA = 27;$/;"	v
VOTE_SEPT_PARA	base/Command.h	/^const BYTE VOTE_SEPT_PARA = 14;$/;"	v
VOTE_UNION_PARA	base/Command.h	/^const BYTE VOTE_UNION_PARA = 14;$/;"	v
VOTE_USERCMD	base/CmdType.h	/^const BYTE VOTE_USERCMD      = 40;$/;"	v
Var	base/Command.h	/^  struct Var {$/;"	s	struct:Cmd::stQuestVarsUserCmd
Var	tmpcode/commond.h	/^	struct Var {$/;"	s	struct:stQuestVarsUserCmd
Var	tmpcode/commond.h	/^        struct Var {$/;"	s	struct:showPeronTaskUserCmd
VarAction	ScenesServer/QuestAction.h	/^  VarAction(ScenesParser& p) : TeamAction(p)$/;"	f	class:VarAction
VarAction	ScenesServer/QuestAction.h	/^class VarAction : public TeamAction$/;"	c
VarCondition	ScenesServer/QuestCondition.h	/^  VarCondition(ScenesParser& p) : TeamCondition(p)$/;"	f	class:VarCondition
VarCondition	ScenesServer/QuestCondition.h	/^class VarCondition : public TeamCondition$/;"	c
Vars	ScenesServer/Quest.h	/^  Vars(DWORD quest_id = 0) : _vars(50),_quest_id(quest_id),_timeout(0),_start_time(0),_update(0)$/;"	f	class:Vars
Vars	ScenesServer/Quest.h	/^class Vars$/;"	c
VarsCallback	ScenesServer/Quest.h	/^  struct VarsCallback$/;"	s	class:Vars
Visit	ScenesServer/QuestEvent.h	/^  class Visit$/;"	c	namespace:Trigger
Void	ScenesServer/QuestMaker.h	/^    Void()$/;"	f	class:MakeFunction::Void
Void	ScenesServer/QuestMaker.h	/^  class Void : public Maker<Action>$/;"	c	namespace:MakeFunction
W	ScenesServer/zObject.h	/^    W = 7,$/;"	e	enum:StorePack::__anon177
W	ScenesServer/zObject.h	/^  static const BYTE W = 8;$/;"	m	class:PetPack
WABAO	tmpcode/commond.h	/^			WABAO = 10,$/;"	e	enum:ReuildType
WADS_DRAWED	tmpcode/commond.h	/^		WADS_DRAWED,  \/\/ “—¡Ï»°$/;"	e	enum:stReturnWeekAssuranceDrawState::WeekAssuranceDrawState
WADS_NOT_DRAWED	tmpcode/commond.h	/^		WADS_NOT_DRAWED = 0,  \/\/ Œ¥¡Ï»°\/π˝∆⁄  ◊‘º∫≈–∂œΩÒ»’ «÷‹º∏£¨÷Æ«∞µƒ «π˝∆⁄£¨÷Æ∫Ûµƒ «Œ¥¡Ï$/;"	e	enum:stReturnWeekAssuranceDrawState::WeekAssuranceDrawState
WADS_OVERDUE_BUT_DRAWABLE	tmpcode/commond.h	/^		WADS_OVERDUE_BUT_DRAWABLE,  \/\/ π˝∆⁄µ´ø…≤π¡Ï$/;"	e	enum:stReturnWeekAssuranceDrawState::WeekAssuranceDrawState
WAIT_COUNTRY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE WAIT_COUNTRY_USERCMD_PARA = 16;$/;"	v
WAIT_LOGIN	BillServer/BillManager.h	/^    WAIT_LOGIN,   \/**< Á≠âÂæÖÈÄöËøáÁôªÈôÜÈ™åËØÅÁöÑÂÆ¢Êà∑Á´ØÁôªÈôÜÁΩëÂÖ≥ÊúçÂä°Âô® *\/$/;"	e	enum:BillInfo::__anon1
WAIT_LOGIN	BillServer/BillUser.h	/^      WAIT_LOGIN,   \/**< Á≠âÂæÖÈÄöËøáÁôªÈôÜÈ™åËØÅÁöÑÂÆ¢Êà∑Á´ØÁôªÈôÜÁΩëÂÖ≥ÊúçÂä°Âô® *\/$/;"	e	enum:BillUser::LoginState
WAIT_LOGIN_TIMEOUT	BillServer/BillUser.h	/^      WAIT_LOGIN_TIMEOUT,\/**< Á≠âÂæÖÁôªÈôÜË∂ÖÊó∂ *\/$/;"	e	enum:BillUser::LoginState
WAIT_TECH_TYPE	base/Command.h	/^  WAIT_TECH_TYPE = 1,\/\/ ÊäïÁ•®ÈÄâÂá∫ÁöÑÁßëÊäÄÔºåÁ≠âÂæÖÂõΩÁéãÈÄâÊã©ÂÆòÂëò$/;"	e	enum:Cmd::__anon113
WALK_RESTITUTE_SP	ScenesServer/SceneUser.h	/^      WALK_RESTITUTE_SP = 1,\/\/Ëµ∞Ë∑Ø‰ΩìÂäõÊ∂àËÄó$/;"	e	enum:SceneUser::__anon187
WARN	base/zLogger.h	/^	    static const zLevel * WARN;$/;"	m	class:zLogger::zLevel
WATCHER_EXPRESS_WEEKEND_ZHENXUAN_PARA	tmpcode/commond.h	/^const BYTE WATCHER_EXPRESS_WEEKEND_ZHENXUAN_PARA = 13;$/;"	v
WATCHER_NUM_CHALLENGE_PARA	tmpcode/commond.h	21933;"	d
WATCHTYPE	tmpcode/commond.h	/^enum WATCHTYPE$/;"	g
WATCH_DRAGON_PARA	tmpcode/commond.h	/^const BYTE WATCH_DRAGON_PARA = 10;$/;"	v
WATCH_FRIEND_PARA	tmpcode/commond.h	/^const BYTE WATCH_FRIEND_PARA = 17;$/;"	v
WATCH_FRIEND_STOVE_PROPERTY_USERCMD_PARA	tmpcode/commond.h	/^const BYTE WATCH_FRIEND_STOVE_PROPERTY_USERCMD_PARA = 162;$/;"	v
WATCH_LINGQI_PARA	tmpcode/commond.h	20812;"	d
WATCH_MERCENARY	tmpcode/commond.h	/^	WATCH_MERCENARY = 3,\/\/π€≤‚πÕ”∂±¯$/;"	e	enum:WATCHTYPE
WATCH_SORT	tmpcode/commond.h	/^	WATCH_SORT   = 2,  \/\/π€≤Ï∏ˆ»À≈≈––$/;"	e	enum:WATCHTYPE
WATER_SOIL_HOUSE_USRECMD	tmpcode/commond.h	/^const BYTE WATER_SOIL_HOUSE_USRECMD = 29;$/;"	v
WD2BA	base/Union.h	11;"	d
WEAK_KING_CLOSE_BORDER_PARA	tmpcode/commond.h	27362;"	d
WEEKBOX_USRECMD	tmpcode/commond.h	/^const BYTE WEEKBOX_USRECMD = 141;$/;"	v
WEEK_SALARY_OPERATION_UNION_PARA	tmpcode/commond.h	/^const BYTE WEEK_SALARY_OPERATION_UNION_PARA = 141;$/;"	v
WENMINGNC_INFO_USERCMD	tmpcode/commond.h	/^const BYTE WENMINGNC_INFO_USERCMD = 150;$/;"	v
WIDTH	ScenesServer/zCard.h	/^	    WIDTH = 1,$/;"	e	enum:EquipSlot::__anon193
WIDTH	ScenesServer/zCard.h	/^	    WIDTH = 1,$/;"	e	enum:HeroSlot::__anon195
WIDTH	ScenesServer/zCard.h	/^	    WIDTH = 1,$/;"	e	enum:SkillSlot::__anon194
WIDTH	ScenesServer/zCard.h	/^	    WIDTH = 10,$/;"	e	enum:HandSlot::__anon192
WIDTH	ScenesServer/zCard.h	/^	    WIDTH = 500,$/;"	e	enum:TombSlot::__anon196
WIDTH	ScenesServer/zCard.h	/^	    WIDTH = 7,$/;"	e	enum:BattleSlot::__anon191
WIDTH	ScenesServer/zObject.h	/^		WIDTH = 5,$/;"	e	enum:MainPack::__anon176
WINNER_GIFT_PARA	base/Command.h	/^const BYTE WINNER_GIFT_PARA = 7;$/;"	v
WINNER_GIFT_PARA	tmpcode/commond.h	/^const BYTE WINNER_GIFT_PARA = 7;$/;"	v
WINNER_GOLD	base/SessionCommand.h	/^      WINNER_GOLD,\/\/ Â•ñÂä±Èáë$/;"	e	enum:Cmd::Session::__anon44
WMSWITCH_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE WMSWITCH_MAGIC_USERCMD_PARA = 38;$/;"	v
WORD	base/zType.h	/^typedef unsigned short WORD;$/;"	t
WORLDCUP_ACT	tmpcode/commond.h	/^const BYTE WORLDCUP_ACT = 142;$/;"	v
WORLD_CUP_GIFT_BAG_USERCMD_PARA	tmpcode/commond.h	/^const BYTE WORLD_CUP_GIFT_BAG_USERCMD_PARA = 211;$/;"	v
WORLD_SEPT_SORT	base/Command.h	/^  WORLD_SEPT_SORT,\/\/ ‰∏ñÁïåÂÆ∂ÊóèÊéíË°åÊ¶ú$/;"	e	enum:Cmd::__anon129
WORLD_SEPT_SORT	tmpcode/commond.h	/^	WORLD_SEPT_SORT,        \/\/  ¿ΩÁº“◊Â≈≈––∞Ò$/;"	e	enum:__anon242
WORLD_SEPT_SORT_DARE	tmpcode/commond.h	/^	WORLD_SEPT_SORT_DARE,   \/\/∏¯º“◊ÂÃÙ’Ω»¸∑µªÿ$/;"	e	enum:__anon242
WORLD_UNION_SORT	base/Command.h	/^  WORLD_UNION_SORT,\/\/ ‰∏ñÁïåÂ∏Æ‰ºöÊéíË°åÊ¶ú$/;"	e	enum:Cmd::__anon108
WORLD_UNION_SORT	tmpcode/commond.h	/^	WORLD_UNION_SORT,       \/\/  ¿ΩÁ”∂±¯Õ≈≈≈––∞Ò$/;"	e	enum:__anon243
WORLD_UNION_SORT_DARE	tmpcode/commond.h	/^	WORLD_UNION_SORT_DARE,  \/\/∏¯”∂±¯Õ≈ÃÙ’Ω»¸’Ω∑µªÿ$/;"	e	enum:__anon243
WRITE_SKILL_BOOK_USERCMD_PARA	tmpcode/commond.h	/^const BYTE WRITE_SKILL_BOOK_USERCMD_PARA = 198;$/;"	v
WRONGKEY	tmpcode/commond.h	/^        WRONGKEY,       \/\/‘ø≥◊≤ª∆•≈‰$/;"	e	enum:__anon341
WTACH_FREIND	tmpcode/commond.h	/^	WTACH_FREIND = 1,  \/\/π€≤Ï∫√”—$/;"	e	enum:WATCHTYPE
WaitForMatch	SessionServer/HeroCardManager.h	/^    typedef std::list<stChallengeInfo> WaitForMatch;   \/\/¥˝∆•≈‰µƒ	∂‘’Ω–≈œ¢¡–±Ì$/;"	t	class:HeroCardManager
WayPoint	ScenesServer/WayPoint.cpp	/^WayPoint::WayPoint()$/;"	f	class:WayPoint
WayPoint	ScenesServer/WayPoint.h	/^struct WayPoint$/;"	s
WayPointM	ScenesServer/WayPoint.h	/^class WayPointM$/;"	c
WeekAssuranceDrawState	tmpcode/commond.h	/^	enum WeekAssuranceDrawState$/;"	g	struct:stReturnWeekAssuranceDrawState
WeekVar	ScenesServer/Quest.h	/^typedef GlobalVarImpl<8> WeekVar;$/;"	t
WinnerInfo	tmpcode/commond.h	/^            WinnerInfo()$/;"	f	struct:stNofityBetResultInChallengeDragonUserCmd::WinnerInfo
WinnerInfo	tmpcode/commond.h	/^    struct WinnerInfo$/;"	s	struct:stNofityBetResultInChallengeDragonUserCmd
WriteBack_Type	base/RecordCommand.h	/^    enum WriteBack_Type$/;"	g	namespace:Cmd::Record
WriteLoginChange	roleChangeServer/ChangeTask.cpp	/^bool ChangeTask::WriteLoginChange(const Cmd::Rolechange::t_sendUserToZone *ptCmd, const unsigned int nCmdLen)$/;"	f	class:ChangeTask
WriteRoleChange	roleChangeServer/ChangeTask.cpp	/^bool ChangeTask::WriteRoleChange(int fromid, int toid, Cmd::t_NullCmd *ptCmd, const unsigned int nCmdLen)$/;"	f	class:ChangeTask
WriteSendError	roleChangeServer/ChangeTask.cpp	/^bool ChangeTask::WriteSendError(int fromid, int toid, Cmd::t_NullCmd *ptCmd, const unsigned int nCmdLen)$/;"	f	class:ChangeTask
XING_LING_CHONG_JI_MO	tmpcode/commond.h	/^	XING_LING_CHONG_JI_MO = 255,\/\/–ƒ¡È≥Âª˜£®ƒß£©$/;"	e	enum:__anon205
XING_LING_CHONG_JI_WU	tmpcode/commond.h	/^	XING_LING_CHONG_JI_WU = 205,\/\/–ƒ¡È≥Âª˜£®ŒÔ£©$/;"	e	enum:__anon205
XING_LING_ZHI_CHUI_MO	tmpcode/commond.h	/^	XING_LING_ZHI_CHUI_MO = 251,\/\/–ƒ¡È÷Æ¥∏£®ƒß£©$/;"	e	enum:__anon205
XING_LING_ZHI_CHUI_WU	tmpcode/commond.h	/^	XING_LING_ZHI_CHUI_WU = 201,\/\/–ƒ¡È÷Æ¥∏£®ŒÔ£©$/;"	e	enum:__anon205
XI_LAN_EFFECT_ID	tmpcode/commond.h	/^const WORD XI_LAN_EFFECT_ID = 498;\/\/Œ¸¿∂µƒÃÿ–ßID$/;"	v
XI_MO_EFFECT_ID	tmpcode/commond.h	/^const WORD XI_MO_EFFECT_ID = 500;\/\/Œ¸ƒßµƒÃÿ–ßID$/;"	v
XML_CONFIG_NAMESPACE_BEGIN	base/zXML.h	6;"	d
XML_CONFIG_NAMESPACE_END	base/zXML.h	7;"	d
XML_NAMESPACE_BEGIN	base/xml/common.h	15;"	d
XML_NAMESPACE_END	base/xml/common.h	16;"	d
XU_WU_BAO_SHI	tmpcode/commond.h	/^const WORD XU_WU_BAO_SHI = 40055;\/\/–ÈŒﬁ±¶ Ø-ªªΩÁ”Ú”√µƒ$/;"	v
XU_WU_BAO_SHI_7DAYS	tmpcode/commond.h	/^const DWORD XU_WU_BAO_SHI_7DAYS = 300106;\/\/–ÈŒﬁ±¶ Ø-ªªΩÁ”Ú”√µƒ(7ÃÏ ±–ß,◊˜”√Õ¨40045)$/;"	v
XU_WU_BAO_SHI_ALL	tmpcode/commond.h	/^const DWORD XU_WU_BAO_SHI_ALL = 300104;\/\/Ãÿ≈‰◊™ΩÁ±¶ Ø£¨ø…◊™»Œ“‚ΩÁ”Ú£®≥˝◊‘…ÌÕ‚µƒ∆‰À˚6ΩÁ£©$/;"	v
XU_WU_BAO_SHI_WEAK	tmpcode/commond.h	/^const WORD XU_WU_BAO_SHI_WEAK = 40061;\/\/»ıΩÁ–ÈŒﬁ±¶ Ø-ªªΩÁ”Ú”√µƒ$/;"	v
XU_WU_BAO_SHI_WEAK2	tmpcode/commond.h	/^const DWORD XU_WU_BAO_SHI_WEAK2 = 300111;\/\/	–ÈŒﬁ±¶ Ø$/;"	v
XX	Makefile	/^export CXX = \/usr\/bin\/g++$/;"	m
XXXXXXCC	base/Command.h	/^  BYTE XXXXXXCC;$/;"	m	struct:Cmd::t_UserData
YAO_SHU	tmpcode/commond.h	/^	YAO_SHU = 22201,	\/\/—˝ ı$/;"	e	enum:__anon205
YES_ARMY_GEN	base/Command.h	/^  YES_ARMY_GEN,\/\/ ÂêåÊÑèÊàê‰∏∫Â∞ÜÂÜõ$/;"	e	enum:Cmd::__anon118
YES_CONFIRM_SEARCHER	base/Command.h	/^  YES_CONFIRM_SEARCHER,\/\/ ÂêåÊÑèÊàê‰∏∫Á†îÁ©∂Âëò$/;"	e	enum:Cmd::__anon114
YES_COUNTRY_ALLY	base/Command.h	/^  YES_COUNTRY_ALLY,\/\/ ÂêåÊÑèËØ∑Ê±Ç$/;"	e	enum:Cmd::__anon142
YES_UNION_ALLY	tmpcode/commond.h	/^	YES_UNION_ALLY, \/\/ Õ¨“‚«Î«Û$/;"	e	enum:__anon283
YINGPI	base/Command.h	/^  YINGPI =6,\/\/Á°¨ÁöÆ$/;"	e	enum:Cmd::__anon102
YING_FEN_SHENG	tmpcode/commond.h	/^	YING_FEN_SHENG = 32201,\/\/”∞∑÷…Ì$/;"	e	enum:__anon205
YING_MO_SHU_FU	tmpcode/commond.h	/^	YING_MO_SHU_FU = 2207,\/\/”∞ƒß ¯∏ø	$/;"	e	enum:__anon205
YING_ZHUAN_SWITCH_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE YING_ZHUAN_SWITCH_MAGIC_USERCMD_PARA = 66;$/;"	v
YUANSHUAI	tmpcode/commond.h	/^	 YUANSHUAI,           \/\/‘™Àß  $/;"	e	enum:__anon215
YUEMO_INFO_USERCMD	tmpcode/commond.h	/^const BYTE YUEMO_INFO_USERCMD = 145;$/;"	v
YU_HUA	tmpcode/commond.h	/^	YU_HUA = 52002,\/\/”ªØ$/;"	e	enum:__anon205
YU_HUA_STATE_MAX	tmpcode/commond.h	/^const WORD YU_HUA_STATE_MAX = 22;\/\/”ªØººƒ‹◊¥Ã¨◊Ó¥Û÷µ$/;"	v
YU_HUA_STATE_MIN	tmpcode/commond.h	/^const WORD YU_HUA_STATE_MIN = 15;\/\/”ªØººƒ‹◊¥Ã¨◊Ó–°÷µ$/;"	v
YuYinChannel	tmpcode/commond.h	/^enum YuYinChannel$/;"	g
ZEBRA_DEBUG_MOBILE_OPT	Makefile	/^ZEBRA_DEBUG_MOBILE_OPT = -g -Wno-deprecated -D_USE_CMD_NAMESPACE -D_ALL_SUPER_GM -D_MOBILE $(ZEBRA_OPTIONS) $(BATTLE_OPTIONS) -DVS=$(VERSIONSTRING)$/;"	m
ZEBRA_DEBUG_OPT	Makefile	/^ZEBRA_DEBUG_OPT = -g -Wno-deprecated -D_USE_CMD_NAMESPACE -D_ALL_SUPER_GM $(ZEBRA_OPTIONS) $(BATTLE_OPTIONS) -DVS=$(VERSIONSTRING)$/;"	m
ZEBRA_DEBUG_PG	Makefile	/^ZEBRA_DEBUG_PG = -g -pg -Werror -D_USE_CMD_NAMESPACE -D_ALL_SUPER_GM $(ZEBRA_OPTIONS) $(BATTLE_OPTIONS) -DVS=$(VERSIONSTRING)$/;"	m
ZEBRA_DIST_OPT	Makefile	/^ZEBRA_DIST_OPT = -g -o2 -Werror -D_USE_CMD_NAMESPACE $(BATTLE_OPTIONS) -DVS=$(VERSIONSTRING)$/;"	m
ZEBRA_NEW	base/zZebraNew.h	6;"	d
ZHANWUSWITCH_MAGIC_USERCMD_PARA	tmpcode/commond.h	/^const  BYTE ZHANWUSWITCH_MAGIC_USERCMD_PARA = 51;$/;"	v
ZHAO_HUAN_YING_MO	tmpcode/commond.h	/^	ZHAO_HUAN_YING_MO = 2204,\/\/’ŸªΩ”∞ƒß$/;"	e	enum:__anon205
ZHENXUAN_JINGJI_USERCMD	tmpcode/commond.h	/^const BYTE ZHENXUAN_JINGJI_USERCMD = 148;$/;"	v
ZHIZHENG	tmpcode/commond.h	/^	 ZHIZHENG,            \/\/÷¥’˛πŸ$/;"	e	enum:__anon215
ZHI_LIAO_SHU	tmpcode/commond.h	/^	ZHI_LIAO_SHU = 202,\/\/÷Œ¡∆$/;"	e	enum:__anon205
ZHOUMO_ZHEN_XUAN_MAP_ID	tmpcode/commond.h	/^const long ZHOUMO_ZHEN_XUAN_MAP_ID = 5086;\/\/ÃÙ’Ω»¸÷‹ƒ©»¸µÿÕºid$/;"	v
ZI_RAN_YI_LIAO	tmpcode/commond.h	/^	ZI_RAN_YI_LIAO = 3305,\/\/◊‘»ª“Ω¡∆$/;"	e	enum:__anon205
ZONE_ABSOLUTE_SAFE	ScenesServer/SceneDefine.h	/^    ZONE_ABSOLUTE_SAFE    =  2,   \/\/ ÁªùÂØπÂÆâÂÖ®Âå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_CARD_OBJECT	base/Command.h	/^  ZONE_CARD_OBJECT=1,\/\/\/ÈÅìÂÖ∑Âç° $/;"	e	enum:Cmd::__anon133
ZONE_CARD_OBJECT	tmpcode/commond.h	/^    ZONE_CARD_OBJECT=1, \/\/\/µ¿æﬂø®$/;"	e	enum:__anon317
ZONE_CARD_PROFRESSION	base/Command.h	/^  ZONE_CARD_PROFRESSION=2,\/\/\/‰∏ìÂå∫Âç°$/;"	e	enum:Cmd::__anon133
ZONE_CARD_PROFRESSION	tmpcode/commond.h	/^    ZONE_CARD_PROFRESSION=2,\/\/\/◊®«¯ø®$/;"	e	enum:__anon317
ZONE_CARD_PROFRESSION_HUANLEBAO	tmpcode/commond.h	/^    ZONE_CARD_PROFRESSION_HUANLEBAO=4, \/\/\/◊®«¯ø®∂“ªªª∂¿÷∞¸$/;"	e	enum:__anon317
ZONE_CARD_PROFRESSION_XIAOKANGBAO	tmpcode/commond.h	/^    ZONE_CARD_PROFRESSION_XIAOKANGBAO=3, \/\/\/◊®«¯ø®∂“ªª–°øµ∞¸$/;"	e	enum:__anon317
ZONE_CLOSE	base/RolechangeCommand.h	/^	ZONE_CLOSE,	    \/\/∏√«¯πÿ±’,ªÚ’ﬂŒ¥ø™∑≈◊™«¯π¶ƒ‹$/;"	e	enum:Cmd::Rolechange::__anon20
ZONE_COUNTRY_WAR	ScenesServer/SceneDefine.h	/^    ZONE_COUNTRY_WAR    =   2048,    \/\/ ËæπÂ¢ÉÁöÑÂõΩÊàòË∑≥ËΩ¨Âå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_DARE_SAFE	ScenesServer/SceneDefine.h	/^    ZONE_DARE_SAFE      =   8192,    \/\/ ÂõΩÊàòÊó∂‰∏∫ÁªùÂØπÂÆâÂÖ®Âå∫,Âπ≥Êó∂‰∏∫ÈùûÂÆâÂÖ®Âå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_EMPEROR_ATT_RELIVE	ScenesServer/SceneDefine.h	/^    ZONE_EMPEROR_ATT_RELIVE    =  65536,    \/\/ ÁöáÂüéÊàòÊîªÊñπÂ§çÊ¥ªÂå∫  $/;"	e	enum:ZoneTypeDef::__anon171
ZONE_EMPEROR_DEF_RELIVE	ScenesServer/SceneDefine.h	/^    ZONE_EMPEROR_DEF_RELIVE    =   32768,    \/\/ ÁöáÂüéÊàòÂÆàÊñπÂ§çÊ¥ªÂå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_FOREIGN_RELIVE	ScenesServer/SceneDefine.h	/^    ZONE_FOREIGN_RELIVE    =  32,   \/\/ ÂõΩÂ§ñÊ≠ª‰∫°ÈáçÁîüÂå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_LOGIN	base/RolechangeCommand.h	/^	ZONE_LOGIN,	    \/\/∏√’À∫≈“—µ«¬º∏√«¯,≤ª‘ –ÌΩ¯––¥´ÀÕ$/;"	e	enum:Cmd::Rolechange::__anon20
ZONE_NEWBIE	ScenesServer/SceneDefine.h	/^    ZONE_NEWBIE        =  8,   \/\/ Êñ∞ÊâãÂá∫ÁîüÂå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_NONE	ScenesServer/SceneDefine.h	/^    ZONE_NONE        =  0, \/\/‰∏ÄËà¨Âå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_PK_SAFE	ScenesServer/SceneDefine.h	/^    ZONE_PK_SAFE      =  1,   \/\/ pkÂÆâÂÖ®Âå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_PRIVATE_DARE	ScenesServer/SceneDefine.h	/^    ZONE_PRIVATE_DARE     =   256,      \/\/ ÂõΩÊàòË∑≥ËΩ¨Âå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_PRIVATE_DARE_UNION	ScenesServer/SceneDefine.h	/^    ZONE_PRIVATE_DARE_UNION    =  4096,    \/\/ Â∏Æ‰ºöÊàòÊåëÊàòÊñπË∑≥ËΩ¨Âå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_PRIVATE_RELIVE	ScenesServer/SceneDefine.h	/^    ZONE_PRIVATE_RELIVE    =  512,    \/\/ ÂõΩÊàòÂ§çÊ¥ªÂå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_PRIVATE_STORE	ScenesServer/SceneDefine.h	/^    ZONE_PRIVATE_STORE     =   128,      \/\/ ÊëÜÊëäÂå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_PRIVATE_THIRD_UNION	ScenesServer/SceneDefine.h	/^    ZONE_PRIVATE_THIRD_UNION        =       16384,    \/\/ Â∏Æ‰ºöÊâÄÂ±ûÂú∞Á¨¨‰∏âÊñπË∑≥ËΩ¨Âå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_PRIVATE_UNION	ScenesServer/SceneDefine.h	/^    ZONE_PRIVATE_UNION    =   1024,     \/\/ Â∏Æ‰ºöÊâÄÂ±ûÂú∞Ë∑≥ËΩ¨Âå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_RELIVE	ScenesServer/SceneDefine.h	/^    ZONE_RELIVE        =  4,   \/\/ Ê≠ª‰∫°ÈáçÁîüÂå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZONE_SORT_INVALID	base/RolechangeCommand.h	/^	ZONE_SORT_INVALID,  \/\/≈≈√˚π˝∏ﬂ≤ª‘ –Ì¬√”Œ$/;"	e	enum:Cmd::Rolechange::__anon20
ZONE_SPORTS	ScenesServer/SceneDefine.h	/^    ZONE_SPORTS        =  16,   \/\/ Á´ûÊäÄÂå∫$/;"	e	enum:ZoneTypeDef::__anon171
ZT_SERVICE_START	base/SceneCommand.h	/^      ZT_SERVICE_START,\/\/∆Ù∂Ø∑˛ŒÒ$/;"	e	enum:Cmd::Scene::__anon53
ZT_SERVICE_STOP	base/SceneCommand.h	/^      ZT_SERVICE_STOP,\/\/Õ£÷π∑˛ŒÒ$/;"	e	enum:Cmd::Scene::__anon53
ZUZHANG	tmpcode/commond.h	/^	 ZUZHANG,             \/\/◊Â≥§$/;"	e	enum:__anon215
ZYZ_USERCMD	tmpcode/commond.h	/^const BYTE ZYZ_USERCMD = 149;$/;"	v
Zebra	base/Zebra.h	/^namespace Zebra$/;"	n
Zebra	base/zBase64.h	/^namespace Zebra$/;"	n
Zebra	base/zMisc.h	/^namespace Zebra$/;"	n
Zebra	base/zString.h	/^namespace Zebra$/;"	n
ZlibObject	base/ZlibObject.h	/^    ZlibObject()$/;"	f	struct:ZlibObject
ZlibObject	base/ZlibObject.h	/^struct ZlibObject$/;"	s
ZlibObject_h_	base/ZlibObject.h	8;"	d
ZoneData	base/zType.h	/^    ZoneData()$/;"	f	struct:ZoneData
ZoneData	base/zType.h	/^struct ZoneData$/;"	s
ZoneID	tmpcode/commond.h	/^	WORD ZoneID;$/;"	m	struct:stRtnSoundTokenCmd
ZoneInfo_map	roleChangeServer/ChangeTask.h	/^	typedef std::map<const DWORD, NetInfo_multimap> ZoneInfo_map;$/;"	t	class:RoleContainer
ZoneTypeDef	ScenesServer/SceneDefine.h	/^  ZoneTypeDef() : pos(),region()$/;"	f	struct:ZoneTypeDef
ZoneTypeDef	ScenesServer/SceneDefine.h	/^  ZoneTypeDef(const ZoneTypeDef &zone)$/;"	f	struct:ZoneTypeDef
ZoneTypeDef	ScenesServer/SceneDefine.h	/^struct ZoneTypeDef$/;"	s
ZoneTypeDefVector	ScenesServer/SceneDefine.h	/^typedef std::vector<ZoneTypeDef> ZoneTypeDefVector;$/;"	t
ZoneUser_map	FLServer/UserTask.h	/^	typedef std::map<const DWORD, NetUser_multimap> ZoneUser_map;$/;"	t	class:UserContainer
_3_sec	ScenesServer/Recycle.h	/^	Timer _3_sec;$/;"	m	class:SceneRecycle
_3_sec	ScenesServer/SceneNpc.h	/^  Timer _3_sec;$/;"	m	class:SceneNpc
_3_sec	ScenesServer/SceneUser.h	/^	Timer _3_sec;$/;"	m	struct:SceneUser
_5_sec_count	ScenesServer/SceneUser.h	/^    DWORD _5_sec_count;$/;"	m	struct:SceneUser
_BattleUserCmd_h_	base/BattleUserCmd.h	8;"	d
_BillCommand_h_	base/BillCommand.h	5;"	d
_BroadCastCommand_	base/BroadCastCommand.h	5;"	d
_BroadCommand_h_	base/BroadCommand.h	6;"	d
_CARD_H_	base/Card.h	8;"	d
_CMD_NAMESPACE_BEGIN	tmpcode/commond.h	80;"	d
_CMD_NAMESPACE_BEGIN	tmpcode/commond.h	83;"	d
_CMD_NAMESPACE_END	tmpcode/commond.h	81;"	d
_CMD_NAMESPACE_END	tmpcode/commond.h	84;"	d
_CMD_TYPE_H_	base/CmdType.h	2;"	d
_COMMAND_H	base/Command.h	2;"	d
_COMMAND_H	tmpcode/commond.h	10;"	d
_CRelationManager_h_	SessionServer/CRelationManager.h	2;"	d
_CSortM_h_	SessionServer/CSort.h	2;"	d
_CardManager_h_	ScenesServer/CardManager.h	2;"	d
_CardTujianManager_h	ScenesServer/CardTujianManager.h	8;"	d
_ChallengeGameManager_h_	ScenesServer/ChallengeGameManager.h	8;"	d
_ChallengeGame_h_	ScenesServer/ChallengeGame.h	8;"	d
_ChangeTask_h_	roleChangeServer/ChangeTask.h	5;"	d
_CharBase_h_	base/CharBase.h	6;"	d
_Chat_h_	ScenesServer/Chat.h	2;"	d
_ClientClient_h_	Robot/Client.h	8;"	d
_ClientManager_h_	Robot/ClientManager.h	8;"	d
_ClientService_h_	Robot/ClientService.h	6;"	d
_CounterManager_h_	ScenesServer/CounterManager.h	8;"	d
_DANCE_USERCMD_DEFINITION_	tmpcode/commond.h	12847;"	d
_DBAccessCommand_h_	FLServer/DBAccessCommand.h	2;"	d
_DBMetaData_h_	base/zMetaData.h	2;"	d
_DEBUG_NEW_	base/zZebraNew.h	2;"	d
_DEBUG_NEW_H	base/zDebugNew.h	11;"	d
_DIR_DOWN	base/Command.h	/^  _DIR_DOWN    = 4,\/\/\/ Âêë‰∏ã$/;"	e	enum:Cmd::__anon84
_DIR_DOWNLEFT	base/Command.h	/^  _DIR_DOWNLEFT  = 5,\/\/\/ Â∑¶‰∏ã$/;"	e	enum:Cmd::__anon84
_DIR_DOWNRIGHT	base/Command.h	/^  _DIR_DOWNRIGHT  = 3,\/\/\/ Âè≥‰∏ã$/;"	e	enum:Cmd::__anon84
_DIR_LEFT	base/Command.h	/^  _DIR_LEFT    = 6,\/\/\/ ÂêëÂ∑¶$/;"	e	enum:Cmd::__anon84
_DIR_LEFTDOWN	base/Command.h	/^  _DIR_LEFTDOWN  = 5,\/\/\/ Â∑¶‰∏ã$/;"	e	enum:Cmd::__anon84
_DIR_LEFTUP	base/Command.h	/^  _DIR_LEFTUP    = 7,\/\/\/ Â∑¶‰∏ä$/;"	e	enum:Cmd::__anon84
_DIR_RIGHT	base/Command.h	/^  _DIR_RIGHT    = 2,\/\/\/ ÂêëÂè≥$/;"	e	enum:Cmd::__anon84
_DIR_RIGHTDOWN	base/Command.h	/^  _DIR_RIGHTDOWN  = 3,\/\/\/ Âè≥‰∏ã$/;"	e	enum:Cmd::__anon84
_DIR_RIGHTUP	base/Command.h	/^  _DIR_RIGHTUP  = 1,\/\/\/ Âè≥‰∏ä$/;"	e	enum:Cmd::__anon84
_DIR_UP	base/Command.h	/^  _DIR_UP      = 0,\/\/\/ Âêë‰∏ä$/;"	e	enum:Cmd::__anon84
_DIR_UPLEFT	base/Command.h	/^  _DIR_UPLEFT    = 7,\/\/\/ Â∑¶‰∏ä$/;"	e	enum:Cmd::__anon84
_DIR_UPRIGHT	base/Command.h	/^  _DIR_UPRIGHT  = 1,\/\/\/ Âè≥‰∏ä$/;"	e	enum:Cmd::__anon84
_DIR_WRONG	base/Command.h	/^  _DIR_WRONG    = 8    \/\/\/ ÈîôËØØÊñπÂêë$/;"	e	enum:Cmd::__anon84
_ENCDEC_H_	base/EncDec/EncDec.h	2;"	d
_EventTable_h_	ScenesServer/QuestTable.h	2;"	d
_FLCommand_h_	base/FLCommand.h	5;"	d
_FLServer_h_	FLServer/FLServer.h	6;"	d
_FLServer_h_	roleChangeServer/roleChangeServer.h	6;"	d
_FLServer_h_	roleRegServer/roleRegServer.h	6;"	d
_FLTimeTick_h_	FLServer/TimeTick.h	2;"	d
_GM_TOOL_COMMAND_H_	base/GmToolCommand.h	2;"	d
_GROUPCARDMANAGER_H_	ScenesServer/GroupCardManager.h	2;"	d
_GYLISTMANAGER_H_	FLServer/GYListManager.h	2;"	d
_HeroCardCmd_h_	base/HeroCardCmd.h	8;"	d
_HeroInfoManager_h_	ScenesServer/HeroInfoManager.h	8;"	d
_KingListItem	base/Command.h	/^struct _KingListItem$/;"	s	namespace:Cmd
_LOADMAP_H_	Robot/LoadMap.h	2;"	d
_LOADMAP_H_	ScenesServer/LoadMap.h	2;"	d
_LoginClient_h_	Robot/LoginClient.h	2;"	d
_LoginManager_h_	FLServer/LoginManager.h	2;"	d
_LoginTask_h_	FLServer/LoginTask.h	2;"	d
_MINICLIENT_H_	ScenesServer/MiniClient.h	2;"	d
_MINICOMMAND_H_	base/MiniCommand.h	6;"	d
_MODULE	ScenesServer/script.cpp	320;"	d
_MY_DES_H	base/EncDec/EncDec.h	95;"	d
_MY_DES_H	base/EncDec/mydes.h	2;"	d
_MY_RC5_H	base/EncDec/EncDec.h	5;"	d
_MY_RC5_H	base/EncDec/myrc5.h	2;"	d
_MessageQueue_h	base/MessageQueue.h	2;"	d
_NETTYPE_H_	base/NetType.h	2;"	d
_NEWBIELIMIT_H	SessionServer/NewbieLimit.h	8;"	d
_NpcTrade_h_	ScenesServer/NpcTrade.h	2;"	d
_OBJECT_H	base/Object.h	2;"	d
_ObjectManager_h_	ScenesServer/ObjectManager.h	2;"	d
_QUESTACTION_H_	ScenesServer/QuestAction.h	2;"	d
_QUESTCONDITION_H_	ScenesServer/QuestCondition.h	2;"	d
_QUESTEVENT_H_	ScenesServer/QuestEvent.h	2;"	d
_QUEST_H_	ScenesServer/Quest.h	2;"	d
_QuestMaker_h_	ScenesServer/QuestMaker.h	2;"	d
_RecordClient_h_	ScenesServer/RecordClient.h	2;"	d
_RecordClient_h_	SessionServer/RecordClient.h	2;"	d
_RecordCommand_h_	base/RecordCommand.h	6;"	d
_RecordService_h_	RecordServer/RecordServer.h	6;"	d
_RecordSessionManager_h_	RecordServer/RecordSessionManager.h	2;"	d
_RecordTask_h_	RecordServer/RecordTask.h	2;"	d
_Recycle_h_	ScenesServer/Recycle.h	8;"	d
_RoleChangeCommand_h_	base/RolechangeCommand.h	5;"	d
_RoleRegCommand_h_	base/RoleregCommand.h	5;"	d
_RoleRegCommand_h_	roleRegServer/RoleregCommand.h	5;"	d
_RoleTask_h_	roleRegServer/RoleTask.h	5;"	d
_SCENEMSGCMDHANDLE_H_	ScenesServer/SceneMsgCmdHandle.h	2;"	d
_SCENESSERVER_GIFTBAGMANAGER_H_	ScenesServer/GiftBagManager.h	2;"	d
_SCENESSERVER_MARKETSYSTEMMANAGER_H_	ScenesServer/MarketSystemManager.h	2;"	d
_SCRIPTTICKTASK_H	ScenesServer/scriptTickTask.h	2;"	d
_SEPT_H_	base/Sept.h	6;"	d
_SERVERACL_H_	base/ServerACL.h	2;"	d
_SESSIONCHAT_H_	SessionServer/SessionChat.h	2;"	d
_SESSIONMANAGER_H_	SessionServer/SessionManager.h	2;"	d
_SESSION_H_	SessionServer/Session.h	2;"	d
_SESSION_TASK_H_	SessionServer/SessionTask.h	2;"	d
_SKILLSTATUS_MANAGER_H_	ScenesServer/SkillStatusManager.h	2;"	d
_STORECHEST_SIZE	tmpcode/commond.h	4173;"	d
_SceneCommand_h_	base/SceneCommand.h	2;"	d
_SceneDefine_h_	ScenesServer/SceneDefine.h	2;"	d
_SceneEntryPk_h_	ScenesServer/SceneEntryPk.h	2;"	d
_SceneManager_h_	ScenesServer/SceneManager.h	2;"	d
_SceneNpcAI_h_	ScenesServer/SceneNpcAI.h	2;"	d
_SceneNpcManager_h_	ScenesServer/SceneNpcManager.h	2;"	d
_SceneNpc_h_	ScenesServer/SceneNpc.h	2;"	d
_SceneTaskManager_h_	ScenesServer/SceneTaskManager.h	2;"	d
_SceneTask_h_	ScenesServer/SceneTask.h	2;"	d
_SceneTimeTick_h_	ScenesServer/TimeTick.h	2;"	d
_SceneUserManager_h_	ScenesServer/SceneUserManager.h	2;"	d
_SceneUser_h_	ScenesServer/SceneUser.h	2;"	d
_Scene_h_	ScenesServer/Scene.h	2;"	d
_ScenesService_h_	ScenesServer/ScenesServer.h	2;"	d
_ServerManager_h_	FLServer/ServerManager.h	8;"	d
_ServerTask_h_	FLServer/ServerTask.h	5;"	d
_SessionClient_h_	ScenesServer/SessionClient.h	2;"	d
_SessionCommand_h	base/SessionCommand.h	6;"	d
_SessionServer_h_	SessionServer/SessionServer.h	2;"	d
_SessionTaskManager_h_	SessionServer/SessionTaskManager.h	2;"	d
_SessionTimeTick_h_	SessionServer/TimeTick.h	2;"	d
_SingletonBase_	BillServer/BillCallback.h	5;"	d
_Singleton_h_	base/zSingleton.h	2;"	d
_StatusElementList	base/zDatabase.h	/^    std::vector<SkillElement> _StatusElementList;$/;"	m	struct:SkillStatus
_SuperCommand_h_	base/SuperCommand.h	6;"	d
_SuperService_h_	SuperServer/SuperServer.h	8;"	d
_TEMP	base/MsgDelegate.h	/^    struct _TEMP$/;"	s	namespace:MSG_CENTER
_TEMPARCHIVE_H_	SessionServer/TempArchive.h	2;"	d
_TRADE_USERCMD_DEFINITION_	tmpcode/commond.h	12094;"	d
_UnionAllyInfo	tmpcode/commond.h	/^	_UnionAllyInfo()$/;"	f	struct:_UnionAllyInfo
_UnionAllyInfo	tmpcode/commond.h	/^struct _UnionAllyInfo$/;"	s
_UserHttpPub_h_	FLServer/UserHttpPub.h	8;"	d
_UserTask_h_	FLServer/UserTask.h	5;"	d
_WayPoint_h_	ScenesServer/WayPoint.h	2;"	d
_XML_BASE_XMLPARSER_BATTLE_H	base/xmlparser/battle.h	2;"	d
_XML_BASE_XMLPARSER_GIFTBAG_H	base/xmlparser/giftbag.h	2;"	d
_XML_BASE_XMLPARSER_HEROBASE_H	base/xmlparser/herobase.h	2;"	d
_XML_BASE_XMLPARSER_MARKET_H	base/xmlparser/market.h	2;"	d
_XML_BASE_XMLPARSER_TEST_H	base/xmlparser/test.h	2;"	d
_XML_COMMON_H_	base/xml/common.h	2;"	d
_XML_PARSER_GENERATOR_H_	base/xml/xml_parser_generator.h	2;"	d
_XML_PROP_2_VALUE_H_	base/xml/xml_prop2value.h	2;"	d
_XML_XML_CONFIG_H_	base/xml/xml_config.h	2;"	d
_XML_XML_CONTENT_H_	base/xml/xml_node_content.h	2;"	d
_XML_XML_DEFINE_H_	base/xml/xml_define.h	2;"	d
_XML_XML_H_	base/xml/xml.h	2;"	d
_XML_XML_NODE_CONTAINER_H_	base/xml/xml_node_container.h	2;"	d
_XML_XML_NODE_HELP_DEFINE_	base/xml/xml_node_help_define.h	2;"	d
_XML_XML_NODE_HELP_UNDEF_H_	base/xml/xml_node_help_undef.h	2;"	d
_XML_XML_NODE_H_	base/xml/xml_node.h	2;"	d
_XML_XML_NODE_MAP_H_	base/xml/xml_node_map.h	2;"	d
_XML_XML_NODE_SEQ_H_	base/xml/xml_node_seq.h	2;"	d
_XML_XML_NODE_SET_H_	base/xml/xml_node_set.h	2;"	d
_XML_XML_PROP_H_	base/xml/xml_node_prop.h	2;"	d
_XML_XML_UNDEF_H_	base/xml/xml_undef.h	2;"	d
_XML_XML_UTILITY_H_	base/xml/xml_utility.h	2;"	d
_ZARG_H_	base/zArg.h	8;"	d
_ZCONFILE_H_	base/zConfile.h	2;"	d
_ZENTRYMANAGER_H_	base/zEntryManager.h	2;"	d
_ZENTRY_H_	base/zEntry.h	2;"	d
_ZLOGGER_H_	base/zLogger.h	2;"	d
_ZMISC_H_	base/zMisc.h	2;"	d
_ZREGEX_H_	base/zRegex.h	2;"	d
_ZSCENEENTRY_H_	base/zSceneEntry.h	2;"	d
_ZTIME_H_	base/zTime.h	8;"	d
_ZXMLPARSER_H_	base/zXMLParser.h	6;"	d
_Z_XML_H_	base/zXML.h	2;"	d
__BILLCACHE_H_	BillServer/BillCache.h	2;"	d
__BILLCALLBACK_H_	BillServer/BillCallback.h	2;"	d
__BILLCLIENTMANAGER_H_	BillServer/BillClientManager.h	2;"	d
__BILLCLIENT_H_	BillServer/BillClient.h	2;"	d
__BILLCLIENT_H_	GatewayServer/BillClient.h	2;"	d
__BILLMANAGER_H_	BillServer/BillManager.h	2;"	d
__BILLSERVER_H_	BillServer/BillServer.h	2;"	d
__BILLSESSIONMANAGER_H_	BillServer/BillSessionManager.h	2;"	d
__BILLTASKMANAGER_H_	BillServer/BillTaskManager.h	2;"	d
__BILLTASK_H_	BillServer/BillTask.h	2;"	d
__BILLUSERMANAGER_H_	BillServer/BillUserManager.h	2;"	d
__BILLUSER_H_	BillServer/BillUser.h	2;"	d
__BROADCLIENTMANAGER_H_	SuperServer/BroadClientManager.h	2;"	d
__BROADCLIENT_H_	SuperServer/BroadClient.h	2;"	d
__CMDCHECKER_H_	GatewayServer/CmdChecker.h	2;"	d
__COUNTRYINFO_H_	GatewayServer/CountryInfo.h	2;"	d
__COUNTRYINFO_H_	SessionServer/CountryInfo.h	2;"	d
__FLCLIENTMANAGER_H_	SuperServer/FLClientManager.h	2;"	d
__FLCLIENT_H_	SuperServer/FLClient.h	2;"	d
__GATEUSERMANAGER_H_	GatewayServer/GateUserManager.h	2;"	d
__GATEUSER_H_	GatewayServer/GateUser.h	2;"	d
__GATEWAYSERVER_H_	GatewayServer/GatewayServer.h	5;"	d
__GATEWAYTASKMANAGER_H_	GatewayServer/GatewayTaskManager.h	2;"	d
__GATEWAYTASK_H_	GatewayServer/GatewayTask.h	2;"	d
__INFOCLIENTMANAGER_H_	SuperServer/InfoClientManager.h	2;"	d
__INFOCLIENT_H_	SuperServer/InfoClient.h	2;"	d
__LOGINSESSIONMANAGER_H_	GatewayServer/LoginSessionManager.h	2;"	d
__MINICLIENT_H_	GatewayServer/MiniClient.h	2;"	d
__RECORDCLIENT_H_	GatewayServer/RecordClient.h	2;"	d
__ROLEREGCACHE_H_	SuperServer/RoleregCache.h	2;"	d
__RolechangeClientManager_H_	SuperServer/RolechangeClientManager.h	2;"	d
__RolechangeClient_H_	SuperServer/RolechangeClient.h	2;"	d
__RoleregClientManager_H_	SuperServer/RoleregClientManager.h	2;"	d
__RoleregClient_H_	SuperServer/RoleregClient.h	2;"	d
__SCENECLIENTMANAGER_H_	GatewayServer/SceneClientManager.h	2;"	d
__SCENECLIENT_H_	GatewayServer/SceneClient.h	2;"	d
__SCREENINDEX_H_	GatewayServer/ScreenIndex.h	2;"	d
__SERVERMANAGER_H_	SuperServer/ServerManager.h	2;"	d
__SERVERTASK_H_	SuperServer/ServerTask.h	2;"	d
__SESSIONCLIENT_H_	GatewayServer/SessionClient.h	2;"	d
__STOCKCONSIGN_H_	BillServer/StockConsign.h	2;"	d
__TIMETICK_H_	BillServer/TimeTick.h	2;"	d
__TIMETICK_H_	GatewayServer/TimeTick.h	2;"	d
__TIMETICK_H_	Robot/TimeTick.h	2;"	d
__TIMETICK_H_	SuperServer/TimeTick.h	2;"	d
__UserCommand_h_	base/UserCommand.h	5;"	d
__Zebra_h_	base/Zebra.h	2;"	d
__mt_alloc	base/zMisc.h	/^	__gnu_cxx::__mt_alloc<BYTE> __mt_alloc;$/;"	m	class:MsgQueue
_action	ScenesServer/QuestAction.h	/^  value_type _action;$/;"	m	class:GlobalAction
_action	ScenesServer/QuestAction.h	/^  value_type _action;$/;"	m	class:VarAction
_actions	ScenesServer/QuestEvent.h	/^    std::vector<Action *> _actions;$/;"	m	class:Event::Embranchment
_active	ScenesServer/QuestEvent.h	/^    bool _active;$/;"	m	class:Event::Embranchment
_activeElement	ScenesServer/SkillStatusManager.h	/^  std::map<DWORD,SkillStatusElement> _activeElement;	    \/\/”¿æ√µƒººƒ‹◊¥Ã¨(≥˝∑«±ª≥¡ƒ¨)$/;"	m	class:SkillStatusManager
_allyItem	base/SessionCommand.h	/^    struct _allyItem$/;"	s	namespace:Cmd::Session
_bEnabled	SessionServer/NewbieLimit.cpp	/^bool NewbieLimit::_bEnabled = true;$/;"	m	class:NewbieLimit
_bEnabled	SessionServer/NewbieLimit.h	/^	static bool _bEnabled;	\/\/default is open$/;"	m	class:NewbieLimit
_begin	ScenesServer/zObject.h	/^  int _begin;$/;"	m	struct:DropFromPack
_buf__map_user	ScenesServer/SceneUser.cpp	/^	static BYTE _buf__map_user[SCENE_PACKET_USERDATASIZE];$/;"	m	struct:GetEnvryOneAndSend
_buf__map_user	ScenesServer/SceneUser.cpp	/^BYTE GetEnvryOneAndSend::_buf__map_user[SCENE_PACKET_USERDATASIZE];$/;"	m	class:GetEnvryOneAndSend
_buf_map_npc	ScenesServer/SceneUser.cpp	/^	static BYTE _buf_map_npc[SCENE_PACKET_USERDATASIZE];$/;"	m	struct:GetEnvryOneAndSend
_buf_map_npc	ScenesServer/SceneUser.cpp	/^BYTE GetEnvryOneAndSend::_buf_map_npc[SCENE_PACKET_USERDATASIZE];$/;"	m	class:GetEnvryOneAndSend
_buffer	base/zSocket.h	/^	_type _buffer;$/;"	m	class:ByteBuffer
_buffered	base/zTCPClient.h	/^	volatile bool _buffered;$/;"	m	class:zTCPBufferClient
_byType	tmpcode/commond.h	/^        BYTE _byType;   \/\/∞¥’’◊÷∂Œ_byType¿¥«¯∑÷œ˚œ¢µƒ≤ªÕ¨∫¨“Â£¨ø…“‘»°÷µ∞¸¿® 38£®“—∑¢≤º, ltime±Ì æŒØÕ–¿‡–Õ, 1 - Ω Ù±“ŒØÕ–; 2 - ÀÆæß±“ŒØÕ–£©£¨42£®ø…∑¢≤º£©°¢47£®∞—»ŒŒÒ∏ƒ≥…¥˙◊ˆ»ŒŒÒ, ltime±Ì æΩ±¿¯¿‡–Õ(1 - Ω Ù±“; 2 - ÀÆæß±“(∞Û) )reward±Ì æ¥˙◊ˆΩ±¿¯£©,48(ÕÍ≥…¥˙◊ˆ»ŒŒÒ), 0(∏¸–¬ø…∑¢≤º¥Œ ˝ltime), 50(ŒØÕ–≥ˆµƒ»ŒŒÒ±ªÀ˚»ÀÕÍ≥…)£¨ 55(∑¢≤ºŒØÕ–»ŒŒÒ ß∞‹)$/;"	m	struct:stConfirmIssuedQuestUserCmd
_cardsNumber1	ScenesServer/ChallengeGame.h	/^	DWORD _cardsNumber1;$/;"	m	class:ChallengeGame
_cardsNumber2	ScenesServer/ChallengeGame.h	/^	DWORD _cardsNumber2;$/;"	m	class:ChallengeGame
_check	GatewayServer/CmdChecker.h	/^	CheckInfo _check;$/;"	m	class:CmdChecker
_checkSignal	base/zTCPTask.h	/^	const bool _checkSignal;            \/**<  «∑Ò∑¢ÀÕ¡¥¬∑ºÏ≤‚–≈∫≈ *\/$/;"	m	class:zTCPTask
_checkers	GatewayServer/CmdChecker.h	/^	CHECK _checkers; $/;"	m	class:CheckerTable
_cmd	GatewayServer/ScreenIndex.cpp	/^  const void  *_cmd;$/;"	m	struct:SendNineExec
_cmd	GatewayServer/ScreenIndex.cpp	/^  const void  *_cmd;$/;"	m	struct:SendNineExecExceptMe
_cmdLen	GatewayServer/ScreenIndex.cpp	/^  DWORD _cmdLen;$/;"	m	struct:SendNineExec
_cmdLen	GatewayServer/ScreenIndex.cpp	/^  DWORD _cmdLen;$/;"	m	struct:SendNineExecExceptMe
_cmds	GatewayServer/CmdChecker.h	/^	set _cmds; $/;"	m	class:CmdChecker
_cmds	ScenesServer/scriptTickTask.cpp	/^scriptMessageFilter::cmds *scriptMessageFilter::_cmds = new scriptMessageFilter::cmds(scriptMessageFilter::maxcmds);/;"	m	class:scriptMessageFilter
_cmds	ScenesServer/scriptTickTask.h	/^	static cmds *_cmds;$/;"	m	class:scriptMessageFilter
_condition	ScenesServer/QuestCondition.h	/^  value_type _condition;    $/;"	m	class:ItemCondition
_condition	ScenesServer/QuestCondition.h	/^  value_type _condition;    $/;"	m	class:LevelCondition
_condition	ScenesServer/QuestCondition.h	/^  value_type _condition;   $/;"	m	class:HeroLevelCondition
_condition	ScenesServer/QuestCondition.h	/^  value_type _condition;$/;"	m	class:GlobalCondition
_condition	ScenesServer/QuestCondition.h	/^  value_type _condition;$/;"	m	class:VarCondition
_conditions	ScenesServer/QuestEvent.h	/^    std::vector<Condition *> _conditions;$/;"	m	class:Event::Embranchment
_configs	base/zXML.h	/^	static ConfigMap _configs;$/;"	m	class:Configs
_continue	tmpcode/commond.h	/^	BYTE _continue;         \/\/\/  «∑Òø…“‘◊‘∂Ø¥Ú(0£∫≤ªø…“‘£¨1£∫ø…“‘)$/;"	m	struct:stEquipIntnedsifyResult
_cosume_by_time	ScenesServer/zObject.h	/^  bool _cosume_by_time;$/;"	m	class:ObjectPack
_count	tmpcode/commond.h	/^		DWORD _count;$/;"	m	struct:stRetAllIssuedQuestUserCmd
_currPtr	base/zSocket.h	/^	DWORD _currPtr;$/;"	m	class:ByteBuffer
_current_cmd	base/zSocket.h	/^	DWORD _current_cmd;$/;"	m	class:zSocket
_day	ScenesServer/Quest.h	/^  int _day;$/;"	m	class:GlobalVarImpl
_deposit	tmpcode/commond.h	/^		DWORD _deposit;   \/\/»ŒŒÒ—∫Ω$/;"	m	struct:stRetConsignIssuedQuestUserCmd
_description	ScenesServer/Quest.h	/^  std::string _description;$/;"	m	class:Quest
_dsize	tmpcode/commond.h	/^        DWORD _dsize;      \/\/»ŒŒÒ√Ë ˆ≥§∂»$/;"	m	struct:stRetConsignIssuedQuestUserCmd
_dwUserCount	SessionServer/Session.h	/^    DWORD _dwUserCount;$/;"	m	class:SceneSession
_enc_queue	base/zSocket.h	/^	t_BufferCmdQueue _enc_queue;        \/**< º”√‹ª∫≥Â÷∏¡Ó∂”¡– *\/$/;"	m	class:zSocket
_entry	ScenesServer/Skill.h	/^    SceneEntryPk *_entry;$/;"	m	struct:zSkill
_events	ScenesServer/QuestEvent.h	/^  __gnu_cxx::hash_map<DWORD,Event> _events;  $/;"	m	class:EventManager
_exceptme_id	GatewayServer/ScreenIndex.cpp	/^  const DWORD _exceptme_id;$/;"	m	struct:SendNineExecExceptMe
_file	ScenesServer/Quest.h	/^  std::string _file;$/;"	m	class:GlobalVarImpl
_file	ScenesServer/Quest.h	/^  std::string _file;$/;"	m	class:UserVar
_filename	base/xml/xml_config.h	/^		std::string _filename;$/;"	m	class:xml_config
_five_min	ScenesServer/SceneUser.h	/^    Timer _five_min;$/;"	m	struct:SceneUser
_five_min	SessionServer/TimeTick.h	/^    Timer _five_min; \/\/ [ranqd Add] ‰∫îÂàÜÈíüÂÆöÊó∂Âô®$/;"	m	class:SessionTimeTick
_five_props	ScenesServer/zObject.h	/^    BYTE _five_props[5];$/;"	m	union:Equips::__anon174
_five_sec	ScenesServer/SceneUser.h	/^    Timer _five_sec;$/;"	m	struct:SceneUser
_five_sec	ScenesServer/TimeTick.h	/^    Timer _five_sec;$/;"	m	class:SceneTimeTick
_five_sec	SessionServer/TimeTick.h	/^    Timer _five_sec;	\/\/zhu yi bianliang de shunxu $/;"	m	class:SessionTimeTick
_flower	tmpcode/commond.h	/^    FlowerDef _flower[0];$/;"	m	struct:rt_AllFlowerHouseUserCmd
_game	ScenesServer/ChallengeGame.cpp	/^	ChallengeGame *_game;$/;"	m	class:CheckFreezeState
_game	ScenesServer/ChallengeGame.cpp	/^	ChallengeGame *_game;$/;"	m	class:RefreshCardState
_get	ScenesServer/zObject.h	/^  zObject* _get;$/;"	m	struct:Combination
_half_sec	ScenesServer/SceneNpc.h	/^  Timer _half_sec;$/;"	m	class:SceneNpc
_half_sec	ScenesServer/SceneUser.h	/^    Timer _half_sec;$/;"	m	struct:SceneUser
_height	ScenesServer/zCard.h	/^    WORD _height;$/;"	m	class:CardSlot
_height	ScenesServer/zObject.h	/^    WORD _height;$/;"	m	class:Package
_id	ScenesServer/Quest.h	/^  DWORD _id;$/;"	m	class:Quest
_id	ScenesServer/QuestAction.h	/^  int _id;$/;"	m	class:AddBindItemAction
_id	ScenesServer/QuestAction.h	/^  int _id;$/;"	m	class:AddItemAction
_id	ScenesServer/QuestAction.h	/^  int _id;$/;"	m	class:GlobalAction
_id	ScenesServer/QuestAction.h	/^  int _id;$/;"	m	class:RemoveItemAction
_id	ScenesServer/QuestAction.h	/^  int _id;$/;"	m	class:VarAction
_id	ScenesServer/QuestCondition.h	/^  int _id;$/;"	m	class:GlobalCondition
_id	ScenesServer/QuestCondition.h	/^  int _id;$/;"	m	class:ItemCondition
_id	ScenesServer/QuestCondition.h	/^  int _id;$/;"	m	class:VarCondition
_id	ScenesServer/QuestEvent.h	/^  DWORD _id;    $/;"	m	class:EventTrigger
_id	ScenesServer/QuestEvent.h	/^  DWORD _id;$/;"	m	class:Event
_id	ScenesServer/zCard.h	/^    DWORD _id;$/;"	m	class:CardSlot
_id	ScenesServer/zObject.h	/^    DWORD _id;$/;"	m	class:Package
_index	ScenesServer/Scene.h	/^    zPosIndex _index;  \/\/\/ ÈùûÈòªÊå°ÁÇπÁ¥¢Âºï$/;"	m	class:Scene
_info	ScenesServer/QuestAction.h	/^  std::string _info;  $/;"	m	class:BulletinAction
_info	ScenesServer/QuestAction.h	/^  std::string _info;  $/;"	m	class:LogAction
_info	ScenesServer/QuestAction.h	/^  std::string _info;  $/;"	m	class:Notify1Action
_info	ScenesServer/QuestAction.h	/^  std::string _info;  $/;"	m	class:NotifyAction
_instance	ScenesServer/Quest.cpp	/^UserVar* UserVar::_instance = NULL;$/;"	m	class:UserVar
_instance	ScenesServer/Quest.h	/^  static UserVar* _instance;$/;"	m	class:UserVar
_instance	ScenesServer/Quest.h	/^  static self_t* _instance;$/;"	m	class:GlobalVarImpl
_instance	ScenesServer/Quest.h	/^GlobalVarImpl<dummy>* GlobalVarImpl<dummy>::_instance = NULL;$/;"	m	class:GlobalVarImpl
_instance	ScenesServer/QuestEvent.h	/^  static EventManager<E>* _instance;$/;"	m	class:EventManager
_instance	ScenesServer/QuestEvent.h	/^EventManager<E>* EventManager<E>::_instance = NULL;$/;"	m	class:EventManager
_instance	ScenesServer/QuestMaker.h	/^  static self_t* _instance;$/;"	m	class:ProductFactory
_instance	ScenesServer/QuestMaker.h	/^ProductFactory<I,C>* ProductFactory<I,C>::_instance = NULL;$/;"	m	class:ProductFactory
_instance	ScenesServer/QuestTable.cpp	/^EventTable* EventTable::_instance = NULL;$/;"	m	class:EventTable
_instance	ScenesServer/QuestTable.cpp	/^QuestTable* QuestTable::_instance = NULL;$/;"	m	class:QuestTable
_instance	ScenesServer/QuestTable.h	/^  static EventTable* _instance;$/;"	m	class:EventTable
_instance	ScenesServer/QuestTable.h	/^  static QuestTable* _instance;  $/;"	m	class:QuestTable
_instance	ScenesServer/script.cpp	/^ScriptQuest* ScriptQuest::_instance = NULL;$/;"	m	class:ScriptQuest
_instance	ScenesServer/script.cpp	/^ScriptingSystemLua* ScriptingSystemLua::_instance = NULL;$/;"	m	class:ScriptingSystemLua
_instance	ScenesServer/script.h	/^  static ScriptQuest*   _instance;$/;"	m	class:ScriptQuest
_instance	SessionServer/TempArchive.cpp	/^GlobalTempArchiveIndex *GlobalTempArchiveIndex::_instance = NULL;$/;"	m	class:GlobalTempArchiveIndex
_instance	SessionServer/TempArchive.h	/^    static GlobalTempArchiveIndex *_instance;$/;"	m	class:GlobalTempArchiveIndex
_itime	tmpcode/commond.h	/^        DWORD _itime;     \/\/∑¢≤º ±º‰$/;"	m	struct:stRetConsignIssuedQuestUserCmd
_itime	tmpcode/commond.h	/^        DWORD _itime;   \/\/ £”‡ ±º‰$/;"	m	struct:stRetInfoIssuedQuestUserCmd
_kind	ScenesServer/QuestAction.h	/^  int _kind; $/;"	m	class:BulletinAction
_kvs	ScenesServer/QuestCondition.h	/^  KV _kvs;  $/;"	m	class:ScenesParser
_last	GatewayServer/CmdChecker.h	/^	zRTime _last;$/;"	m	class:CheckInfo
_leastReward	tmpcode/commond.h	/^        DWORD _leastReward;     \/\/◊ÓµÕ≥Í¿Õ$/;"	m	struct:stClickIssueQuestUserCmd
_level	ScenesServer/QuestCondition.h	/^  int _level;$/;"	m	class:ItemCondition
_level	tmpcode/commond.h	/^			int _level;      \/\/»ŒŒÒµ»º∂$/;"	m	struct:stRetAllIssuedQuestUserCmd::quest
_level	tmpcode/commond.h	/^        int _level;      \/\/»ŒŒÒµ»º∂$/;"	m	struct:stRetConsignIssuedQuestUserCmd
_level	tmpcode/commond.h	/^        int _level;   \/\/µ»º∂$/;"	m	struct:stRetInfoIssuedQuestUserCmd
_list	ScenesServer/QuestMaker.h	/^  LIST _list;$/;"	m	class:ProductFactory
_long	base/zTime.h	/^	int _long;$/;"	m	class:RandTimer
_long	base/zTime.h	/^	int _long;$/;"	m	class:Timer
_map_npc	ScenesServer/SceneUser.cpp	/^	Cmd::stMapDataMapScreenUserCmd *_map_npc;$/;"	m	struct:GetEnvryOneAndSend
_map_user	ScenesServer/SceneUser.cpp	/^	Cmd::stMapDataMapScreenUserCmd *_map_user; $/;"	m	struct:GetEnvryOneAndSend
_maxSize	base/zSocket.h	/^	DWORD _maxSize;$/;"	m	class:ByteBuffer
_menu	ScenesServer/Quest.h	/^  MENU _menu;$/;"	m	class:QuestList
_menu	ScenesServer/QuestAction.h	/^  std::string _menu;  $/;"	m	class:MainMenuAction
_menu	ScenesServer/QuestAction.h	/^  std::string _menu;  $/;"	m	class:MenuAction
_menu	ScenesServer/QuestAction.h	/^  std::string _menu;  $/;"	m	class:SubMenuAction
_msecs	base/zTime.h	/^	QWORD _msecs;$/;"	m	class:zRTime
_msize	tmpcode/commond.h	/^        WORD _msize;     \/\/ºÚµ•¡Ù—‘≥§∂»$/;"	m	struct:stRetConsignIssuedQuestUserCmd
_name	GatewayServer/ScreenIndex.cpp	/^  char _name[MAX_NAMESIZE];$/;"	m	struct:SendNineExec
_name	GatewayServer/ScreenIndex.cpp	/^  char _name[MAX_NAMESIZE];$/;"	m	struct:SendNineExecExceptMe
_name	ScenesServer/QuestAction.h	/^	std::string _name;$/;"	m	class:TraceLogAction
_name	ScenesServer/QuestAction.h	/^  std::string _name;$/;"	m	class:GlobalAction
_name	ScenesServer/QuestAction.h	/^  std::string _name;$/;"	m	class:VarAction
_name	ScenesServer/QuestCondition.h	/^  std::string _name;$/;"	m	class:GlobalCondition
_name	ScenesServer/QuestCondition.h	/^  std::string _name;$/;"	m	class:VarCondition
_needMaterial	tmpcode/commond.h	/^	NeedMaterial _needMaterial[0];\/\/À˘–Ë≤ƒ¡œµƒΩ·ππ$/;"	m	struct:st_LevelUpNeedThingHouseUserCmd
_now	base/zTime.h	/^	QWORD _now()$/;"	f	class:zRTime
_np_generators	base/xml/xml_parser_generator.h	/^	node_parser_generator_cont _np_generators;$/;"	m	class:xml_node_parser_generator
_npc_name	ScenesServer/QuestEvent.h	/^  char _npc_name[2*MAX_NAMESIZE];$/;"	m	class:Event
_npc_vec	ScenesServer/SceneUser.cpp	/^	static SceneNpc_vec _npc_vec;$/;"	m	struct:GetEnvryOneAndSend
_npc_vec	ScenesServer/SceneUser.cpp	/^SceneNpc_vec GetEnvryOneAndSend::_npc_vec;$/;"	m	class:GetEnvryOneAndSend
_num	ScenesServer/zObject.h	/^  int _num;$/;"	m	struct:Combination
_ob	ScenesServer/zObject.h	/^  zObject* _ob;$/;"	m	class:ObjectPack
_occupation	ScenesServer/QuestAction.h	/^  WORD _occupation;$/;"	m	class:AddHeroExpAction
_occupation	ScenesServer/QuestCondition.h	/^  WORD _occupation;$/;"	m	class:HeroLevelCondition
_odds	ScenesServer/QuestAction.h	/^  int _odds;$/;"	m	class:AddBindItemAction
_odds	ScenesServer/QuestAction.h	/^  int _odds;$/;"	m	class:AddItemAction
_offPtr	base/zSocket.h	/^	DWORD _offPtr;$/;"	m	class:ByteBuffer
_offset	ScenesServer/QuestEvent.h	/^  DWORD _offset;$/;"	m	class:EventTrigger2
_one_hour	SessionServer/TimeTick.h	/^    Timer _one_hour;$/;"	m	class:SessionTimeTick
_one_min	BillServer/StockConsign.h	/^    Timer _one_min;$/;"	m	class:ConsignHistoryManager
_one_min	BillServer/TimeTick.h	/^    static Timer _one_min;$/;"	m	class:BillTimeTick
_one_min	ScenesServer/SceneUser.h	/^    Timer _one_min;$/;"	m	struct:SceneUser
_one_min	ScenesServer/TimeTick.h	/^    Timer _one_min;$/;"	m	class:SceneTimeTick
_one_min	ScenesServer/zObject.h	/^  Timer _one_min;$/;"	m	class:ObjectPack
_one_min	SessionServer/TimeTick.h	/^    Timer _one_min;$/;"	m	class:SessionTimeTick
_one_sec	BillServer/TimeTick.h	/^    static Timer _one_sec;$/;"	m	class:BillTimeTick
_one_sec	ScenesServer/Scene.h	/^    Timer _one_sec;$/;"	m	class:Scene
_one_sec	ScenesServer/SceneNpc.h	/^  Timer _one_sec;$/;"	m	class:SceneNpc
_one_sec	ScenesServer/SceneUser.h	/^    Timer _one_sec;$/;"	m	struct:SceneUser
_one_sec	ScenesServer/TimeTick.h	/^	  Timer _one_sec;$/;"	m	class:SceneTimeTick
_one_sec	SessionServer/TimeTick.h	/^    Timer _one_sec;$/;"	m	class:SessionTimeTick
_p	ScenesServer/QuestMaker.h	/^      ScenesParser _p;$/;"	m	class:MakeFunction::Compare
_p	ScenesServer/QuestMaker.h	/^      ScenesParser _p;$/;"	m	class:MakeFunction::Update
_p	ScenesServer/QuestMaker.h	/^    ScenesParser _p;$/;"	m	class:MakeFunction::Prop
_p	ScenesServer/zObject.h	/^  Param _p;$/;"	m	struct:DropFromPack
_p1	ScenesServer/zObject.h	/^    WORD* _p1[5];$/;"	m	struct:zObject
_p2	ScenesServer/zObject.h	/^    WORD* _p2[18];$/;"	m	struct:zObject
_packets	GatewayServer/CmdChecker.h	/^	int _packets;$/;"	m	class:CheckInfo
_passivenessElement	ScenesServer/SkillStatusManager.h	/^  std::map<DWORD,SkillStatusElement> _passivenessElement;$/;"	m	class:SkillStatusManager
_pos	ScenesServer/Scene.cpp	/^  const zPos &_pos;    \/\/\/ÊñΩÊ≥ïËÄÖ‰∏≠ÂøÉÂùêÊ†á$/;"	m	struct:findPosInNine
_pos	ScenesServer/zObject.h	/^  int _pos;$/;"	m	struct:DropFromPack
_poses	ScenesServer/zObject.cpp	/^const int EquipPack::_poses[] = {   -1,  1,  2,  3,  4,  5,  6,  7,  8,  9,$/;"	m	class:EquipPack
_poses	ScenesServer/zObject.h	/^    const static int _poses[60];$/;"	m	class:EquipPack
_powerList	tmpcode/commond.h	/^struct _powerList$/;"	s
_pp_generators	base/xml/xml_parser_generator.h	/^	prop_parser_generator_cont _pp_generators;$/;"	m	class:xml_node_parser_generator
_previous	GatewayServer/CmdChecker.h	/^	zRTime _previous;$/;"	m	class:CheckInfo
_ps	ScenesServer/zObject.h	/^  const Packages* _ps;$/;"	m	struct:ClearPack
_ps	ScenesServer/zObject.h	/^  const Packages* _ps;$/;"	m	struct:DropFromPack
_quest_id	ScenesServer/Quest.h	/^  DWORD _quest_id;$/;"	m	class:Vars
_quest_id	ScenesServer/QuestEvent.h	/^  DWORD _quest_id;$/;"	m	class:EventTrigger2
_quests	ScenesServer/Quest.h	/^  QUESTS _quests;$/;"	m	class:QuestList
_quests	ScenesServer/QuestEvent.h	/^  QUESTS _quests;$/;"	m	class:Event
_quests	ScenesServer/QuestTable.h	/^  QUESTS _quests;$/;"	m	class:QuestTable
_range	ScenesServer/Scene.cpp	/^  zPosVector &_range;  \/\/\/ÂùêÊ†áÁÇπÂàóË°®$/;"	m	struct:findPosInNine
_rcv_queue	base/zSocket.h	/^	t_BufferCmdQueue _rcv_queue;        \/**< Ω” ’ª∫≥Â÷∏¡Ó∂”¡– *\/$/;"	m	class:zSocket
_rcv_raw_size	base/zSocket.h	/^	DWORD _rcv_raw_size;          \/**< Ω” ’ª∫≥ÂΩ‚√‹ ˝æ›¥Û–° *\/$/;"	m	class:zSocket
_recoveryElement	ScenesServer/SkillStatusManager.h	/^  std::map<DWORD,SkillStatusElement> _recoveryElement;	    \/\/∑«”¿æ√µƒººƒ‹◊¥Ã¨(∆◊˜”√ ±ÃÌº”£¨ ß–ß ±«Â≥˝)$/;"	m	class:SkillStatusManager
_retset_gametime	GatewayServer/GatewayTask.h	/^	Timer _retset_gametime;$/;"	m	class:GatewayTask
_rewardType	tmpcode/commond.h	/^			BYTE _rewardType;  \/\/»ŒŒÒ≥Í¿Õ¿‡–Õ$/;"	m	struct:stRetAllIssuedQuestUserCmd::quest
_rewardType	tmpcode/commond.h	/^		BYTE _rewardType;       \/\/≥Í¿Õ¿‡–Õ,1Œ™Ω Ù±“, 2Œ™ÀÆæß±“$/;"	m	struct:stClickIssueQuestUserCmd
_rewardType	tmpcode/commond.h	/^		BYTE _rewardType;  \/\/≥Í¿Õ¿‡–Õ,1Œ™Ω Ù±“,2Œ™ÀÆæß±“$/;"	m	struct:stAddIssueQuestUserCmd
_rewardType	tmpcode/commond.h	/^		BYTE _rewardType; \/\/»ŒŒÒ≥Í¿Õ¿‡–Õ$/;"	m	struct:stRetConsignIssuedQuestUserCmd
_rewardType	tmpcode/commond.h	/^		BYTE _rewardType; \/\/»ŒŒÒ≥Í¿Õ¿‡–Õ$/;"	m	struct:stRetInfoIssuedQuestUserCmd
_rewards	tmpcode/commond.h	/^			DWORD _rewards;   \/\/»ŒŒÒ≥Í¿Õ$/;"	m	struct:stRetAllIssuedQuestUserCmd::quest
_rewards	tmpcode/commond.h	/^        DWORD _rewards;    \/\/Ω±¿¯$/;"	m	struct:stRetInfoIssuedQuestUserCmd
_rewards	tmpcode/commond.h	/^        DWORD _rewards;   \/\/»ŒŒÒ≥Í¿Õ$/;"	m	struct:stRetConsignIssuedQuestUserCmd
_rewards	tmpcode/commond.h	/^        DWORD _rewards;   \/\/»ŒŒÒ≥Í¿Õ£¨$/;"	m	struct:stAddIssueQuestUserCmd
_scene	ScenesServer/SceneManager.cpp	/^  Scene *_scene;$/;"	m	struct:EveryMapExec
_script_func_h	ScenesServer/script_func.h	2;"	d
_sendCmdToZone	FLServer/UserTask.h	/^	bool _sendCmdToZone(ZoneUser_map::iterator &map_it, Cmd::t_NullCmd *pCmd, unsigned int nCmdLen)$/;"	f	class:UserContainer
_sendCmdToZone	roleChangeServer/ChangeTask.h	/^	bool _sendCmdToZone(ZoneInfo_map::iterator &map_it, Cmd::t_NullCmd *pCmd, unsigned int nCmdLen)$/;"	f	class:RoleContainer
_sendLen	GatewayServer/ScreenIndex.cpp	/^  int _sendLen;$/;"	m	struct:SendNineExec
_sendLen	GatewayServer/ScreenIndex.cpp	/^  int _sendLen;$/;"	m	struct:SendNineExecExceptMe
_seven_props	base/Object.h	/^		 WORD _seven_props[7];$/;"	m	union:t_Object::__anon59
_size	ScenesServer/zCard.h	/^    WORD _size;$/;"	m	class:CardSlot
_size	ScenesServer/zObject.h	/^    WORD _size;$/;"	m	class:Package
_size	tmpcode/commond.h	/^        WORD _size;       \/\/ºÚµ•¡Ù—‘µƒ≥§∂»;        $/;"	m	struct:stAddIssueQuestUserCmd
_size	tmpcode/commond.h	/^        WORD _size;     \/\/ºÚµ•¡Ù—‘≥§∂»$/;"	m	struct:stRetInfoIssuedQuestUserCmd
_skillStatus	ScenesServer/Skill.cpp	/^  const SkillStatus *_skillStatus;$/;"	m	struct:SendStatusToTeamExec
_snd_queue	base/zSocket.h	/^	t_BufferCmdQueue _snd_queue;        \/**< º”√‹ª∫≥Â÷∏¡Ó∂”¡– *\/$/;"	m	class:zSocket
_sortKey	SessionServer/CSort.h	/^    std::multimap<QWORD,DWORD,ltqword> _sortKey;$/;"	m	class:CSortM
_sortMap	SessionServer/CSort.h	/^    std::map<DWORD,QWORD> _sortMap;$/;"	m	class:CSortM
_space	ScenesServer/zCard.h	/^    WORD _space;$/;"	m	class:CardSlot
_space	ScenesServer/zObject.h	/^    WORD _space;$/;"	m	class:Package
_sq	ScenesServer/script.h	/^  __gnu_cxx::hash_set<int> _sq;$/;"	m	class:ScriptQuest
_stNullUserCmd_h	base/NullUserCmd.h	3;"	d
_start_time	ScenesServer/Quest.h	/^  int _start_time;$/;"	m	class:Vars
_state	ScenesServer/Quest.h	/^    int _state;$/;"	m	class:Vars::VAR
_state	ScenesServer/QuestAction.h	/^	std::string _state;$/;"	m	class:TraceLogAction
_subs	ScenesServer/Quest.h	/^  std::list<std::string> _subs;$/;"	m	class:QuestList
_tasklist	ScenesServer/scriptTickTask.h	/^	std::map<QWORD,scriptTask*> _tasklist;$/;"	m	class:scriptTaskManagement
_team	ScenesServer/QuestAction.h	/^  int _team;$/;"	m	class:TeamAction
_team	ScenesServer/QuestCondition.h	/^  int _team;$/;"	m	class:TeamCondition
_techItem	base/SessionCommand.h	/^    struct _techItem$/;"	s	namespace:Cmd::Session
_ten_min	SessionServer/TimeTick.h	/^    Timer _ten_min;$/;"	m	class:SessionTimeTick
_ten_min	base/zTCPClientTask.h	/^	Timer _ten_min;$/;"	m	class:zTCPClientTask
_ten_min	base/zTCPTask.h	/^	Timer _ten_min;$/;"	m	class:zTCPTask
_ten_sec	ScenesServer/ChallengeGameManager.h	/^    Timer _ten_sec;	    \/\/10√Î∞—∏˜∏ˆ≥°æ∞…œ’Ω∂∑æ÷ ˝∑¢Õ˘ª·ª∞$/;"	m	class:ChallengeGameManager
_ten_sec	ScenesServer/SceneUser.h	/^    Timer _ten_sec;$/;"	m	struct:SceneUser
_time	tmpcode/commond.h	/^        DWORD _time;$/;"	m	struct:stCrystalPunishTimeDataUserCmd
_time	tmpcode/commond.h	/^        DWORD _time;$/;"	m	struct:stNotifyHodeGatherPoint
_timeout	ScenesServer/Quest.h	/^  int _timeout;$/;"	m	class:Vars
_timer	base/zTime.h	/^	zRTime _timer;$/;"	m	class:RandTimer
_timer	base/zTime.h	/^	zRTime _timer;$/;"	m	class:Timer
_title	ScenesServer/Quest.h	/^  std::string _title;$/;"	m	class:Quest
_tmp	ScenesServer/Quest.h	/^    int _tmp;  $/;"	m	class:Vars::VAR
_tmp	ScenesServer/QuestAction.h	/^  int _tmp;$/;"	m	class:GlobalAction
_tmp	ScenesServer/QuestAction.h	/^  int _tmp;$/;"	m	class:VarAction
_type	GatewayServer/ScreenIndex.cpp	/^  DWORD _type;$/;"	m	struct:SendNineExec
_type	GatewayServer/ScreenIndex.cpp	/^  DWORD _type;$/;"	m	struct:SendNineExecExceptMe
_type	ScenesServer/zCard.h	/^    WORD _type;$/;"	m	class:CardSlot
_type	ScenesServer/zObject.h	/^    WORD _type;$/;"	m	class:Package
_update	ScenesServer/Quest.h	/^  int _update;$/;"	m	class:Vars
_user	ScenesServer/Skill.cpp	/^  SceneUser * _user;$/;"	m	struct:SendStatusToTeamExec
_user	ScenesServer/zObject.h	/^  SceneUser* _user;$/;"	m	struct:Combination
_userID1	ScenesServer/ChallengeGame.h	/^	DWORD _userID1;$/;"	m	class:ChallengeGame
_userID2	ScenesServer/ChallengeGame.h	/^	DWORD _userID2;$/;"	m	class:ChallengeGame
_value	ScenesServer/Quest.h	/^    std::string _value;$/;"	m	class:Vars::VAR
_value	ScenesServer/QuestAction.h	/^  DWORD _value;$/;"	m	class:AddHeroExpAction
_value	ScenesServer/QuestAction.h	/^  int _value;$/;"	m	class:AddBindItemAction
_value	ScenesServer/QuestAction.h	/^  int _value;$/;"	m	class:AddItemAction
_value	ScenesServer/QuestAction.h	/^  int _value;$/;"	m	class:RemoveItemAction
_vars	ScenesServer/Quest.h	/^    std::map<QWORD,Vars*> _vars;$/;"	m	class:UserVar::VAR
_vars	ScenesServer/Quest.h	/^  VARS _vars;  $/;"	m	class:Vars
_vars	ScenesServer/Quest.h	/^  VARS _vars;$/;"	m	class:GlobalVarImpl
_vars	ScenesServer/Quest.h	/^  VARS _vars;$/;"	m	class:UserVar
_week	ScenesServer/Quest.h	/^  int _week;$/;"	m	class:GlobalVarImpl
_width	ScenesServer/zCard.h	/^    WORD _width;$/;"	m	class:CardSlot
_width	ScenesServer/zObject.h	/^    WORD _width;$/;"	m	class:Package
_writeback_timer	ScenesServer/SceneUser.h	/^    RandTimer _writeback_timer;$/;"	m	struct:SceneUser
_zAStar_h_	base/zAStar.h	2;"	d
_zBase64_h_	base/zBase64.h	8;"	d
_zCard_h_	ScenesServer/zCard.h	2;"	d
_zCond_h_	base/zCond.h	2;"	d
_zDBConnPool_h_	base/zDBConnPool.h	2;"	d
_zDatabaseManager_h_	base/zDatabaseManager.h	8;"	d
_zDatabase_h_	base/zDatabase.h	9;"	d
_zMNetService_h_	base/zMNetService.h	2;"	d
_zMTCPServer_h_	base/zMTCPServer.h	2;"	d
_zMutex_h	base/zMutex.h	3;"	d
_zNetService_h_	base/zNetService.h	2;"	d
_zNoncopyable_h_	base/zNoncopyable.h	2;"	d
_zNulCmd_h_	base/zNullCmd.h	2;"	d
_zObject_h_	ScenesServer/zObject.h	2;"	d
_zProperties_h_	base/zProperties.h	2;"	d
_zRWLock_h	base/zRWLock.h	3;"	d
_zSceneEntryIndex_h_	ScenesServer/zSceneEntryIndex.h	2;"	d
_zSceneManager_h_	base/zSceneManager.h	2;"	d
_zScene_h_	base/zScene.h	2;"	d
_zService_h_	base/zService.h	2;"	d
_zSocket_h_	base/zSocket.h	2;"	d
_zString_h_	base/zString.h	2;"	d
_zSubNetService_h_	base/zSubNetService.h	2;"	d
_zSyncEvent_h_	base/zSyncEvent.h	8;"	d
_zTCPClientTaskPool_h_	base/zTCPClientTaskPool.h	2;"	d
_zTCPClientTask_h_	base/zTCPClientTask.h	2;"	d
_zTCPClient_h_	base/zTCPClient.h	2;"	d
_zTCPServer_h_	base/zTCPServer.h	2;"	d
_zTCPTaskPool_h_	base/zTCPTaskPool.h	2;"	d
_zTCPTask_h_	base/zTCPTask.h	2;"	d
_zThread_h_	base/zThread.h	2;"	d
_zType_h_	base/zType.h	2;"	d
_zUniqueID_h_	base/zUniqueID.h	2;"	d
_zUserManager_h_	base/zUserManager.h	2;"	d
_zUser_h_	base/zUser.h	2;"	d
aBallThisId	tmpcode/commond.h	/^	DWORD aBallThisId[7];$/;"	m	struct:stSevenDragonBallsAwardUserCmd
aBeChallengedName	tmpcode/commond.h	/^	BYTE aBeChallengedName[MAX_NAMESIZE+1];  \/\/ ±ªÃÙ’Ω∑Ω√˚◊÷$/;"	m	struct:stChallengeResultDragonUserCmd
aChallengerName	tmpcode/commond.h	/^	BYTE aChallengerName[MAX_NAMESIZE+1];  \/\/ ÃÙ’Ω∑Ω√˚◊÷$/;"	m	struct:stChallengeResultDragonUserCmd
aChars	tmpcode/commond.h	/^	WORD aChars[3];$/;"	m	struct:stImageVerifyReturnCharsUserCmd
aCount	tmpcode/commond.h	/^		BYTE aCount[DG_MAX_NUM];                             $/;"	m	union:stDanceGameScore::__anon307
aElec	base/Object.h	/^    WORD  aElec;       \/\/ µÁ‘™Àÿ…À∫¶º”≥…$/;"	m	struct:t_Object
aFire	base/Object.h	/^    WORD  aFire;       \/\/ ª‘™Àÿ…À∫¶º”≥…$/;"	m	struct:t_Object
aGameTimes	tmpcode/commond.h	/^	DWORD aGameTimes;$/;"	m	struct:stPersonResultChallengeUserCmd
aGiftGot	tmpcode/commond.h	/^	BYTE aGiftGot[EXCHANGE2_GIFTS_NUM];  \/\/ ¿ÒŒÔ «∑Ò“—¡Ï»°$/;"	m	struct:stReturnExchange2State
aGiftGot	tmpcode/commond.h	/^	BYTE aGiftGot[EXCHANGE2_GIFTS_NUM];  \/\/ ¿ÒŒÔ «∑Ò“—¡Ï»°$/;"	m	struct:stReturnExchange3State
aGiftItem	tmpcode/commond.h	/^	Exchange2GiftItem aGiftItem[EXCHANGE2_GIFTS_NUM];  \/\/ 4∏ˆ¿ÒŒÔµƒ ˝◊È$/;"	m	struct:stReturnExchange3Gifts
aGiftItem	tmpcode/commond.h	/^	Exchange2GiftItem aGiftItem[EXCHANGE2_GIFTS_NUM];$/;"	m	struct:stReturnExchange2Gifts
aIce	base/Object.h	/^    WORD  aIce;        \/\/ ±˘‘™Àÿ…À∫¶º”≥…$/;"	m	struct:t_Object
aIds	tmpcode/commond.h	/^	DWORD aIds[0];  \/\/ …Ã∆∑ID$/;"	m	struct:stReturnGoodsWithBonusCmd
aItems	tmpcode/commond.h	/^	Exchange4ConfigItem aItems[0];$/;"	m	struct:stReturnExchange4Config
aItems	tmpcode/commond.h	/^	Exchange5ConfigItem aItems[0];$/;"	m	struct:stReturnExchange5Config
aItems	tmpcode/commond.h	/^	NewbieGiftItem aItems[0];  \/\/ ±‰≥§ ˝◊È, ”…byItemCount÷∏∂®≥§∂»$/;"	m	struct:stNewbieGiftUserCmd
aJob	tmpcode/commond.h	/^	WORD aJob;$/;"	m	struct:stPersonResultChallengeUserCmd
aKillTimes	tmpcode/commond.h	/^	WORD aKillTimes;$/;"	m	struct:stPersonResultChallengeUserCmd
aName	tmpcode/commond.h	/^	 BYTE aName[MAX_NAMESIZE];  \/\/ ¡ƒÃÏ “√˚£¨“‘0Ω·Œ≤µƒ◊÷∑˚¥Æ°£$/;"	m	struct:stReqJoinChannelCmd
aName	tmpcode/commond.h	/^	char aName[MAX_NAMESIZE];$/;"	m	struct:stInfoChallengeUserCmd
aName	tmpcode/commond.h	/^	char aName[MAX_NAMESIZE];$/;"	m	struct:stSeptPrepareTimeChallengeUserCmd
aName	tmpcode/commond.h	/^	char aName[MAX_NAMESIZE];$/;"	m	struct:stSimpleInfoChallengeUserCmd
aNumbers	tmpcode/commond.h	/^	DWORD aNumbers[16];  \/\/ 0-15∫≈IDµƒ“—¡Ï∏ˆ ˝$/;"	m	struct:stReturnExchange4State
aNumbers	tmpcode/commond.h	/^	DWORD aNumbers[16];  \/\/ 0-15∫≈IDµƒ“—¡Ï∏ˆ ˝$/;"	m	struct:stReturnExchange5State
aPosx	tmpcode/commond.h	/^	DWORD aPosx;  \/\/ÕÊº“1≥ı ºx◊¯±Í$/;"	m	struct:stSimulateMagicUserCmd
aPosy	tmpcode/commond.h	/^	DWORD aPosy;  \/\/ÕÊº“1≥ı ºy◊¯±Í$/;"	m	struct:stSimulateMagicUserCmd
aReturns	tmpcode/commond.h	/^	DWORD aReturns[14];  \/\/ …œ…œ÷‹∫Õ…œ÷‹±£œ’µƒ∑µªπ÷µ(ÀÆæß±“),µ•ŒªÕ≠$/;"	m	struct:stReturnWeekAssuranceDrawState
aSequence	tmpcode/commond.h	/^	BYTE aSequence[DANCE_GAME_MAX_SEQUENCE];         $/;"	m	struct:stDanceGameChallenge
aSequence	tmpcode/commond.h	/^	BYTE aSequence[DANCE_GAME_MAX_SEQUENCE];      $/;"	m	struct:stDanceGameReturn
aStates	tmpcode/commond.h	/^	BYTE aStates[14];  \/\/ …œ…œ÷‹∫Õ…œ÷‹±£œ’µƒ¡Ï»°◊¥Ã¨,$/;"	m	struct:stReturnWeekAssuranceDrawState
aThanks	tmpcode/commond.h	/^    DWORD aThanks; \/\/µ⁄“ª÷÷∑¥¿°»À ˝$/;"	m	struct:stAsrShenLongThanks
aThunder	base/Object.h	/^    WORD  aThunder;    \/\/ ¿◊‘™Àÿ…À∫¶º”≥…$/;"	m	struct:t_Object
aTransportPos	tmpcode/commond.h	/^	TransportPos aTransportPos[0];  \/\/ ∏√µ¿æﬂ‘ –Ì¥´ÀÕµƒµÿµ„$/;"	m	struct:stTransportObjectConfigUserCmd
aTypeS	base/zDatabase.h	/^	aTypeS()$/;"	f	struct:aTypeS
aTypeS	base/zDatabase.h	/^    struct aTypeS{$/;"	s
aWinTimes	tmpcode/commond.h	/^	DWORD aWinTimes;$/;"	m	struct:stPersonResultChallengeUserCmd
aWind	base/Object.h	/^    WORD  aWind;       \/\/ ∑Á‘™Àÿ…À∫¶º”≥…$/;"	m	struct:t_Object
aa	base/Command.h	/^      BYTE aa[0];$/;"	m	union:Cmd::stMapDataMapScreenUserCmd::__anon79
aaa	base/Command.h	/^      BYTE aaa[0];$/;"	m	union:Cmd::stMapDataMapScreenUserCmd::__anon79
aaaa	base/Command.h	/^      BYTE aaaa[0];$/;"	m	union:Cmd::stMapDataMapScreenUserCmd::__anon79
aaaaa	base/Command.h	/^      BYTE aaaaa[0];$/;"	m	union:Cmd::stMapDataMapScreenUserCmd::__anon79
aaaaaa	base/Command.h	/^      BYTE aaaaaa[0];$/;"	m	union:Cmd::stMapDataMapScreenUserCmd::__anon79
abandon	ScenesServer/Quest.cpp	/^int Quest::abandon(SceneUser& user,DWORD id)$/;"	f	class:Quest
abandon	ScenesServer/Quest.cpp	/^int QuestList::abandon(SceneUser& user,DWORD id,bool force,bool destroy)$/;"	f	class:QuestList
ability	tmpcode/commond.h	/^	BYTE ability;           \/\/\/ ƒ‹¡¶(∂‘”¶”⁄≈‰÷√Œƒº˛)$/;"	m	struct:CityGuard
accID	base/GmToolCommand.h	/^      DWORD accID;$/;"	m	struct:Cmd::GmTool::t_Log_GmTool
accMoney	tmpcode/commond.h	/^	DWORD   accMoney;$/;"	m	struct:stGetPackBusiness
accPriv	base/CharBase.h	/^  DWORD accPriv;      \/\/Â∏êÂè∑ÊùÉÈôê$/;"	m	struct:CharBase
accSafe	base/SessionCommand.h	/^      BYTE accSafe;$/;"	m	struct:Cmd::Session::t_regUser_GateSession
accSafe	base/zType.h	/^  BYTE accSafe;$/;"	m	struct:t_NewLoginSession
accType	base/SessionCommand.h	/^      DWORD accType;$/;"	m	struct:Cmd::Session::t_regUser_GateSession
accType	base/SessionCommand.h	/^      DWORD accType;$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
accType	tmpcode/commond.h	/^	int accType;    \/\/’ ∫≈¿‡–Õ$/;"	m	struct:stReturnHealthyGameUserCmd
accelData	ScenesServer/SceneUser.h	/^    char accelData[1024];$/;"	m	struct:SceneUser
accelKeys	base/Command.h	/^    stGameAccelKey accelKeys[0];$/;"	m	struct:Cmd::stAccekKeyPropertyUserCmd
accelKeys	tmpcode/commond.h	/^    DWORD   accelKeys[0];$/;"	m	struct:stAccekKeyPropertyUserCmd
accelNum	base/Command.h	/^    WORD  accelNum;$/;"	m	struct:Cmd::stAccekKeyPropertyUserCmd
acceptQuest	tmpcode/commond.h	/^	struct acceptQuest{$/;"	s	struct:stRetRapidSelectQuestUserCmd
acceptedQuests	tmpcode/commond.h	/^	struct acceptedQuests {$/;"	s	struct:stRetAcceptedDailyQuestUserCmd
acceptedQuests	tmpcode/commond.h	/^	struct acceptedQuests {$/;"	s	struct:stRetSeptTeamChallengeUserCmd
accessory	base/Command.h	/^  bool accessory;$/;"	m	struct:Cmd::stAddListMail
accessory	base/Command.h	/^  bool accessory;$/;"	m	struct:Cmd::stContentMail
accessory	base/SessionCommand.h	/^      BYTE accessory;$/;"	m	struct:Cmd::Session::mailInfo
accessory	tmpcode/commond.h	/^    bool accessory;$/;"	m	struct:stAddListMail
accessory	tmpcode/commond.h	/^    bool accessory;\/\/ «∑Ò”–∏Ωº˛ $/;"	m	struct:stContentMail
accid	BillServer/BillManager.h	/^  DWORD accid;          \/**< Ë¥¶Âè∑ÁºñÂè∑ *\/$/;"	m	struct:BillInfo
accid	BillServer/BillSessionManager.h	/^  DWORD  accid;      \/\/\/ Â∏êÂè∑ÁºñÂè∑$/;"	m	struct:BillSession
accid	BillServer/StockConsign.h	/^  DWORD accid;$/;"	m	struct:ConsignTrait
accid	GatewayServer/GateUser.h	/^	DWORD accid;$/;"	m	class:GateSelectUserSession
accid	GatewayServer/GatewayTask.h	/^	DWORD accid;$/;"	m	class:GatewayTask
accid	RecordServer/RecordSessionManager.h	/^  DWORD accid;      \/\/\/ ’ ∫≈$/;"	m	struct:RecordSession
accid	Robot/Client.h	/^    DWORD accid;$/;"	m	struct:ClientBase
accid	Robot/LoginClient.h	/^    DWORD accid;$/;"	m	class:LoginClient
accid	ScenesServer/SceneUser.h	/^    DWORD accid;$/;"	m	struct:SceneUser
accid	SessionServer/Session.h	/^    DWORD accid;$/;"	m	class:UserSession
accid	SuperServer/RoleregCache.cpp	/^	DWORD accid;  \/\/’ ∫≈±‡∫≈$/;"	m	struct:RoleData
accid	SuperServer/RoleregCache.h	/^      DWORD accid;        \/**< ’À∫≈±‡∫≈ *\/$/;"	m	struct:RoleregCache::Data
accid	base/BattleUserCmd.h	/^	DWORD accid;$/;"	m	struct:Cmd::stChangeZoneVerify
accid	base/BillCommand.h	/^      DWORD accid;              \/\/\/ Ë¥¶Âè∑ÁºñÂè∑$/;"	m	struct:Cmd::Bill::stConSumeCardCard_Gateway
accid	base/BillCommand.h	/^      DWORD accid;              \/\/\/ Ë¥¶Âè∑ÁºñÂè∑$/;"	m	struct:Cmd::Bill::t_Redeem_Gold_Gateway
accid	base/BillCommand.h	/^      DWORD accid;              \/\/\/ Ë¥¶Âè∑ÁºñÂè∑$/;"	m	struct:Cmd::Bill::t_Redeem_MonthCard_Gateway
accid	base/BillCommand.h	/^      DWORD accid;              \/\/\/ Ë¥¶Âè∑ÁºñÂè∑$/;"	m	struct:Cmd::Bill::t_Request_Card_Gold_Gateway
accid	base/BillCommand.h	/^      DWORD accid;              \/\/\/ Ë¥¶Âè∑ÁºñÂè∑$/;"	m	struct:Cmd::Bill::t_Request_Point_Gateway
accid	base/BillCommand.h	/^      DWORD accid;              \/\/\/ Ë¥¶Âè∑ÁºñÂè∑$/;"	m	struct:Cmd::Bill::t_Request_Redeem_Gold_Gateway
accid	base/BillCommand.h	/^      DWORD accid;              \/\/\/ Ë¥¶Âè∑ÁºñÂè∑$/;"	m	struct:Cmd::Bill::t_Request_Redeem_MonthCard_Gateway
accid	base/BillCommand.h	/^      DWORD accid;              \/\/\/ Ë¥¶Âè∑ÁºñÂè∑$/;"	m	struct:Cmd::Bill::t_Return_Card_Gold
accid	base/BillCommand.h	/^      DWORD accid;              \/\/\/ Ë¥¶Âè∑ÁºñÂè∑$/;"	m	struct:Cmd::Bill::t_Return_ObjCard
accid	base/BillCommand.h	/^      DWORD accid;              \/\/\/ Ë¥¶Âè∑ÁºñÂè∑$/;"	m	struct:Cmd::Bill::t_Return_Point
accid	base/BillCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::Bill::t_LoginVerify_Gateway
accid	base/BillCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::Bill::t_LoginVerify_Gateway_Return
accid	base/BillCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::Bill::t_Logout_Gateway
accid	base/CharBase.h	/^  DWORD accid;            \/\/\/ Ë¥¶Âè∑$/;"	m	struct:CharBase
accid	base/Command.h	/^  DWORD accid;$/;"	m	struct:Cmd::stUserRefrainLoginCmd
accid	base/FLCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::FL::t_idinuse_Session
accid	base/GmToolCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::GmTool::t_Msg_GmTool
accid	base/GmToolCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::GmTool::t_Punish_GmTool
accid	base/GmToolCommand.h	/^      DWORD accid;\/\/‰∏æÊä•ËÄÖaccid$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
accid	base/RecordCommand.h	/^		DWORD accid;          \/\/\/ Ë¥¶Âè∑$/;"	m	struct:Cmd::Record::t_Get_SelectInfo_GateRecord
accid	base/RecordCommand.h	/^	DWORD accid;$/;"	m	struct:Cmd::Record::t_update_ZoneState
accid	base/RecordCommand.h	/^      DWORD accid;            \/\/\/ Ë¥¶Âè∑$/;"	m	struct:Cmd::Record::t_CheckName_GateRecord
accid	base/RecordCommand.h	/^      DWORD accid;            \/\/\/ Ë¥¶Âè∑$/;"	m	struct:Cmd::Record::t_CheckName_Return_GateRecord
accid	base/RecordCommand.h	/^      DWORD accid;            \/\/\/ Ë¥¶Âè∑$/;"	m	struct:Cmd::Record::t_CreateChar_GateRecord
accid	base/RecordCommand.h	/^      DWORD accid;            \/\/\/ Ë¥¶Âè∑$/;"	m	struct:Cmd::Record::t_CreateChar_Return_GateRecord
accid	base/RecordCommand.h	/^      DWORD accid;            \/\/\/ Ë¥¶Âè∑$/;"	m	struct:Cmd::Record::t_DelChar_GateRecord
accid	base/RecordCommand.h	/^      DWORD accid;            \/\/\/ Ë¥¶Âè∑$/;"	m	struct:Cmd::Record::t_DelChar_Return_GateRecord
accid	base/RecordCommand.h	/^      DWORD accid;            \/\/\/ Ë¥¶Âè∑$/;"	m	struct:Cmd::Record::t_Ret_SelectInfo_GateRecord
accid	base/RecordCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::Record::t_ReadUser_SceneRecord
accid	base/RecordCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::Record::t_RemoveUser_SceneRecord
accid	base/RecordCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::Record::t_WriteUser_SceneRecord
accid	base/RecordCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::Record::t_WriteUser_SceneRecord_Ok
accid	base/RolechangeCommand.h	/^	DWORD accid;$/;"	m	struct:Cmd::Rolechange::t_Check_Valid
accid	base/RolechangeCommand.h	/^	DWORD accid;$/;"	m	struct:Cmd::Rolechange::t_Ret_Check_Valid
accid	base/RolechangeCommand.h	/^	DWORD accid;$/;"	m	struct:Cmd::Rolechange::t_checkZoneState
accid	base/RolechangeCommand.h	/^	DWORD accid;$/;"	m	struct:Cmd::Rolechange::t_retCheckZoneState
accid	base/RolechangeCommand.h	/^	DWORD accid;$/;"	m	struct:Cmd::Rolechange::t_retSendUserToZone
accid	base/RolechangeCommand.h	/^	DWORD accid;$/;"	m	struct:Cmd::Rolechange::t_sendUserToZone
accid	base/RoleregCommand.h	/^      DWORD accid;        \/**< Ë¥¶Âè∑ÁºñÂè∑ *\/$/;"	m	struct:Cmd::RoleReg::t_Charname_reg_withID
accid	base/SceneCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::Scene::t_Unreg_LoginScene_Ok
accid	base/SceneCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::Scene::t_kickUser_GateScene
accid	base/SessionCommand.h	/^      DWORD accid;            \/\/\/ Ë¥¶Âè∑$/;"	m	struct:Cmd::Session::t_DelChar_GateSession
accid	base/SessionCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::Session::t_changeUser_GateSession
accid	base/SessionCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::Session::t_regUser_GateSession
accid	base/SessionCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
accid	base/SuperCommand.h	/^	  DWORD accid;$/;"	m	struct:Cmd::Super::t_ChangeZoneDel_Gateway
accid	base/SuperCommand.h	/^      DWORD accid;        \/**< Ë¥¶Âè∑ÁºñÂè∑ *\/$/;"	m	struct:Cmd::Super::t_Charname_Gateway
accid	base/SuperCommand.h	/^      DWORD accid;$/;"	m	struct:Cmd::Super::t_idinuse_Bill
accid	base/zType.h	/^    DWORD accid;$/;"	m	union:t_NewLoginSession::__anon10
accid	roleRegServer/RoleTask.h	/^    unsigned int accid;$/;"	m	struct:RoleData
accid	roleRegServer/RoleregCommand.h	/^      DWORD accid;        \/**< Ë¥¶Âè∑ÁºñÂè∑ *\/$/;"	m	struct:Cmd::RoleReg::t_Charname_reg_withID
accid	tmpcode/commond.h	/^	DWORD accid;$/;"	m	struct:stPointCard
account	BillServer/BillSessionManager.h	/^  char   account[Cmd::UserServer::ID_MAX_LENGTH+1];     \/\/\/ Â∏êÂè∑(ÈúÄË¶ÅÂèëÈÄÅÁªôËÆ∞Ë¥πÊúçÂä°Âô®)$/;"	m	struct:BillSession
account	BillServer/BillUser.h	/^    char account[Cmd::UserServer::ID_MAX_LENGTH+1];$/;"	m	class:BillUser
account	GatewayServer/GatewayTask.h	/^	char account[MAX_ACCNAMESIZE+1];$/;"	m	class:GatewayTask
account	base/BillCommand.h	/^      char account[Cmd::UserServer::ID_MAX_LENGTH+1];          \/\/\/ Â∏êÂè∑     $/;"	m	struct:Cmd::Bill::stConSumeCardCard_Gateway
account	base/BillCommand.h	/^      char account[Cmd::UserServer::ID_MAX_LENGTH+1];          \/\/\/ Â∏êÂè∑     $/;"	m	struct:Cmd::Bill::t_Redeem_Gold_Gateway
account	base/BillCommand.h	/^      char account[Cmd::UserServer::ID_MAX_LENGTH+1];          \/\/\/ Â∏êÂè∑     $/;"	m	struct:Cmd::Bill::t_Redeem_MonthCard_Gateway
account	base/BillCommand.h	/^      char account[Cmd::UserServer::ID_MAX_LENGTH+1];          \/\/\/ Â∏êÂè∑     $/;"	m	struct:Cmd::Bill::t_Request_Card_Gold_Gateway
account	base/BillCommand.h	/^      char account[Cmd::UserServer::ID_MAX_LENGTH+1];          \/\/\/ Â∏êÂè∑     $/;"	m	struct:Cmd::Bill::t_Request_Point_Gateway
account	base/BillCommand.h	/^      char account[Cmd::UserServer::ID_MAX_LENGTH+1];          \/\/\/ Â∏êÂè∑     $/;"	m	struct:Cmd::Bill::t_Request_Redeem_Gold_Gateway
account	base/BillCommand.h	/^      char account[Cmd::UserServer::ID_MAX_LENGTH+1];          \/\/\/ Â∏êÂè∑     $/;"	m	struct:Cmd::Bill::t_Request_Redeem_MonthCard_Gateway
account	base/BillCommand.h	/^      char account[Cmd::UserServer::ID_MAX_LENGTH+1];          \/\/\/ Â∏êÂè∑     $/;"	m	struct:Cmd::Bill::t_Return_Card_Gold
account	base/BillCommand.h	/^      char account[Cmd::UserServer::ID_MAX_LENGTH+1];          \/\/\/ Â∏êÂè∑     $/;"	m	struct:Cmd::Bill::t_Return_ObjCard
account	base/BillCommand.h	/^      char account[Cmd::UserServer::ID_MAX_LENGTH+1];          \/\/\/ Â∏êÂè∑     $/;"	m	struct:Cmd::Bill::t_Return_Point
account	base/SessionCommand.h	/^      char account[MAX_ACCNAMESIZE+1];$/;"	m	struct:Cmd::Session::t_regUser_GateSession
account	base/UserCommand.h	/^      char      account[ID_MAX_LENGTH +1];  \/\/Áé©ÂÆ∂Â∏êÂè∑$/;"	m	struct:Cmd::UserServer::t_cmd_fillin
account	base/UserCommand.h	/^      char      account[ID_MAX_LENGTH +1];  \/\/Áé©ÂÆ∂Â∏êÂè∑$/;"	m	struct:Cmd::UserServer::t_cmd_mcard
account	base/UserCommand.h	/^      char      account[ID_MAX_LENGTH +1];  \/\/Áé©ÂÆ∂Â∏êÂè∑$/;"	m	struct:Cmd::UserServer::t_cmd_qbalance
account	base/zType.h	/^    char account[48];$/;"	m	union:t_NewLoginSession::__anon11
account	tmpcode/commond.h	/^	char account[128];$/;"	m	struct:stPointCard
accountClient	GatewayServer/BillClient.cpp	/^BillClient *accountClient = NULL;$/;"	v
accountVerified	GatewayServer/GatewayTask.h	/^	}accountVerified;$/;"	m	class:GatewayTask	typeref:enum:GatewayTask::__anon3
accountVerifyOK	GatewayServer/GatewayTask.h	/^	void accountVerifyOK(const bool ok)$/;"	f	class:GatewayTask
accountVerifyOK	GatewayServer/GatewayTaskManager.cpp	/^void GatewayTaskManager::accountVerifyOK(const DWORD accid,const bool ok)$/;"	f	class:GatewayTaskManager
achievement	tmpcode/commond.h	/^    DWORD achievement;\/\/√∞œ’finishQuest$/;"	m	struct:kingAchievement
achievementData	tmpcode/commond.h	/^        kingAchievement achievementData;$/;"	m	struct:rtNameCardCmd
act	base/SessionCommand.h	/^      BYTE act;\/\/Âä®‰Ωú$/;"	m	struct:Cmd::Session::t_privateChat_SceneSession
act	tmpcode/commond.h	/^        act()$/;"	f	struct:stActivityDataUserCmd::act
act	tmpcode/commond.h	/^    struct act$/;"	s	struct:stActivityDataUserCmd
actID	base/SessionCommand.h	/^      DWORD actID;$/;"	m	struct:Cmd::Session::giftInfo
actList	tmpcode/commond.h	/^    act actList[0]; \/\/ªÓ∂Ø¡–±Ì$/;"	m	struct:stActivityDataUserCmd
actPos	ScenesServer/SceneNpcAI.h	/^  zPos actPos;$/;"	m	class:NpcAIController
actRegionX	ScenesServer/SceneNpcAI.h	/^  int actRegionX,actRegionY;$/;"	m	class:NpcAIController
actRegionY	ScenesServer/SceneNpcAI.h	/^  int actRegionX,actRegionY;$/;"	m	class:NpcAIController
actTitle	base/Command.h	/^struct actTitle$/;"	s	namespace:Cmd
actTitle	tmpcode/commond.h	/^struct actTitle$/;"	s
action	BillServer/BillCallback.h	/^    bool (*action)(const BillData *bd);$/;"	m	struct:BillCallback
action	BillServer/BillClient.cpp	/^bool BillClient::action(BillData *bd)$/;"	f	class:BillClient
action	BillServer/BillClientManager.cpp	/^bool BillClientManager::action(BillData *bd)$/;"	f	class:BillClientManager
action	BillServer/BillServer.cpp	/^bool action(const BillData *bd)$/;"	f
action	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::action(const Cmd::stCardAttackMagicUserCmd *rev, zCard* entry)$/;"	f	class:ChallengeGame
action	ScenesServer/NpcTrade.h	/^      WORD  action;        \/\/\/Âä®‰ΩúÁ±ªÂûã$/;"	m	struct:NpcTrade::NpcItem
action	ScenesServer/SceneNpc.cpp	/^void SceneNpc::action(const zRTime& ctv)$/;"	f	class:SceneNpc
action	ScenesServer/SceneUser.cpp	/^	BYTE action;$/;"	m	class:sendAllObjectListToUser
action	ScenesServer/Skill.cpp	/^bool zSkill::action(const Cmd::stAttackMagicUserCmd *rev,const DWORD cmdLen)$/;"	f	class:zSkill
action	base/Command.h	/^    BYTE  action;$/;"	m	struct:Cmd::stAddMapObjectMapScreenUserCmd
action	base/Command.h	/^  BYTE action; \/\/action 0:Âçñ,action 1: ÊîæÈÄê$/;"	m	struct:Cmd::stSellHorseNpcTradeUserCmd
action	base/Command.h	/^  DWORD action;$/;"	m	struct:Cmd::stVisitNpcTradeUserCmd
action	tmpcode/commond.h	/^	BYTE    action; $/;"	m	struct:stAddMapObjectMapScreenUserCmd
action	tmpcode/commond.h	/^	BYTE action;            \/\/0¥Úø™£¨1‘Ÿ◊™“ª¥Œ£¨2¡Ï»°ŒÔ∆∑£¨3πÿ±’¥∞ø⁄$/;"	m	struct:stUseNewBoxPropertyUserCmd
action	tmpcode/commond.h	/^	DWORD action; $/;"	m	struct:stVisitNpcTradeUserCmd
actionFinishTime	tmpcode/commond.h	/^    DWORD actionFinishTime; \/\/––∂ØΩ· ¯ ±º‰$/;"	m	struct:t_DragonData
actionID	tmpcode/commond.h	/^	DWORD actionID;$/;"	m	struct:stRetCityDareSuccessUserCmd
actionID	tmpcode/commond.h	/^    DWORD actionID;\/\/∂Ø◊˜ID$/;"	m	struct:stNpcDoActionUserCmd
actionPower	tmpcode/commond.h	/^    WORD actionPower;       \/\/––∂Ø¡¶$/;"	m	struct:t_DragonData
actionSign	tmpcode/commond.h	/^    DWORD actionSign;       \/\/∂Ø◊˜±Í÷æ$/;"	m	struct:t_DragonData
actionTimer	BillServer/BillClientManager.h	/^    zTime actionTimer;$/;"	m	class:BillClientManager
actionTimer	GatewayServer/SceneClientManager.h	/^	zTime actionTimer;$/;"	m	class:SceneClientManager
actionTimer	SuperServer/BroadClientManager.h	/^    zTime actionTimer;$/;"	m	class:BroadClientManager
actionTimer	SuperServer/FLClientManager.h	/^    zTime actionTimer;$/;"	m	class:FLClientManager
actionTimer	SuperServer/InfoClientManager.h	/^    zTime actionTimer;$/;"	m	class:InfoClientManager
actionTimer	SuperServer/RolechangeClientManager.h	/^    zTime actionTimer;$/;"	m	class:RolechangeClientManager
actionTimer	SuperServer/RoleregCache.h	/^    zTime actionTimer;$/;"	m	class:RoleregCache
actionTimer	SuperServer/RoleregClientManager.h	/^    zTime actionTimer;$/;"	m	class:RoleregClientManager
actionType	tmpcode/commond.h	/^	BYTE actionType;         \/\/∂Ø◊˜¿‡–Õ, 1 Œ™«Î«Û∑¢≤º; 2Œ™»∑»œ«Î«Û; 3Œ™∑¢≤º»ŒŒÒ; ∆‰÷–2Œ™server->client$/;"	m	struct:stRequestCleanTaskUserCmd
actionType	tmpcode/commond.h	/^        BYTE actionType;        \/\/∂Ø◊˜$/;"	m	struct:stRTPresentBarGirlUserCmd
actionbase	ScenesServer/Skill.h	/^    const zSkillB *actionbase;$/;"	m	struct:zSkill
active	ScenesServer/QuestEvent.cpp	/^bool Event::Embranchment::active() const$/;"	f	class:Event::Embranchment
active	ScenesServer/QuestEvent.cpp	/^void Event::Embranchment::active(bool flag)$/;"	f	class:Event::Embranchment
active	ScenesServer/SceneNpcAI.h	/^  bool active;$/;"	m	class:NpcAIController
active	base/Command.h	/^  bool  active;$/;"	m	struct:Cmd::stRequestStateStockUserCmd
active	tmpcode/commond.h	/^	bool  active;$/;"	m	struct:stRequestStateStockUserCmd
activeGroup	base/Command.h	/^    BYTE  activeGroup;$/;"	m	struct:Cmd::stAccekKeyPropertyUserCmd
activeOneHero	ScenesServer/HeroInfoManager.cpp	/^void HeroInfoManager::activeOneHero(SceneUser *user, const WORD occupation)$/;"	f	class:HeroInfoManager
active_time	base/SessionCommand.h	/^      DWORD active_time;    \/\/ ÂØπÊàòËøõË°åÊó∂Èó¥$/;"	m	struct:Cmd::Session::t_createDare_SceneSession
active_time	base/SessionCommand.h	/^      DWORD active_time;$/;"	m	struct:Cmd::Session::t_createQuiz_SceneSession
activetype	tmpcode/commond.h	/^	}activetype[2];$/;"	m	struct:EquipSimulate	typeref:struct:EquipSimulate::ActiveType
adCostNpc	tmpcode/commond.h	/^	DWORD adCostNpc;                \/\/\/ √ø∏ˆNPC√ø–° ±–˚¥´∑—$/;"	m	struct:stSetDancerProfileUserCmd
adHour	tmpcode/commond.h	/^	DWORD adHour;           \/\/\/ –˚¥´µƒ ±≥§$/;"	m	struct:stEmployNpcAdUserCmd
adKind	tmpcode/commond.h	/^	WORD adKind;                    \/\/\/ ŒËƒÔ–˚¥´¿‡–Õ$/;"	m	struct:stSetDancerProfileUserCmd
adNum	tmpcode/commond.h	/^	DWORD adNum;            \/\/\/ –˚¥´NPCµƒ∏ˆ ˝$/;"	m	struct:stEmployNpcAdUserCmd
adSeptInfo	tmpcode/commond.h	/^	SeptNotice adSeptInfo;  \/\/π∫¬Úº“◊Â÷√∂•π„∏Ê$/;"	m	struct:t_RetCountrySeptNotice
adType	tmpcode/commond.h	/^	BYTE  adType;    \/\/π∫¬Úπ„∏Ê¿‡–Õ$/;"	m	struct:t_RetCountrySeptNotice
adType	tmpcode/commond.h	/^	BYTE  adType;  \/\/≤º∏Ê¿‡–Õ$/;"	m	struct:stReqBuySeptAdCmd
adType	tmpcode/commond.h	/^	BYTE  adType;  \/\/–˚¥´¿‡–Õ$/;"	m	struct:stSendSeptAdCmd
add	BillServer/BillCache.cpp	/^BillData *BillCache::add(BillData *bd,const char *gameZone_str)$/;"	f	class:BillCache
add	BillServer/BillClientManager.cpp	/^void BillClientManager::add(BillClient *billClient)$/;"	f	class:BillClientManager
add	BillServer/BillSessionManager.cpp	/^bool BillSessionManager::add(BillSession &bs)$/;"	f	class:BillSessionManager
add	FLServer/LoginManager.cpp	/^bool LoginManager::add(LoginTask *task)$/;"	f	class:LoginManager
add	FLServer/UserTask.h	/^	void add(UserTask *iTask)$/;"	f	class:UserContainer
add	GatewayServer/CmdChecker.h	/^	void add(I cmd)$/;"	f	class:CmdChecker
add	GatewayServer/SceneClientManager.cpp	/^void SceneClientManager::add(SceneClient *sceneClient)$/;"	f	class:SceneClientManager
add	RecordServer/RecordSessionManager.cpp	/^bool RecordSessionManager::add(const DWORD accid,const DWORD id,const WORD wdServerID)$/;"	f	class:RecordSessionManager
add	Robot/ClientManager.cpp	/^void ClientManager::add(Client *task)$/;"	f	class:ClientManager
add	ScenesServer/Chat.cpp	/^bool Channel::add(SceneUser *pUser)$/;"	f	class:Channel
add	ScenesServer/Chat.cpp	/^bool Channel::add(const char *uname)$/;"	f	class:Channel
add	ScenesServer/Chat.cpp	/^bool ChannelM::add(Channel *channel)$/;"	f	class:ChannelM
add	ScenesServer/Quest.cpp	/^Vars* UserVar::add(DWORD id,QWORD key)$/;"	f	class:UserVar
add	ScenesServer/Quest.h	/^    Vars* add(DWORD id,QWORD key)$/;"	f	class:UserVar::VAR
add	ScenesServer/Quest.h	/^  Vars* add(QWORD id)$/;"	f	class:GlobalVarImpl
add	ScenesServer/QuestEvent.cpp	/^void Event::Embranchment::add(Action* action)$/;"	f	class:Event::Embranchment
add	ScenesServer/QuestEvent.cpp	/^void Event::Embranchment::add(Condition* condition)$/;"	f	class:Event::Embranchment
add	ScenesServer/script.cpp	/^void ScriptQuest::add(int type,int id)$/;"	f	class:ScriptQuest
add	ScenesServer/scriptTickTask.h	/^		static void add(BYTE cmd,BYTE para,const char *func)$/;"	f	class:scriptMessageFilter
add	ScenesServer/scriptTickTask.h	/^	bool add(taskType _type,scriptTask *_task)$/;"	f	class:userScriptTaskContainer
add	ScenesServer/zCard.cpp	/^bool BattleSlot::add(zCard *object,bool find)$/;"	f	class:BattleSlot
add	ScenesServer/zCard.cpp	/^bool CardSlot::add(zCard* object,bool find)$/;"	f	class:CardSlot
add	ScenesServer/zCard.cpp	/^bool EquipSlot::add(zCard *object,bool find)$/;"	f	class:EquipSlot
add	ScenesServer/zCard.cpp	/^bool HandSlot::add(zCard *object,bool find)$/;"	f	class:HandSlot
add	ScenesServer/zCard.cpp	/^bool HeroSlot::add(zCard *object,bool find)$/;"	f	class:HeroSlot
add	ScenesServer/zCard.cpp	/^bool SkillSlot::add(zCard *object,bool find)$/;"	f	class:SkillSlot
add	ScenesServer/zCard.cpp	/^bool TombSlot::add(zCard *object,bool find)$/;"	f	class:TombSlot
add	ScenesServer/zObject.cpp	/^bool EquipPack::add(zObject *object,bool find)$/;"	f	class:EquipPack
add	ScenesServer/zObject.cpp	/^bool MainPack::add(zObject *object,bool find)$/;"	f	class:MainPack
add	ScenesServer/zObject.cpp	/^bool Package::add(zObject* object,bool find)$/;"	f	class:Package
add	SessionServer/SessionChat.cpp	/^bool SessionChannel::add(UserSession *pUser)$/;"	f	class:SessionChannel
add	SessionServer/SessionChat.cpp	/^bool SessionChannelManager::add(SessionChannel *ch)$/;"	f	class:SessionChannelManager
add	SuperServer/BroadClientManager.cpp	/^void BroadClientManager::add(BroadClient *flClient)$/;"	f	class:BroadClientManager
add	SuperServer/FLClientManager.cpp	/^void FLClientManager::add(FLClient *flClient)$/;"	f	class:FLClientManager
add	SuperServer/InfoClientManager.cpp	/^void InfoClientManager::add(InfoClient *infoClient)$/;"	f	class:InfoClientManager
add	SuperServer/RolechangeClientManager.cpp	/^void RolechangeClientManager::add(RolechangeClient *rolechangeClient)$/;"	f	class:RolechangeClientManager
add	SuperServer/RoleregCache.cpp	/^	bool add(const RoleData &data)$/;"	f	class:RoleDataContainer
add	SuperServer/RoleregCache.cpp	/^void RoleregCache::add(const Cmd::Super::t_Charname_Gateway &cmd)$/;"	f	class:RoleregCache
add	SuperServer/RoleregClientManager.cpp	/^void RoleregClientManager::add(RoleregClient *roleregClient)$/;"	f	class:RoleregClientManager
add	roleChangeServer/ChangeTask.h	/^	void add(ChangeTask *iTask)$/;"	f	class:RoleContainer
addAllDamage	ScenesServer/zCard.cpp	/^bool CardSlot::addAllDamage(SceneUser *pUser, DWORD hp, zCard* entry)$/;"	f	class:CardSlot
addAllHp	ScenesServer/zCard.cpp	/^bool CardSlot::addAllHp(SceneUser *pUser, DWORD hp, zCard* entry)$/;"	f	class:CardSlot
addArmor	ScenesServer/CardPk.cpp	/^bool zCard::addArmor(DWORD value)$/;"	f	class:zCard
addAttackTimes	ScenesServer/CardPk.cpp	/^void zCard::addAttackTimes()$/;"	f	class:zCard
addBadRelation	SessionServer/CRelationManager.cpp	/^void CRelationManager::addBadRelation(const char *name)$/;"	f	class:CRelationManager
addBadSkillStatusPersistTime	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::addBadSkillStatusPersistTime(const DWORD &value)$/;"	f	class:SkillStatusManager
addBadSkillStatusPersistTimePercent	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::addBadSkillStatusPersistTimePercent(const DWORD &value)$/;"	f	class:SkillStatusManager
addBinaryArchiveMember	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::addBinaryArchiveMember(DWORD type,char **out,DWORD maxSize)$/;"	f	class:SceneUser
addBlackList	GatewayServer/GateUser.cpp	/^void GateUser::addBlackList(const char *name)$/;"	f	class:GateUser
addCardToLib	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::addCardToLib(const DWORD userID, const DWORD cardID)$/;"	f	class:ChallengeGame
addCharacterPercent	tmpcode/commond.h	/^	BYTE addCharacterPercent;       \/\/÷˜ Ù–‘∞Ÿ∑÷±»‘ˆº”÷µ$/;"	m	struct:DecayNewLingQi
addCharge	ScenesServer/CardPk.cpp	/^bool zCard::addCharge()$/;"	f	class:zCard
addClientTask	Robot/ClientManager.cpp	/^bool ClientManager::addClientTask(Client *client, DWORD acc, DWORD tempid, DES_cblock key)$/;"	f	class:ClientManager
addCounter	ScenesServer/CounterManager.cpp	/^bool CounterManager::addCounter(DWORD id, QWORD num)$/;"	f	class:CounterManager
addCounterDay	ScenesServer/CounterManager.cpp	/^bool CounterManager::addCounterDay(DWORD id, QWORD num)$/;"	f	class:CounterManager
addCounterMonth	ScenesServer/CounterManager.cpp	/^bool CounterManager::addCounterMonth(DWORD id, QWORD num)$/;"	f	class:CounterManager
addCounterWeek	ScenesServer/CounterManager.cpp	/^bool CounterManager::addCounterWeek(DWORD id, QWORD num)$/;"	f	class:CounterManager
addCountryUser	GatewayServer/GateUserManager.cpp	/^bool GateUserManager::addCountryUser(GateUser *user)$/;"	f	class:GateUserManager
addDamage	ScenesServer/CardPk.cpp	/^bool zCard::addDamage(DWORD dam)$/;"	f	class:zCard
addDeadLanguage	ScenesServer/CardPk.cpp	/^bool zCard::addDeadLanguage(DWORD skillID)$/;"	f	class:zCard
addDelay	base/zTime.h	/^	void addDelay(int delay)$/;"	f	class:zRTime
addDur	ScenesServer/CardPk.cpp	/^bool zCard::addDur(DWORD value)$/;"	f	class:zCard
addEnemyRelation	SessionServer/CRelationManager.cpp	/^void CRelationManager::addEnemyRelation(const char *name)$/;"	f	class:CRelationManager
addEnrage	ScenesServer/CardPk.cpp	/^bool zCard::addEnrage(DWORD skillID)$/;"	f	class:zCard
addEntry	base/zEntryManager.h	/^	inline bool addEntry(zEntry * e)$/;"	f	class:zEntryManager
addEpoll	base/zSocket.h	/^	inline void addEpoll(int kdpfd, __uint32_t events, void *ptr)$/;"	f	class:zSocket
addEpoll	base/zTCPClientTask.h	/^	void addEpoll(int kdpfd, __uint32_t events, void *ptr)$/;"	f	class:zTCPClientTask
addEpoll	base/zTCPTask.h	/^	void addEpoll(int kdpfd, __uint32_t events, void *ptr)$/;"	f	class:zTCPTask
addExp	ScenesServer/SceneUser.cpp	/^void SceneUser::addExp(DWORD num,bool addPet,DWORD dwTempID,BYTE byType,bool addCartoon)$/;"	f	class:SceneUser
addExp	ScenesServer/script_func.cpp	/^bool addExp(SceneUser *pUser,const char *para)$/;"	f
addExp	base/Command.h	/^  DWORD addExp;      \/\/Áªô‰∏ª‰∫∫Â¢ûÂä†ÁöÑÁªèÈ™å$/;"	m	struct:Cmd::t_CartoonData
addFieldMapName	ScenesServer/Scene.h	/^    void addFieldMapName(const char *name)$/;"	f	class:Scene
addGold	BillServer/BillUser.cpp	/^bool BillUser::addGold(DWORD num,const char *disc,bool transfer,bool tax)$/;"	f	class:BillUser
addGold	BillServer/StockConsign.cpp	/^bool Consign::addGold(DWORD accid,DWORD num)$/;"	f	class:Consign
addGold	ScenesServer/Chat.cpp	/^bool Gm::addGold(SceneUser *pUser, const char *para)$/;"	f	class:Gm
addGold	ScenesServer/zObject.cpp	/^void Packages::addGold(DWORD num,const char *disc,const char *note,bool notify,bool pack)$/;"	f	class:Packages
addGreenObjectNum	ScenesServer/CardManager.cpp	/^int GameCardM::addGreenObjectNum(SceneUser* user,DWORD id,DWORD number,zCard* & orig_ob,Obj_vec& new_obs,BYTE upgrade)$/;"	f	class:GameCardM
addGreenObjectNum	ScenesServer/ObjectManager.cpp	/^int UserObjectM::addGreenObjectNum(SceneUser* user,DWORD id,DWORD number,zObject* & orig_ob,Obj_vec& new_obs,BYTE upgrade)$/;"	f	class:UserObjectM
addHeroExp	ScenesServer/HeroInfoManager.h	/^    void addHeroExp(DWORD value)$/;"	f	struct:HeroData
addHeroMaxMp	ScenesServer/CardPk.cpp	/^bool zCard::addHeroMaxMp(DWORD value)$/;"	f	class:zCard
addHeroMp	ScenesServer/CardPk.cpp	/^bool zCard::addHeroMp(DWORD value)$/;"	f	class:zCard
addHpBuff	ScenesServer/CardPk.cpp	/^bool zCard::addHpBuff(DWORD hp)$/;"	f	class:zCard
addIncMapName	ScenesServer/Scene.h	/^    void addIncMapName(const char *name)$/;"	f	class:Scene
addLingli	tmpcode/commond.h	/^    WORD addLingli;\/\/±æ¥ŒŒπ—¯‘ˆº”µƒ¡È¡¶÷µ$/;"	m	struct:stConfirmFeedLingQiUserCmd
addMagic	ScenesServer/CardPk.cpp	/^bool zCard::addMagic(DWORD skillID)$/;"	f	class:zCard
addMainMapName	ScenesServer/Scene.h	/^    void addMainMapName(const char *name)$/;"	f	class:Scene
addMaxMp	ScenesServer/ChallengeGame.h	/^	void addMaxMp(DWORD value)$/;"	f	class:MagicPoint
addMoney	BillServer/BillUser.cpp	/^bool BillUser::addMoney(DWORD num,const char *disc,bool transfer,bool tax)$/;"	f	class:BillUser
addMoney	BillServer/StockConsign.cpp	/^bool Consign::addMoney(DWORD accid,DWORD num)$/;"	f	class:Consign
addMoney	ScenesServer/Chat.cpp	/^bool Gm::addMoney(SceneUser *pUser, const char *para)$/;"	f	class:Gm
addMoney	ScenesServer/zObject.cpp	/^void Packages::addMoney(DWORD num,const char *disc,const char *note,bool notify)$/;"	f	class:Packages
addMp	ScenesServer/ChallengeGame.h	/^	void addMp(DWORD value)$/;"	f	class:MagicPoint
addNewZonePos	ScenesServer/SceneManager.cpp	/^void SceneManager::addNewZonePos(DWORD x,DWORD y)$/;"	f	class:SceneManager
addNineSeptExp	ScenesServer/SceneUser.cpp	/^void SceneUser::addNineSeptExp(DWORD dwSeptID)$/;"	f	class:SceneUser
addNineSeptNormalExp	ScenesServer/SceneUser.cpp	/^void SceneUser::addNineSeptNormalExp(DWORD dwSeptID)$/;"	f	class:SceneUser
addNumber	tmpcode/commond.h	/^	BYTE addNumber;         \/\/“∆∂Ø∫ÛµƒŒª÷√$/;"	m	struct:st_MoveItemStoreHouseUserCmd
addObject	ScenesServer/CardManager.cpp	/^bool GameCardM::addObject(zCard * o)$/;"	f	class:GameCardM
addObject	ScenesServer/CardManager.cpp	/^bool GlobalCardIndex::addObject(zCard * o)$/;"	f	class:GlobalCardIndex
addObject	ScenesServer/ObjectManager.cpp	/^bool GlobalObjectIndex::addObject(zObject * o)$/;"	f	class:GlobalObjectIndex
addObject	ScenesServer/ObjectManager.cpp	/^bool UserObjectM::addObject(zObject * o)$/;"	f	class:UserObjectM
addObject	ScenesServer/Scene.cpp	/^bool Scene::addObject(unsigned short dupIndex,zObject *ob,const zPos &pos,const unsigned long overdue_msecs,const unsigned long dwID,int protime)$/;"	f	class:Scene
addObject	ScenesServer/Scene.cpp	/^bool Scene::addObject(unsigned short dupIndex,zObjectB *ob,const int num,const zPos &pos,const unsigned long dwID,DWORD npc_mul, DWORD teamID )$/;"	f	class:Scene
addObject	ScenesServer/zCard.cpp	/^bool CardSlots::addObject(zCard *srcObj,bool needFind,int packs)$/;"	f	class:CardSlots
addObject	ScenesServer/zObject.cpp	/^bool Packages::addObject(zObject *srcObj,bool needFind,int packs)$/;"	f	class:Packages
addObjectNum	ScenesServer/CardManager.cpp	/^int GameCardM::addObjectNum(SceneUser* user,DWORD id,DWORD number,zCard* & orig_ob,Obj_vec& new_obs,BYTE upgrade,bool bindit)$/;"	f	class:GameCardM
addObjectNum	ScenesServer/ObjectManager.cpp	/^int UserObjectM::addObjectNum(SceneUser* user,DWORD id,DWORD number,zObject* & orig_ob,Obj_vec& new_obs,BYTE upgrade,bool bindit)$/;"	f	class:UserObjectM
addObjectNum	ScenesServer/SceneUser.cpp	/^int SceneUser::addObjectNum(DWORD id,DWORD num,BYTE upgrade,int notify,bool bindit)$/;"	f	class:SceneUser
addOfflineExp	tmpcode/commond.h	/^	DWORD addOfflineExp;	\/\/‘ˆº”µƒ¿Îœﬂæ≠—È$/;"	m	struct:addOfflineExpFireplaceUserCmd
addOfflineExpFireplaceUserCmd	tmpcode/commond.h	/^	addOfflineExpFireplaceUserCmd()$/;"	f	struct:addOfflineExpFireplaceUserCmd
addOfflineExpFireplaceUserCmd	tmpcode/commond.h	/^struct addOfflineExpFireplaceUserCmd: public stHouseUserCmd$/;"	s
addOneHeroExp	ScenesServer/HeroInfoManager.cpp	/^void HeroInfoManager::addOneHeroExp(SceneUser &user, const WORD occupation, const DWORD value)$/;"	f	class:HeroInfoManager
addOtherExp	ScenesServer/SceneNpc.cpp	/^DWORD SceneNpc::addOtherExp(DWORD wdExp,SceneUser *pUser)$/;"	f	class:SceneNpc
addPetExp	ScenesServer/SceneNpc.h	/^  virtual void addPetExp(DWORD num,bool addPet,bool addCartoon){}$/;"	f	class:SceneNpc
addPetExp	ScenesServer/SceneUser.cpp	/^void SceneUser::addPetExp(DWORD num,bool addPet,bool addCartoon)$/;"	f	class:SceneUser
addProduce	tmpcode/commond.h	/^	DWORD addProduce;$/;"	m	struct:stRetPollInfoUserCmd
addPropertyNum	tmpcode/commond.h	/^    DWORD addPropertyNum;   \/\/Ω¯ªØ‘ˆº”µƒ Ù–‘÷µ$/;"	m	struct:t_HorseData
addPropertyType	tmpcode/commond.h	/^    BYTE addPropertyType;   \/\/Ω¯ªØ‘ˆº”µƒ Ù–‘¿‡–Õ$/;"	m	struct:t_HorseData
addProtect	ScenesServer/ScenePk.cpp	/^bool ScenePkState::addProtect(SceneUser * pThis,DWORD time)$/;"	f	class:ScenePkState
addRelation	SessionServer/CRelationManager.cpp	/^void CRelationManager::addRelation(const DWORD dwID,const BYTE type)$/;"	f	class:CRelationManager
addScene	SessionServer/SessionManager.cpp	/^bool SceneSessionManager::addScene(SceneSession *scene)$/;"	f	class:SceneSessionManager
addSceneNpc	ScenesServer/SceneNpcManager.cpp	/^bool SceneNpcManager::addSceneNpc(SceneNpc *sceneNpc)$/;"	f	class:SceneNpcManager
addSeptTime	base/SessionCommand.h	/^      DWORD addSeptTime;$/;"	m	struct:Cmd::Session::t_sendUserRelationID
addServer	SuperServer/ServerManager.cpp	/^void ServerManager::addServer(ServerTask *task)$/;"	f	class:ServerManager
addSessionTask	SessionServer/SessionTaskManager.cpp	/^void SessionTaskManager::addSessionTask(SessionTask *task)$/;"	f	class:SessionTaskManager
addShield	ScenesServer/CardPk.cpp	/^bool zCard::addShield()$/;"	f	class:zCard
addShout	ScenesServer/CardPk.cpp	/^bool zCard::addShout(DWORD skillID)$/;"	f	class:zCard
addSkill	ScenesServer/SkillManager.cpp	/^bool UserSkillM::addSkill(zSkill *s)$/;"	f	class:UserSkillM
addSkill	base/zDatabase.h	/^    void addSkill(int type,DWORD id,int needLevel,int rate,int coefficient = 0)$/;"	f	struct:zNpcB
addSkillData	ScenesServer/SceneSkill.cpp	/^bool SceneUser::addSkillData(const Cmd::stAddUserSkillPropertyUserCmd *rev)$/;"	f	class:SceneUser
addSneak	ScenesServer/CardPk.cpp	/^bool zCard::addSneak()$/;"	f	class:zCard
addSpecialNpc	ScenesServer/SceneNpcManager.cpp	/^bool SceneNpcManager::addSpecialNpc(SceneNpc *sceneNpc,bool force)$/;"	f	class:SceneNpcManager
addTask	ScenesServer/scriptTickTask.h	/^	bool addTask(scriptTask *_task)$/;"	f	class:scriptTaskManagement
addTaunt	ScenesServer/CardPk.cpp	/^bool zCard::addTaunt()$/;"	f	class:zCard
addTempArchiveMember	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::addTempArchiveMember(DWORD type,char *out,DWORD maxSize)$/;"	f	class:SceneUser
addTicket	ScenesServer/zObject.cpp	/^void Packages::addTicket(DWORD num,const char *disc,const char *note,bool notify)$/;"	f	class:Packages
addToContainer	BillServer/BillClient.cpp	/^void BillClient::addToContainer()$/;"	f	class:BillClient
addToContainer	FLServer/LoginTask.cpp	/^void LoginTask::addToContainer()$/;"	f	class:LoginTask
addToContainer	FLServer/UserTask.cpp	/^void UserTask::addToContainer()$/;"	f	class:UserTask
addToContainer	GatewayServer/GatewayTask.cpp	/^void GatewayTask::addToContainer()$/;"	f	class:GatewayTask
addToContainer	GatewayServer/SceneClient.cpp	/^void SceneClient::addToContainer()$/;"	f	class:SceneClient
addToContainer	SessionServer/SessionTask.cpp	/^void SessionTask::addToContainer()$/;"	f	class:SessionTask
addToContainer	SuperServer/BroadClient.cpp	/^void BroadClient::addToContainer()$/;"	f	class:BroadClient
addToContainer	SuperServer/FLClient.cpp	/^void FLClient::addToContainer()$/;"	f	class:FLClient
addToContainer	SuperServer/InfoClient.cpp	/^void InfoClient::addToContainer()$/;"	f	class:InfoClient
addToContainer	SuperServer/RolechangeClient.cpp	/^void RolechangeClient::addToContainer()$/;"	f	class:RolechangeClient
addToContainer	SuperServer/RoleregClient.cpp	/^void RoleregClient::addToContainer()$/;"	f	class:RoleregClient
addToContainer	SuperServer/ServerTask.cpp	/^void ServerTask::addToContainer()$/;"	f	class:ServerTask
addToContainer	base/zTCPClientTask.h	/^	virtual void addToContainer() {};$/;"	f	class:zTCPClientTask
addToContainer	base/zTCPTask.h	/^	virtual void addToContainer() {}$/;"	f	class:zTCPTask
addToContainer	roleChangeServer/ChangeTask.cpp	/^void ChangeTask::addToContainer()$/;"	f	class:ChangeTask
addTuJian	ScenesServer/CardTujianManager.cpp	/^bool CardTujianManager::addTuJian(SceneUser& user, const DWORD id)$/;"	f	class:CardTujianManager
addUser	BillServer/BillUserManager.h	/^    bool addUser(BillUser *user)$/;"	f	class:BillUserManager
addUser	GatewayServer/GateUserManager.cpp	/^bool GateUserManager::addUser(zSceneEntry *user)$/;"	f	class:GateUserManager
addUser	ScenesServer/SceneUserManager.cpp	/^bool SceneRecycleUserManager::addUser(zSceneEntry *user)$/;"	f	class:SceneRecycleUserManager
addUser	ScenesServer/SceneUserManager.cpp	/^bool SceneUserManager::addUser(SceneUser *user)$/;"	f	class:SceneUserManager
addUser	SessionServer/HeroCardManager.cpp	/^void HeroCardManager::addUser(DWORD userID, BYTE type, DWORD score, DWORD cardsNumber)$/;"	f	class:HeroCardManager
addUser	base/zUserManager.h	/^	bool addUser(zSceneEntry *user)$/;"	f	class:zUserManager
addUserCount	ScenesServer/Scene.h	/^    const DWORD addUserCount() { return ++userCount; }$/;"	f	class:Scene
addUserOnlyByAccID	GatewayServer/GateUserManager.cpp	/^bool GateUserManager::addUserOnlyByAccID(GateUser *user)$/;"	f	class:GateUserManager
addWayPoint	ScenesServer/WayPoint.cpp	/^bool WayPointM::addWayPoint(const WayPoint &wp)$/;"	f	class:WayPointM
addWindfury	ScenesServer/CardPk.cpp	/^bool zCard::addWindfury()$/;"	f	class:zCard
add_exp	ScenesServer/script_func.cpp	/^void add_exp(SceneUser* user,DWORD num,bool addPet,DWORD dwTempID,BYTE byType,bool addCartoon)$/;"	f
add_f	ScenesServer/script_func.cpp	/^Vars* GlobalVars::add_f()$/;"	f	class:GlobalVars
add_g	ScenesServer/script_func.cpp	/^Vars* GlobalVars::add_g()$/;"	f	class:GlobalVars
add_menu	ScenesServer/Quest.cpp	/^void QuestList::add_menu(const std::string& menu)$/;"	f	class:QuestList
add_money	ScenesServer/script_func.cpp	/^void add_money(SceneUser* user,int money)$/;"	f
add_quest	ScenesServer/Quest.cpp	/^void QuestList::add_quest(DWORD id,const Vars& vars,SceneUser& user,bool notify)$/;"	f	class:QuestList
add_t	ScenesServer/script_func.cpp	/^Vars* GlobalVars::add_t()$/;"	f	class:GlobalVars
addatk	tmpcode/commond.h	/^			WORD addatk;    $/;"	m	struct:LingQiPkData::__anon329::__anon330
addhp	tmpcode/commond.h	/^			WORD addhp;$/;"	m	struct:LingQiPkData::__anon329::__anon330
addmdef	tmpcode/commond.h	/^			WORD addmdef;   $/;"	m	struct:LingQiPkData::__anon329::__anon330
addmenp	ScenesServer/ScenePk.h	/^      SWORD addmenp;   \/\/ Â¢ûÂä†Á≤æÁ•ûÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
addmoney	tmpcode/commond.h	/^        DWORD addmoney;\/\/”≈ª›ªÓ∂Ø”≈ª›∂‡…Ÿ«Æ, µ•Œª «“¯$/;"	m	struct:stReturnExchangeCardIDTradeUserCmd
addmp	tmpcode/commond.h	/^			WORD addmp;$/;"	m	struct:LingQiPkData::__anon329::__anon330
addpdef	tmpcode/commond.h	/^			WORD addpdef;   $/;"	m	struct:LingQiPkData::__anon329::__anon330
addr	base/zSocket.h	/^	struct sockaddr_in addr;          \/**< Ã◊Ω”ø⁄µÿ÷∑ *\/$/;"	m	class:zSocket	typeref:struct:zSocket::sockaddr_in
addr	tmpcode/commond.h	/^	char addr[0]; \/\/Õ∆π„‘±¡¥Ω”$/;"	m	struct:stRetPromoterAddressUserCmd
addrate	tmpcode/commond.h	/^	DWORD addrate;                  \/\/\/ µ±«∞æ´¡È◊£∏£∂‘«øªØ≥…π¶¬ µƒº”≥…∞Ÿ∑÷±»$/;"	m	struct:stEquipIntensifyInfo
adistance	base/zDatabase.h	/^    DWORD  adistance;      \/\/ π•ª˜º‰∏Ù$/;"	m	struct:zNpcB
adopter	base/Command.h	/^  char adopter[MAX_NAMESIZE];  \/\/È¢ÜÂÖª‰∫∫$/;"	m	struct:Cmd::t_CartoonData
adopter	base/SessionCommand.h	/^      char adopter[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_chargeNotifyCartoon_SceneSession
adopter	base/SessionCommand.h	/^      char adopter[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_notifyCartoon_SceneSession
adverTempid	tmpcode/commond.h	/^	DWORD adverTempid; \/\/∂‘∑Ωµƒtempid$/;"	m	struct:stSimulateMagicUserCmd
advertise	tmpcode/commond.h	/^        char  advertise[0];     \/\/±‰¡øƒ⁄»›$/;"	m	struct:stReturnBargirlADContent
afpoint	ScenesServer/zObject.h	/^  WORD afpoint;$/;"	m	class:Equips
afreetMode	ScenesServer/SceneEntryPk.h	/^    bool afreetMode; \/\/\/ ÊÅ∂È≠îÊùÄÊó†Ëµ¶ÔºàÁ†ç‰∫∫ÂøÖÊ≠ªÔºâ$/;"	m	struct:SceneEntryPk
aftype	ScenesServer/zObject.h	/^  WORD aftype;  $/;"	m	class:Equips
age	tmpcode/commond.h	/^	WORD age;   \/\/ √ª»ÀªÓµΩ255∞…,ªπ «‘§¡Ù∞…		\/\/∏ƒŒ™¥ÊÀ˘ Ù≥« –$/;"	m	struct:stPersonalSign
agi	base/Command.h	/^	DWORD agi;               \/\/ÊïèÊç∑$/;"	m	struct:Cmd::t_PetData
agi	tmpcode/commond.h	/^	WORD agi;               \/\/√ÙΩ›$/;"	m	struct:t_PetData
agree	tmpcode/commond.h	/^	 bool agree;     \/\/true±Ì æΩ” ‹—˚«Î£¨false±Ì ææ‹æ¯—˚«Î$/;"	m	struct:stJoin_ChannelUserCmd
agree	tmpcode/commond.h	/^	BYTE agree;     \/\/\/ 1:Õ¨“‚£¨ 0:≤ªÕ¨“‚$/;"	m	struct:stRetMarriageHoldCmd
agreeInvite	tmpcode/commond.h	/^	 BYTE agreeInvite;$/;"	m	struct:stOtherDrinkBarCmd
ahData	ScenesServer/SceneUser.h	/^    AllHeroData ahData; $/;"	m	struct:SceneUser
ai	base/Command.h	/^	WORD ai;                \/\/AI$/;"	m	struct:Cmd::t_PetData
ai	base/zDatabase.h	/^    DWORD  ai;          \/\/ ai$/;"	m	struct:zNpcB
ai	tmpcode/commond.h	/^	WORD ai;                \/\/AI$/;"	m	struct:t_PetData
aif	ScenesServer/SceneNpc.h	/^  DWORD aif;$/;"	m	class:SceneNpc
akdodge	ScenesServer/ScenePk.h	/^      SWORD akdodge;    \/\/Èó™ÈÅøÁéá‰∏äÂçá37$/;"	m	struct:SkillState::__anon155::__anon156
akdodge	ScenesServer/zObject.h	/^  WORD akdodge;        \/\/ Ë∫≤ÈÅøÁéá$/;"	m	class:Equips
akdodge	base/Object.h	/^	WORD akdodge;				\/\/ ∂„±‹¬ $/;"	m	struct:t_Object
akdodge	base/zDatabase.h	/^    WORD akdodge;				\/\/ ∂„±‹¬ $/;"	m	struct:zObjectB
akspeed	ScenesServer/zObject.h	/^  WORD akspeed;        \/\/ ÊîªÂáªÈÄüÂ∫¶$/;"	m	class:Equips
akspeed	base/Object.h	/^	WORD akspeed;				\/\/ π•ª˜ÀŸ∂»$/;"	m	struct:t_Object
akspeed	base/zDatabase.h	/^    WORD akspeed;				\/\/ π•ª˜ÀŸ∂»$/;"	m	struct:zObjectB
alias	base/Command.h	/^  char alias[MAX_NAMESIZE];      \/\/ Ê∂àÊÅØÊé•Êî∂ËÄÖÁöÑÂà´Âêç$/;"	m	struct:Cmd::stReturnUnionMemberInfoCmd
alias	tmpcode/commond.h	/^	char alias[MAX_NAMESIZE];      \/\/ œ˚œ¢Ω” ’’ﬂµƒ±√˚$/;"	m	struct:stReturnUnionMemberInfoCmd
aliasName	base/Command.h	/^  char aliasName[MAX_NAMESIZE];       \/\/ ÊàêÂëòÂà´Âêç$/;"	m	struct:Cmd::stBroadcastSeptMemberInfo
aliasName	tmpcode/commond.h	/^	WORD  aliasName;                                        \/\/ ±√˚√∂æŸ$/;"	m	struct:stSeptRember
aliasName	tmpcode/commond.h	/^	WORD  aliasName;                     \/\/ ±√˚√∂æŸ$/;"	m	struct:stBroadcastSeptMemberInfo
aliasname	base/Command.h	/^  char  aliasname[MAX_NAMESIZE];      \/\/ ÊàêÂëòÂà´Âêç[ËÅåÂä°ÂêçÁß∞]$/;"	m	struct:Cmd::stUnionRember
aliasname	base/Command.h	/^  char aliasname[MAX_NAMESIZE];        \/\/ Â∏Æ‰ºóÂà´Âêç$/;"	m	struct:Cmd::stChangeUnionMemberAliasName
aliasname	base/Command.h	/^  char aliasname[MAX_NAMESIZE];        \/\/ ÊóèÂëòÂà´Âêç$/;"	m	struct:Cmd::stChangeSeptMemberAliasName
aliasname	base/Command.h	/^  char aliasname[MAX_NAMESIZE];      \/\/ ÊàêÂëòÂà´Âêç$/;"	m	struct:Cmd::stBroadcastMemberInfo
aliasname	base/Sept.h	/^  char    aliasname[MAX_NAMESIZE+1];    \/\/ ±√˚$/;"	m	struct:SeptDef::stSeptMemberInfo
aliasname	base/Union.h	/^  char    aliasname[MAX_NAMESIZE+1];       \/\/ ‰ºöÂëòÂà´Âêç$/;"	m	struct:UnionDef::stUnionMemberInfo
aliasname	tmpcode/commond.h	/^		BYTE  aliasname;                                \/\/ ≥…‘±±√˚[√∂æŸ]$/;"	m	struct:stUnionRember
aliasname	tmpcode/commond.h	/^	BYTE  aliasname;                                \/\/ ≥…‘±±√˚[√∂æŸ]$/;"	m	struct:stBroadcastMemberInfo
alive	base/zThread.h	/^	volatile bool alive;      \/**< Á∫øÁ®ãÊòØÂê¶Âú®ËøêË°å *\/$/;"	m	class:zThread
all	GatewayServer/ScreenIndex.h	/^	SceneEntry_SET all;$/;"	m	class:ScreenIndex
all	ScenesServer/zSceneEntryIndex.h	/^    SceneEntry_SET all[zSceneEntry::SceneEntry_MAX];$/;"	m	class:zSceneEntryIndex
all	tmpcode/commond.h	/^         WORD  all;                      \/\/µ±«∞Ã”…±µÿÕº÷–µƒ◊‹»À ˝$/;"	m	struct:stGuyDeadDaTaoShaUserCmd
allClients	BillServer/BillClientManager.h	/^    BillClientContainer allClients;$/;"	m	class:BillClientManager
allClients	GatewayServer/SceneClientManager.h	/^	SceneClient_map allClients;$/;"	m	class:SceneClientManager
allClients	SuperServer/BroadClientManager.h	/^    BroadClientContainer allClients;$/;"	m	class:BroadClientManager
allClients	SuperServer/FLClientManager.h	/^    FLClientContainer allClients;$/;"	m	class:FLClientManager
allClients	SuperServer/InfoClientManager.h	/^    InfoClient_map allClients;$/;"	m	class:InfoClientManager
allClients	SuperServer/RolechangeClientManager.h	/^    RolechangeClient_map allClients;$/;"	m	class:RolechangeClientManager
allClients	SuperServer/RoleregClientManager.h	/^    RoleRegClientContainer allClients;$/;"	m	class:RoleregClientManager
allEnd	ScenesServer/Scene.h	/^      DWORD allEnd;\/\/ÊÄªÁªìÊùüÊó∂Èó¥$/;"	m	struct:Scene::FixedRush
allGameCount	SessionServer/HeroCardManager.h	/^    std::map<WORD, DWORD>   allGameCount;	\/\/ΩÁ”ÚID---∂‘’Ωæ÷ ˝$/;"	m	class:HeroCardManager
allHitCount	base/zDatabase.h	/^    DWORD allHitCount;$/;"	m	struct:zNpcB
allPage	tmpcode/commond.h	/^	DWORD allPage;  \/\/◊‹π≤µƒ“≥ ˝$/;"	m	struct:t_RetCountrySeptNotice
allPoint	tmpcode/commond.h	/^		DWORD   allPoint;                               \/\/¿€ª˝æ∫ººµ„$/;"	m	struct:stRetPointListZhenxuanUserCmd::PointData
allScore	tmpcode/commond.h	/^		DWORD   allScore;             \/\/ΩÒÃÏ◊‹µ√∑÷$/;"	m	struct:stReturnScoreListWeekendZhenxuanUserCmd::PlayerScore
allScore	tmpcode/commond.h	/^	DWORD allScore;                         \/\/∏±±æ∑÷ ˝$/;"	m	struct:stRefreshScoreTwilightCityUserCmd
allScore	tmpcode/commond.h	/^	WORD allScore;         \/\/◊‹ª˝∑÷$/;"	m	struct:stRefreshUserInfoWeekendZhenxuanUserCmd
allSorce	tmpcode/commond.h	/^        allSorce()$/;"	f	struct:stSendAllScoreCmd::allSorce
allSorce	tmpcode/commond.h	/^    struct allSorce$/;"	s	struct:stSendAllScoreCmd
allStart	ScenesServer/Scene.h	/^      DWORD allStart;\/\/ÊÄªÂºÄÂßãÊó∂Èó¥$/;"	m	struct:Scene::FixedRush
allTiles	ScenesServer/Scene.h	/^    zTiles allTiles;$/;"	m	class:Scene
all_in_gold	BillServer/BillUser.h	/^    DWORD all_in_gold;    \/**< ÊÄªÂÜ≤ÂÄºÈáëÂ∏ÅÊï∞Èáè *\/$/;"	m	class:BillUser
all_in_money	BillServer/BillUser.h	/^    DWORD all_in_money;    \/**< ÊÄªÂÜ≤ÂÄºÈì∂Â∏ÅÊï∞Èáè *\/$/;"	m	class:BillUser
all_mode	ScenesServer/Chat.h	/^      all_mode =   0x1f,\/\/\/ all_mode$/;"	e	enum:Gm::__anon179
all_out_gold	BillServer/BillUser.h	/^    DWORD all_out_gold;    \/**< ÊÄªÊèêÂèñÈáëÂ∏ÅÊï∞Èáè *\/$/;"	m	class:BillUser
all_out_money	BillServer/BillUser.h	/^    DWORD all_out_money;    \/**< ÊÄªÊèêÂèñÈì∂Â∏ÅÊï∞Èáè *\/$/;"	m	class:BillUser
all_tax_gold	BillServer/BillUser.h	/^    DWORD all_tax_gold;    \/**< ÊÄªÁ®éÊî∂ *\/$/;"	m	class:BillUser
all_tax_money	BillServer/BillUser.h	/^    DWORD all_tax_money;  \/**< ÊÄªÁ®éÊî∂ *\/ $/;"	m	class:BillUser
alloptions	base/zArg.h	/^    struct argp_option *alloptions;$/;"	m	class:zArg	typeref:struct:zArg::argp_option
allsize	tmpcode/commond.h	/^	int allsize() { return sizeof(*this) + size * sizeof(dataList[0]);}$/;"	f	struct:stToAttAttackMagicUserCmd
allsize	tmpcode/commond.h	/^	int allsize() { return sizeof(*this) + size * sizeof(dataList[0]);}$/;"	f	struct:stToDefAttackMagicUserCmd
allsize	tmpcode/commond.h	/^	int allsize() { return sizeof(*this) + size * sizeof(dataList[0]);}$/;"	f	struct:stToNineAttackMagicUserCmd
allsize	tmpcode/commond.h	/^    int allsize(){return sizeof(*this) + size* MAX_NAMESIZE;}    $/;"	f	struct:stShowDynamicMapUserCmd
allyVisit	base/zDatabase.h	/^    DWORD  allyVisit;      \/\/ø…±ª√Àπ˙∑√Œ µƒµ»º∂ 0£∫≤ªø…∑√Œ  1£∫1º∂ø…∑√Œ  2£∫2º∂ø…∑√Œ $/;"	m	struct:zNpcB
alreadyAwarded	base/Command.h	/^	BYTE    alreadyAwarded;  \/\/  «∑Ò“—¡Ï»°Ω±¿¯$/;"	m	struct:Cmd::ListData
alreadyAwarded	tmpcode/commond.h	/^	BYTE    alreadyAwarded;  \/\/  «∑Ò“—¡Ï»°Ω±¿¯$/;"	m	struct:ListData
angel	base/Command.h	/^  WORD angel;$/;"	m	struct:Cmd::t_MainUserData
angel	tmpcode/commond.h	/^	WORD  angel;			\/\/ ÿª§…Ò$/;"	m	struct:t_MainUserData
angelMode	ScenesServer/SceneEntryPk.h	/^    bool angelMode;  \/\/\/ Â§©‰ΩøÊó†ÊïåÔºà‰ºò‰∫éÊÅ∂È≠î,Á†ç‰∏çÊ≠ªÔºâ$/;"	m	struct:SceneEntryPk
ani	tmpcode/commond.h	/^	DWORD   ani[MAX_ANILENGTH];    \/\/ani_id - ≥£–ß–‘Ãÿ–ßid$/;"	m	struct:st_CharShow2
aniSize	tmpcode/commond.h	/^	DWORD   aniSize;$/;"	m	struct:st_CharShow2
anonymous	tmpcode/commond.h	/^	BYTE anonymous;		\/\/ «∑Òƒ‰√˚∑¢ÀÕπ„≤•:0-≤ªƒ‰√˚£¨1-ƒ‰√˚$/;"	m	struct:rqDrawCardHappyCardBoxUserCmd
anonymous	tmpcode/commond.h	/^	BYTE anonymous;		\/\/ «∑Òƒ‰√˚∑¢ÀÕπ„≤•:0-≤ªƒ‰√˚£¨1-ƒ‰√˚$/;"	m	struct:rqGetRewardHappyCardBoxUserCmd
anonymous	tmpcode/commond.h	/^	BYTE anonymous;\/\/ «∑Òƒ‰√˚∑¢ÀÕπ„≤•:0-≤ªƒ‰√˚£¨1-ƒ‰√˚$/;"	m	struct:rq_stCloseHappyCardBoxUserCmd
anpc	ScenesServer/SceneNpc.h	/^  zNpcB *anpc;$/;"	m	class:SceneNpc
answer	tmpcode/commond.h	/^		WORD answer; 		\/\/—°œÓ∂˛Ω¯÷∆¥Æ$/;"	m	struct:stSurveyResultUserCmd::__anon315
answerCount	base/CharBase.h	/^  DWORD answerCount;      \/\/\/ ÂΩìÂ§©Á≠îÈ¢òÊ¨°Êï∞$/;"	m	struct:CharBase
answerID	base/Command.h	/^  DWORD answerID; \/\/ Á≠îÊ°à$/;"	m	struct:Cmd::stAnswerQuiz
answerMarry	ScenesServer/SceneUser.h	/^    bool answerMarry; \/\/\/ÂêåÊÑèÈÖçÂÅ∂ÁªìÂ©öËØ∑Ê±ÇÊ†áÂøó$/;"	m	struct:SceneUser
answerName	tmpcode/commond.h	/^               char answerName[MAX_NAMESIZE];$/;"	m	union:reqInviteChunYunCmd::__anon370
answerTempID	tmpcode/commond.h	/^        DWORD answerTempID;     \/\/±ª—˚«Î∑Ωid$/;"	m	struct:stAskDance
answerTempID	tmpcode/commond.h	/^        DWORD answerTempID;   \/\/±ª—˚«Î∑Ωid$/;"	m	struct:stAnswerDance
answerTempID	tmpcode/commond.h	/^        DWORD answerTempID;   \/\/±ª—˚«Î∑Ωid$/;"	m	struct:stStopDance
answerid	tmpcode/commond.h	/^	DWORD     answerid;    \/\/±ª—˚«Î∑Ωid  À´»ÀŒË ±∫Ú π”√$/;"	m	struct:stStopDanceMapScreenUserCmd
answerid	tmpcode/commond.h	/^        DWORD     answerid;   \/\/±ª—˚«Î∑Ωid  À´»ÀŒË ±∫Ú π”√$/;"	m	struct:t_MapDanceData
antibang	tmpcode/commond.h	/^	WORD antibang;	\/\/ ∑¿±¨ª˜$/;"	m	struct:t_MainUserData
appearOffline	tmpcode/commond.h	/^	BYTE appearOffline;  \/\/  «∑Ò“˛…Ì(œ‘ æÕ—ª˙)$/;"	m	struct:stAppearOfflineLTQUserCmd
appendAttack	ScenesServer/ScenePk.cpp	/^void SceneUser::appendAttack(const Cmd::stAttackMagicUserCmd *rev)$/;"	f	class:SceneUser
appendMaxDamage	ScenesServer/SceneNpc.h	/^  WORD appendMaxDamage;$/;"	m	class:SceneNpc
appendMinDamage	ScenesServer/SceneNpc.h	/^  WORD appendMinDamage;$/;"	m	class:SceneNpc
appenddam	ScenesServer/ScenePk.h	/^      SWORD appenddam;  \/\/‰∫ßÁîüÈ¢ùÂ§ñ‰º§ÂÆ≥83$/;"	m	struct:SkillState::__anon155::__anon156
appendmaxpet	ScenesServer/zObject.h	/^  WORD appendmaxpet;         \/\/ ÁªôÂÆ†Âè¨Âî§ÂÖΩËÉΩÂäõÂ¢ûÂº∫ÊúÄÂ§ßÂÄº$/;"	m	class:Equips
appendminpet	ScenesServer/zObject.h	/^  WORD appendminpet;         \/\/ ÁªôÂÆ†Âè¨Âî§ÂÖΩËÉΩÂäõÂ¢ûÂº∫ÊúÄÂ∞èÂÄº$/;"	m	class:Equips
applyInfo	tmpcode/commond.h	/^	struct applyInfo$/;"	s	struct:stRetCriminalApplyInfo
applyName	tmpcode/commond.h	/^		char applyName[MAX_NAMESIZE];$/;"	m	struct:stRetCriminalApplyInfo::applyInfo
applyType	tmpcode/commond.h	/^	BYTE applyType;$/;"	m	struct:stApplySeptAvatar
area	base/Command.h	/^    DWORD area;$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
area	tmpcode/commond.h	/^		DWORD area;          \/\/ µÿÕº«¯”ÚID$/;"	m	struct:stClientNewMap
area	tmpcode/commond.h	/^	BYTE area;			\/\/ –°«¯±‡∫≈$/;"	m	struct:rqBuyHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;	\/\/±¨’®∑∂Œß£¨1±Ì æ1∏Ò£¨2±Ì æ2∏Ò$/;"	m	struct:stShowBombEffectUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:reqGoToBedHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:req_ObjVisitHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:rqAreaDataHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:rqEnterHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:rqJoinHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:rqQuitHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:rt_memberListHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:stResSoilInfoHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:stUpdateHouseRoomRenQiUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:st_BanishRoomerHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:st_CancelConscribeHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:st_ConscribeRoomerHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:st_DriveAwayHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:st_MoveItemStoreHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:st_RequestLevelUpHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:st_RequestManageHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:st_RequestRentHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:st_RequestRoomerNameHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:st_RetManageHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:st_StorageMoneyHouseUserCmd
area	tmpcode/commond.h	/^	BYTE area;$/;"	m	struct:st_TakeOutItemStoreHouseUserCmd
area	tmpcode/commond.h	/^    BYTE area;$/;"	m	struct:rtAreaDataHouseUserCmd
area	tmpcode/commond.h	/^    BYTE area;$/;"	m	struct:rt_InsertFlowerHouseUserCmd
areaID	tmpcode/commond.h	/^	DWORD areaID;$/;"	m	struct:stRetTrafficInfoUserCmd
area_name	base/Command.h	/^    char area_name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
area_name	tmpcode/commond.h	/^		char area_name[MAX_NAMESIZE];    \/\/ µÿÕº«¯”Ú√˚≥∆$/;"	m	struct:stClientNewMap
aresult	tmpcode/commond.h	/^	BYTE aresult;$/;"	m	struct:stPersonResultChallengeUserCmd
aresult	tmpcode/commond.h	/^	BYTE aresult;$/;"	m	struct:stSeptPracResultChallengeUserCmd
arg	tmpcode/commond.h	/^        DWORD arg; \/\/±∏”√,–«∆⁄∂˛±Ì ææ≠—È$/;"	m	struct:stTopicActiveUserCmd
arg2	tmpcode/commond.h	/^        DWORD arg2; \/\/±∏”√,–«∆⁄∂˛±Ì æ ±º‰$/;"	m	struct:stTopicActiveUserCmd
argInstance	base/zArg.h	/^    static zArg * argInstance;$/;"	m	class:zArg
argp	base/zArg.h	/^    struct argp argp;$/;"	m	class:zArg	typeref:struct:zArg::argp
argp_program_bug_address	tools/codepg.cpp	/^const char* argp_program_bug_address = "<wangchong-fly@163.com>";$/;"	v
argp_program_bug_address	tools/xmlpg.cpp	/^const char* argp_program_bug_address = "<test@163.com>";$/;"	v
argp_program_version	BillServer/BillServer.cpp	/^const char *argp_program_version = "Program version ";$/;"	v
argp_program_version	FLServer/FLServer.cpp	/^const char *argp_program_version = "Program version ";$/;"	v
argp_program_version	GatewayServer/GatewayServer.cpp	/^const char *argp_program_version = "Program version ";$/;"	v
argp_program_version	RecordServer/RecordServer.cpp	/^const char *argp_program_version = "Program version ";$/;"	v
argp_program_version	Robot/ClientService.cpp	/^const char *argp_program_version = "Program version ";$/;"	v
argp_program_version	ScenesServer/ScenesServer.cpp	/^const char *argp_program_version = "Program version ";$/;"	v
argp_program_version	SessionServer/SessionServer.cpp	/^const char *argp_program_version = "Program version ";$/;"	v
argp_program_version	SuperServer/SuperServer.cpp	/^const char *argp_program_version = "Program version ";$/;"	v
argp_program_version	roleChangeServer/roleChangeServer.cpp	/^const char *argp_program_version = "Program version ";$/;"	v
argp_program_version	roleRegServer/roleRegServer.cpp	/^const char *argp_program_version = "Program version ";$/;"	v
argp_program_version	tools/codepg.cpp	/^const char* argp_program_version = "xmlpg - 1.0";$/;"	v
argp_program_version	tools/xmlpg.cpp	/^const char* argp_program_version = "xmlpg - 1.0";$/;"	v
argsParser	base/zArg.h	/^typedef error_t(*argsParser)(int key, char *arg, struct argp_state *state);$/;"	t
args_doc	tools/codepg.cpp	/^static char args_doc[] = "FILE";$/;"	v
args_doc	tools/xmlpg.cpp	/^static char args_doc[] = "FILE";$/;"	v
argument	base/xml/xml_utility.h	/^    struct argument$/;"	s	namespace:detail
argument_dump	base/xml/xml_utility.h	/^	argument_dump(std::ostream& _os, int _deep = 0)$/;"	f	struct:detail::argument_dump
argument_dump	base/xml/xml_utility.h	/^    struct argument_dump : public argument$/;"	s	namespace:detail
argument_init_name	base/xml/xml_utility.h	/^    struct argument_init_name : public argument$/;"	s	namespace:detail
argument_init_value	base/xml/xml_utility.h	/^    struct argument_init_value : public argument$/;"	s	namespace:detail
argument_parse	base/xml/xml_utility.h	/^	argument_parse(zXMLParser& _xml, xmlNodePtr _node)$/;"	f	struct:detail::argument_parse
argument_parse	base/xml/xml_utility.h	/^    struct argument_parse : public argument$/;"	s	namespace:detail
armor	base/Card.h	/^	DWORD armor;		\/\/ª§º◊÷µ$/;"	m	struct:t_Card
armyID	base/Command.h	/^  DWORD armyID; \/\/ ÂÜõÈòüID$/;"	m	struct:Cmd::stAddArmyCaptainUserCmd
armyName	ScenesServer/SceneUser.h	/^	char  armyName[MAX_NAMESIZE];    \/\/ ÊâÄÂú®ÂÜõÈòüÂêçÁß∞$/;"	m	struct:SceneUser
armyName	base/Command.h	/^  char armyName[8+1]; \/\/ ÂÜõÈòüÂêçÁß∞ÈôêÂÆö‰∏∫4‰∏™Ê±âÂ≠ó$/;"	m	struct:Cmd::stCreateArmyUserCmd
armyName	base/Command.h	/^  char armyName[MAX_NAMESIZE]; \/\/ ÈÇÄËØ∑ÁöÑÂÜõÈòüÂêçÁß∞$/;"	m	struct:Cmd::stAddArmyCaptainUserCmd
array_ddefp	ScenesServer/ScenePk.h	/^      SWORD array_ddefp; \/\/ ÈòµÊ≥ïÁöÑÂèåÈò≤ÊØîÁéáÈôç‰Ωé$/;"	m	struct:SkillState::__anon155::__anon156
array_dmvspeed	ScenesServer/ScenePk.h	/^      SWORD array_dmvspeed; \/\/ ÈòµÊ≥ïÁöÑÁßªÂä®ÈÄüÂ∫¶Èôç‰Ωé$/;"	m	struct:SkillState::__anon155::__anon156
array_udamp	ScenesServer/ScenePk.h	/^      SWORD array_udamp; \/\/ ÈòµÊ≥ïÁöÑÂèåÊîªÊØîÁéáÊèêÂçá$/;"	m	struct:SkillState::__anon155::__anon156
arrived	ScenesServer/SceneNpcAI.cpp	/^bool NpcAIController::arrived(zPos pos,int regionX,int regionY)$/;"	f	class:NpcAIController
arwlock	GatewayServer/GateUserManager.h	/^	zRWLock arwlock;	\/\/accidÀ˜“˝∂¡–¥À¯$/;"	m	class:GateUserManager
ascore	tmpcode/commond.h	/^	WORD ascore;$/;"	m	struct:stSeptPracResultChallengeUserCmd
askTempID	tmpcode/commond.h	/^        DWORD askTempID;      \/\/—˚«Î∑Ωid$/;"	m	struct:stStopDance
askTempleID	tmpcode/commond.h	/^        DWORD askTempleID;      \/\/—˚«Î∑Ωid$/;"	m	struct:stAskDance
askTempleID	tmpcode/commond.h	/^        DWORD askTempleID;    \/\/—˚«Î∑Ωid$/;"	m	struct:stAnswerDance
askerName	tmpcode/commond.h	/^               char askerName[MAX_NAMESIZE];$/;"	m	union:reqInviteChunYunCmd::__anon370
askerName	tmpcode/commond.h	/^        char askerName[MAX_NAMESIZE];$/;"	m	struct:stReplyChunYunCmd
askid	tmpcode/commond.h	/^	DWORD     askid;       \/\/—˚«Î∑Ωid  À´»ÀŒË ±∫Ú π”√$/;"	m	struct:stStopDanceMapScreenUserCmd
askid	tmpcode/commond.h	/^        DWORD     askid;      \/\/—˚«Î∑Ωid  À´»ÀŒË ±∫Ú π”√$/;"	m	struct:t_MapDanceData
aspeedRate	ScenesServer/SceneNpc.h	/^  float aspeedRate;$/;"	m	class:SceneNpc
aspeedUpUnder50	ScenesServer/SceneNpc.h	/^  bool aspeedUpUnder50;$/;"	m	class:SceneNpc
assault	ScenesServer/SceneEntryPk.h	/^    bool assault; \/\/\/ÂÜ≤Èîã$/;"	m	struct:SceneEntryPk
assaultMe	ScenesServer/SceneEntryPk.h	/^    virtual void assaultMe(BYTE attacktype,DWORD tempid) {}$/;"	f	struct:SceneEntryPk
assaultMe	ScenesServer/SceneNpc.cpp	/^void SceneNpc::assaultMe(BYTE attacktype,DWORD tempid)$/;"	f	class:SceneNpc
assign_set	ScenesServer/script_func.cpp	/^void assign_set(DWORD thisid)$/;"	f
at	BillServer/BillCallback.h	/^  int            at;                                          \/\/‰∫§ÊòìÁ±ªÂûã $/;"	m	struct:BillData
at	base/UserCommand.h	/^      int	at;$/;"	m	struct:Cmd::UserServer::t_cmd_consume
at	base/UserCommand.h	/^      int     at;$/;"	m	struct:Cmd::UserServer::t_cmd_ret
atk	base/Command.h	/^	DWORD atk;              \/\/ÊîªÂáªÂäõ$/;"	m	struct:Cmd::t_PetData
atk	tmpcode/commond.h	/^			WORD atk;	$/;"	m	struct:LingQiData::__anon321::__anon322
atk	tmpcode/commond.h	/^			WORD atk;	$/;"	m	struct:LingQiPkData::__anon327::__anon328
atk	tmpcode/commond.h	/^			WORD atk;       $/;"	m	struct:LingQiMaxCoefData::__anon331::__anon332
atk	tmpcode/commond.h	/^			WORD atk;       $/;"	m	struct:LingQiSimulate::__anon362::__anon363
atk	tmpcode/commond.h	/^	 BYTE type,atk,def,hp,time;$/;"	m	struct:TankBuffValue
atk	tmpcode/commond.h	/^	DWORD   atk;                    \/\/π•ª˜¡¶$/;"	m	struct:TankData
atk	tmpcode/commond.h	/^	DWORD atk;              \/\/π•ª˜¡¶$/;"	m	struct:t_PetData
atkBuff	tmpcode/commond.h	/^	BYTE    atkBuff;                \/\/’˜Õæ (π•ª˜buff)$/;"	m	struct:TankData
atkType	tmpcode/commond.h	/^	BYTE    atkType;                \/\/’Ω≥µπ•ª˜ Ù–‘ (0:Œﬁ£ª1:ª£ª3:±˘£ª5:¿◊)	$/;"	m	struct:TankData
atk_plus	base/Command.h	/^	WORD atk_plus;          \/\/ÈôÑÂä†Áâ©ÁêÜÊîªÂáªÂäõ$/;"	m	struct:Cmd::t_PetData
atk_plus	tmpcode/commond.h	/^	WORD atk_plus;          \/\/∏Ωº”ŒÔ¿Ìπ•ª˜¡¶$/;"	m	struct:t_PetData
atrating	ScenesServer/ScenePk.h	/^      SWORD atrating;    \/\/ÂëΩ‰∏≠ÁéáÂ¢ûÂä†33,64$/;"	m	struct:SkillState::__anon155::__anon156
atrating	ScenesServer/zObject.h	/^  WORD atrating;        \/\/ ÂëΩ‰∏≠Áéá$/;"	m	class:Equips
atrating	base/Object.h	/^	WORD atrating;				\/\/ √¸÷–¬ $/;"	m	struct:t_Object
atrating	base/zDatabase.h	/^    WORD atrating;				\/\/ √¸÷–¬ $/;"	m	struct:zObjectB
att1	base/Command.h	/^  WORD  att1;$/;"	m	struct:Cmd::t_MainUserData
att2	base/Command.h	/^  WORD	att2;$/;"	m	struct:Cmd::t_MainUserData
att3	base/Command.h	/^  WORD	att3;$/;"	m	struct:Cmd::t_MainUserData
att4	base/Command.h	/^  WORD	att4;$/;"	m	struct:Cmd::t_MainUserData
att5	base/Command.h	/^  WORD	att5;$/;"	m	struct:Cmd::t_MainUserData
attCountry	base/Command.h	/^  DWORD  attCountry;    \/\/ ÊåëÊàòÂõΩID$/;"	m	struct:Cmd::stDareResult
attCountry	base/Command.h	/^  DWORD attCountry;  \/\/ ÊåëÊàòÂõΩ$/;"	m	struct:Cmd::stDarePlan
attCountryName	base/SessionCommand.h	/^      char attCountryName[MAX_NAMESIZE];  \/\/ ÊåëÊàòËÄÖÂõΩÂÆ∂ÂêçÁß∞$/;"	m	struct:Cmd::Session::t_countryDareResult_SceneSession
attFriendPlus	base/Command.h	/^  DWORD attFriendPlus;$/;"	m	struct:Cmd::stRelation
attFriendPlus	base/Command.h	/^  DWORD attFriendPlus;$/;"	m	struct:Cmd::stRelationStatusCmd
attFriendPlus	tmpcode/commond.h	/^	DWORD attFriendPlus;	\/\/\/ ¥À»À”Î◊‘º∫◊È∫√”—∂»º”≥…$/;"	m	struct:stRelation
attFriendPlus	tmpcode/commond.h	/^	DWORD attFriendPlus;    \/\/\/ ¥À»À”Î◊‘º∫◊È∫√”—∂»º”≥…$/;"	m	struct:stRelationStatusCmd
attGood	ScenesServer/ScenePk.cpp	1066;"	d
attGuardNpcRecordofSept	tmpcode/commond.h	/^struct attGuardNpcRecordofSept$/;"	s
attID	base/SessionCommand.h	/^      DWORD attID;    \/\/ ÊîªÂáªÊñπÁî®Êà∑ID$/;"	m	struct:Cmd::Session::t_darePk_SceneSession
attKingName	base/Command.h	/^  char   attKingName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stDareResult
attPlus	tmpcode/commond.h	/^	DWORD attPlus;$/;"	m	struct:stTeamDegreeAddCmd
attProtect	ScenesServer/ScenePk.h	/^    attProtect()$/;"	f	struct:ScenePkState::attProtect
attProtect	ScenesServer/ScenePk.h	/^  struct attProtect$/;"	s	struct:ScenePkState
attSub	ScenesServer/ScenePk.cpp	1068;"	d
attType	tmpcode/commond.h	/^        BYTE  attType;            \/\/π• ÿ¿‡–Õ  ≤Œº˚ÕÊº“∂‘’Ω¿‡–Õ$/;"	m	struct:UnionCityDareItem
attUnionID	tmpcode/commond.h	/^	DWORD attUnionID;$/;"	m	struct:UnionCityDareInfo
attUnionLevel	tmpcode/commond.h	/^	DWORD attUnionLevel;$/;"	m	struct:UnionCityDareInfo
attack	base/zDatabase.h	/^	    WORD attack;    \/\/1,µ•π•;2,»∫π•,3,ÀÊª˙ƒø±Í(¥Œ ˝),4,ÀÊª˙ƒø±Í(∏ˆ ˝)$/;"	m	struct:SkillStatus::__anon36::__anon37
attackAction	ScenesServer/SceneEntryPk.h	/^    bool attackAction;  \/\/\/ ÊîªÂáªËÆ∏ÂèØ$/;"	m	struct:SceneEntryPk
attackDeathNpc	ScenesServer/ScenePk.cpp	/^bool ScenePk::attackDeathNpc(SceneEntryPk *pAtt,SceneNpc *pDef)$/;"	f	class:ScenePk
attackDeathUser	ScenesServer/ScenePk.cpp	/^bool ScenePk::attackDeathUser(SceneUser *pAtt,SceneUser *pDef)$/;"	f	class:ScenePk
attackEnemy	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::attackEnemy(SceneEntryPk * enemy)$/;"	f	class:SceneNpc
attackFailToMe	ScenesServer/ScenePk.cpp	/^bool ScenePk::attackFailToMe(const Cmd::stAttackMagicUserCmd *rev,SceneEntryPk * pAtt,bool failed,bool me)$/;"	f	class:ScenePk
attackMagic	ScenesServer/ScenePk.cpp	/^bool SceneUser::attackMagic(const Cmd::stAttackMagicUserCmd *rev,const DWORD cmdLen)$/;"	f	class:SceneUser
attackRTCmdToNine	ScenesServer/ScenePk.cpp	/^bool ScenePk::attackRTCmdToNine(const Cmd::stAttackMagicUserCmd *rev,SceneEntryPk *pAtt,SceneEntryPk *pDef,const SDWORD sdwHP,BYTE byLuck)$/;"	f	class:ScenePk
attackRTHpAndMp	ScenesServer/SceneEntryPk.h	/^    virtual void attackRTHpAndMp(){};$/;"	f	struct:SceneEntryPk
attackRTHpAndMp	ScenesServer/SceneNpc.cpp	/^void SceneNpc::attackRTHpAndMp()$/;"	f	class:SceneNpc
attackRTHpAndMp	ScenesServer/ScenePk.cpp	/^void ScenePk::attackRTHpAndMp(SceneUser *pUser)$/;"	f	class:ScenePk
attackRTHpAndMp	ScenesServer/SceneUser.cpp	/^void SceneUser::attackRTHpAndMp()$/;"	f	class:SceneUser
attackTarget	ScenesServer/SceneEntryPk.h	/^    SceneEntryPk *attackTarget;      \/\/\/ Ê≠¶Âô®ÈôÑÂ∏¶ÊîªÂáªÁä∂ÊÄÅÊîªÂáªÁõÆÊ†á$/;"	m	struct:SceneEntryPk
attackTarget	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::attackTarget(SceneEntryPk *entry)$/;"	f	class:SceneNpc
attackTimes	base/Card.h	/^    BYTE attackTimes;	    \/\/ªÿ∫œπ•ª˜¥Œ ˝$/;"	m	struct:t_CardPK
attackType	base/HeroCardCmd.h	/^	BYTE attackType;    \/\/π•ª˜¿‡–Õ$/;"	m	struct:Cmd::stAddBattleCardPropertyUserCmd
attackUserCmdToNine	ScenesServer/ScenePk.cpp	/^bool ScenePk::attackUserCmdToNine(const Cmd::stAttackMagicUserCmd *rev,SceneEntryPk *pAtt)$/;"	f	class:ScenePk
attack_time	ScenesServer/SceneNpc.h	/^  zTime  attack_time;$/;"	m	struct:t_expRec
attackaddhpnum	ScenesServer/ScenePk.h	/^      SWORD attackaddhpnum; \/\/ ÊîªÂáªÂ¢ûÂä†Ëá™Â∑±ÁîüÂëΩÂÄºÊï∞ÁõÆ$/;"	m	struct:SkillState::__anon155::__anon156
attackdodge	base/CharBase.h	/^  SWORD  attackdodge;          \/\/\/ ÊîªÂáªË∫≤ÈÅø *$/;"	m	struct:CharState
attackdodge	base/Command.h	/^  WORD  attackdodge;        \/\/\/ ÊîªÂáªË∫≤ÈÅø$/;"	m	struct:Cmd::t_MainUserData
attackdodge	tmpcode/commond.h	/^	WORD  attackdodge;				\/\/\/ π•ª˜∂„±‹$/;"	m	struct:t_MainUserData
attacker	ScenesServer/SkillStatusManager.h	/^    zCard *attacker;$/;"	m	struct:SkillStatusCarrier
attacker1Id	tmpcode/commond.h	/^	DWORD attacker1Id;$/;"	m	struct:stDare
attacker2Id	tmpcode/commond.h	/^	DWORD attacker2Id;$/;"	m	struct:stDare
attacker3Id	tmpcode/commond.h	/^	DWORD attacker3Id;$/;"	m	struct:stDare
attackfive	base/CharBase.h	/^  BYTE  attackfive;          \/\/\/ ÊîªÂáª‰∫îË°å *$/;"	m	struct:CharState
attacklow	ScenesServer/SceneEntryPk.h	/^    bool attacklow; \/\/\/ÊîªÂáªÂäõÂèñ‰∏ãÈôê$/;"	m	struct:SceneEntryPk
attackrating	base/CharBase.h	/^  SWORD  attackrating;        \/\/\/ ÊîªÂáªÂëΩ‰∏≠ *$/;"	m	struct:CharState
attackrating	base/Command.h	/^  WORD  attackrating;        \/\/\/ ÊîªÂáªÂëΩ‰∏≠$/;"	m	struct:Cmd::t_MainUserData
attackrating	tmpcode/commond.h	/^	WORD  attackrating;				\/\/\/ π•ª˜√¸÷–$/;"	m	struct:t_MainUserData
attackspeed	base/CharBase.h	/^  WORD  attackspeed;          \/\/\/ ÊîªÂáªÈÄüÂ∫¶ *$/;"	m	struct:CharState
attackspeed	tmpcode/commond.h	/^	WORD  attackspeed;					\/\/\/ π•ª˜ÀŸ∂»$/;"	m	struct:t_UserData
attacktype	ScenesServer/SkillStatusManager.h	/^  zSceneEntry::SceneEntryType attacktype;$/;"	m	struct:SkillStatusElement
attention	tmpcode/commond.h	/^		DWORD attention;        \/\/πÿ◊¢∂»$/;"	m	struct:stRet32AttentionDragonUserCmd::__anon375
attention	tmpcode/commond.h	/^	DWORD attention;        \/\/πÿ◊¢∂»$/;"	m	struct:stRetVoteInChallengeDragonUserCmd
attrs	tmpcode/commond.h	/^	 unsigned long    *attrs;        \/\/  Ù–‘$/;"	m	struct:st_WatchPlayer
attrs_size	tmpcode/commond.h	/^	 unsigned long    attrs_size;    \/\/  Ù–‘ ˝ \/ 2 ( Ù–‘ID,÷µ)$/;"	m	struct:st_WatchPlayer
atypelist	base/zDatabase.h	/^    std::vector<aTypeS> atypelist;  \/\/ π•ª˜¿‡–Õ$/;"	m	struct:zNpcB
auctionID	base/Command.h	/^  DWORD auctionID;$/;"	m	struct:Cmd::stAddListAuction
auctionID	base/Command.h	/^  DWORD auctionID;$/;"	m	struct:Cmd::stBidAuction
auctionID	base/Command.h	/^  DWORD auctionID;$/;"	m	struct:Cmd::stCancelSaleAuction
auctionID	base/Command.h	/^  DWORD auctionID;$/;"	m	struct:Cmd::stRemoveListAuction
auctionID	base/SessionCommand.h	/^      DWORD auctionID;$/;"	m	struct:Cmd::Session::t_bidAuction_SceneSession
auctionID	base/SessionCommand.h	/^      DWORD auctionID;$/;"	m	struct:Cmd::Session::t_cancelAuction_SceneSession
auctionID	base/SessionCommand.h	/^      DWORD auctionID;$/;"	m	struct:Cmd::Session::t_checkBidAuction_SceneSession
auctionID	base/SessionCommand.h	/^      DWORD auctionID;$/;"	m	struct:Cmd::Session::t_checkCancelAuction_SceneSession
auctionID	tmpcode/commond.h	/^	DWORD auctionID;$/;"	m	struct:stRequestAdvertiseAuction
auctionID	tmpcode/commond.h	/^        DWORD auctionID;$/;"	m	struct:stAddListAuction
auctionID	tmpcode/commond.h	/^        DWORD auctionID;$/;"	m	struct:stBidAuction
auctionID	tmpcode/commond.h	/^        DWORD auctionID;$/;"	m	struct:stCancelSaleAuction
auctionID	tmpcode/commond.h	/^        DWORD auctionID;$/;"	m	struct:stContinueSaleAuction
auctionID	tmpcode/commond.h	/^        DWORD auctionID;$/;"	m	struct:stRemoveListAuction
auctionID	tmpcode/commond.h	/^        DWORD auctionID;$/;"	m	struct:stSendLeftTimeAuction
auctionInfo	base/SessionCommand.h	/^    struct auctionInfo$/;"	s	namespace:Cmd::Session
auctionPara	base/SessionCommand.h	/^      BYTE auctionPara;$/;"	m	struct:Cmd::Session::t_AuctionCmd
auctionState	base/SessionCommand.h	/^    enum auctionState$/;"	g	namespace:Cmd::Session
autoCount	tmpcode/commond.h	/^    BYTE autoCount;$/;"	m	struct:stCityQuestAutoList
autoEatGrass	tmpcode/commond.h	/^    bool autoEatGrass;      \/\/ «∑Ò◊‘∂Ø≥‘≤›¡œ$/;"	m	struct:stSetUpHorseAutoEatGrassUserCmd
autoFlag	tmpcode/commond.h	/^	DWORD autoFlag; \/\/ ◊‘∂Ø∑¢≤º◊¥Ã¨ autoFlag=0 ≤ª◊‘∂Ø∑¢≤º, autoFlag=1 ◊‘∂Ø∑¢≤º$/;"	m	struct:CityQuestInfo
autoFlag	tmpcode/commond.h	/^    BYTE autoFlag;  \/\/0b±Ì æ≤ª“™ 1±Ì æ–Ë“™$/;"	m	struct:stCityQuestAutoInfo
autoList	tmpcode/commond.h	/^    stCityQuestAutoInfo autoList[0];$/;"	m	struct:stCityQuestAutoList
autoPay	tmpcode/commond.h	/^	bool autoPay;	\/\/ «∑Ò◊‘∂Ø–¯∑—$/;"	m	struct:t_AutoPayAutoSkill
autoReply	ScenesServer/SceneUser.cpp	/^void SceneUser::autoReply(char * toName) const $/;"	f	class:SceneUser
autoReply	SessionServer/Session.h	/^    char autoReply[MAX_CHATINFO];\/\/Ëá™Âä®ÂõûÂ§ç$/;"	m	class:UserSession
autoRestitute	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::autoRestitute(DWORD &updated)$/;"	f	class:SceneUser
avaState	tmpcode/commond.h	/^		BYTE avaState;          \/\/ø…¡Ï»°◊¥Ã¨$/;"	m	struct:stRetSeptAvatarInfo::stAvatarInfo
available	ScenesServer/zObject.h	/^  WORD available;\/\/ÂèØÁî®ÁöÑÊÄªÊï∞$/;"	m	class:PetPack
available	tmpcode/commond.h	/^	BYTE    available;              \/\/ «∑Òø…”√ (0:“—±ª¡Ï”√£ª1:Œ¥±ª¡Ï”√)	\/\/ 2£¨¥¶”⁄¥›ªŸ◊¥Ã¨≤ª”√¡À(¥›ªŸ¡ÀæÕ√ª¿≤)$/;"	m	struct:TankData
awake	base/Card.h	/^    BYTE awake;		    \/\/–—$/;"	m	struct:t_CardPK
award	tmpcode/commond.h	/^	QWORD award;    \/\/Ω±¿¯–≈œ¢£¨∞¥Œª±Ì æ£¨¥”µÕµΩ∏ﬂŒª(º∂±¥”–°µΩ¥Û)£¨1±Ì æ“—¡Ï£¨0±Ì æŒ¥¡Ï»°$/;"	m	struct:AwardInfo
award	tmpcode/commond.h	/^	WORD award;$/;"	m	struct:stSendOneLevelEquipAwardInfoUserCmd
awardFactor	tmpcode/commond.h	/^		BYTE  awardFactor;  			\/\/Ω±¿¯œµ ˝$/;"	m	struct:stRetAcceptedDailyQuestUserCmd::acceptedQuests
awardFlag	tmpcode/commond.h	/^		BYTE    awardFlag;                              \/\/Ω±¿¯±Í÷æ£¨0:ŒﬁΩ±¿¯£¨1:Œ¥¡Ï£¨2:“—¡Ï$/;"	m	struct:stRetKillNumsListZhenxuanUserCmd::KillData
awardFlag	tmpcode/commond.h	/^		BYTE    awardFlag;                              \/\/Ω±¿¯±Í÷æ£¨0:ŒﬁΩ±¿¯£¨1:Œ¥¡Ï£¨2:“—¡Ï$/;"	m	struct:stRetPointListZhenxuanUserCmd::PointData
awardFlag	tmpcode/commond.h	/^		BYTE    awardFlag;                              \/\/Ω±¿¯±Í÷æ£¨0:ŒﬁΩ±¿¯£¨1:Œ¥¡Ï£¨2:“—¡Ï$/;"	m	struct:stRetSeqKillListZhenxuanUserCmd::SeqKillData
awardFlag	tmpcode/commond.h	/^	BYTE awardFlag;                 \/\/Ω±¿¯ 0:Œ¥¡Ï, 1:“—¡Ï$/;"	m	struct:BlessSortData
awardFlag	tmpcode/commond.h	/^	BYTE awardFlag;                 \/\/Ω±¿¯ 0:Œ¥¡Ï, 1:“—¡Ï$/;"	m	struct:FlowerSortData
awardFlag	tmpcode/commond.h	/^    BYTE awardFlag;                 \/\/Ω±¿¯ 0:Œ¥¡Ï, 1:“—¡Ï$/;"	m	struct:TempSortData
awardInfo	tmpcode/commond.h	/^	DWORD awardInfo;$/;"	m	struct:stSendLevelUpBoxAwardResultUserCmd
awardNum1	tmpcode/commond.h	/^		DWORD awardNum1;                \/\/Ω±¿¯ ˝÷µ1$/;"	m	struct:stRetDailyRandomQuestUserCmd::quests
awardNum2	tmpcode/commond.h	/^		DWORD awardNum2;                \/\/Ω±¿¯ ˝÷µ2$/;"	m	struct:stRetDailyRandomQuestUserCmd::quests
awardNums	tmpcode/commond.h	/^            WORD awardNums;$/;"	m	struct:stNofityBetResultInChallengeDragonUserCmd::WinnerInfo
awardType	tmpcode/commond.h	/^	BYTE awardType; \/\/1:’˘∞‘µ„ ˝£¨2:¡¨ª˜ ,3:ª˜…± ˝$/;"	m	struct:stGetAwardZhenxuanUserCmd
awardType1	tmpcode/commond.h	/^		BYTE  awardType1;               \/\/Ω±¿¯¿‡–Õ1$/;"	m	struct:stRetDailyRandomQuestUserCmd::quests
awardType2	tmpcode/commond.h	/^		BYTE  awardType2;               \/\/Ω±¿¯¿‡–Õ2$/;"	m	struct:stRetDailyRandomQuestUserCmd::quests
awardedObjId	base/Command.h	/^	DWORD   awardedObjId;   \/\/ Ω±¿¯ŒÔ∆∑ID$/;"	m	struct:Cmd::ListData
awardedObjId	tmpcode/commond.h	/^		DWORD awardedObjId;  \/\/ Ω±¿¯ŒÔ∆∑ID$/;"	m	struct:stRetRanksChatCmd::HeroAward
awardedObjId	tmpcode/commond.h	/^	DWORD   awardedObjId;   \/\/ Ω±¿¯ŒÔ∆∑ID$/;"	m	struct:ListData
awardedObjNum	base/Command.h	/^	DWORD   awardedObjNum;  \/\/ Ω±¿¯ŒÔ∆∑ ˝¡ø$/;"	m	struct:Cmd::ListData
awardedObjNum	tmpcode/commond.h	/^		DWORD awardedObjNum;  \/\/ Ω±¿¯ŒÔ∆∑ ˝¡ø$/;"	m	struct:stRetRanksChatCmd::HeroAward
awardedObjNum	tmpcode/commond.h	/^	DWORD   awardedObjNum;  \/\/ Ω±¿¯ŒÔ∆∑ ˝¡ø$/;"	m	struct:ListData
awardsRatio	tmpcode/commond.h	/^	float awardsRatio[3];$/;"	m	struct:stNotifyWenMingInfoUserCmd
bAddMem	tmpcode/commond.h	/^	BYTE bAddMem;			\/\/true‘ˆº”≥…‘±£ªfalseºı…Ÿ≥…‘±$/;"	m	struct:stChangeMemQuestRoomUserCmd
bBind	tmpcode/commond.h	/^	BYTE bBind;     \/\/0∑«∞Û∂®≤…ºØ 1∞Û∂®≤…ºØ$/;"	m	struct:stSendInfoUserCmd
bGMState	tmpcode/commond.h	/^	 bool bGMState;  \/\/ ÷˜Ω«∂‘œÛ «gm$/;"	m	struct:st_WatchPlayer
bGameTimes	tmpcode/commond.h	/^	DWORD bGameTimes;$/;"	m	struct:stPersonResultChallengeUserCmd
bGemEss	tmpcode/commond.h	/^	BYTE bGemEss;  \/\/ 0: ≤È±¶ Ø; ∑«0: ≤Èæ´ Ø$/;"	m	struct:stQueryPrevSealMagicUserCmd
bGemEss	tmpcode/commond.h	/^	BYTE bGemEss;  \/\/ 0: ≤È±¶ Ø; ∑«0: ≤Èæ´ Ø$/;"	m	struct:stReturnPrevSealMagicUserCmd
bIsPopup	tmpcode/commond.h	/^	BYTE bIsPopup;  \/\/  «∑Ò ««ø÷∆µØ≥ˆµ˜—–µƒ–Œ Ω$/;"	m	struct:stRetSurveyContentUserCmd
bIsPut	tmpcode/commond.h	/^	bool	bIsPut;$/;"	m	struct:FurnitureMapData
bIsPut	tmpcode/commond.h	/^	bool	bIsPut;$/;"	m	struct:stMoveFurnitureHomeUserCmd
bIsPut	tmpcode/commond.h	/^	bool	bIsPut;$/;"	m	struct:stNotifyAddFurnitureHomeUserCmd
bIsSing	tmpcode/commond.h	/^	bool  bIsSing;              \/\/ «∑Ò‘⁄≥™÷‰°£$/;"	m	struct:stAttackMagicUserCmd
bJob	tmpcode/commond.h	/^	WORD bJob;$/;"	m	struct:stPersonResultChallengeUserCmd
bKeepSuit	tmpcode/commond.h	/^	BYTE bKeepSuit;  \/\/  «∑Ò–Ë“™±£¡ÙÃ◊◊∞$/;"	m	struct:stEquipUpgradePropertyUserCmd
bKillTimes	tmpcode/commond.h	/^	WORD bKillTimes;$/;"	m	struct:stPersonResultChallengeUserCmd
bName	tmpcode/commond.h	/^	char bName[MAX_NAMESIZE];$/;"	m	struct:stInfoChallengeUserCmd
bName	tmpcode/commond.h	/^	char bName[MAX_NAMESIZE];$/;"	m	struct:stSeptPrepareTimeChallengeUserCmd
bName	tmpcode/commond.h	/^	char bName[MAX_NAMESIZE];$/;"	m	struct:stSimpleInfoChallengeUserCmd
bOn	base/Command.h	/^       bool bOn;               \/\/true: Use obstacle$/;"	m	struct:Cmd::stSwitchCharacterObstacleUserCmd
bPassw	tmpcode/commond.h	/^	BYTE bPassw;                            \/\/ «∑Ò”–√‹¬Î0√ª”–£ª1”–$/;"	m	struct:stSendCountryInviteQuestRoomUserCmd
bPassw	tmpcode/commond.h	/^    BYTE bPassw;                            \/\/ «∑Ò”–√‹¬Î0√ª”–£ª1”–$/;"	m	struct:LinkInfo
bPassword	tmpcode/commond.h	/^	BYTE bPassword;	\/\/ «∑Òº”√‹$/;"	m	struct:RoomInfo
bPassword	tmpcode/commond.h	/^    BYTE bPassword;                 \/\/ «∑Òº”√‹$/;"	m	struct:stOneRoomAllInfoQuestRoomUserCmd
bPosx	tmpcode/commond.h	/^	DWORD bPosx;  \/\/ÕÊº“2≥ı ºx◊¯±Í$/;"	m	struct:stSimulateMagicUserCmd
bPosy	tmpcode/commond.h	/^	DWORD bPosy;  \/\/ÕÊº“2≥ı ºy◊¯±Í$/;"	m	struct:stSimulateMagicUserCmd
bResult	tmpcode/commond.h	/^		bool bResult;	\/\/ §∏∫±Í ∂ true: §¿˚∑Ω false: ß∞‹∑Ω$/;"	m	struct:stSendScoreSeptPopoUserCmd::stPopoInfo
bReward	tmpcode/commond.h	/^	BYTE bReward;	\/\/1“—¡Ï»°Ω±¿¯0Œ¥¡Ï»°$/;"	m	struct:SortLastWeek
bScore	tmpcode/commond.h	/^	stBaseScore bScore; $/;"	m	struct:stSendScoreSeptPopoUserCmd
bSealToDress	tmpcode/commond.h	/^	BYTE bSealToDress;  \/\/  «∑Ò∑‚”°µΩ“¬∑˛, 0ƒ¨»œ∑‚”°µΩŒ‰∆˜$/;"	m	struct:stSealMagicUserCmd
bSendNineToMe	tmpcode/commond.h	/^	bool  bSendNineToMe;	\/\/ «∑ÒŒ™SendNineToMe$/;"	m	struct:st_CharShow2
bSuccess	tmpcode/commond.h	/^	BYTE bSuccess;  \/\/  «∑Ò≥…π¶$/;"	m	struct:stEquipUpgrade2ResultPropertyUserCmd
bSuccess	tmpcode/commond.h	/^	BYTE bSuccess;  \/\/  «∑Ò≥…π¶$/;"	m	struct:stEquipUpgradeResultPropertyUserCmd
bSuccess	tmpcode/commond.h	/^	BYTE bSuccess;  \/\/  «∑Ò…Ë÷√≥…π¶$/;"	m	struct:stRetSetSafetyDetailUserCmd
bSwitch	tmpcode/commond.h	/^	BYTE  bSwitch; \/\/0-πÿ±’£¨1-ø™∆ÙªÚ’ﬂÀ¢–¬º∆ ±$/;"	m	struct:stNpcLifeTimeCountUserCmd
bThanks	tmpcode/commond.h	/^    DWORD bThanks; \/\/µ⁄∂˛÷÷∑¥¿°»À ˝$/;"	m	struct:stAsrShenLongThanks
bType	tmpcode/commond.h	/^	 BYTE  bType;				\/\/«Î«Ûº“◊Â√˚µƒ”√Õæ$/;"	m	struct:stReqSeptNameCmd
bType	tmpcode/commond.h	/^	 BYTE  bType;		\/\/«Î«Û∞Ôª·√˚µƒ”√Õæ$/;"	m	struct:stReqUnionNameCmd
bType	tmpcode/commond.h	/^	 BYTE bType;$/;"	m	struct:stRtnSeptNameCmd
bType	tmpcode/commond.h	/^	 BYTE bType;$/;"	m	struct:stRtnUnionNameCmd
bUseEssence	tmpcode/commond.h	/^	BYTE bUseEssence;  \/\/  «∑Ò π”√≤ƒ¡œæ´ª™$/;"	m	struct:stEquipUpgrade2PropertyUserCmd
bWeaponDress	tmpcode/commond.h	/^	BYTE bWeaponDress;  \/\/ 0: Œ‰∆˜; ∑«0: “¬∑˛$/;"	m	struct:stNotifyClearSealMagicUserCmd
bWeaponDress	tmpcode/commond.h	/^	BYTE bWeaponDress;  \/\/ 0: Œ‰∆˜; ∑«0: “¬∑˛$/;"	m	struct:stNotifySealValueMagicUserCmd
bWinTimes	tmpcode/commond.h	/^	DWORD bWinTimes;$/;"	m	struct:stPersonResultChallengeUserCmd
backOff	ScenesServer/SceneUser.cpp	/^bool SceneUser::backOff(const int direct,const int grids)$/;"	f	class:SceneUser
backOffing	ScenesServer/SceneNpc.h	/^  int backOffing;$/;"	m	class:SceneNpc
backOffing	ScenesServer/SceneUser.h	/^    int backOffing;$/;"	m	struct:SceneUser
backSelect	GatewayServer/GateUser.h	/^	bool backSelect;$/;"	m	class:GateUser
backoff	ScenesServer/SceneNpc.cpp	/^void SceneNpc::backoff(const int direct,const int step)$/;"	f	class:SceneNpc
backto	GatewayServer/CountryInfo.h	/^		DWORD backto;$/;"	m	struct:CountryInfo::MapDic
backto	ScenesServer/SceneManager.h	/^      DWORD backto;$/;"	m	struct:SceneManager::MapInfo
backtoCity	ScenesServer/SceneManager.h	/^      DWORD backtoCity;$/;"	m	struct:SceneManager::MapInfo
backtoCityMap	ScenesServer/Scene.h	/^    DWORD backtoCityMap() const { return backtoCityMapID; }$/;"	f	class:Scene
backtoCityMapID	ScenesServer/Scene.h	/^    DWORD backtoCityMapID;$/;"	m	class:Scene
backtoDareMapID	ScenesServer/Scene.h	/^    DWORD backtoDareMapID;$/;"	m	class:Scene
backtoMap	ScenesServer/Scene.h	/^    DWORD backtoMap() const { return backtoMapID; }$/;"	f	class:Scene
backtoMapID	ScenesServer/Scene.h	/^    DWORD backtoMapID;$/;"	m	class:Scene
backtodare	ScenesServer/SceneManager.h	/^      DWORD backtodare;$/;"	m	struct:SceneManager::MapInfo
badge	tmpcode/commond.h	/^	BYTE badge;$/;"	m	struct:set_manteau
badge	tmpcode/commond.h	/^        BYTE badge; \/\/ª’º«$/;"	m	struct:set_SeptManteau
bag	base/xmlparser/giftbag.h	/^    xml_node_map<DWORD,Bag>	bag;$/;"	m	struct:GiftBagConfig
bagqwThisID	tmpcode/commond.h	/^    DWORD bagqwThisID;$/;"	m	struct:stReturnPointOpenGiftBag
balance	BillServer/BillCallback.h	/^  int           balance;                                    \/\/‰ΩôÈ¢ù$/;"	m	struct:BillData
balance	base/BillCommand.h	/^      DWORD balance;            \/\/\/‰∏ìÂå∫Âç°ÁÇπÊï∞$/;"	m	struct:Cmd::Bill::t_Return_ObjCard
balance	base/Command.h	/^  DWORD balance;  \/\/‰∏ìÂå∫Âç°ÊâÄÂ∏¶ÁÇπÊï∞$/;"	m	struct:Cmd::stReturnConSumeCardCard
balance	base/UserCommand.h	/^      int     balance;        \/\/‰ΩôÈ¢ù$/;"	m	struct:Cmd::UserServer::t_cmd_ret
balance	tmpcode/commond.h	/^	DWORD balance;  \/\/◊®«¯ø®À˘¥¯µ„ ˝$/;"	m	struct:stReturnConSumeCardCard
bang	ScenesServer/ScenePk.h	/^      SWORD bang;      \/\/Â¢ûÂä†‰∫∫Áâ©ÊñΩÊîæÂá∫ÈáçÂáªÁöÑÂá†Áéá$/;"	m	struct:SkillState::__anon155::__anon156
bang	ScenesServer/zObject.h	/^  WORD bang;  \/\/ÈáçÂáªÁéá$/;"	m	class:Equips
bang	base/CharBase.h	/^  WORD  bang;              \/\/\/ ÈáçÂáª *$/;"	m	struct:CharState
bang	base/Command.h	/^  WORD  bang;            \/\/\/ ÈáçÂáª$/;"	m	struct:Cmd::t_MainUserData
bang	base/Object.h	/^	WORD bang;      \/\/÷ÿª˜->±©ª˜$/;"	m	struct:t_Object
bang	base/zDatabase.h	/^    WORD bang;$/;"	m	struct:zObjectB
bang	tmpcode/commond.h	/^	WORD  bang;						\/\/\/ ±©ª˜$/;"	m	struct:t_MainUserData
bangdef	base/Object.h	/^	WORD bangdef;  \/\/∑¿±©ª˜$/;"	m	struct:t_Object
banishUserID	tmpcode/commond.h	/^	DWORD banishUserID;             \/\/±ª«˝÷»ÀµƒID$/;"	m	struct:st_BroadcastBanishRoomerHouseUserCmd
bankMoney	tmpcode/commond.h	/^	DWORD bankMoney;                \/\/Ωø‚«Æ ˝$/;"	m	struct:st_RetManageHouseUserCmd
bargirlTempID	tmpcode/commond.h	/^        DWORD bargirlTempID;                    \/\/∞…≈Ætempid$/;"	m	struct:stBargirlFavourDialog
barrel	SuperServer/RoleregCache.cpp	/^	container_type barrel;$/;"	m	class:RoleDataContainer
base	ScenesServer/Skill.h	/^    const zSkillB *base;$/;"	m	struct:zSkill
base	ScenesServer/zCard.h	/^    zCardB *base;$/;"	m	struct:zCard
base	ScenesServer/zObject.h	/^    zObjectB *base;$/;"	m	struct:zObject
baseData	tmpcode/commond.h	/^	DecayHouseBaseData baseData;$/;"	m	struct:stDataDecayHouseUserCmd
baseData	tmpcode/commond.h	/^	LingQiData baseData;$/;"	m	struct:LingQiAllData
baseMoney	tmpcode/commond.h	/^	DWORD baseMoney;        \/\/\/ √øNPC√ø–° ±µƒ∑—”√$/;"	m	struct:stReqEmployNpcAdUserCmd
baseProduce	tmpcode/commond.h	/^	DWORD baseProduce;		\/\/ª˘¥°≤˙¡ø$/;"	m	struct:stLandItem
baseRate	tmpcode/commond.h	/^    BYTE  baseRate;$/;"	m	struct:stNeedMoneyAndBaseSuccessRateUserCmd
batch	tmpcode/commond.h	/^	BYTE batch;					   \/\/ µ±«∞Œ™µ⁄º∏¥Œœ˚œ¢£ÆøÕªß∂À∑µªÿ∏¯∑˛ŒÒ∆˜ ±£¨ π”√∏√÷µ  $/;"	m	struct:stAllUnionMemberCmd
battle	ScenesServer/ScenesServer.h	/^    bool battle;$/;"	m	class:ScenesService
battleZoneID	ScenesServer/ScenesServer.h	/^    WORD battleZoneID;$/;"	m	class:ScenesService
bc	BillServer/BillClient.h	/^    BillCallback &bc;$/;"	m	class:BillClient
bc	BillServer/BillClientManager.h	/^    BillCallback bc;$/;"	m	class:BillClientManager
bclearActiveSkillStatus	ScenesServer/SkillStatusManager.h	/^  bool bclearActiveSkillStatus;$/;"	m	class:SkillStatusManager
bdam	ScenesServer/zObject.h	/^      BYTE bdam; \/\/Â¢ûÂä†‰º§ÂÆ≥x%$/;"	m	struct:Equips::__anon174::__anon175
bdam	base/Object.h	/^			WORD bdam; \/\/‘ˆº”…À∫¶x%%$/;"	m	struct:t_Object::__anon59::__anon60
beBeatPart	tmpcode/commond.h	/^	BYTE beBeatPart;    \/\/±ªπ•ª˜∑Ω$/;"	m	struct:FightDescrip
beKilledNums	tmpcode/commond.h	/^		WORD    beKilledNums;         \/\/œ◊…Ì  $/;"	m	struct:stReturnScoreListWeekendZhenxuanUserCmd::PlayerScore
bear_type	base/zDatabase.h	/^    DWORD  bear_type;      \/\/π÷ŒÔ¿‡±$/;"	m	struct:zNpcB
beatPart	tmpcode/commond.h	/^	BYTE beatPart;      \/\/π•ª˜∑Ω$/;"	m	struct:FightDescrip
beginGame	GatewayServer/GateUser.cpp	/^bool GateUser::beginGame()$/;"	f	class:GateUser
beginSelect	GatewayServer/GateUser.cpp	/^bool GateUser::beginSelect()$/;"	f	class:GateUser
begin_tid	BillServer/BillUser.cpp	/^bool BillUser::begin_tid(const char *t)$/;"	f	class:BillUser
begintime	base/Command.h	/^  DWORD begintime;$/;"	m	struct:Cmd::stRequstHistoryStockUserCmd
begintime	base/Command.h	/^  DWORD begintime;$/;"	m	struct:Cmd::stRequstSelfHistoryStockUserCmd
begintime	tmpcode/commond.h	/^	DWORD begintime;$/;"	m	struct:stRequstSelfHistoryStockUserCmd
begintime	tmpcode/commond.h	/^        DWORD begintime;$/;"	m	struct:stQuestTipsUserCmd
behavior	base/Command.h	/^  BYTE behavior;\/\/‰∏çËâØÊ∏∏ÊàèÁé∞Ë±°$/;"	m	struct:Cmd::stMsgGmTool
behavior	base/GmToolCommand.h	/^      BYTE behavior;\/\/‰∏çËâØÊ∏∏ÊàèÁé∞Ë±°$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
betDragonCountry	tmpcode/commond.h	/^	BYTE betDragonCountry;$/;"	m	struct:stRetBetInCountryDragonUserCmd
betDragonIndex	tmpcode/commond.h	/^		BYTE betDragonIndex;$/;"	m	struct:stRetBetInChallengeDragonUserCmd::RetBetInfo
betDragonIndex	tmpcode/commond.h	/^	BYTE betDragonIndex;$/;"	m	struct:stReqBetInChallengeDragonUserCmd
betObjNums	tmpcode/commond.h	/^		BYTE betObjNums;$/;"	m	struct:stRetBetInChallengeDragonUserCmd::RetBetInfo
betObjNums	tmpcode/commond.h	/^	BYTE betObjNums;$/;"	m	struct:stReqBetInChallengeDragonUserCmd
betObjNums	tmpcode/commond.h	/^	BYTE betObjNums;$/;"	m	struct:stRetBetInCountryDragonUserCmd
bidType	base/Command.h	/^  BYTE bidType;$/;"	m	struct:Cmd::stAddListAuction
bidType	base/Command.h	/^  BYTE bidType;$/;"	m	struct:Cmd::stSaleAuction
bidType	base/SessionCommand.h	/^      BYTE bidType;$/;"	m	struct:Cmd::Session::auctionInfo
bidType	base/SessionCommand.h	/^      BYTE bidType;$/;"	m	struct:Cmd::Session::t_checkBidAuction_SceneSession
bidType	tmpcode/commond.h	/^        BYTE bidType;$/;"	m	struct:stAddListAuction
bidType	tmpcode/commond.h	/^        BYTE bidType;$/;"	m	struct:stSaleAuction
bider	tmpcode/commond.h	/^        char bider[MAX_NAMESIZE];       \/\/µ±«∞◊Ó∏ﬂ≥ˆº€’ﬂ$/;"	m	struct:stAddListAuction
billClientPool	BillServer/BillClientManager.h	/^    zTCPClientTaskPool *billClientPool;$/;"	m	class:BillClientManager
bin	base/Command.h	/^  BYTE bin[0];\/\/ÁâπÂæÅÁ†ÅÊñá‰ª∂$/;"	m	struct:Cmd::stStampDataUserCmd
bin	tmpcode/commond.h	/^	char		bin[0]; $/;"	m	struct:stStampDataUserCmd
bind	ScenesServer/script.cpp	/^void Binder::bind(LuaVM* vm)$/;"	f	class:Binder
bind	base/MsgDelegate.h	/^	void bind(const WORD byCmd, const WORD byPara, MsgDelegate &del)$/;"	f	class:MsgCenter
bind	base/Object.h	/^	BYTE bind;  \/\/◊∞±∏ «∑Ò∞Û∂® 0∑«∞Û∂®  1∞Û∂®$/;"	m	struct:t_Object
bind	base/SessionCommand.h	/^      BYTE bind;$/;"	m	struct:Cmd::Session::giftInfo
bind	base/zMNetService.h	/^	bool bind(const std::string &name, const unsigned short port)$/;"	f	class:zMNetService
bind	tmpcode/commond.h	/^	BYTE   bind;  \/\/  «∑Ò∞Û∂®$/;"	m	struct:GiftItem
bind	tmpcode/commond.h	/^	BYTE bind;   \/\/  «∑Ò∞Û∂®$/;"	m	struct:NewbieGiftItem
bind	tmpcode/commond.h	/^        DWORD bind;\/\/ «∑Ò∞Û∂® 0 ≤ª∞Û∂® 1∞Û∂®$/;"	m	struct:stExchangeGoldCardUserCmd
bind_money	base/Command.h	/^  DWORD bind_money;$/;"	m	struct:Cmd::t_MainUserData
bind_money	tmpcode/commond.h	/^	DWORD bind_money;	\/\/Ω Ù±“£®∞Û£©$/;"	m	struct:t_MainUserData
bindit	tmpcode/commond.h	/^		BYTE    bindit;                       \/\/ «∑Ò”√∞Û∂®µƒ≤ƒ¡œ, 1±Ì æ”√,0±Ì æ≤ª”√$/;"	m	struct:stFoundLeechdomPropertyUserCmd
bindit	tmpcode/commond.h	/^	BYTE    bindit;                       \/\/ «∑Ò”√∞Û∂®µƒ≤ƒ¡œ, 1±Ì æ”√,0±Ì æ≤ª”√$/;"	m	struct:stFoundFashionPropertyUserCmd
bindit	tmpcode/commond.h	/^        BYTE    bindit;                       \/\/ «∑Ò”√∞Û∂®µƒ≤ƒ¡œ, 1±Ì æ”√,0±Ì æ≤ª”√$/;"	m	struct:stFoundFashionSkillStore
bindit	tmpcode/commond.h	/^    BYTE    bindit;                       \/\/ «∑Ò”√∞Û∂®µƒ≤ƒ¡œ, 1±Ì æ”√,0±Ì æ≤ª”√$/;"	m	struct:stFoundLeechdomSkillStore
bindport	roleChangeServer/roleChangeServer.h	/^	WORD bindport;$/;"	m	class:roleChangeService
bioType	tmpcode/commond.h	/^	DWORD   bioType;   \/\/ bio_type - (0: ÕÊº“), (1: npc), (2: Mob), (3: Pet), (4: ≤ª÷˜∂Øπ•ª˜µƒMob)$/;"	m	struct:st_CharShow2
birthNow	base/Command.h	/^	BYTE birthNow;$/;"	m	struct:Cmd::t_NpcData
birthNow	tmpcode/commond.h	/^	BYTE  birthNow;                 \/\/∏’≥ˆ…˙,0ƒ¨»œ≤ª «£¨1Œ™∏’≥ˆ…˙ªÚ’ﬂ∏’÷ÿ…˙ $/;"	m	struct:t_NPCData
bitMask	ScenesServer/ScenePk.cpp	1070;"	d
bite	ScenesServer/zObject.h	/^  WORD bite; \/\/Âô¨ÂäõÂ¢ûÂä†$/;"	m	class:Equips
bite	base/Object.h	/^	WORD bite; \/\/ …¡¶‘ˆº”$/;"	m	struct:t_Object
bitedef	ScenesServer/zObject.h	/^  WORD bitedef; \/\/ÊäóÂô¨ÂäõÂ¢ûÂä†$/;"	m	class:Equips
bitedef	base/Object.h	/^	WORD bitedef; \/\/øπ …¡¶‘ˆº”$/;"	m	struct:t_Object
bitmask	base/CharBase.h	/^  DWORD bitmask;            \/\/\/ Ê†áÂøóÊé©Á†Å$/;"	m	struct:CharBase
bitmask	base/Command.h	/^    DWORD bitmask;          \/\/\/ ËßíËâ≤Êé©Á†Å$/;"	m	struct:Cmd::SelectUserInfo
bitmask	base/Command.h	/^  DWORD bitmask;          \/\/\/ ËßíËâ≤Êé©Á†Å$/;"	m	struct:Cmd::t_MainUserData
bitmask	base/zSocket.h	/^	DWORD bitmask;            \/**< ±Í÷æ—⁄¬Î *\/$/;"	m	class:zSocket
bitmask	tmpcode/commond.h	/^	DWORD bitmask;					\/\/\/ Ω«…´—⁄¬Î$/;"	m	struct:t_MainUserData
bitmask	tmpcode/commond.h	/^	DWORD bitmask;                                  \/\/\/ Ω«…´—⁄¬Î$/;"	m	struct:SelectUserInfo
blackListValueType	GatewayServer/GateUser.h	/^	typedef std::set<std::string>::value_type blackListValueType;$/;"	t	class:GateUser
blacklist	GatewayServer/GateUser.h	/^	std::set<std::string> blacklist; $/;"	m	class:GateUser
blazeappend	ScenesServer/ScenePk.h	/^      SWORD blazeappend; \/\/ ÁÅ´ÁÑ∞Á≥ªÊ≥ïÊúØ‰º§ÂÆ≥ÊèêÂçáÊØî‰æãÂçÉÂàÜ‰πãÂá†$/;"	m	struct:SkillState::__anon155::__anon156
blazeflag	ScenesServer/SceneEntryPk.h	/^    bool blazeflag; \/\/\/ÁÅ´ÁÑ∞Á≥ªÊ≥ïÊúØÂä†ÊàêÊ†áÂøó$/;"	m	struct:SceneEntryPk
blife	base/Object.h	/^			WORD blife;  \/\/‘ˆº”…˙√¸÷µx%%$/;"	m	struct:t_Object::__anon59::__anon60
blind	ScenesServer/SceneEntryPk.h	/^	bool blind;			\/\/\/ sky Â§±ÊòéÁä∂ÊÄÅ$/;"	m	struct:SceneEntryPk
blind	ScenesServer/zObject.h	/^  WORD blind; \/\/Â§±ÊòéÂ¢ûÂä†$/;"	m	class:Equips
blind	base/Object.h	/^	WORD blind; \/\/ ß√˜‘ˆº”$/;"	m	struct:t_Object
blindProcess	ScenesServer/SceneUser.cpp	/^void SceneUser::blindProcess()$/;"	f	class:SceneUser
blindRes	base/Command.h	/^  WORD blindRes;    \/\/ÊäóÂ§±Êòé$/;"	m	struct:Cmd::t_HorseData
blinddef	ScenesServer/zObject.h	/^  WORD blinddef; \/\/ÊäóÂ§±ÊòéÂ¢ûÂä†$/;"	m	class:Equips
blinddef	base/Object.h	/^	WORD blinddef; \/\/øπ ß√˜‘ˆº”$/;"	m	struct:t_Object
blindp	ScenesServer/ScenePk.h	/^      SWORD blindp;    \/\/ÂáèÂ∞ëÈô∑ÂÖ•Â§±ÊòéÁä∂ÊÄÅÂá†Áéá21$/;"	m	struct:SkillState::__anon155::__anon156
blood	tmpcode/commond.h	/^	BYTE blood; \/\/—™–Õ£¨0±£√‹£¨1,A–Õ£¨2,B–Õ£¨3,AB–Õ£¨4,O–Õ,5∆‰À¸$/;"	m	struct:stPersonalSign
bluePrintID	tmpcode/commond.h	/^	DWORD   bluePrintID;                    \/\/Õº÷Ωid$/;"	m	struct:stFoundSpecialItemPropertyUserCmd
bluerating	base/zDatabase.h	/^    DWORD bluerating;$/;"	m	struct:zObjectB
blus	base/zDatabase.h	/^    std::vector<DWORD> blus;$/;"	m	struct:zObjectB
body	tmpcode/commond.h	/^        char body[0];             \/\/ªÓ∂Øµƒƒ⁄»›$/;"	m	struct:stCallBoardDataUserCmd
bodyColor	base/CharBase.h	/^  DWORD bodyColor;              \/\/\/ ÂÖâË∫´È¢úËâ≤$/;"	m	struct:CharBase
bombskillId	ScenesServer/SceneEntryPk.h	/^    DWORD bombskillId; \/\/\/ ‰∫∫Áâ©Ê≠ª‰∫°ÂêéÊäïÈÄÅÊäÄËÉΩID$/;"	m	struct:SceneEntryPk
bonus	BillServer/BillCallback.h	/^  int           bonus;                                      \/\/ÁßØÂàÜ$/;"	m	struct:BillData
bonus	base/UserCommand.h	/^      int     bonus;          \/\/ÁßØÂàÜ$/;"	m	struct:Cmd::UserServer::t_cmd_ret
boostupHpMaxP	ScenesServer/SceneNpc.h	/^  DWORD boostupHpMaxP;  \/\/\/Â¢ûÂä†ÁîüÂëΩÂÄº‰∏äÈôê$/;"	m	class:SceneNpc
boostupPet	ScenesServer/SceneNpc.h	/^  int boostupPet; \/\/\/ Â¢ûÂº∫ÊØî‰æã$/;"	m	class:SceneNpc
boostupPetMDef	ScenesServer/SceneNpc.h	/^  DWORD boostupPetMDef; \/\/Â¢ûÂº∫ÂÆ†Áâ©ÁöÑÊ≥ïÊúØÈò≤Âæ°$/;"	m	class:SceneNpc
boostupSummon	ScenesServer/SceneNpc.h	/^  DWORD boostupSummon; \/\/\/Âè¨Âî§ÂÖΩÊîªÂáªÂä†Âº∫$/;"	m	class:SceneNpc
borrower	tmpcode/commond.h	/^	char    borrower[MAX_NAMESIZE];			\/\/ΩË”√’ﬂ$/;"	m	struct:TankData
boss1Day	tmpcode/commond.h	/^	DWORD boss1Day;$/;"	m	struct:stRetCanSetfree
boss1Kind	tmpcode/commond.h	/^	DWORD boss1Kind;$/;"	m	struct:stRetCanSetfree
boss1Level	tmpcode/commond.h	/^	DWORD boss1Level;$/;"	m	struct:stRetCanSetfree
boss1Name	tmpcode/commond.h	/^	char boss1Name[MAX_NAMESIZE];$/;"	m	struct:stRetCanSetfree
boss2Kind	tmpcode/commond.h	/^	DWORD boss2Kind;$/;"	m	struct:stRetCanSetfree
boss2Level	tmpcode/commond.h	/^	DWORD boss2Level;$/;"	m	struct:stRetCanSetfree
boss2Name	tmpcode/commond.h	/^	char boss2Name[MAX_NAMESIZE];$/;"	m	struct:stRetCanSetfree
bossID	tmpcode/commond.h	/^	DWORD bossID;       \/\/æ∆∞…¿œ∞Â¡Ÿ ±ID$/;"	m	struct:stBuyWineState
bossID	tmpcode/commond.h	/^	DWORD bossID;      \/\/æ∆∞…¿œ∞Â¡Ÿ ±id$/;"	m	struct:stGuessBarkeeperState
bossID	tmpcode/commond.h	/^        DWORD bossID;      \/\/æ∆∞…¿œ∞Â   ID$/;"	m	struct:stQueryBarkeeperState
bossLevel	tmpcode/commond.h	/^	WORD bossLevel;							 \/\/ bossµ»º∂$/;"	m	struct:BossTraceItem
bossName	base/SessionCommand.h	/^      char bossName[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_cityRush_SceneSession
bossName	tmpcode/commond.h	/^	char	bossName[MAX_NAMESIZE];  \/\/boss√˚◊÷$/;"	m	struct:BossTraceItem
bossName	tmpcode/commond.h	/^	char bossName[MAX_NAMESIZE];$/;"	m	struct:stReturnFarmIntroduce
bossState	tmpcode/commond.h	/^	BYTE	bossState;           \/\/boss◊¥Ã¨£¨À¢–¬Œ™1£¨Œ™À¢–¬Œ™0$/;"	m	struct:BossTraceItem
bossState	tmpcode/commond.h	/^        BYTE bossState;    \/\/æ∆∞…¿œ∞Â◊¥Ã¨$/;"	m	struct:stQueryBarkeeperState
bossType	tmpcode/commond.h	/^	BYTE	bossType;$/;"	m	struct:BossTraceItem
boss_chanllengeID	SessionServer/HeroCardManager.h	/^    zUniqueID<DWORD>	*boss_chanllengeID;		\/\/PVE BOSSƒ£ Ω$/;"	m	class:HeroCardManager
boxID	tmpcode/commond.h	/^	DWORD boxID;$/;"	m	struct:stSendObjNewBoxPropertyUserCmd
boxID	tmpcode/commond.h	/^        DWORD boxID;$/;"	m	struct:OpenBoxPropertyUserCmd
boxObject	tmpcode/commond.h	/^	boxObject()$/;"	f	struct:boxObject
boxObject	tmpcode/commond.h	/^struct boxObject$/;"	s
boxThisID	tmpcode/commond.h	/^	DWORD boxThisID;        \/\/¥Ûœ‰◊”ID$/;"	m	struct:stUseNewBoxPropertyUserCmd
box_item	ScenesServer/SceneUser.h	/^    box_target box_item;$/;"	m	struct:SceneUser
box_target	ScenesServer/SceneUser.h	/^    struct box_target$/;"	s	struct:SceneUser
brappenddam	ScenesServer/ScenePk.h	/^      SWORD brappenddam; \/\/ÁåéÊâãÂç∞ËÆ∞ÊâÄÊèê‰æõÁöÑÈ¢ùÂ§ñ‰º§ÂÆ≥Ê∏Ö$/;"	m	struct:SkillState::__anon155::__anon156
breakShield	ScenesServer/CardPk.cpp	/^bool zCard::breakShield()$/;"	f	class:zCard
breakSneak	ScenesServer/CardPk.cpp	/^bool zCard::breakSneak()$/;"	f	class:zCard
breakTime	tmpcode/commond.h	/^	DWORD   breakTime;      \/\/æ‡◊‘∂ØΩ‚≥˝ ±º‰(s)$/;"	m	struct:stRetMaxLevelIconDataUserCmd
bresult	tmpcode/commond.h	/^	BYTE bresult;$/;"	m	struct:stPersonResultChallengeUserCmd
bresult	tmpcode/commond.h	/^	BYTE bresult;$/;"	m	struct:stSeptPracResultChallengeUserCmd
brideName	tmpcode/commond.h	/^	char brideName[MAX_NAMESIZE];$/;"	m	struct:stOpenMarriagePressCmd
bright	tmpcode/commond.h	/^        bool bright;$/;"	m	struct:stSendBrightIconDataUserCmd
broadcast	FLServer/LoginManager.cpp	/^bool LoginManager::broadcast(const DWORD loginTempID,const void *pstrCmd,int nCmdLen)$/;"	f	class:LoginManager
broadcast	FLServer/ServerManager.cpp	/^bool ServerManager::broadcast(const GameZone_t &gameZone,const void *pstrCmd,int nCmdLen)$/;"	f	class:ServerManager
broadcast	FLServer/UserTask.h	/^	void broadcast(Cmd::t_NullCmd *pCmd, unsigned int nCmdLen)$/;"	f	class:UserContainer
broadcast	SuperServer/FLClientManager.cpp	/^void FLClientManager::broadcast(const void *pstrCmd,int nCmdLen)$/;"	f	class:FLClientManager
broadcast	SuperServer/ServerManager.cpp	/^bool ServerManager::broadcast(const void *pstrCmd,int nCmdLen)$/;"	f	class:ServerManager
broadcast	base/Object.h	/^	BYTE broadcast; \/\/ ¿Ò∞¸¡Ï≥ˆ ±£¨π´∏Ê¿‡–Õ –¬±¶œ‰ π”√ WDS 20100811$/;"	m	struct:t_Object
broadcast	base/zCond.h	/^	void broadcast()$/;"	f	class:zCond
broadcast	roleChangeServer/ChangeTask.h	/^	void broadcast(Cmd::t_NullCmd *pCmd, unsigned int nCmdLen)$/;"	f	class:RoleContainer
broadcastByID	BillServer/BillTaskManager.cpp	/^bool BillTaskManager::broadcastByID(const WORD wdServerID,const void *pstrCmd,int nCmdLen)$/;"	f	class:BillTaskManager
broadcastByID	SessionServer/SessionTaskManager.cpp	/^bool SessionTaskManager::broadcastByID(const WORD wdServerID,const void *pstrCmd,int nCmdLen)$/;"	f	class:SessionTaskManager
broadcastByID	SuperServer/ServerManager.cpp	/^bool ServerManager::broadcastByID(const WORD wdServerID,const void *pstrCmd,int nCmdLen)$/;"	f	class:ServerManager
broadcastByOne	SuperServer/ServerManager.cpp	/^bool ServerManager::broadcastByOne(const WORD wdType,const void *pstrCmd,int nCmdLen)$/;"	f	class:ServerManager
broadcastByType	SuperServer/ServerManager.cpp	/^bool ServerManager::broadcastByType(const WORD wdType,const void *pstrCmd,int nCmdLen)$/;"	f	class:ServerManager
broadcastCmd	ScenesServer/SceneTaskManager.cpp	/^bool SceneTaskManager::broadcastCmd(const void *pstrCmd,const int nCmdLen)$/;"	f	class:SceneTaskManager
broadcastGateway	SessionServer/SessionTaskManager.cpp	/^bool SessionTaskManager::broadcastGateway(const void *pstrCmd,int nCmdLen)$/;"	f	class:SessionTaskManager
broadcastOne	GatewayServer/SceneClientManager.cpp	/^bool SceneClientManager::broadcastOne(const void *pstrCmd,int nCmdLen)$/;"	f	class:SceneClientManager
broadcastOne	SuperServer/BroadClientManager.cpp	/^bool BroadClientManager::broadcastOne(const void *pstrCmd,int nCmdLen)$/;"	f	class:BroadClientManager
broadcastOne	SuperServer/InfoClientManager.cpp	/^bool InfoClientManager::broadcastOne(const void *pstrCmd,int nCmdLen)$/;"	f	class:InfoClientManager
broadcastOne	SuperServer/RolechangeClientManager.cpp	/^bool RolechangeClientManager::broadcastOne(const void *pstrCmd,int nCmdLen)$/;"	f	class:RolechangeClientManager
broadcastOne	SuperServer/RoleregClientManager.cpp	/^bool RoleregClientManager::broadcastOne(const void *pstrCmd,int nCmdLen)$/;"	f	class:RoleregClientManager
broadcastRushToEveryUser	SessionServer/SessionTask.cpp	/^struct broadcastRushToEveryUser: public execEntry<UserSession>$/;"	s
broadcastScene	SessionServer/SessionTaskManager.cpp	/^bool SessionTaskManager::broadcastScene(const void *pstrCmd,int nCmdLen)$/;"	f	class:SessionTaskManager
broadcastToEveryUser	SessionServer/SessionTask.cpp	/^struct broadcastToEveryUser: public execEntry<UserSession>$/;"	s
bscore	tmpcode/commond.h	/^	WORD bscore;$/;"	m	struct:stSeptPracResultChallengeUserCmd
buf2	ScenesServer/SceneUser.cpp	/^	BYTE buf2[zSocket::MAX_USERDATASIZE];$/;"	m	struct:GetAllRemovePosNpc
buf2	ScenesServer/SceneUser.cpp	/^	BYTE buf2[zSocket::MAX_USERDATASIZE];$/;"	m	struct:GetAllRemovePosUser
bufImage	tmpcode/commond.h	/^	BYTE bufImage[0];$/;"	m	struct:stImageVerifyImageDataUserCmd
bufImage	tmpcode/commond.h	/^	BYTE bufImage[0];$/;"	m	struct:stImageVerifyRetryUserCmd
buffFellow	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::buffFellow(SceneEntryPk_vec &fellows)$/;"	f	class:SceneNpc
buffSelf	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::buffSelf()$/;"	f	class:SceneNpc
buffType	tmpcode/commond.h	/^	BYTE    buffType;               \/\/’˜Õæ (÷˜buff¿‡–Õ)$/;"	m	struct:TankData
buffer	ScenesServer/ChallengeGame.cpp	/^	char buffer[zSocket::MAX_USERDATASIZE];$/;"	m	class:sendAllCardListToUser
buffer	ScenesServer/SceneUser.cpp	/^	char buffer[zSocket::MAX_USERDATASIZE];$/;"	m	class:sendAllObjectListToUser
buffer	base/Command.h	/^  BYTE buffer[0];$/;"	m	struct:Cmd::stQuestVarsUserCmd
buffer	base/zMisc.h	/^	char *buffer(){ return buffer_;}$/;"	f	class:CheckedBuf
buffer	base/zSocket.h	/^	BYTE buffer[size];$/;"	m	class:CmdBuffer_wrapper
buffer	tmpcode/commond.h	/^	BYTE buffer[0]; \/\/±‰¡øµƒ≈≈¡–∞¥Var∂®“Â,◊‹≥§∂»Œ™count$/;"	m	struct:stQuestVarsUserCmd
buffer	tmpcode/commond.h	/^        BYTE buffer[0];     \/\/»ŒŒÒ√Ë ˆ+»ŒŒÒ±‰¡ø¡–±Ì(»ŒŒÒ±‰¡ø“‘Var∂®“ÂŒ™◊º)$/;"	m	struct:showPeronTaskUserCmd
buffer_	base/zMisc.h	/^	char *buffer_;$/;"	m	class:CheckedBuf
buffered	base/zTCPTask.h	/^	bool buffered;                  \/**< ∑¢ÀÕ÷∏¡Ó «∑Òª∫≥Â *\/$/;"	m	class:zTCPTask
bugCountry	base/Command.h	/^  char bugCountry[8];\/\/bugÂèëÁîüÂõΩÂÆ∂$/;"	m	struct:Cmd::stMsgGmTool
bugCountry	base/GmToolCommand.h	/^      char bugCountry[8];\/\/bugÂèëÁîüÂõΩÂÆ∂$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
bugMap	base/Command.h	/^  char bugMap[16];\/\/bugÂèëÁîüÂú∞Âõæ$/;"	m	struct:Cmd::stMsgGmTool
bugMap	base/GmToolCommand.h	/^      char bugMap[16];\/\/bugÂèëÁîüÂú∞Âõæ$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
bugPos	base/Command.h	/^  char bugPos[8];\/\/bugÂèëÁîü‰ΩçÁΩÆ$/;"	m	struct:Cmd::stMsgGmTool
bugPos	base/GmToolCommand.h	/^      char bugPos[8];\/\/bugÂèëÁîü‰ΩçÁΩÆ$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
bugTime	base/Command.h	/^  char bugTime[64];\/\/ÂèëÁîüÊó∂Èó¥$/;"	m	struct:Cmd::stMsgGmTool
bugTime	base/GmToolCommand.h	/^      char bugTime[64];\/\/ÂèëÁîüÊó∂Èó¥$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
build	tmpcode/commond.h	/^	DWORD build[5];$/;"	m	struct:stRetUnionAndProInfo
buildID	tmpcode/commond.h	/^		DWORD buildID;                \/\/Ω®÷˛tempID$/;"	m	struct:stRetUnionBuildInfo::__anon269
buildID	tmpcode/commond.h	/^	DWORD buildID;  \/\/\/ Ω®÷˛ID(Õ®”√ID£¨“≤æÕ «∏ˆŒªŒ™0µƒΩ®÷˛ID)$/;"	m	struct:stUnionTakeBackBuild
buildID	tmpcode/commond.h	/^	DWORD buildID;  \/\/…˙≤˙∏√ŒÔ∆∑µƒΩ®÷˛ID$/;"	m	struct:stRetUnionProStateCmd
buildID	tmpcode/commond.h	/^	DWORD buildID; \/\/0±Ì æ≤ª‘⁄Ω®‘Ï(…˝º∂)÷–, ∑«0±Ì æ‘⁄Ω®‘Ï(…˝º∂)÷–$/;"	m	struct:stRetUnionInfo
buildLevel	tmpcode/commond.h	/^	DWORD buildLevel;               \/\/\/ ∂‘”¶Ω®÷˛µ»º∂$/;"	m	struct:resourceRefine
buildLevel	tmpcode/commond.h	/^	DWORD buildLevel;$/;"	m	struct:stRetVisitResidentTower
buildLevel	tmpcode/commond.h	/^        BYTE  buildLevel;    \/\/µ±«∞Ω®÷˛µ«º«$/;"	m	struct:stRetMagicForgeInfo
buildLevel	tmpcode/commond.h	/^        WORD buildLevel[MAX_BUILD_TECH];$/;"	m	struct:stUnionShop
buildMapID	ScenesServer/SceneManager.cpp	/^DWORD SceneManager::buildMapID(DWORD countryid,DWORD mapid)$/;"	f	class:SceneManager
buildMapName	ScenesServer/SceneManager.cpp	/^bool SceneManager::buildMapName(DWORD countryid,DWORD mapid,char *out)$/;"	f	class:SceneManager
buildMapName	ScenesServer/SceneManager.cpp	/^bool SceneManager::buildMapName(DWORD countryid,const char *in,char *out)$/;"	f	class:SceneManager
buildName	tmpcode/commond.h	/^		char buildName[MAX_NAMESIZE + 1];$/;"	m	struct:stRetUnionBuildInfo::__anon269
buildNum	tmpcode/commond.h	/^	DWORD buildNum;     \/\/Õ≈≤÷ø‚Ω®÷˛◊ ‘¥ ˝¡ø$/;"	m	struct:resourceInfo
buildPer	tmpcode/commond.h	/^        DWORD buildPer;    \/\/≥…π¶¬ $/;"	m	struct:stRetMagicForgeInfo
buildType	tmpcode/commond.h	/^		DWORD buildType;$/;"	m	struct:stRetFinishBuildInfo::BuildType
buildType	tmpcode/commond.h	/^	BYTE buildType; \/\/0: ø™∑≈ Ω 1:∑‚±’ Ω 2: –÷––ƒ			\/\/buildTypeµƒ÷µ÷±Ω””∞œÏ∂‘modelµƒ±‡¬Î”ÎΩ‚¬Î∑Ω Ω$/;"	m	struct:stUnionUpBuild
buildType	tmpcode/commond.h	/^	DWORD buildType; \/\/BUILD_INFO°¢TECH_INFO 0±Ì æΩ®÷˛1±Ì æø∆ºº$/;"	m	struct:stRetUnionBuildInfo
buildType	tmpcode/commond.h	/^	DWORD buildType; \/\/BUILD_INFO°¢TECH_INFO 0±Ì æΩ®÷˛…˝º∂1±Ì æø∆ºº…˝º∂5±Ì æΩ®÷˛∞⁄∑≈$/;"	m	struct:stReqUnionBuild
buildTypelist	tmpcode/commond.h	/^	}buildTypelist[0];$/;"	m	struct:stRetFinishBuildInfo	typeref:struct:stRetFinishBuildInfo::BuildType
businessCount	tmpcode/commond.h	/^		BYTE businessCount;             \/\/≈‹…Ã¥Œ ˝$/;"	m	struct:stGetUnionBusinessmen::__anon349
businessMoney	tmpcode/commond.h	/^		DWORD businessMoney;            \/\/“—◊¨«Æ ˝$/;"	m	struct:stGetUnionBusinessmen::__anon349
businessMoney	tmpcode/commond.h	/^	DWORD   businessMoney;$/;"	m	struct:stGetPackBusiness
businessmenList	tmpcode/commond.h	/^	} businessmenList[0];$/;"	m	struct:stGetUnionBusinessmen	typeref:struct:stGetUnionBusinessmen::__anon349
buyCount	tmpcode/commond.h	/^	BYTE buyCount;$/;"	m	struct:stDancerStateUserCmd
buyState	tmpcode/commond.h	/^	bool buyState;      \/\/π∫¬Ú◊¥Ã¨,≥…π¶Œ™true$/;"	m	struct:stBuyWineState
buyState	tmpcode/commond.h	/^enum buyState   $/;"	g
byAType	base/zDatabase.h	/^		BYTE byAType;$/;"	m	struct:aTypeS::__anon28::__anon29
byAction	base/Command.h	/^  BYTE byAction;        \/\/ ÊîªÂáªÂä®‰Ωú  AniTypeEnum ( Ani_Null ‰∏∫‰∏çÁ°ÆÂÆöÁöÑÔºåÁî±ÂÆ¢Êà∑Á´ØÁ°ÆÂÆö )$/;"	m	struct:Cmd::stAttackMagicUserCmd
byAction	base/zDatabase.h	/^		BYTE byAction;$/;"	m	struct:aTypeS::__anon28::__anon29
byAction	tmpcode/commond.h	/^	BYTE  byAction;     \/\/ º˚CountryAllyActionEnum$/;"	m	struct:stCountryAlly
byAction	tmpcode/commond.h	/^	BYTE byAction;				\/\/ π•ª˜∂Ø◊˜  AniTypeEnum ( Ani_Null Œ™≤ª»∑∂®µƒ£¨”…øÕªß∂À»∑∂® )	$/;"	m	struct:stAttackMagicUserCmd
byAction	tmpcode/commond.h	/^        BYTE byAction;  \/\/ º˚CountryAllyActionEnum$/;"	m	struct:stMercenaryCountryAlly
byActionType	base/Command.h	/^      BYTE byActionType;      \/**< Áâ©ÂìÅÂä®‰ΩúÁ±ªÂûã *\/$/;"	m	struct:Cmd::stAddMobileObjectListPropertyUserCmd::__anon98
byActionType	base/Command.h	/^      BYTE byActionType;      \/**< Áâ©ÂìÅÂä®‰ΩúÁ±ªÂûã *\/$/;"	m	struct:Cmd::stAddObjectListPropertyUserCmd::__anon97
byActionType	base/Command.h	/^    BYTE byActionType;      \/**< Áâ©ÂìÅÂä®‰ΩúÁ±ªÂûã *\/$/;"	m	struct:Cmd::stAddMobileObjectPropertyUserCmd
byActionType	base/Command.h	/^    BYTE byActionType;      \/**< Áâ©ÂìÅÂä®‰ΩúÁ±ªÂûã *\/$/;"	m	struct:Cmd::stAddObjectPropertyUserCmd
byActionType	base/HeroCardCmd.h	/^	BYTE byActionType;  \/\/1,ÃÌº” 2,À¢–¬$/;"	m	struct:Cmd::stAddBattleCardPropertyUserCmd
byActionType	tmpcode/commond.h	/^			BYTE byActionType;			\/**< ŒÔ∆∑∂Ø◊˜¿‡–Õ *\/$/;"	m	struct:stAddObjectListPropertyUserCmd::__anon229
byActionType	tmpcode/commond.h	/^		BYTE byActionType;			\/**< ŒÔ∆∑∂Ø◊˜¿‡–Õ *\/$/;"	m	struct:stAddObjectPropertyUserCmd
byAdditId	tmpcode/commond.h	/^	BYTE byAdditId;  \/\/¥Œ¡È∆˜$/;"	m	struct:stEvolveLingQiUserCmd
byAdditOneId	tmpcode/commond.h	/^	BYTE byAdditOneId;  \/\/∏±¡È∆˜1$/;"	m	struct:stMergeLingQiUserCmd
byAdditTwoId	tmpcode/commond.h	/^	BYTE byAdditTwoId;  \/\/∏±¡È∆˜2$/;"	m	struct:stMergeLingQiUserCmd
byAgree	base/Command.h	/^  BYTE  byAgree;        \/\/ ÊòØÂê¶ÂêåÊÑè$/;"	m	struct:Cmd::stAnswerNameTeamUserCmd
byAgree	base/Command.h	/^  BYTE  byAgree;        \/\/ ÊòØÂê¶ÂêåÊÑè$/;"	m	struct:Cmd::stAnswerTeamUserCmd
byAgree	base/Command.h	/^  BYTE byAgree;        \/**< ÊòØÂê¶ÂêåÊÑè‰∫§Êòì *\/$/;"	m	struct:Cmd::stAnswerTradeUserCmd
byAgree	base/SessionCommand.h	/^		BYTE  byAgree;							\/\/\/ sky ÊòØÂê¶ÂêåÊÑè(0:Âê¶ 1:ÊòØ)$/;"	m	struct:Cmd::Session::t_Team_AnswerTeam
byAgree	tmpcode/commond.h	/^	BYTE  byAgree;				\/\/  «∑ÒÕ¨“‚$/;"	m	struct:stAnswerNameTeamUserCmd
byAgree	tmpcode/commond.h	/^	BYTE byAgree;				\/**<  «∑ÒÕ¨“‚Ωª“◊ *\/$/;"	m	struct:stAnswerTradeUserCmd
byAgree	tmpcode/commond.h	/^	BYTE byAgree;			\/\/ «∑ÒÕ¨“‚∑±÷≥$/;"	m	struct:stAnswerDecayLingQiCmd
byAgree	tmpcode/commond.h	/^        BYTE byAgree;\/\/0-Õ¨“‚£¨1-≤ªÕ¨“‚$/;"	m	struct:stReplyChunYunCmd
byAgree	tmpcode/commond.h	/^    BYTE byAgree;                           \/**<  «∑ÒÕ¨“‚Ωª“◊ *\/$/;"	m	struct:stAnswerRideJoinUserCmd
byAimId	tmpcode/commond.h	/^	BYTE byAimId;    \/\/÷˜¡È∆˜$/;"	m	struct:stEvolveLingQiUserCmd
byAimId	tmpcode/commond.h	/^	BYTE byAimId;    \/\/÷˜¡È∆˜$/;"	m	struct:stEvolveUseLingYuanZhuLingQiUserCmd
byAimId	tmpcode/commond.h	/^	BYTE byAimId;    \/\/÷˜¡È∆˜$/;"	m	struct:stMergeLingQiUserCmd
byAnswerQuestionTime	base/Command.h	/^  BYTE byAnswerQuestionTime;  \/\/ Á≠îÈ¢òÊó∂Èó¥$/;"	m	struct:Cmd::stQuizParam
byAnswerStatus	base/Command.h	/^  int byAnswerStatus; \/\/ -1:ÊîæÂºÉÔºå0:ÂõûÁ≠îÊ≠£Á°Æ,1:ÂõûÁ≠îÈîôËØØ$/;"	m	struct:Cmd::stAnswerReturnQuiz
byAnswerUserName	base/Command.h	/^  char byAnswerUserName[MAX_NAMESIZE];    \/\/ ÂõûÁ≠îËÄÖÂêçÂ≠ó$/;"	m	struct:Cmd::stAnswerNameTeamUserCmd
byAnswerUserName	base/Command.h	/^  char byAnswerUserName[MAX_NAMESIZE];    \/\/ ÂõûÁ≠îËÄÖÂêçÂ≠ó,ËøîÂõûÁªôÂÆ¢Êà∑Á´ØÊòØËØ∑Ê±ÇËÄÖÂêçÂ≠ó$/;"	m	struct:Cmd::stRequestNameTeamUserCmd
byAnswerUserName	base/SessionCommand.h	/^		char byAnswerUserName[MAX_NAMESIZE];	\/\/\/ sky ÂõûÁ≠îËÄÖÁöÑÂêçÂ≠ó$/;"	m	struct:Cmd::Session::t_Team_AnswerTeam
byAnswerUserName	base/SessionCommand.h	/^		char byAnswerUserName[MAX_NAMESIZE];	\/\/\/ sky ÂõûÁ≠îËÄÖÁöÑÂêçÂ≠ó$/;"	m	struct:Cmd::Session::t_Team_RequestTeam
byAnswerUserName	tmpcode/commond.h	/^	char byAnswerUserName[MAX_NAMESIZE];		\/\/ ªÿ¥’ﬂ√˚◊÷$/;"	m	struct:stAnswerNameTeamUserCmd
byAnswerUserName	tmpcode/commond.h	/^	char byAnswerUserName[MAX_NAMESIZE];	\/\/ ªÿ¥’ﬂ√˚◊÷,∑µªÿ∏¯øÕªß∂À ««Î«Û’ﬂ√˚◊÷$/;"	m	struct:stRequestNameTeamUserCmd
byAttackType	base/Command.h	/^  BYTE byAttackType;      \/**< ÊîªÂáªÁ±ªÂûãÔºöATTACKTYPE_U2U,ATTACKTYPE_U2N,ATTACKTYPE_N2U *\/$/;"	m	struct:Cmd::stAttackMagicUserCmd
byAttackType	tmpcode/commond.h	/^	BYTE byAttackType;			\/**< π•ª˜¿‡–Õ£∫ATTACKTYPE_U2U,ATTACKTYPE_U2N,ATTACKTYPE_N2U *\/$/;"	m	struct:stAttackMagicUserCmd
byAttrType	tmpcode/commond.h	/^	BYTE byAttrType;		  \/\/µ±byType == 0 ±, 0  -- √ª”–Ω¯»Î»´–«◊¥Ã¨;	 1 -- »´…Ì◊∞±∏6–«;	2 -- »´…Ì◊∞±∏9–«;; \/\/µ±byType == 1 ±0 -- √ª”–Ω¯»Î»´‘¬¡¡◊¥Ã¨;	1 -- »´…Ì◊∞±∏‘¬¡¡;	2 -- »´…Ì◊∞±∏‘¬¡¡; 3 -- »´…Ì◊∞±∏‘¬¡¡;$/;"	m	struct:stReturnQuestionJinglingZhige
byAvailable	base/Command.h	/^  BYTE byAvailable;           \/**< Â§ßÈôÜÊòØÂê¶ÂèØÁî® *\/$/;"	m	struct:Cmd::t_LandMass
byAwardType	tmpcode/commond.h	/^	BYTE byAwardType;     \/\/ 1-…˝–«, 2-æ≠—Èœ‰, 3-≤∆∏ªœ‰, 4-Ω‚∑‚$/;"	m	struct:stSevenDragonBallsAwardUserCmd
byBind	tmpcode/commond.h	/^	BYTE byBind;  \/\/  «∑Ò∞Û∂®$/;"	m	struct:Exchange4ConfigItem
byBind	tmpcode/commond.h	/^	BYTE byBind;  \/\/  «∑Ò∞Û∂®$/;"	m	struct:Exchange4ConfigItemClient
byBossNum	tmpcode/commond.h	/^	BYTE byBossNum;  \/\/ µ±«∞≥ˆœ÷µƒBOSS(µ⁄1-3∏ˆ), 0-ªÓ∂ØŒ¥ø™ º 4-À˘”–boss∂º“—æ≠À¿Õˆ$/;"	m	struct:stDragonIslandMazeBossState
byBuyCount	tmpcode/commond.h	/^	BYTE byBuyCount;  \/\/ “—π∫¬Ú±£œ’∏ˆ ˝,º¥œ¬√Ê ˝◊È‘™Àÿµƒ∏ˆ ˝.$/;"	m	struct:stReturnBoughtWeekAssurance
byCalcTime	base/Command.h	/^  BYTE byCalcTime;    \/\/ ËÆ°ÁÆóÁ≠îÊ°àÊó∂Èó¥$/;"	m	struct:Cmd::stQuizParam
byCallerType	base/Command.h	/^  BYTE  byCallerType;      \/\/enmCallDutyType$/;"	m	struct:Cmd::stDareCallDuty
byCallerType	tmpcode/commond.h	/^	BYTE	byCallerType;			\/\/enmCallDutyType$/;"	m	struct:stDareCallDuty
byCallerType	tmpcode/commond.h	/^        BYTE    byCallerType;                   \/\/enmCallDutyType$/;"	m	struct:stMercenaryCallDuty
byCanOpen	tmpcode/commond.h	/^	DWORD byCanOpen; \/\/1:ø…“‘ø™ 0:≤ªø…“‘ø™$/;"	m	struct:stRTTreasureUserCmd
byCmd	base/NullUserCmd.h	/^      BYTE  byCmd;$/;"	m	struct:Cmd::stNullUserCmd::__anon23::__anon24
byCmd	tmpcode/commond.h	/^			BYTE	byCmd;$/;"	m	struct:stNullUserCmd::__anon206::__anon207
byCmdType	base/NullUserCmd.h	/^      BYTE  byCmdType;$/;"	m	struct:Cmd::stNullUserCmd::__anon23::__anon25
byCmdType	tmpcode/commond.h	/^			BYTE	byCmdType;$/;"	m	struct:stNullUserCmd::__anon206::__anon208
byColorIndex	tmpcode/commond.h	/^	BYTE byColorIndex;  \/\/ ÕÊº“—°‘Òµƒ≈˚∑Á—’…´–Ú∫≈: 1-5$/;"	m	struct:stSelectGuildManteauUserCmd
byContinuPerf	tmpcode/commond.h	/^	BYTE byContinuPerf;	\/\/ Continuous Perfect, ¡¨–¯ÕÍ√¿µƒ¥Œ ˝$/;"	m	struct:stDanceGameScore
byCool	tmpcode/commond.h	/^			BYTE byCool;                                 $/;"	m	struct:stDanceGameScore::__anon307::__anon308
byCountryName	base/SessionCommand.h	/^      BYTE byCountryName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_regUser_GateSession
byDareRepute	base/Command.h	/^    BYTE byDareRepute; \/\/ ÂÆ∂ÊóèÈöèÊÑèÊàòÊó∂Ôºå‰∏ãÂ§öÂ∞ëÂ£∞ÊúõÂÅö‰∏∫ËµåËµÑÁ±ªÂûãÔºåÁ±ªÂûãÊúâÂõõÁßç:1,2,3,4 ÂàÜÂà´ÂØπÂ∫î1„ÄÅ5„ÄÅ10„ÄÅ20Â£∞Êúõ$/;"	m	struct:Cmd::stActiveDareCmd
byDecayId	tmpcode/commond.h	/^	BYTE byDecayId;    \/\/Õ…±‰¡È∆˜id$/;"	m	struct:stSelfDecayLingQiUserCmd
byDecayUserName	tmpcode/commond.h	/^	char byDecayUserName[MAX_NAMESIZE];$/;"	m	struct:stRequestDecayLingQiCmd
byDir	base/Command.h	/^    BYTE byDir;$/;"	m	struct:Cmd::t_MapNpcData
byDir	base/Command.h	/^  BYTE byDir;          \/\/ ÊñπÂêëÔºàÂ¶ÇÊûú‰∏∫ -1 Âàô‰∏çÁ°ÆÂÆöÊñπÂêëÔºâ$/;"	m	struct:Cmd::stNpcPosition
byDir	base/Command.h	/^  BYTE byDir;          \/\/ ÊñπÂêëÔºàÂ¶ÇÊûú‰∏∫ -1 Âàô‰∏çÁ°ÆÂÆöÊñπÂêëÔºâ$/;"	m	struct:Cmd::t_MapBuildingDataPos
byDir	base/Command.h	/^  BYTE byDir;          \/\/ ÊñπÂêëÔºàÂ¶ÇÊûú‰∏∫ -1 Âàô‰∏çÁ°ÆÂÆöÊñπÂêëÔºâ$/;"	m	struct:Cmd::t_MapNpcDataPosState
byDir	base/Command.h	/^  BYTE byDir;          \/\/ ÊñπÂêëÔºàÂ¶ÇÊûú‰∏∫ -1 Âàô‰∏çÁ°ÆÂÆöÊñπÂêëÔºâ$/;"	m	struct:Cmd::t_MapUserDataPos
byDir	base/Command.h	/^  BYTE byDir;          \/\/ ÊñπÂêëÔºàÂ¶ÇÊûú‰∏∫ -1 Âàô‰∏çÁ°ÆÂÆöÊñπÂêëÔºâ$/;"	m	struct:Cmd::t_MapUserDataPosState
byDir	tmpcode/commond.h	/^	BYTE byDir;					\/\/ ∑ΩœÚ£®»Áπ˚Œ™ -1 ‘Ú≤ª»∑∂®∑ΩœÚ£©$/;"	m	struct:t_MapUserDataPos
byDir	tmpcode/commond.h	/^	BYTE byDir;					\/\/ ∑ΩœÚ£®»Áπ˚Œ™ -1 ‘Ú≤ª»∑∂®∑ΩœÚ£©$/;"	m	struct:t_MapUserDataPosState
byDir	tmpcode/commond.h	/^	BYTE byDir;			    \/\/ ∑ΩœÚ£®»Áπ˚Œ™ -1 ‘Ú≤ª»∑∂®∑ΩœÚ£©$/;"	m	struct:t_MapNPCData
byDir	tmpcode/commond.h	/^	BYTE byDir;             \/\/ ∑ΩœÚ£®»Áπ˚Œ™ -1 ‘Ú≤ª»∑∂®∑ΩœÚ£©$/;"	m	struct:npcState
byDirect	base/Command.h	/^	BYTE byDirect;        \/**< NpcÁöÑÊñπÂêë *\/$/;"	m	struct:Cmd::t_NpcData
byDirect	base/Command.h	/^    BYTE byDirect;        \/**< ÂêéÈÄÄÁöÑÊñπÂêë *\/$/;"	m	struct:Cmd::stBackOffMagicUserCmd
byDirect	base/Command.h	/^    BYTE byDirect;        \/**< ÁßªÂä®ÊñπÂêë *\/$/;"	m	struct:Cmd::stNpcMoveMoveUserCmd
byDirect	base/Command.h	/^    BYTE byDirect;        \/**< ÁßªÂä®ÊñπÂêë *\/$/;"	m	struct:Cmd::stUserMoveMoveUserCmd
byDirect	base/Command.h	/^  BYTE byDirect;        \/**< ÊîªÂáªÊñπÂêë *\/$/;"	m	struct:Cmd::stAttackMagicUserCmd
byDirect	base/Command.h	/^  BYTE byDirect;        \/**< ÊñπÂêë *\/$/;"	m	struct:Cmd::stRTMagicUserCmd
byDirect	tmpcode/commond.h	/^	BYTE byDirect;				\/**< π•ª˜∑ΩœÚ *\/$/;"	m	struct:stAttackMagicUserCmd
byDirect	tmpcode/commond.h	/^	BYTE byDirect;				\/**< ∫ÛÕÀµƒ∑ΩœÚ *\/$/;"	m	struct:stBackOffMagicUserCmd
byDirect	tmpcode/commond.h	/^	BYTE byDirect;                          \/**< “∆∂Ø∑ΩœÚ *\/$/;"	m	struct:stNpcMoveMoveUserCmd
byDirect	tmpcode/commond.h	/^    BYTE byDirect;                          \/**< Npcµƒ∑ΩœÚ *\/$/;"	m	struct:t_NPCData
byElementType	tmpcode/commond.h	/^	BYTE byElementType;  \/\/ ‘™Àÿ¿‡–Õ, º˚EnumElement$/;"	m	struct:stNotifySealValueMagicUserCmd
byFirstGiftGot	tmpcode/commond.h	/^	BYTE byFirstGiftGot;  \/\/ “ªΩ◊¿Ò∞¸ «∑Ò“—¡Ï»°$/;"	m	struct:stReturnExchangeGiftState
byGiftIndex	tmpcode/commond.h	/^	BYTE byGiftIndex;  \/\/ 0..3±Ì æ¿ÒŒÔ∫≈£¨∆‰À˚ ˝◊÷Œﬁ–ß$/;"	m	struct:stGetExchange2Gift
byGiftIndex	tmpcode/commond.h	/^	BYTE byGiftIndex;  \/\/ 0..3±Ì æ¿ÒŒÔ∫≈£¨∆‰À˚ ˝◊÷Œﬁ–ß$/;"	m	struct:stGetExchange3Gift
byGiftIndex	tmpcode/commond.h	/^	BYTE byGiftIndex;  \/\/ 1,2,3 ±Ì æ“ª∂˛»˝Ω◊¿Ò∞¸£¨∆‰À˚ ˝◊÷Œﬁ–ß$/;"	m	struct:stGetExchangeGift
byGood	tmpcode/commond.h	/^			BYTE byGood;                                 $/;"	m	struct:stDanceGameScore::__anon307::__anon308
byGoodnessType	ScenesServer/SkillStatusManager.h	/^  BYTE  byGoodnessType;$/;"	m	struct:SkillStatusElement
byHairType	base/Command.h	/^  BYTE byHairType;\/\/Â§¥ÂèëÂèëÂûã$/;"	m	struct:Cmd::stHairPropertyUserCmd
byHead	base/Command.h	/^  BYTE byHead;          \/\/ ÊòØÂê¶ÊòØÈòüÈïø$/;"	m	struct:Cmd::stTeamMemberData
byHead	tmpcode/commond.h	/^	BYTE byHead;					\/\/  «∑Ò «∂”≥§$/;"	m	struct:stTeamMemberData
byHouseLevel	tmpcode/commond.h	/^	BYTE byHouseLevel;$/;"	m	struct:rtShowLingQiHouseItemCmd
byIsDead	tmpcode/commond.h	/^	BYTE byIsDead;   \/\/ BOSS «∑Ò“—À¿Õˆ  0:√ª”–À¿Õˆ ∆‰À¸:À¿Õˆ$/;"	m	struct:stDragonIslandMazeBossState
byItemCount	tmpcode/commond.h	/^	BYTE byItemCount;  \/\/ “‘œ¬ŒÔ∆∑∂®“Â∏ˆ ˝$/;"	m	struct:stNewbieGiftUserCmd
byKingConsort	base/SessionCommand.h	/^      BYTE  byKingConsort;$/;"	m	struct:Cmd::Session::t_updateConsort
byLevel	base/SessionCommand.h	/^		BYTE byLevel;$/;"	m	struct:Cmd::Session::t_Sports_ReturnMapID
byLevel	base/SessionCommand.h	/^      BYTE byLevel;$/;"	m	struct:Cmd::Session::t_regScene_SceneSession
byLevel	tmpcode/commond.h	/^	BYTE byLevel;                                                $/;"	m	struct:stDanceGameChallenge
byLevel	tmpcode/commond.h	/^	BYTE byLevel;    \/\/µ±«∞–°Œ›µ»º∂$/;"	m	struct:stLevelDecayHouseUserCmd
byLuck	base/Command.h	/^  BYTE  byLuck;  \/\/ ÊòØÂê¶‰ΩøÁî®Âπ∏ËøêÊòü,1‰ΩøÁî®ÔºåÂÖ∂ÂÆÉÂÄºÊòØ‰∏ç‰ΩøÁî®$/;"	m	struct:Cmd::stAnswerQuiz
byLuck	base/Command.h	/^  BYTE byLuck;        \/\/Âπ∏ËøêÔºå‰∏∫1Ë°®Á§∫ËøôÊòØÂπ∏ËøêÊîªÂáªÔºå‰∏∫0Ë°®Á§∫ÊôÆÈÄöÊîªÂáªÁªìÊûú$/;"	m	struct:Cmd::stRTMagicUserCmd
byMapFileName	base/SessionCommand.h	/^      BYTE byMapFileName[MAX_NAMESIZE+1];	\/\/sky Âú∞ÂõæÊñá‰ª∂Âêç$/;"	m	struct:Cmd::Session::t_changeUser_GateSession
byMapName	base/SessionCommand.h	/^	  BYTE byMapName[MAX_NAMESIZE+1];		\/\/sky Âú∞ÂõæÂêçÂ≠ó$/;"	m	struct:Cmd::Session::t_changeUser_GateSession
byMapName	base/SessionCommand.h	/^      BYTE byMapName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_regUser_GateSession
byMapName	base/SessionCommand.h	/^      BYTE byMapName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
byMiss	tmpcode/commond.h	/^			BYTE byMiss;                                 $/;"	m	struct:stDanceGameScore::__anon307::__anon308
byModelType	tmpcode/commond.h	/^	BYTE byModelType;  \/\/œÎ“™◊™±‰µƒƒ£–Õ¿‡–Õ$/;"	m	struct:stMergeLingQiUserCmd
byMsgType	base/Command.h	/^  BYTE byMsgType;$/;"	m	struct:Cmd::stQueryQuiz
byMutexType	ScenesServer/SkillStatusManager.h	/^  BYTE  byMutexType;$/;"	m	struct:SkillStatusElement
byName	base/SessionCommand.h	/^		char byName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_Sports_ReturnMapID
byName	base/SessionCommand.h	/^      BYTE byName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_changeUser_GateSession
byName	base/SessionCommand.h	/^      BYTE byName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_regUser_GateSession
byName	base/SessionCommand.h	/^      BYTE byName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
byName	base/SessionCommand.h	/^      char byName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_regScene_SceneSession
byNeedSpace	tmpcode/commond.h	/^	BYTE byNeedSpace;  \/\/ –Ë“™∞¸π¸$/;"	m	struct:stNewbieGiftUserCmd
byNew1	base/Command.h	/^  char byNew1[MAX_PASSWORD];    \/\/\/ Êñ∞ÂØÜÁ†Å$/;"	m	struct:Cmd::stPassowrdStockUserCmd
byNew1	tmpcode/commond.h	/^	char byNew1[MAX_PASSWORD];      \/\/\/ –¬√‹¬Î$/;"	m	struct:stPassowrdStockUserCmd
byNew2	base/Command.h	/^  char byNew2[MAX_PASSWORD];    \/\/\/ Á°ÆËÆ§ÂØÜÁ†Å$/;"	m	struct:Cmd::stPassowrdStockUserCmd
byNew2	tmpcode/commond.h	/^	char byNew2[MAX_PASSWORD];      \/\/\/ »∑»œ√‹¬Î$/;"	m	struct:stPassowrdStockUserCmd
byNextStartTime	base/Command.h	/^  BYTE  byNextStartTime;$/;"	m	struct:Cmd::stQuestionQuiz
byNum	tmpcode/commond.h	/^	DWORD  byNum; \/\/ ŒÔ∆∑ ˝¡ø$/;"	m	struct:GiftItem
byOccupy	tmpcode/commond.h	/^	BYTE byOccupy;$/;"	m	struct:stRetCurrentCityTax
byOldType	base/Command.h	/^  BYTE byOldType;\/\/enumMapDataType$/;"	m	struct:Cmd::stSelectPropertyUserCmd
byOldType	tmpcode/commond.h	/^	BYTE byOldType;\/\/enumMapDataType$/;"	m	struct:stSelectPropertyUserCmd
byOnline	base/Command.h	/^  BYTE  byOnline;                          \/\/ ÊàêÂëòÂú®Á∫øÊ†áÂøó 0 ‰∏∫‰∏çÂú®Á∫ø Èùû0‰∏∫Âú®Á∫ø$/;"	m	struct:Cmd::stUnionRember
byOnline	base/Command.h	/^  BYTE  byOnline;            \/\/ ÊàêÂëòÂú®Á∫øÊ†áÂøó 0 ‰∏∫‰∏çÂú®Á∫ø Èùû0‰∏∫Âú®Á∫ø$/;"	m	struct:Cmd::stSeptRember
byOnline	tmpcode/commond.h	/^	BYTE  byOnline;                                         \/\/ ≥…‘±‘⁄œﬂ±Í÷æ 0 Œ™≤ª‘⁄œﬂ ∑«0Œ™‘⁄œﬂ$/;"	m	struct:stSeptRember
byOnline	tmpcode/commond.h	/^        BYTE  byOnline;                                 \/\/ ≥…‘±‘⁄œﬂ±Í÷æ 0 Œ™≤ª‘⁄œﬂ ∑«0Œ™‘⁄œﬂ$/;"	m	struct:stUnionRember
byOpType	base/SessionCommand.h	/^      BYTE  byOpType;$/;"	m	struct:Cmd::Session::t_GMCreateUnionCity_SceneSession
byOpType	base/SessionCommand.h	/^      BYTE byOpType; \/\/1‰∏∫ÂêØÂä®Ôºå0‰∏∫ÁªìÊùü$/;"	m	struct:Cmd::Session::t_opTechVote_SceneSession
byOpType	tmpcode/commond.h	/^	BYTE byOpType;	\/\/0: ¡Ï»° 1: …æ≥˝$/;"	m	struct:stGetDecayedLingQiUserCmd
byOper	base/SessionCommand.h	/^      BYTE byOper;   \/\/ 0‰∏∫Âà†Èô§ 1‰∏∫Â¢ûÂä†$/;"	m	struct:Cmd::Session::t_Session_HandleBlackList
byPKMode	base/Command.h	/^    BYTE byPKMode;$/;"	m	struct:Cmd::stPKModeUserCmd
byPKMode	tmpcode/commond.h	/^    BYTE byPKMode;$/;"	m	struct:stPKModeUserCmd
byParam	base/NullUserCmd.h	/^      BYTE  byParam;$/;"	m	struct:Cmd::stNullUserCmd::__anon23::__anon24
byParam	tmpcode/commond.h	/^			BYTE	byParam;$/;"	m	struct:stNullUserCmd::__anon206::__anon207
byParameterType	base/NullUserCmd.h	/^      BYTE  byParameterType;$/;"	m	struct:Cmd::stNullUserCmd::__anon23::__anon25
byParameterType	tmpcode/commond.h	/^			BYTE	byParameterType;$/;"	m	struct:stNullUserCmd::__anon206::__anon208
byPatternIndex	tmpcode/commond.h	/^	BYTE byPatternIndex;  \/\/ ÕÊº“—°‘Òµƒ≈˚∑ÁÕº∞∏–Ú∫≈: 1-15$/;"	m	struct:stSelectGuildManteauUserCmd
byPawword	base/Command.h	/^  char byPawword[MAX_PASSWORD];  \/\/\/ ÂΩìÂâçÂØÜÁ†Å$/;"	m	struct:Cmd::stPassowrdStockUserCmd
byPawword	tmpcode/commond.h	/^	char byPawword[MAX_PASSWORD];   \/\/\/ µ±«∞√‹¬Î$/;"	m	struct:stPassowrdStockUserCmd
byPerfect	tmpcode/commond.h	/^			BYTE byPerfect;                              $/;"	m	struct:stDanceGameScore::__anon307::__anon308
byPipeline	base/Command.h	/^  BYTE  byPipeline;        \/\/enmCallDutyPipeline$/;"	m	struct:Cmd::stDareCallDuty
byPipeline	tmpcode/commond.h	/^	BYTE	byPipeline;				\/\/enmCallDutyPipeline$/;"	m	struct:stDareCallDuty
byPipeline	tmpcode/commond.h	/^        BYTE    byPipeline;                             \/\/enmCallDutyPipeline$/;"	m	struct:stMercenaryCallDuty
byPointsCount	tmpcode/commond.h	/^	BYTE byPointsCount;  \/\/ ±£œ’¿‡±∏ˆ ˝, º¥œ¬√Ê ˝◊È‘™Àÿ∏ˆ ˝$/;"	m	struct:stReturnWeekAssuranceConfig
byPosition	tmpcode/commond.h	/^		BYTE byPosition;$/;"	m	struct:stPositionNameListCmd::__anon263
byPosition	tmpcode/commond.h	/^	BYTE byPosition;$/;"	m	struct:stCancelPositionSet
byPosition	tmpcode/commond.h	/^	BYTE byPosition;$/;"	m	struct:stSeptPositionSet
byPower	base/Command.h	/^  BYTE byPower[2];                    \/\/ Ê∂àÊÅØÊé•Êî∂ËÄÖÁöÑÊùÉÈôê‰ø°ÊÅØ$/;"	m	struct:Cmd::stReturnUnionMemberInfoCmd
byPower	base/Command.h	/^  BYTE byPower[2]; \/\/ ÊùÉÈôê$/;"	m	struct:Cmd::stUnionMemberPower
byPower	tmpcode/commond.h	/^	BYTE byPower[2];                    \/\/ œ˚œ¢Ω” ’’ﬂµƒ»®œﬁ–≈œ¢$/;"	m	struct:stReturnUnionMemberInfoCmd
byPower	tmpcode/commond.h	/^	BYTE byPower[2]; \/\/ »®œﬁ$/;"	m	struct:stUnionMemberPower
byPowerUnion	base/SessionCommand.h	/^      BYTE byPowerUnion[(17+7)\/8];$/;"	m	struct:Cmd::Session::t_sendUserRelationID
byProperty	base/Command.h	/^  BYTE  byProperty;$/;"	m	struct:Cmd::stClearPointLimitPropertyUserCmd
byQuizType	base/Command.h	/^  BYTE byQuizType; \/\/ 1ÊòØÊôÆÈÄöÂÖ®ÂõΩÔºå2ÊòØÊ¥ªÂä®$/;"	m	struct:Cmd::stQueryQuiz
byReadQuestionTime	base/Command.h	/^  BYTE byReadQuestionTime;  \/\/ ËØªÈ¢òÊó∂Èó¥$/;"	m	struct:Cmd::stQuizParam
byRequestUserName	base/Command.h	/^  char byRequestUserName[MAX_NAMESIZE];    \/\/ ËØ∑Ê±ÇËÄÖÂêçÂ≠ó$/;"	m	struct:Cmd::stAnswerNameTeamUserCmd
byRequestUserName	base/SessionCommand.h	/^		char byRequestUserName[MAX_NAMESIZE];	\/\/\/ sky ËØ∑Ê±ÇËÄÖÁöÑÂêçÂ≠ó$/;"	m	struct:Cmd::Session::t_Team_AnswerTeam
byRequestUserName	base/SessionCommand.h	/^		char byRequestUserName[MAX_NAMESIZE];	\/\/\/ sky ËØ∑Ê±ÇËÄÖÁöÑÂêçÂ≠ó$/;"	m	struct:Cmd::Session::t_Team_RequestTeam
byRequestUserName	tmpcode/commond.h	/^	char byRequestUserName[MAX_NAMESIZE];		\/\/ «Î«Û’ﬂ√˚◊÷$/;"	m	struct:stAnswerNameTeamUserCmd
byRequestUserName	tmpcode/commond.h	/^	char byRequestUserName[MAX_NAMESIZE];           \/\/ ΩˆΩˆ‘⁄∑µªÿ∏¯øÕªß∂À ± π”√”√”⁄œ‘ æ«Î«Û’ﬂµƒ√˚◊÷$/;"	m	struct:stRequestNameTeamUserCmd
byResult	base/Command.h	/^  BYTE   byResult;      \/\/ 0,ÊåëÊàòÂõΩËÉú(ÊîªÈô∑ÂØπÊñπÁöáÂüé)Ôºå1,ÊåëÊàòÂõΩË¥•(Êó∂Èó¥Âà∞‰∫ÜÔºåÂç¥Êú™ÊîªÈô∑)Ôºå2,Èò≤Âæ°ÂõΩÂèçÊîªÊàêÂäü(ÊîªÈô∑ÊåëÊàòÂõΩÁöáÂüé)$/;"	m	struct:Cmd::stDareResult
byResult	base/Command.h	/^  BYTE  byResult; \/\/ ÂØπÊàòÁªìÊûúÔºå1‰∏∫ËÉúÊñπÔºå0‰∏∫Â§±Ë¥•Êñπ,ÂΩìbyStatus‰∏∫0Êó∂ÔºåËØ•Â≠óÊÆµÊúâÊÑè‰πâ$/;"	m	struct:Cmd::stSetCountryDareUserCmd
byResult	tmpcode/commond.h	/^	BYTE byResult;	\/\/ 0: ≤ª‘ –Ì£¨∑«0£∫‘ –Ìø™ ºÕ⁄±¶$/;"	m	struct:stRetStartDigTreasureUserCmd
byResult	tmpcode/commond.h	/^	BYTE byResult;	\/\/ 0: Õ⁄±¶ªπŒ¥Ω· ¯£ª∑«0£∫Õ⁄±¶≥…π¶Ω· ¯$/;"	m	struct:stRetEndDigTreasureUserCmd
byResult	tmpcode/commond.h	/^	BYTE byResult;	\/\/ ÷µ”ÚŒ™ DanceGamePerfectEnum               $/;"	m	struct:stDanceGameReturn
byRetcode	base/Command.h	/^  BYTE byRetcode;        \/**< ËøîÂõû‰ª£Á†ÅÔºöRTMAGIC_SUCCESS,RTMAGIC_FAILURE... *\/$/;"	m	struct:Cmd::stRTMagicUserCmd
byRetcode	base/SessionCommand.h	/^      DWORD byRetcode;            \/\/\/ ÂàõÂª∫ËøîÂõûÊó∂Ôºö0 Ë°®Á§∫ÂàõÂª∫Â§±Ë¥•ÂêçÁß∞ÈáçÂ§çÔºå 1Ë°®Á§∫ÊàêÂäü$/;"	m	struct:Cmd::Session::t_addSept_SceneSession
byRetcode	base/SessionCommand.h	/^      DWORD byRetcode;            \/\/\/ ÂàõÂª∫ËøîÂõûÊó∂Ôºö0 Ë°®Á§∫ÂàõÂª∫Â§±Ë¥•ÂêçÁß∞ÈáçÂ§çÔºå 1Ë°®Á§∫ÊàêÂäü$/;"	m	struct:Cmd::Session::t_addUnion_SceneSession
byRetcode	tmpcode/commond.h	/^	BYTE    byRetcode;      \/**<∑µªÿ¥˙¬ÎRTMAGIC_SUCCESS,RTMAGIC_FAILURE...*\/$/;"	m	struct:stDefenceList
byRetcode	tmpcode/commond.h	/^	BYTE    byRetcode;      \/**<∑µªÿ¥˙¬ÎRTMAGIC_SUCCESS,RTMAGIC_FAILURE...*\/$/;"	m	struct:stDefenceListToAtt
byRetcode	tmpcode/commond.h	/^	BYTE    byRetcode;      \/**<∑µªÿ¥˙¬ÎRTMAGIC_SUCCESS,RTMAGIC_FAILURE...*\/$/;"	m	struct:stReturnDefenceList
byReturn	base/BillCommand.h	/^      BYTE byReturn;  \/\/ËøîÂõûÁ±ªÂûã$/;"	m	struct:Cmd::Bill::t_Redeem_Gold_Gateway
byReturn	base/BillCommand.h	/^      BYTE byReturn;  \/\/ËøîÂõûÁ±ªÂûã$/;"	m	struct:Cmd::Bill::t_Redeem_MonthCard_Gateway
byReturn	base/BillCommand.h	/^      BYTE byReturn;  \/\/ËøîÂõûÁ±ªÂûã$/;"	m	struct:Cmd::Bill::t_Return_Card_Gold
byReturn	base/BillCommand.h	/^      BYTE byReturn;  \/\/ËøîÂõûÁ±ªÂûã$/;"	m	struct:Cmd::Bill::t_Return_ObjCard
byReturn	base/BillCommand.h	/^      BYTE byReturn;  \/\/ËøîÂõûÁ±ªÂûã$/;"	m	struct:Cmd::Bill::t_Return_Point
byReturn	base/Command.h	/^  BYTE byReturn;  \/\/\/ÂØÜÁ†ÅËÆæÁΩÆËøîÂõûÁ±ªÂûã$/;"	m	struct:Cmd::stReturnPasswordStockIserCmd
byReturn	base/Command.h	/^  BYTE byReturn;  \/\/ËøîÂõûÁ±ªÂûã$/;"	m	struct:Cmd::stRedeemGold
byReturn	base/Command.h	/^  BYTE byReturn;  \/\/ËøîÂõûÁ±ªÂûã$/;"	m	struct:Cmd::stRedeemMonthCard
byReturn	base/Command.h	/^  BYTE byReturn;  \/\/ËøîÂõûÁ±ªÂûã$/;"	m	struct:Cmd::stReturnConSumeCardCard
byReturn	base/Command.h	/^  BYTE byReturn;$/;"	m	struct:Cmd::stVisitNpcTradeUserCmd
byReturn	base/Command.h	/^  BYTE byReturn;\/*0Ë°®Á§∫Â§±Ë¥•,1Ë°®Á§∫ÊàêÂäü*\/$/;"	m	struct:Cmd::stReturnCancelListStockUserCmd
byReturn	base/Command.h	/^  BYTE byReturn;\/\/Êü•ËØ¢ËøîÂõûÁ±ªÂûã$/;"	m	struct:Cmd::stReturnRequestPoint
byReturn	base/Command.h	/^  BYTE byReturn;\/\/ËøîÂõûÁ±ªÂûã$/;"	m	struct:Cmd::stReturnCardAndGold
byReturn	tmpcode/commond.h	/^	BYTE byReturn;	\/\/ 0-≥…π¶, ∆‰À˚ ß∞‹$/;"	m	struct:stRetAssignLifeguardCmd
byReturn	tmpcode/commond.h	/^	BYTE byReturn;    \/\/ 0±Ì æ≥…π¶$/;"	m	struct:stBuyWeekAssuranceResult
byReturn	tmpcode/commond.h	/^	BYTE byReturn;  \/\/\/√‹¬Î…Ë÷√∑µªÿ¿‡–Õ$/;"	m	struct:stReturnPasswordStockIserCmd
byReturn	tmpcode/commond.h	/^	BYTE byReturn;  \/\/∑µªÿ¿‡–Õ$/;"	m	struct:stRedeemGold
byReturn	tmpcode/commond.h	/^	BYTE byReturn;  \/\/∑µªÿ¿‡–Õ$/;"	m	struct:stReturnConSumeCardCard
byReturn	tmpcode/commond.h	/^	BYTE byReturn;$/;"	m	struct:stVisitNpcTradeUserCmd
byReturn	tmpcode/commond.h	/^	BYTE byReturn;\/*0±Ì æ ß∞‹,1±Ì æ≥…π¶*\/$/;"	m	struct:stReturnCancelListStockUserCmd
byReturn	tmpcode/commond.h	/^	BYTE byReturn;\/\/≤È—Ø∑µªÿ¿‡–Õ$/;"	m	struct:stReturnRequestPoint
byReturnCode	base/Command.h	/^  BYTE byReturnCode;      \/**< ËøîÂõûÁöÑÂ≠êÂèÇÊï∞ *\/$/;"	m	struct:Cmd::stServerReturnLoginFailedCmd
byReturnCode	tmpcode/commond.h	/^	BYTE byReturnCode;			\/**< ∑µªÿµƒ◊”≤Œ ˝ *\/$/;"	m	struct:stServerReturnLoginFailedCmd
byRoomNum	tmpcode/commond.h	/^	BYTE byRoomNum;  \/\/ µ±«∞BOSSÀ˘‘⁄∑øº‰$/;"	m	struct:stDragonIslandMazeBossState
byRoomNum	tmpcode/commond.h	/^	BYTE byRoomNum;  \/\/ µ±«∞√‘π¨±¶œ‰À˘‘⁄∑øº‰∫≈$/;"	m	struct:stDragonIslandMazeTreasureBoxPos
bySecondGiftGot	tmpcode/commond.h	/^	BYTE bySecondGiftGot; \/\/ ∂˛Ω◊¿Ò∞¸ «∑Ò“—¡Ï»°$/;"	m	struct:stReturnExchangeGiftState
bySeptMaster	base/Command.h	/^  BYTE  bySeptMaster;        \/\/ 0‰∏çÊòØÊóèÈïøÔºå1ÊòØÊóèÈïø$/;"	m	struct:Cmd::stUnionRember
bySeptMaster	base/Command.h	/^  BYTE bySeptMaster;        \/\/ 0,‰∏çÊòØÊóèÈïøÔºå1‰∏∫ÊóèÈïø$/;"	m	struct:Cmd::stBroadcastMemberInfo
bySeptMaster	tmpcode/commond.h	/^	BYTE bySeptMaster;				\/\/ 0,≤ª «◊Â≥§£¨1Œ™◊Â≥§$/;"	m	struct:stBroadcastMemberInfo
bySeptMaster	tmpcode/commond.h	/^        BYTE  bySeptMaster;                             \/\/ 0≤ª «◊Â≥§£¨1 «◊Â≥§$/;"	m	struct:stUnionRember
bySettings	base/Command.h	/^  BYTE bySettings[20];  \/\/ ‰ΩøÁî® set_state ËÆæÁΩÆÊ†áÂøó$/;"	m	struct:Cmd::stSystemSettings
bySettings	tmpcode/commond.h	/^	BYTE bySettings[10];    \/\/  π”√ set_state …Ë÷√±Í÷æ$/;"	m	struct:stSystemSettings
bySize	tmpcode/commond.h	/^	BYTE bySize;    \/\/ Ω±¿¯ ˝ƒø$/;"	m	struct:stRtnGRecommendBountyUserCmd
bySize	tmpcode/commond.h	/^	BYTE bySize;$/;"	m	struct:stReturnUserEmotionSort
bySkillNums	tmpcode/commond.h	/^        BYTE  bySkillNums;              \/\/¡–±Ì÷–ººƒ‹∏ˆ ˝$/;"	m	struct:stRetPotentialSkillBuildUserCmd
bySpareTime	base/Command.h	/^  BYTE  bySpareTime; \/\/ Ââ©‰ΩôÊó∂Èó¥$/;"	m	struct:Cmd::stQuestionQuiz
bySpeed	base/Command.h	/^    BYTE bySpeed;        \/**< ÁßªÂä®ÈÄüÂ∫¶ *\/$/;"	m	struct:Cmd::stUserMoveMoveUserCmd
bySpeed	base/Command.h	/^    WORD bySpeed;        \/**< ÁßªÂä®ÁöÑÈÄüÂ∫¶ *\/$/;"	m	struct:Cmd::stNpcMoveMoveUserCmd
bySpeed	tmpcode/commond.h	/^	WORD bySpeed;$/;"	m	struct:stNpcMoveMoveUserCmd
bySrc	base/Command.h	/^  BYTE bySrc;          \/**< ÊîªÂáªËÄÖÁ±ªÂûãÔºöenumMapDataType *\/$/;"	m	struct:Cmd::stRTMagicUserCmd
bySrc	base/Command.h	/^  BYTE bySrc;          \/**< ÊîªÂáªËÄÖÁ±ªÂûãÔºöenumMapDataType *\/$/;"	m	struct:Cmd::stRTOtherMagicUserCmd
byStartTime	base/Command.h	/^  BYTE byStartTime;    \/\/ Á´ûËµõÂºÄÂßãÂâ©‰ΩôÊó∂Èó¥$/;"	m	struct:Cmd::stQuizParam
byState	base/Command.h	/^  BYTE   byState;                    \/\/ ÂèÇËßÅ enum SEPT_ADD_MEMBER$/;"	m	struct:Cmd::stAddMemberToSeptCmd
byState	base/Command.h	/^  BYTE   byState;                    \/\/ ÂèÇËßÅ enum UNION_ADD_MEMBER$/;"	m	struct:Cmd::stAddMemberToUnionCmd
byState	base/Command.h	/^  BYTE  byState;      \/\/  ÂèÇËßÅ enum RELATION$/;"	m	struct:Cmd::stRelationStatusCmd
byState	base/Command.h	/^  BYTE byState; \/\/ ÂèÇËßÅ enum ADD_ARMY_CAPTAIN$/;"	m	struct:Cmd::stAddArmyCaptainUserCmd
byState	base/Command.h	/^  BYTE byState;$/;"	m	struct:Cmd::stReqRecommendBountyUserCmd
byState	base/Command.h	/^  BYTE byState;$/;"	m	struct:Cmd::stReqRecommendedBountyUserCmd
byState	base/Command.h	/^  BYTE byState[(MAX_STATE + 7) \/ 8];      \/**< NpcÁöÑÁä∂ÊÄÅ *\/$/;"	m	struct:Cmd::t_MapNpcData
byState	base/SessionCommand.h	/^	BYTE byState;$/;"	m	struct:Cmd::Session::t_RelationAddFriend
byState	base/SessionCommand.h	/^      BYTE byState; \/\/ 0,ÂèñÊ∂àÁä∂ÊÄÅ,1,ËÆæÁΩÆÁä∂ÊÄÅ$/;"	m	struct:Cmd::Session::t_setCatcherState_SceneSession
byState	base/SessionCommand.h	/^      BYTE byState; \/\/ 0,ÂèñÊ∂àÁä∂ÊÄÅ,1,ËÆæÁΩÆÁä∂ÊÄÅ$/;"	m	struct:Cmd::Session::t_setDiplomatState_SceneSession
byState	base/SessionCommand.h	/^      BYTE byState; \/\/ 0,Êú™ÈÄöËøáÊ£ÄÊü•,1,ÈÄöËøáÊ£ÄÊü•$/;"	m	struct:Cmd::Session::t_checkUserCity_SceneSession
byState	base/SessionCommand.h	/^      BYTE byState; \/\/ 0,Êú™ÈÄöËøáÊ£ÄÊü•,1,ÈÄöËøáÊ£ÄÊü•$/;"	m	struct:Cmd::Session::t_checkUser_SceneSession
byState	base/SessionCommand.h	/^      BYTE byState; \/\/ 1,ÁöáÂüéËøõÂÖ•‰∫âÂ§∫Êàò,0,ÁöáÂüéÈÄÄÂá∫‰∫âÂ§∫Êàò$/;"	m	struct:Cmd::Session::t_setEmperorDare_SceneSession
byState	base/zSceneEntry.h	/^	BYTE byState[(Cmd::MAX_STATE + 7) \/ 8];$/;"	m	struct:zSceneEntry
byState	tmpcode/commond.h	/^	BYTE 	byState;                    \/\/ ≤Œº˚ enum SEPT_ADD_MEMBER$/;"	m	struct:stAddMemberToSeptCmd
byState	tmpcode/commond.h	/^	BYTE 	byState;                    \/\/ ≤Œº˚ enum UNION_ADD_MEMBER$/;"	m	struct:stAddMemberToUnionCmd
byState	tmpcode/commond.h	/^	BYTE    byState;                        \/\/      ≤Œº˚ enum RELATION$/;"	m	struct:stRelationStatusCmd
byStateType	tmpcode/commond.h	/^	BYTE    byStateType;    \/\/\/ 1Œ™…˙√¸…„»°◊¥Ã¨°¢2Œ™∑®¡¶…„»°◊¥Ã¨,∆‰À˚µƒ≤ª◊˜¥¶¿Ì$/;"	m	struct:stClearShequStateMapScreenUserCmd
byStatus	base/Command.h	/^  BYTE  byStatus; \/\/ 1‰∏∫ËøõÂÖ•ÂõΩÊàòÔºå0‰∏∫ÈÄÄÂá∫ÂõΩÊàò$/;"	m	struct:Cmd::stSetCountryDareUserCmd
byStatus	base/Command.h	/^  BYTE  byStatus;$/;"	m	struct:Cmd::stReqCountryAlly
byStatus	base/Command.h	/^  BYTE byStatus;                       \/\/ ÊàêÂëòÁä∂ÊÄÅ$/;"	m	struct:Cmd::stBroadcastSeptMemberInfo
byStatus	base/Command.h	/^  BYTE byStatus;          \/\/ ÊàêÂëòÁä∂ÊÄÅ$/;"	m	struct:Cmd::stBroadcastMemberInfo
byStatus	base/Command.h	/^  BYTE byStatus;$/;"	m	struct:Cmd::stAnswerCountryDareUserCmd
byStatus	base/Command.h	/^  BYTE byStatus;$/;"	m	struct:Cmd::stConfirmSearcherUserCmd
byStatus	base/Command.h	/^  BYTE byStatus;$/;"	m	struct:Cmd::stReqArmyGenUserCmd
byStatus	base/SessionCommand.h	/^      BYTE  byStatus;      \/\/ Á±ªÂûãÔºå0‰∏∫ÈÄÄÂá∫Ôºå1,‰∏∫ËøõÂÖ•$/;"	m	struct:Cmd::Session::t_setCountryWar_SceneSession
byStatus	tmpcode/commond.h	/^	BYTE  byStatus;          \/\/º˚…œ√ÊµƒΩ®¡¢√∂æŸ◊¥Ã¨          $/;"	m	struct:stReqUnionAlly
byStatus	tmpcode/commond.h	/^	BYTE byStatus;					\/\/ ≥…‘±◊¥Ã¨$/;"	m	struct:stBroadcastMemberInfo
byStatus	tmpcode/commond.h	/^	BYTE byStatus;                       \/\/ ≥…‘±◊¥Ã¨$/;"	m	struct:stBroadcastSeptMemberInfo
byStep	ScenesServer/SkillStatusManager.h	/^  BYTE  byStep;$/;"	m	struct:SkillStatusElement
byStep	base/Command.h	/^  BYTE byStep;$/;"	m	struct:Cmd::stMarryStatusCheckCmd
byStep	tmpcode/commond.h	/^	BYTE byStep; $/;"	m	struct:stMarryStatusCheckCmd
byStrength	tmpcode/commond.h	/^	BYTE byStrength;  \/\/ 1:«øΩÁ£¨2:∆’Õ®£¨3:»ıΩÁ$/;"	m	struct:stReturnCountryStrengthUserCmd
bySubjectNumber	base/Command.h	/^  BYTE bySubjectNumber;    \/\/ ÊÄªÈ¢òÊï∞$/;"	m	struct:Cmd::stQuizParam
bySuccess	base/Command.h	/^  BYTE bySuccess;   \/\/ ‰∏∫1‰∏∫ÊàêÂäü ‰∏∫0‰∏∫Â§±Ë¥•$/;"	m	struct:Cmd::stVoteSeptCmd
bySuccess	base/Command.h	/^  BYTE bySuccess;   \/\/ ‰∏∫1‰∏∫ÊàêÂäü ‰∏∫0‰∏∫Â§±Ë¥•$/;"	m	struct:Cmd::stVoteUnionCmd
bySuccess	tmpcode/commond.h	/^	BYTE bySuccess;  \/\/  «∑Ò≥…π¶$/;"	m	struct:stRetSetTempUnsafetyUserCmd
bySuccess	tmpcode/commond.h	/^	BYTE bySuccess;  \/\/ –ﬁ∏ƒ√‹¬Î «∑Ò≥…π¶$/;"	m	struct:stRetSetNewNumPasswdCmd
bySwitch	base/Command.h	/^  BYTE bySwitch;        \/**< È™ëÈ©¨ÂºÄÂÖ≥ÔºöÔºëÊòØÈ™ëÈ©¨ÔºåÔºêÊòØ‰∏ãÈ©¨ *\/$/;"	m	struct:Cmd::stRideMapScreenUserCmd
bySwitch	tmpcode/commond.h	/^        BYTE bySwitch;\/\/0-πÿ±’£¨1-ø™∆Ù$/;"	m	struct:rtUseTopKillCountUserCmd
bySwitch	tmpcode/commond.h	/^        BYTE bySwitch;\/\/0-πÿ±’£¨1-∆Ù”√$/;"	m	struct:stStartAccelcmdPropUserCmd
bySwitch	tmpcode/commond.h	/^    BYTE bySwitch;                          \/**< ∆Ô¬Ìø™πÿ£∫£± «∆Ô¬Ì£¨£∞ «œ¬¬Ì£¨2±Ì æ“™Ãﬂ∫Û◊¯œ¬¬Ì *\/$/;"	m	struct:stRideMapScreenUserCmd
byTarget	base/Command.h	/^  BYTE byTarget;        \/**< ÁõÆÊ†áÁ±ªÂûãÔºöenumMapDataType *\/$/;"	m	struct:Cmd::stObjectHpMpPopUserCmd
byTarget	base/Command.h	/^  BYTE byTarget;        \/**< ÁõÆÊ†áÁ±ªÂûãÔºöenumMapDataType *\/$/;"	m	struct:Cmd::stRTMagicPosUserCmd
byTarget	base/Command.h	/^  BYTE byTarget;        \/**< ÁõÆÊ†áÁ±ªÂûãÔºöenumMapDataType *\/$/;"	m	struct:Cmd::stRTMagicUserCmd
byTarget	base/Command.h	/^  BYTE byTarget;        \/**< ÁõÆÊ†áÁ±ªÂûãÔºöenumMapDataType *\/$/;"	m	struct:Cmd::stRTOtherMagicUserCmd
byTarget	tmpcode/commond.h	/^    BYTE byTarget;                          \/**< ƒø±Í¿‡–Õ£∫enumMapDataType *\/$/;"	m	struct:stObjectHpMpPopUserCmd
byTax	base/Command.h	/^  BYTE byTax; $/;"	m	struct:Cmd::stSetTaxCountryUserCmd
byTax	base/Command.h	/^  BYTE byTax; $/;"	m	struct:Cmd::stTaxCountryUserCmd
byTax	base/SessionCommand.h	/^      BYTE  byTax;$/;"	m	struct:Cmd::Session::t_taxCountry_SceneSession
byTeamState	tmpcode/commond.h	/^	BYTE byTeamState;			\/\/ ∂”ŒÈ◊¥Ã¨$/;"	m	struct:t_UserData
byTeamState	tmpcode/commond.h	/^	BYTE byTeamState;		\/\/ …˙ŒÔµƒ∂”ŒÈ◊¥Ã¨ [8\/25\/2009]$/;"	m	struct:st_CharShow2
byThirdGiftGot	tmpcode/commond.h	/^	BYTE byThirdGiftGot;  \/\/ »˝Ω◊¿Ò∞¸ «∑Ò“—¡Ï»°$/;"	m	struct:stReturnExchangeGiftState
byTime	tmpcode/commond.h	/^	BYTE byTime;$/;"	m	struct:stTimeCountTankCmd
byType	base/Command.h	/^    BYTE  byType;        \/**< Â§çÊ¥ªÊñπÂºè *\/$/;"	m	struct:Cmd::stOKReliveUserCmd
byType	base/Command.h	/^    BYTE byType;        \/**< ÁõÆÊ†áÁ±ªÂûã enumMapDataType *\/$/;"	m	struct:Cmd::stBackOffMagicUserCmd
byType	base/Command.h	/^    BYTE byType;        \/**< ÁªèÈ™åÂÄºÊù•Ê∫ê enumMapDataType *\/$/;"	m	struct:Cmd::stObtainExpUserCmd
byType	base/Command.h	/^  BYTE  byType;  \/\/ 0,ÂèÇÊàòÂõΩÔºå1ÔºåÁ¨¨‰∏âÊñπÂõΩ$/;"	m	struct:Cmd::stCountryInfo
byType	base/Command.h	/^  BYTE  byType;  \/\/ÂçïÂ≠êÁ±ªÂûã,ÈáëÂ∏ÅÊàñÈì∂Â∏Å$/;"	m	struct:Cmd::stPutListStockUserCmd
byType	base/Command.h	/^  BYTE  byType; \/\/ 0,ÊàòÂú∫ÂàóË°®ÔºåÊåëÊàòÂàóË°®$/;"	m	struct:Cmd::stReturnDareCountryCmd
byType	base/Command.h	/^  BYTE  byType;$/;"	m	struct:Cmd::stRtnArmyListUserCmd
byType	base/Command.h	/^  BYTE  byType;$/;"	m	struct:Cmd::stSendDareList
byType	base/Command.h	/^  BYTE byType;      \/\/ Á´ûËµõÁ±ªÂûã$/;"	m	struct:Cmd::stQuizParam
byType	base/Command.h	/^  BYTE byType;    \/\/$/;"	m	struct:Cmd::stFireWorkUserCmd
byType	base/Command.h	/^  BYTE byType;   \/\/ Á´ûËµõÁ±ªÂûã$/;"	m	struct:Cmd::stAnswerQuiz
byType	base/Command.h	/^  BYTE byType;  $/;"	m	struct:Cmd::stQuestionNpcDareInfo
byType	base/Command.h	/^  BYTE byType;  $/;"	m	struct:Cmd::stQuestionUnionCityInfo
byType	base/Command.h	/^  BYTE byType;  \/\/ Êü•ËØ¢Á±ªÂûã$/;"	m	struct:Cmd::stRequestDareRecordCmd
byType	base/Command.h	/^  BYTE byType;  \/\/Ê∂àË¥πÁ±ªÂûã$/;"	m	struct:Cmd::stReturnConSumeCardCard
byType	base/Command.h	/^  BYTE byType; \/\/ 0,ËØ∑Ê±ÇÊàòÂú∫ÂàóË°®Ôºå1ÔºåËØ∑Ê±ÇÊåëÊàòÂàóË°®$/;"	m	struct:Cmd::stRequestDareCountryCmd
byType	base/Command.h	/^  BYTE byType; \/\/ UNION_DARE,SEPT_DARE$/;"	m	struct:Cmd::stQueryDareList
byType	base/Command.h	/^  BYTE byType; \/\/ ÊäïÁ•®Á±ªÂûã$/;"	m	struct:Cmd::stRequestVoteListUserCmd
byType	base/Command.h	/^  BYTE byType; \/\/ Ê∂àÊÅØÁ±ªÂûã$/;"	m	struct:Cmd::stUnionMemberPower
byType	base/Command.h	/^  BYTE byType;$/;"	m	struct:Cmd::stCreateQuiz
byType	base/Command.h	/^  BYTE byType;$/;"	m	struct:Cmd::stExpModeTeamMemberUserCmd
byType	base/Command.h	/^  BYTE byType;$/;"	m	struct:Cmd::stObjModeTeamMemberUserCmd
byType	base/Command.h	/^  BYTE byType;$/;"	m	struct:Cmd::stReqArmyListUserCmd
byType	base/Command.h	/^  BYTE byType;$/;"	m	struct:Cmd::stReqSeptSort
byType	base/Command.h	/^  BYTE byType;$/;"	m	struct:Cmd::stReqUnionSort
byType	base/Command.h	/^  BYTE byType;$/;"	m	struct:Cmd::stRequestCancelListStockUserCmd
byType	base/Command.h	/^  BYTE byType;$/;"	m	struct:Cmd::stReturnCancelListStockUserCmd
byType	base/Command.h	/^  BYTE byType;$/;"	m	struct:Cmd::stReturnVoteListUserCmd
byType	base/Command.h	/^  BYTE byType;$/;"	m	struct:Cmd::stRtnSeptSort
byType	base/Command.h	/^  BYTE byType;$/;"	m	struct:Cmd::stRtnUnionSort
byType	base/Command.h	/^  BYTE byType;$/;"	m	struct:Cmd::stTeamModeUserCmd
byType	base/Command.h	/^  BYTE byType;\/\/enumMapDataType$/;"	m	struct:Cmd::stRTSelectedHpMpPropertyUserCmd
byType	base/Command.h	/^  BYTE byType;\/\/enumMapDataType$/;"	m	struct:Cmd::stSelectMainUserPropertyUserCmd
byType	base/Command.h	/^  BYTE byType;\/\/enumMapDataType$/;"	m	struct:Cmd::stSelectPropertyUserCmd
byType	base/Command.h	/^  BYTE byType;\/\/enumMapDataType$/;"	m	struct:Cmd::stSelectReturnStatesPropertyUserCmd
byType	base/Command.h	/^  BYTE byType;\/\/‰π∞ÊàñÂçñ$/;"	m	struct:Cmd::stFirstFiveListStockUserCmd
byType	base/SceneCommand.h	/^      BYTE byType;$/;"	m	struct:Cmd::Scene::t_ServiceGold_GateScene
byType	base/SceneCommand.h	/^      BYTE byType;$/;"	m	struct:Cmd::Scene::t_ServiceStock_GateScene
byType	base/SessionCommand.h	/^      BYTE  byType;      \/\/ Á±ªÂûãÔºå0‰∏∫Êé•ÂèóÊåëÊàòÁöÑÔºå1ÂèØÊé•ÂèóÊåëÊàòÁöÑ,3,ÊâÄÊúâÂõΩÂÆ∂ÊåëÊàò‰ø°ÊÅØ$/;"	m	struct:Cmd::Session::t_viewCountryDare_SceneSession
byType	base/SessionCommand.h	/^      BYTE  byType;      \/\/\/ Á´ûËµõÁ±ªÂûã,ÈªòËÆ§‰∏∫ÂÖ®ÂõΩ$/;"	m	struct:Cmd::Session::t_quizAward_SceneSession
byType	base/SessionCommand.h	/^      BYTE  byType; \/\/ 0,Êé®Ëçê‰∫∫ÊèêÂèñÂ•ñÂä±,1Ë¢´Êé®Ëçê‰∫∫ÊèêÂèñÂ•ñÂä±$/;"	m	struct:Cmd::Session::t_PickupRecommend_SceneSession
byType	base/SessionCommand.h	/^      BYTE  byType; \/\/ ‰ΩøÁî®Êûö‰∏æ RELATION_TYPE$/;"	m	struct:Cmd::Session::stRequestReturnMember
byType	base/SessionCommand.h	/^      BYTE  byType;$/;"	m	struct:Cmd::Session::stCountMember
byType	base/SessionCommand.h	/^      BYTE  byType;$/;"	m	struct:Cmd::Session::t_questionNpcDare_SceneSession
byType	base/SessionCommand.h	/^      BYTE  byType;$/;"	m	struct:Cmd::Session::t_questionUnionCity_SceneSession
byType	base/SessionCommand.h	/^      BYTE byType;  \/\/ ÂõΩÊàòÁ±ªÂûã$/;"	m	struct:Cmd::Session::t_countryDareResult_SceneSession
byType	base/SessionCommand.h	/^      BYTE byType; \/\/ 0,ÊôÆÈÄöÁâ©ËµÑÔºå1,‰∏ùÁ∫ø,2,ÁüøÁü≥,3,Áüø‰∫ß,4,Êú®ÊùêÔºå5,ÁöÆÊØõ,6,ËçâËçØ$/;"	m	struct:Cmd::Session::t_ContributeCountry_SceneSession
byType	base/SessionCommand.h	/^      BYTE byType; \/\/ 1‰∏∫ÈòüÈïøÔºå2‰∏∫Â∞ÜÂÜõ$/;"	m	struct:Cmd::Session::t_sendUserArmyInfo_SceneSession
byType	base/SessionCommand.h	/^      BYTE byType;$/;"	m	struct:Cmd::Session::t_ReqArmyList_SceneSession
byType	tmpcode/commond.h	/^	BYTE  byType;				\/**< ∏¥ªÓ∑Ω Ω *\/$/;"	m	struct:stOKReliveUserCmd
byType	tmpcode/commond.h	/^	BYTE  byType;   \/\/µ•◊”¿‡–Õ,Ω◊”ªÚ“¯±“$/;"	m	struct:stPutListStockUserCmd
byType	tmpcode/commond.h	/^	BYTE  byType;$/;"	m	struct:stNpcLimitMagicUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;				\/**< æ≠—È÷µ¿¥‘¥enumMapDataType *\/$/;"	m	struct:stObtainExpUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;				\/**< ƒø±Í¿‡–Õ enumMapDataType *\/$/;"	m	struct:stBackOffMagicUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;			\/\/ 1:π´”– 2:∏ˆ»À$/;"	m	struct:st_PutItemStoreHouseUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;	\/\/ enumLifeguardType$/;"	m	struct:stAssignLifeguardCmd
byType	tmpcode/commond.h	/^	BYTE byType;	\/\/ enumLifeguardType$/;"	m	struct:stBecomeLifeguardCmd
byType	tmpcode/commond.h	/^	BYTE byType;	\/\/ enumLifeguardType$/;"	m	struct:stRetAssignLifeguardCmd
byType	tmpcode/commond.h	/^	BYTE byType;              \/\/’π æ¿‡–Õ 1-»´–«’π æ;	2 - »´‘¬’π æ$/;"	m	struct:stReturnQuestionJinglingZhige
byType	tmpcode/commond.h	/^	BYTE byType;            \/\/æ∆µƒ÷÷¿‡£ª0Õ˛ øº…£ª1∆œÃ—æ∆£ª2:œ„Èƒ$/;"	m	struct:stSendDrunkStateGouhuoUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;    \/\/œ˚∑—¿‡–Õ$/;"	m	struct:stReturnConSumeCardCard
byType	tmpcode/commond.h	/^	BYTE byType; $/;"	m	struct:stJoinModeTeamMemberUserCmd
byType	tmpcode/commond.h	/^	BYTE byType; $/;"	m	struct:stReqSeptSort
byType	tmpcode/commond.h	/^	BYTE byType; $/;"	m	struct:stReqUnionSort
byType	tmpcode/commond.h	/^	BYTE byType; $/;"	m	struct:stRtnSeptSort
byType	tmpcode/commond.h	/^	BYTE byType; \/\/ œ˚œ¢¿‡–Õ$/;"	m	struct:stUnionMemberPower
byType	tmpcode/commond.h	/^	BYTE byType; \/\/0-«Â≥˝»´≤øººƒ‹£ª1-«Â≥˝ª˘¥°ººƒ‹£ª2-«Â≥˝“ª◊™ººƒ‹£ª3-«Â≥˝∂˛◊™ººƒ‹ $/;"	m	struct:stClearSkillUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;$/;"	m	struct:stExpModeTeamMemberUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;$/;"	m	struct:stObjModeTeamMemberUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;$/;"	m	struct:stReturnCancelListStockUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;$/;"	m	struct:stRtnUnionSort
byType	tmpcode/commond.h	/^	BYTE byType;$/;"	m	struct:stTeamModeUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;\/\/1:Ω≈±æµ˜≥ˆ£¨2£∫∏’Ω¯±»»¸≥°µÿµ˜≥ˆ$/;"	m	struct:stRetPlayerListZhenxuanUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;\/\/enumMapDataType$/;"	m	struct:stDanceTime
byType	tmpcode/commond.h	/^	BYTE byType;\/\/enumMapDataType$/;"	m	struct:stSelectMainUserPropertyUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;\/\/enumMapDataType$/;"	m	struct:stSelectPropertyUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;\/\/enumMapDataType$/;"	m	struct:stSelectReturnStatesPropertyUserCmd
byType	tmpcode/commond.h	/^	BYTE byType;\/\/¬ÚªÚ¬Ù$/;"	m	struct:stFirstFiveListStockUserCmd
byType	tmpcode/commond.h	/^        BYTE  byType;           \/\/«Î«Û¿‡–Õ,1:«Î«Û–ﬁ¡∂,2:«Î«ÛÃ·…˝$/;"	m	struct:stReqBuildPotentialSkillUserCmd
byType	tmpcode/commond.h	/^        BYTE byType;\/\/enumMapDataType$/;"	m	struct:stRTSelectedHpMpPropertyUserCmd
byValue	base/SessionCommand.h	/^      BYTE byValue;$/;"	m	struct:Cmd::Session::t_regScene_ret_SceneSession
byValue	base/zDatabase.h	/^	    BYTE byValue[2];$/;"	m	union:aTypeS::__anon28
byVote	base/Sept.h	/^  BYTE    byVote;          \/\/ Õ∂∆±±Í÷æŒ™1±Ì æ¥¶”⁄Õ∂∆±∆⁄º‰$/;"	m	struct:SeptDef::stSeptInfo
byVote	base/Union.h	/^  BYTE    byVote;          \/\/ Á≠æÂêçÊ†áÂøó‰∏∫1Ë°®Á§∫Â§Ñ‰∫éÁ≠æÂêçÊúüÈó¥$/;"	m	struct:UnionDef::stUnionInfo
byWeek	tmpcode/commond.h	/^	BYTE byWeek;  \/\/ 0±Ì æ…œ…œ÷‹, 1±Ì æ…œ÷‹, 2±Ì æ±æ÷‹$/;"	m	struct:stReturnBoughtWeekAssurance
byWeek	tmpcode/commond.h	/^	BYTE byWeek;  \/\/ ≤È—Øƒƒ“ª÷‹: 0±Ì æ…œ…œ÷‹, 1±Ì æ…œ÷‹, 2±Ì æ±æ÷‹$/;"	m	struct:stQueryBoughtWeekAssurance
byWeekDay	tmpcode/commond.h	/^	BYTE byWeekDay;  \/\/ 0-13, 0-6±Ì æ…œ…œ÷‹(0£∫–«∆⁄“ª)£¨7-13±Ì æ…œ÷‹(7£∫–«∆⁄“ª)$/;"	m	struct:stDrawWeekAssurance
byWhere	base/Command.h	/^  BYTE byWhere;\/\/‰ΩçÁΩÆenumEquipType$/;"	m	struct:Cmd::EquipedObject
byWhere	tmpcode/commond.h	/^	  BYTE byWhere;\/\/Œª÷√enumEquipType$/;"	m	struct:st_WatchPlayer
byWhere	tmpcode/commond.h	/^	BYTE byWhere;\/\/Œª÷√enumEquipType$/;"	m	struct:EquipedObject
byWho	tmpcode/commond.h	/^	BYTE byWho;	\/\/ 0: ◊‘º∫£ª1£∫ŒË∞È                          $/;"	m	struct:stDanceGameScore
bylingqiId	tmpcode/commond.h	/^	BYTE bylingqiId;    \/\/¡È∆˜ID$/;"	m	struct:stChangeLingQiToObjLingQiUserCmd
bzero	tmpcode/commond.h	253;"	d
c	ScenesServer/SceneDefine.h	/^  zPos c;        \/\/\/ ‰∏≠ÂøÉÁÇπ$/;"	m	struct:zRegion
c2l	base/EncDec/EncDec.h	175;"	d
c2l	base/EncDec/EncDec.h	176;"	d
c2l	base/EncDec/EncDec.h	48;"	d
c2l	base/EncDec/EncDec.h	49;"	d
c2l	base/EncDec/mydes.h	77;"	d
c2l	base/EncDec/mydes.h	78;"	d
c2l	base/EncDec/myrc5.h	36;"	d
c2l	base/EncDec/myrc5.h	37;"	d
c2ln	base/EncDec/EncDec.h	33;"	d
c2ln	base/EncDec/myrc5.h	21;"	d
cRatio	tmpcode/commond.h	/^	DWORD cRatio;       \/\/≥« –Ω®…Ë∂»$/;"	m	struct:CityInfo
cRatio	tmpcode/commond.h	/^	DWORD cRatio;     \/\/≥« –Ω®…Ë∂»±»¿˝$/;"	m	struct:CityQuestInfo
cThanks	tmpcode/commond.h	/^    DWORD cThanks; \/\/µ⁄»˝÷÷∑¥¿°»À ˝$/;"	m	struct:stAsrShenLongThanks
cache	BillServer/BillCache.h	/^    CacheContainer cache;$/;"	m	class:BillCache
caculateOnlineNum	SuperServer/ServerManager.cpp	/^const DWORD ServerManager::caculateOnlineNum()$/;"	f	class:ServerManager
calPreValue	ScenesServer/SceneUser.cpp	/^void SceneUser::calPreValue()$/;"	f	class:SceneUser
calReliveWeaknessProperty	ScenesServer/SceneUser.cpp	/^void SceneUser::calReliveWeaknessProperty(bool enter)$/;"	f	class:SceneUser
calcAll	ScenesServer/zObject.cpp	/^void EquipPack::calcAll() $/;"	f	class:EquipPack
callProcessTire	ScenesServer/SceneUser.cpp	/^void SceneUser::callProcessTire()$/;"	f	class:SceneUser
callReason	tmpcode/commond.h	/^	BYTE    callReason;             \/\/’ŸºØæﬂÃÂ‘≠“Ú£∫0-≤ªπÿ–ƒ£ª1-≥« –ÛÙª’ŸºØ$/;"	m	struct:stDareCallDuty
callReason	tmpcode/commond.h	/^        BYTE    callReason;                             \/\/’ŸºØæﬂÃÂ‘≠“Ú£∫0-≤ªπÿ–ƒ£ª1-≥« –ÛÙª’ŸºØ$/;"	m	struct:stMercenaryCallDuty
callTime	base/Command.h	/^  DWORD callTime;    \/\/Âè¨Âî§Èó¥Èöî$/;"	m	struct:Cmd::t_HorseData
callTimes	tmpcode/commond.h	/^		DWORD callTimes;$/;"	m	struct:OfficialItem
calldaytime	base/Sept.h	/^  DWORD    calldaytime;        \/\/ ¡Ó≈∆ π”√ÃÏ ˝$/;"	m	struct:SeptDef::stSeptInfo
calltimes	base/Sept.h	/^  DWORD    calltimes;        \/\/ ¡Ó≈∆ π”√¥Œ ˝$/;"	m	struct:SeptDef::stSeptInfo
calltimes	base/Union.h	/^  DWORD    calltimes;        \/\/ ‰ª§Áâå‰ΩøÁî®Ê¨°Êï∞$/;"	m	struct:UnionDef::stUnionInfo
calmdamN2N	ScenesServer/ScenePk.cpp	/^void ScenePk::calmdamN2N(const Cmd::stAttackMagicUserCmd *rev,SceneNpc *pAtt,SceneNpc *pDef)$/;"	f	class:ScenePk
calmdamN2U	ScenesServer/ScenePk.cpp	/^void ScenePk::calmdamN2U(const Cmd::stAttackMagicUserCmd *rev,SceneNpc *pAtt,SceneUser *pDef)$/;"	f	class:ScenePk
calmdamU2N	ScenesServer/ScenePk.cpp	/^void ScenePk::calmdamU2N(const Cmd::stAttackMagicUserCmd *rev,SceneUser *pAtt,SceneNpc *pDef)$/;"	f	class:ScenePk
calmdamU2U	ScenesServer/ScenePk.cpp	/^void ScenePk::calmdamU2U(const Cmd::stAttackMagicUserCmd *rev,SceneUser *pAtt,SceneUser *pDef)$/;"	f	class:ScenePk
calpdamN2N	ScenesServer/ScenePk.cpp	/^void ScenePk::calpdamN2N(const Cmd::stAttackMagicUserCmd *rev,SceneNpc *pAtt,SceneNpc *pDef)$/;"	f	class:ScenePk
calpdamN2U	ScenesServer/ScenePk.cpp	/^void ScenePk::calpdamN2U(const Cmd::stAttackMagicUserCmd *rev,SceneNpc *pAtt,SceneUser *pDef)$/;"	f	class:ScenePk
calpdamU2N	ScenesServer/ScenePk.cpp	/^void ScenePk::calpdamU2N(const Cmd::stAttackMagicUserCmd *rev,SceneUser *pAtt,SceneNpc *pDef)$/;"	f	class:ScenePk
calpdamU2U	ScenesServer/ScenePk.cpp	/^void ScenePk::calpdamU2U(const Cmd::stAttackMagicUserCmd *rev,SceneUser *pAtt,SceneUser *pDef)$/;"	f	class:ScenePk
canActAfterDie	base/Command.h	/^	BYTE canActAfterDie;$/;"	m	struct:Cmd::t_NpcData
canActAfterDie	tmpcode/commond.h	/^	BYTE  canActAfterDie;           \/\/À¿Õˆ÷Æ∫Û «∑Òø…“‘±ªπ•ª˜ªÚ’ﬂ±ª∑√Œ (µ⁄0Œª-À¿Õˆ∫Û£¨ø…“‘±ª∑√Œ £ªµ⁄1Œª-À¿Õˆ∫Ûø…“‘±ªπ•ª˜£©$/;"	m	struct:t_NPCData
canAttack	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::canAttack(SceneEntryPk *entry)$/;"	f	class:SceneNpc
canBeAttack	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::canBeAttack()$/;"	f	class:SceneNpc
canChangeColor	ScenesServer/zObject.cpp	/^bool EquipPack::canChangeColor()$/;"	f	class:EquipPack
canChaseTarget	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::canChaseTarget(const SceneEntryPk * entry)$/;"	f	class:SceneNpc
canClear	SessionServer/HeroCardManager.h	/^    BYTE canClear;		\/\/ «∑Òø…“‘«Â≥˝’‚∏ˆ‘™Àÿ(1, «;0,∑Ò)$/;"	m	struct:stMatchedInfo
canDecayForFriend	tmpcode/commond.h	/^	bool canDecayForFriend;				\/\/ «∑Òø…“‘Œ™∫√”—Õ…±‰$/;"	m	struct:DecayHouseBaseData
canDecayForFriend	tmpcode/commond.h	/^	bool canDecayForFriend;    \/\/ «∑Òø…“‘∏¯∫√”—Õ…±‰$/;"	m	struct:stSetDecayForFriendLingQiUserCmd
canFight	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::canFight()$/;"	f	class:SceneNpc
canLock	tmpcode/commond.h	/^	bool canLock;			\/\/ƒ‹∑ÒÀ¯∂®$/;"	m	struct:NewBoxSendObj
canLostObject	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::canLostObject(const zRTime &ct)$/;"	f	class:SceneNpc
canMail	ScenesServer/zObject.cpp	/^bool zObject::canMail()$/;"	f	class:zObject
canMove	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::canMove()$/;"	f	class:SceneNpc
canOfferForFriend	tmpcode/commond.h	/^	bool canOfferForFriend; \/\/ «∑Òø…“‘∏¯∫√”—”√$/;"	m	struct:DecayHouseSession
canOrNot	tmpcode/commond.h	/^	BYTE canOrNot;          \/\/\/  «∑Òø…“‘    $/;"	m	struct:stReqEmployNpcAdUserCmd
canPoll	tmpcode/commond.h	/^		bool canPoll;	\/\/ «∑Òø…“‘ ⁄∑€ true «, false∑Ò$/;"	m	struct:stRetFarmInfoUserCmd::stBriefLand
canPoll	tmpcode/commond.h	/^	bool canPoll;                   \/\/ «∑Òø…“‘ ⁄∑€ true «, false∑Ò$/;"	m	struct:stLandItem
canReach	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::canReach(SceneEntryPk *entry)$/;"	f	class:SceneNpc
canReceive	tmpcode/commond.h	/^	BYTE canReceive;  \/\/  «∑Ò‘ –ÌΩ” ’$/;"	m	struct:stOnoffReceiveLTQUserCmd
canRecycle	ScenesServer/SceneUser.h	/^    bool canRecycle(const zRTime &cur)$/;"	f	struct:SceneUser
canReg	ScenesServer/SceneUserManager.cpp	/^bool SceneRecycleUserManager::canReg(DWORD id)$/;"	f	class:SceneRecycleUserManager
canRegByACCID	ScenesServer/SceneUserManager.cpp	/^bool SceneRecycleUserManager::canRegByACCID(DWORD id)$/;"	f	class:SceneRecycleUserManager
canRelive	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::canRelive(const zRTime &ct)$/;"	f	class:SceneNpc
canRev	tmpcode/commond.h	/^	bool canRev;    \/\/ «∑Òø…“‘¡Ï»°  $/;"	m	struct:stRetPerformState
canRide	ScenesServer/Scene.h	/^    bool canRide() const { return !(function & MAP_FUNCTION_NORIDE); }$/;"	f	class:Scene
canRush	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::canRush()$/;"	f	class:SceneNpc
canSend	ScenesServer/SceneUser.cpp	/^	inline const bool canSend() const$/;"	f	struct:GetAllRemovePosNpc
canSend	ScenesServer/SceneUser.cpp	/^	inline const bool canSend() const$/;"	f	struct:GetAllRemovePosUser
canSetPostion	tmpcode/commond.h	/^	DWORD canSetPostion;    \/\/0:≤ªø……Ë÷√1:ø…“‘…Ë÷√$/;"	m	struct:lastPositionTime
canUpgrade	ScenesServer/Skill.cpp	/^bool zSkill::canUpgrade(SceneEntryPk *pEntry)$/;"	f	class:zSkill
canUse	ScenesServer/Skill.cpp	/^bool zSkill::canUse()$/;"	f	class:zSkill
canUseOneGroup	ScenesServer/GroupCardManager.cpp	/^bool GroupCardManager::canUseOneGroup(SceneUser& user, const DWORD index)$/;"	f	class:GroupCardManager
canUseResourceNum	tmpcode/commond.h	/^	DWORD canUseResourceNum;        \/\/\/ ƒø«∞ªπƒ‹º”π§µƒ‘≠¡œ ˝¡ø$/;"	m	struct:resourceRefine
canUserScroll	ScenesServer/Scene.h	/^    bool canUserScroll() const { return !(function & MAP_FUNCTION_NOSCROLL); }$/;"	f	class:Scene
can_input	ScenesServer/zObject.h	/^  bool can_input()$/;"	f	class:ObjectPack
cancelList	BillServer/StockConsign.cpp	/^bool ConsignGoldManager::cancelList(BillUser *pUser,DWORD listid)$/;"	f	class:ConsignGoldManager
cancelList	BillServer/StockConsign.cpp	/^bool ConsignMoneyManager::cancelList(BillUser *pUser,DWORD listid)$/;"	f	class:ConsignMoneyManager
cancelListAll	BillServer/StockConsign.cpp	/^bool Consign::cancelListAll()$/;"	f	class:Consign
cancelProtect	ScenesServer/ScenePk.cpp	/^bool ScenePkState::cancelProtect(SceneUser *pThis,DWORD time)$/;"	f	class:ScenePkState
cancelVistNpc	ScenesServer/SceneUser.h	/^    void cancelVistNpc()$/;"	f	struct:SceneUser
canlearnkills	tmpcode/commond.h	/^    }canlearnkills[0];$/;"	m	struct:stSendCanLearnFakeSkillLingQiUserCmd	typeref:struct:stSendCanLearnFakeSkillLingQiUserCmd::lingQiSkillsCanLearn
canlearnskillnum	tmpcode/commond.h	/^	WORD canlearnskillnum;  \/\/ø…—ßµƒººƒ‹∏ˆ ˝(ø’∞◊ººƒ‹∏ˆ ˝)$/;"	m	struct:stWatchLingQiUserCmd
canlearnskillnum	tmpcode/commond.h	/^	WORD canlearnskillnum;\/\/ªπø…“‘—ßœ∞µƒººƒ‹∏ˆ ˝(ø’∞◊ººƒ‹∏ˆ ˝)$/;"	m	struct:stReturnQuestionLingQi
capID	base/Command.h	/^  DWORD capID; \/\/ Ë¢´ÈÇÄËØ∑‰∫∫ID$/;"	m	struct:Cmd::stAddArmyCaptainUserCmd
capName	base/Command.h	/^  char capName[MAX_NAMESIZE]; \/\/ Ë¢´ÈÇÄËØ∑ÁöÑ‰∫∫$/;"	m	struct:Cmd::stAddArmyCaptainUserCmd
captain_mode	ScenesServer/Chat.h	/^      captain_mode =   0x04,$/;"	e	enum:Gm::__anon179
caption	ScenesServer/SceneUser.h	/^    char  caption[MAX_NAMESIZE];    \/\/ ÂõΩÁéãÊàñÂüé‰∏ªÂ§¥Ë°î$/;"	m	struct:SceneUser
caption	base/Command.h	/^  BYTE caption;$/;"	m	struct:Cmd::t_UserData
caption	base/SessionCommand.h	/^      DWORD caption;      \/\/\/ Â§¥Ë°îÔºåÂ∏Æ‰ºöÊâÄÂú®ÂüéMAPID,ÂΩìÁ§æ‰ºöÂÖ≥Á≥ªÁ±ªÂûãÂ∏àÂæíÁöÑÊó∂ÂÄôËøô‰∏™Â≠óÊÆµÊîæÂ∏àÂÇÖÁöÑCHARID$/;"	m	struct:Cmd::Session::t_sendUserRelationID
caption	tmpcode/commond.h	/^	 BYTE caption;   \/\/ πŸ÷∞$/;"	m	struct:st_WatchPlayer
caption	tmpcode/commond.h	/^	BYTE 	caption; \/\/ΩÁ”Ú»®œﬁ$/;"	m	struct:st_CharShow2
caption	tmpcode/commond.h	/^	BYTE  caption;                          \/\/ Õ∑œŒ,∏ƒŒ™”√id¥´µ›$/;"	m	struct:t_UserData
caption	tmpcode/commond.h	/^	BYTE caption;                \/\/πŸ‘± Ù–‘              $/;"	m	struct:stSelectReturnHorsePropertyUserCmd
caption	tmpcode/commond.h	/^        BYTE caption;\/\/πŸ‘± Ù–‘$/;"	m	struct:rtHorseDataCmd
caption_times	base/SessionCommand.h	/^      DWORD caption_times;$/;"	m	struct:Cmd::Session::t_sendUserRelationID
card	base/xmlparser/giftbag.h	/^        xml_node_vector<Card>	card;$/;"	m	struct:GiftBagConfig::Gift
cardAttackMagic	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::cardAttackMagic(SceneUser &user, const Cmd::stCardAttackMagicUserCmd *rev)$/;"	f	class:ChallengeGame
cardData	tmpcode/commond.h	/^        stNameCard cardData;$/;"	m	struct:rtNameCardCmd
cardID	tmpcode/commond.h	/^        DWORD cardID;\/\/∂“ªªæÌID$/;"	m	struct:stExchangeGoldCardUserCmd
cardID	tmpcode/commond.h	/^    BYTE cardID;$/;"	m	struct:rtShenYuCardUserCmd
cardId	tmpcode/commond.h	/^	char cardId[128];$/;"	m	struct:stPointCard
cardNormalAttack	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::cardNormalAttack(SceneUser &user, const Cmd::stCardAttackMagicUserCmd *rev)$/;"	f	class:ChallengeGame
cardPasswd	tmpcode/commond.h	/^	char cardPasswd[128];$/;"	m	struct:stPointCard
cardSkillAttack	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::cardSkillAttack(SceneUser &user, const Cmd::stCardAttackMagicUserCmd *rev)$/;"	f	class:ChallengeGame
cardType	tmpcode/commond.h	/^	BYTE cardType;				\/\/0:7+24£¨1:7’≈ø®£¨2:24’≈ø®,3:7’≈ø®ƒ≥“ª’≈ø®£¨4:24’≈ƒ≥“ª’≈,5-–¬º”µƒ∂ÓÕ‚◊œ7ø®$/;"	m	struct:rtHappyCardBoxUserCmd
cardid	BillServer/BillCallback.h	/^  char          cardid[Cmd::UserServer::CARDID_LENGTH +1];  \/\/ÂÖÖÂÄºÂç°Âè∑$/;"	m	struct:BillData
cardid	base/BillCommand.h	/^      char cardid[CARDID_LENGTH_PARA];$/;"	m	struct:Cmd::Bill::stConSumeCardCard_Gateway
cardid	base/Command.h	/^  char cardid[CARDID_LENGTH_PARA];$/;"	m	struct:Cmd::stConSumeCardCard
cardid	base/UserCommand.h	/^      char      cardid[CARDID_LENGTH +1];    \/\/ÂÖÖÂÄºÂç°Âè∑$/;"	m	struct:Cmd::UserServer::t_cmd_fillin
cardid	base/xmlparser/giftbag.h	/^                xml_prop<DWORD>	cardid;$/;"	m	struct:GiftBagConfig::Bag::Quality::Item
cardid	tmpcode/commond.h	/^	char cardid[CARDID_LENGTH_PARA];$/;"	m	struct:stConSumeCardCard
cardid	tmpcode/commond.h	/^        DWORD cardid;\/\/∂“ªªø®ID$/;"	m	struct:stReturnExchangeCardIDTradeUserCmd
cardpoint	base/zDatabase.h	/^	DWORD cardpoint;$/;"	m	union:zObjectB::__anon27
cards	ScenesServer/GroupCardManager.h	/^    DWORD cards[30];	    \/\/30’≈$/;"	m	struct:t_group
cards	tmpcode/commond.h	/^	HappyCardInfo cards[0];$/;"	m	struct:rtHappyCardBoxUserCmd
cards	tmpcode/commond.h	/^    BYTE cards[0];$/;"	m	struct:rtShenYuInfoUserCmd
cardsIndex	ScenesServer/ChallengeGameManager.h	/^	DWORD cardsIndex;	\/\/∂‘’Ω π”√µƒÃ◊≈∆À˜“˝$/;"	m	class:ChallengeTmpData
cardsLib1Vec	ScenesServer/ChallengeGame.h	/^	std::vector<DWORD>	cardsLib1Vec;	    \/\/1∑Ω≈∆ø‚	    ø®≈∆baseID$/;"	m	class:ChallengeGame
cardsLib2Vec	ScenesServer/ChallengeGame.h	/^	std::vector<DWORD>	cardsLib2Vec;	    \/\/¡Ì“ª∑Ω≈∆ø‚$/;"	m	class:ChallengeGame
cardsNumber	SessionServer/HeroCardManager.h	/^    DWORD cardsNumber;		\/\/Ã◊≈∆∫≈$/;"	m	struct:stChallengeInfo
cardsNumber	base/SessionCommand.h	/^	  DWORD cardsNumber;	\/\/Ã◊≈∆$/;"	m	struct:Cmd::Session::t_ReqFightMatch_SceneSession
cardsNumber	base/SessionCommand.h	/^	  DWORD cardsNumber;$/;"	m	struct:Cmd::Session::t_RetSceneuserPkGame_SceneSession
cardsNumber1	base/SessionCommand.h	/^	  DWORD cardsNumber1;$/;"	m	struct:Cmd::Session::t_CreateNewPkGame_SceneSession
cardsNumber2	base/SessionCommand.h	/^	  DWORD cardsNumber2;$/;"	m	struct:Cmd::Session::t_CreateNewPkGame_SceneSession
career	base/Command.h	/^  WORD career;$/;"	m	struct:Cmd::stCreateSelectUserCmd
career	tmpcode/commond.h	/^        WORD  career;     \/\/ ÷∞“µ            $/;"	m	struct:stCreateSelectUserCmd
carrier	ScenesServer/zCard.h	/^    SkillStatusCarrier carrier;$/;"	m	struct:zCard
cartoon	tmpcode/commond.h	/^        char cartoon[MAX_NAMESIZE];  \/\/Ãÿ–ßŒƒº˛√˚  by ouyx 081005$/;"	m	struct:stBeginDisplayCartoonUserCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;    \/\/ÂÆùÂÆùid$/;"	m	struct:Cmd::stAddWaitingCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stAddCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stAdoptCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stChangeNameCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stChargeCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stConsignCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stConsignRetCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stDrawExpCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stHpExpCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stLetOutCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stRemoveCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stRemoveWaitingCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stRepairCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stReturnCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;$/;"	m	struct:Cmd::stSaleCartoonCmd
cartoonID	base/Command.h	/^  DWORD cartoonID;\/\/ÂèñÊ∂àË∑üÈöèÂ°´0$/;"	m	struct:Cmd::stFollowCartoonCmd
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;$/;"	m	struct:Cmd::Session::t_addCartoon_SceneSession
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;$/;"	m	struct:Cmd::Session::t_adoptCartoon_SceneSession
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;$/;"	m	struct:Cmd::Session::t_chargeCartoon_SceneSession
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;$/;"	m	struct:Cmd::Session::t_chargeNotifyCartoon_SceneSession
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;$/;"	m	struct:Cmd::Session::t_consignRetCartoon_SceneSession
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;$/;"	m	struct:Cmd::Session::t_correctCartoon_SceneSession
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;$/;"	m	struct:Cmd::Session::t_drawCartoon_SceneSession
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;$/;"	m	struct:Cmd::Session::t_getBackCartoon_SceneSession
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;$/;"	m	struct:Cmd::Session::t_levelNotifyCartoon_SceneSession
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;$/;"	m	struct:Cmd::Session::t_notifyCartoon_SceneSession
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;$/;"	m	struct:Cmd::Session::t_saleCartoon_SceneSession
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;$/;"	m	struct:Cmd::Session::t_setRepairCartoon_SceneSession
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;\/\/ID$/;"	m	struct:Cmd::Session::t_saveCartoon_SceneSession
cartoonID	base/SessionCommand.h	/^      DWORD cartoonID;\/\/ÂßîÊâòÁöÑÂÆ†Áâ©ID$/;"	m	struct:Cmd::Session::t_consignCartoon_SceneSession
cartoonPara	base/SessionCommand.h	/^      BYTE cartoonPara;$/;"	m	struct:Cmd::Session::t_CartoonCmd
cartoonState	base/Command.h	/^enum cartoonState$/;"	g	namespace:Cmd
catchme	ScenesServer/SceneNpc.h	/^  DWORD catchme; \/\/\/Âê∏ÂºïÊÄ™Áâ©ÊîªÂáªËá™Â∑±$/;"	m	class:SceneNpc
cblock	base/EncDec/EncDec.h	/^		 DES_cblock cblock;$/;"	m	union:DES_ks::__anon6
cblock	base/EncDec/mydes.h	/^		DES_cblock cblock;$/;"	m	union:DES_ks::__anon5
cc	base/zAStar.h	/^		int cc;$/;"	m	struct:zAStar::zPathPoint
cfg_prepareTime	ScenesServer/ChallengeGame.h	/^	DWORD cfg_prepareTime;	    \/\/“ªæ÷’Ω∂∑µƒ◊º±∏ ±º‰œﬁ÷∆$/;"	m	class:ChallengeGame
cfg_roundTime	ScenesServer/ChallengeGame.h	/^	DWORD cfg_roundTime;	    \/\/“ª∏ˆªÿ∫œµƒ ±º‰œﬁ÷∆$/;"	m	class:ChallengeGame
chairType	tmpcode/commond.h	/^	WORD chairType;$/;"	m	struct:stSitDownChairUserCmd
challengeFee	tmpcode/commond.h	/^         WORD challengeFee;              \/\/ÃÙ’Ω∑—”√£¨µ•ŒªΩ$/;"	m	struct:stRetNpcOccupiedBySeptNpcDare
challengeLastTime	ScenesServer/ChallengeGame.h	/^	DWORD challengeLastTime;	    \/\/∂‘’Ω≥÷–¯ ±º‰(¥”µ⁄“ª∏ˆªÿ∫œø™ ºº∆ ±µƒ◊‹√Î ˝)$/;"	m	class:ChallengeGame
challengePrepareTime	ScenesServer/ChallengeGame.h	/^	DWORD challengePrepareTime;	    \/\/◊º±∏ ±º‰(¥””Œœ∑ ˝æ›≥ı ºªØµΩÀ´∑ΩÃÊªªÕÍ±œµ⁄“ª∞—≈∆)$/;"	m	class:ChallengeGame
challengeTimes	tmpcode/commond.h	/^    BYTE challengeTimes;    \/\/ΩÒÃÏ“—æ≠ÃÙ’Ω¥Œ ˝$/;"	m	struct:t_DragonData
champion	tmpcode/commond.h	/^	BYTE champion;     \/\/π⁄æ¸$/;"	m	struct:stRetScore32WinnerUserCmd
changeAndRefreshHMS	ScenesServer/SceneEntryPk.h	/^    virtual void changeAndRefreshHMS(bool lock=true,bool sendData=true){}$/;"	f	struct:SceneEntryPk
changeAndRefreshHMS	ScenesServer/SceneNpc.cpp	/^void  SceneNpc::changeAndRefreshHMS(bool lock,bool sendData)$/;"	f	class:SceneNpc
changeAndRefreshHMS	ScenesServer/SceneUser.cpp	/^void SceneUser::changeAndRefreshHMS(bool lock,bool sendData)$/;"	f	class:SceneUser
changeAttackTarget	ScenesServer/SceneEntryPk.h	/^    virtual void changeAttackTarget(const DWORD &dwTempID){};$/;"	f	struct:SceneEntryPk
changeAttackTarget	ScenesServer/SceneNpc.cpp	/^void SceneNpc::changeAttackTarget(const DWORD &dwTempID)$/;"	f	class:SceneNpc
changeCountryScene	base/RecordCommand.h	/^      DWORD changeCountryScene;$/;"	m	struct:Cmd::Record::t_UserInfo_SceneRecord
changeCountryScene	base/SceneCommand.h	/^      DWORD changeCountryScene;$/;"	m	struct:Cmd::Scene::t_Unreg_LoginScene
changeCountryScene	base/SessionCommand.h	/^      DWORD changeCountryScene;		\/\/1,changeScene 0,login$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
changeHP	ScenesServer/SceneNpc.cpp	/^void SceneNpc::changeHP(const SDWORD &curHp)$/;"	f	class:SceneNpc
changeHP	ScenesServer/SceneUser.cpp	/^void SceneUser::changeHP(const SDWORD &hp)$/;"	f	class:SceneUser
changeMP	ScenesServer/SceneNpc.cpp	/^void SceneNpc::changeMP(const SDWORD &mp)$/;"	f	class:SceneNpc
changeMP	ScenesServer/SceneUser.cpp	/^void SceneUser::changeMP(const SDWORD &mp)$/;"	f	class:SceneUser
changeMap	ScenesServer/Scene.cpp	/^int Scene::changeMap(SceneUser *pUser,bool deathBackto,bool ignoreWar)$/;"	f	class:Scene
changeMap	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::changeMap(Scene * newScene,const zPos &pos)$/;"	f	class:SceneNpc
changeMap	ScenesServer/SceneUser.cpp	/^bool SceneUser::changeMap(Scene *newscene,const zPos &pos,bool ignoreUserLevel)$/;"	f	class:SceneUser
changeNum	tmpcode/commond.h	/^	DWORD changeNum;$/;"	m	struct:stReqContributeChangeUnionCoupon
changeRelationType	SessionServer/CRelationManager.cpp	/^void CRelationManager::changeRelationType(const char * name,const BYTE type)$/;"	f	class:CRelationManager
changeSP	ScenesServer/SceneNpc.cpp	/^void SceneNpc::changeSP(const SDWORD &sp)$/;"	f	class:SceneNpc
changeSP	ScenesServer/SceneUser.cpp	/^void SceneUser::changeSP(const SDWORD &sp)$/;"	f	class:SceneUser
changeZone	ScenesServer/Chat.cpp	/^bool Gm::changeZone(SceneUser *pUser,const char *para)$/;"	f	class:Gm
change_country	SessionServer/SessionTask.cpp	/^bool SessionTask::change_country(const Cmd::Session::t_changeCountry_SceneSession* cmd)$/;"	f	class:SessionTask
changeface	ScenesServer/SceneEntryPk.h	/^    bool changeface;  \/\/\/ÊòìÂÆπÊúØ,ÂèØ‰ª•ËÆøÈóÆÂõΩÂ§ñNPC$/;"	m	struct:SceneEntryPk
channelType	tmpcode/commond.h	/^    BYTE channelType;$/;"	m	struct:rqSendAccelChat
channelUniqeID	ScenesServer/Chat.h	/^                zUniqueDWORDID *channelUniqeID;$/;"	m	class:ChannelM
channelUniqeID	SessionServer/SessionChat.h	/^    zUniqueDWORDID *channelUniqeID;$/;"	m	class:SessionChannelManager
chaos	ScenesServer/zObject.h	/^  WORD chaos; \/\/Ê∑∑‰π±Â¢ûÂä†$/;"	m	class:Equips
chaos	base/Object.h	/^	WORD chaos; \/\/ªÏ¬“‘ˆº”$/;"	m	struct:t_Object
chaosRes	base/Command.h	/^  WORD chaosRes;    \/\/ÊäóÊ∑∑‰π±$/;"	m	struct:Cmd::t_HorseData
chaosdef	ScenesServer/zObject.h	/^  WORD chaosdef; \/\/ÊäóÊ∑∑‰π±Â¢ûÂä†$/;"	m	class:Equips
chaosdef	base/Object.h	/^	WORD chaosdef; \/\/øπªÏ¬“‘ˆº”$/;"	m	struct:t_Object
chaosp	ScenesServer/ScenePk.h	/^      SWORD chaosp;    \/\/ÂáèÂ∞ëÈô∑ÂÖ•Ê∑∑‰π±Áä∂ÊÄÅÂá†Áéá22$/;"	m	struct:SkillState::__anon155::__anon156
charID	base/Command.h	/^	DWORD	charID;					\/\/Ω«…´ID$/;"	m	struct:Cmd::ListData
charID	base/Command.h	/^                DWORD   charID;                                         \/\/Ω«…´ID$/;"	m	struct:Cmd::t_GetSortList::__anon127
charID	base/GmToolCommand.h	/^      DWORD charID;$/;"	m	struct:Cmd::GmTool::t_Log_GmTool
charID	base/SessionCommand.h	/^      DWORD charID;$/;"	m	struct:Cmd::Session::giftInfo
charID	tmpcode/commond.h	/^	DWORD	charID;					\/\/Ω«…´ID$/;"	m	struct:ListData
charID	tmpcode/commond.h	/^                DWORD   charID;                                         \/\/Ω«…´ID$/;"	m	struct:t_GetSortList::__anon241
charInfo	Robot/Client.h	/^	Cmd::SelectUserInfo charInfo[Cmd::MAX_CHARINFO];$/;"	m	class:Client
charInfo	base/Command.h	/^  SelectUserInfo charInfo[MAX_CHARINFO];$/;"	m	struct:Cmd::stUserInfoUserCmd
charInfo	tmpcode/commond.h	/^   SelectUserInfo charInfo[MAX_CHARINFO];$/;"	m	struct:stUserInfoUserCmd
charInfoFull	GatewayServer/GateUser.h	/^	bool charInfoFull()$/;"	f	class:GateSelectUserSession
charName	base/Command.h	/^	char	charName[MAX_NAMESIZE+1];	\/\/Ω«…´√˚$/;"	m	struct:Cmd::ListData
charName	base/Command.h	/^                char    charName[MAX_NAMESIZE+1];                       \/\/Ω«…´√˚$/;"	m	struct:Cmd::t_GetSortList::__anon127
charName	tmpcode/commond.h	/^		char    charName[MAX_NAMESIZE];                 \/\/Ω«…´√˚$/;"	m	struct:stRetKillNumsListZhenxuanUserCmd::KillData
charName	tmpcode/commond.h	/^		char    charName[MAX_NAMESIZE];                 \/\/Ω«…´√˚$/;"	m	struct:stRetPointListZhenxuanUserCmd::PointData
charName	tmpcode/commond.h	/^		char    charName[MAX_NAMESIZE];                 \/\/Ω«…´√˚$/;"	m	struct:stRetSeqKillListZhenxuanUserCmd::SeqKillData
charName	tmpcode/commond.h	/^		char charName[MAX_NAMESIZE+1];\/\/Ω«…´√˚◊÷$/;"	m	struct:t_ReturnHistory::__anon245
charName	tmpcode/commond.h	/^		char charName[MAX_NAMESIZE+1];\/\/Ω«…´√˚◊÷$/;"	m	struct:t_ReturnThisWeek::__anon244
charName	tmpcode/commond.h	/^	char	charName[MAX_NAMESIZE+1];	\/\/Ω«…´√˚$/;"	m	struct:ListData
charName	tmpcode/commond.h	/^	char charName[MAX_NAMESIZE];	\/\/◊Â≥§◊‘º∫µƒ√˚◊÷$/;"	m	struct:stRecruitSeptMemberCmd
charName	tmpcode/commond.h	/^                char    charName[MAX_NAMESIZE+1];                       \/\/Ω«…´√˚$/;"	m	struct:t_GetSortList::__anon241
charNo	base/Command.h	/^    BYTE charNo;$/;"	m	struct:Cmd::stRetUnlockChangeZone
charNo	base/Command.h	/^    DWORD charNo;$/;"	m	struct:Cmd::stReqUnlockChangeZone
charNo	base/Command.h	/^  DWORD  charNo;$/;"	m	struct:Cmd::stDeleteSelectUserCmd
charNo	base/Command.h	/^  DWORD charNo;$/;"	m	struct:Cmd::stLoginSelectUserCmd
charNo	tmpcode/commond.h	/^	DWORD	charNo;\/\/»ÀŒÔID$/;"	m	struct:stDeleteSelectUserCmd
charNo	tmpcode/commond.h	/^	DWORD charNo;$/;"	m	struct:stLoginSelectUserCmd
character	base/xml/xml_utility.h	/^	char character;$/;"	m	struct:detail::indent
character	tmpcode/commond.h	/^	BYTE character;\/\/∏ˆ–‘$/;"	m	struct:LingQiData
character	tmpcode/commond.h	/^    BYTE character;\/\/∏ˆ–‘$/;"	m	struct:LingQiWatchData
charater	tmpcode/commond.h	/^	BYTE charater;                  \/\/–¬¡È∆˜µƒ∏ˆ–‘$/;"	m	struct:DecayNewLingQi
charbase	ScenesServer/SceneUser.h	/^    CharBase charbase;$/;"	m	struct:SceneUser
charbase	base/CharBase.h	/^  CharBase   charbase;$/;"	m	struct:CharSave
charbase	base/RecordCommand.h	/^      CharBase	charbase;$/;"	m	struct:Cmd::Record::t_UserInfo_SceneRecord
charbase	base/RecordCommand.h	/^      CharBase    charbase;        \/\/\/Â≠òÊ°£ÁöÑÂü∫Êú¨‰ø°ÊÅØ$/;"	m	struct:Cmd::Record::t_WriteUser_SceneRecord
charbaseSize	base/RolechangeCommand.h	/^	DWORD charbaseSize;$/;"	m	struct:Cmd::Rolechange::t_Check_Valid
charbase_define	RecordServer/RecordTask.cpp	/^const dbCol RecordTask::charbase_define[] = {$/;"	m	class:RecordTask
charbase_define	RecordServer/RecordTask.h	/^    static const dbCol charbase_define[];$/;"	m	class:RecordTask
charge	base/Card.h	/^    BYTE charge;	    \/\/≥Â∑Ê$/;"	m	struct:t_CardPK
charge	base/SessionCommand.h	/^      DWORD charge;$/;"	m	struct:Cmd::Session::auctionInfo
charge	base/SessionCommand.h	/^      DWORD charge;$/;"	m	struct:Cmd::Session::t_cancelAuction_SceneSession
charge	base/SessionCommand.h	/^      DWORD charge;$/;"	m	struct:Cmd::Session::t_checkCancelAuction_SceneSession
charge	base/zDatabase.h	/^    BYTE charge;	    \/\/≥Â∑Ê(1,0)$/;"	m	struct:zCardB
charge	base/zDatabase.h	/^    DWORD charge;		\/\/≥Â∑Ê(1,0)$/;"	m	struct:CardBase
charid	BillServer/BillSessionManager.h	/^  DWORD  charid;      \/\/\/ ËßíËâ≤ÁºñÂè∑$/;"	m	struct:BillSession
charid	SessionServer/CRelationManager.h	/^  DWORD charid;$/;"	m	struct:CRelation
charid	base/BillCommand.h	/^      DWORD charid;        \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Bill::t_Redeem_Gold_Gateway
charid	base/BillCommand.h	/^      DWORD charid;        \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Bill::t_Redeem_MonthCard_Gateway
charid	base/BillCommand.h	/^      DWORD charid;        \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Bill::t_Request_Card_Gold_Gateway
charid	base/BillCommand.h	/^      DWORD charid;        \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Bill::t_Request_Point_Gateway
charid	base/BillCommand.h	/^      DWORD charid;        \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Bill::t_Request_Redeem_Gold_Gateway
charid	base/BillCommand.h	/^      DWORD charid;        \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Bill::t_Request_Redeem_MonthCard_Gateway
charid	base/BillCommand.h	/^      DWORD charid;        \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Bill::t_Return_Card_Gold
charid	base/BillCommand.h	/^      DWORD charid;        \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Bill::t_Return_Point
charid	base/RecordCommand.h	/^	DWORD charid;$/;"	m	struct:Cmd::Record::t_update_ZoneState
charid	base/RecordCommand.h	/^      DWORD charid;$/;"	m	struct:Cmd::Record::t_CreateChar_GateRecord
charid	base/RolechangeCommand.h	/^	DWORD charid;$/;"	m	struct:Cmd::Rolechange::t_checkZoneState
charid	base/RolechangeCommand.h	/^	DWORD charid;$/;"	m	struct:Cmd::Rolechange::t_retCheckZoneState
charid	base/RoleregCommand.h	/^	  DWORD charid;$/;"	m	union:Cmd::RoleReg::t_Charname_reg_withID::__anon51
charid	base/SuperCommand.h	/^      DWORD charid;$/;"	m	struct:Cmd::Super::t_Charname_Gateway
charid	roleRegServer/RoleregCommand.h	/^	  DWORD charid;$/;"	m	union:Cmd::RoleReg::t_Charname_reg_withID::__anon203
charid	tmpcode/commond.h	/^        DWORD charid; $/;"	m	struct:stDisMerceneryCountryCmd
charid	tmpcode/commond.h	/^        DWORD charid; $/;"	m	struct:stReturnMerceryManagerCountryCmd
charid	tmpcode/commond.h	/^        DWORD charid;$/;"	m	struct:ReplayMerceryList
charid	tmpcode/commond.h	/^        DWORD charid;$/;"	m	struct:stAgreeReplayMerencryCountryCmd
charid	tmpcode/commond.h	/^        DWORD charid;$/;"	m	struct:stNotAgreeReplayMerencryCountryCmd
charid	tmpcode/commond.h	/^        DWORD charid;\/\/Ω«…´ID $/;"	m	struct:MerceryList
charinfo	base/RecordCommand.h	/^      SelectUserInfo charinfo;      \/\/\/ ËßíËâ≤‰ø°ÊÅØ$/;"	m	struct:Cmd::Record::t_CreateChar_Return_GateRecord
charm	base/CharBase.h	/^  WORD  charm;                     \/\/\/ È≠ÖÂäõÂÄº *$/;"	m	struct:CharState
charm	base/Command.h	/^  WORD  charm;          \/\/\/ È≠ÖÂäõÂÄº$/;"	m	struct:Cmd::t_MainUserData
charm	tmpcode/commond.h	/^	WORD  charm;					\/\/\/ ˜»¡¶÷µ$/;"	m	struct:t_MainUserData
charmNum	tmpcode/commond.h	/^	DWORD charmNum;                 \/\/˜»¡¶÷µ$/;"	m	struct:FlowerSortData
charmadd_mdamage	base/Object.h	/^	WORD charmadd_mdamage;                  \/\/\/ ƒß¡¶¬Ø(∏Ωƒß±‰ªØ÷µ)$/;"	m	struct:t_Object
charmadd_mdamage	tmpcode/commond.h	/^	WORD charmadd_mdamage; \/\/∏Ωƒßƒßπ•$/;"	m	struct:EquipSimulate
charmadd_mdefence	base/Object.h	/^	WORD charmadd_mdefence;                 \/\/\/ ƒß¡¶¬Ø(∏Ωƒß±‰ªØ÷µ)$/;"	m	struct:t_Object
charmadd_mdefence	tmpcode/commond.h	/^	WORD charmadd_mdefence; \/\/∏Ωƒßƒß∑¿$/;"	m	struct:EquipSimulate
charmadd_pdamage	base/Object.h	/^	WORD charmadd_pdamage;                  \/\/\/ ƒß¡¶¬Ø(∏Ωƒß±‰ªØ÷µ)$/;"	m	struct:t_Object
charmadd_pdamage	tmpcode/commond.h	/^	WORD charmadd_pdamage; \/\/∏ΩƒßŒÔπ•$/;"	m	struct:EquipSimulate
charmadd_pdefence	base/Object.h	/^	WORD charmadd_pdefence;                 \/\/\/ ƒß¡¶¬Ø(∏Ωƒß±‰ªØ÷µ)$/;"	m	struct:t_Object
charmadd_pdefence	tmpcode/commond.h	/^	WORD charmadd_pdefence; \/\/∏ΩƒßŒÔ∑¿$/;"	m	struct:EquipSimulate
charstate	ScenesServer/SceneUser.h	/^    CharState charstate;$/;"	m	struct:SceneUser
chartest	ScenesServer/SceneUser.h	/^    CharTest chartest;$/;"	m	struct:SceneUser
chartest	base/RecordCommand.h	/^      CharTest    chartest;        \/\/\/Â≠òÊ°£Êï∞ÊçÆ$/;"	m	struct:Cmd::Record::t_Insert_CharTest_SceneRecord
chartest	base/RecordCommand.h	/^      CharTest    chartest;        \/\/\/Â≠òÊ°£Êï∞ÊçÆ$/;"	m	struct:Cmd::Record::t_Read_CharTest_SceneRecord
chartest	base/RecordCommand.h	/^      CharTest    chartest;        \/\/\/Â≠òÊ°£Êï∞ÊçÆ$/;"	m	struct:Cmd::Record::t_Update_CharTest_SceneRecord
chartest_define	RecordServer/RecordTask.cpp	/^const dbCol RecordTask::chartest_define[] = {$/;"	m	class:RecordTask
chartest_define	RecordServer/RecordTask.h	/^    static const dbCol chartest_define[];$/;"	m	class:RecordTask
chaseItsMaster	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::chaseItsMaster()$/;"	f	class:SceneNpc
chaseMode	ScenesServer/SceneNpc.h	/^  SceneNpcChase chaseMode;$/;"	m	class:SceneNpc
chaseOut	ScenesServer/SceneNpcAI.h	/^  int chaseOut;$/;"	m	struct:t_NpcAIDefine
chaseOutSize	ScenesServer/SceneNpcAI.h	/^  int chaseOutSize;$/;"	m	class:NpcAIController
chaseSceneEntry	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::chaseSceneEntry(const DWORD type,const DWORD entryid)$/;"	f	class:SceneNpc
chaseSecondTarget	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::chaseSecondTarget()$/;"	f	class:SceneNpc
chatColor	ScenesServer/SceneUser.h	/^    DWORD chatColor[8];$/;"	m	struct:SceneUser
chatInterval	GatewayServer/GatewayTask.h	/^	static const DWORD chatInterval = 1000;$/;"	m	class:GatewayTask
chatTime	tmpcode/commond.h	/^	DWORD chatTime;  \/\/∑¢—‘ ±º‰, time() ±¥¡$/;"	m	struct:stReportChatCmd
chatType	tmpcode/commond.h	/^		BYTE  chatType;     \/\/ ¡ƒÃÏ∆µµ¿«Î«Û chatType=1,¡ƒÃÏ “«Î«Û chatType=2;$/;"	m	struct:showPeronTaskUserCmd
chat_cmd	base/Command.h	/^  stChannelChatUserCmd chat_cmd;$/;"	m	struct:Cmd::stChatGmTool
chat_cmd	base/SessionCommand.h	/^      BYTE chat_cmd[0];$/;"	m	struct:Cmd::Session::t_privateChat_SceneSession
check	GatewayServer/CmdChecker.cpp	/^bool CheckerTable::check(int cmd,const zRTime& current) const$/;"	f	class:CheckerTable
check	GatewayServer/CmdChecker.h	/^	bool check(I cmd,const zRTime& current)$/;"	f	class:CmdChecker
check	GatewayServer/GatewayTask.h	/^	bool check(const Cmd::stNullUserCmd *pCmd)$/;"	f	class:GateCmdCheck
check	ScenesServer/ChallengeGame.h	/^	bool check(DWORD need)$/;"	f	class:MagicPoint
check	ScenesServer/SceneNpc.h	/^  virtual void check() { }$/;"	f	class:SceneNpc
check	base/Command.h	/^  bool check;\/\/ÊòØÂê¶ËøõË°åÂ§ñÊåÇÊ£ÄÊµã$/;"	m	struct:Cmd::stStampDataUserCmd
check	base/zMisc.h	/^	bool check(const T& t)$/;"	f	class:zCmdCheck
check	tmpcode/commond.h	/^	BYTE check;\/\/º¯∂®$/;"	m	struct:LingQiData
checkAdd	ScenesServer/zCard.cpp	/^bool BattleSlot::checkAdd(SceneUser *pUser,zCard *object,WORD x,WORD y)$/;"	f	class:BattleSlot
checkAdd	ScenesServer/zCard.cpp	/^bool CardSlot::checkAdd(SceneUser *pUser,zCard *object,WORD x,WORD y)$/;"	f	class:CardSlot
checkAdd	ScenesServer/zCard.cpp	/^bool EquipSlot::checkAdd(SceneUser *pUser,zCard *object,WORD x,WORD y)$/;"	f	class:EquipSlot
checkAdd	ScenesServer/zCard.cpp	/^bool HandSlot::checkAdd(SceneUser *pUser,zCard *object,WORD x,WORD y)$/;"	f	class:HandSlot
checkAdd	ScenesServer/zCard.cpp	/^bool HeroSlot::checkAdd(SceneUser *pUser,zCard *object,WORD x,WORD y)$/;"	f	class:HeroSlot
checkAdd	ScenesServer/zCard.cpp	/^bool SkillSlot::checkAdd(SceneUser *pUser,zCard *object,WORD x,WORD y)$/;"	f	class:SkillSlot
checkAdd	ScenesServer/zCard.cpp	/^bool TombSlot::checkAdd(SceneUser *pUser,zCard *object,WORD x,WORD y)$/;"	f	class:TombSlot
checkAdd	ScenesServer/zObject.cpp	/^bool EquipPack::checkAdd(SceneUser *pUser,zObject *ob,WORD x,WORD y)$/;"	f	class:EquipPack
checkAdd	ScenesServer/zObject.cpp	/^bool MainPack::checkAdd(SceneUser *pUser,zObject *object,WORD x,WORD y)$/;"	f	class:MainPack
checkAdd	ScenesServer/zObject.cpp	/^bool ObjectPack::checkAdd(SceneUser *pUser,zObject *object,WORD x,WORD y)$/;"	f	class:ObjectPack
checkAdd	ScenesServer/zObject.cpp	/^bool Package::checkAdd(SceneUser *pUser,zObject *object,WORD x,WORD y)$/;"	f	class:Package
checkAdd	ScenesServer/zObject.cpp	/^bool PetPack::checkAdd(SceneUser* pUser,zObject* object,WORD x,WORD y)$/;"	f	class:PetPack
checkAdd	ScenesServer/zObject.cpp	/^bool StorePack::checkAdd(SceneUser * pUser,zObject * object,WORD x,WORD y)$/;"	f	class:StorePack
checkAndReloadConfig	ScenesServer/ScenesServer.cpp	/^void ScenesService::checkAndReloadConfig()$/;"	f	class:ScenesService
checkAttackSpeed	ScenesServer/ScenePk.cpp	/^bool ScenePk::checkAttackSpeed(SceneUser *pAtt,const Cmd::stAttackMagicUserCmd *rev)$/;"	f	class:ScenePk
checkAttackTime	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::checkAttackTime(const zRTime &ct) const$/;"	f	class:SceneNpc
checkAttackTimes	ScenesServer/CardPk.cpp	/^bool zCard::checkAttackTimes()$/;"	f	class:zCard
checkAutoMP	ScenesServer/SceneUser.cpp	/^void SceneUser::checkAutoMP()$/;"	f	class:SceneUser
checkBind	ScenesServer/zObject.cpp	/^void zObject::checkBind()$/;"	f	class:zObject
checkBlock	ScenesServer/Scene.h	/^    const bool checkBlock(const zPos &pos) const { return checkBlock(pos,TILE_BLOCK | TILE_ENTRY_BLOCK); }$/;"	f	class:Scene
checkBlock	ScenesServer/Scene.h	/^    const bool checkBlock(const zPos &pos,const BYTE block) const$/;"	f	class:Scene
checkCallObj	ScenesServer/Scene.h	/^    bool checkCallObj() const { return (function & MAP_FUNCTION_NOCALLOBJ); }$/;"	f	class:Scene
checkChanllengeInfo	SessionServer/HeroCardManager.cpp	/^bool HeroCardManager::checkChanllengeInfo(WaitForMatch list, stChallengeInfo info)$/;"	f	class:HeroCardManager
checkChaseAttackTarget	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::checkChaseAttackTarget(SceneEntryPk *&entry)$/;"	f	class:SceneNpc
checkChatCmd	GatewayServer/GateUser.cpp	/^bool GateUser::checkChatCmd(DWORD type,const char *strName)$/;"	f	class:GateUser
checkChatCmd	ScenesServer/SceneUser.cpp	/^bool SceneUser::checkChatCmd(const Cmd::stNullUserCmd *pstrCmd,const DWORD nCmdLen) const$/;"	f	class:SceneUser
checkChatCmd	SessionServer/Session.cpp	/^bool UserSession::checkChatCmd(const Cmd::stNullUserCmd *pstrCmd,const DWORD nCmdLen) const$/;"	f	class:UserSession
checkCountry	SessionServer/SessionServer.cpp	/^void SessionService::checkCountry(struct tm &tmValue,bool donow)$/;"	f	class:SessionService
checkEndBattleTime	ScenesServer/SceneEntryPk.cpp	/^bool SceneEntryPk::checkEndBattleTime(const zRTime &ct)$/;"	f	class:SceneEntryPk
checkEnemyTaunt	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::checkEnemyTaunt(SceneUser &user)$/;"	f	class:ChallengeGame
checkField	ScenesServer/Scene.h	/^    bool checkField(const char *out) const$/;"	f	class:Scene
checkFirstMainLoop	base/zTCPClientTask.h	/^	bool checkFirstMainLoop()$/;"	f	class:zTCPClientTask
checkGold	ScenesServer/zObject.cpp	/^bool Packages::checkGold(DWORD need)$/;"	f	class:Packages
checkGoodness	ScenesServer/ScenePk.cpp	/^bool SceneUser::checkGoodness()$/;"	f	class:SceneUser
checkIncCity	ScenesServer/Scene.h	/^    bool checkIncCity(const char *out) const$/;"	f	class:Scene
checkInterval	base/zTCPTask.h	/^	bool checkInterval(const zRTime &ct)$/;"	f	class:zTCPTask
checkLockUserOverdue	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::checkLockUserOverdue(const zRTime &ct)$/;"	f	class:SceneNpc
checkMagicFlyRoute	ScenesServer/SceneEntryPk.cpp	/^bool SceneEntryPk::checkMagicFlyRoute(zSceneEntry *pTarget,BYTE aType)$/;"	f	class:SceneEntryPk
checkMainCity	ScenesServer/Scene.h	/^    bool checkMainCity(const char *out) const$/;"	f	class:Scene
checkMatchedList	SessionServer/HeroCardManager.cpp	/^void HeroCardManager::checkMatchedList()$/;"	f	class:HeroCardManager
checkMessageTime	ScenesServer/SceneUser.h	/^    inline bool checkMessageTime(const zRTime &ct)$/;"	f	struct:SceneUser
checkMoney	ScenesServer/zObject.cpp	/^bool Packages::checkMoney(DWORD need)$/;"	f	class:Packages
checkMountHorse	ScenesServer/SceneEntryPk.h	/^    virtual bool checkMountHorse() {return false;}$/;"	f	struct:SceneEntryPk
checkMountHorse	ScenesServer/SceneUser.cpp	/^bool SceneUser::checkMountHorse()$/;"	f	class:SceneUser
checkMoveTime	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::checkMoveTime(const zRTime &ct)$/;"	f	class:SceneNpc
checkMp	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::checkMp(DWORD userID, DWORD needMp)$/;"	f	class:ChallengeGame
checkNewName	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::checkNewName(char * newName)$/;"	f	class:GatewayTask
checkNpcHoldDataAndPutExp	ScenesServer/SceneUser.cpp	/^void SceneUser::checkNpcHoldDataAndPutExp()$/;"	f	class:SceneUser
checkObjectBlock	ScenesServer/Scene.h	/^    const bool checkObjectBlock(const zPos &pos) const { return checkBlock(pos,TILE_BLOCK | TILE_OBJECT_BLOCK); }$/;"	f	class:Scene
checkOverdue	ScenesServer/zObject.h	/^  bool checkOverdue(const zRTime &ct) const$/;"	f	struct:zSceneObject
checkOverdue	SessionServer/TempArchive.cpp	/^void GlobalTempArchiveIndex::checkOverdue()$/;"	f	class:GlobalTempArchiveIndex
checkPassport	GatewayServer/GateUser.cpp	/^bool GateUser::checkPassport(const char *passport)$/;"	f	class:GateUser
checkPercent	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::checkPercent()$/;"	f	class:SceneNpc
checkPercent	ScenesServer/SceneUser.cpp	/^bool SceneUser::checkPercent()$/;"	f	class:SceneUser
checkProtect	ScenesServer/ScenePk.cpp	/^void ScenePk::checkProtect(SceneEntryPk *psAtt,SceneEntryPk *psDef)$/;"	f	class:ScenePk
checkProtectOverdue	ScenesServer/zObject.h	/^  bool checkProtectOverdue(const zRTime &ct)$/;"	f	struct:zSceneObject
checkPunishTime	ScenesServer/SceneUser.cpp	/^void SceneUser::checkPunishTime()$/;"	f	class:SceneUser
checkRebound	BillServer/BillClient.cpp	/^int BillClient::checkRebound()$/;"	f	class:BillClient
checkRebound	GatewayServer/SceneClient.cpp	/^int SceneClient::checkRebound()$/;"	f	class:SceneClient
checkRebound	SuperServer/BroadClient.cpp	/^int BroadClient::checkRebound()$/;"	f	class:BroadClient
checkRebound	SuperServer/FLClient.cpp	/^int FLClient::checkRebound()$/;"	f	class:FLClient
checkRebound	SuperServer/InfoClient.cpp	/^int InfoClient::checkRebound()$/;"	f	class:InfoClient
checkRebound	SuperServer/RolechangeClient.cpp	/^int RolechangeClient::checkRebound()$/;"	f	class:RolechangeClient
checkRebound	SuperServer/RoleregClient.cpp	/^int RoleregClient::checkRebound()$/;"	f	class:RoleregClient
checkRebound	base/zTCPClientTask.h	/^	virtual int checkRebound()$/;"	f	class:zTCPClientTask
checkRecoverTime	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::checkRecoverTime(const zRTime& ct)$/;"	f	class:SceneNpc
checkRecycle	BillServer/BillTask.cpp	/^bool BillTask::checkRecycle()$/;"	f	class:BillTask
checkRecycle	ScenesServer/SceneTask.cpp	/^bool SceneTask::checkRecycle()$/;"	f	class:SceneTask
checkRecycle	SessionServer/SessionTask.cpp	/^bool SessionTask::checkRecycle()$/;"	f	class:SessionTask
checkReduce	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::checkReduce(const DWORD &object,const BYTE num)$/;"	f	class:SceneNpc
checkReduce	ScenesServer/SceneUser.cpp	/^bool SceneUser::checkReduce(const DWORD &object,const BYTE num)$/;"	f	class:SceneUser
checkSequenceTime	SuperServer/ServerTask.h	/^    bool checkSequenceTime()$/;"	f	class:ServerTask
checkShutdown	SessionServer/SessionServer.cpp	/^bool SessionService::checkShutdown()$/;"	f	class:SessionService
checkSkillBook	ScenesServer/Skill.cpp	/^bool zSkill::checkSkillBook(bool nextbase)$/;"	f	class:zSkill
checkSkillStudy	ScenesServer/Skill.cpp	/^bool zSkill::checkSkillStudy(bool nextbase)$/;"	f	class:zSkill
checkStateTimeout	base/zTCPClientTask.h	/^	bool checkStateTimeout(const ConnState state,const zTime &ct,const time_t timeout) const$/;"	f	class:zTCPClientTask
checkStockLogin	BillServer/BillUser.cpp	/^bool BillUser::checkStockLogin()$/;"	f	class:BillUser
checkTick	base/zTCPTask.h	/^	bool checkTick() const$/;"	f	class:zTCPTask
checkTicket	ScenesServer/zObject.cpp	/^bool Packages::checkTicket(DWORD need)$/;"	f	class:Packages
checkTime	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::checkTime(const zRTime &ct)$/;"	f	class:GatewayTask
checkTimeInterval	GatewayServer/GatewayTask.cpp	39;"	d
checkTwoPosIInNine	ScenesServer/zSceneEntryIndex.h	/^    bool checkTwoPosIInNine(const zPosI one,const zPosI two) const$/;"	f	class:zSceneEntryIndex
checkUnloadOneScene	ScenesServer/SceneManager.cpp	/^void SceneManager::checkUnloadOneScene()$/;"	f	class:SceneManager
checkUpdateTime	GatewayServer/LoginSessionManager.h	/^	bool checkUpdateTime(const zRTime &ct)$/;"	f	class:LoginSessionManager
checkUserCmd	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::checkUserCmd(const Cmd::stNullUserCmd *pCmd,const zRTime &ct)$/;"	f	class:GatewayTask
checkUserCmd	ScenesServer/SceneUser.cpp	/^bool SceneUser::checkUserCmd(const Cmd::stNullUserCmd *pstrCmd,const DWORD nCmdLen) const$/;"	f	class:SceneUser
checkUserLevel	ScenesServer/Scene.cpp	/^bool Scene::checkUserLevel(SceneUser *pUser)$/;"	f	class:Scene
checkVerifyTimeout	base/zTCPTask.h	/^	bool checkVerifyTimeout(const zRTime &ct,const QWORD interval = 2000) const$/;"	f	class:zTCPTask
checkVisitNpc	ScenesServer/SceneUser.h	/^    bool checkVisitNpc(const DWORD npcID) const$/;"	f	struct:SceneUser
checkWriteSize	base/RolechangeCommand.h	/^	DWORD checkWriteSize;$/;"	m	struct:Cmd::Rolechange::t_Check_Valid
checkZoneType	ScenesServer/Scene.cpp	/^bool Scene::checkZoneType(const zPos &pos,const int type) const$/;"	f	class:Scene
check_args	ScenesServer/QuestAction.cpp	/^bool Action::check_args(SceneUser* user,Vars* vars) const$/;"	f	class:Action
check_args	ScenesServer/QuestAction.h	/^  bool check_args(SceneUser* user,Vars* vars) const$/;"	f	class:CountrysVarAction
check_args	ScenesServer/QuestAction.h	/^  bool check_args(SceneUser* user,Vars* vars) const$/;"	f	class:GlobalAction
check_args	ScenesServer/QuestCondition.cpp	/^bool Condition::check_args(const SceneUser* user,const Vars* vars) const$/;"	f	class:Condition
check_args	ScenesServer/QuestCondition.h	/^  bool check_args(const SceneUser* user,const Vars* vars) const$/;"	f	class:CountrysVarCondition
check_args	ScenesServer/QuestCondition.h	/^  bool check_args(const SceneUser* user,const Vars* vars) const$/;"	f	class:GlobalCondition
check_count	GatewayServer/CmdChecker.h	/^	static bool check_count(const zRTime& current,CheckInfo& check)$/;"	f	class:percent_up_off
check_count	base/zTCPTask.h	/^	BYTE check_count;$/;"	m	class:zTCPTask
check_interval	GatewayServer/CmdChecker.h	/^	static bool check_interval(const zRTime& current,CheckInfo& check)$/;"	f	class:percent_up_off
check_money	ScenesServer/script_func.cpp	/^bool check_money(SceneUser* user,int money)$/;"	f
check_tid	BillServer/BillUser.cpp	/^bool BillUser::check_tid(const char *t)$/;"	f	class:BillUser
check_valid	RecordServer/RecordTask.cpp	/^int RecordTask::check_valid(DWORD accid, DWORD source_id, DWORD source_zone)$/;"	f	class:RecordTask
check_valid	ScenesServer/QuestCondition.h	/^  bool check_valid (const SceneUser* user,const Vars* vars) const$/;"	f	class:CountrysVarCondition
check_valid	ScenesServer/QuestCondition.h	/^  bool check_valid (const SceneUser* user,const Vars* vars) const$/;"	f	class:GlobalCondition
check_valid	ScenesServer/QuestCondition.h	/^  bool check_valid (const SceneUser* user,const Vars* vars) const$/;"	f	class:VarCondition
check_valid	ScenesServer/QuestCondition.h	/^  bool check_valid(const SceneUser* user,const Vars* vars) const$/;"	f	class:HeroLevelCondition
check_valid	ScenesServer/QuestCondition.h	/^  bool check_valid(const SceneUser* user,const Vars* vars) const$/;"	f	class:ItemCondition
check_valid	ScenesServer/QuestCondition.h	/^  bool check_valid(const SceneUser* user,const Vars* vars) const$/;"	f	class:LevelCondition
checkconnectThread	base/zTCPClientTaskPool.h	/^	zCheckconnectThread *checkconnectThread;;$/;"	m	class:zTCPClientTaskPool
checkholym	ScenesServer/ScenePk.cpp	2459;"	d
checkholyp	ScenesServer/ScenePk.cpp	2445;"	d
checkvalidSize	base/RolechangeCommand.h	/^	DWORD checkvalidSize;$/;"	m	struct:Cmd::Rolechange::t_Check_Valid
checkwaitThread	base/zTCPClientTaskPool.h	/^	zCheckwaitThread *checkwaitThread;;$/;"	m	class:zTCPClientTaskPool
chooseEnemy	ScenesServer/SceneNpcAI.cpp	/^SceneEntryPk * SceneNpc::chooseEnemy(SceneEntryPk_vec& enemies)$/;"	f	class:SceneNpc
city	tmpcode/commond.h	/^	DWORD city;                             \/\/\/ ≥« –$/;"	m	struct:stRetCityFundUnionHistoryCmd
city	tmpcode/commond.h	/^	DWORD city;$/;"	m	struct:stReqCityFundUnionHistoryCmd
city	tmpcode/commond.h	/^	char city[MAX_NAMESIZE];$/;"	m	struct:stPersonalSign
city	tmpcode/commond.h	/^        WORD    city;           \/\/ –    $/;"	m	struct:stNameCard
city	tmpcode/commond.h	/^    stZhongLiCityDist city;$/;"	m	struct:stZhongLiCityInfo
cityCount	tmpcode/commond.h	/^    DWORD cityCount;$/;"	m	struct:stRetCityInfoList
cityGold	tmpcode/commond.h	/^	DWORD cityGold;         \/\/\/ ≥« –◊ Ω$/;"	m	struct:stRetCityGuardInfo
cityID	tmpcode/commond.h	/^			DWORD cityID; $/;"	m	struct:stRetCityMinxinRecCmd::CityMxRec::CityMx
cityID	tmpcode/commond.h	/^		 DWORD cityID;    \/\/≥« –ID$/;"	m	struct:stNotifyCityDareSceneUserCmd
cityID	tmpcode/commond.h	/^	 DWORD cityID;     \/\/«∞Õ˘µƒƒø±Í≥« –ID$/;"	m	struct:stEnterUnionCityArea
cityID	tmpcode/commond.h	/^	DWORD cityID;           \/\/≥« –id        $/;"	m	struct:CountryGreatEvent
cityID	tmpcode/commond.h	/^	DWORD cityID; \/\/ ±£¡Ù  œ÷Ω◊∂Œ√ª”–”√$/;"	m	struct:stCityQuestEarnList
cityID	tmpcode/commond.h	/^	DWORD cityID;$/;"	m	struct:UnionCityDareInfo
cityID	tmpcode/commond.h	/^	DWORD cityID;$/;"	m	struct:stReqCityDareIntoUserCmd
cityID	tmpcode/commond.h	/^    DWORD cityID;                   \/\/≥« –id$/;"	m	struct:CityInfo
cityInfo	tmpcode/commond.h	/^	CityInfo cityInfo[0];$/;"	m	struct:stReturnCountryTax
cityList	tmpcode/commond.h	/^    stCityInfoS cityList[0];$/;"	m	struct:stRetCityInfoList
cityMaster	tmpcode/commond.h	/^	char cityMaster[MAX_NAMESIZE + 1];      \/\/\/ ≥«÷˜$/;"	m	struct:FundUnionHistory
cityMaster	tmpcode/commond.h	/^	char cityMaster[MAX_NAMESIZE + 1];      \/\/\/ ≥«÷˜$/;"	m	struct:stRetCityFundUnionHistoryCmd
cityMaster	tmpcode/commond.h	/^	char cityMaster[MAX_NAMESIZE + 1];$/;"	m	struct:TaxHistory
cityMaster	tmpcode/commond.h	/^	char cityMaster[MAX_NAMESIZE + 1];$/;"	m	struct:TrafficTaxHistory
cityMasterName	tmpcode/commond.h	/^    char cityMasterName[MAX_NAMESIZE+1];\/\/◊™»√∏¯µƒ≥«÷˜√˚◊÷$/;"	m	struct:stTransferCountryKingUserCmd
cityMoney	tmpcode/commond.h	/^    DWORD cityMoney;    \/\/µ±«∞≥« –◊ Ω$/;"	m	struct:CityInfo
cityName	base/Command.h	/^    char cityName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stRtnCityOwnerListCmd::__anon115
cityName	base/Command.h	/^  BYTE cityName[MAX_NAMESIZE];    \/**< ÂüéÂ∏ÇÂêçÁß∞ *\/$/;"	m	struct:Cmd::t_LandMass
cityName	tmpcode/commond.h	/^	char cityName[MAX_NAMESIZE];\/\/≥« –√˚≥∆$/;"	m	struct:stCanSetUnionCityTax
citySat	tmpcode/commond.h	/^    stZhongLiCityDist citySat;$/;"	m	struct:stZhongLiCityList
citySun	tmpcode/commond.h	/^    stZhongLiCityDist citySun;$/;"	m	struct:stZhongLiCityList
cityUnion	tmpcode/commond.h	/^	char cityUnion[MAX_NAMESIZE + 1];       \/\/\/ ’º¡ÏÕ≈$/;"	m	struct:FundUnionHistory
cityUnion	tmpcode/commond.h	/^	char cityUnion[MAX_NAMESIZE + 1];       \/\/\/ ’º¡ÏÕ≈$/;"	m	struct:stRetCityFundUnionHistoryCmd
cityUnionName	tmpcode/commond.h	/^	char cityUnionName[MAX_NAMESIZE];\/\/≥« –À˘ Ù”∂±¯Õ≈$/;"	m	struct:stCanSetUnionCityTax
cityid	tmpcode/commond.h	/^	DWORD cityid; \/\/≥« –ID$/;"	m	struct:CityQuestInfo
cityname	base/Command.h	/^  char  cityname[MAX_NAMESIZE]; \/\/ ÊâÄÂ±ûÂüéÂ∏Ç$/;"	m	struct:Cmd::stArmyBaseInfo
cityname	base/Command.h	/^  char cityname[MAX_NAMESIZE]; \/\/ ÂüéÂ∏ÇÂêç$/;"	m	struct:Cmd::stRtnArmySpecUserCmd
claasID	tmpcode/commond.h	/^	WORD claasID;\/\/÷∞“µiD$/;"	m	struct:stShowAllSkillUserPropertyUserCmd
classify	base/zDatabase.h	/^    char classify[32];$/;"	m	struct:zObjectB
clean	ScenesServer/ChallengeGameManager.cpp	/^void ChallengeGameManager::clean()$/;"	f	class:ChallengeGameManager
cleanDownPerHour	tmpcode/commond.h	/^	DWORD	cleanDownPerHour;              \/\/√ø–° ±µƒ«ÂΩ‡œ¬ΩµÀŸ∂»£®ª˘±æ÷µ£©$/;"	m	struct:HomeMapData
cleanValue	tmpcode/commond.h	/^	DWORD	cleanValue;                    \/\/«ÂΩ‡÷µ$/;"	m	struct:HomeMapData
cleanValuePerTask	tmpcode/commond.h	/^	DWORD cleanValuePerTask;  \/\/√ø∏ˆ«ÂΩ‡»ŒŒÒø…“‘‘ˆº”µƒ«ÂΩ‡÷µ$/;"	m	struct:stRequestCleanTaskUserCmd
clear	ScenesServer/ChallengeGameManager.h	/^	bool clear()$/;"	f	class:ChallengeTmpData
clear	ScenesServer/Quest.cpp	/^void QuestList::clear(SceneUser* pUser)$/;"	f	class:QuestList
clear	ScenesServer/SkillManager.cpp	/^void UserSkillM::clear()$/;"	f	class:UserSkillM
clear	ScenesServer/zObject.h	/^  void clear()$/;"	f	struct:zSceneObject
clear	base/zDatabase.h	/^	    WORD clear;\/\/ƒ‹∑Ò«Â≥˝$/;"	m	struct:SkillStatus::__anon36::__anon37
clear	base/zEntryManager.h	/^	inline void clear()$/;"	f	class:LimitHash
clear	base/zEntryManager.h	/^	inline void clear()$/;"	f	class:MultiHash
clear	base/zEntryManager.h	/^	inline void clear()$/;"	f	class:zEntryManager
clear	base/zEntryManager.h	/^	inline void clear(){}$/;"	f	class:zEntryNone
clear	base/zMetaData.h	/^	void clear()$/;"	f	class:DBRecord
clear	base/zMetaData.h	/^	void clear()$/;"	f	class:DBRecordSet
clear	base/zMisc.h	/^	void clear()$/;"	f	class:MsgQueue
clear	tmpcode/commond.h	/^    void clear() $/;"	f	struct:ShiKongChuanSong
clearActiveElement	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::clearActiveElement(DWORD value)$/;"	f	class:SkillStatusManager
clearActiveSkillStatus	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::clearActiveSkillStatus()$/;"	f	class:SkillStatusManager
clearActiveSkillStatusOnlyUseBySilent	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::clearActiveSkillStatusOnlyUseBySilent()$/;"	f	class:SkillStatusManager
clearAllUseTime	ScenesServer/SkillManager.cpp	/^void UserSkillM::clearAllUseTime(DWORD skillID)$/;"	f	class:UserSkillM
clearBadActiveSkillStatus	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::clearBadActiveSkillStatus()$/;"	f	class:SkillStatusManager
clearBlock	ScenesServer/Scene.h	/^    void clearBlock(const zPos &pos) { clearBlock(pos,TILE_ENTRY_BLOCK); }$/;"	f	class:Scene
clearBlock	ScenesServer/Scene.h	/^    void clearBlock(const zPos &pos,const BYTE block)$/;"	f	class:Scene
clearCardState	ScenesServer/zCard.h	/^    bool clearCardState(const int state)$/;"	f	struct:zCard
clearCharge	ScenesServer/CardPk.cpp	/^bool zCard::clearCharge()$/;"	f	class:zCard
clearCounter	ScenesServer/CounterManager.cpp	/^bool CounterManager::clearCounter(DWORD id)$/;"	f	class:CounterManager
clearDBTable	SessionServer/CSort.cpp	/^bool CSortM::clearDBTable()$/;"	f	class:CSortM
clearDeadLanguage	ScenesServer/CardPk.cpp	/^bool zCard::clearDeadLanguage()$/;"	f	class:zCard
clearDefTarget	ScenesServer/SceneEntryPk.cpp	/^void SceneEntryPk::clearDefTarget()$/;"	f	class:SceneEntryPk
clearEmperorDare	ScenesServer/SceneUserManager.cpp	/^void SceneUserManager::clearEmperorDare(Scene *scene)$/;"	f	class:SceneUserManager
clearEnrage	ScenesServer/CardPk.cpp	/^bool zCard::clearEnrage()$/;"	f	class:zCard
clearFieldMapName	ScenesServer/Scene.h	/^    void clearFieldMapName() { fieldMapName.clear(); }$/;"	f	class:Scene
clearFreeze	ScenesServer/CardPk.cpp	/^bool zCard::clearFreeze()$/;"	f	class:zCard
clearHeroInUse	ScenesServer/HeroInfoManager.cpp	/^void HeroInfoManager::clearHeroInUse(SceneUser& user)$/;"	f	class:HeroInfoManager
clearHpBuff	ScenesServer/CardPk.cpp	/^bool zCard::clearHpBuff(DWORD hp)$/;"	f	class:zCard
clearIncMapName	ScenesServer/Scene.h	/^    void clearIncMapName() { incMapName.clear(); }$/;"	f	class:Scene
clearMagic	ScenesServer/CardPk.cpp	/^bool zCard::clearMagic()$/;"	f	class:zCard
clearMainMapName	ScenesServer/Scene.h	/^    void clearMainMapName() { mainMapName.clear(); }$/;"	f	class:Scene
clearMana	ScenesServer/SceneEntryPk.h	/^    virtual void clearMana(){}$/;"	f	struct:SceneEntryPk
clearMana	ScenesServer/SceneUser.cpp	/^void SceneUser::clearMana()$/;"	f	class:SceneUser
clearMapElement	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::clearMapElement(const BYTE &byMutexType,std::map<DWORD,SkillStatusElement> &myMap,DWORD dwID,bool notify)$/;"	f	class:SkillStatusManager
clearMaster	ScenesServer/SceneNpc.cpp	/^void SceneNpc::clearMaster()$/;"	f	class:SceneNpc
clearMe	ScenesServer/SceneNpc.h	/^  bool clearMe;$/;"	m	class:SceneNpc
clearObject	ScenesServer/Scene.cpp	/^  void clearObject()$/;"	f	struct:RemoveSceneObjectCallBack
clearObject	ScenesServer/Scene.cpp	/^  void clearObject()$/;"	f	struct:UpdateSceneObjectCallBack
clearObjectBlock	ScenesServer/Scene.h	/^    void clearObjectBlock(const zPos &pos) { clearBlock(pos,TILE_OBJECT_BLOCK); }$/;"	f	class:Scene
clearProtect	ScenesServer/ScenePk.h	/^  void clearProtect()$/;"	f	struct:ScenePkState
clearQuizState	GatewayServer/GateUser.h	/^	void clearQuizState()$/;"	f	class:GateUser
clearRecoveryElement	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::clearRecoveryElement(DWORD value)$/;"	f	class:SkillStatusManager
clearRecoverySkillStatus	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::clearRecoverySkillStatus()$/;"	f	class:SkillStatusManager
clearScript	ScenesServer/SceneNpc.cpp	/^void SceneNpc::clearScript()$/;"	f	class:SceneNpc
clearShout	ScenesServer/CardPk.cpp	/^bool zCard::clearShout()$/;"	f	class:zCard
clearSkill	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::clearSkill(DWORD dwSkillID)$/;"	f	class:SkillStatusManager
clearState	base/zTCPTaskPool.h	/^	void clearState(const int state)$/;"	f	class:zTCPTaskPool
clearStateToNine	ScenesServer/SceneNpc.cpp	/^void SceneNpc::clearStateToNine(WORD state)$/;"	f	class:SceneNpc
clearStateToNine	ScenesServer/SceneUser.cpp	/^void SceneUser::clearStateToNine(WORD state)$/;"	f	class:SceneUser
clearTaunt	ScenesServer/CardPk.cpp	/^bool zCard::clearTaunt()$/;"	f	class:zCard
clearTick	base/zTCPTask.h	/^	void clearTick()$/;"	f	class:zTCPTask
clearUState	base/zSceneEntry.h	/^	inline bool clearUState(const int state)$/;"	f	struct:zSceneEntry
clearUseTime	ScenesServer/Skill.cpp	/^void zSkill::clearUseTime()$/;"	f	class:zSkill
clearWindfury	ScenesServer/CardPk.cpp	/^bool zCard::clearWindfury()$/;"	f	class:zCard
clearWorld	ScenesServer/Chat.cpp	/^bool Gm::clearWorld(SceneUser *pUser,const char *para)$/;"	f	class:Gm
clear_flag	base/zSocket.h	/^	inline void clear_flag(DWORD _f) { bitmask &= ~_f; }$/;"	f	class:zSocket
clear_state	base/Command.h	/^inline void clear_state(BYTE *state,const int teststate)$/;"	f	namespace:Cmd
clear_state	tmpcode/commond.h	/^inline void clear_state(unsigned char *state, const int teststate)$/;"	f
clearskill	ScenesServer/SkillManager.cpp	/^void UserSkillM::clearskill(DWORD skillid)$/;"	f	class:UserSkillM
clientOPTViewAngle	tmpcode/commond.h	/^	DWORD clientOPTViewAngle;\/\/ ”Ω«-—ˆΩ«$/;"	m	struct:stKOKOption
clientOPTViewDirect	tmpcode/commond.h	/^	DWORD clientOPTViewDirect;\/\/ ”Ω«-∑ΩœÚ$/;"	m	struct:stKOKOption
clientOPTViewLength	tmpcode/commond.h	/^	DWORD clientOPTViewLength;\/\/ ”Ω«-æ‡¿Î$/;"	m	struct:stKOKOption
clientVersion	base/SessionCommand.h	/^      bool clientVersion;$/;"	m	struct:Cmd::Session::t_regUser_GateSession
clientVersion	base/SessionCommand.h	/^      bool clientVersion;$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
client_ip	BillServer/BillManager.h	/^  char client_ip[MAX_IP_LENGTH];$/;"	m	struct:BillInfo
client_ip	BillServer/BillUser.h	/^    char     client_ip[MAX_IP_LENGTH];              \/\/ÂÆ¢Êà∑ËØ∑Ê±Çip$/;"	m	class:BillUser
client_ip	base/zType.h	/^  char client_ip[MAX_IP_LENGTH];$/;"	m	struct:t_NewLoginSession
client_port	roleRegServer/roleRegServer.h	/^	WORD client_port;$/;"	m	class:roleRegService
clients	Robot/ClientManager.h	/^	ClientContainer clients;$/;"	m	class:ClientManager
clone	base/xml/xml_config.h	/^		virtual xml_config_base* clone()$/;"	f	class:xml_config
clone	base/xml/xml_config.h	/^	virtual xml_config_base* clone() {return NULL;}$/;"	f	struct:xml_config_base
close	base/zTCPClient.h	/^	virtual void close()$/;"	f	class:zTCPClient
close	base/zTCPClient.h	/^	void close()$/;"	f	class:zTCPBufferClient
close	base/zTCPClientTask.h	/^		close    =  0,            \/**< ¡¨Ω”πÿ±’◊¥Ã¨ *\/$/;"	e	enum:zTCPClientTask::ConnState
closeCount	ScenesServer/SceneNpc.h	/^  int closeCount;\/\/ËøΩÈÄêËÆ°Êï∞,10Ê≠•‰ª•ÂÜÖÊúÄÁü≠Ë∑ùÁ¶ªÊ≤°ÊúâÂáèÂ∞ëÂàôËÆ§‰∏∫ÁõÆÊ†á‰∏çÂèØÂà∞Ëææ$/;"	m	class:SceneNpc
closeFunctionNpc	ScenesServer/SceneNpcManager.cpp	/^void SceneNpcManager::closeFunctionNpc()$/;"	f	class:SceneNpcManager
closeType	tmpcode/commond.h	/^	BYTE closeType;$/;"	m	struct:stCloseChallengeUserCmd
closeX	tmpcode/commond.h	/^	WORD closeX;$/;"	m	struct:rtPictureHelpUserCmd
closeY	tmpcode/commond.h	/^	WORD closeY;$/;"	m	struct:rtPictureHelpUserCmd
clothesKind	tmpcode/commond.h	/^	WORD clothesKind;               \/\/\/ “¬∑˛¿‡–Õ$/;"	m	struct:stSetDancerProfileUserCmd
clothesKind	tmpcode/commond.h	/^	WORD clothesKind;$/;"	m	struct:stStateDancerUserCmd
clubid	base/RoleregCommand.h	/^	  DWORD clubid;$/;"	m	union:Cmd::RoleReg::t_Charname_reg_withID::__anon51
clubid	roleRegServer/RoleregCommand.h	/^	  DWORD clubid;$/;"	m	union:Cmd::RoleReg::t_Charname_reg_withID::__anon203
cm	ScenesServer/Chat.h	/^                static ChannelM * cm;$/;"	m	class:ChannelM
cm	ScenesServer/SceneUser.h	/^    CounterManager cm;$/;"	m	struct:SceneUser
cmd	ScenesServer/Chat.h	/^        const char *cmd;$/;"	m	struct:Gm
cmd	ScenesServer/Scene.cpp	/^  const void *cmd;    \/\/\/ ÂæÖÂèëÈÄÅÁöÑÊåá‰ª§$/;"	m	struct:SceneSendToEveryOne
cmd	ScenesServer/Scene.cpp	/^  const void *cmd;    \/\/\/ ÂæÖÂèëÈÄÅÁöÑÊåá‰ª§$/;"	m	struct:SceneSendToUnWatchTrap
cmd	ScenesServer/Scene.cpp	/^  const void *cmd;    \/\/\/ ÂæÖÂèëÈÄÅÁöÑÊåá‰ª§$/;"	m	struct:SceneSendToWatchTrap
cmd	ScenesServer/Scene.cpp	/^  const void *cmd;    \/\/\/ ÂæÖÂèëÈÄÅÁöÑÊåá‰ª§$/;"	m	struct:SendToEveryOneExceptMe
cmd	ScenesServer/script_func.h	/^    int cmd;$/;"	m	struct:RecentMsg
cmd	base/GmToolCommand.h	/^      char cmd[MAX_NAMESIZE];\/\/Êåá‰ª§Âêç$/;"	m	struct:Cmd::GmTool::t_Log_GmTool
cmd	base/SessionCommand.h	/^      BYTE cmd[0];$/;"	m	struct:Cmd::Session::t_forwardUser_GateSession
cmd	base/SessionCommand.h	/^      BYTE cmd[0];$/;"	m	struct:Cmd::Session::t_forwardUser_SceneSession
cmd	base/SessionCommand.h	/^      BYTE cmd[0];$/;"	m	struct:Cmd::Session::t_sendCmd_SceneSession
cmd	base/zNullCmd.h	/^    BYTE cmd;          \/**< Êåá‰ª§‰ª£Á†Å *\/$/;"	m	struct:Cmd::t_NullCmd
cmdCheck	GatewayServer/GatewayTask.cpp	/^GateCmdCheck GatewayTask::cmdCheck;$/;"	m	class:GatewayTask
cmdCheck	GatewayServer/GatewayTask.h	/^	static GateCmdCheck cmdCheck;$/;"	m	class:GatewayTask
cmdFilter	GatewayServer/GateUser.cpp	/^void GateUser::cmdFilter(Cmd::stNullUserCmd *cmd,DWORD &type,char *name,DWORD &cmdLen)$/;"	f	class:GateUser
cmdLen	SessionServer/SessionServer.h	/^  DWORD cmdLen;$/;"	m	struct:OneCountryScene
cmdLen	SessionServer/SessionTask.cpp	/^  DWORD cmdLen;$/;"	m	struct:EveryUserSessionAction
cmdLen	SessionServer/SessionTask.cpp	/^  DWORD cmdLen;$/;"	m	struct:OneCountryUserSessionAction
cmdLen	SessionServer/SessionTask.cpp	/^  DWORD cmdLen;$/;"	m	struct:broadcastToEveryUser
cmdMsgParse	BillServer/BillClient.cpp	/^bool BillClient::cmdMsgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:BillClient
cmdMsgParse	BillServer/BillTask.cpp	/^bool BillTask::cmdMsgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:BillTask
cmdMsgParse	ScenesServer/RecordClient.cpp	/^bool RecordClient::cmdMsgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RecordClient
cmdMsgParse	ScenesServer/SceneTask.cpp	/^bool SceneTask::cmdMsgParse(const Cmd::t_NullCmd *cmd,const DWORD cmdLen)$/;"	f	class:SceneTask
cmdMsgParse	ScenesServer/SessionClient.cpp	/^bool SessionClient::cmdMsgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:SessionClient
cmdMsgParse	SessionServer/RecordClient.cpp	/^bool RecordClient::cmdMsgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RecordClient
cmdMsgParse	SessionServer/SessionTask.cpp	/^bool SessionTask::cmdMsgParse(const Cmd::t_NullCmd *cmd,const DWORD cmdLen)$/;"	f	class:SessionTask
cmdMsgParse	base/MessageQueue.h	/^	virtual bool cmdMsgParse(const Cmd::t_NullCmd *,const DWORD)$/;"	f	class:MessageQueue
cmdMsgParse_Battle	ScenesServer/SessionClient.cpp	/^bool SessionClient::cmdMsgParse_Battle(const Cmd::t_NullCmd *cmd, const DWORD len)$/;"	f	class:SessionClient
cmdMsgParse_Other	ScenesServer/SessionClient.cpp	/^bool SessionClient::cmdMsgParse_Other(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:SessionClient
cmdMsgParse_PKGame	ScenesServer/SessionClient.cpp	/^bool SessionClient::cmdMsgParse_PKGame(const Cmd::t_NullCmd *cmd, const DWORD len)$/;"	f	class:SessionClient
cmdQueue	base/MessageQueue.h	/^	MsgQueue<> cmdQueue;$/;"	m	class:MessageQueue
cmdQueue	base/zMisc.h	/^	CmdQueue cmdQueue[QueueSize];$/;"	m	class:MsgQueue
cmd_len	base/SessionCommand.h	/^      DWORD cmd_len;$/;"	m	struct:Cmd::Session::t_forwardUser_GateSession
cmd_len	base/SessionCommand.h	/^      DWORD cmd_len;$/;"	m	struct:Cmd::Session::t_forwardUser_SceneSession
cmd_queue	GatewayServer/ScreenIndex.cpp	/^  t_StackCmdQueue cmd_queue;$/;"	m	struct:SendNineExec
cmd_queue	GatewayServer/ScreenIndex.cpp	/^  t_StackCmdQueue cmd_queue;$/;"	m	struct:SendNineExecExceptMe
cmd_size	base/SessionCommand.h	/^      DWORD cmd_size;$/;"	m	struct:Cmd::Session::t_privateChat_SceneSession
cmd_size	base/zSocket.h	/^	DWORD cmd_size;$/;"	m	class:CmdBuffer_wrapper
cmd_state	base/SessionCommand.h	/^      BYTE cmd_state;\/\/Êåá‰ª§ÊâßË°åÁä∂ÊÄÅ$/;"	m	struct:Cmd::Session::t_gmCommand_SceneSession
cmdfilter	ScenesServer/Chat.cpp	/^bool Gm::cmdfilter(SceneUser* pUser, const char* para)$/;"	f	class:Gm
cmds	ScenesServer/scriptTickTask.h	/^	typedef std::vector<paras*> cmds;$/;"	t	class:scriptMessageFilter
cmdset	base/zMisc.h	/^	CmdSet cmdset;$/;"	m	class:zCmdCheck
cnt	base/zSocket.h	/^	type *cnt;$/;"	m	class:CmdBuffer_wrapper
coefficient	base/zDatabase.h	/^    int coefficient;\/\/\/…˝º∂œµ ˝$/;"	m	struct:npcSkill
cointtype	base/zDatabase.h	/^	DWORD cointtype;$/;"	m	union:zObjectB::__anon27
cold	ScenesServer/zObject.h	/^  WORD cold; \/\/ÂÜ∞ÂÜªÂ¢ûÂä†$/;"	m	class:Equips
cold	base/Object.h	/^	WORD cold; \/\/±˘∂≥‘ˆº”$/;"	m	struct:t_Object
colddef	ScenesServer/zObject.h	/^  WORD colddef; \/\/ÊäóÂÜ∞ÂÜªÂ¢ûÂä†$/;"	m	class:Equips
colddef	base/Object.h	/^	WORD colddef; \/\/øπ±˘∂≥‘ˆº”$/;"	m	struct:t_Object
colddown	tmpcode/commond.h	/^        DWORD colddown;         \/\/¿‰»¥ ±º‰$/;"	m	struct:stShowHorseSkillUserCmd
colddown	tmpcode/commond.h	/^    DWORD  colddown;        \/\/¿‰»¥ ±º‰$/;"	m	struct:HorseSkill
coldp	ScenesServer/ScenePk.h	/^      SWORD coldp;    \/\/ÂáèÂ∞ëÈô∑ÂÖ•ÂÜ∞ÂÜªÁä∂ÊÄÅÂá†Áéá18$/;"	m	struct:SkillState::__anon155::__anon156
collect	tmpcode/commond.h	/^	}collect[0];$/;"	m	struct:stRetCollectListBusiness	typeref:struct:stRetCollectListBusiness::__anon348
collectTarget	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::collectTarget(DWORD userID, const DWORD flag, std::vector<DWORD> &targets)$/;"	f	class:ChallengeGame
color	base/Object.h	/^	DWORD color;				\/\/ —’…´	$/;"	m	struct:t_Object
color	base/zDatabase.h	/^    DWORD  color;        \/\/ —’…´$/;"	m	struct:zNpcB
color	base/zDatabase.h	/^    DWORD color;$/;"	m	struct:ObjectBase
color	base/zDatabase.h	/^    DWORD color;$/;"	m	struct:zObjectB
color	tmpcode/commond.h	/^	BYTE color;  \/\/ ŒÔ∆∑—’…´$/;"	m	struct:NewbieGiftItem
color	tmpcode/commond.h	/^	BYTE color;$/;"	m	struct:set_manteau
color	tmpcode/commond.h	/^	DWORD	color;$/;"	m	struct:stFlagMoveSCUserCmd
color	tmpcode/commond.h	/^	DWORD color;$/;"	m	struct:HappyCardInfo
color	tmpcode/commond.h	/^	DWORD color;$/;"	m	struct:LTQUserData
color	tmpcode/commond.h	/^	DWORD color;$/;"	m	struct:stChangeColorLTQUserCmd
color	tmpcode/commond.h	/^	int color;$/;"	m	struct:stEndCollect
color	tmpcode/commond.h	/^        BYTE color;     \/\/µ±«∞–ƒªÍµƒ—’…´$/;"	m	struct:stShowNowHorseSoulEnergyUserCmd
color	tmpcode/commond.h	/^        BYTE color; \/\/—’…´$/;"	m	struct:set_SeptManteau
color	tmpcode/commond.h	/^        char color[16]; \/\/Ω¯∂»Ãıµƒ—’…´£¨»Á: 255,239,196,0$/;"	m	struct:stBeginDisplayCartoonUserCmd
color	tmpcode/commond.h	/^     BYTE color;                     \/\/—’…´£®“‘«¯∑÷µ–Œ“£©$/;"	m	struct:PlayerScoreSortItem
colorPara	base/zDatabase.h	/^    WORD colorPara;$/;"	m	struct:CarryObject
command	tmpcode/commond.h	/^                t_client_command command[0];$/;"	m	union:stClientKOKOption::__anon234
commodityList	tmpcode/commond.h	/^	commodityList()$/;"	f	struct:commodityList
commodityList	tmpcode/commond.h	/^struct commodityList$/;"	s
commonCountryBacktoMapID	ScenesServer/Scene.h	/^    DWORD commonCountryBacktoMapID; $/;"	m	class:Scene
commonUserBacktoMapID	ScenesServer/Scene.h	/^    DWORD commonUserBacktoMapID; $/;"	m	class:Scene
commoncountrybackto	ScenesServer/SceneManager.h	/^      DWORD commoncountrybackto;$/;"	m	struct:SceneManager::MapInfo
commonuserbackto	ScenesServer/SceneManager.h	/^      DWORD commonuserbackto;$/;"	m	struct:SceneManager::MapInfo
competitive_chanllengeID	SessionServer/HeroCardManager.h	/^    zUniqueID<DWORD>	*competitive_chanllengeID;	\/\/PVP æ∫ºº∂‘’Ω$/;"	m	class:HeroCardManager
compiled	base/zRegex.h	/^	bool compiled;$/;"	m	class:zRegex
complete	base/zThread.h	/^	volatile bool complete;$/;"	m	class:zThread
comprehension	tmpcode/commond.h	/^	BYTE comprehension;             \/\/¡ÏŒÚ¡¶$/;"	m	struct:LingQiData
compress	base/zTCPClient.h	/^	const bool compress;              \/**<  «∑Ò÷ß≥÷—πÀı *\/$/;"	m	class:zTCPClient
compress	base/zTCPClientTask.h	/^	const bool compress;              \/**<  «∑Ò÷ß≥÷—πÀı *\/$/;"	m	class:zTCPClientTask
compressSaveData	ScenesServer/SceneUser.cpp	/^int compressSaveData(SceneUser *pUser,BYTE *zlib)$/;"	f
con	ScenesServer/zObject.h	/^  WORD con;  \/\/ ‰ΩìË¥®$/;"	m	class:Equips
con	base/Command.h	/^  WORD con;    \/\/‰ΩìË¥®$/;"	m	struct:Cmd::t_HorseData
con	base/Object.h	/^	WORD con;  \/\/ ÃÂ÷                                \/\/ ∂‘”¶¬Ì∆• ÃÂ÷ $/;"	m	struct:t_Object
con	base/zDatabase.h	/^    DWORD   con;        \/\/ ÃÂ÷ $/;"	m	struct:zNpcB
con	tmpcode/commond.h	/^	WORD con;$/;"	m	struct:SimulateHorse
con	tmpcode/commond.h	/^	struct con{       $/;"	s	struct:stRetValidQuestUserCmd
con_Attribute	ScenesServer/zObject.h	/^	  WORD con_Attribute;		\/\/ ‰ΩìË¥®Â∑≤ÁªèÂä†ËøáÁöÑËá™Áî±ÁÇπ$/;"	m	struct:Equips::Freedom_Attribute
con_effect	tmpcode/commond.h	/^        int con_effect[4]; \/\/4∏ˆø…ƒ‹µƒºı“Ê–ßπ˚$/;"	m	struct:stCrystalEffectDataUserCmd
cond	base/zCond.h	/^	pthread_cond_t cond;    \/**< Á≥ªÁªüÊù°‰ª∂ÂèòÈáè *\/$/;"	m	class:zCond
cond	base/zThread.h	/^	zCond cond;$/;"	m	class:zThread
cond1	base/zSyncEvent.h	/^	zCond cond1, cond2;$/;"	m	class:zSyncEvent
cond2	base/zSyncEvent.h	/^	zCond cond1, cond2;$/;"	m	class:zSyncEvent
confile	base/zConfile.h	/^	std::string confile;$/;"	m	class:zConfile
connHandleID	base/zDBConnPool.h	/^typedef unsigned int connHandleID;$/;"	t
connPerThread	base/zTCPClientTaskPool.h	/^	const DWORD connPerThread;$/;"	m	class:zTCPClientTaskPool
connect	BillServer/BillClient.cpp	/^bool BillClient::connect()$/;"	f	class:BillClient
connect	GatewayServer/SceneClient.cpp	/^bool SceneClient::connect()$/;"	f	class:SceneClient
connect	Robot/Client.cpp	/^bool Client::connect()$/;"	f	class:Client
connect	Robot/LoginClient.cpp	/^bool LoginClient::connect()$/;"	f	class:LoginClient
connect	Robot/LoginClient.h	/^    bool connect(const char *ip, const WORD port)$/;"	f	class:LoginClient
connect	SuperServer/BroadClient.cpp	/^bool BroadClient::connect()$/;"	f	class:BroadClient
connect	SuperServer/FLClient.cpp	/^bool FLClient::connect()$/;"	f	class:FLClient
connect	SuperServer/InfoClient.cpp	/^bool InfoClient::connect()$/;"	f	class:InfoClient
connect	SuperServer/RolechangeClient.cpp	/^bool RolechangeClient::connect()$/;"	f	class:RolechangeClient
connect	SuperServer/RoleregClient.cpp	/^bool RoleregClient::connect()$/;"	f	class:RoleregClient
connect	base/zTCPClient.h	/^	bool connect(const char *ip,const WORD port)$/;"	f	class:zTCPClient
connectToBillServer	GatewayServer/BillClient.cpp	/^bool BillClient::connectToBillServer()$/;"	f	class:BillClient
connectToMiniServer	GatewayServer/MiniClient.cpp	/^bool MiniClient::connectToMiniServer()$/;"	f	class:MiniClient
connectToMiniServer	ScenesServer/MiniClient.cpp	/^bool MiniClient::connectToMiniServer()$/;"	f	class:MiniClient
connectToRecordServer	GatewayServer/RecordClient.cpp	/^bool RecordClient::connectToRecordServer()$/;"	f	class:RecordClient
connectToRecordServer	ScenesServer/RecordClient.cpp	/^bool RecordClient::connectToRecordServer()$/;"	f	class:RecordClient
connectToRecordServer	SessionServer/RecordClient.cpp	/^bool RecordClient::connectToRecordServer()$/;"	f	class:RecordClient
connectToSceneServer	GatewayServer/SceneClient.cpp	/^bool SceneClient::connectToSceneServer()$/;"	f	class:SceneClient
connectToSessionServer	GatewayServer/SessionClient.cpp	/^bool SessionClient::connectToSessionServer()$/;"	f	class:SessionClient
connectToSessionServer	ScenesServer/SessionClient.cpp	/^bool SessionClient::connectToSessionServer()$/;"	f	class:SessionClient
consort	base/CharBase.h	/^  DWORD  consort;              \/\/\/ ÈÖçÂÅ∂$/;"	m	struct:CharBase
consort	tmpcode/commond.h	/^	char consort[MAX_NAMESIZE]; \/\/ ≈‰≈º√˚≥∆$/;"	m	struct:stPersonalSign
const_DES_cblock	base/EncDec/EncDec.h	/^typedef \/* const *\/ unsigned char const_DES_cblock[8];$/;"	t
const_DES_cblock	base/EncDec/mydes.h	/^typedef unsigned char const_DES_cblock[8];$/;"	t
const_embranchment_iterator	ScenesServer/QuestEvent.h	/^  typedef EMBRANCHMENT::const_iterator const_embranchment_iterator;  $/;"	t	class:Event
const_iter	BillServer/BillCache.h	/^    typedef CacheContainer::const_iterator const_iter;$/;"	t	class:BillCache
const_iter	BillServer/BillClientManager.h	/^    typedef BillClientContainer::const_iterator const_iter;$/;"	t	class:BillClientManager
const_iter	FLServer/UserTask.h	/^	typedef NetUser_multimap::const_iterator const_iter;$/;"	t	class:UserContainer
const_iter	GatewayServer/SceneClientManager.h	/^	typedef SceneClient_map::const_iterator const_iter;$/;"	t	class:SceneClientManager
const_iter	SuperServer/BroadClientManager.h	/^    typedef BroadClientContainer::const_iterator const_iter;$/;"	t	class:BroadClientManager
const_iter	SuperServer/FLClientManager.h	/^    typedef FLClientContainer::const_iterator const_iter;$/;"	t	class:FLClientManager
const_iter	SuperServer/InfoClientManager.h	/^    typedef InfoClient_map::const_iterator const_iter;$/;"	t	class:InfoClientManager
const_iter	SuperServer/RolechangeClientManager.h	/^    typedef RolechangeClient_map::const_iterator const_iter;$/;"	t	class:RolechangeClientManager
const_iter	SuperServer/RoleregClientManager.h	/^    typedef RoleRegClientContainer::const_iterator const_iter;$/;"	t	class:RoleregClientManager
const_iter	base/zEntryManager.h	/^	typedef typename hashmap::const_iterator const_iter;$/;"	t	class:LimitHash
const_iter	base/zEntryManager.h	/^	typedef typename hashmap::const_iterator const_iter;$/;"	t	class:MultiHash
const_iter	roleChangeServer/ChangeTask.h	/^	typedef NetInfo_multimap::const_iterator const_iter;$/;"	t	class:RoleContainer
const_iterator	GatewayServer/CmdChecker.h	/^	typedef CHECK::const_iterator const_iterator;$/;"	t	class:CheckerTable
const_iterator	ScenesServer/zObject.h	/^  typedef SKILL::const_iterator const_iterator;$/;"	t	class:Equips
const_iterator	base/xml/xml_node_container.h	/^	    typedef typename Container::const_iterator	const_iterator;$/;"	t	class:detail::xml_node_map_container
const_iterator	base/xml/xml_node_container.h	/^	    typedef typename Container::const_iterator const_iterator;$/;"	t	class:detail::xml_node_seq_container
const_list_iterator	ScenesServer/QuestMaker.h	/^  typedef typename LIST::const_iterator const_list_iterator;$/;"	t	class:ProductFactory
const_quest_iterator	ScenesServer/Quest.h	/^  typedef QUESTS::const_iterator const_quest_iterator;$/;"	t	class:QuestList
const_quest_iterator	ScenesServer/QuestTable.h	/^  typedef QUESTS::const_iterator const_quest_iterator;$/;"	t	class:QuestTable
const_quest_menu	ScenesServer/Quest.h	/^  typedef MENU::const_iterator const_quest_menu;$/;"	t	class:QuestList
const_var_iterator	ScenesServer/Quest.h	/^    typedef std::map<QWORD,Vars*>::const_iterator const_var_iterator;$/;"	t	class:UserVar::VAR
const_var_iterator	ScenesServer/Quest.h	/^  typedef VARS::const_iterator const_var_iterator;  $/;"	t	class:Vars
const_vars_iterator	ScenesServer/Quest.h	/^  typedef VARS::const_iterator const_vars_iterator;$/;"	t	class:GlobalVarImpl
const_vars_iterator	ScenesServer/Quest.h	/^  typedef VARS::const_iterator const_vars_iterator;$/;"	t	class:UserVar
constellation	tmpcode/commond.h	/^	BYTE constellation; \/\/ –«◊˘£¨0±£√‹£¨1-12,–«◊˘$/;"	m	struct:stPersonalSign
constructInPlace	base/zMisc.h	/^inline  void constructInPlace(_T1  *_Ptr)$/;"	f
constructInPlace	tmpcode/commond.h	/^inline	void constructInPlace(T  *_Ptr)$/;"	f
consume	tmpcode/commond.h	/^	DWORD consume;$/;"	m	struct:rtConsumeHappyCardBoxUserCmd
consumePoint	FLServer/UserHttpPub.cpp	/^bool UserConfigM::consumePoint(const DWORD uid, const DWORD cpoint, DWORD &balance)$/;"	f	class:UserConfigM
consume_dur_by	ScenesServer/zObject.cpp	/^void ObjectPack::consume_dur_by(SceneUser* user,const zRTime& current)$/;"	f	class:ObjectPack
consume_func	FLServer/UserHttpPub.cpp	/^void UserHttpPub::consume_func(t_cmd_consume *pt, t_cmd_ret &cmd)$/;"	f	class:UserHttpPub
contact	base/Command.h	/^  BYTE contact;\/\/ËÅîÁ≥ªÊñπÂºè$/;"	m	struct:Cmd::stMsgGmTool
contact	base/GmToolCommand.h	/^      BYTE contact;\/\/ËÅîÁ≥ªÊñπÂºè$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
contact	base/GmToolCommand.h	/^      WORD contact;$/;"	m	struct:Cmd::GmTool::t_Msg_GmTool
container	ScenesServer/zCard.h	/^    zCard** container;$/;"	m	class:CardSlot
container	ScenesServer/zObject.h	/^    zObject** container;$/;"	m	class:Package
container	SuperServer/ServerManager.h	/^    Container container;$/;"	m	class:ServerManager
container_type	SuperServer/RoleregCache.cpp	/^	typedef __gnu_cxx::hash_map<const char *,RoleData> container_type;$/;"	t	class:RoleDataContainer
containertype	base/xml/xml_parser_generator.h	/^	std::string containertype;$/;"	m	class:xml_node_map_parser_generator
containertype	base/xml/xml_parser_generator.h	/^	std::string containertype;$/;"	m	class:xml_node_seq_parser_generator
containertype	base/xml/xml_parser_generator.h	/^	std::string containertype;$/;"	m	class:xml_node_set_parser_generator
content	base/Command.h	/^  char content[0];$/;"	m	struct:Cmd::stRetValidQuestUserCmd
content	base/Command.h	/^  char content[512];\/\/‰∏ªË¶ÅÂÜÖÂÆπ$/;"	m	struct:Cmd::stMsgGmTool
content	base/GmToolCommand.h	/^      char content[256];    \/**< ÂØπËØùÂÜÖÂÆπ *\/$/;"	m	struct:Cmd::GmTool::t_Chat_GmTool
content	base/GmToolCommand.h	/^      char content[256];$/;"	m	struct:Cmd::GmTool::t_Broadcast_GmTool
content	base/GmToolCommand.h	/^      char content[256];\/\/ÂÜÖÂÆπ$/;"	m	struct:Cmd::GmTool::t_Log_GmTool
content	base/GmToolCommand.h	/^      char content[32];$/;"	m	struct:Cmd::GmTool::t_Msg_Reply_GmTool
content	base/GmToolCommand.h	/^      char content[512];$/;"	m	struct:Cmd::GmTool::t_Msg_GmTool
content	base/GmToolCommand.h	/^      char content[512];\/\/‰∏ªË¶ÅÂÜÖÂÆπ$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
content	base/SessionCommand.h	/^      char content[MAX_CHATINFO]; \/\/chat msg$/;"	m	struct:Cmd::Session::t_QuestBulletinUserCmd
content	tmpcode/commond.h	/^	BYTE content[MAX_CHATINFO];  \/\/ ∑¢—‘ƒ⁄»›$/;"	m	struct:stReportChatCmd
content	tmpcode/commond.h	/^	char content[64];\/\/√øÃı◊Ó¥Û÷ß≥÷32∏ˆ∫∫◊÷$/;"	m	struct:HouseLog
content	tmpcode/commond.h	/^	}content[0];$/;"	m	struct:stRetValidQuestUserCmd	typeref:struct:stRetValidQuestUserCmd::con
content	tmpcode/commond.h	/^        char content[48];$/;"	m	struct:stHeadTopTipsUserCmd
content	tmpcode/commond.h	/^    char content[40];\/\/◊Ó∂‡20∏ˆ∫∫◊÷$/;"	m	struct:ChatAccelItem
contriCount	tmpcode/commond.h	/^	DWORD contriCount;			\/\/∂‘ƒ⁄π±œ◊º€∏Ò±∂ ˝    Œ™¡„±Ì æœ¬º‹$/;"	m	struct:stMerchInfo
contriCount	tmpcode/commond.h	/^	DWORD contriCount;  \/\/π±œ◊º€∏Ò±∂ ˝    Œ™¡„±Ì æœ¬º‹$/;"	m	struct:Merch
contriCount	tmpcode/commond.h	/^        DWORD contriCount;      \/\/∂‘ƒ⁄π±œ◊º€∏Ò±∂ ˝    Œ™¡„±Ì æœ¬º‹$/;"	m	struct:stRetMagicForgeInfo
contribute	tmpcode/commond.h	/^	DWORD contribute;                                       \/\/ π±œ◊∂»$/;"	m	struct:stSeptRember
contribute	tmpcode/commond.h	/^	DWORD contribute;                       \/\/ π±œ◊∂»$/;"	m	struct:stBroadcastSeptMemberInfo
contribute	tmpcode/commond.h	/^	DWORD contribute;   \/\/∏ˆ»Àπ±œ◊∂»$/;"	m	struct:stRetUnionBusinessInfo
contribute	tmpcode/commond.h	/^	DWORD contribute; \/\/ ∞Ôª·π±œ◊∂»$/;"	m	struct:stBroadcastMemberInfo
contribute	tmpcode/commond.h	/^	DWORD contribute;$/;"	m	struct:stMyContributeSeptCmd
contribute	tmpcode/commond.h	/^        DWORD contribute;                               \/\/ ∏ˆ»À”∂±¯Õ≈◊‹π±œ◊∂»$/;"	m	struct:stUnionRember
contribute	tmpcode/commond.h	/^        DWORD contribute;       \/\/\/ π±œ◊∂»œ˚∫ƒ$/;"	m	struct:stEquipIntensifyConsumeInfo
coolSeconds	base/zDatabase.h	/^    DWORD coolSeconds;$/;"	m	struct:zObjectB
coolTime	tmpcode/commond.h	/^	DWORD coolTime;$/;"	m	struct:stCannonCoolTimeCmd
cost	base/zAStar.h	/^		int cost;$/;"	m	struct:zAStar::zPathQueue
costAttackDur	ScenesServer/zObject.cpp	/^bool EquipPack::costAttackDur(SceneUser *pThis)$/;"	f	class:EquipPack
costAttackDurByPet	ScenesServer/zObject.cpp	/^bool EquipPack::costAttackDurByPet(SceneUser *pThis)$/;"	f	class:EquipPack
costDefenceDur	ScenesServer/zObject.cpp	/^bool EquipPack::costDefenceDur(SceneUser *pThis)$/;"	f	class:EquipPack
costDefenceDurByPet	ScenesServer/zObject.cpp	/^bool EquipPack::costDefenceDurByPet(SceneUser *pThis)$/;"	f	class:EquipPack
costTimes	tmpcode/commond.h	/^	WORD costTimes;	$/;"	m	struct:stSeptPracResultChallengeUserCmd
costTimes	tmpcode/commond.h	/^	WORD costTimes;$/;"	m	struct:stPersonResultChallengeUserCmd
count	ScenesServer/Quest.cpp	/^int QuestList::count() const$/;"	f	class:QuestList
count	SessionServer/SessionChat.cpp	/^DWORD SessionChannel::count()$/;"	f	class:SessionChannel
count	SessionServer/SessionServer.h	/^  DWORD count;$/;"	m	struct:worldMsg
count	base/CharBase.h	/^    QWORD count;$/;"	m	struct:CounterMember
count	base/Command.h	/^	WORD count;$/;"	m	struct:Cmd::t_GetHeroList
count	base/Command.h	/^        WORD count;$/;"	m	struct:Cmd::t_GetSortList
count	base/Command.h	/^    DWORD count; \/\/ÊùêÊñô‰∏™Êï∞$/;"	m	struct:Cmd::stFoundItemPropertyUserCmd
count	base/Command.h	/^    WORD count;$/;"	m	struct:Cmd::stNotifyMarketAllObjectPropertyUserCmd
count	base/Command.h	/^  BYTE count; \/\/ÂèòÈáèÊï∞Èáè$/;"	m	struct:Cmd::stQuestVarsUserCmd
count	base/HeroCardCmd.h	/^	WORD count;$/;"	m	struct:Cmd::stAddBattleCardListPropertyUserCmd
count	base/HeroCardCmd.h	/^	WORD count;$/;"	m	struct:Cmd::stNotifyAllCardTujianInfoCmd
count	base/HeroCardCmd.h	/^	WORD count;$/;"	m	struct:Cmd::stReqSaveOneCardGroupUserCmd
count	base/HeroCardCmd.h	/^	WORD count;$/;"	m	struct:Cmd::stRetAllHeroInfoUserCmd
count	base/HeroCardCmd.h	/^	WORD count;$/;"	m	struct:Cmd::stRetCardGroupListInfoUserCmd
count	base/HeroCardCmd.h	/^	WORD count;$/;"	m	struct:Cmd::stRetEnemyHandCardNumUserCmd
count	base/HeroCardCmd.h	/^	WORD count;$/;"	m	struct:Cmd::stRetOneCardGroupInfoUserCmd
count	base/RecordCommand.h	/^      DWORD count;    \/\/Â∑≤ÁªèÊéíÂ∫èÂ•ΩÁöÑÂõΩÂÆ∂id$/;"	m	struct:Cmd::Record::CountrOrder::__anon48
count	base/SessionCommand.h	/^      DWORD count;    \/\/Â∑≤ÁªèÊéíÂ∫èÂ•ΩÁöÑÂõΩÂÆ∂id$/;"	m	struct:Cmd::Session::CountrOrder::__anon40
count	base/ZlibObject.h	/^    DWORD count;$/;"	m	struct:ZlibObject
count	tmpcode/commond.h	/^	BYTE  count;            \/\/¡–±Ì≥…‘±∏ˆ ˝$/;"	m	struct:stInfoGouhuoUserCmd
count	tmpcode/commond.h	/^	BYTE count;			\/\/Õ¡µÿ∏ˆ ˝$/;"	m	struct:stResSoilInfoHouseUserCmd
count	tmpcode/commond.h	/^	BYTE count;                             \/\/…Ã»À∏ˆ ˝$/;"	m	struct:stGetUnionBusinessmen
count	tmpcode/commond.h	/^	BYTE count; \/\/◊∞±∏∏ˆ ˝$/;"	m	struct:stDevoteEquipPropertyUserCmd
count	tmpcode/commond.h	/^	BYTE count;$/;"	m	struct:stTabKeyPropertyUserCmd
count	tmpcode/commond.h	/^	DWORD   count;                          \/\/≤ƒ¡œ∏ˆ ˝$/;"	m	struct:stFoundSpecialItemPropertyUserCmd
count	tmpcode/commond.h	/^	DWORD count;		\/\/≤ƒ¡œ∏ˆ ˝$/;"	m	struct:stHouseFurnitureItemPropertyUserCmd
count	tmpcode/commond.h	/^	DWORD count;	\/\/‘™Àÿ∏ˆ ˝$/;"	m	struct:stSurveyResultUserCmd
count	tmpcode/commond.h	/^	DWORD count;            \/\/\/ ø… π”√¥Œ ˝$/;"	m	struct:stGetCityDefItemUnionCmd
count	tmpcode/commond.h	/^	DWORD count;    $/;"	m	struct:stGetMemberListSeptGuardCmd
count	tmpcode/commond.h	/^	DWORD count;   \/\/…Ë÷√±∂ ˝$/;"	m	struct:stSetUnionMerchInfo
count	tmpcode/commond.h	/^	DWORD count; \/\/±‰¡ø◊‹≥§∂»$/;"	m	struct:stQuestVarsUserCmd
count	tmpcode/commond.h	/^	DWORD count; \/\/≤ƒ¡œ∏ˆ ˝$/;"	m	struct:stFoundItemPropertyUserCmd
count	tmpcode/commond.h	/^	DWORD count; \/\/≤ƒ¡œ∏ˆ ˝$/;"	m	struct:stHouseRoomDeskItemPropertyUserCmd
count	tmpcode/commond.h	/^	DWORD count; \/\/◊∞±∏∏ˆ ˝$/;"	m	struct:stEquipSimulatePropertyUserCmd
count	tmpcode/commond.h	/^	DWORD count;$/;"	m	struct:rtHappyCardBoxUserCmd
count	tmpcode/commond.h	/^	DWORD count;$/;"	m	struct:stInviteIntoTankCmd
count	tmpcode/commond.h	/^	DWORD count;$/;"	m	struct:stRetDangerAreaUserCmd
count	tmpcode/commond.h	/^	DWORD count;$/;"	m	struct:stRetValidQuestUserCmd
count	tmpcode/commond.h	/^	DWORD count;$/;"	m	struct:t_ReturnHistory
count	tmpcode/commond.h	/^	DWORD count;$/;"	m	struct:t_ReturnThisWeek
count	tmpcode/commond.h	/^	WORD    count;  $/;"	m	struct:stRetBuyGoodsListBusiness
count	tmpcode/commond.h	/^	WORD    count;  $/;"	m	struct:stRetCollectListBusiness
count	tmpcode/commond.h	/^	WORD    count;  $/;"	m	struct:stRetSaleGoodsListBusiness
count	tmpcode/commond.h	/^	WORD count;		\/\/‘≠µÿ¥Œ ˝$/;"	m	struct:stMainUserDeathReliveUserCmd
count	tmpcode/commond.h	/^	WORD count;     	\/\/ ˝¡ø  $/;"	m	struct:stReqRapidSelectQuestUserCmd
count	tmpcode/commond.h	/^	WORD count;     	\/\/ ˝¡ø $/;"	m	struct:stRetRapidSelectQuestUserCmd
count	tmpcode/commond.h	/^	WORD count;                             \/\/∏ˆ ˝$/;"	m	struct:stReturnDayFlowerListUserCmd
count	tmpcode/commond.h	/^	WORD count;                             \/\/∏ˆ ˝$/;"	m	struct:stReturnFlowerListUserCmd
count	tmpcode/commond.h	/^	WORD count;     \/\/¡¨…±¥Œ ˝$/;"	m	struct:stKeepKillCountHeroIslandUserCmd
count	tmpcode/commond.h	/^	WORD count;     \/\/ ˝¡ø  $/;"	m	struct:stRetAcceptedDailyQuestUserCmd
count	tmpcode/commond.h	/^	WORD count;     \/\/ ˝¡ø  $/;"	m	struct:stRetDailyRandomQuestUserCmd
count	tmpcode/commond.h	/^	WORD count;$/;"	m	struct:stDelSomeMail
count	tmpcode/commond.h	/^	WORD count;$/;"	m	struct:stEnemyListCmd
count	tmpcode/commond.h	/^	WORD count;$/;"	m	struct:stForbidSameIpUserCmd
count	tmpcode/commond.h	/^	WORD count;$/;"	m	struct:stNotifyBetObjectChallengeUserCmd
count	tmpcode/commond.h	/^	WORD count;$/;"	m	struct:stRetKillNumsListZhenxuanUserCmd
count	tmpcode/commond.h	/^	WORD count;$/;"	m	struct:stRetPointListZhenxuanUserCmd
count	tmpcode/commond.h	/^	WORD count;$/;"	m	struct:stRetSeqKillListZhenxuanUserCmd
count	tmpcode/commond.h	/^	WORD count;$/;"	m	struct:stSeptSkillList
count	tmpcode/commond.h	/^	WORD count;$/;"	m	struct:stSetChatDragonUserCmd
count	tmpcode/commond.h	/^	WORD count;$/;"	m	struct:t_GetHeroList
count	tmpcode/commond.h	/^	int count;$/;"	m	struct:stEndCollect
count	tmpcode/commond.h	/^        BYTE count; \/\/≤ƒ¡œ∏ˆ ˝$/;"	m	struct:stAddHorseSoulEnergyUserCmd
count	tmpcode/commond.h	/^        DWORD count;    \/\/≤ƒ¡œ∏ˆ ˝$/;"	m	struct:stFoundItemSkillStore
count	tmpcode/commond.h	/^        DWORD count;$/;"	m	struct:stRetAllValidQuestUserCmd
count	tmpcode/commond.h	/^        WORD count;                             \/\/∏ˆ ˝$/;"	m	struct:rtBlessListUserCmd
count	tmpcode/commond.h	/^        WORD count;$/;"	m	struct:req_rtChunYunListCmd
count	tmpcode/commond.h	/^        WORD count;$/;"	m	struct:t_GetSortList
count	tmpcode/commond.h	/^    BYTE count;$/;"	m	struct:stNofityBetResultInChallengeDragonUserCmd
count	tmpcode/commond.h	/^    DWORD count;    \/\/ªÓ∂Ø ˝¡ø$/;"	m	struct:stActivityDataUserCmd
count	tmpcode/commond.h	/^    DWORD count; \/\/≤ƒ¡œ∏ˆ ˝$/;"	m	struct:stHorseSoulItemPropertyUserCmd
count	tmpcode/commond.h	/^    DWORD count;$/;"	m	struct:rtEquipSortListUserCmd
count	tmpcode/commond.h	/^    WORD count;                             \/\/∏ˆ ˝$/;"	m	struct:rtTempListUserCmd
count	tmpcode/commond.h	/^    WORD count;     \/\/ ˝¡ø  $/;"	m	struct:stRetDailyWarningQuestUserCmd
count	tmpcode/commond.h	/^    WORD count;$/;"	m	struct:rt_st_ChatAccelPropertyUserCmd
countFriendDegree	ScenesServer/SceneUser.cpp	/^void SceneUser::countFriendDegree()$/;"	f	class:SceneUser
countUser	ScenesServer/Scene.h	/^    const DWORD countUser() const { return userCount; }$/;"	f	class:Scene
countUserByTask	ScenesServer/SceneUserManager.cpp	/^DWORD SceneUserManager::countUserByTask(SceneTask *task)$/;"	f	class:SceneUserManager
countUserInOneScene	ScenesServer/SceneUserManager.cpp	/^DWORD SceneUserManager::countUserInOneScene(Scene *scene)$/;"	f	class:SceneUserManager
counter_iter	ScenesServer/CounterManager.h	/^	typedef std::map<DWORD, CounterMember>::iterator counter_iter;$/;"	t	class:CounterManager
counter_map	ScenesServer/CounterManager.h	/^	std::map<DWORD, CounterMember> counter_map;$/;"	m	class:CounterManager
countries	tmpcode/commond.h	/^	DWORD countries[COUNTRY_NUM];  \/\/ ≈≈√˚¥Œ–Ú$/;"	m	struct:stReturnCountrySortListUserCmd
country	SessionServer/Session.h	/^    DWORD country;$/;"	m	class:UserSession
country	SessionServer/SessionServer.h	/^  DWORD country;$/;"	m	struct:OneCountryScene
country	SessionServer/SessionServer.h	/^  DWORD country;$/;"	m	struct:worldMsg
country	SessionServer/SessionTask.cpp	/^  DWORD country;$/;"	m	struct:EveryUserSessionAction
country	SessionServer/SessionTask.cpp	/^  DWORD country;$/;"	m	struct:OneCountryUserSessionAction
country	base/CharBase.h	/^  DWORD  country;            \/\/\/ ÂõΩÂÆ∂$/;"	m	struct:CharBase
country	base/Command.h	/^                WORD    country;                                        \/\/π˙º“ID$/;"	m	struct:Cmd::t_GetSortList::__anon127
country	base/Command.h	/^    WORD country;          \/\/\/  ÂõΩÂÆ∂ID$/;"	m	struct:Cmd::SelectUserInfo
country	base/Command.h	/^  BYTE country; \/\/ÂõΩÂÆ∂$/;"	m	struct:Cmd::stRefreshBossUserCmd
country	base/Command.h	/^  BYTE country[2];$/;"	m	struct:Cmd::stReturnCountryPowerCmd
country	base/Command.h	/^  DWORD   country;$/;"	m	struct:Cmd::stRelationStatusCmd
country	base/Command.h	/^  DWORD country;            \/\/\/ ÂõΩÂÆ∂$/;"	m	struct:Cmd::t_MainUserData
country	base/Command.h	/^  DWORD country;    \/\/ ÂõΩÁ±ç$/;"	m	struct:Cmd::stRelation
country	base/Command.h	/^  DWORD country;$/;"	m	struct:Cmd::stCreateSelectUserCmd
country	base/GmToolCommand.h	/^      DWORD country;$/;"	m	struct:Cmd::GmTool::t_Broadcast_GmTool
country	base/GmToolCommand.h	/^      char country[MAX_NAMESIZE];$/;"	m	struct:Cmd::GmTool::t_Msg_GmTool
country	base/GmToolCommand.h	/^      char country[MAX_NAMESIZE];$/;"	m	struct:Cmd::GmTool::t_Punish_GmTool
country	base/RecordCommand.h	/^      DWORD country;        \/\/ÂõΩÂÆ∂  $/;"	m	struct:Cmd::Record::CountrOrder::__anon48
country	base/RecordCommand.h	/^      WORD country;        \/\/\/ ÂõΩÂÆ∂ID$/;"	m	struct:Cmd::Record::t_CreateChar_GateRecord
country	base/SceneCommand.h	/^      WORD  country;            \/\/\/ –∂‘ÿ¿‡–Õ$/;"	m	struct:Cmd::Scene::t_ChangeCountryStatus
country	base/SessionCommand.h	/^	DWORD country;$/;"	m	struct:Cmd::Session::t_RelationAddFriend
country	base/SessionCommand.h	/^      BYTE country[13];$/;"	m	struct:Cmd::Session::t_countryPowerSort_SceneSession
country	base/SessionCommand.h	/^      DWORD country;        \/\/ÂõΩÂÆ∂  $/;"	m	struct:Cmd::Session::CountrOrder::__anon40
country	base/SuperCommand.h	/^        DWORD country;$/;"	m	struct:Cmd::Super::t_CountryOnline::Online
country	tmpcode/commond.h	/^		 DWORD country;   \/\/π˙º“id$/;"	m	struct:stNotifyCityDareSceneUserCmd
country	tmpcode/commond.h	/^		BYTE country;$/;"	m	struct:stReplayMercenaryCountryCmd
country	tmpcode/commond.h	/^		DWORD   country;                                \/\/π˙º“ID$/;"	m	struct:stRetKillNumsListZhenxuanUserCmd::KillData
country	tmpcode/commond.h	/^		DWORD   country;                                \/\/π˙º“ID$/;"	m	struct:stRetPointListZhenxuanUserCmd::PointData
country	tmpcode/commond.h	/^		DWORD   country;                                \/\/π˙º“ID$/;"	m	struct:stRetSeqKillListZhenxuanUserCmd::SeqKillData
country	tmpcode/commond.h	/^		DWORD   country;\/\/ƒ«∏ˆπ˙º“’ŸªΩ$/;"	m	struct:stMercenaryCallDuty
country	tmpcode/commond.h	/^		DWORD country;					\/\/π˙º“id$/;"	m	struct:stGetKingPurseListCmd::__anon252
country	tmpcode/commond.h	/^		WORD    country;        \/\/π˙º“$/;"	m	struct:stNameCard
country	tmpcode/commond.h	/^	BYTE country;						\/\/\/ π˙º“$/;"	m	struct:t_UserData
country	tmpcode/commond.h	/^	BYTE country;		\/\/ ΩÁ”Ú$/;"	m	struct:rqBuyHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;                           \/\/ΩÁ”ÚID$/;"	m	struct:stReqTeamInfoListUserCmd
country	tmpcode/commond.h	/^	BYTE country;                           \/\/ΩÁ”ÚID$/;"	m	struct:teamRecruitInfo
country	tmpcode/commond.h	/^	BYTE country;   $/;"	m	struct:st_DriveAwayHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:reqGoToBedHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:req_ObjVisitHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:rqAreaDataHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:rqEnterHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:rqJoinHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:rqQuitHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:rt_memberListHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:stResSoilInfoHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:stUpdateHouseRoomRenQiUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:st_BanishRoomerHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:st_CancelConscribeHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:st_ConscribeRoomerHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:st_MoveItemStoreHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:st_RequestLevelUpHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:st_RequestManageHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:st_RequestRentHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:st_RequestRoomerNameHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:st_RetManageHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:st_StorageMoneyHouseUserCmd
country	tmpcode/commond.h	/^	BYTE country;$/;"	m	struct:st_TakeOutItemStoreHouseUserCmd
country	tmpcode/commond.h	/^	DWORD	country;$/;"	m	struct:_powerList
country	tmpcode/commond.h	/^	DWORD   country;$/;"	m	struct:stRelationStatusCmd
country	tmpcode/commond.h	/^	DWORD country;						\/\/\/ π˙º“$/;"	m	struct:t_MainUserData
country	tmpcode/commond.h	/^	DWORD country;                          \/\/\/ π˙º“$/;"	m	struct:stRetCityFundUnionHistoryCmd
country	tmpcode/commond.h	/^	DWORD country;          \/\/ π˙ºÆ $/;"	m	struct:stRelation
country	tmpcode/commond.h	/^	DWORD country;$/;"	m	struct:EnemyOnOff
country	tmpcode/commond.h	/^	DWORD country;$/;"	m	struct:stReqCityFundUnionHistoryCmd
country	tmpcode/commond.h	/^	WORD country;                                   \/\/\/     π˙º“ID$/;"	m	struct:SelectUserInfo
country	tmpcode/commond.h	/^	WORD country;$/;"	m	struct:stNotifyTop2DragonUserCmd
country	tmpcode/commond.h	/^	strong_info country[7];$/;"	m	struct:stReturnCountryPowerCmd
country	tmpcode/commond.h	/^                DWORD country;$/;"	m	struct:stCrystalAllInfoDataUserCmd::cryState
country	tmpcode/commond.h	/^                WORD    country;                                        \/\/π˙º“ID$/;"	m	struct:t_GetSortList::__anon241
country	tmpcode/commond.h	/^            BYTE country;$/;"	m	struct:stNofityBetResultInChallengeDragonUserCmd::WinnerInfo
country	tmpcode/commond.h	/^        BYTE country;\/\/πÕ”∂π˙º“£¨∑¢ÀÕøÕªß∂À,»Áπ˚«Â≥˝‘Ú∑¢£∞$/;"	m	struct:stReturnMercenaryCountryIDCountryCmd
country	tmpcode/commond.h	/^        BYTE country;\/\/π˙º“$/;"	m	struct:MerceryList
country	tmpcode/commond.h	/^        BYTE country;\/\/π˙º“$/;"	m	struct:ReplayMerceryList
country	tmpcode/commond.h	/^        DWORD country;  \/\/ΩÁ”Ú$/;"	m	struct:CardMainData
country	tmpcode/commond.h	/^        WORD country;\/\/π˙º“ID$/;"	m	struct:MercenaryReplayCountryList
country	tmpcode/commond.h	/^    BYTE country;$/;"	m	struct:rtAreaDataHouseUserCmd
country	tmpcode/commond.h	/^    BYTE country;$/;"	m	struct:rt_InsertFlowerHouseUserCmd
country	tmpcode/commond.h	/^    DWORD country;    \/\/∑¢≤º∂˜¥ÕµƒΩÁ”Ú$/;"	m	struct:t_RewardInfo
country	tmpcode/commond.h	/^    DWORD country;$/;"	m	struct:EquipSortObjItem
countryDareBackToMapID	ScenesServer/Scene.h	/^    DWORD countryDareBackToMapID;$/;"	m	class:Scene
countryDefBackToMapID	ScenesServer/Scene.h	/^    DWORD countryDefBackToMapID;$/;"	m	class:Scene
countryID	GatewayServer/GateUser.h	/^	DWORD countryID;$/;"	m	class:GateUser
countryID	ScenesServer/Scene.h	/^    DWORD countryID;$/;"	m	class:Scene
countryID	base/Command.h	/^  DWORD countryID;$/;"	m	struct:Cmd::stChatGmTool
countryID	base/GmToolCommand.h	/^      DWORD countryID;$/;"	m	struct:Cmd::GmTool::t_Chat_GmTool
countryID	base/MiniCommand.h	/^      WORD countryID;$/;"	m	struct:Cmd::Mini::t_UserLogin_Gateway
countryID	base/SceneCommand.h	/^      DWORD countryID;      \/\/π˙º“ID$/;"	m	struct:Cmd::Scene::t_countryAndScene_GateScene
countryID	base/SessionCommand.h	/^	  DWORD countryID;$/;"	m	struct:Cmd::Session::t_CountryIncLoginCount
countryID	base/SessionCommand.h	/^	  WORD countryID;$/;"	m	struct:Cmd::Session::t_NotifySceneServerGameCount_SceneSession
countryID	base/SessionCommand.h	/^      DWORD countryID;$/;"	m	struct:Cmd::Session::t_cityRushCust_SceneSession
countryID	base/SessionCommand.h	/^      DWORD countryID;$/;"	m	struct:Cmd::Session::t_cityRush_SceneSession
countryID	base/SessionCommand.h	/^      DWORD countryID;$/;"	m	struct:Cmd::Session::t_createRush_SceneSession
countryID	base/SessionCommand.h	/^      DWORD countryID;$/;"	m	struct:Cmd::Session::t_updateWinnerExp_SceneSession
countryID	tmpcode/commond.h	/^	 DWORD countryID;  \/\/«∞Õ˘µƒƒø±Íπ˙º“ID$/;"	m	struct:stEnterUnionCityArea
countryID	tmpcode/commond.h	/^	BYTE countryID;	\/\/ΩÁ”ÚID$/;"	m	struct:SortLastWeek
countryID	tmpcode/commond.h	/^	BYTE countryID;	\/\/ΩÁ”ÚID$/;"	m	struct:SortThisWeek
countryID	tmpcode/commond.h	/^	DWORD countryID;                \/\/≥–◊‚∑Ω”∂±¯Õ≈À˘ Ùπ˙º“$/;"	m	struct:ResidentHireList
countryID	tmpcode/commond.h	/^	DWORD countryID;                \/\/π˙º“id$/;"	m	struct:CountryPastKing
countryID	tmpcode/commond.h	/^	DWORD countryID;                \/\/ΩÁ”ÚID        $/;"	m	struct:BlessSortData
countryID	tmpcode/commond.h	/^	DWORD countryID;                \/\/ΩÁ”ÚID        $/;"	m	struct:FlowerSortData
countryID	tmpcode/commond.h	/^	DWORD countryID;        \/\/π˙º“id$/;"	m	struct:CountryGreatEvent
countryID	tmpcode/commond.h	/^	DWORD countryID;$/;"	m	struct:GuardSortData
countryID	tmpcode/commond.h	/^	DWORD countryID;$/;"	m	struct:UnionCityDareInfo
countryID	tmpcode/commond.h	/^	DWORD countryID;$/;"	m	struct:stReqCityDareInfoUserCmd
countryID	tmpcode/commond.h	/^	DWORD countryID;$/;"	m	struct:stReqCityDareIntoUserCmd
countryID	tmpcode/commond.h	/^	DWORD countryID;\/\/ΩÁÕı◊‘º∫µƒΩÁ”ÚID$/;"	m	struct:stTransferCountryKingToCityMasterCmd
countryID	tmpcode/commond.h	/^    DWORD countryID;                \/\/ΩÁ”ÚID        $/;"	m	struct:TempSortData
countryID	tmpcode/commond.h	/^    DWORD countryID;    \/\/ ±æπ˙ID$/;"	m	struct:stJieZhanState
countryID	tmpcode/commond.h	/^    DWORD countryID;$/;"	m	struct:stJieZhanLive
countryID	tmpcode/commond.h	/^    DWORD countryID;$/;"	m	struct:stJieZhanXuanZhan
countryID	tmpcode/commond.h	/^    DWORD countryID;$/;"	m	struct:stRefreshJieZhanInfo
countryID	tmpcode/commond.h	/^    DWORD countryID;\/\/ΩÁÕı◊‘º∫µƒΩÁ”ÚID$/;"	m	struct:stTransferCountryKingUserCmd
countryLevel	SessionServer/SessionServer.h	/^    DWORD countryLevel[13];$/;"	m	class:SessionService
countryName	SessionServer/Session.h	/^    BYTE countryName[MAX_NAMESIZE+1];$/;"	m	class:UserSession
countryName	base/Command.h	/^    char  countryName[MAX_NAMESIZE+1];  \/\/\/ ÂõΩÂÆ∂ÂêçÁß∞$/;"	m	struct:Cmd::SelectUserInfo
countryName	base/Command.h	/^  BYTE countryName[MAX_NAMESIZE]; \/**< ÂõΩÂÆ∂ÂêçÁß∞ *\/$/;"	m	struct:Cmd::t_LandMass
countryName	base/Command.h	/^  char countryName[MAX_NAMESIZE]; \/\/ ÂõΩÂÆ∂ÂêçÁß∞$/;"	m	struct:Cmd::rank_elem
countryName	tmpcode/commond.h	/^	char  countryName[MAX_NAMESIZE+1];      \/\/\/ π˙º“√˚≥∆$/;"	m	struct:SelectUserInfo
countryName	tmpcode/commond.h	/^    char countryName[MAX_NAMESIZE];$/;"	m	struct:stRequestCountryHelpUserCmd
countryPower	ScenesServer/ScenesServer.h	/^    BYTE countryPower[13];$/;"	m	class:ScenesService
countryTax	ScenesServer/Scene.h	/^    DWORD countryTax;$/;"	m	class:Scene
country_dic	GatewayServer/CountryInfo.h	/^	CountryMap country_dic;$/;"	m	class:CountryInfo
country_id	base/Command.h	/^  DWORD country_id; \/\/ ÂõΩÂÆ∂ID$/;"	m	struct:Cmd::_KingListItem
country_id	base/SessionCommand.h	/^		DWORD country_id;$/;"	m	struct:Cmd::Session::Country_Online
country_info	GatewayServer/CountryInfo.h	/^	StrVec country_info;$/;"	m	class:CountryInfo
country_info	GatewayServer/GatewayServer.h	/^	CountryInfo country_info;$/;"	m	class:GatewayService
country_info	GatewayServer/GatewayTask.cpp	370;"	d
country_info	GatewayServer/SessionClient.cpp	170;"	d
country_info	ScenesServer/SceneManager.h	/^    CountryMap country_info;$/;"	m	class:SceneManager
country_info	SessionServer/CountryInfo.h	/^	StrVec country_info;$/;"	m	class:CountryInfo
country_info	SessionServer/SessionServer.h	/^    CountryInfo country_info;$/;"	m	class:SessionService
country_list	base/Command.h	/^  stCountryInfo country_list[0]; \/\/ÊàòÂú∫ÂõΩÂÆ∂IDÊï∞ÁªÑ$/;"	m	struct:Cmd::stReturnDareCountryCmd
country_map	SessionServer/Session.h	/^    static std::map<DWORD,DWORD> country_map;$/;"	m	class:UserSession
country_map	SessionServer/SessionManager.cpp	/^std::map<DWORD,DWORD> UserSession::country_map;$/;"	m	class:UserSession
country_order	GatewayServer/CountryInfo.h	/^	DWORD country_order[100];$/;"	m	class:CountryInfo
countrydarebackto	ScenesServer/SceneManager.h	/^      DWORD countrydarebackto;$/;"	m	struct:SceneManager::MapInfo
countrydefbackto	ScenesServer/SceneManager.h	/^      DWORD countrydefbackto;$/;"	m	struct:SceneManager::MapInfo
countryid	GatewayServer/CountryInfo.h	/^		DWORD countryid;$/;"	m	struct:CountryInfo::Info
countryid	SessionServer/CountryInfo.h	/^		DWORD countryid;$/;"	m	struct:CountryInfo::Info
countryid	base/RecordCommand.h	/^		DWORD countryid;      \/\/\/ [ranqd] add ÊúçÂä°Âô®id$/;"	m	struct:Cmd::Record::t_Get_SelectInfo_GateRecord
countryid	base/RecordCommand.h	/^	  DWORD countryid;       \/\/ ÂõΩÂÆ∂ÁºñÂè∑ÔºåÁî®‰∫éËøîÂõûÂâ©‰ΩôËßíËâ≤‰ΩøÁî®$/;"	m	struct:Cmd::Record::t_DelChar_GateRecord
countryid	tmpcode/commond.h	/^    DWORD countryid;$/;"	m	struct:stZhongLiCityDist
countryindex	GatewayServer/GateUserManager.h	/^	CountryUserMap countryindex;$/;"	m	class:GateUserManager
countryinfo	base/Command.h	/^  Country_Info countryinfo[0];$/;"	m	struct:Cmd::stCountryInfoUserCmd
countryinfo	tmpcode/commond.h	/^	Country_Info countryinfo[0];$/;"	m	struct:stCountryInfoUserCmd
countryname	GatewayServer/CountryInfo.h	/^		std::string countryname;$/;"	m	struct:CountryInfo::Info
countryname	SessionServer/CountryInfo.h	/^		std::string countryname;$/;"	m	struct:CountryInfo::Info
cov	base/zDatabase.h	/^    std::vector<CarryObject> cov;$/;"	m	struct:NpcCarryObject
crazyPower	tmpcode/commond.h	/^			WORD crazyPower;                \/\/ ∑Ë…Ò÷Æ¡¶$/;"	m	struct:t_MainUserData::__anon220::__anon221
create	ScenesServer/Skill.cpp	/^zSkill *zSkill::create(SceneEntryPk *pEntry,DWORD id,DWORD level)$/;"	f	class:zSkill
create	ScenesServer/zCard.cpp	/^zCard *zCard::create(zCard *objsrc)$/;"	f	class:zCard
create	ScenesServer/zCard.cpp	/^zCard *zCard::create(zCardB *objbase,DWORD gameID,BYTE level)$/;"	f	class:zCard
create	ScenesServer/zObject.cpp	/^zObject *zObject::create(zObject *objsrc)$/;"	f	class:zObject
create	ScenesServer/zObject.cpp	/^zObject *zObject::create(zObjectB *objbase,DWORD num,BYTE level)$/;"	f	class:zObject
create	ScenesServer/zObject.h	/^  static zSceneObject *create(zObject *obj,const zRTime &ct)$/;"	f	struct:zSceneObject
createCharCmd	GatewayServer/GateUser.h	/^	Cmd::Record::t_CreateChar_GateRecord createCharCmd;$/;"	m	class:GateUser
createCountry	Robot/LoginClient.h	/^    DWORD createCountry;$/;"	m	class:LoginClient
createDBRecord	SessionServer/CSort.cpp	/^bool CSortM::createDBRecord()$/;"	f	class:CSortM
createGame	ScenesServer/ChallengeGameManager.cpp	/^DWORD ChallengeGameManager::createGame(Cmd::Session::t_CreateNewPkGame_SceneSession *cmd)$/;"	f	class:ChallengeGameManager
createRush	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::createRush()$/;"	f	class:SceneNpc
createScriptFromFile	ScenesServer/script.cpp	/^LuaScript* ScriptingSystemLua::createScriptFromFile( const std::string & rFile )$/;"	f	class:ScriptingSystemLua
createState	GatewayServer/GateUser.h	/^	void createState()$/;"	f	class:GateUser
createTempSkill	ScenesServer/Skill.cpp	/^zSkill *zSkill::createTempSkill(SceneEntryPk *pEntry,DWORD id,DWORD level)$/;"	f	class:zSkill
createTime	ScenesServer/ChallengeGame.h	/^	DWORD createTime;		    \/\/∂‘’Ω¥¥Ω® ±º‰¥¡	$/;"	m	class:ChallengeGame
createTime	base/Command.h	/^  DWORD createTime;$/;"	m	struct:Cmd::stAddListMail
createTime	base/SessionCommand.h	/^      DWORD createTime;$/;"	m	struct:Cmd::Session::mailInfo
createTime	base/zType.h	/^  DWORD createTime;$/;"	m	struct:t_NewLoginSession
createTime	tmpcode/commond.h	/^	DWORD createTime;\/\/∑¢–≈ ±º‰ KOK20080825$/;"	m	struct:stAddListMail
createVM	ScenesServer/script.cpp	/^LuaVM* ScriptingSystemLua::createVM()$/;"	f	class:ScriptingSystemLua
createid	ScenesServer/zCard.h	/^      QWORD createid;$/;"	m	union:zCard::__anon189
createid	ScenesServer/zObject.h	/^      QWORD createid;$/;"	m	union:zObject::__anon172
createid	base/SaveObject.h	/^	unsigned long long createid;$/;"	m	union:SaveObject::__anon49
createip	base/RecordCommand.h	/^      DWORD createip;        \/\/\/ ÂàõÂª∫ËßíËâ≤Êó∂ÁöÑip$/;"	m	struct:Cmd::Record::t_CreateChar_GateRecord
creater	ScenesServer/Chat.h	/^                zEntry creater;$/;"	m	class:Channel
createtime	ScenesServer/zCard.h	/^        DWORD createtime;$/;"	m	struct:zCard::__anon189::__anon190
createtime	ScenesServer/zObject.h	/^        DWORD createtime;$/;"	m	struct:zObject::__anon172::__anon173
createtime	SessionServer/Session.h	/^    time_t createtime;$/;"	m	class:Session
createtime	SessionServer/TempArchive.h	/^  zRTime createtime;$/;"	m	struct:TempArchive
createtime	base/CharBase.h	/^  DWORD createtime;      \/\/\/ ËßíËâ≤ÂàõÂª∫Êó∂Èó¥$/;"	m	struct:CharBase
createtime	base/SaveObject.h	/^	    DWORD createtime;$/;"	m	struct:SaveObject::__anon49::__anon50
createtime	base/SessionCommand.h	/^      time_t createtime;$/;"	m	struct:Cmd::Session::SessionObject
cri	base/Command.h	/^	WORD cri;               \/\/ÁàÜÂáª$/;"	m	struct:Cmd::t_PetData
cri	base/zDatabase.h	/^    DWORD   cri;        \/\/ ±©ª˜$/;"	m	struct:zNpcB
cri	tmpcode/commond.h	/^	WORD cri;               \/\/±¨ª˜$/;"	m	struct:t_PetData
criminalInfo	tmpcode/commond.h	/^	struct criminalInfo$/;"	s	struct:stRetCriminalListInfo
critical	tmpcode/commond.h	/^	BYTE    critical;               \/\/’˜Õæ (±©ª˜)$/;"	m	struct:TankData
crwlock	GatewayServer/GateUserManager.h	/^	zRWLock crwlock;	\/\/ΩÁ”ÚÀ˜“˝∂¡–¥À¯$/;"	m	class:GateUserManager
cryState	tmpcode/commond.h	/^        struct cryState{$/;"	s	struct:stCrystalAllInfoDataUserCmd
crystalPrice	base/zDatabase.h	/^    DWORD crystalPrice;$/;"	m	struct:zObjectB
csm	SessionServer/CSort.h	/^    static CSortM *csm;$/;"	m	class:CSortM
ct	FLServer/TimeTick.cpp	/^    const zTime &ct;$/;"	m	struct:LoginTimeout
ct	ScenesServer/zObject.h	/^  zRTime ct;$/;"	m	struct:zSceneObject
ctData	ScenesServer/SceneUser.h	/^    ChallengeTmpData ctData;$/;"	m	struct:SceneUser
ctv	ScenesServer/Scene.cpp	/^  const zRTime &ctv;$/;"	m	struct:AICallback
curAI	ScenesServer/SceneNpcAI.h	/^  t_NpcAIDefine curAI,oldAI;$/;"	m	class:NpcAIController
curHonorType	tmpcode/commond.h	/^    WORD curHonorType;\/\/0-µ±«∞≥∆∫≈¿‡–Õ$/;"	m	struct:kingAchievement
curLevel	tmpcode/commond.h	/^		DWORD curLevel;                 \/\/µ±«∞µ»º∂$/;"	m	struct:stRetUnionBuildInfo::__anon269
curLevel	tmpcode/commond.h	/^	DWORD curLevel;\/\/µ±«∞µ»º∂$/;"	m	struct:kingAchievement
curMagicManID	ScenesServer/SceneEntryPk.h	/^    DWORD curMagicManID;$/;"	m	struct:SceneEntryPk
curMagicManType	ScenesServer/SceneEntryPk.h	/^    DWORD curMagicManType;$/;"	m	struct:SceneEntryPk
curMaxID	base/zUniqueID.h	/^	T curMaxID;$/;"	m	class:zUniqueID
curNum	tmpcode/commond.h	/^    BYTE curNum;		\/\/µ±«∞»À ˝$/;"	m	struct:__anon355
curPhase	ScenesServer/SceneNpcAI.h	/^  DWORD curPhase;$/;"	m	class:NpcAIController
curPower	tmpcode/commond.h	/^    WORD curPower;          \/\/µ±«∞ÃÂ¡¶÷µ$/;"	m	struct:t_HorseData
curRevCmd	ScenesServer/Skill.h	/^    const Cmd::stAttackMagicUserCmd *curRevCmd;$/;"	m	struct:zSkill
curRevCmdLen	ScenesServer/Skill.h	/^    DWORD curRevCmdLen;$/;"	m	struct:zSkill
curTargetID	ScenesServer/SceneEntryPk.h	/^    DWORD curTargetID;$/;"	m	struct:SceneEntryPk
curTargetType	ScenesServer/SceneEntryPk.h	/^    DWORD curTargetType;$/;"	m	struct:SceneEntryPk
cur_protion	tmpcode/commond.h	/^		BYTE cur_protion; \/\/0-100;Ω®…Ë∑—’º±»¿˝$/;"	m	struct:stRtEarningInfoUnionCmd
cureType	tmpcode/commond.h	/^	BYTE  cureType;  \/\/ zhiliao∑Ω Ω  º˚…œ√Ê√∂æŸ:$/;"	m	struct:stReduceCityNpcReliveTime
currPtr	base/zSocket.h	/^	inline DWORD currPtr() const $/;"	f	class:ByteBuffer
currRoundEndTime	ScenesServer/ChallengeGame.h	/^	DWORD currRoundEndTime;		    \/\/±æªÿ∫œΩ· ¯ ±º‰$/;"	m	class:ChallengeGame
currRoundStartTime	ScenesServer/ChallengeGame.h	/^	DWORD currRoundStartTime;	    \/\/±æªÿ∫œø™ º ±º‰$/;"	m	class:ChallengeGame
currentCleanDownPerHour	tmpcode/commond.h	/^	DWORD	currentCleanDownPerHour;        \/\/µ±«∞ µº µƒ«ÂΩ‡œ¬Ωµ÷µ$/;"	m	struct:HomeMapData
currentCleanTaskNum	tmpcode/commond.h	/^	BYTE	currentCleanTaskNum;							\/\/ ◊‹µƒ«ÂΩ‡»ŒŒÒ ˝¡ø$/;"	m	struct:stHomeItem
currentCleanTaskNum	tmpcode/commond.h	/^	DWORD	currentCleanTaskNum;            \/\/µ±«∞ø…Ω”µƒ«ÂΩ‡»ŒŒÒ$/;"	m	struct:HomeMapData
currentExp	tmpcode/commond.h	/^	QWORD currentExp;\/\/µ±«∞æ≠—È÷µ$/;"	m	struct:stSetOfflineExpUserCmd
currentHire	tmpcode/commond.h	/^	DWORD currentHire;              \/\/◊‚Ω$/;"	m	struct:stUnionResidentHireList
currentSpiritRePerHour	tmpcode/commond.h	/^	DWORD	currentSpiritRePerHour;         \/\/µ±«∞µƒ¡È∆¯÷µ£®ª˘±æ÷µ ∫Õ «ÂΩ‡“ÚÀÿµƒº”ºı÷µ£©$/;"	m	struct:HomeMapData
currentTime	BillServer/TimeTick.cpp	/^zRTime BillTimeTick::currentTime;$/;"	m	class:BillTimeTick
currentTime	BillServer/TimeTick.h	/^    static zRTime currentTime;$/;"	m	class:BillTimeTick
currentTime	GatewayServer/TimeTick.cpp	/^zRTime GatewayTimeTick::currentTime;$/;"	m	class:GatewayTimeTick
currentTime	GatewayServer/TimeTick.h	/^	static zRTime currentTime;$/;"	m	class:GatewayTimeTick
currentTime	Robot/TimeTick.cpp	/^zRTime ClientTimeTick::currentTime;$/;"	m	class:ClientTimeTick
currentTime	Robot/TimeTick.h	/^	static zRTime currentTime;$/;"	m	class:ClientTimeTick
currentTime	ScenesServer/TimeTick.cpp	/^zRTime SceneTimeTick::currentTime;$/;"	m	class:SceneTimeTick
currentTime	ScenesServer/TimeTick.h	/^    static zRTime currentTime;$/;"	m	class:SceneTimeTick
currentTime	SessionServer/TimeTick.cpp	/^zRTime SessionTimeTick::currentTime;$/;"	m	class:SessionTimeTick
currentTime	SessionServer/TimeTick.h	/^    static zRTime currentTime;$/;"	m	class:SessionTimeTick
currentTime	SuperServer/TimeTick.cpp	/^zRTime SuperTimeTick::currentTime;$/;"	m	class:SuperTimeTick
currentTime	SuperServer/TimeTick.h	/^    static zRTime currentTime;$/;"	m	class:SuperTimeTick
current_user	ScenesServer/script_func.cpp	/^SceneUser* current_user = NULL;$/;"	v
d1	base/Command.h	/^  DWORD d1;$/;"	m	struct:Cmd::t_MainUserData
d2	base/Command.h	/^  DWORD d2;$/;"	m	struct:Cmd::t_MainUserData
d3	base/Command.h	/^  DWORD d3;$/;"	m	struct:Cmd::t_MainUserData
d4	base/Command.h	/^  DWORD d4;$/;"	m	struct:Cmd::t_MainUserData
d5	base/Command.h	/^  DWORD d5;$/;"	m	struct:Cmd::t_MainUserData
dCountry	tmpcode/commond.h	/^	BYTE dCountry;\/\/¥´ÀÕƒø±Íπ˙º“$/;"	m	struct:req_TransmitHouseUserCmd
dMapID	tmpcode/commond.h	/^	DWORD dMapID;\/\/¥´ÀÕƒø±ÍµÿÕºID$/;"	m	struct:req_TransmitHouseUserCmd
dailyFee	tmpcode/commond.h	/^	DWORD dailyFee; \/\/√ø»’Œ¨ª§∑—”√$/;"	m	struct:stRetUnionInfo
dam	tmpcode/commond.h	/^	WORD dam;           \/\/…À∫¶$/;"	m	struct:FightDescrip
damItem	tmpcode/commond.h	/^	BYTE damItem;       \/\/…À∫¶¿‡–Õ–Ú∫≈$/;"	m	struct:FightDescrip
damage	ScenesServer/zObject.h	/^  BYTE damage;        \/\/ Â¢ûÂä†‰º§ÂÆ≥ÂÄºxÔºÖ$/;"	m	class:Equips
damage	base/Card.h	/^	DWORD damage;		    \/\/π•ª˜¡¶$/;"	m	struct:t_Card
damage	base/Object.h	/^	BYTE damage;				\/\/ ‘ˆº”…À∫¶÷µx£•from …Ò •◊∞±∏±Ì$/;"	m	struct:t_Object
damage	base/zDatabase.h	/^    DWORD  damage;        \/\/ ◊Ó–°π•ª˜¡¶$/;"	m	struct:zNpcB
damage	base/zDatabase.h	/^    DWORD damage;	    \/\/π•ª˜¡¶$/;"	m	struct:CardBase
damage	base/zDatabase.h	/^    DWORD damage;	    \/\/π•ª˜¡¶$/;"	m	struct:zCardB
damage_s3000	base/Card.h	/^    BYTE damage_s3000;$/;"	m	struct:t_CardPK
damage_s3001	base/Card.h	/^    BYTE damage_s3001;$/;"	m	struct:t_CardPK
damage_s3002	base/Card.h	/^    BYTE damage_s3002;$/;"	m	struct:t_CardPK
damage_s3003	base/Card.h	/^    BYTE damage_s3003;$/;"	m	struct:t_CardPK
damagebonus	ScenesServer/ScenePk.h	/^      SWORD  damagebonus;        \/\/\/ ÊäÄËÉΩ‰º§ÂÆ≥Âä†Êàê$/;"	m	struct:PkValue::__anon159::__anon160
damagebonus	ScenesServer/zObject.h	/^  BYTE damagebonus;      \/\/ ‰º§ÂÆ≥Âä†Êàê$/;"	m	class:Equips
damagebonus	base/Object.h	/^	BYTE damagebonus;			\/\/ …À∫¶º”≥…x% from µ¿æﬂª˘±æ±Ì$/;"	m	struct:t_Object
damagebonus	base/zDatabase.h	/^    BYTE damagebonus;			\/\/ …À∫¶º”≥…x% from µ¿æﬂª˘±æ±Ì$/;"	m	struct:zObjectB
damtohpper	ScenesServer/SceneEntryPk.h	/^    BYTE damtohpper;  \/\/\/ ËßíËâ≤ÁöÑ‰º§ÂÆ≥ËΩ¨ÂåñÊàêÁîüÂëΩÂÄºÁöÑÂá†Áéá;$/;"	m	struct:SceneEntryPk
damtohpvalper	ScenesServer/SceneEntryPk.h	/^    BYTE damtohpvalper; \/\/\/ ËßíËâ≤ÁöÑ‰º§ÂÆ≥ËΩ¨ÂåñÊàêÁîüÂëΩÂÄºÁöÑÁôæÂàÜÊØî$/;"	m	struct:SceneEntryPk
dance	tmpcode/commond.h	/^	WORD dance;$/;"	m	struct:stStateDancerUserCmd
danceCost	tmpcode/commond.h	/^	DWORD danceCost;                \/\/\/ ŒËµ∏∑—”√$/;"	m	struct:stSetDancerProfileUserCmd
danceData	tmpcode/commond.h	/^        t_MapDanceData danceData[0];\/\/Ã¯ŒË ˝æ›    $/;"	m	union:stMapDataMapScreenUserCmd::__anon225
danceFee	tmpcode/commond.h	/^	DWORD danceFee;$/;"	m	struct:stDancerStateUserCmd
danceKind	tmpcode/commond.h	/^	BYTE danceKind;$/;"	m	struct:stInviteDanceUserCmd
danceKind	tmpcode/commond.h	/^	WORD danceKind;                 \/\/\/ ŒËµƒ÷÷¿‡$/;"	m	struct:stSetDancerProfileUserCmd
danceNO	tmpcode/commond.h	/^		DWORD danceNO;        \/\/Ã¯ŒËŒË«˙±‡∫≈£∫πÃ∂®ŒË«˙±‡∫≈£¨µ•»À◊‘∂®“ÂŒË«˙1£¨µ•»À◊‘∂®“ÂŒË«˙2£¨£®À´»À◊‘∂®“ÂŒË«˙1£¨À´»À◊‘∂®“ÂŒË«˙2....±£¡Ù£©$/;"	m	struct:stAnswerDance
danceNO	tmpcode/commond.h	/^        DWORD     danceNO;   \/\/Ã¯ŒËŒË«˙±‡∫≈£∫πÃ∂®ŒË«˙±‡∫≈£¨µ•»À◊‘∂®“ÂŒË«˙1£¨µ•»À◊‘∂®“ÂŒË«˙2£¨£®À´»À◊‘∂®“ÂŒË«˙1£¨À´»À◊‘∂®“ÂŒË«˙2....±£¡Ù£©$/;"	m	struct:t_MapDanceData
danceNO	tmpcode/commond.h	/^        DWORD danceNO;           \/\/Ã¯ŒËŒË«˙±‡∫≈£∫πÃ∂®ŒË«˙±‡∫≈£¨µ•»À◊‘∂®“ÂŒË«˙1£¨µ•»À◊‘∂®“ÂŒË«˙2£¨£®À´»À◊‘∂®“ÂŒË«˙1£¨À´»À◊‘∂®“ÂŒË«˙2....±£¡Ù£©$/;"	m	struct:stAskDance
danceNO	tmpcode/commond.h	/^        DWORD danceNO;\/\/Ã¯ŒËŒË«˙±‡∫≈£∫πÃ∂®ŒË«˙±‡∫≈£¨µ•»À◊‘∂®“ÂŒË«˙1£¨µ•»À◊‘∂®“ÂŒË«˙2£¨£®À´»À◊‘∂®“ÂŒË«˙1£¨À´»À◊‘∂®“ÂŒË«˙2....±£¡Ù£©$/;"	m	struct:stSaveDance
danceStep	tmpcode/commond.h	/^		char  danceStep[MAX_NAMESIZE+1];       \/\/◊‘º∫±‡º≠ŒË≤Ω£∫µ•»À◊‘∂®“ÂŒË«˙1£¨µ•»À◊‘∂®“ÂŒË«˙2£¨£®À´»À◊‘∂®“ÂŒË«˙1£¨À´»À◊‘∂®“ÂŒË«˙2....±£¡Ù£©$/;"	m	struct:stAskDance
danceStep	tmpcode/commond.h	/^		char  danceStep[MAX_NAMESIZE+1];    \/\/◊‘º∫±‡º≠ŒË≤Ω£∫µ•»À◊‘∂®“ÂŒË«˙1£¨µ•»À◊‘∂®“ÂŒË«˙2£¨£®À´»À◊‘∂®“ÂŒË«˙1£¨À´»À◊‘∂®“ÂŒË«˙2....±£¡Ù£©$/;"	m	struct:stAnswerDance
danceStep	tmpcode/commond.h	/^        char      danceStep[MAX_NAMESIZE+1];   \/\/◊‘º∫±‡º≠ŒË≤Ω£∫µ•»À◊‘∂®“ÂŒË«˙1£¨µ•»À◊‘∂®“ÂŒË«˙2£¨£®À´»À◊‘∂®“ÂŒË«˙1£¨À´»À◊‘∂®“ÂŒË«˙2....±£¡Ù£©$/;"	m	struct:t_MapDanceData
danceStep	tmpcode/commond.h	/^        char  danceStep[MAX_NAMESIZE+1];\/\/◊‘º∫±‡º≠ŒË≤Ω£∫µ•»À◊‘∂®“ÂŒË«˙1£¨µ•»À◊‘∂®“ÂŒË«˙2£¨£®À´»À◊‘∂®“ÂŒË«˙1£¨À´»À◊‘∂®“ÂŒË«˙2....±£¡Ù£©$/;"	m	struct:stSaveDance
dareTime	base/Command.h	/^  DWORD  dareTime;      \/\/ ÂØπÊàòÊó∂Èó¥$/;"	m	struct:Cmd::stDareResult
dareTime	tmpcode/commond.h	/^	DWORD dareTime;$/;"	m	struct:UnionCityDareInfo
dare_active_time	SessionServer/SessionServer.cpp	/^DWORD dare_active_time = 0;$/;"	v
dare_list	base/Command.h	/^  struct stDareList dare_list[0];$/;"	m	struct:Cmd::stSendDareList	typeref:struct:Cmd::stSendDareList::stDareList
dare_need_gold	SessionServer/SessionServer.cpp	/^int dare_need_gold = 0;$/;"	v
dare_need_gold_sept	SessionServer/SessionServer.cpp	/^int dare_need_gold_sept = 0;$/;"	v
dare_plan	base/Command.h	/^  stDarePlan dare_plan[0];$/;"	m	struct:Cmd::stReturnDareRecordPlanCmd
dare_ready_time	SessionServer/SessionServer.cpp	/^DWORD dare_ready_time = 0;$/;"	v
dare_result	base/Command.h	/^  stDareResult dare_result[0];$/;"	m	struct:Cmd::stReturnDareRecordResultCmd
dare_stat	base/Command.h	/^  stDareStat dare_stat[0];$/;"	m	struct:Cmd::stReturnDareRecordStatCmd
dare_winner_gold	SessionServer/SessionServer.cpp	/^int dare_winner_gold = 0;$/;"	v
dare_winner_gold_sept	SessionServer/SessionServer.cpp	/^int dare_winner_gold_sept = 0;$/;"	v
data	ScenesServer/Skill.h	/^    t_Skill data;$/;"	m	struct:zSkill
data	ScenesServer/zCard.h	/^    t_Card data;$/;"	m	struct:zCard
data	ScenesServer/zObject.h	/^    t_Object data;$/;"	m	struct:zObject
data	SessionServer/TempArchive.h	/^  char data[0];$/;"	m	struct:TempArchive
data	base/BattleUserCmd.h	/^	zone_info data[0];$/;"	m	struct:Cmd::stRtnZoneList
data	base/BillCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Bill::t_Bill_ForwardBill
data	base/BillCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Bill::t_Bill_ForwardBillToScene
data	base/BillCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Bill::t_Bill_ForwardUser
data	base/BillCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Bill::t_Scene_ForwardBill
data	base/BroadCastCommand.h	/^      char data[0];$/;"	m	struct:Cmd::BroadCast::t_BroadcastMessage
data	base/CharBase.h	/^  char     data[0];$/;"	m	struct:CharSave
data	base/CharBase.h	/^  char data[0];$/;"	m	struct:TempArchiveMember
data	base/CharBase.h	/^  unsigned char data[0];$/;"	m	struct:BinaryArchiveMember
data	base/Command.h	/^	t_MapNpcDataPos data;$/;"	m	struct:Cmd::stAddMapNpcAndPosMapScreenUserCmd
data	base/Command.h	/^        }data[0];$/;"	m	struct:Cmd::t_GetSortList	typeref:struct:Cmd::t_GetSortList::__anon127
data	base/Command.h	/^    ListData data[0];$/;"	m	struct:Cmd::t_GetHeroList
data	base/Command.h	/^    t_MainUserData data;$/;"	m	struct:Cmd::stMainUserDataUserCmd
data	base/Command.h	/^    t_MapBuildingData data;$/;"	m	struct:Cmd::stAddMapBuildingMapScreenUserCmd
data	base/Command.h	/^    t_MapNpcData data;$/;"	m	struct:Cmd::stAddMapNpcMapScreenUserCmd
data	base/Command.h	/^    t_MapNpcDataPos data;$/;"	m	struct:Cmd::stAddMapNpcPetMapScreenUserCmd
data	base/Command.h	/^    t_MapNpcDataPosState data;$/;"	m	struct:Cmd::stAddMapNpcAndPosMapScreenStateUserCmd
data	base/Command.h	/^    t_MapNpcDataPosState data;$/;"	m	struct:Cmd::stAddMapNpcPetMapScreenStateUserCmd
data	base/Command.h	/^    t_MapNpcDataState data;$/;"	m	struct:Cmd::stAddMapNpcMapScreenStateUserCmd
data	base/Command.h	/^    t_MapObjectData data;$/;"	m	struct:Cmd::stAddMapObjectMapScreenUserCmd
data	base/Command.h	/^    t_MapUserData data;$/;"	m	struct:Cmd::stAddUserMapScreenUserCmd
data	base/Command.h	/^    t_MapUserDataPos data;$/;"	m	struct:Cmd::stAddUserAndPosMapScreenUserCmd
data	base/Command.h	/^    t_MapUserDataPosState data;$/;"	m	struct:Cmd::stAddUserAndPosMapScreenStateUserCmd
data	base/Command.h	/^    t_MapUserDataState data;$/;"	m	struct:Cmd::stAddUserMapScreenStateUserCmd
data	base/Command.h	/^  BYTE data[0];$/;"	m	struct:Cmd::stJpegPassportUserCmd
data	base/Command.h	/^  BYTE data[0];$/;"	m	struct:Cmd::stUserInfoUserCmd
data	base/Command.h	/^  _KingListItem data[0];$/;"	m	struct:Cmd::stRtnKingListCmd
data	base/Command.h	/^  stArmyBaseInfo data[0];$/;"	m	struct:Cmd::stRtnArmyListUserCmd
data	base/Command.h	/^  stCaptainBase data[0];$/;"	m	struct:Cmd::stRtnArmySpecUserCmd
data	base/Command.h	/^  stCountryStar data[0];$/;"	m	struct:Cmd::stUpdateCountryStarCmd
data	base/Command.h	/^  stRecommendItem data[0];$/;"	m	struct:Cmd::stRtnRecommendBountyUserCmd
data	base/Command.h	/^  stSeptRecord data[0];$/;"	m	struct:Cmd::stListSeptCmd
data	base/Command.h	/^  stSeptSortInfo data[0];$/;"	m	struct:Cmd::stRtnSeptSort
data	base/Command.h	/^  stSeptVoteRecord data[0];$/;"	m	struct:Cmd::stVoteListSeptCmd
data	base/Command.h	/^  stSystemSettings data;$/;"	m	struct:Cmd::stSystemSettingsUserCmd
data	base/Command.h	/^  stTeamMemberData data;$/;"	m	struct:Cmd::stAddTeamMemberUserCmd
data	base/Command.h	/^  stTechItem data[0];$/;"	m	struct:Cmd::stRtnTechUserCmd
data	base/Command.h	/^  stUnionRecord data[0];$/;"	m	struct:Cmd::stListUnionCmd
data	base/Command.h	/^  stUnionSortInfo data[0];$/;"	m	struct:Cmd::stRtnUnionSort
data	base/Command.h	/^  stUnionVoteRecord data[0];$/;"	m	struct:Cmd::stVoteListUnionCmd
data	base/Command.h	/^  stVoteItem data[0];$/;"	m	struct:Cmd::stReturnVoteListUserCmd
data	base/Command.h	/^  stWaitGenItem data[0];$/;"	m	struct:Cmd::stRtnWaitGenUserCmd
data	base/Command.h	/^  stWaitOfficialItem data[0];$/;"	m	struct:Cmd::stRtnWaitOfficialUserCmd
data	base/Command.h	/^  t_CartoonData data;$/;"	m	struct:Cmd::stAddCartoonCmd
data	base/Command.h	/^  t_HorseData data;$/;"	m	struct:Cmd::stHorseDataPetCmd
data	base/Command.h	/^  t_HorseData data;$/;"	m	struct:Cmd::stSelectReturnHorsePropertyUserCmd
data	base/Command.h	/^  t_PetData data;$/;"	m	struct:Cmd::stRefreshDataPetCmd
data	base/EncDec/EncDec.h	/^	RC5_32_INT data[2*(RC5_16_ROUNDS+1)];$/;"	m	struct:rc5_key_st
data	base/EncDec/myrc5.h	/^	RC5_32_INT data[2*(RC5_16_ROUNDS+1)];$/;"	m	struct:rc5_key_st
data	base/MiniCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Mini::t_Mini_ForwardMiniToScene
data	base/MiniCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Mini::t_Mini_ForwardUser
data	base/MiniCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Mini::t_Mini_UserForwardMini
data	base/MiniCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Mini::t_Scene_ForwardMini
data	base/MsgDelegate.h	/^	char data[MSG_MF_LEN];$/;"	m	class:MsgDelegate
data	base/RecordCommand.h	/^      char        data[0];        \/\/\/Â≠òÊ°£ÁöÑ‰∫åËøõÂà∂Êï∞ÊçÆ$/;"	m	struct:Cmd::Record::t_UserInfo_SceneRecord
data	base/RecordCommand.h	/^      char        data[0];        \/\/\/Â≠òÊ°£ÁöÑ‰∫åËøõÂà∂Êï∞ÊçÆ$/;"	m	struct:Cmd::Record::t_WriteUser_SceneRecord
data	base/RolechangeCommand.h	/^	char data[0];	    \/\/∞¸∫¨“ª∏ˆt_WriteUser_SceneRecordΩ·ππ$/;"	m	struct:Cmd::Rolechange::t_sendUserToZone
data	base/RolechangeCommand.h	/^	t_zone_info data[0];$/;"	m	struct:Cmd::Rolechange::t_Rtn_ZoneList
data	base/SceneCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Scene::t_Bill_ForwardScene
data	base/SceneCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Scene::t_Nine_ExceptMe_ForwardScene
data	base/SceneCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Scene::t_Nine_ForwardScene
data	base/SceneCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Scene::t_Nine_dir_ForwardScene
data	base/SceneCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Scene::t_Nine_rdir_ForwardScene
data	base/SceneCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Scene::t_Scene_ForwardScene
data	base/SceneCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Scene::t_Scene_ForwardSceneToBill
data	base/SceneCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Scene::t_Scene_ForwardSceneUserToBill
data	base/SceneCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Scene::t_User_ForwardMap
data	base/SceneCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Scene::t_User_ForwardScene
data	base/SessionCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Session::t_Session_ForwardCountry
data	base/SessionCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Session::t_Session_ForwardUser
data	base/SessionCommand.h	/^      BYTE  data[0];$/;"	m	struct:Cmd::Session::t_Session_ForwardWorld
data	base/SessionCommand.h	/^      Cmd::t_CartoonData data;$/;"	m	struct:Cmd::Session::t_addCartoon_SceneSession
data	base/SessionCommand.h	/^      Cmd::t_CartoonData data;$/;"	m	struct:Cmd::Session::t_adoptCartoon_SceneSession
data	base/SessionCommand.h	/^      Cmd::t_CartoonData data;$/;"	m	struct:Cmd::Session::t_buyCartoon_SceneSession
data	base/SessionCommand.h	/^      Cmd::t_CartoonData data;$/;"	m	struct:Cmd::Session::t_saveCartoon_SceneSession
data	base/SessionCommand.h	/^      _allyItem data[0];$/;"	m	struct:Cmd::Session::t_updateAlly_SceneSession
data	base/SessionCommand.h	/^      _techItem data[14];$/;"	m	struct:Cmd::Session::t_updateTech_SceneSession
data	base/SessionCommand.h	/^      char data[0];$/;"	m	struct:Cmd::Session::t_ReadUser_SceneArchive
data	base/SessionCommand.h	/^      char data[0];$/;"	m	struct:Cmd::Session::t_WriteUser_SceneArchive
data	base/ZlibObject.h	/^    unsigned char data[0];$/;"	m	struct:ZlibObject
data	tmpcode/commond.h	/^		t_MapNpcDataPos data;$/;"	m	struct:stMapBuildMapScreenUserCmd::stBuildData
data	tmpcode/commond.h	/^		t_MapUserDataPos data[0];\/\/ÕÊº“Ω«…´$/;"	m	union:stMapDataMapScreenUserCmd::__anon225
data	tmpcode/commond.h	/^		t_MapUserDataPosState data;$/;"	m	struct:stAddUserAndPosMapScreenStateUserCmd
data	tmpcode/commond.h	/^	AwardInfo data;$/;"	m	struct:stSendOneAchivementAwardInfoUserCmd
data	tmpcode/commond.h	/^	BYTE data[0];  \/\/ √Ë ˆ+µ˜≤Èµƒƒ⁄»›, ◊Ó¥ÛKB, ŒﬁΩ·Œ≤º∞∑÷∏Ù∑˚$/;"	m	struct:stRetSurveyContentUserCmd
data	tmpcode/commond.h	/^	BYTE data[0];  \/\/  ˝æ›$/;"	m	struct:stBigEventUserCmd
data	tmpcode/commond.h	/^	BYTE data[0];$/;"	m	struct:stServerReturnLoginFailedCmd
data	tmpcode/commond.h	/^	BYTE data[32];$/;"	m	struct:stRetVoteRecordDragonUserCmd
data	tmpcode/commond.h	/^	FarmNotice data[0];$/;"	m	struct:stRetFarmNoticeUserCmd
data	tmpcode/commond.h	/^	FightDescrip data[0];$/;"	m	struct:stDetailFightContentUserCmd
data	tmpcode/commond.h	/^	GuardSortData data[7];$/;"	m	struct:stReturnCityGuardSortUserCmd
data	tmpcode/commond.h	/^	HomeMapData			data;$/;"	m	struct:stMapDataHomeUserCmd
data	tmpcode/commond.h	/^	LTQRecord data[0];$/;"	m	struct:stQueryRetLTQUserCmd
data	tmpcode/commond.h	/^	LTQUserData data;$/;"	m	struct:stNotifyJoinLTQUserCmd
data	tmpcode/commond.h	/^	LingQiAllData data;$/;"	m	struct:stDataLingQiUserCmd
data	tmpcode/commond.h	/^	MasterPerformInfo data[0];      \/\/\/ ◊Â≥§º®–ßµƒ–≈œ¢$/;"	m	struct:stRetMasterPerformInfoCmd
data	tmpcode/commond.h	/^	StoreNotice data[0];$/;"	m	struct:stRetSeptStoreNoticeSeptCmd
data	tmpcode/commond.h	/^	TankData data;                   \/\/“—∏ƒ◊∞µƒ’Ω≥µ$/;"	m	struct:stRebuildTankCmd
data	tmpcode/commond.h	/^	TankData data;$/;"	m	struct:stRideTankDataTankCmd
data	tmpcode/commond.h	/^	_UnionAllyInfo data[0];$/;"	m	struct:stRtnCancelUnionAllyInfo
data	tmpcode/commond.h	/^	_UnionAllyInfo data[0];$/;"	m	struct:stRtnUnionAllyInfo
data	tmpcode/commond.h	/^	fishInfo data[0];$/;"	m	struct:stInitFishUserCmd
data	tmpcode/commond.h	/^	npcState data;$/;"	m	struct:stAddMapNpcAndPosMapScreenStateUserCmd
data	tmpcode/commond.h	/^	stGRecommendAward data[0];$/;"	m	struct:stRtnGRecommendBountyUserCmd
data	tmpcode/commond.h	/^	stGRecommendItem  data[0];$/;"	m	struct:stRtnGRecommendRelationUserCmd
data	tmpcode/commond.h	/^	stLandItem data;$/;"	m	struct:stRetLandItemUserCmd
data	tmpcode/commond.h	/^	stReturnerItem  data[0];$/;"	m	struct:stRtnSponserAwardCallBackUserCmd
data	tmpcode/commond.h	/^	stSeptSortInfo data[0];$/;"	m	struct:stRtnSeptSort
data	tmpcode/commond.h	/^	stSystemSettings data;$/;"	m	struct:stSystemSettingsUserCmd
data	tmpcode/commond.h	/^	stTeamMemberData data;$/;"	m	struct:stAddTeamMemberUserCmd
data	tmpcode/commond.h	/^	stUnionSortInfo data[0];$/;"	m	struct:stRtnUnionSort
data	tmpcode/commond.h	/^	stUserPerformInfo data[0];      \/\/\/ ◊Â≥§≥…æÕµƒ–≈œ¢$/;"	m	struct:stRetUserPerformInfoCmd
data	tmpcode/commond.h	/^	struct t_HorseData data;        \/\/¬Ìæ«÷–µƒ¬Ìµƒ ˝æ›$/;"	m	struct:t_Stable	typeref:struct:t_Stable::t_HorseData
data	tmpcode/commond.h	/^	t_MainUserData data;$/;"	m	struct:stMainUserDataUserCmd
data	tmpcode/commond.h	/^	t_MapNpcDataPos data;$/;"	m	struct:stAddMapBuildAndPosMapScreenUserCmd
data	tmpcode/commond.h	/^	t_MapNpcDataPos data;$/;"	m	struct:stAddMapNpcAndPosMapScreenUserCmd
data	tmpcode/commond.h	/^	t_MapObjectData data;           $/;"	m	struct:stAddMapObjectMapScreenUserCmd
data	tmpcode/commond.h	/^	t_Object data;  \/\/µ¿æﬂ ˝æ›$/;"	m	struct:boxObject
data	tmpcode/commond.h	/^	t_PetData data;      $/;"	m	struct:stRefreshDataPetCmd
data	tmpcode/commond.h	/^	t_Stable data[0];$/;"	m	struct:stStableDataCmd
data	tmpcode/commond.h	/^	} data[0];$/;"	m	struct:stReturnUserEmotionSort	typeref:struct:stReturnUserEmotionSort::__anon350
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stForceRelationDataUserCmd	typeref:struct:stForceRelationDataUserCmd::stForceInfo
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stMapBuildMapScreenUserCmd	typeref:struct:stMapBuildMapScreenUserCmd::stBuildData
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetBetInChallengeDragonUserCmd	typeref:struct:stRetBetInChallengeDragonUserCmd::RetBetInfo
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetCriminalApplyInfo	typeref:struct:stRetCriminalApplyInfo::applyInfo
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetCriminalListInfo	typeref:struct:stRetCriminalListInfo::criminalInfo
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetFarmInfoUserCmd	typeref:struct:stRetFarmInfoUserCmd::stBriefLand
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetFriendDecayHouseUserCmd	typeref:struct:stRetFriendDecayHouseUserCmd::__anon379
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetKillNumsListZhenxuanUserCmd	typeref:struct:stRetKillNumsListZhenxuanUserCmd::KillData
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetPlayerListZhenxuanUserCmd	typeref:struct:stRetPlayerListZhenxuanUserCmd::PlayerInfo
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetPointListZhenxuanUserCmd	typeref:struct:stRetPointListZhenxuanUserCmd::PointData
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetRecallMasterInfo	typeref:struct:stRetRecallMasterInfo::voteInfo
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetSeptAvatarInfo	typeref:struct:stRetSeptAvatarInfo::stAvatarInfo
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetSeqKillListZhenxuanUserCmd	typeref:struct:stRetSeqKillListZhenxuanUserCmd::SeqKillData
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetTrafficInfoUserCmd	typeref:struct:stRetTrafficInfoUserCmd::stTrafficInfo
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetUnionBuildInfo	typeref:struct:stRetUnionBuildInfo::__anon269
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stRetUnionInfo	typeref:struct:stRetUnionInfo::__anon271
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stSendScoreSeptPopoUserCmd	typeref:struct:stSendScoreSeptPopoUserCmd::stPopoInfo
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:stUpdateScoreSeptPopoUserCmd	typeref:struct:stUpdateScoreSeptPopoUserCmd::stPopoScore
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:t_ReturnHistory	typeref:struct:t_ReturnHistory::__anon245
data	tmpcode/commond.h	/^	}data[0];$/;"	m	struct:t_ReturnThisWeek	typeref:struct:t_ReturnThisWeek::__anon244
data	tmpcode/commond.h	/^	}data[32];$/;"	m	struct:stRet32AttentionDragonUserCmd	typeref:struct:stRet32AttentionDragonUserCmd::__anon375
data	tmpcode/commond.h	/^	}data[32];$/;"	m	struct:stRet32NameListUserCmd	typeref:struct:stRet32NameListUserCmd::__anon373
data	tmpcode/commond.h	/^                DWORD data[0];$/;"	m	union:stClientKOKOption::__anon234
data	tmpcode/commond.h	/^        DWORD data;\/\/ƒ⁄»›£∫0.¡ƒÃÏ∆µµ¿ø™πÿ£¨≥ı ºªØ0xffff£ª1.∏ˆ»À…Ë∂®ø™πÿ, ≥ı ºªØ0x7f0$/;"	m	struct:stServerKOKOption
data	tmpcode/commond.h	/^        MercenaryReplayCountryList data[0];\/\/∑˚∫œ…Í«Îµƒπ˙º“¡–±Ì$/;"	m	struct:stSendCountryListMercenaryCountryCmd
data	tmpcode/commond.h	/^        MerceryList data[0];\/\/πÕ”∂æ¸¡–±Ì$/;"	m	struct:stSendMercenaryListCountryCmd
data	tmpcode/commond.h	/^        ReplayMerceryList data[0];\/\/…Í«ÎπÕ”∂æ¸¡–±Ì$/;"	m	struct:stSendReplayMerceryListCountryCmd
data	tmpcode/commond.h	/^        stNameCard data;$/;"	m	struct:stNameCardPropertyUserCmd
data	tmpcode/commond.h	/^        t_DragonData data;$/;"	m	struct:stDragonDataUserCmd
data	tmpcode/commond.h	/^        t_DragonData data;$/;"	m	struct:stRetWatchDragonDataUserCmd
data	tmpcode/commond.h	/^        t_HorseData data;        \/\/¬Ì∆• ˝æ›$/;"	m	struct:rtHorseDataCmd
data	tmpcode/commond.h	/^        }data[0];$/;"	m	struct:t_GetSortList	typeref:struct:t_GetSortList::__anon241
data	tmpcode/commond.h	/^    AchievementItem data;$/;"	m	struct:rtAchievementItemCmd
data	tmpcode/commond.h	/^    DecayNewLingQi data;$/;"	m	struct:stDataDecayedLingQiUserCmd
data	tmpcode/commond.h	/^    LingQiWatchData data;$/;"	m	struct:stWatchLingQiUserCmd
data	tmpcode/commond.h	/^    ListData data[0];$/;"	m	struct:t_GetHeroList
data	tmpcode/commond.h	/^    kingAchievement data;$/;"	m	struct:rtAchievementCmd
data	tmpcode/commond.h	/^    suitElement data[20]; \/\/ÕÚÕı”–19∏ˆ∏Ò◊”$/;"	m	struct:OneSuit
data	tmpcode/commond.h	/^    suitElement data[5];$/;"	m	struct:OneHorseSuit
data	tmpcode/commond.h	/^    t_HorseData data;                                                                               $/;"	m	struct:stSelectReturnHorsePropertyUserCmd
data	tmpcode/commond.h	/^    t_HorseData data;$/;"	m	struct:stHorseDataPetCmd
data	tmpcode/commond.h	/^    t_MapNpcDataPos data;   $/;"	m	struct:stAddMapNpcPetMapScreenUserCmd
data	tmpcode/commond.h	/^    }data[0];  $/;"	m	struct:stRetTankListCmd	typeref:struct:stRetTankListCmd::__anon301
data	tmpcode/commond.h	/^    }data[0];$/;"	m	struct:stNofityBetResultInChallengeDragonUserCmd	typeref:struct:stNofityBetResultInChallengeDragonUserCmd::WinnerInfo
data	tmpcode/commond.h	/^   BYTE   data[0];$/;"	m	struct:stUserInfoUserCmd
dataList	tmpcode/commond.h	/^	stDefenceList dataList[0];\/**<∑¿”˘’ﬂ¡–±Ì*\/$/;"	m	struct:stToDefAttackMagicUserCmd
dataList	tmpcode/commond.h	/^	stDefenceList dataList[0];\/**<∑¿”˘’ﬂ¡–±Ì*\/$/;"	m	struct:stToNineAttackMagicUserCmd
dataList	tmpcode/commond.h	/^	stDefenceListToAtt dataList[0];\/**<∑¿”˘’ﬂ¡–±Ì*\/$/;"	m	struct:stToAttAttackMagicUserCmd
dataSize	base/CharBase.h	/^  DWORD    dataSize;$/;"	m	struct:CharSave
dataSize	base/RecordCommand.h	/^      DWORD      dataSize;        \/\/\/Â≠òÊ°£‰∫åËøõÂà∂ÁöÑÂ§ßÂ∞è$/;"	m	struct:Cmd::Record::t_UserInfo_SceneRecord
dataSize	base/RecordCommand.h	/^      DWORD      dataSize;        \/\/\/Â≠òÊ°£‰∫åËøõÂà∂ÁöÑÂ§ßÂ∞è$/;"	m	struct:Cmd::Record::t_WriteUser_SceneRecord
dataValue	tmpcode/commond.h	/^        DWORD dataValue;$/;"	m	struct:stNotifyDataChangeDragonUserCmd
databaseID	tmpcode/commond.h	/^	DWORD databaseID;		\/\/ »ÀŒÔ‘⁄ ˝æ›ø‚¿Ôµƒid$/;"	m	struct:st_CharShow2
datalen	tmpcode/commond.h	/^	DWORD datalen;$/;"	m	struct:stGetBeTradeImageUserCmd
datalen	tmpcode/commond.h	/^	DWORD datalen;$/;"	m	struct:stImageTradeWithNpcCmd
datalen	tmpcode/commond.h	/^        DWORD datalen;$/;"	m	struct:stSendMailImage
datas	SuperServer/RoleregCache.h	/^    DataCache datas;$/;"	m	class:RoleregCache
datas	base/ServerACL.h	/^	Container datas;$/;"	m	class:ServerACL
date	tmpcode/commond.h	/^	int date;$/;"	m	struct:TaxHistory
date	tmpcode/commond.h	/^	int date;$/;"	m	struct:TrafficTaxHistory
date	tmpcode/commond.h	/^	time_t date;                            \/\/\/  ±º‰$/;"	m	struct:FundUnionHistory
dattackspeed	ScenesServer/ScenePk.h	/^      SWORD dattackspeed;  \/\/ÊîªÂáªÈÄüÂ∫¶Èôç‰ΩéÁôΩÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
day	tmpcode/commond.h	/^		DWORD  day;$/;"	m	struct:stRetCityMinxinRecCmd::CityMxRec
day	tmpcode/commond.h	/^	BYTE day[0];		\/\/ÃÏ ˝    $/;"	m	struct:stStoreInfoNpcTradeUserCmd
day	tmpcode/commond.h	/^	DWORD day;$/;"	m	struct:stRetCanSetfree
day	tmpcode/commond.h	/^	DWORD day;$/;"	m	struct:stReturnFarmIntroduce
day	tmpcode/commond.h	/^        BYTE    day;            \/\/≥ˆ…˙»’$/;"	m	struct:stNameCard
day	tmpcode/commond.h	/^    BYTE day;$/;"	m	struct:stCityQuestEarnInfo
dayMaxNum	tmpcode/commond.h	/^	DWORD dayMaxNum;        \/\/◊ ‘¥µ±»’…œœﬁ$/;"	m	struct:resourceInfo
dayNum	tmpcode/commond.h	/^	DWORD dayNum;             \/\/◊ ‘¥µ±»’œ÷”– ˝¡ø$/;"	m	struct:resourceInfo
days	ScenesServer/zObject.h	/^  BYTE days;$/;"	m	class:StorePack
days	tmpcode/commond.h	/^    BYTE days; \/\/ ’π∫µƒ ±º‰£¨µ•Œª ÃÏ$/;"	m	struct:stSalePurchase
dbCol	base/zDBConnPool.h	/^} dbCol;$/;"	t	typeref:struct:__anon153
dbConnPool	BillServer/BillServer.cpp	/^zDBConnPool *BillService::dbConnPool = NULL;$/;"	m	class:BillService
dbConnPool	BillServer/BillServer.h	/^    static zDBConnPool *dbConnPool;$/;"	m	class:BillService
dbConnPool	FLServer/FLServer.cpp	/^zDBConnPool * FLService::dbConnPool = NULL;$/;"	m	class:FLService
dbConnPool	FLServer/FLServer.h	/^	static zDBConnPool *dbConnPool;$/;"	m	class:FLService
dbConnPool	RecordServer/RecordServer.cpp	/^zDBConnPool *RecordService::dbConnPool = NULL;$/;"	m	class:RecordService
dbConnPool	RecordServer/RecordServer.h	/^    static zDBConnPool *dbConnPool;$/;"	m	class:RecordService
dbConnPool	SessionServer/SessionServer.cpp	/^zDBConnPool *SessionService::dbConnPool = NULL;$/;"	m	class:SessionService
dbConnPool	SessionServer/SessionServer.h	/^    static zDBConnPool *dbConnPool;$/;"	m	class:SessionService
dbConnPool	SuperServer/SuperServer.cpp	/^zDBConnPool *SuperService::dbConnPool = NULL;$/;"	m	class:SuperService
dbConnPool	SuperServer/SuperServer.h	/^    static zDBConnPool *dbConnPool;$/;"	m	class:SuperService
dbConnPool	roleChangeServer/roleChangeServer.cpp	/^zDBConnPool * roleChangeService::dbConnPool = NULL;$/;"	m	class:roleChangeService
dbConnPool	roleChangeServer/roleChangeServer.h	/^	static zDBConnPool *dbConnPool;$/;"	m	class:roleChangeService
dbConnPool	roleRegServer/roleRegServer.cpp	/^zDBConnPool * roleRegService::dbConnPool = NULL;$/;"	m	class:roleRegService
dbConnPool	roleRegServer/roleRegServer.h	/^	static zDBConnPool *dbConnPool;$/;"	m	class:roleRegService
dbName	base/zDBConnPool.h	/^	char dbName[MAX_DBSIZE];$/;"	m	struct:UrlInfo
deadID	base/Card.h	/^    DWORD deadID;	    \/\/Õˆ”ÔID(skill)$/;"	m	struct:t_CardPK
deadID	base/zDatabase.h	/^    DWORD deadID;	    \/\/Õˆ”ÔID(skill)$/;"	m	struct:CardBase
deadID	base/zDatabase.h	/^    DWORD deadID;	    \/\/Õˆ”ÔID(skill)$/;"	m	struct:zCardB
dealCheckFreezeState	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::dealCheckFreezeState()$/;"	f	class:ChallengeGame
dealClearEndDieCard	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::dealClearEndDieCard()$/;"	f	class:ChallengeGame
dealClearTmpSkillStatus	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::dealClearTmpSkillStatus()$/;"	f	class:ChallengeGame
dealGameResult	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::dealGameResult(const DWORD loserID, bool isPeace)$/;"	f	class:ChallengeGame
dealRefreshCardState	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::dealRefreshCardState()$/;"	f	class:ChallengeGame
dealResetGameCardAttackTimes	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::dealResetGameCardAttackTimes()$/;"	f	class:ChallengeGame
death	ScenesServer/SceneNpc.cpp	/^void SceneNpc::death(const zRTime &ct)$/;"	f	class:SceneNpc
deathAction	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::deathAction()$/;"	f	class:SceneNpc
deathBackToMapID	ScenesServer/SceneUser.h	/^    DWORD deathBackToMapID;$/;"	m	struct:SceneUser
deathList	tmpcode/commond.h	/^	DWORD deathList[0];$/;"	m	struct:stRetSeptTeamDeathChallengeUserCmd
deathNum	tmpcode/commond.h	/^	WORD deathNum;$/;"	m	struct:stRetSeptTeamDeathChallengeUserCmd
deathSummonList	ScenesServer/SceneDefine.h	/^	std::map<DWORD,std::pair<DWORD,DWORD> > deathSummonList;$/;"	m	struct:t_NpcDefine
deathType	base/Command.h	/^    DWORD deathType;$/;"	m	struct:Cmd::stMainUserDeathReliveUserCmd
deathType	tmpcode/commond.h	/^	DWORD deathType;$/;"	m	struct:stMainUserDeathReliveUserCmd
deathUserProtect	ScenesServer/ScenePk.cpp	/^bool ScenePkState::deathUserProtect(SceneUser *pThis,DWORD defid)$/;"	f	class:ScenePkState
deathWaitTime	ScenesServer/SceneUser.h	/^    int deathWaitTime;$/;"	m	struct:SceneUser
death_times	base/CharBase.h	/^  DWORD death_times;\/\/Ê≠ª‰∫°Ê¨°Êï∞$/;"	m	struct:CharTest
debuffEnemy	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::debuffEnemy(SceneEntryPk * enemy)$/;"	f	class:SceneNpc
debug_currPtr	base/zSocket.h	/^	DWORD debug_currPtr;$/;"	m	class:zSocket
debug_max_size	base/zSocket.h	/^	DWORD debug_max_size;$/;"	m	class:zSocket
debug_mode	ScenesServer/Chat.h	/^      debug_mode =   0x10,$/;"	e	enum:Gm::__anon179
debug_offPtr	base/zSocket.h	/^	DWORD debug_offPtr;$/;"	m	class:zSocket
debug_wait_size	base/zSocket.h	/^	DWORD debug_wait_size;$/;"	m	class:zSocket
dec_mask	base/EncDec/EncDec.h	/^  unsigned int dec_mask;$/;"	m	class:CEncrypt
decayEraTimes	tmpcode/commond.h	/^	BYTE decayEraTimes;             \/\/Õ…±‰¥˙ ˝$/;"	m	struct:LingQiData
decayFinishTime	tmpcode/commond.h	/^	DWORD decayFinishTime;				\/\/Õ…±‰Ω· ¯ ±º‰$/;"	m	struct:DecayHouseBaseData
decayHouseLevel	tmpcode/commond.h	/^	BYTE decayHouseLevel;           \/\/Õ…±‰–°Œ›µ»º∂$/;"	m	struct:DecayNewLingQi
decayLingQiId	tmpcode/commond.h	/^	BYTE decayLingQiId;$/;"	m	struct:stCommitDecayLingQiCmd
decayLingQiModel	tmpcode/commond.h	/^	DWORD  decayLingQiModel;			\/\/Õ…±‰¡È∆˜µƒƒ£–Õid$/;"	m	struct:DecayHouseBaseData
decayMasterName	tmpcode/commond.h	/^	char decayMasterName[MAX_NAMESIZE]; \/\/Õ…±‰¡È∆˜µƒ÷˜»À√˚◊÷$/;"	m	struct:DecayHouseBaseData
decayTimes	tmpcode/commond.h	/^	BYTE decayTimes;                \/\/Õ…±‰¥Œ ˝$/;"	m	struct:LingQiData
decoration	tmpcode/commond.h	/^	decoration()$/;"	f	struct:decoration
decoration	tmpcode/commond.h	/^	decoration(const WORD uniqueID, const DWORD objID, const WORD x, const WORD y) $/;"	f	struct:decoration
decoration	tmpcode/commond.h	/^struct decoration$/;"	s
decreaseGameCount	ScenesServer/ChallengeGameManager.h	/^    void decreaseGameCount()$/;"	f	class:ChallengeGameManager
decreaseGoldListNum	BillServer/BillUser.cpp	/^void BillUser::decreaseGoldListNum()$/;"	f	class:BillUser
decreaseMoneyListNum	BillServer/BillUser.cpp	/^void BillUser::decreaseMoneyListNum()$/;"	f	class:BillUser
decreaseUser	SessionServer/Session.h	/^    void decreaseUser()$/;"	f	class:SceneSession
deduct_id	tmpcode/commond.h	/^		DWORD deduct_id; \/\/ªÿ¬ØŒÔ∆∑ID$/;"	m	struct:stFoundItemSkillStore
deduct_id	tmpcode/commond.h	/^	DWORD deduct_id;\/\/”√”⁄ªÿ¬ØµƒŒÔ∆∑Œ®“ªid;$/;"	m	struct:stFoundItemPropertyUserCmd
deep	base/xml/xml_utility.h	/^	int deep;$/;"	m	struct:detail::argument_dump
deep	base/xml/xml_utility.h	/^	int deep;$/;"	m	struct:detail::indent
def	base/Command.h	/^	DWORD def;              \/\/Áâ©Èò≤$/;"	m	struct:Cmd::t_PetData
def	tmpcode/commond.h	/^	 BYTE type,atk,def,hp,time;$/;"	m	struct:TankBuffValue
def	tmpcode/commond.h	/^	DWORD   def;                    \/\/∑¿”˘¡¶$/;"	m	struct:TankData
def	tmpcode/commond.h	/^	DWORD def;              \/\/ŒÔ∑¿$/;"	m	struct:t_PetData
defBuff	tmpcode/commond.h	/^	BYTE    defBuff;                \/\/’˜Õæ (∑¿”˘buff)$/;"	m	struct:TankData
defCountry	base/Command.h	/^  DWORD  defCountry;    \/\/ Èò≤Âæ°ÂõΩID$/;"	m	struct:Cmd::stDareResult
defCountry	base/Command.h	/^  DWORD defCountry;  \/\/ Èò≤Âæ°ÂõΩ$/;"	m	struct:Cmd::stDarePlan
defCountryName	base/SessionCommand.h	/^      char defCountryName[MAX_NAMESIZE];  \/\/ Èò≤Âæ°ÊñπÂõΩÂÆ∂ÂêçÁß∞$/;"	m	struct:Cmd::Session::t_countryDareResult_SceneSession
defGood	ScenesServer/ScenePk.cpp	1067;"	d
defID	base/SessionCommand.h	/^      DWORD defID;    \/\/ Èò≤Âæ°ÊñπÁî®Êà∑ID$/;"	m	struct:Cmd::Session::t_darePk_SceneSession
defKingName	base/Command.h	/^  char   defKingName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stDareResult
defSub	ScenesServer/ScenePk.cpp	1069;"	d
defTargetID	ScenesServer/SceneEntryPk.h	/^    DWORD defTargetID;$/;"	m	struct:SceneEntryPk
defTargetType	ScenesServer/SceneEntryPk.h	/^    DWORD defTargetType;$/;"	m	struct:SceneEntryPk
defUnionID	tmpcode/commond.h	/^	DWORD defUnionID;$/;"	m	struct:UnionCityDareInfo
defUnionLevel	tmpcode/commond.h	/^	DWORD defUnionLevel;$/;"	m	struct:UnionCityDareInfo
defence	tmpcode/commond.h	/^    DWORD defence;\/\/∑¿”˘¡¶$/;"	m	struct:kingAchievement
defencefive	base/CharBase.h	/^  BYTE  defencefive;          \/\/\/ Èò≤Âæ°‰∫îË°å *$/;"	m	struct:CharState
defendEquip	tmpcode/commond.h	/^            DWORD defendEquip;      \/\/∑¿æﬂid$/;"	m	struct:t_DragonData::DragonEquip
defendId	tmpcode/commond.h	/^		DWORD defendId;      \/\/∑¿æﬂid$/;"	m	struct:stRet32NameListUserCmd::__anon373
defendType	tmpcode/commond.h	/^            BYTE  defendType;       \/\/∑¿æﬂ¿‡–Õ$/;"	m	struct:t_DragonData::DragonEquip
define	ScenesServer/SceneNpc.h	/^  const t_NpcDefine *define;$/;"	m	class:SceneNpc
defman	tmpcode/commond.h	/^				DWORD defman;\/\/ ÿŒ¿»À ˝$/;"	m	struct:stCrystalAllInfoDataUserCmd::cryState
degree	base/Command.h	/^    WORD degree; \/\/ 1-2000Âêç$/;"	m	struct:Cmd::stLevelDegreeDataUserCmd
degree	tmpcode/commond.h	/^	WORD degree; \/\/ 1-2000√˚$/;"	m	struct:stLevelDegreeDataUserCmd
del	ScenesServer/scriptTickTask.h	/^	bool del(taskType _type)$/;"	f	class:userScriptTaskContainer
delCharbase	RecordServer/RecordTask.cpp	/^bool RecordTask::delCharbase(DWORD accid, DWORD userid, bool log)$/;"	f	class:RecordTask
delEpoll	base/zSocket.h	/^	inline void delEpoll(int kdpfd, __uint32_t events)$/;"	f	class:zSocket
delEpoll	base/zTCPClientTask.h	/^	void delEpoll(int kdpfd, __uint32_t events)$/;"	f	class:zTCPClientTask
delEpoll	base/zTCPTask.h	/^	void delEpoll(int kdpfd, __uint32_t events)$/;"	f	class:zTCPTask
delInstance	BillServer/BillCallback.h	/^    static void delInstance()$/;"	f	class:SingletonBase
delInstance	BillServer/BillManager.h	/^    static void delInstance()$/;"	f	class:BillManager
delInstance	BillServer/BillServer.h	/^    static void delInstance()$/;"	f	class:BillService
delInstance	BillServer/BillSessionManager.h	/^    static void delInstance()$/;"	f	class:BillSessionManager
delInstance	BillServer/BillTaskManager.h	/^    static void delInstance()$/;"	f	class:BillTaskManager
delInstance	BillServer/BillUserManager.cpp	/^void BillUserManager::delInstance()$/;"	f	class:BillUserManager
delInstance	BillServer/StockConsign.cpp	/^void ConsignGoldManager::delInstance()$/;"	f	class:ConsignGoldManager
delInstance	BillServer/StockConsign.cpp	/^void ConsignHistoryManager::delInstance()$/;"	f	class:ConsignHistoryManager
delInstance	BillServer/StockConsign.cpp	/^void ConsignMoneyManager::delInstance()$/;"	f	class:ConsignMoneyManager
delInstance	BillServer/TimeTick.h	/^    static void delInstance()$/;"	f	class:BillTimeTick
delInstance	FLServer/GYListManager.h	/^	static void delInstance()$/;"	f	class:GYListManager
delInstance	FLServer/LoginManager.h	/^	static void delInstance()$/;"	f	class:LoginManager
delInstance	FLServer/ServerManager.h	/^	static void delInstance()$/;"	f	class:ServerManager
delInstance	FLServer/TimeTick.h	/^	static void delInstance()$/;"	f	class:FLTimeTick
delInstance	GatewayServer/GateUserManager.cpp	/^void GateUserManager::delInstance()$/;"	f	class:GateUserManager
delInstance	GatewayServer/GatewayServer.h	/^	static void delInstance()$/;"	f	class:GatewayService
delInstance	GatewayServer/GatewayTaskManager.h	/^	static void delInstance()$/;"	f	class:GatewayTaskManager
delInstance	GatewayServer/LoginSessionManager.h	/^	static void delInstance()$/;"	f	class:LoginSessionManager
delInstance	GatewayServer/SceneClientManager.h	/^	static void delInstance()$/;"	f	class:SceneClientManager
delInstance	GatewayServer/TimeTick.h	/^	static void delInstance()$/;"	f	class:GatewayTimeTick
delInstance	RecordServer/RecordServer.h	/^    static void delInstance()$/;"	f	class:RecordService
delInstance	RecordServer/RecordSessionManager.h	/^    static void delInstance()$/;"	f	class:RecordSessionManager
delInstance	Robot/ClientManager.h	/^	static void delInstance()$/;"	f	class:ClientManager
delInstance	Robot/ClientService.h	/^    static void delInstance()$/;"	f	class:ClientService
delInstance	Robot/TimeTick.h	/^	static void delInstance()$/;"	f	class:ClientTimeTick
delInstance	ScenesServer/CardManager.cpp	/^void GlobalCardIndex::delInstance()$/;"	f	class:GlobalCardIndex
delInstance	ScenesServer/NpcTrade.h	/^    static void delInstance()$/;"	f	class:NpcTrade
delInstance	ScenesServer/ObjectManager.cpp	/^void GlobalObjectIndex::delInstance()$/;"	f	class:GlobalObjectIndex
delInstance	ScenesServer/Recycle.h	/^	static void delInstance()$/;"	f	class:SceneRecycle
delInstance	ScenesServer/SceneManager.cpp	/^void SceneManager::delInstance()$/;"	f	class:SceneManager
delInstance	ScenesServer/SceneTaskManager.h	/^    static void delInstance()$/;"	f	class:SceneTaskManager
delInstance	ScenesServer/ScenesServer.h	/^    static void delInstance()$/;"	f	class:ScenesService
delInstance	ScenesServer/TimeTick.h	/^    static void delInstance()$/;"	f	class:SceneTimeTick
delInstance	SessionServer/SessionManager.cpp	/^void SceneSessionManager::delInstance()$/;"	f	class:SceneSessionManager
delInstance	SessionServer/SessionManager.cpp	/^void UserSessionManager::delInstance()$/;"	f	class:UserSessionManager
delInstance	SessionServer/SessionServer.h	/^    static void delInstance()$/;"	f	class:SessionService
delInstance	SessionServer/SessionTaskManager.h	/^    static void delInstance()$/;"	f	class:SessionTaskManager
delInstance	SessionServer/TempArchive.cpp	/^void GlobalTempArchiveIndex::delInstance()$/;"	f	class:GlobalTempArchiveIndex
delInstance	SessionServer/TimeTick.h	/^    static void delInstance()$/;"	f	class:SessionTimeTick
delInstance	SuperServer/BroadClientManager.h	/^    static void delInstance()$/;"	f	class:BroadClientManager
delInstance	SuperServer/FLClientManager.h	/^    static void delInstance()$/;"	f	class:FLClientManager
delInstance	SuperServer/InfoClientManager.h	/^    static void delInstance()$/;"	f	class:InfoClientManager
delInstance	SuperServer/RolechangeClientManager.h	/^    static void delInstance()$/;"	f	class:RolechangeClientManager
delInstance	SuperServer/RoleregCache.h	/^    static void delInstance()$/;"	f	class:RoleregCache
delInstance	SuperServer/RoleregClientManager.h	/^    static void delInstance()$/;"	f	class:RoleregClientManager
delInstance	SuperServer/ServerManager.h	/^    static void delInstance()$/;"	f	class:ServerManager
delInstance	SuperServer/SuperServer.h	/^    static void delInstance()$/;"	f	class:SuperService
delInstance	SuperServer/TimeTick.h	/^    static void delInstance()$/;"	f	class:SuperTimeTick
delMe	base/zDatabaseManager.h	/^	static void delMe()$/;"	f	class:zDataBM
delMe	base/zSingleton.h	/^		static void delMe(void)$/;"	f	class:Singleton
delNpc	ScenesServer/Scene.cpp	/^  MonkeyNpcs delNpc;$/;"	m	struct:AICallback
delNumber	tmpcode/commond.h	/^	BYTE delNumber;         \/\/“∆∂Ø«∞µƒŒª÷√$/;"	m	struct:st_MoveItemStoreHouseUserCmd
delObject	ScenesServer/Scene.cpp	/^  set delObject;$/;"	m	struct:RemoveSceneObjectCallBack
delObject	ScenesServer/Scene.cpp	/^  set delObject;$/;"	m	struct:UpdateSceneObjectCallBack
delSelectUserInfo	GatewayServer/GateUser.h	/^	bool delSelectUserInfo(DWORD charid)$/;"	f	class:GateSelectUserSession
delSkill	base/zDatabase.h	/^    bool delSkill(DWORD id)$/;"	f	struct:zNpcB
delTime	base/SessionCommand.h	/^      DWORD delTime;$/;"	m	struct:Cmd::Session::mailInfo
delTime	tmpcode/commond.h	/^		DWORD delTime;          \/\/…æ≥˝ ±º‰$/;"	m	struct:stRet_PromoterRelationUserCmd::SubPlayer
del_ob	ScenesServer/script_func.cpp	/^bool del_ob(SceneUser* user,DWORD id)$/;"	f
del_role	SessionServer/SessionTask.cpp	/^bool SessionTask::del_role(const Cmd::t_NullCmd* cmd,const DWORD cmdLen)$/;"	f	class:SessionTask
del_var	ScenesServer/Quest.h	/^  void del_var(const std::string& var)$/;"	f	class:Vars
delay	ScenesServer/Scene.h	/^      DWORD delay;\/\/ÂºÄÂßãÂª∂Ëøü$/;"	m	struct:Scene::FixedRush
delay	base/GmToolCommand.h	/^      int delay;$/;"	m	struct:Cmd::GmTool::t_Punish_GmTool
delay	base/SessionCommand.h	/^      DWORD delay;$/;"	m	struct:Cmd::Session::t_cityRush_SceneSession
delay	base/SessionCommand.h	/^      DWORD delay;$/;"	m	struct:Cmd::Session::t_createRush_SceneSession
delay	base/SessionCommand.h	/^      int delay;$/;"	m	struct:Cmd::Session::t_forbidTalk_SceneSession
delayClearBodyTime	base/zDatabase.h	/^    DWORD delayClearBodyTime;$/;"	m	struct:zNpcB
delayForbidTalk	ScenesServer/SceneUser.h	/^    zRTime delayForbidTalk(int delay)$/;"	f	struct:SceneUser
delayMoveTime	ScenesServer/SceneNpc.cpp	/^void SceneNpc::delayMoveTime(const int delay)$/;"	f	class:SceneNpc
delayPhaseTime	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::delayPhaseTime(const int delay)$/;"	f	class:NpcAIController
delegate	base/MsgDelegate.h	/^	    bool delegate(C *p, U *u, const Cmd::t_NullCmd *pNullCmd, const DWORD nLen)$/;"	f	class:MsgDelegate
deleteChar	ScenesServer/script_func.cpp	/^void deleteChar(const char *p)$/;"	f
deleteCharTest	RecordServer/RecordTask.cpp	/^bool RecordTask::deleteCharTest(Cmd::Record::t_Delete_CharTest_SceneRecord *rev)$/;"	f	class:RecordTask
deleteDBRecord	SessionServer/CRelationManager.cpp	/^void CRelationManager::deleteDBRecord(const DWORD dwID)$/;"	f	class:CRelationManager
deleteEvery	base/zDatabaseManager.h	/^	class deleteEvery:public zDatabaseCallBack<data>$/;"	c	class:zDataBM
deleteTask	ScenesServer/scriptTickTask.h	/^	bool deleteTask(QWORD taskID)$/;"	f	class:scriptTaskManagement
demandNum	tmpcode/commond.h	/^		DWORD   demandNum;      \/\/–Ë«Û ˝¡ø$/;"	m	struct:stRetCollectListBusiness::__anon348
demonBlessLevel	tmpcode/commond.h	/^	DWORD demonBlessLevel;          \/\/\/ µ±«∞æ´¡È◊£∏£ø∆ººµƒµ»º∂      $/;"	m	struct:stEquipIntensifyInfo
deposit	tmpcode/commond.h	/^		DWORD deposit;                 \/\/—∫Ω$/;"	m	struct:stReceiveIssuedQuestUserCmd
des_	base/zMisc.h	/^	std::string des_;$/;"	m	class:CheckedBuf
des_key	base/zType.h	/^  DES_cblock des_key;\/\/desÂØÜÈí•$/;"	m	struct:t_NewLoginSession
des_skb	base/EncDec/mydes.cpp	/^const DES_LONG des_skb[8][64]={$/;"	v
desc	ScenesServer/Chat.h	/^        const char *desc;$/;"	m	struct:Gm
desc	base/ServerACL.h	/^	std::string desc;$/;"	m	struct:ACLZone
desc	tmpcode/commond.h	/^        char desc[64];           \/\/ªÓ∂ØµƒÀµ√˜$/;"	m	struct:stActivityDataUserCmd::act
descript	tmpcode/commond.h	/^        BYTE descript;                     \/**< ÷’÷π‘≠“Ú£∫	0-µ¿æﬂ π”√ÕÍ±œ$/;"	m	struct:stCancelAtBattMapScreenUserCmd
description	ScenesServer/Quest.h	/^  const std::string& description() const  $/;"	f	class:Quest
deskInfo	tmpcode/commond.h	/^	DestInfo deskInfo[0];$/;"	m	struct:deskInfoHouseUserCmd
deskInfoHouseUserCmd	tmpcode/commond.h	/^	deskInfoHouseUserCmd()$/;"	f	struct:deskInfoHouseUserCmd
deskInfoHouseUserCmd	tmpcode/commond.h	/^struct deskInfoHouseUserCmd : public stHouseUserCmd$/;"	s
deslong	base/EncDec/EncDec.h	/^		 DES_LONG deslong[2];$/;"	m	union:DES_ks::__anon6
deslong	base/EncDec/mydes.h	/^		DES_LONG deslong[2];$/;"	m	union:DES_ks::__anon5
dest	ScenesServer/WayPoint.h	/^	std::vector<zPoint> dest;$/;"	m	struct:WayPoint
destC	ScenesServer/WayPoint.h	/^    WORD destC;$/;"	m	struct:WayPoint
destCountry	tmpcode/commond.h	/^        char destCountry[MAX_NAMESIZE + 1];$/;"	m	struct:stNotifyFinishedIssueQuestUserCmd
destID	tmpcode/commond.h	/^		DWORD destID;                           \/\/ÕÍ≥…’ﬂID$/;"	m	struct:stNotifyFinishedIssueQuestUserCmd
destID	tmpcode/commond.h	/^		DWORD destID;                           \/\/ÕÍ≥…’ﬂID$/;"	m	struct:stNotifyHongbaoIssueQuestUserCmd
destIndex	tmpcode/commond.h	/^    BYTE destIndex;$/;"	m	struct:st_rtShenYuCardOptionUserCmd
destName	tmpcode/commond.h	/^        char destName[MAX_NAMESIZE + 1];        \/\/ÕÍ≥…’ﬂ√˚◊÷$/;"	m	struct:stNotifyHongbaoIssueQuestUserCmd
destName	tmpcode/commond.h	/^        char destName[MAX_NAMESIZE + 1];$/;"	m	struct:stNotifyFinishedIssueQuestUserCmd
destX	tmpcode/commond.h	/^	DWORD destX;            \/\/Ô⁄≥µ◊¯±ÍX$/;"	m	struct:attGuardNpcRecordofSept
destX	tmpcode/commond.h	/^	DWORD destX;$/;"	m	struct:stGoToAttGuardNpc
destY	tmpcode/commond.h	/^	DWORD destY;            \/\/Ô⁄≥µ◊¯±ÍY     $/;"	m	struct:attGuardNpcRecordofSept
destY	tmpcode/commond.h	/^	DWORD destY;$/;"	m	struct:stGoToAttGuardNpc
destZone	base/BroadCastCommand.h	/^      GameZone_t destZone;$/;"	m	struct:Cmd::BroadCast::t_BroadcastMessage
destroy	ScenesServer/Quest.h	/^  void destroy()$/;"	f	class:GlobalVarImpl
destroy	ScenesServer/SceneUser.cpp	/^void SceneUser::destroy()$/;"	f	class:SceneUser
destroy	ScenesServer/zCard.cpp	/^void  zCard::destroy(zCard* ob)$/;"	f	class:zCard
destroy	ScenesServer/zObject.cpp	/^void  zObject::destroy(zObject* ob)$/;"	f	class:zObject
destroyInstance	ScenesServer/SceneUserManager.cpp	/^void SceneRecycleUserManager::destroyInstance()$/;"	f	class:SceneRecycleUserManager
destroyMe	ScenesServer/Chat.cpp	/^void ChannelM::destroyMe()$/;"	f	class:ChannelM
destroyMe	ScenesServer/SceneNpcManager.cpp	/^void SceneNpcManager::destroyMe()$/;"	f	class:SceneNpcManager
destroyMe	ScenesServer/SceneUserManager.cpp	/^void SceneUserManager::destroyMe()$/;"	f	class:SceneUserManager
destroyMe	SessionServer/CSort.cpp	/^void CSortM::destroyMe()$/;"	f	class:CSortM
destroyMe	SessionServer/SessionChat.cpp	/^void SessionChannelManager::destroyMe()$/;"	f	class:SessionChannelManager
detail	base/xml/xml_node_container.h	/^namespace detail$/;"	n
detail	base/xml/xml_prop2value.h	/^namespace detail$/;"	n
detail	base/xml/xml_utility.h	/^namespace detail$/;"	n
dex	ScenesServer/zObject.h	/^  WORD dex;  \/\/ ÊïèÊç∑$/;"	m	class:Equips
dex	base/Command.h	/^  WORD dex;    \/\/ÊïèÊç∑$/;"	m	struct:Cmd::t_HorseData
dex	base/Object.h	/^	WORD dex;  \/\/ √ÙΩ›                               \/\/ ∂‘”¶¬Ì∆• √ÙΩ›$/;"	m	struct:t_Object
dex	base/zDatabase.h	/^    DWORD   dex;        \/\/ √ÙΩ›$/;"	m	struct:zNpcB
dex	tmpcode/commond.h	/^	WORD dex;$/;"	m	struct:SimulateHorse
dex_Attribute	ScenesServer/zObject.h	/^	  WORD dex_Attribute;		\/\/ ÊïèÊç∑Â∑≤ÁªèÂä†ËøáÁöÑËá™Áî±ÁÇπ$/;"	m	struct:Equips::Freedom_Attribute
dfpoint	ScenesServer/zObject.h	/^  WORD dfpoint;$/;"	m	class:Equips
dftype	ScenesServer/zObject.h	/^  WORD dftype;$/;"	m	class:Equips
dhpp	ScenesServer/zObject.h	/^  BYTE dhpp; \/\/Áâ©ÁêÜ‰º§ÂÆ≥ÂáèÂ∞ëx%  $/;"	m	class:Equips
dhpp	base/Object.h	/^	BYTE dhpp; \/\/ŒÔ¿Ì…À∫¶ºı…Ÿx%	$/;"	m	struct:t_Object
dialogNo	tmpcode/commond.h	/^        DWORD dialogNo;                         \/\/∞…≈ÆÃ®¥ –Ú∫≈$/;"	m	struct:stBargirlFavourDialog
dialogType	tmpcode/commond.h	/^        BYTE  dialogType;                       \/\/∞…≈ÆÃ®¥ µƒ¿‡–Õ: 0-∆’Õ®∂‘ª∞£ª1-∆¯≈›Ã®¥ $/;"	m	struct:stBargirlFavourDialog
dialogs	ScenesServer/NpcTrade.h	/^    NpcDialogMultiMap dialogs;$/;"	m	class:NpcTrade
dieCount	tmpcode/commond.h	/^         WORD  dieCount;                 \/\/µ±«∞“—’ÛÕˆµ´»‘¡Ù‘⁄µÿÕº÷–µƒÕÊº“ ˝ƒø$/;"	m	struct:stGuyDeadDaTaoShaUserCmd
dieList	ScenesServer/SceneDefine.h	/^	std::list< std::pair<DWORD,zPos> > dieList;$/;"	m	struct:t_NpcDefine
dieNum	tmpcode/commond.h	/^	WORD dieNum;			\/\/∆∆ªÍ¿€º∆$/;"	m	struct:stPopoScore
dieScore	tmpcode/commond.h	/^	WORD dieScore;			\/\/∆∆ªÍ¿€º∆$/;"	m	struct:stBaseScore
dieScore	tmpcode/commond.h	/^	WORD dieScore;			\/\/∆∆ªÍ¿€º∆∑÷ ˝$/;"	m	struct:stPopoScore
dietodam	ScenesServer/SceneEntryPk.h	/^    SDWORD dietodam; \/\/\/Ê≠ª‰∫°ÊîªÂáªÊï∞ÂÄº$/;"	m	struct:SceneEntryPk
diewithme	ScenesServer/SceneEntryPk.h	/^    BYTE diewithme; \/\/Ë°ÄÂÄ∫Ë°ÄÂÅø$/;"	m	struct:SceneEntryPk
diff_time	ScenesServer/script_func.cpp	/^double diff_time(int t1,int t2)$/;"	f
dir	ScenesServer/QuestEvent.h	/^  static const std::string& dir()$/;"	f	class:EventTrigger
dir	base/SceneCommand.h	/^      WORD dir;$/;"	m	struct:Cmd::Scene::t_Nine_dir_ForwardScene
dir	base/SceneCommand.h	/^      WORD dir;$/;"	m	struct:Cmd::Scene::t_Nine_rdir_ForwardScene
dir	base/zSceneEntry.h	/^	BYTE dir;$/;"	m	struct:zSceneEntry
dir	tmpcode/commond.h	/^	BYTE	dir;$/;"	m	struct:stMoveFurnitureHomeUserCmd
dir	tmpcode/commond.h	/^	BYTE  dir;			\/\/√ÊœÚ∑ΩŒª$/;"	m	struct:HouseObjDef
dir	tmpcode/commond.h	/^	BYTE dir;		\/\/≥ØœÚ$/;"	m	struct:st_PlaceObjectHouseUserCmd
directDamage	ScenesServer/CardPk.cpp	/^DWORD zCard::directDamage(zCard *pAtt, zCard *pDef, DWORD hp)$/;"	f	class:zCard
directDamage	ScenesServer/SceneEntryPk.cpp	/^SWORD SceneEntryPk::directDamage(SceneEntryPk *pAtt,const SDWORD &dam,bool notify)$/;"	f	class:SceneEntryPk
directDamage	ScenesServer/SceneNpc.cpp	/^SWORD SceneNpc::directDamage(SceneEntryPk *pAtt,const SDWORD &dam,bool notify)$/;"	f	class:SceneNpc
directDamage	ScenesServer/SceneUser.cpp	/^SWORD SceneUser::directDamage(SceneEntryPk *pAtt,const SDWORD &hp,bool notify)$/;"	f	class:SceneUser
direct_screen	GatewayServer/ScreenIndex.h	/^	NineScreen_map direct_screen[8];$/;"	m	class:ScreenIndex
direct_screen	ScenesServer/zSceneEntryIndex.h	/^    NineScreen_map direct_screen[8];$/;"	m	class:zSceneEntryIndex
dirty	ScenesServer/Skill.h	/^    bool dirty;$/;"	m	struct:zSkill
disableAll	FLServer/GYListManager.cpp	/^void GYListManager::disableAll(const GameZone_t &gameZone)$/;"	f	class:GYListManager
distance	base/zDatabase.h	/^    DWORD  distance;      \/\/ “∆∂Øº‰∏Ù$/;"	m	struct:zNpcB
distributeExp	ScenesServer/SceneNpc.cpp	/^void SceneNpc::distributeExp()$/;"	f	class:SceneNpc
distributeMoney	ScenesServer/SceneNpc.cpp	/^void SceneNpc::distributeMoney(DWORD money)$/;"	f	class:SceneNpc
dmdam	ScenesServer/ScenePk.h	/^      SWORD dmdam;    \/\/Ê≥ïÊúØÊîªÂáªÂáèÂ∞ëÂõ∫ÂÆöÊï∞ÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
dmdam	ScenesServer/zObject.h	/^      BYTE dmdam; \/\/Ê≥ïÊúØ‰º§ÂÆ≥ÂáèÂ∞ë%x$/;"	m	struct:Equips::__anon174::__anon175
dmdam	base/Object.h	/^			WORD dmdam; \/\/∑® ı…À∫¶ºı…Ÿx%%$/;"	m	struct:t_Object::__anon59::__anon60
dmdamp	ScenesServer/ScenePk.h	/^      SWORD dmdamp;    \/\/Ê≥ïÊúØÊîªÂáªÂáèÂ∞ëÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
dmdef	ScenesServer/ScenePk.h	/^      SWORD dmdef;    \/\/Ê≥ïÊúØÈò≤Âæ°ÂáèÂ∞ëÂõ∫ÂÆöÊï∞ÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
dmdefp	ScenesServer/ScenePk.h	/^      SWORD dmdefp;    \/\/Ê≥ïÊúØÈò≤Âæ°ÂáèÂ∞ëÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
dmpbyhp	ScenesServer/SceneEntryPk.h	/^    BYTE dmpbyhp;  \/\/\/Âê∏È≠îÂâëÊ≥ï$/;"	m	struct:SceneEntryPk
dmpp	ScenesServer/zObject.h	/^  BYTE dmpp; \/\/Ê≥ïÊúØ‰º§ÂÆ≥ÂÄºÂáèÂ∞ëx%    $/;"	m	class:Equips
dmpp	base/Object.h	/^	BYTE dmpp; \/\/∑® ı…À∫¶÷µºı…Ÿx%		$/;"	m	struct:t_Object
dnallattrib	ScenesServer/ScenePk.h	/^      SWORD dnallattrib; \/\/ ÊâÄÊúâÂ±ûÊÄßÈôç‰ΩéÊï∞ÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
doAttackAI	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::doAttackAI()$/;"	f	class:SceneNpc
doBattleCmd	ScenesServer/SceneBattle.cpp	/^bool SceneUser::doBattleCmd(const Cmd::stBattleUserCmd *rev, unsigned int cmdLen)$/;"	f	class:SceneUser
doChangeMapAI	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::doChangeMapAI()$/;"	f	class:SceneNpc
doChatCmd	ScenesServer/Chat.cpp	/^bool SceneUser::doChatCmd(const Cmd::stChatUserCmd *rev,DWORD cmdLen)$/;"	f	class:SceneUser
doClearAI	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::doClearAI()$/;"	f	class:SceneNpc
doCmd	base/MessageQueue.h	/^	bool doCmd()$/;"	f	class:MessageQueue
doCompetitiveGroup	SessionServer/HeroCardManager.cpp	/^void HeroCardManager::doCompetitiveGroup()$/;"	f	class:HeroCardManager
doDropItemAI	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::doDropItemAI()$/;"	f	class:SceneNpc
doEvery	ScenesServer/Quest.h	/^  void doEvery(VarsCallback& callback) const$/;"	f	class:Vars
doFleeAI	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::doFleeAI()$/;"	f	class:SceneNpc
doGmCmd	GatewayServer/SceneClient.cpp	/^bool SceneClient::doGmCmd(const Cmd::Scene::t_gmCommand_SceneGate* pCmd)$/;"	f	class:SceneClient
doGmCmd	ScenesServer/SessionClient.cpp	/^bool SessionClient::doGmCmd(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:SessionClient
doGoOnPathAI	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::doGoOnPathAI()$/;"	f	class:SceneNpc
doHeroCardCmd	ScenesServer/HeroCard.cpp	/^bool SceneUser::doHeroCardCmd(const Cmd::stHeroCardCmd *rev,DWORD cmdLen)$/;"	f	class:SceneUser
doMovetoAI	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::doMovetoAI()$/;"	f	class:SceneNpc
doNormalAI	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::doNormalAI()$/;"	f	class:SceneNpc
doNormalPK	ScenesServer/CardPk.cpp	/^DWORD zCard::doNormalPK(zCard *pAtt, zCard *pDef)$/;"	f	class:zCard
doOperation	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::doOperation(const SkillStatus *pSkillStatus, zCard* entry, const Cmd::stCardAttackMagicUserCmd *rev)$/;"	f	class:ChallengeGame
doOperation	ScenesServer/Skill.cpp	/^void zSkill::doOperation(const SkillStatus *pSkillStatus)$/;"	f	class:zSkill
doPassivenessSkill	ScenesServer/Skill.cpp	/^void zSkill::doPassivenessSkill()$/;"	f	class:zSkill
doPatrolAI	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::doPatrolAI()$/;"	f	class:SceneNpc
doPreCheck	ScenesServer/Chat.cpp	/^bool Channel::doPreCheck(SceneUser *pUser,Cmd::stKokChatUserCmd *cchat,DWORD cmdLen)$/;"	f	class:Channel
doPropertyCmd	ScenesServer/Property.cpp	/^bool SceneUser::doPropertyCmd(const Cmd::stPropertyUserCmd *rev,DWORD cmdLen)$/;"	f	class:SceneUser
doRandomChatAI	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::doRandomChatAI()$/;"	f	class:SceneNpc
doRankingGroup	SessionServer/HeroCardManager.cpp	/^void HeroCardManager::doRankingGroup()$/;"	f	class:HeroCardManager
doRelationCmd	ScenesServer/SceneRelation.cpp	/^bool SceneUser::doRelationCmd(const Cmd::stRelationUserCmd *rev,DWORD cmdLen)$/;"	f	class:SceneUser
doRelaxGroup	SessionServer/HeroCardManager.cpp	/^void HeroCardManager::doRelaxGroup()$/;"	f	class:HeroCardManager
doReturnToRegionAI	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::doReturnToRegionAI()$/;"	f	class:SceneNpc
doSayAI	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::doSayAI()$/;"	f	class:SceneNpc
doTask	ScenesServer/scriptTickTask.cpp	/^bool scriptTask::doTask(time_t t)$/;"	f	class:scriptTask
doTradeCmd	ScenesServer/Trade.cpp	/^bool SceneUser::doTradeCmd(const Cmd::stTradeUserCmd *rev, unsigned int cmdLen)$/;"	f	class:SceneUser
doWarpAI	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::doWarpAI()$/;"	f	class:SceneNpc
do_check	GatewayServer/CmdChecker.h	/^	bool do_check(const zRTime& current)$/;"	f	class:CmdChecker
do_it	ScenesServer/QuestAction.cpp	/^int Action::do_it (SceneUser* user,Vars* vars)$/;"	f	class:Action
do_it	ScenesServer/QuestAction.cpp	/^int TeamAction::do_it(SceneUser* user,Vars* vars)$/;"	f	class:TeamAction
do_it	ScenesServer/QuestEvent.cpp	/^int Event::Embranchment::do_it(SceneUser* user,Vars* vars)$/;"	f	class:Event::Embranchment
doc	base/zXMLParser.h	/^	xmlDocPtr doc;$/;"	m	class:zXMLParser
doc	tools/codepg.cpp	/^static char doc[] =$/;"	v
doc	tools/xmlpg.cpp	/^static char doc[] =$/;"	v
dodge	ScenesServer/ScenePk.h	/^      SWORD dodge;         \/\/ Êúâ‰∏ÄÂÆöÂá†ÁéáÈó™ÈÅøÊïå‰∫∫ÊîªÂáª$/;"	m	struct:SkillState::__anon155::__anon156
dodge	base/zDatabase.h	/^    DWORD  dodge;        \/\/ ∂„±‹¬ $/;"	m	struct:zNpcB
doingWhat	tmpcode/commond.h	/^	BYTE  doingWhat;$/;"	m	struct:__anon356
done	ScenesServer/QuestAction.cpp	/^int AddBindItemAction::done (SceneUser* user,Vars* vars)$/;"	f	class:AddBindItemAction
done	ScenesServer/QuestAction.cpp	/^int AddHeroExpAction::done (SceneUser* user,Vars* vars)$/;"	f	class:AddHeroExpAction
done	ScenesServer/QuestAction.cpp	/^int AddItemAction::done (SceneUser* user,Vars* vars)$/;"	f	class:AddItemAction
done	ScenesServer/QuestAction.cpp	/^int BulletinAction::done (SceneUser* user,Vars* vars)$/;"	f	class:BulletinAction
done	ScenesServer/QuestAction.cpp	/^int LogAction::done (SceneUser* user,Vars* vars)$/;"	f	class:LogAction
done	ScenesServer/QuestAction.cpp	/^int MainMenuAction::done (SceneUser* user,Vars* vars)$/;"	f	class:MainMenuAction
done	ScenesServer/QuestAction.cpp	/^int MenuAction::done (SceneUser* user,Vars* vars)$/;"	f	class:MenuAction
done	ScenesServer/QuestAction.cpp	/^int Notify1Action::done (SceneUser* user,Vars* vars)$/;"	f	class:Notify1Action
done	ScenesServer/QuestAction.cpp	/^int NotifyAction::done (SceneUser* user,Vars* vars)$/;"	f	class:NotifyAction
done	ScenesServer/QuestAction.cpp	/^int RemoveItemAction::done (SceneUser* user,Vars* vars)$/;"	f	class:RemoveItemAction
done	ScenesServer/QuestAction.cpp	/^int SubMenuAction::done (SceneUser* user,Vars* vars)$/;"	f	class:SubMenuAction
done	ScenesServer/QuestAction.cpp	/^int TraceLogAction::done (SceneUser* user,Vars* vars)$/;"	f	class:TraceLogAction
done	ScenesServer/QuestAction.h	/^  int done (SceneUser* user,Vars* vars)$/;"	f	class:CountrysVarAction
done	ScenesServer/QuestAction.h	/^  int done (SceneUser* user,Vars* vars)$/;"	f	class:GlobalAction
done	ScenesServer/QuestAction.h	/^  int done (SceneUser* user,Vars* vars)$/;"	f	class:VarAction
doubleexp_obj	ScenesServer/zObject.h	/^    DWORD doubleexp_obj;$/;"	m	class:EquipPack
doubleexp_obj_time	ScenesServer/zObject.h	/^    DWORD doubleexp_obj_time;$/;"	m	class:EquipPack
doubletime	base/CharBase.h	/^  DWORD doubletime;          \/\/\/ÂèåÂÄçÁâ©ÂìÅÂâ©‰ΩôÊó∂Èó¥$/;"	m	struct:CharBase
doublexp	ScenesServer/zObject.h	/^  BYTE doublexp; \/\/x%ÂèåÂÄçÁªèÈ™å    $/;"	m	class:Equips
downNum	base/zMisc.h	/^    unsigned int downNum;$/;"	m	struct:odds_t
dpallattrib	ScenesServer/ScenePk.h	/^      SWORD dpallattrib; \/\/ ÊâÄÊúâÂ±ûÊÄß‰∏ãÈôçÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
dpdam	ScenesServer/ScenePk.h	/^      SWORD dpdam;    \/\/Áâ©ÁêÜÊîªÂáªÂáèÂ∞ëÂõ∫ÂÆöÊï∞ÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
dpdam	ScenesServer/zObject.h	/^      BYTE dpdam; \/\/Áâ©ÁêÜ‰º§ÂÆ≥ÂáèÂ∞ë%x$/;"	m	struct:Equips::__anon174::__anon175
dpdam	base/Object.h	/^			WORD dpdam; \/\/ŒÔ¿Ì…À∫¶ºı…Ÿx%%$/;"	m	struct:t_Object::__anon59::__anon60
dpdamp	ScenesServer/ScenePk.h	/^      SWORD dpdamp;    \/\/Áâ©ÁêÜÊîªÂáªÂáèÂ∞ëÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
dpdef	ScenesServer/ScenePk.h	/^      SWORD dpdef;    \/\/Áâ©ÁêÜÈò≤Âæ°ÂáèÂ∞ëÂõ∫ÂÆöÊï∞ÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
dpdefp	ScenesServer/ScenePk.h	/^      SWORD dpdefp;    \/\/Áâ©ÁêÜÈò≤Âæ°ÂáèÂ∞ëÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
dpintmen	ScenesServer/ScenePk.h	/^      SWORD dpintmen;   \/\/ Êô∫ÂäõÁ≤æÁ•ûÈôç‰ΩéÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
dpstrdex	ScenesServer/ScenePk.h	/^      SWORD dpstrdex;   \/\/ ÂäõÈáèÊïèÊç∑Èôç‰ΩéÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
dragonIndex	tmpcode/commond.h	/^		BYTE dragonIndex;      \/\/¡˙≥Ë–Ú∫≈$/;"	m	struct:stRet32AttentionDragonUserCmd::__anon375
dragonIndex	tmpcode/commond.h	/^	BYTE dragonIndex;       \/\/¡˙≥Ë–Ú∫≈$/;"	m	struct:stNotifyBetDragonFightUserCmd
dragonName	tmpcode/commond.h	/^		char dragonName[MAX_NAMESIZE]; \/\/¡˙µƒ√˚◊÷$/;"	m	struct:stRet32NameListUserCmd::__anon373
dragonName	tmpcode/commond.h	/^	char dragonName[10];    \/\/¡˙≥Ë√˚◊÷$/;"	m	struct:stNotifyBetDragonFightUserCmd
dragonName	tmpcode/commond.h	/^	char dragonName[MAX_NAMESIZE];$/;"	m	struct:stNotifyTop2DragonUserCmd
dragonName	tmpcode/commond.h	/^        char dragonName[MAX_NAMESIZE]; $/;"	m	struct:stChangeNameDragonUserCmd
dragonPower	tmpcode/commond.h	/^			WORD dragonPower;               \/\/¡˙…Ò÷Æ¡¶ $/;"	m	struct:t_MainUserData::__anon220::__anon221
draw	tmpcode/commond.h	/^	bool draw;\/\/true“—¡Ï»°£¨false√ª¡Ï$/;"	m	struct:stSendDailyBoxAwardResultUserCmd
drawCards	ScenesServer/CardPk.cpp	/^bool zCard::drawCards(DWORD num)$/;"	f	class:zCard
drawFlags	tmpcode/commond.h	/^	BYTE drawFlags;\/\/7- «∑Ò◊‘∂Ø‘“÷È$/;"	m	struct:HappyCardBoxAutoCfg
drawOneCard	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::drawOneCard(DWORD userID, std::vector<DWORD> &lib)$/;"	f	class:ChallengeGame
dread	ScenesServer/SceneEntryPk.h	/^	bool dread;			\/\/\/ sky ÊÅêÊÉß$/;"	m	struct:SceneEntryPk
dreadProcess	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::dreadProcess()$/;"	f	class:SceneNpc
dreadProcess	ScenesServer/SceneUser.cpp	/^void SceneUser::dreadProcess()$/;"	f	class:SceneUser
drinkName	tmpcode/commond.h	/^	 char drinkName[MAX_NAMESIZE];$/;"	m	struct:stOtherDrinkBarCmd
drinkSize	tmpcode/commond.h	/^	WORD drinkSize;         \/\/æ∆µƒ»›¡ø£ª1–°£ª2÷–£ª3¥Û$/;"	m	struct:stSendDrunkStateGouhuoUserCmd
drinkThisID	tmpcode/commond.h	/^	DWORD drinkThisID;	\/\/æ∆tempID£ª$/;"	m	struct:stReqDrinkGouhuoUserCmd
driverID	tmpcode/commond.h	/^	DWORD driverID;         \/\/º› ª‘±$/;"	m	struct:t_MapTankData
driverID	tmpcode/commond.h	/^	DWORD driverID;   \/\/“∆Ωª∫Ûº› ª‘±µƒ¡Ÿ ±ID$/;"	m	struct:stTransferTankDriverPowerCmd
driverID	tmpcode/commond.h	/^	DWORD driverID;$/;"	m	struct:stRequestNineScreenSeptMemberCmd
driverTempID	tmpcode/commond.h	/^	DWORD driverTempID;     \/\/∑¢∆»Àµƒtempid$/;"	m	struct:st_DriveAwayHouseUserCmd
dropOneRandomCardFromHandSlot	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::dropOneRandomCardFromHandSlot(DWORD userID)$/;"	f	class:ChallengeGame
dropSendInfo	base/zDatabase.h	/^    DWORD dropSendInfo;$/;"	m	struct:zObjectB
dropTime	ScenesServer/SceneUser.h	/^    DWORD dropTime;\/\/ÂÆ¢Êà∑Á´Ø‰∏æÊä•Â§ñÊåÇÂêé,ÈöèÊú∫Êñ≠Á∫øÁöÑÊó∂Èó¥$/;"	m	struct:SceneUser
drop_num	ScenesServer/zObject.h	/^    int drop_num;$/;"	m	struct:DropFromPack::Param
drop_odds	ScenesServer/SceneNpc.cpp	/^int drop_odds(WORD player_level,WORD npc_level,DWORD npc_kind)$/;"	f
dropweapon	ScenesServer/SceneEntryPk.h	/^    bool dropweapon;   \/\/\/ Áº¥Ê¢∞$/;"	m	struct:SceneEntryPk
drunkLeftTime	tmpcode/commond.h	/^	WORD  drunkLeftTime;	\/\/æ∆◊Ì £”‡ ±º‰£ªWORD(-1)±Í ∂∑«ÛÙª≥…‘±$/;"	m	struct:stInfoGouhuoUserCmd
dst	ScenesServer/CardManager.cpp	/^    stObjectLocation dst;$/;"	m	class:UserCardComparePos
dst	ScenesServer/ObjectManager.cpp	/^    stObjectLocation dst;$/;"	m	class:UserObjectComparePos
dst	base/Command.h	/^    stObjectLocation  dst;  \/**< Áâ©ÂìÅÁõÆÁöÑ‰ΩçÁΩÆ Â¶ÇÊûúÁõÆÁöÑ‰ΩçÁΩÆ‰∏äÊúâÁâ©ÂìÅÔºåÂàô‰∫§Êç¢*\/$/;"	m	struct:Cmd::stSwapObjectPropertyUserCmd
dst	base/Command.h	/^    stObjectLocation  dst;  \/**< Áâ©ÂìÅÁõÆÁöÑ‰ΩçÁΩÆ*\/$/;"	m	struct:Cmd::stSplitObjectPropertyUserCmd
dst	base/HeroCardCmd.h	/^	stObjectLocation  dst;	    \/\/ƒø±ÍŒª÷√–≈œ¢$/;"	m	struct:Cmd::stMoveGameCardUserCmd
dst	base/HeroCardCmd.h	/^	stObjectLocation  dst;	    \/\/ƒø±ÍŒª÷√–≈œ¢$/;"	m	struct:Cmd::stRetMoveGameCardUserCmd
dst	tmpcode/commond.h	/^		stObjectLocation	dst;	\/**< ŒÔ∆∑ƒøµƒŒª÷√*\/$/;"	m	struct:stSplitObjectPropertyUserCmd
dst	tmpcode/commond.h	/^		stObjectLocation    dst;    \/**< ŒÔ∆∑ƒøµƒŒª÷√ »Áπ˚ƒøµƒŒª÷√…œ”–ŒÔ∆∑£¨‘ÚΩªªª*\/$/;"	m	struct:stEquipMaskPropertyUserCmd
dst	tmpcode/commond.h	/^		stObjectLocation    dst;    \/**< ŒÔ∆∑ƒøµƒŒª÷√ »Áπ˚ƒøµƒŒª÷√…œ”–ŒÔ∆∑£¨‘ÚΩªªª*\/$/;"	m	struct:stSwapObjectPropertyUserCmd
dst	tmpcode/commond.h	/^    stObjectLocation dst;$/;"	m	struct:suitElement
dstID	base/BroadCommand.h	/^      WORD dstID;$/;"	m	struct:Cmd::BroadServer::t_restart_ServerEntry_NotifyOther
dstID	base/SuperCommand.h	/^      WORD dstID;$/;"	m	struct:Cmd::Super::t_restart_ServerEntry_NotifyOther
dstMap	ScenesServer/SceneNpcAI.h	/^  char dstMap[32];$/;"	m	class:NpcAIController
dstPos	ScenesServer/SceneNpcAI.h	/^  zPos dstPos;$/;"	m	class:NpcAIController
dstReached	ScenesServer/SceneNpcAI.cpp	/^bool NpcAIController::dstReached()$/;"	f	class:NpcAIController
dst_name	base/SessionCommand.h	/^      BYTE dst_name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_gmCommand_SceneSession
dst_name	base/SessionCommand.h	/^      BYTE dst_name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_privateChat_SceneSession
dump	base/xml/xml_node.h	/^		int dump(std::ostream& os, int deep = 0) const$/;"	f	class:xml_node
dump	base/xml/xml_node.h	/^		virtual int dump(std::ostream& os, int deep = 0) const {return false;}$/;"	f	class:xml_node_base
dump	base/xml/xml_node_container.h	/^	    int dump(std::ostream& os, int deep =0) const$/;"	f	class:detail::xml_node_map_container
dump	base/xml/xml_node_container.h	/^	    int dump(std::ostream& os, int deep =0) const$/;"	f	class:detail::xml_node_seq_container
dump	base/xml/xml_parser_generator.h	/^	virtual void dump(std::ostream& os, int deep = 0) { }$/;"	f	class:xml_parser_generator_base
dump	base/xml/xml_parser_generator.h	/^	virtual void dump(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
dump	base/xml/xml_parser_generator.h	/^	virtual void dump(std::ostream& os, int deep = 0)$/;"	f	class:xml_prop_parser_generator
dump	base/zProperties.h	/^	void dump(std::ostream &out)$/;"	f	class:zProperties
dump_end_parenthese	base/xml/xml_utility.h	/^    inline void dump_end_parenthese(const std::string& name, std::ostream& os, int node_flag, int deep)$/;"	f	namespace:detail
dump_flag	tools/xmlpg.cpp	/^    int dump_flag;$/;"	m	struct:Args
dump_properties	base/xml/xml_parser_generator.h	/^	virtual void dump_properties(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
dump_properties	base/xml/xml_parser_generator.h	/^	virtual void dump_properties(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_seq_parser_generator
dump_properties	base/xml/xml_parser_generator.h	/^	virtual void dump_properties(std::ostream& os, int deep =0)$/;"	f	class:xml_node_map_parser_generator
dump_properties	base/xml/xml_parser_generator.h	/^	virtual void dump_properties(std::ostream& os, int deep =0)$/;"	f	class:xml_node_set_parser_generator
dump_subnodes	base/xml/xml_parser_generator.h	/^	virtual void dump_subnodes(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
dupIndex	GatewayServer/GateUser.h	/^	unsigned short dupIndex;$/;"	m	class:GateUser
dupIndex	base/SceneCommand.h	/^	  unsigned short dupIndex;$/;"	m	struct:Cmd::Scene::t_ForwardScene_dupChange
dupIndex	base/SceneCommand.h	/^	  unsigned short dupIndex;$/;"	m	struct:Cmd::Scene::t_Nine_dir_ForwardScene
dupIndex	base/SceneCommand.h	/^	  unsigned short dupIndex;$/;"	m	struct:Cmd::Scene::t_Nine_rdir_ForwardScene
dupIndex	base/zSceneEntry.h	/^	unsigned short dupIndex;$/;"	m	struct:zSceneEntry
dupMapList	ScenesServer/ScenesServer.cpp	/^std::set<DWORD> dupMapList;$/;"	v
dur	base/Card.h	/^	DWORD dur;		    \/\/ƒÕæ√∂»$/;"	m	struct:t_Card
dur	base/Object.h	/^	DWORD dur; 	\/\/µ±«∞ƒÕæ√∂»$/;"	m	struct:t_Object
dur	base/zDatabase.h	/^    DWORD dur;		    \/\/ƒÕæ√$/;"	m	struct:CardBase
dur	base/zDatabase.h	/^    DWORD dur;		    \/\/ƒÕæ√$/;"	m	struct:zCardB
durability	base/zDatabase.h	/^    DWORD durability;$/;"	m	struct:zObjectB
durpoint	base/Object.h	/^	WORD durpoint; \/\/ª÷∏¥◊∞±∏ƒÕæ√∂»µ„ ˝$/;"	m	struct:t_Object
dursecond	base/Object.h	/^	WORD dursecond; \/\/ª÷∏¥◊∞±∏ƒÕæ√∂» ±º‰µ•Œª$/;"	m	struct:t_Object
dvalue	ScenesServer/ScenePk.h	/^      DWORD  dvalue;            \/\/\/ ‰º§ÂÆ≥ÂÄº$/;"	m	struct:PkValue::__anon159::__anon160
dvalue	ScenesServer/ScenePk.h	/^      SWORD dvalue;    \/\/‰º§ÂÆ≥ÂÄºÂ¢ûÂä†Âõ∫ÂÆöÊï∞ÂÄº1$/;"	m	struct:SkillState::__anon155::__anon156
dvaluep	ScenesServer/ScenePk.h	/^      DWORD  dvaluep;          \/\/\/ ‰º§ÂÆ≥ÂÄºÂ¢ûÂä†ÁôæÂàÜÊØî$/;"	m	struct:PkValue::__anon159::__anon160
dvaluep	ScenesServer/ScenePk.h	/^      SWORD dvaluep;    \/\/‰º§ÂÆ≥ÂÄºÂ¢ûÂä†x%2$/;"	m	struct:SkillState::__anon155::__anon156
dwAccid	base/BillCommand.h	/^      DWORD dwAccid;$/;"	m	struct:Cmd::Bill::t_Bill_ForwardBill
dwAccid	base/BillCommand.h	/^      DWORD dwAccid;$/;"	m	struct:Cmd::Bill::t_Bill_ForwardUser
dwAccid	base/BillCommand.h	/^      DWORD dwAccid;$/;"	m	struct:Cmd::Bill::t_Scene_ForwardBill
dwAccid	tmpcode/commond.h	/^	DWORD dwAccid;$/;"	m	struct:stRtnSoundTokenCmd
dwAction	base/Command.h	/^  DWORD dwAction;        \/\/ Ë°åÂä®Âäõ$/;"	m	struct:Cmd::stUnionBaseInfoCmd
dwAction	base/SessionCommand.h	/^      int dwAction; \/\/  ËµÑÈáë$/;"	m	struct:Cmd::Session::t_OpUnionAction_SceneSession
dwActionPoint	base/SessionCommand.h	/^      DWORD dwActionPoint;    \/\/\/ Ë°åÂä®Âäõ$/;"	m	struct:Cmd::Session::t_sendUserRelationID
dwActionPoint	base/Union.h	/^  DWORD    dwActionPoint;        \/\/ Â∏Æ‰ºöË°åÂä®Âäõ$/;"	m	struct:UnionDef::stUnionInfo
dwAddExp	tmpcode/commond.h	/^	 DWORD dwAddExp;    \/\/‘ˆº”µƒ¡È∆˜æ≠—È$/;"	m	struct:stNotifyAddExpLingQiUserCmd
dwAddSpeed	tmpcode/commond.h	/^    DWORD dwAddSpeed;               \/\/ƒß∑®◊˘∆Ô‘ˆº”µƒÀŸ∂»$/;"	m	struct:stMagicHorseLastTimeCmd
dwAdditID	tmpcode/commond.h	/^	DWORD dwAdditID;    \/\/∏®¡œŒ®“ªid$/;"	m	struct:stReqBuildMagicForgeObject
dwAllyCountryID	base/Command.h	/^  DWORD dwAllyCountryID; \/\/ Ë¢´ÈÇÄËØ∑ÁöÑÂõΩÂÆ∂$/;"	m	struct:Cmd::stReqCountryAlly
dwAllyCountryID	base/Command.h	/^  DWORD dwAllyCountryID;$/;"	m	struct:Cmd::stCancelCountryAlly
dwAllyCountryID	base/Command.h	/^  DWORD dwAllyCountryID;$/;"	m	struct:Cmd::stRtnCountryAllyInfo
dwAllyCountryID	base/Command.h	/^  DWORD dwAllyCountryID;$/;"	m	struct:Cmd::stUpdateCountryAlly
dwAllyCountryID	base/SessionCommand.h	/^      DWORD dwAllyCountryID;$/;"	m	struct:Cmd::Session::_allyItem
dwAllyUnionID	tmpcode/commond.h	/^	DWORD dwAllyUnionID [2];$/;"	m	struct:stUpdateUnionAlly
dwAllyUnionID	tmpcode/commond.h	/^	DWORD dwAllyUnionID; \/\/ ±ª—˚«Îµƒæ¸Õ≈$/;"	m	struct:stReqUnionAlly
dwAllyUnionID	tmpcode/commond.h	/^	DWORD dwAllyUnionID;$/;"	m	struct:_UnionAllyInfo
dwAllyUnionID	tmpcode/commond.h	/^	DWORD dwAllyUnionID;$/;"	m	struct:stCancelUnionAlly
dwAnnoyFail	base/Command.h	/^  DWORD dwAnnoyFail;  \/\/ È™öÊâ∞ÂõΩÊàòÂ§±Ë¥•Ê¨°Êï∞$/;"	m	struct:Cmd::stDareStat
dwAnnoyWin	base/Command.h	/^  DWORD dwAnnoyWin;  \/\/ È™öÊâ∞ÂõΩÊàòËÉúÂà©Ê¨°Êï∞$/;"	m	struct:Cmd::stDareStat
dwAnswerID	base/SessionCommand.h	/^		DWORD dwAnswerID;						\/\/\/ sky ÂõûÁ≠îËÄÖID$/;"	m	struct:Cmd::Session::t_Team_AnswerTeam
dwAnswerTempID	base/Command.h	/^  DWORD dwAnswerTempID;  \/**< ÂõûÁ≠îËÄÖ *\/$/;"	m	struct:Cmd::stAnswerTradeUserCmd
dwAnswerTempID	base/Command.h	/^  DWORD dwAnswerTempID;  \/**< ÂõûÁ≠îËÄÖ *\/$/;"	m	struct:Cmd::stBeginTradeUserCmd
dwAnswerTempID	base/Command.h	/^  DWORD dwAnswerTempID;  \/**< ÂõûÁ≠îËÄÖ *\/$/;"	m	struct:Cmd::stRequestTradeUserCmd
dwAnswerTempID	tmpcode/commond.h	/^	DWORD dwAnswerTempID;	\/**< ªÿ¥’ﬂ *\/$/;"	m	struct:stAnswerBeTradeImageUserCmd
dwAnswerTempID	tmpcode/commond.h	/^	DWORD dwAnswerTempID;	\/**< ªÿ¥’ﬂ *\/$/;"	m	struct:stAnswerTradeUserCmd
dwAnswerTempID	tmpcode/commond.h	/^	DWORD dwAnswerTempID;	\/**< ªÿ¥’ﬂ *\/$/;"	m	struct:stBeginDecayLingQiCmd
dwAnswerTempID	tmpcode/commond.h	/^	DWORD dwAnswerTempID;	\/**< ªÿ¥’ﬂ *\/$/;"	m	struct:stBeginTradeUserCmd
dwAnswerTempID	tmpcode/commond.h	/^	DWORD dwAnswerTempID;	\/**< ªÿ¥’ﬂ *\/$/;"	m	struct:stGetBeTradeImageUserCmd
dwAnswerTempID	tmpcode/commond.h	/^	DWORD dwAnswerTempID;	\/**< ªÿ¥’ﬂ *\/$/;"	m	struct:stReqDecayToOtherLingQiCmd
dwAnswerTempID	tmpcode/commond.h	/^	DWORD dwAnswerTempID;	\/**< ªÿ¥’ﬂ *\/$/;"	m	struct:stRequestTradeUserCmd
dwAnswerTempID	tmpcode/commond.h	/^	DWORD dwAnswerTempID;	\/\/ªÿ¥’ﬂ$/;"	m	struct:stAnswerDecayLingQiCmd
dwAnswerTempID	tmpcode/commond.h	/^    DWORD dwAnswerTempID;   \/**< ªÿ¥’ﬂ *\/$/;"	m	struct:stAnswerRideJoinUserCmd
dwAnswerTempID	tmpcode/commond.h	/^    DWORD dwAnswerTempID;   \/**< ªÿ¥’ﬂ *\/$/;"	m	struct:stRequestJoinRideUserCmd
dwAnswerUserID	base/Command.h	/^  DWORD dwAnswerUserID;    \/\/ ÂõûÁ≠îËÄÖID$/;"	m	struct:Cmd::stAnswerTeamUserCmd
dwAnswerUserID	base/Command.h	/^  DWORD dwAnswerUserID;    \/\/ ÂõûÁ≠îËÄÖID,ËøîÂõûÁªôÂÆ¢Êà∑Á´ØÊòØËØ∑Ê±ÇËÄÖID$/;"	m	struct:Cmd::stRequestTeamUserCmd
dwArea	tmpcode/commond.h	/^	DWORD dwArea;$/;"	m	struct:stRequestCountryTax
dwAreaID	base/SessionCommand.h	/^      DWORD dwAreaID;     \/\/ Â±ûÂú∞ID:Âè™Âê´ÊúâËÆ°ÁÆóÂá∫Êù•ÁöÑREALIDÔºåÈúÄË¶ÅÂú∫ÊôØÈÄöËøáCOUNTRYIDËøõË°åËÆ°ÁÆó$/;"	m	struct:Cmd::Session::t_clearUnionManor_SceneSession
dwAreaID	base/SessionCommand.h	/^      DWORD dwAreaID;     \/\/ Â±ûÂú∞ID:Âè™Âê´ÊúâËÆ°ÁÆóÂá∫Êù•ÁöÑREALIDÔºåÈúÄË¶ÅÂú∫ÊôØÈÄöËøáCOUNTRYIDËøõË°åËÆ°ÁÆó$/;"	m	struct:Cmd::Session::t_returnEnterUnionManor_SceneSession
dwAreaID	base/SessionCommand.h	/^      DWORD dwAreaID;     \/\/ ÊàòÂú∫$/;"	m	struct:Cmd::Session::t_setCountryWar_SceneSession
dwArmyID	base/Command.h	/^  DWORD dwArmyID;$/;"	m	struct:Cmd::stArmyBaseInfo
dwArmyID	base/Command.h	/^  DWORD dwArmyID;$/;"	m	struct:Cmd::stChangeArmyNameUserCmd
dwArmyID	base/Command.h	/^  DWORD dwArmyID;$/;"	m	struct:Cmd::stRemoveArmyUserCmd
dwArmyID	base/Command.h	/^  DWORD dwArmyID;$/;"	m	struct:Cmd::stReqArmySpecUserCmd
dwArmyState	ScenesServer/SceneUser.h	/^    DWORD dwArmyState; \/\/ Âú®ÂÜõÈòü‰∏≠ÁöÑËÅå‰Ωç$/;"	m	struct:SceneUser
dwAskerTempID	base/Command.h	/^  DWORD dwAskerTempID;  \/**< ËØ∑Ê±ÇËÄÖ *\/$/;"	m	struct:Cmd::stAnswerTradeUserCmd
dwAskerTempID	base/Command.h	/^  DWORD dwAskerTempID;  \/**< ËØ∑Ê±ÇËÄÖ *\/$/;"	m	struct:Cmd::stBeginTradeUserCmd
dwAskerTempID	base/Command.h	/^  DWORD dwAskerTempID;  \/**< ËØ∑Ê±ÇËÄÖ *\/$/;"	m	struct:Cmd::stRequestTradeUserCmd
dwAskerTempID	tmpcode/commond.h	/^	DWORD dwAskerTempID;	\/**< «Î«Û’ﬂ *\/$/;"	m	struct:stAnswerBeTradeImageUserCmd
dwAskerTempID	tmpcode/commond.h	/^	DWORD dwAskerTempID;	\/**< «Î«Û’ﬂ *\/$/;"	m	struct:stAnswerTradeUserCmd
dwAskerTempID	tmpcode/commond.h	/^	DWORD dwAskerTempID;	\/**< «Î«Û’ﬂ *\/$/;"	m	struct:stBeginDecayLingQiCmd
dwAskerTempID	tmpcode/commond.h	/^	DWORD dwAskerTempID;	\/**< «Î«Û’ﬂ *\/$/;"	m	struct:stBeginTradeUserCmd
dwAskerTempID	tmpcode/commond.h	/^	DWORD dwAskerTempID;	\/**< «Î«Û’ﬂ *\/$/;"	m	struct:stGetBeTradeImageUserCmd
dwAskerTempID	tmpcode/commond.h	/^	DWORD dwAskerTempID;	\/**< «Î«Û’ﬂ *\/$/;"	m	struct:stReqDecayToOtherLingQiCmd
dwAskerTempID	tmpcode/commond.h	/^	DWORD dwAskerTempID;	\/**< «Î«Û’ﬂ *\/$/;"	m	struct:stRequestTradeUserCmd
dwAskerTempID	tmpcode/commond.h	/^	DWORD dwAskerTempID;	\/\/«Î«Û’ﬂ$/;"	m	struct:stAnswerDecayLingQiCmd
dwAskerTempID	tmpcode/commond.h	/^    DWORD dwAskerTempID;    \/**< «Î«Û’ﬂ *\/$/;"	m	struct:stAnswerRideJoinUserCmd
dwAskerTempID	tmpcode/commond.h	/^    DWORD dwAskerTempID;    \/**< «Î«Û’ﬂ *\/$/;"	m	struct:stRequestJoinRideUserCmd
dwAttCountryID	base/SessionCommand.h	/^      DWORD dwAttCountryID;$/;"	m	struct:Cmd::Session::t_countryDareResult_SceneSession
dwAttThisID	base/HeroCardCmd.h	/^	DWORD dwAttThisID;      $/;"	m	struct:Cmd::stCardAttackMagicUserCmd
dwAttThisID	base/HeroCardCmd.h	/^	DWORD dwAttThisID;      $/;"	m	struct:Cmd::stRetCardAttackFailUserCmd
dwAttUserID	base/SessionCommand.h	/^      DWORD dwAttUserID;      \/\/ ÊâìÊ≠ªÂ§ßÂ∞ÜÂÜõÁöÑÁé©ÂÆ∂ID$/;"	m	struct:Cmd::Session::t_countryDareResult_SceneSession
dwAttackerID	ScenesServer/SkillStatusManager.h	/^  DWORD dwAttackerID;	    \/\/Ω«…´CHARID$/;"	m	struct:SkillStatusElement
dwAttackerID	tmpcode/commond.h	/^	DWORD dwAttackerID;     \/**<π•ª˜’ﬂ¡Ÿ ±±‡∫≈*\/$/;"	m	struct:stToAttAttackMagicUserCmd
dwAttackerID	tmpcode/commond.h	/^	DWORD dwAttackerID;     \/**<π•ª˜’ﬂ¡Ÿ ±±‡∫≈*\/$/;"	m	struct:stToDefAttackMagicUserCmd
dwAttackerID	tmpcode/commond.h	/^	DWORD dwAttackerID;     \/**<π•ª˜’ﬂ¡Ÿ ±±‡∫≈*\/$/;"	m	struct:stToNineAttackMagicUserCmd
dwAttackerID	tmpcode/commond.h	/^	DWORD dwAttackerID;     \/**<π•ª˜’ﬂ¡Ÿ ±±‡∫≈*\/$/;"	m	struct:stToNineShowMagicUserCmd
dwAwardId	tmpcode/commond.h	/^	DWORD dwAwardId;   \/\/Ω±¿¯ŒÔ∆∑id$/;"	m	struct:stRtnGRecommendedBountyUserCmd
dwBalance	base/BillCommand.h	/^      DWORD dwBalance;      \/\/\/ ÁÇπÂç°‰ΩôÈ¢ù$/;"	m	struct:Cmd::Bill::t_Redeem_Gold_Gateway
dwBalance	base/BillCommand.h	/^      DWORD dwBalance;      \/\/\/ ÁÇπÂç°‰ΩôÈ¢ù$/;"	m	struct:Cmd::Bill::t_Redeem_MonthCard_Gateway
dwBalance	base/Command.h	/^  DWORD dwBalance;      \/\/\/ ÁÇπÂç°‰ΩôÈ¢ù$/;"	m	struct:Cmd::stRedeemGold
dwBalance	base/Command.h	/^  DWORD dwBalance;      \/\/\/ ÁÇπÂç°‰ΩôÈ¢ù$/;"	m	struct:Cmd::stRedeemMonthCard
dwBalance	base/Command.h	/^  DWORD dwBalance; \/\/ ÂèØÈ¢ÜÂèñÁöÑ‰ΩôÈ¢ù$/;"	m	struct:Cmd::stRtnRecommendedBountyUserCmd
dwBalance	base/Command.h	/^  DWORD dwBalance; \/\/ ÂèØÈ¢ÜÂèñÁöÑÈáëÈ¢ù$/;"	m	struct:Cmd::stRtnRecommendBountyUserCmd
dwBalance	tmpcode/commond.h	/^	DWORD dwBalance;            \/\/\/ µ„ø®”‡∂Ó$/;"	m	struct:stRedeemGold
dwBalance	tmpcode/commond.h	/^	DWORD dwBalance;  \/\/ µ„ø®”‡∂Ó(≥…π¶«Èøˆœ¬≤≈”––ß)$/;"	m	struct:stBuyWeekAssuranceResult
dwBallot	base/Command.h	/^  DWORD dwBallot; \/\/ ÈÄâÈ°πÂΩìÂâçÊäïÁ•®Êï∞$/;"	m	struct:Cmd::stVoteItem
dwBeTradeTempID	tmpcode/commond.h	/^	DWORD dwBeTradeTempID;$/;"	m	struct:stRequestTradeNewUserCmd
dwBloom	tmpcode/commond.h	/^	DWORD dwBloom;                          \/\/ º“◊Â∑±»›∂»$/;"	m	struct:stSeptSortInfo
dwBloom	tmpcode/commond.h	/^	DWORD dwBloom;                          \/\/ ”∂±¯Õ≈∑±»›∂»$/;"	m	struct:stUnionSortInfo
dwBloom	tmpcode/commond.h	/^	DWORD dwBloom;                  \/\/ º“◊Â∑±»›∂»$/;"	m	struct:stSeptBaseInfoCmd
dwBloom	tmpcode/commond.h	/^	DWORD dwBloom; \/\/ ”∂±¯Õ≈∑±»›∂»$/;"	m	struct:stUnionBaseInfoCmd
dwBodyColorCustom	ScenesServer/SceneUser.h	/^    DWORD dwBodyColorCustom;$/;"	m	struct:SceneUser
dwBodyColorCustom	base/Command.h	/^  DWORD dwBodyColorCustom;\/\/Êç¢Ëâ≤ÁöÑÈ¢úËâ≤$/;"	m	struct:Cmd::stBodyColorPropertyUserCmd
dwBodyColorSystem	ScenesServer/SceneUser.h	/^    DWORD dwBodyColorSystem;$/;"	m	struct:SceneUser
dwBodyID	ScenesServer/SceneUser.h	/^    DWORD dwBodyID;$/;"	m	struct:SceneUser
dwBodyID	base/Command.h	/^  DWORD dwBodyID;            \/\/\/ Ë∫´‰ΩìÁâ©ÂìÅID$/;"	m	struct:Cmd::t_MapUserSculpt
dwBodyID	tmpcode/commond.h	/^	DWORD dwBodyID;						\/\/\/ …ÌÃÂŒÔ∆∑ID$/;"	m	struct:t_MapUserSculpt
dwBodyPower	tmpcode/commond.h	/^	DWORD dwBodyPower;     \/\/ µ±«∞ÃÂ¡¶÷µ$/;"	m	struct:stNotifyUserBodyPowerUserCmd
dwBonusObjId	tmpcode/commond.h	/^	DWORD dwBonusObjId;  \/\/ Ω±¿¯ŒÔ∆∑ID$/;"	m	struct:stReturnGoodsBonusInfoCmd
dwBookThisId	tmpcode/commond.h	/^	DWORD dwBookThisId;  \/\/ ø’∞◊ ÈµƒThisID$/;"	m	struct:stWriteSkillBookUserCmd
dwBookThisId	tmpcode/commond.h	/^	DWORD dwBookThisId;  \/\/ “—≥‰¬˙æ≠—Èµƒ ÈThisID$/;"	m	struct:stChangeSkillBookUserCmd
dwBookThisId	tmpcode/commond.h	/^	DWORD dwBookThisId;  \/\/¥´≥–÷Æ Èthisid$/;"	m	struct:stAbstractChuanchengPropertyUserCmd
dwBossID	base/SessionCommand.h	/^      DWORD dwBossID; \/\/ ‰∏∫ÊåáÂÆöNPCÁöÑID: 1002  ÈæôÁùõ  1003  ËôéÈ≠Ñ  $/;"	m	struct:Cmd::Session::t_BlastGemNPC_SceneSession
dwBossID	base/SessionCommand.h	/^      DWORD dwBossID;$/;"	m	struct:Cmd::Session::t_ClearGemNPC_SceneSession
dwBossID	base/SessionCommand.h	/^      DWORD dwBossID;$/;"	m	struct:Cmd::Session::t_SummonGemNPC_SceneSession
dwBoughtPoints	tmpcode/commond.h	/^	DWORD dwBoughtPoints;  \/\/ π∫¬Ú±£œ’µ„ ˝(≥…π¶«Èøˆœ¬≤≈”––ß)$/;"	m	struct:stBuyWeekAssuranceResult
dwBrick	tmpcode/commond.h	/^	DWORD dwBrick;                  \/\/ º“◊ÂΩ◊© $/;"	m	struct:stSeptBaseInfoCmd
dwBufLen	tmpcode/commond.h	/^	DWORD dwBufLen;$/;"	m	struct:stImageVerifyImageDataUserCmd
dwBufLen	tmpcode/commond.h	/^	DWORD dwBufLen;$/;"	m	struct:stImageVerifyRetryUserCmd
dwBuildingDataID	base/Command.h	/^  DWORD dwBuildingDataID;        \/**< Âª∫Á≠ëÁâ©ÁöÑÊï∞ÊçÆID *\/$/;"	m	struct:Cmd::t_MapBuildingData
dwBuildingSkillId	tmpcode/commond.h	/^        DWORD dwBuildingSkillId;        \/\/–ﬁ¡∂÷–«±ƒ‹id£¨√ª”––ﬁ¡∂Œ™0$/;"	m	struct:stRetPotentialSkillBuildUserCmd
dwCancelTime	tmpcode/commond.h	/^	DWORD dwCancelTime;  \/\/ ◊ˆ»°œ˚≤Ÿ◊˜µƒ ±º‰£¨time_t ±¥¡,$/;"	m	struct:stNotifyCancelTimeCmd
dwCapNum	base/Command.h	/^  DWORD dwCapNum; \/\/ ÈòüÈïø‰∫∫Êï∞$/;"	m	struct:Cmd::stArmyBaseInfo
dwCardThisId	tmpcode/commond.h	/^	DWORD dwCardThisId;  \/\/ ≥«∞Óƒßæßø®$/;"	m	struct:stEquipUpgrade2PropertyUserCmd
dwCardThisId	tmpcode/commond.h	/^	DWORD dwCardThisId;  \/\/ ≥«∞Óƒßæßø®$/;"	m	struct:stEquipUpgradePropertyUserCmd
dwChangeFaceID	ScenesServer/SceneUser.h	/^    DWORD dwChangeFaceID;        \/\/ÊòìÂÆπÂêéÁöÑNPCÁöÑÁ±ªÂûãID$/;"	m	struct:SceneUser
dwChangeFaceID	base/Command.h	/^        DWORD  dwChangeFaceID;    \/\/ÊòìÂÆπÂêéÁöÑNPCÁöÑÁ±ªÂûãID$/;"	m	struct:Cmd::stChangeFaceMapScreenUserCmd
dwChannelID	base/Command.h	/^    DWORD dwChannelID;$/;"	m	struct:Cmd::stKokChatUserCmd
dwChannelID	base/Command.h	/^  DWORD dwChannelID;$/;"	m	struct:Cmd::stChannelChatUserCmd
dwChannelID	base/Command.h	/^  DWORD dwChannelID;$/;"	m	struct:Cmd::stCreateChannelUserCmd
dwChannelID	base/Command.h	/^  DWORD dwChannelID;$/;"	m	struct:Cmd::stInvite_ChannelUserCmd
dwChannelID	base/Command.h	/^  DWORD dwChannelID;$/;"	m	struct:Cmd::stJoin_ChannelUserCmd
dwChannelID	base/Command.h	/^  DWORD dwChannelID;$/;"	m	struct:Cmd::stLeave_ChannelUserCmd
dwChannelID	base/Command.h	/^  DWORD dwChannelID;$/;"	m	struct:Cmd::stServerChannelChatUserCmd
dwChannelID	tmpcode/commond.h	/^		 DWORD dwChannelID;      \/\/¡ƒÃÏ “±‡∫≈$/;"	m	struct:stInviteGroup_ChannelUserCmd
dwChannelID	tmpcode/commond.h	/^	 DWORD dwChannelID;  \/\/ ¡ƒÃÏ “ID$/;"	m	struct:stOpenWindow_ChannelUserCmd
dwChannelID	tmpcode/commond.h	/^	 DWORD dwChannelID;$/;"	m	struct:stJoin_ChannelUserCmd
dwChannelID	tmpcode/commond.h	/^	DWORD dwChannelID;		\/\/¡ƒÃÏ “ID$/;"	m	struct:stLeave_ChannelUserCmd
dwChannelID	tmpcode/commond.h	/^	DWORD dwChannelID;$/;"	m	struct:stCreateChannelUserCmd
dwChannelID	tmpcode/commond.h	/^         DWORD dwChannelID;              \/**< ∆µµ¿ID*\/$/;"	m	struct:stKokChatUserCmd
dwChannelID	tmpcode/commond.h	/^     DWORD dwChannelID;                      \/\/¡ƒÃÏ “±‡∫≈$/;"	m	struct:stInvite_ChannelUserCmd
dwCharID	SessionServer/HeroCardManager.h	/^    DWORD dwCharID;		\/\/Ω«…´ID$/;"	m	struct:stChallengeInfo
dwCharID	base/Command.h	/^  DWORD dwCharID;$/;"	m	struct:Cmd::stCaptainBase
dwCharID	base/Command.h	/^  DWORD dwCharID;$/;"	m	struct:Cmd::stSetTechSearchUserCmd
dwCharID	base/Command.h	/^  DWORD dwCharID;$/;"	m	struct:Cmd::stWaitGenItem
dwCharID	base/Command.h	/^  DWORD dwCharID;$/;"	m	struct:Cmd::stWaitOfficialItem
dwCharID	base/Sept.h	/^  DWORD    dwCharID;                   \/\/ ª·≥§µƒΩ«…´ID$/;"	m	struct:SeptDef::stSeptInfo
dwCharID	base/Sept.h	/^  DWORD  dwCharID;        \/\/ ª·‘±Ω«…´ID$/;"	m	struct:SeptDef::stSeptMemberInfo
dwCharID	base/SessionCommand.h	/^      DWORD dwCharID;$/;"	m	struct:Cmd::Session::t_disbandSept_GateSession
dwCharID	base/SessionCommand.h	/^      DWORD dwCharID;$/;"	m	struct:Cmd::Session::t_disbandUnion_GateSession
dwCharID	base/SessionCommand.h	/^      DWORD dwCharID;$/;"	m	struct:Cmd::Session::t_fireSeptMember_SceneSession
dwCharID	base/SessionCommand.h	/^      DWORD dwCharID;$/;"	m	struct:Cmd::Session::t_fireUnionMember_SceneSession
dwCharID	base/Union.h	/^  DWORD    dwCharID;                   \/\/ Â∏Æ‰∏ªÁöÑËßíËâ≤ID$/;"	m	struct:UnionDef::stUnionInfo
dwCharID	base/Union.h	/^  DWORD  dwCharID;          \/\/ ‰ºöÂëòËßíËâ≤ID$/;"	m	struct:UnionDef::stUnionMemberInfo
dwCharType	base/Command.h	/^  DWORD   dwCharType;$/;"	m	struct:Cmd::stInvite_ChannelUserCmd
dwCharType	base/Command.h	/^  DWORD dwCharType;    \/**< ËßíËâ≤Á±ªÂûã *\/$/;"	m	struct:Cmd::stServerChannelChatUserCmd
dwCharType	base/Command.h	/^  DWORD dwCharType;$/;"	m	struct:Cmd::stChannelChatUserCmd
dwCharType	tmpcode/commond.h	/^	 DWORD   dwCharType;$/;"	m	struct:stJoin_ChannelUserCmd
dwCharType	tmpcode/commond.h	/^	DWORD dwCharType;       \/\/∆µµ¿¿‡–Õ$/;"	m	struct:stCreateChannelUserCmd
dwCharType	tmpcode/commond.h	/^     DWORD dwCharType;$/;"	m	struct:stInvite_ChannelUserCmd
dwChatColor	base/Command.h	/^  DWORD dwChatColor[8];  \/\/È¢úËâ≤ËÆæÁΩÆ$/;"	m	struct:Cmd::stSystemSettings
dwChatTime	base/Command.h	/^  DWORD dwChatTime;      \/\/ Ë∞àËØùÊó∂Èó¥$/;"	m	struct:Cmd::stServerChannelChatUserCmd
dwChatTime	base/Command.h	/^  DWORD dwChatTime;$/;"	m	struct:Cmd::stChannelChatUserCmd
dwChatType	tmpcode/commond.h	/^	 DWORD dwChatType;  \/\/ ∆µµ¿¿‡–Õ, º˚enumChatType$/;"	m	struct:stOpenWindow_ChannelUserCmd
dwChatType	tmpcode/commond.h	/^	 DWORD dwChatType;  \/\/ ∆µµ¿¿‡–Õ, º˚enumChatType$/;"	m	struct:stReqJoinChannelCmd
dwCheckID	base/SessionCommand.h	/^      DWORD dwCheckID; \/\/ ÂèëËµ∑Ê£ÄÊü•ÁöÑÁé©ÂÆ∂ID$/;"	m	struct:Cmd::Session::t_checkUserCity_SceneSession
dwCheckID	base/SessionCommand.h	/^      DWORD dwCheckID; \/\/ ÂèëËµ∑Ê£ÄÊü•ÁöÑÁé©ÂÆ∂ID$/;"	m	struct:Cmd::Session::t_checkUser_SceneSession
dwCheckedID	base/SessionCommand.h	/^      DWORD dwCheckedID; \/\/ ÂæÖÊ£ÄÊµãÁé©ÂÆ∂ÁöÑID$/;"	m	struct:Cmd::Session::t_checkUserCity_SceneSession
dwCheckedID	base/SessionCommand.h	/^      DWORD dwCheckedID; \/\/ ÂæÖÊ£ÄÊµãÁé©ÂÆ∂ÁöÑID$/;"	m	struct:Cmd::Session::t_checkUser_SceneSession
dwCity	tmpcode/commond.h	/^		DWORD dwCity; $/;"	m	struct:stReturnCountryTax::CityInfo
dwCity	tmpcode/commond.h	/^	DWORD dwCity; $/;"	m	struct:stRequestCityTax
dwCity	tmpcode/commond.h	/^	DWORD dwCity; $/;"	m	struct:stRequestTrafficTaxHistory
dwCity	tmpcode/commond.h	/^	DWORD dwCity;$/;"	m	struct:stRequestTaxHistory
dwCity	tmpcode/commond.h	/^	DWORD dwCity;$/;"	m	struct:stReturnTaxHistory
dwCity	tmpcode/commond.h	/^	DWORD dwCity;$/;"	m	struct:stReturnTrafficTaxHistory
dwCityID	base/SessionCommand.h	/^      DWORD dwCityID;  \/\/ ÊâÄÂú®ÂüéÂ∏ÇID$/;"	m	struct:Cmd::Session::t_enterUnionManor_SceneSession
dwCityID	base/SessionCommand.h	/^      DWORD dwCityID;$/;"	m	struct:Cmd::Session::t_GMCreateUnionCity_SceneSession
dwCityID	base/SessionCommand.h	/^      DWORD dwCityID;$/;"	m	struct:Cmd::Session::t_ReqArmyList_SceneSession
dwCityID	base/SessionCommand.h	/^      DWORD dwCityID;$/;"	m	struct:Cmd::Session::t_UnionCity_DareResult_SceneSession
dwCityID	base/SessionCommand.h	/^      DWORD dwCityID;$/;"	m	struct:Cmd::Session::t_UnionCity_Dare_SceneSession
dwCityID	base/SessionCommand.h	/^      DWORD dwCityID;$/;"	m	struct:Cmd::Session::t_questionUnionCity_SceneSession
dwCityID	tmpcode/commond.h	/^	DWORD dwCityID;$/;"	m	struct:stReqCriminalListInfo
dwCityID	tmpcode/commond.h	/^	DWORD dwCityID;$/;"	m	struct:stRetCriminalListInfo
dwClientID	base/Command.h	/^  DWORD dwClientID;$/;"	m	struct:Cmd::stCreateChannelUserCmd
dwClientID	tmpcode/commond.h	/^	DWORD dwClientID;$/;"	m	struct:stCreateChannelUserCmd
dwCommendCountryID	base/Command.h	/^    WORD dwCommendCountryID;$/;"	m	struct:Cmd::stRetCheckCountryUserCmd
dwCommendCountryID	tmpcode/commond.h	/^	WORD dwCommendCountryID;$/;"	m	struct:stRetCheckCountryUserCmd
dwCommitTime	base/Command.h	/^  DWORD dwCommitTime;$/;"	m	struct:Cmd::ConsignSelfHistoryType
dwCommitTime	tmpcode/commond.h	/^	DWORD dwCommitTime;$/;"	m	struct:ConsignSelfHistoryType
dwConsort	base/SessionCommand.h	/^      DWORD dwConsort;$/;"	m	struct:Cmd::Session::t_updateConsort
dwContentLen	tmpcode/commond.h	/^	DWORD dwContentLen;  \/\/ contentµƒ≥§∂»$/;"	m	struct:stRetSurveyContentUserCmd
dwContract	base/Command.h	/^  DWORD dwContract;          \/**< Âú∞Â•ëÁºñÂè∑ *\/$/;"	m	struct:Cmd::t_MapBuildingData
dwContribution	tmpcode/commond.h	/^	DWORD dwContribution;$/;"	m	struct:stRetCityHeartContribution
dwCoolSeconds	tmpcode/commond.h	/^	DWORD dwCoolSeconds;  \/\/ ∏√µ¿æﬂµƒ¿‰»¥ ±º‰(s)$/;"	m	struct:stTransportObjectConfigUserCmd
dwCount	tmpcode/commond.h	/^		DWORD dwCount;$/;"	m	struct:stReturnUserEmotionSort::__anon350
dwCount	tmpcode/commond.h	/^	DWORD dwCount;  \/\/ ≈‰÷√∏ˆ ˝, º¥œ¬√Ê ˝◊È‘™Àÿ∏ˆ ˝$/;"	m	struct:stReturnExchange4Config
dwCount	tmpcode/commond.h	/^	DWORD dwCount;  \/\/ ≈‰÷√∏ˆ ˝, º¥œ¬√Ê ˝◊È‘™Àÿ∏ˆ ˝$/;"	m	struct:stReturnExchange5Config
dwCount	tmpcode/commond.h	/^	DWORD dwCount;  \/\/ …Ã∆∑∏ˆ ˝$/;"	m	struct:stReturnGoodsWithBonusCmd
dwCountry	base/Command.h	/^  DWORD dwCountry;  \/\/ ÂõΩÂÆ∂ID$/;"	m	struct:Cmd::stDareStat
dwCountry	base/Command.h	/^  DWORD dwCountry; \/\/ ÊïåÂØπÂõΩÂÆ∂ID$/;"	m	struct:Cmd::stSetCountryDareUserCmd
dwCountry	base/Command.h	/^  DWORD dwCountry;$/;"	m	struct:Cmd::stCountryStar
dwCountry	base/Command.h	/^  DWORD dwCountry;$/;"	m	struct:Cmd::stFiskCountryUserCmd
dwCountry	base/Command.h	/^  DWORD dwCountry;$/;"	m	struct:Cmd::stSetTaxCountryUserCmd
dwCountry	base/Command.h	/^  DWORD dwCountry;$/;"	m	struct:Cmd::stTaxCountryUserCmd
dwCountry	base/SessionCommand.h	/^      DWORD dwCountry; \/\/\/ Ë¶ÅÂéªÁöÑÂõΩÂÆ∂ID$/;"	m	struct:Cmd::Session::t_transDareCountry_SceneSession
dwCountry	base/SessionCommand.h	/^      DWORD dwCountry;$/;"	m	struct:Cmd::Session::t_ContributeCountry_SceneSession
dwCountry	base/SessionCommand.h	/^      DWORD dwCountry;$/;"	m	struct:Cmd::Session::t_Session_ForwardCountry
dwCountry	tmpcode/commond.h	/^	DWORD dwCountry; \/\/À˘‘⁄π˙º“ID$/;"	m	struct:stRetOccupiedNpcNpcDare
dwCountry	tmpcode/commond.h	/^	DWORD dwCountry;$/;"	m	struct:stReqCityMinxinRecCmd
dwCountry	tmpcode/commond.h	/^	DWORD dwCountry;$/;"	m	struct:stRequestCountryTax
dwCountry	tmpcode/commond.h	/^	DWORD dwCountry;$/;"	m	struct:stRequestTaxHistory
dwCountry	tmpcode/commond.h	/^	DWORD dwCountry;$/;"	m	struct:stRequestTrafficTaxHistory
dwCountry	tmpcode/commond.h	/^	DWORD dwCountry;$/;"	m	struct:stRetCityMinxinRecCmd
dwCountry	tmpcode/commond.h	/^	DWORD dwCountry;$/;"	m	struct:stReturnCountryTax
dwCountry	tmpcode/commond.h	/^	DWORD dwCountry;$/;"	m	struct:stReturnTaxHistory
dwCountry	tmpcode/commond.h	/^	DWORD dwCountry;$/;"	m	struct:stReturnTrafficTaxHistory
dwCountry	tmpcode/commond.h	/^         DWORD dwCountry;                \/\/À˘‘⁄π˙º“ID$/;"	m	struct:stRetNpcOccupiedBySeptNpcDare
dwCountryID	base/Command.h	/^    WORD dwCountryID;$/;"	m	struct:Cmd::stRetCheckCountryUserCmd
dwCountryID	base/Command.h	/^  DWORD dwCountryID;      \/\/ ÂõΩÂÆ∂ID$/;"	m	struct:Cmd::stSeptSortInfo
dwCountryID	base/Command.h	/^  DWORD dwCountryID;      \/\/ ÂõΩÂÆ∂ID$/;"	m	struct:Cmd::stUnionSortInfo
dwCountryID	base/Command.h	/^  DWORD dwCountryID; \/\/ ÂèëËµ∑ËØ∑Ê±ÇÁöÑÂõΩÂÆ∂,ÂèëËµ∑Êó∂‰∏çÁî®Â°´ÂÜô$/;"	m	struct:Cmd::stReqCountryAlly
dwCountryID	base/Command.h	/^  DWORD dwCountryID; \/\/ Ë¶ÅÊåëÊàòÁöÑÂõΩÂÆ∂$/;"	m	struct:Cmd::stAntiDareCountryFormalCmd
dwCountryID	base/Command.h	/^  DWORD dwCountryID; \/\/ Ë¶ÅÊåëÊàòÁöÑÂõΩÂÆ∂$/;"	m	struct:Cmd::stDareCountryFormalCmd
dwCountryID	base/Command.h	/^  DWORD dwCountryID;$/;"	m	struct:Cmd::stTransDareCountryCmd
dwCountryID	base/Sept.h	/^  DWORD     dwCountryID;        \/\/ º“◊ÂÀ˘ Ùπ˙º“£®“‘◊Â≥§π˙ºÆŒ™∏˘æ›£©$/;"	m	struct:SeptDef::stSeptInfo
dwCountryID	base/SessionCommand.h	/^		DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_Sports_ReturnMapID
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;  \/\/ Ë¶ÅËÆæÁΩÆÊàòÂú∫ÁöÑÂõΩÂÆ∂ID \/\/ Èò≤ÂÆàÊñπ$/;"	m	struct:Cmd::Session::t_setCountryWar_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;  \/\/ Ë¶ÅË∑≥ÂéªÁöÑÂõΩÂÆ∂ID$/;"	m	struct:Cmd::Session::t_clearUnionManor_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;  \/\/ Ë¶ÅË∑≥ÂéªÁöÑÂõΩÂÆ∂ID$/;"	m	struct:Cmd::Session::t_returnEnterUnionManor_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;  \/\/ Ë¶ÅË∑≥ËΩ¨ÁöÑÁé©ÂÆ∂ÂõΩÂÆ∂$/;"	m	struct:Cmd::Session::t_selTransCountryWar_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID; \/\/ Ë∑≥ÂéªÁöÑÂõΩÂÆ∂ID$/;"	m	struct:Cmd::Session::t_enterUnionManor_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::_allyItem
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_GMCreateUnionCity_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_NpcDare_Dare_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_NpcDare_GetGold_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_NpcDare_NotifyScene_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_UnionCity_DareResult_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_UnionCity_Dare_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_addGenExp_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_allyNpcClear_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_countryNotify_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_opAllyFrienddegree_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_opTechVote_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_questionNpcDare_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_questionUnionCity_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_refreshGen_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_regScene_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_regUserSuccess_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_reqAddScene_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_setEmperorHold_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_summonAllyNpc_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_taxAddCountry_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_taxCountry_SceneSession
dwCountryID	base/SessionCommand.h	/^      DWORD dwCountryID;$/;"	m	struct:Cmd::Session::t_updateTech_SceneSession
dwCountryID	base/Union.h	/^  DWORD    dwCountryID;        \/\/ ÊâÄÂ±ûÂõΩÂÆ∂$/;"	m	struct:UnionDef::stUnionInfo
dwCountryID	tmpcode/commond.h	/^	DWORD dwCountryID;                      \/\/ π˙º“ID$/;"	m	struct:stSeptSortInfo
dwCountryID	tmpcode/commond.h	/^	DWORD dwCountryID;                      \/\/ π˙º“ID$/;"	m	struct:stUnionSortInfo
dwCountryID	tmpcode/commond.h	/^	DWORD dwCountryID;  \/\/ ∂‘∑Ωπ˙º“µƒID	$/;"	m	struct:stCountryAlly
dwCountryID	tmpcode/commond.h	/^	DWORD dwCountryID;$/;"	m	struct:stReqCriminalListInfo
dwCountryID	tmpcode/commond.h	/^	DWORD dwCountryID;$/;"	m	struct:stRetCriminalListInfo
dwCountryId	tmpcode/commond.h	/^	DWORD dwCountryId;$/;"	m	struct:stRetCityHeartState
dwCountryId	tmpcode/commond.h	/^        DWORD dwCountryId;  \/\/ ∂‘∑Ωπ˙º“µƒID$/;"	m	struct:stMercenaryCountryAlly
dwCountryStar	base/SessionCommand.h	/^      DWORD dwCountryStar;$/;"	m	struct:Cmd::Session::t_updateCountryStar
dwCountyID	tmpcode/commond.h	/^	WORD dwCountyID;         $/;"	m	struct:stRetCheckCountryUserCmd
dwCrTime	base/Sept.h	/^  DWORD    dwCrTime;        \/\/ º“◊Â¥¥¡¢ ±º‰$/;"	m	struct:SeptDef::stSeptInfo
dwCrTime	base/Union.h	/^  DWORD    dwCrTime;        \/\/ Â∏Æ‰ºöÂàõÁ´ãÊó∂Èó¥$/;"	m	struct:UnionDef::stUnionInfo
dwCreateThisID	ScenesServer/zCard.h	/^        DWORD dwCreateThisID;  $/;"	m	struct:zCard::__anon189::__anon190
dwCreateThisID	ScenesServer/zObject.h	/^        DWORD dwCreateThisID;  $/;"	m	struct:zObject::__anon172::__anon173
dwCreateThisID	base/SaveObject.h	/^	    DWORD dwCreateThisID;$/;"	m	struct:SaveObject::__anon49::__anon50
dwCredit	tmpcode/commond.h	/^	DWORD dwCredit;  \/\/  £”‡ª˝∑÷$/;"	m	struct:stReturnExchange4State
dwCredit	tmpcode/commond.h	/^	DWORD dwCredit;  \/\/  £”‡ª˝∑÷$/;"	m	struct:stReturnExchange5State
dwCredit	tmpcode/commond.h	/^	DWORD dwCredit;  \/\/ À˘–Ëª˝∑÷$/;"	m	struct:Exchange4ConfigItem
dwCredit	tmpcode/commond.h	/^	DWORD dwCredit;  \/\/ À˘–Ëª˝∑÷$/;"	m	struct:Exchange4ConfigItemClient
dwCredit	tmpcode/commond.h	/^	DWORD dwCredit;$/;"	m	struct:stReturnExchange4Config
dwCredit	tmpcode/commond.h	/^	DWORD dwCredit;$/;"	m	struct:stReturnExchange5Config
dwDareType	base/Command.h	/^    DWORD dwDareType; \/\/ ÊåëÊàòÁ±ªÂûã: Â∏Æ‰ºö„ÄÅÂ∏àÈó®„ÄÅÂÆ∂Êóè$/;"	m	struct:Cmd::stActiveDareCmd
dwDays	tmpcode/commond.h	/^	DWORD dwDays;  \/\/ø™∑˛ÃÏ ˝$/;"	m	struct:stRetCityHeartContribution
dwDefCountryID	base/Command.h	/^  DWORD dwDefCountryID; \/\/ ÂÆàÊñπÂõΩÂÆ∂ID$/;"	m	struct:Cmd::stEnterEmperorDareZone
dwDefCountryID	base/SessionCommand.h	/^      DWORD dwDefCountryID; \/\/ ÁõÆÂâçÁöáÂüéÁöÑÊã•ÊúâËÄÖ,‰∏∫0Ë°®Á§∫,Ê≤°Êúâ$/;"	m	struct:Cmd::Session::t_setEmperorDare_SceneSession
dwDefCountryID	base/SessionCommand.h	/^      DWORD dwDefCountryID;$/;"	m	struct:Cmd::Session::t_countryDareResult_SceneSession
dwDefThisID	base/HeroCardCmd.h	/^	DWORD dwDefThisID;   $/;"	m	struct:Cmd::stCardAttackMagicUserCmd
dwDefenceTempID	base/Command.h	/^  DWORD dwDefenceTempID;    \/**< Èò≤Âæ°‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stAttackMagicUserCmd
dwDefenceTempID	tmpcode/commond.h	/^	DWORD dwDefenceTempID;					\/\/±ªπ•ª˜’ﬂ¡Ÿ ±±‡∫≈$/;"	m	struct:stSingMagicUserCmd
dwDefenceTempID	tmpcode/commond.h	/^	DWORD dwDefenceTempID;		\/**< ∑¿”˘¡Ÿ ±±‡∫≈ *\/$/;"	m	struct:stAttackMagicUserCmd
dwDefencerID	tmpcode/commond.h	/^	DWORD   dwDefencerID;   \/**<∑¿”˘¡Ÿ ±±‡∫≈*\/$/;"	m	struct:stDefenceList
dwDefencerID	tmpcode/commond.h	/^	DWORD   dwDefencerID;   \/**<∑¿”˘¡Ÿ ±±‡∫≈*\/$/;"	m	struct:stDefenceListToAtt
dwDefencerID	tmpcode/commond.h	/^	DWORD  dwDefencerID;   \/**<∑¿”˘¡Ÿ ±±‡∫≈*\/$/;"	m	struct:stToNineShowMagicUserCmd
dwDescriptionLen	tmpcode/commond.h	/^	DWORD dwDescriptionLen;  \/\/ √Ë ˆµƒ≥§∂»$/;"	m	struct:stRetSurveyContentUserCmd
dwDestID	base/SceneCommand.h	/^      char  dwDestID;      \/\/ ±ª≤È—Ø’ﬂID$/;"	m	struct:Cmd::Scene::t_Query_AccountScene
dwDiamondThisId	tmpcode/commond.h	/^	DWORD dwDiamondThisId;  \/\/ ◊Í Ø(ø◊±£¡Ù≤ƒ¡œ)$/;"	m	struct:stEquipUpgrade2PropertyUserCmd
dwDueTime	tmpcode/commond.h	/^	DWORD dwDueTime;        \/\/µΩ∆⁄ ±º‰ 0: ±Ì æ…–Œ¥º§ªÓ$/;"	m	struct:stNotifyRentPackInfoUserCmd
dwDueTime3	tmpcode/commond.h	/^	DWORD dwDueTime3;	\/\/µ⁄»˝≤÷ø‚µƒµΩ∆⁄ ±º‰$/;"	m	struct:stNotifyRentPackInfoUserCmd
dwDur	base/Command.h	/^    DWORD dwDur;  \/*ÂΩìÂâçËÄê‰πÖÂ∫¶*\/$/;"	m	struct:Cmd::stDurabilityUserCmd
dwDur	tmpcode/commond.h	/^	DWORD dwDur;	\/*µ±«∞ƒÕæ√∂»*\/$/;"	m	struct:stDurabilityUserCmd
dwDur	tmpcode/commond.h	/^        DWORD dwDur;    \/* £”‡µ„ ˝*\/$/;"	m	struct:stAtBattDurabilityUserCmd
dwElectricDam	tmpcode/commond.h	/^	DWORD dwElectricDam;$/;"	m	struct:t_MainUserData
dwElementValue	tmpcode/commond.h	/^	DWORD dwElementValue;  \/\/ ‘™Àÿ…À∫¶\/∑¿”˘÷µ$/;"	m	struct:stNotifySealValueMagicUserCmd
dwEmotionObjId	tmpcode/commond.h	/^		DWORD dwEmotionObjId;$/;"	m	struct:stReturnUserEmotionSort::__anon350
dwEmperorDareDef	ScenesServer/Scene.h	/^    DWORD dwEmperorDareDef;$/;"	m	class:Scene
dwEndTime	tmpcode/commond.h	/^	DWORD dwEndTime;  \/\/ time_t÷µ$/;"	m	struct:stCrusadeCastleUserEndTime
dwEndTime	tmpcode/commond.h	/^	DWORD dwEndTime;  \/\/ time_t÷µ$/;"	m	struct:stDragonIslandMazeUserEndTime
dwEndTime	tmpcode/commond.h	/^	DWORD dwEndTime;  \/\/ ªÓ∂ØΩ· ¯ ±º‰£¨time_t÷µ$/;"	m	struct:stReturnGoodsBonusInfoCmd
dwEndTime	tmpcode/commond.h	/^	DWORD dwEndTime;  \/\/ ‘ –Ì±£œ’µƒΩÿ÷π ±º‰, time_t÷µ$/;"	m	struct:stReturnWeekAssuranceConfig
dwEndTime	tmpcode/commond.h	/^	DWORD dwEndTime;$/;"	m	struct:stReturnExchange2Time
dwEndTime	tmpcode/commond.h	/^	DWORD dwEndTime;$/;"	m	struct:stReturnExchange3Time
dwEndTime	tmpcode/commond.h	/^	DWORD dwEndTime;$/;"	m	struct:stReturnExchange4Config
dwEndTime	tmpcode/commond.h	/^	DWORD dwEndTime;$/;"	m	struct:stReturnExchange5Config
dwEquipID	tmpcode/commond.h	/^    DWORD dwEquipID; \/\/¥˝…˝–«µƒ◊∞±∏id$/;"	m	struct:stUseRageNumUpgradeUserCmd
dwEquipThisID	tmpcode/commond.h	/^        DWORD dwEquipThisID; \/\/“™◊™ªªµƒ◊∞±∏id$/;"	m	struct:stConvertMagicPhysicsUserCmd
dwEquipThisId	tmpcode/commond.h	/^	DWORD dwEquipThisId;     \/\/ ◊∞±∏µƒThisID$/;"	m	struct:stUseJobTokenPropertyUserCmd
dwEquipThisId	tmpcode/commond.h	/^	DWORD dwEquipThisId;  \/\/ …˝º∂◊∞±∏$/;"	m	struct:stEquipUpgrade2PropertyUserCmd
dwEquipThisId	tmpcode/commond.h	/^	DWORD dwEquipThisId;  \/\/ …˝º∂◊∞±∏$/;"	m	struct:stEquipUpgradePropertyUserCmd
dwEquipThisId	tmpcode/commond.h	/^	DWORD dwEquipThisId;  \/\/ ◊∞±∏ThisId, Ωˆ∂‘…˝–«\/Ω‚∑‚”––ß$/;"	m	struct:stSevenDragonBallsAwardUserCmd
dwEquipThisId	tmpcode/commond.h	/^	DWORD dwEquipThisId;  \/\/“™∏ΩŒ∆◊∞±∏µƒthisid$/;"	m	struct:stFuwenMozhuPropertyUserCmd
dwEquipThisId	tmpcode/commond.h	/^    DWORD dwEquipThisId;  \/\/ Ωµº∂◊∞±∏$/;"	m	struct:stEquipDowngradePropertyUserCmd
dwEquipThisId	tmpcode/commond.h	/^    DWORD dwEquipThisId; \/\/“™◊™ªªµƒ◊∞±∏id$/;"	m	struct:stEnergyTransformPropertyUserCmd
dwExchangeNum	tmpcode/commond.h	/^	DWORD dwExchangeNum;  \/\/ µ•ŒªÕ≠$/;"	m	struct:stReturnExchange4Config
dwExchangeNum	tmpcode/commond.h	/^	DWORD dwExchangeNum;  \/\/ µ•ŒªÕ≠$/;"	m	struct:stReturnExchange5Config
dwExchangedNum	tmpcode/commond.h	/^	DWORD dwExchangedNum;  \/\/ ªÓ∂Ø ±∂Œƒ⁄À˘≤˙…˙µƒÀ˘”–∂“ªªµ„ ˝$/;"	m	struct:stReturnExchange2State
dwExchangedNum	tmpcode/commond.h	/^	DWORD dwExchangedNum;  \/\/ ªÓ∂Ø ±∂Œƒ⁄À˘≤˙…˙µƒÀ˘”–∂“ªªµ„ ˝$/;"	m	struct:stReturnExchange3State
dwExchangedNum	tmpcode/commond.h	/^	DWORD dwExchangedNum; \/\/ ªÓ∂Ø ±∂Œƒ⁄À˘≤˙…˙µƒÀ˘”–∂“ªªµ„ ˝$/;"	m	struct:stReturnExchangeGiftState
dwExp	base/Command.h	/^    DWORD dwExp;        \/**< ÂæóÂà∞ÁöÑÁªèÈ™å *\/$/;"	m	struct:Cmd::stObtainExpUserCmd
dwExp	base/SessionCommand.h	/^      DWORD dwExp;      \/\/\/ Â•ñÂä±ÁªèÈ™å$/;"	m	struct:Cmd::Session::t_quizAward_SceneSession
dwExp	base/SessionCommand.h	/^      DWORD dwExp;$/;"	m	struct:Cmd::Session::t_distributeSeptExp_SceneSession
dwExp	tmpcode/commond.h	/^	DWORD dwExp;    \/\/¥À¥ŒªÒµ√µƒæ≠—È$/;"	m	struct:stBookExpUserCmd
dwExp	tmpcode/commond.h	/^	QWORD dwExp;				\/**< µ√µΩµƒæ≠—È*\/$/;"	m	struct:stObtainExpUserCmd
dwExp	tmpcode/commond.h	/^        DWORD dwExp;$/;"	m	struct:t_SkillStoreData
dwExperience	base/Command.h	/^  DWORD dwExperience;      \/**< ÂΩìÂâçÁªèÈ™å *\/$/;"	m	struct:Cmd::stAddUserSkillPropertyUserCmd
dwExperience	tmpcode/commond.h	/^	DWORD dwExperience;			\/**< µ±«∞æ≠—È *\/$/;"	m	struct:stAddUserSkillPropertyUserCmd
dwExperience	tmpcode/commond.h	/^        DWORD  dwExperience;    \/\/µ±«∞ Ï¡∑∂» $/;"	m	struct:stDataDecayedLingQiUserCmd::lingQiSkills
dwExperience	tmpcode/commond.h	/^        DWORD  dwExperience;    \/\/µ±«∞ Ï¡∑∂» $/;"	m	struct:stSendAllLingQiSkillsUserCmd::lingQiSkills
dwExperience	tmpcode/commond.h	/^        DWORD dwExperience;                     \/**< µ±«∞æ≠—È *\/$/;"	m	struct:OneLifeSkill
dwExperience	tmpcode/commond.h	/^    DWORD  dwExperience;    \/\/µ±«∞ Ï¡∑∂» $/;"	m	struct:stLingQiSkillUserCmd
dwExploit	SessionServer/Session.h	/^    DWORD dwExploit;$/;"	m	class:UserSession
dwExploit	SessionServer/SessionManager.cpp	/^    DWORD dwExploit;$/;"	m	class:CGraceUser
dwExploit	base/SessionCommand.h	/^      DWORD dwExploit;    \/\/ ÂäüÂããÂÄº$/;"	m	struct:Cmd::Session::t_changeUserData_SceneSession
dwExploit	base/SessionCommand.h	/^      DWORD dwExploit;$/;"	m	struct:Cmd::Session::t_regUserSuccess_SceneSession
dwFace	base/Command.h	/^  DWORD dwFace;\/\/ÁõÆÊ†áÂ§¥ÂÉèÁ±ªÂûã$/;"	m	struct:Cmd::stFacePropertyUserCmd
dwFace	base/RecordCommand.h	/^      DWORD dwFace;          \/\/ ËßíËâ≤ËÑ∏Âûã$/;"	m	struct:Cmd::Record::t_CreateChar_Return_GateRecord
dwFace	tmpcode/commond.h	/^    DWORD dwFace;\/\/¡≥–Õ$/;"	m	struct:stChangeHairFacePropertyUserCmd
dwFailLevel	tmpcode/commond.h	/^		DWORD dwFailLevel;				\/\/ ß∞‹∫ÛΩµµΩµƒµ»º∂$/;"	m	struct:stEquipIntensifyConsumeInfo
dwFenTempId	tmpcode/commond.h	/^	DWORD dwFenTempId; \/\/»⁄¡È∑€tempid$/;"	m	struct:stEvolveUseLingYuanZhuLingQiUserCmd
dwField0	base/zDatabase.h	/^	    DWORD  dwField0;      \/\/ ººƒ‹ID$/;"	m	union:SkillBase::__anon33
dwField0	base/zDatabase.h	/^	DWORD dwField0;	$/;"	m	union:ObjectBase::__anon26
dwField0	base/zDatabase.h	/^	DWORD dwField0;$/;"	m	union:CardBase::__anon32
dwField0	base/zDatabase.h	/^    DWORD  dwField0;    \/\/ ±‡∫≈$/;"	m	struct:NpcBase
dwField2	base/zDatabase.h	/^    DWORD  dwField2;    \/\/ ¿‡–Õ$/;"	m	struct:NpcBase
dwField3	base/zDatabase.h	/^    DWORD  dwField3;    \/\/ µ»º∂$/;"	m	struct:NpcBase
dwField4	base/zDatabase.h	/^    DWORD  dwField4;    \/\/ …˙√¸÷µ$/;"	m	struct:NpcBase
dwFinishTime	tmpcode/commond.h	/^	DWORD dwFinishTime;    \/\/¡È∆˜Õ…±‰ÕÍ≥… ±º‰,÷˜Ω«µƒ¡È∆˜‘⁄À˚»À¡È∆˜–°Œ›ƒ⁄Õ…±‰µƒ«Èøˆ$/;"	m	struct:stDecayFinishTimeLingQiUserCmd
dwFireDam	tmpcode/commond.h	/^	DWORD dwFireDam;$/;"	m	struct:t_MainUserData
dwFireID	base/Command.h	/^  DWORD dwFireID;    \/\/ÁÑ∞ÁÅ´ID$/;"	m	struct:Cmd::stFireWorkUserCmd
dwFirstCountryId	tmpcode/commond.h	/^    DWORD dwFirstCountryId;$/;"	m	struct:stReturnStrongWeakCountriesUserCmd
dwFormStyle	tmpcode/commond.h	/^	DWORD dwFormStyle;		\/\/ Ã· æΩÁ√Êµƒ∑Á∏Ò$/;"	m	struct:stShowTipUserCmd
dwFormalFail	base/Command.h	/^  DWORD dwFormalFail;  \/\/ Ê≠£ÂºèÂõΩÊàòÂ§±Ë¥•Ê¨°Êï∞$/;"	m	struct:Cmd::stDareStat
dwFormalWin	base/Command.h	/^  DWORD dwFormalWin;  \/\/ Ê≠£ÂºèÂõΩÊàòËÉúÂà©Ê¨°Êï∞$/;"	m	struct:Cmd::stDareStat
dwFriendDegree	base/Command.h	/^  DWORD dwFriendDegree;$/;"	m	struct:Cmd::stRtnCountryAllyInfo
dwFriendDegree	base/SessionCommand.h	/^      DWORD dwFriendDegree;$/;"	m	struct:Cmd::Session::_allyItem
dwFromID	base/Command.h	/^    DWORD dwFromID;$/;"	m	struct:Cmd::stKokChatUserCmd
dwFromID	base/Command.h	/^  DWORD dwFromID;      \/\/\/ÂèëÈÄÅËÄÖÁöÑID,ÊòØ‰∏¥Êó∂id$/;"	m	struct:Cmd::stServerChannelChatUserCmd
dwFromID	base/Command.h	/^  DWORD dwFromID;$/;"	m	struct:Cmd::stChannelChatUserCmd
dwFromID	tmpcode/commond.h	/^         DWORD dwFromID;                 \/**<∑¢ÀÕ’ﬂ¡Ÿ ±ID*\/$/;"	m	struct:stKokChatUserCmd
dwFromRelationID	base/SessionCommand.h	/^      DWORD dwFromRelationID; \/\/ $/;"	m	struct:Cmd::Session::t_enterWar_SceneSession
dwFromRelationID	base/SessionCommand.h	/^      DWORD dwFromRelationID;$/;"	m	struct:Cmd::Session::t_setAntiAttFlag_SceneSession
dwFromTempID	base/Command.h	/^  DWORD dwFromTempID;$/;"	m	struct:Cmd::t_MapObjectData
dwFromTempID	tmpcode/commond.h	/^	DWORD	dwFromTempID;		\/\/µÙ±¶…˙ŒÔµƒtempid$/;"	m	struct:t_MapObjectData
dwFromUnionID	base/SessionCommand.h	/^      DWORD dwFromUnionID;  \/\/ $/;"	m	struct:Cmd::Session::t_UnionCity_Dare_SceneSession
dwFromUserID	base/SessionCommand.h	/^      DWORD dwFromUserID;  \/\/ ÂèëËµ∑ÊåëÊàòËÄÖ$/;"	m	struct:Cmd::Session::t_UnionCity_Dare_SceneSession
dwGameRunTime	Robot/Client.h	/^    QWORD dwGameRunTime;$/;"	m	struct:ClientBase
dwGatewayServerID	base/SessionCommand.h	/^      DWORD dwGatewayServerID;$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
dwGiftBagThisId	tmpcode/commond.h	/^	DWORD dwGiftBagThisId;  \/\/ π´ª·≈˚∑Á¿Ò∞¸ThisID$/;"	m	struct:stSelectGuildManteauUserCmd
dwGiftBagThisId	tmpcode/commond.h	/^	DWORD dwGiftBagThisId;  \/\/ ¿Ò∞¸ThisID$/;"	m	struct:stWorldCupGiftBagPropertyUserCmd
dwGold	base/BillCommand.h	/^      DWORD dwGold;          \/\/\/ ÂÜ≤ÂÖ•ÈáëÂ∏ÅÊï∞Èáè$/;"	m	struct:Cmd::Bill::t_Stock_Save
dwGold	base/BillCommand.h	/^      DWORD dwGold;          \/\/\/ Â•óÁé∞ÈáëÂ∏ÅÊï∞Èáè$/;"	m	struct:Cmd::Bill::t_Stock_Fetch
dwGold	base/BillCommand.h	/^      DWORD dwGold;        \/\/\/   ÂΩìÂâçÊã•ÊúâÈáëÂ∏ÅÊï∞$/;"	m	struct:Cmd::Bill::t_Redeem_Gold_Gateway
dwGold	base/BillCommand.h	/^      DWORD dwGold;  \/\/ÈáëÂ∏Å$/;"	m	struct:Cmd::Bill::t_Return_Card_Gold
dwGold	base/Command.h	/^  DWORD dwGold;\/\/\/ ÂΩìÂâçÂ∏êÂè∑ÈáëÂ∏Å$/;"	m	struct:Cmd::stReturnFundStockUserCmd
dwGold	base/Command.h	/^  DWORD dwGold;\/\/\/ Êìç‰ΩúÈáëÂ∏ÅÊï∞Èáè$/;"	m	struct:Cmd::stTransferFundStockFetchUserCmd
dwGold	base/Command.h	/^  DWORD dwGold;\/\/\/ Êìç‰ΩúÈáëÂ∏ÅÊï∞Èáè$/;"	m	struct:Cmd::stTransferFundStockSaveUserCmd
dwGold	base/Command.h	/^  DWORD dwGold;\/\/ÈáëÂ∏Å$/;"	m	struct:Cmd::stReturnCardAndGold
dwGold	base/SessionCommand.h	/^      DWORD dwGold;$/;"	m	struct:Cmd::Session::t_NpcDare_GetGold_SceneSession
dwGold	tmpcode/commond.h	/^	DWORD dwGold;\/\/\/ ≤Ÿ◊˜Ω◊” ˝¡ø$/;"	m	struct:stTransferFundStockFetchUserCmd
dwGold	tmpcode/commond.h	/^	DWORD dwGold;\/\/\/ ≤Ÿ◊˜Ω◊” ˝¡ø$/;"	m	struct:stTransferFundStockSaveUserCmd
dwGold	tmpcode/commond.h	/^	DWORD dwGold;\/\/\/ µ±«∞’ ∫≈Ω◊”$/;"	m	struct:stReturnFundStockUserCmd
dwGoldUser	base/SessionCommand.h	/^      DWORD dwGoldUser;$/;"	m	struct:Cmd::Session::t_notifyAddIntegral
dwGoodness	base/Command.h	/^  DWORD  dwGoodness;  \/\/\/ ÂñÑÊÅ∂ÂÄº$/;"	m	struct:Cmd::stGoodnessStateMapScreenUserCmd
dwGoodness	tmpcode/commond.h	/^	DWORD   dwGoodness; \/\/\/ …∆∂Ò÷µ$/;"	m	struct:stGoodnessStateMapScreenUserCmd
dwGoodsId	tmpcode/commond.h	/^	DWORD dwGoodsId;  \/\/ ¥˝≤È—Ø…Ã∆∑ID$/;"	m	struct:stRequestGoodsBonusInfoCmd
dwGoodsId	tmpcode/commond.h	/^	DWORD dwGoodsId;  \/\/ …Ã∆∑ID$/;"	m	struct:stReturnGoodsBonusInfoCmd
dwGrace	base/Command.h	/^  DWORD dwGrace; \/\/ Êú¨Ê¨°Á≠îÈ¢òÁ¥ØÁßØÊñáÈáá$/;"	m	struct:Cmd::stQuizCurScore
dwGrace	base/SessionCommand.h	/^      DWORD dwGrace;      \/\/\/ Êú¨Ê¨°ÊâÄËé∑ÊñáÈááÁÇπÊï∞$/;"	m	struct:Cmd::Session::t_quizAward_SceneSession
dwGuardID	tmpcode/commond.h	/^	DWORD dwGuardID;           $/;"	m	struct:stSeptGuardVisitSeptCmd
dwHP	base/Command.h	/^	DWORD dwHP;				\/\/sky NpcÂΩìÂâçHP$/;"	m	struct:Cmd::t_NpcData
dwHP	base/Command.h	/^    DWORD dwHP;          \/**< HP *\/$/;"	m	struct:Cmd::stNPCHPMapScreenUserCmd
dwHP	base/Command.h	/^    DWORD dwHP;          \/**< HP *\/$/;"	m	struct:Cmd::stSetHPAndMPDataUserCmd
dwHP	base/Command.h	/^  DWORD dwHP;          \/\/ ÂΩìÂâçË°Ä$/;"	m	struct:Cmd::stRTMagicUserCmd
dwHP	base/Command.h	/^  DWORD dwHP;\/\/ÂΩìÂâçË°Ä$/;"	m	struct:Cmd::stRTSelectedHpMpPropertyUserCmd
dwHP	tmpcode/commond.h	/^        DWORD dwHP;\/\/µ±«∞—™     $/;"	m	struct:stRTSelectedHpMpPropertyUserCmd
dwHP	tmpcode/commond.h	/^    DWORD dwHP;                                     \/**< HP *\/$/;"	m	struct:stSetHPAndMPDataUserCmd
dwHP	tmpcode/commond.h	/^    DWORD dwHP;\/\/µ±«∞—™             \/\/\/ 20080818$/;"	m	struct:t_NPCData
dwHair	tmpcode/commond.h	/^    DWORD dwHair;\/\/Õ∑∑¢$/;"	m	struct:stChangeHairFacePropertyUserCmd
dwHairColor	base/Command.h	/^  DWORD dwHairColor;\/\/Â§¥ÂèëÈ¢úËâ≤ÂÄº$/;"	m	struct:Cmd::stHairPropertyUserCmd
dwHairID	base/Command.h	/^  DWORD dwHairID;            \/\/\/ Â§¥ÂèëÁ±ªÂûã$/;"	m	struct:Cmd::t_MapUserSculpt
dwHairID	tmpcode/commond.h	/^	DWORD dwHairID;						\/\/\/ Õ∑∑¢¿‡–Õ$/;"	m	struct:t_MapUserSculpt
dwHasExp	tmpcode/commond.h	/^	DWORD dwHasExp; \/\/“—æ≠¿€ª˝æ≠—È$/;"	m	struct:stBookExpUserCmd
dwHaveGet	tmpcode/commond.h	/^	DWORD dwHaveGet;\/\/¥À◊÷∂Œ÷ª”–øÕªß∂À”–£¨±Ì æ“—æ≠¡Ï»°µƒ∏ˆ ˝$/;"	m	struct:Exchange4ConfigItemClient
dwHeadID	base/Command.h	/^  DWORD dwHeadID;			\/\/sky ÈòüÈïøID$/;"	m	struct:Cmd::stAddTeamMemberUserCmd
dwHealth	base/Command.h	/^  DWORD dwHealth;$/;"	m	struct:Cmd::stFreshTeamMemberUserCmd
dwHealth	base/Command.h	/^  DWORD dwHealth;$/;"	m	struct:Cmd::stTeamMemberData
dwHealth	tmpcode/commond.h	/^	DWORD dwHealth;$/;"	m	struct:stFreshTeamMemberUserCmd
dwHealth	tmpcode/commond.h	/^	DWORD dwHealth;$/;"	m	struct:stTeamMemberData
dwHeroKillNum	tmpcode/commond.h	/^	DWORD dwHeroKillNum;$/;"	m	struct:t_ReturnHeroKill
dwHoldCountryID	ScenesServer/Scene.h	/^    DWORD dwHoldCountryID;$/;"	m	class:Scene
dwHoldUnionID	ScenesServer/Scene.h	/^    DWORD dwHoldUnionID;$/;"	m	class:Scene
dwHoleMeterialThisId	tmpcode/commond.h	/^	DWORD dwHoleMeterialThisId;  \/\/ ◊∞±∏ø◊±£¡Ù≤ƒ¡œ$/;"	m	struct:stEquipUpgradePropertyUserCmd
dwHonor	base/Command.h	/^  DWORD dwHonor;$/;"	m	struct:Cmd::stDonateHonor
dwHorseID	base/Command.h	/^  DWORD dwHorseID;          \/\/\/ È©¨ÁâåÁºñÂè∑$/;"	m	struct:Cmd::t_MapUserSculpt
dwHorseID	tmpcode/commond.h	/^	DWORD dwHorseID;					\/\/\/ ¬Ì≈∆±‡∫≈$/;"	m	struct:t_MapUserSculpt
dwID	base/Command.h	/^		DWORD dwID;		\/\/‰∏äË°å Êó∂Êó†Áî®$/;"	m	struct:Cmd::stUpdateShopAdvcmd::stAdv
dwID	base/Command.h	/^  DWORD dwID;   \/\/ ÂõΩÂÆ∂ID$/;"	m	struct:Cmd::stCountryInfo
dwID	base/Command.h	/^  DWORD dwID;   \/\/ È¢òÁõÆÂ∫èÂè∑$/;"	m	struct:Cmd::stAnswerQuiz
dwID	base/Command.h	/^  DWORD dwID;  \/\/ È¢òÁõÆÂ∫èÂè∑$/;"	m	struct:Cmd::stQuestionQuiz
dwID	base/Command.h	/^  DWORD dwID;$/;"	m	struct:Cmd::ConsignSelfHistoryType
dwID	base/Command.h	/^  DWORD dwID;$/;"	m	struct:Cmd::stGameAccelKey
dwID	base/RecordCommand.h	/^      DWORD dwID;          \/\/Áî®Êà∑id$/;"	m	struct:Cmd::Record::t_order_Country_GateRecord
dwID	base/SceneCommand.h	/^	  DWORD dwID;$/;"	m	struct:Cmd::Scene::t_ForwardScene_dupChange
dwID	base/SceneCommand.h	/^      DWORD dwID;$/;"	m	struct:Cmd::Scene::t_User_ForwardScene
dwID	base/SessionCommand.h	/^		DWORD dwID;						\/\/sky id‰∏∫0Êó∂ÂÄô‰∏∫ÁîüÊàêÂú∞ÂõæÂ§±Ë¥•$/;"	m	struct:Cmd::Session::t_Sports_ReturnMapID
dwID	base/SessionCommand.h	/^		DWORD dwID;					\/\/sky Áî®Êà∑ID$/;"	m	struct:Cmd::Session::stMember
dwID	base/SessionCommand.h	/^      DWORD  dwID;            \/\/ Â∏àÂ∞äÁöÑID$/;"	m	struct:Cmd::Session::t_SchoolCreateSuccess_SceneSession
dwID	base/SessionCommand.h	/^      DWORD dwID;          \/\/id$/;"	m	struct:Cmd::Session::t_order_Country_GateSession
dwID	base/SessionCommand.h	/^      DWORD dwID;        \/\/ ÈòüÈïøÁöÑtempID$/;"	m	struct:Cmd::Session::t_ReturnFriendDegree_SceneSession
dwID	base/SessionCommand.h	/^      DWORD dwID;      \/\/\/ Á§æ‰ºöÂÖ≥Á≥ªID$/;"	m	struct:Cmd::Session::t_sendUserRelationID
dwID	base/SessionCommand.h	/^      DWORD dwID;$/;"	m	struct:Cmd::Session::t_Session_ForwardUser
dwID	base/SessionCommand.h	/^      DWORD dwID;$/;"	m	struct:Cmd::Session::t_Session_HandleBlackList
dwID	base/SessionCommand.h	/^      DWORD dwID;$/;"	m	struct:Cmd::Session::t_changeUser_GateSession
dwID	base/SessionCommand.h	/^      DWORD dwID;$/;"	m	struct:Cmd::Session::t_regScene_SceneSession
dwID	base/SessionCommand.h	/^      DWORD dwID;$/;"	m	struct:Cmd::Session::t_regUser_GateSession
dwID	base/SessionCommand.h	/^      DWORD dwID;$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
dwID	tmpcode/commond.h	/^	DWORD		dwID;		\/\/Ãÿ’˜¬Î±‡∫≈$/;"	m	struct:stStampDataUserCmd
dwID	tmpcode/commond.h	/^	DWORD dwID;						\/\/»ÀŒÔŒ®“ªID, ’Ê∏„≤ª∂Æ“™tempID∏…¬Ô?!!$/;"	m	struct:stTeamMemberData
dwID	tmpcode/commond.h	/^	DWORD dwID;$/;"	m	struct:ConsignSelfHistoryType
dwID	tmpcode/commond.h	/^	DWORD dwID;$/;"	m	struct:stGameAccelKey
dwIceDam	tmpcode/commond.h	/^	DWORD dwIceDam;$/;"	m	struct:t_MainUserData
dwId	tmpcode/commond.h	/^	DWORD  dwId;  \/\/ ŒÔ∆∑ID				$/;"	m	struct:GiftItem
dwId	tmpcode/commond.h	/^	DWORD dwId;         \/\/ ¿ÒŒÔµƒŒÔ∆∑ID$/;"	m	struct:Exchange2GiftItem
dwId	tmpcode/commond.h	/^	DWORD dwId;  \/\/ ∂“ªª≈‰÷√œÓID$/;"	m	struct:stGetExchange4Gift
dwId	tmpcode/commond.h	/^	DWORD dwId;  \/\/ ∂“ªª≈‰÷√œÓID$/;"	m	struct:stGetExchange5Gift
dwId	tmpcode/commond.h	/^	DWORD dwId;  \/\/ ≈‰÷√œÓID$/;"	m	struct:Exchange4ConfigItem
dwId	tmpcode/commond.h	/^	DWORD dwId;  \/\/ ≈‰÷√œÓID$/;"	m	struct:Exchange4ConfigItemClient
dwId	tmpcode/commond.h	/^	DWORD dwId;  \/\/ ŒÔ∆∑ID$/;"	m	struct:NewbieGiftItem
dwIndex	tmpcode/commond.h	/^    DWORD dwIndex;          \/\/À˜“˝£¨0Œ™ÀÊ…Ì◊˘∆Ô£¨∆‰À˚Œ™¬Ìæ«◊˘∆Ô$/;"	m	struct:stAddTimeEffectHorseDataCmd
dwIsExp	base/Sept.h	/^  DWORD     dwIsExp;        \/\/  «∑Ò¡Ï»°º“◊Âæ≠—È$/;"	m	struct:SeptDef::stSeptInfo
dwItemBufSize	tmpcode/commond.h	/^         DWORD dwItemBufSize;$/;"	m	struct:stKokChatUserCmd
dwItemID	base/Command.h	/^  DWORD dwItemID;$/;"	m	struct:Cmd::stClearPointPropertyUserCmd
dwItemID	base/Command.h	/^  DWORD dwItemID;$/;"	m	struct:Cmd::stClearUserSkillPointPropertyUserCmd
dwItemID	base/SessionCommand.h	/^      DWORD dwItemID;             \/\/\/ ÈÅìÂÖ∑Áâ©ÂìÅÁöÑÂØπË±°id ÊàêÂäü‰ª•ÂêéÂà†Èô§$/;"	m	struct:Cmd::Session::t_addUnion_SceneSession
dwItemID	tmpcode/commond.h	/^	DWORD dwItemID;         $/;"	m	struct:stClearPointPropertyUserCmd
dwItemID	tmpcode/commond.h	/^	DWORD dwItemID;      \/\/µ¿æﬂThisID$/;"	m	struct:stChangeCountryCmd
dwItemID	tmpcode/commond.h	/^	DWORD dwItemID;$/;"	m	struct:stClearUserSkillPointPropertyUserCmd
dwItemID	tmpcode/commond.h	/^	DWORD dwItemID[0]; \/\/◊∞±∏ThisID$/;"	m	struct:stDevoteEquipPropertyUserCmd
dwItemID	tmpcode/commond.h	/^    DWORD  dwItemID;$/;"	m	struct:stChangeUserJobPropertyUserCmd
dwItemID	tmpcode/commond.h	/^    DWORD dwItemID; \/\/ŒÔ∆∑thisID$/;"	m	struct:stChangeHairFacePropertyUserCmd
dwJobTokenThisId	tmpcode/commond.h	/^	DWORD dwJobTokenThisId;  \/\/ ÷∞“µ”°º«µƒThisID$/;"	m	struct:stUseJobTokenPropertyUserCmd
dwLastLevel	base/Command.h	/^  DWORD dwLastLevel; \/\/ ‰∏äÊ¨°È¢ÜÂèñÊó∂ÁöÑÁ≠âÁ∫ß$/;"	m	struct:Cmd::stRtnRecommendedBountyUserCmd
dwLastTime	tmpcode/commond.h	/^    DWORD dwLastTime;               \/\/ƒß∑®◊˘∆Ôµƒ £”‡ ±º‰                                  $/;"	m	struct:stMagicHorseLastTimeCmd
dwLeaderID	base/SessionCommand.h	/^		DWORD dwLeaderID;			\/\/\/ sky ÈòüÈïøID$/;"	m	struct:Cmd::Session::t_Team_AddMember
dwLeftHandID	ScenesServer/SceneUser.h	/^    DWORD dwLeftHandID;$/;"	m	struct:SceneUser
dwLeftHandID	base/Command.h	/^  DWORD dwLeftHandID;          \/\/\/ Â∑¶ÊâãÁâ©ÂìÅID$/;"	m	struct:Cmd::t_MapUserSculpt
dwLeftHandID	tmpcode/commond.h	/^	DWORD dwLeftHandID;					\/\/\/ ◊Û ÷ŒÔ∆∑ID$/;"	m	struct:t_MapUserSculpt
dwLevel	base/Command.h	/^  DWORD dwLevel;      \/\/ ÂÆ∂ÊóèÁ≠âÁ∫ß$/;"	m	struct:Cmd::stSeptBaseInfoCmd
dwLevel	base/Command.h	/^  DWORD dwLevel;  \/\/ ÊúÄÂêé‰∏ÄÊ¨°ÊèêÂèñÊó∂ÁöÑÁ≠âÁ∫ß$/;"	m	struct:Cmd::stRecommendItem
dwLevel	base/Command.h	/^  DWORD dwLevel;$/;"	m	struct:Cmd::stTechItem
dwLevel	base/Command.h	/^  DWORD dwLevel;\/\/Â§ß‰∫éÁ≠â‰∫éËØ•Á≠âÁ∫ß$/;"	m	struct:Cmd::stSelectTransLevelUserCmd
dwLevel	base/Sept.h	/^  DWORD     dwLevel;        \/\/ º“◊Âµ»º∂$/;"	m	struct:SeptDef::stSeptInfo
dwLevel	base/SessionCommand.h	/^      DWORD dwLevel;     \/\/ Áé©ÂÆ∂Á≠âÁ∫ßÊù°‰ª∂$/;"	m	struct:Cmd::Session::t_selTransCountryWar_SceneSession
dwLevel	base/SessionCommand.h	/^      DWORD dwLevel;$/;"	m	struct:Cmd::Session::_techItem
dwLevel	base/SessionCommand.h	/^      int   dwLevel; \/\/  ÂÆ∂ÊóèÂÄº$/;"	m	struct:Cmd::Session::t_OpLevel_SceneSession
dwLevel	tmpcode/commond.h	/^	DWORD dwLevel;                          \/\/ º“◊Âµ»º∂$/;"	m	struct:stSeptSortInfo
dwLevel	tmpcode/commond.h	/^	DWORD dwLevel;                          \/\/ ”∂±¯Õ≈µ»º∂$/;"	m	struct:stUnionSortInfo
dwLevel	tmpcode/commond.h	/^	DWORD dwLevel;                  \/\/ º“◊Âµ»º∂$/;"	m	struct:stSeptBaseInfoCmd
dwLevel	tmpcode/commond.h	/^        DWORD dwLevel;$/;"	m	struct:t_SkillStoreData
dwLevel	tmpcode/commond.h	/^        WORD  dwLevel;                           \/**< ººƒ‹µ»º∂ *\/$/;"	m	struct:OneLifeSkill
dwLifeguardTempID	tmpcode/commond.h	/^	DWORD dwLifeguardTempID;	\/\/ ±ª»Œ√¸Œ™«◊Œ¿∂”µƒ”√ªß¡Ÿ ±ID$/;"	m	struct:stAssignLifeguardCmd
dwLifeguardTempID	tmpcode/commond.h	/^	DWORD dwLifeguardTempID;	\/\/ ±ª»Œ√¸Œ™«◊Œ¿∂”µƒ”√ªß¡Ÿ ±ID$/;"	m	struct:stRetAssignLifeguardCmd
dwLocation	base/Object.h	/^	DWORD dwLocation;   \/\/ ∏Ò◊”¿‡–Õ  1$/;"	m	struct:stObjectLocation
dwMP	base/Command.h	/^    DWORD dwMP;          \/**< MP *\/$/;"	m	struct:Cmd::stSetHPAndMPDataUserCmd
dwMP	base/Command.h	/^  DWORD dwMP;\/\/ÂΩìÂâçmp$/;"	m	struct:Cmd::stRTSelectedHpMpPropertyUserCmd
dwMP	tmpcode/commond.h	/^        DWORD dwMP;\/\/µ±«∞mp             $/;"	m	struct:stRTSelectedHpMpPropertyUserCmd
dwMP	tmpcode/commond.h	/^    DWORD dwMP;                                     \/**< MP *\/$/;"	m	struct:stSetHPAndMPDataUserCmd
dwMagicType	base/HeroCardCmd.h	/^	DWORD dwMagicType;	\/\/ººƒ‹ID$/;"	m	struct:Cmd::stCardAttackMagicUserCmd
dwMana	base/Command.h	/^  DWORD dwMana;        \/\/ Â∏Æ‰ºöÂ®ÅÊúõ$/;"	m	struct:Cmd::stUnionBaseInfoCmd
dwMana	base/Command.h	/^  DWORD dwMana;        \/\/ Â∏Æ‰ºöÂ®ÅÊúõ$/;"	m	struct:Cmd::stUnionSortInfo
dwMana	base/SessionCommand.h	/^      DWORD dwMana; \/\/ ÂÆ∂ÊóèÂ£∞Êúõ$/;"	m	struct:Cmd::Session::t_SendUnionNormal_SceneSession
dwMana	base/Union.h	/^  DWORD     dwMana;          \/\/ Â∏Æ‰ºöÂ®ÅÊúõ$/;"	m	struct:UnionDef::stUnionInfo
dwManteauThisId	tmpcode/commond.h	/^	DWORD dwManteauThisId;  \/\/ ¥˝…˝º∂≈˚∑ÁThisID$/;"	m	struct:stUpgradeGuildManteauUserCmd
dwMapBuildTempID	tmpcode/commond.h	/^	DWORD dwMapBuildTempID;$/;"	m	struct:stRemoveMapBuildAndPosMapScreenUserCmd
dwMapBuildingTempID	base/Command.h	/^    DWORD dwMapBuildingTempID;  \/**< Âª∫Á≠ëÁâ©ÁöÑ‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stRemoveMapBuildingMapScreenUserCmd
dwMapBuildingTempID	base/Command.h	/^  DWORD dwMapBuildingTempID;      \/**< Âª∫Á≠ëÁâ©ÁöÑ‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::t_MapBuildingData
dwMapID	ScenesServer/SceneUser.h	/^      DWORD dwMapID;$/;"	m	struct:SceneUser::__anon188
dwMapID	base/SessionCommand.h	/^      DWORD dwMapID;$/;"	m	struct:Cmd::Session::t_ClearGemNPC_SceneSession
dwMapID	base/SessionCommand.h	/^      DWORD dwMapID;$/;"	m	struct:Cmd::Session::t_NpcDare_Dare_SceneSession
dwMapID	base/SessionCommand.h	/^      DWORD dwMapID;$/;"	m	struct:Cmd::Session::t_NpcDare_GetGold_SceneSession
dwMapID	base/SessionCommand.h	/^      DWORD dwMapID;$/;"	m	struct:Cmd::Session::t_NpcDare_NotifyScene_SceneSession
dwMapID	base/SessionCommand.h	/^      DWORD dwMapID;$/;"	m	struct:Cmd::Session::t_SummonGemNPC_SceneSession
dwMapID	base/SessionCommand.h	/^      DWORD dwMapID;$/;"	m	struct:Cmd::Session::t_notifyNpcHoldData
dwMapID	base/SessionCommand.h	/^      DWORD dwMapID;$/;"	m	struct:Cmd::Session::t_questionNpcDare_SceneSession
dwMapID	base/SessionCommand.h	/^      DWORD dwMapID;$/;"	m	struct:Cmd::Session::t_regUser_GateSession
dwMapID	base/SessionCommand.h	/^      DWORD dwMapID;$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
dwMapID	base/SessionCommand.h	/^      DWORD dwMapID;$/;"	m	struct:Cmd::Session::t_reqAddScene_SceneSession
dwMapID	tmpcode/commond.h	/^	DWORD dwMapID;  \/\/À˘‘⁄µÿÕºµƒID$/;"	m	struct:stRetOccupiedNpcNpcDare
dwMapId	tmpcode/commond.h	/^	DWORD dwMapId;$/;"	m	struct:TransportPos
dwMapNpcDataPosition	base/Command.h	/^	DWORD dwMapNpcDataPosition;  \/**< npcÁöÑÊï∞ÊçÆ‰ΩçÁΩÆ *\/$/;"	m	struct:Cmd::t_NpcData
dwMapNpcDataPosition	base/Command.h	/^    DWORD dwMapNpcDataPosition;  \/**< npcÁöÑÊï∞ÊçÆ‰ΩçÁΩÆ *\/$/;"	m	struct:Cmd::stNPCHPMapScreenUserCmd
dwMapNpcDataPosition	base/Command.h	/^    DWORD dwMapNpcDataPosition;  \/**< npcÁöÑÊï∞ÊçÆ‰ΩçÁΩÆ *\/$/;"	m	struct:Cmd::stRemoveMapNpcMapScreenUserCmd
dwMapNpcDataPosition	tmpcode/commond.h	/^    DWORD dwMapNpcDataPosition;     \/**< npcµƒ ˝æ›Œª÷√ *\/$/;"	m	struct:stRemoveMapNpcMapScreenUserCmd
dwMapObjectTempID	base/Command.h	/^	DWORD dwMapObjectTempID;  \/**< Áâ©ÂìÅÁöÑ‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stClearObjectOwnerMapScreenUserCmd
dwMapObjectTempID	base/Command.h	/^    DWORD dwMapObjectTempID;  \/**< Áâ©ÂìÅÁöÑ‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stRemoveMapObjectMapScreenUserCmd
dwMapObjectTempID	base/Command.h	/^  DWORD dwMapObjectTempID;        \/**< Áâ©ÂìÅÁöÑ‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::t_MapObjectData
dwMapObjectTempID	tmpcode/commond.h	/^	DWORD dwMapObjectTempID;                \/**< ŒÔ∆∑µƒ¡Ÿ ±ID *\/         $/;"	m	struct:stDelMapObjectMapScreenUserCmd
dwMapObjectTempID	tmpcode/commond.h	/^	DWORD dwMapObjectTempID;                \/**< ŒÔ∆∑µƒ¡Ÿ ±ID *\/$/;"	m	struct:t_MapObjectData
dwMapObjectTempID	tmpcode/commond.h	/^	DWORD dwMapObjectTempID;        \/**< ŒÔ∆∑µƒ¡Ÿ ±ID *\/$/;"	m	struct:stClearObjectOwnerMapScreenUserCmd
dwMapTempID	base/RecordCommand.h	/^      DWORD dwMapTempID;          \/\/\/ Âú∞Âõæ‰∏¥Êó∂ID$/;"	m	struct:Cmd::Record::t_UserInfo_SceneRecord
dwMapTempID	base/RecordCommand.h	/^      DWORD dwMapTempID;          \/\/\/ Âú∞Âõæ‰∏¥Êó∂ID$/;"	m	struct:Cmd::Record::t_WriteUser_SceneRecord
dwMapTempID	base/RecordCommand.h	/^      DWORD dwMapTempID;        \/\/\/ Âú∞Âõæ‰∏¥Êó∂ID$/;"	m	struct:Cmd::Record::t_ReadUser_SceneRecord
dwMapTempID	base/SceneCommand.h	/^      DWORD dwMapTempID;$/;"	m	struct:Cmd::Scene::t_fresh_ScreenIndex
dwMapTempID	base/SceneCommand.h	/^      DWORD dwMapTempID[0]; $/;"	m	struct:Cmd::Scene::t_Remove_MapIndex
dwMapTempID	base/SessionCommand.h	/^      DWORD dwMapTempID;          \/\/\/ Âú∞Âõæ‰∏¥Êó∂ÁºñÂè∑$/;"	m	struct:Cmd::Session::t_addSept_SceneSession
dwMapTempID	base/SessionCommand.h	/^      DWORD dwMapTempID;          \/\/\/ Âú∞Âõæ‰∏¥Êó∂ÁºñÂè∑$/;"	m	struct:Cmd::Session::t_addUnion_SceneSession
dwMapTempID	base/SessionCommand.h	/^      DWORD dwMapTempID;        \/\/\/ Âú∞Âõæ‰∏¥Êó∂ID$/;"	m	struct:Cmd::Session::t_ReadUser_SceneArchive
dwMapTempID	base/SessionCommand.h	/^      DWORD dwMapTempID;        \/\/\/ Âú∞Âõæ‰∏¥Êó∂ID$/;"	m	struct:Cmd::Session::t_ReqUser_SceneArchive
dwMapTempID	base/SessionCommand.h	/^      DWORD dwMapTempID;        \/\/\/ Âú∞Âõæ‰∏¥Êó∂ID$/;"	m	struct:Cmd::Session::t_WriteUser_SceneArchive
dwMapTempID	base/SessionCommand.h	/^      DWORD dwMapTempID;    \/\/ Âú∞ÂõæÁöÑtempID$/;"	m	struct:Cmd::Session::t_ReturnFriendDegree_SceneSession
dwMapTempID	base/SessionCommand.h	/^      DWORD dwMapTempID;$/;"	m	struct:Cmd::Session::t_fireSeptMember_SceneSession
dwMapTempID	base/SessionCommand.h	/^      DWORD dwMapTempID;$/;"	m	struct:Cmd::Session::t_fireUnionMember_SceneSession
dwMapType	base/Command.h	/^  DWORD dwMapType;$/;"	m	struct:Cmd::stUserGotoMapMoveUserCmd
dwMasterTempID	base/Command.h	/^  DWORD dwMasterTempID;$/;"	m	struct:Cmd::stSeptBaseInfoCmd
dwMasterTempID	tmpcode/commond.h	/^	DWORD dwMasterTempID;	\/\/ ΩÁÕıªÚÕ≈≥§µƒ¡Ÿ ±ID$/;"	m	struct:stBecomeLifeguardCmd
dwMasterTempID	tmpcode/commond.h	/^	DWORD dwMasterTempID;$/;"	m	struct:stSeptBaseInfoCmd
dwMaterialId	tmpcode/commond.h	/^	DWORD dwMaterialId; \/\/Ω®…Ë≤ƒ¡œµƒid$/;"	m	struct:stBuildDecayHouseUserCmd
dwMaxBodyPower	tmpcode/commond.h	/^	DWORD dwMaxBodyPower;  \/\/ ÃÂ¡¶÷µ…œœﬁ$/;"	m	struct:stNotifyUserBodyPowerUserCmd
dwMaxCanGet	tmpcode/commond.h	/^	DWORD dwMaxCanGet;\/\/◊Ó¥Ûø…∂“ªª ˝ƒø£¨◊Ó¥Û÷µŒ™0£¨±Ì æø…“‘Œﬁœﬁ∂“ªª$/;"	m	struct:Exchange4ConfigItem
dwMaxCanGet	tmpcode/commond.h	/^	DWORD dwMaxCanGet;\/\/◊Ó¥Ûø…∂“ªª ˝ƒø£¨◊Ó¥Û÷µŒ™0£¨±Ì æø…“‘Œﬁœﬁ∂“ªª$/;"	m	struct:Exchange4ConfigItemClient
dwMaxDur	base/Command.h	/^    DWORD dwMaxDur;  \/*ÊúÄÂ§ßËÄê‰πÖÂ∫¶*\/$/;"	m	struct:Cmd::stDurabilityUserCmd
dwMaxDur	tmpcode/commond.h	/^	DWORD dwMaxDur;	\/*◊Ó¥ÛƒÕæ√∂»*\/$/;"	m	struct:stDurabilityUserCmd
dwMaxDur	tmpcode/commond.h	/^        DWORD dwMaxDur; \/*◊Ó¥Ûµ„ ˝*\/$/;"	m	struct:stAtBattDurabilityUserCmd
dwMaxExperience	base/Command.h	/^  DWORD dwMaxExperience;    \/**< ÂçáÁ∫ßÁªèÈ™å *\/$/;"	m	struct:Cmd::stAddUserSkillPropertyUserCmd
dwMaxExperience	tmpcode/commond.h	/^	DWORD dwMaxExperience;		\/**< …˝º∂æ≠—È *\/$/;"	m	struct:stAddUserSkillPropertyUserCmd
dwMaxExperience	tmpcode/commond.h	/^        DWORD  dwMaxExperience; \/\/…˝º∂ Ï¡∑∂»$/;"	m	struct:stDataDecayedLingQiUserCmd::lingQiSkills
dwMaxExperience	tmpcode/commond.h	/^        DWORD  dwMaxExperience; \/\/…˝º∂ Ï¡∑∂»$/;"	m	struct:stSendAllLingQiSkillsUserCmd::lingQiSkills
dwMaxExperience	tmpcode/commond.h	/^        DWORD dwMaxExperience;          \/**< …˝º∂æ≠—È *\/$/;"	m	struct:OneLifeSkill
dwMaxExperience	tmpcode/commond.h	/^    DWORD  dwMaxExperience; \/\/…˝º∂ Ï¡∑∂»$/;"	m	struct:stLingQiSkillUserCmd
dwMaxHP	base/Command.h	/^    DWORD dwMaxHP;        \/**< MaxHP *\/$/;"	m	struct:Cmd::stNPCHPMapScreenUserCmd
dwMaxHealth	base/Command.h	/^  DWORD dwMaxHealth;        \/\/ HP$/;"	m	struct:Cmd::stFreshTeamMemberUserCmd
dwMaxHealth	base/Command.h	/^  DWORD dwMaxHealth;        \/\/ HP$/;"	m	struct:Cmd::stTeamMemberData
dwMaxHealth	tmpcode/commond.h	/^	DWORD dwMaxHealth;				\/\/ HP$/;"	m	struct:stFreshTeamMemberUserCmd
dwMaxHealth	tmpcode/commond.h	/^	DWORD dwMaxHealth;				\/\/ HP$/;"	m	struct:stTeamMemberData
dwMaxHp	base/Command.h	/^  DWORD dwMaxHp;\/\/ÊúÄÂ§ßhp$/;"	m	struct:Cmd::stRTSelectedHpMpPropertyUserCmd
dwMaxHp	tmpcode/commond.h	/^        DWORD dwMaxHp;\/\/◊Ó¥Ûhp  $/;"	m	struct:stRTSelectedHpMpPropertyUserCmd
dwMaxLevel	tmpcode/commond.h	/^        WORD  dwMaxLevel;$/;"	m	struct:OneLifeSkill
dwMaxMp	base/Command.h	/^  DWORD dwMaxMp;          \/\/MP$/;"	m	struct:Cmd::stTeamMemberData
dwMaxMp	base/Command.h	/^  DWORD dwMaxMp;\/\/ÊúÄÂ§ßmp$/;"	m	struct:Cmd::stRTSelectedHpMpPropertyUserCmd
dwMaxMp	base/Command.h	/^  WORD dwMaxMp;          \/\/MP$/;"	m	struct:Cmd::stFreshTeamMemberUserCmd
dwMaxMp	tmpcode/commond.h	/^	DWORD dwMaxMp;					\/\/MP$/;"	m	struct:stTeamMemberData
dwMaxMp	tmpcode/commond.h	/^	WORD dwMaxMp;					\/\/MP$/;"	m	struct:stFreshTeamMemberUserCmd
dwMaxMp	tmpcode/commond.h	/^        DWORD dwMaxMp;\/\/◊Ó¥Ûmp          $/;"	m	struct:stRTSelectedHpMpPropertyUserCmd
dwMergeVersion	base/Command.h	/^  DWORD dwMergeVersion;$/;"	m	struct:Cmd::stMergeVersionCheckUserCmd
dwMoney	base/BillCommand.h	/^      DWORD dwMoney;          \/\/\/ ÂÜ≤ÂÖ•Èì∂Â∏ÅÊï∞Èáè$/;"	m	struct:Cmd::Bill::t_Stock_Save
dwMoney	base/BillCommand.h	/^      DWORD dwMoney;          \/\/\/ Â•óÁé∞Èì∂Â∏ÅÊï∞Èáè$/;"	m	struct:Cmd::Bill::t_Stock_Fetch
dwMoney	base/Command.h	/^	DWORD dwMoney;$/;"	m	struct:Cmd::stUpdateTradeMoneycmd
dwMoney	base/Command.h	/^  DWORD dwMoney;  \/\/ ‰∏™‰∫∫ÈóÆÁ≠îÊó∂ÔºåÊâÄÈúÄÈì∂‰∏§$/;"	m	struct:Cmd::stCreateQuiz
dwMoney	base/Command.h	/^  DWORD dwMoney;$/;"	m	struct:Cmd::stContributeUnion
dwMoney	base/Command.h	/^  DWORD dwMoney;\/\/\/ ÂΩìÂâçÂ∏êÂè∑Èì∂Â∏Å$/;"	m	struct:Cmd::stReturnFundStockUserCmd
dwMoney	base/Command.h	/^  DWORD dwMoney;\/\/\/ Êìç‰ΩúÈì∂Â∏ÅÊï∞Èáè$/;"	m	struct:Cmd::stTransferFundStockFetchUserCmd
dwMoney	base/Command.h	/^  DWORD dwMoney;\/\/\/ Êìç‰ΩúÈì∂Â∏ÅÊï∞Èáè$/;"	m	struct:Cmd::stTransferFundStockSaveUserCmd
dwMoney	base/SessionCommand.h	/^      DWORD dwMoney;      \/\/\/ Â•ñÂä±Èì∂‰∏§$/;"	m	struct:Cmd::Session::t_quizAward_SceneSession
dwMoney	base/SessionCommand.h	/^      DWORD dwMoney;  \/\/\/ ÈúÄË¶ÅÊâ£Èô§ÈáëÈ¢ù$/;"	m	struct:Cmd::Session::t_transDareCountry_SceneSession
dwMoney	base/SessionCommand.h	/^      DWORD dwMoney;$/;"	m	struct:Cmd::Session::t_PickupMaster_SceneSession
dwMoney	base/SessionCommand.h	/^      DWORD dwMoney;$/;"	m	struct:Cmd::Session::t_PickupRecommend_SceneSession
dwMoney	base/SessionCommand.h	/^      int dwMoney; \/\/  ËµÑÈáë$/;"	m	struct:Cmd::Session::t_OpUnionMoney_SceneSession
dwMoney	base/Union.h	/^  DWORD     dwMoney;        \/\/ Â∏Æ‰ºöËµÑÈáë$/;"	m	struct:UnionDef::stUnionInfo
dwMoney	tmpcode/commond.h	/^		DWORD dwMoney;$/;"	m	struct:stReturnCountryTax::CityInfo
dwMoney	tmpcode/commond.h	/^	DWORD dwMoney;                  \/\/ º“◊Â◊ Ω$/;"	m	struct:stSeptBaseInfoCmd
dwMoney	tmpcode/commond.h	/^	DWORD dwMoney; \/\/ ”∂±¯Õ≈◊ Ω$/;"	m	struct:stUnionBaseInfoCmd
dwMoney	tmpcode/commond.h	/^	DWORD dwMoney;\/\/\/ ≤Ÿ◊˜“¯±“ ˝¡ø$/;"	m	struct:stTransferFundStockFetchUserCmd
dwMoney	tmpcode/commond.h	/^	DWORD dwMoney;\/\/\/ ≤Ÿ◊˜“¯±“ ˝¡ø$/;"	m	struct:stTransferFundStockSaveUserCmd
dwMoney	tmpcode/commond.h	/^	DWORD dwMoney;\/\/\/ µ±«∞’ ∫≈“¯±“$/;"	m	struct:stReturnFundStockUserCmd
dwMoney	tmpcode/commond.h	/^        DWORD dwMoney; \/\/æËœ◊ ˝¡ø$/;"	m	struct:stContributeMoneyUnionCmd
dwMonthCard	base/BillCommand.h	/^      DWORD dwMonthCard;  \/\/ÊúàÂç°$/;"	m	struct:Cmd::Bill::t_Return_Card_Gold
dwMonthCard	base/Command.h	/^  DWORD dwMonthCard;\/\/ÊúàÂç°$/;"	m	struct:Cmd::stReturnCardAndGold
dwMoonRageNum	tmpcode/commond.h	/^    DWORD dwMoonRageNum;$/;"	m	struct:stUpdateIntensifyRageNumUserCmd
dwMozhuThisId	tmpcode/commond.h	/^	DWORD dwMozhuThisId;  \/\/ƒß÷Èµƒthisid$/;"	m	struct:stFuwenMozhuPropertyUserCmd
dwMp	base/Command.h	/^  DWORD dwMp;$/;"	m	struct:Cmd::stTeamMemberData
dwMp	base/Command.h	/^  WORD dwMp;$/;"	m	struct:Cmd::stFreshTeamMemberUserCmd
dwMp	tmpcode/commond.h	/^	DWORD dwMp;$/;"	m	struct:stTeamMemberData
dwMp	tmpcode/commond.h	/^	WORD dwMp;$/;"	m	struct:stFreshTeamMemberUserCmd
dwMsgType	base/Command.h	/^    DWORD dwMsgType;  \/\/ ÊåëÊàòËÄÖÂèëËµ∑ÊåëÊàòËÄÖÊó†ÊÑè‰πâ„ÄÇÊúçÂä°Âô®Êî∂Âà∞ËØ•ÂëΩ‰ª§ÂêéÔºåÁΩÆ‰∏∫DARE_QUESTIONÔºåËΩ¨ÂèëÁªôÊúâÊùÉÈôêÁöÑÁõ∏Â∫îÁé©ÂÆ∂„ÄÇ$/;"	m	struct:Cmd::stActiveDareCmd
dwMyID	base/Command.h	/^	DWORD dwMyID;$/;"	m	struct:Cmd::stUpdateTradeMoneycmd
dwNeedMoney	tmpcode/commond.h	/^	DWORD dwNeedMoney;		\/\/ π∫¬ÚÀ˘–ËΩ«Æ$/;"	m	struct:rtAreaDataHouseUserCmd
dwNeedMoney	tmpcode/commond.h	/^	DWORD dwNeedMoney;  \/\/ –Ë“™≥‰÷µµƒ«Æ ˝, µ•Œª: ‘™$/;"	m	struct:Exchange2GiftItem
dwNotify	base/Command.h	/^    DWORD dwNotify;     \/\/ ÈÄöÁü•Á±ªÂûã$/;"	m	struct:Cmd::stNotifyDare
dwNpcDataID	base/Command.h	/^	DWORD dwNpcDataID;      \/**< npcÁöÑÊï∞ÊçÆID *\/$/;"	m	struct:Cmd::t_NpcData
dwNpcDataID	tmpcode/commond.h	/^    DWORD dwNpcDataID;                      \/**< npcµƒ ˝æ›ID£¨º¥‘⁄tbl÷–µƒid *\/$/;"	m	struct:t_NPCData
dwNpcID	base/Command.h	/^  DWORD dwNpcID;$/;"	m	struct:Cmd::stDareNpcDare
dwNpcID	base/Command.h	/^  DWORD dwNpcID;$/;"	m	struct:Cmd::stDareNpcGetGold
dwNpcID	base/Command.h	/^  DWORD dwNpcID;$/;"	m	struct:Cmd::stQuestionNpcDareInfo
dwNpcID	base/SessionCommand.h	/^      DWORD dwNpcID;$/;"	m	struct:Cmd::Session::t_NpcDare_Dare_SceneSession
dwNpcID	base/SessionCommand.h	/^      DWORD dwNpcID;$/;"	m	struct:Cmd::Session::t_NpcDare_GetGold_SceneSession
dwNpcID	base/SessionCommand.h	/^      DWORD dwNpcID;$/;"	m	struct:Cmd::Session::t_NpcDare_NotifyScene_SceneSession
dwNpcID	base/SessionCommand.h	/^      DWORD dwNpcID;$/;"	m	struct:Cmd::Session::t_questionNpcDare_SceneSession
dwNpcID	tmpcode/commond.h	/^         DWORD dwNpcID;                  \/\/NPCµƒID$/;"	m	struct:stRetNpcOccupiedBySeptNpcDare
dwNpcID	tmpcode/commond.h	/^    DWORD dwNpcID;     \/\/¥˙±“œµÕ≥÷–ºŸnpcµƒid$/;"	m	struct:stDaiBiBuyTradeUserCmd
dwNpcLockedUser	ScenesServer/SceneNpc.h	/^  DWORD dwNpcLockedUser;$/;"	m	class:SceneNpc
dwNpcTempID	base/Command.h	/^    DWORD dwNpcTempID;      \/**< Npc‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stNpcDeathUserCmd
dwNpcTempID	base/Command.h	/^    DWORD dwNpcTempID;      \/**< Npc‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stNpcMoveMoveUserCmd
dwNpcTempID	base/Command.h	/^    DWORD dwNpcTempID[0];  \/\/‰∏¥Êó∂ÁºñÂè∑ÂàóË°®(DWORD)$/;"	m	struct:Cmd::stRequestMapNpcDataMapScreenUserCmd
dwNpcTempID	base/Command.h	/^  DWORD dwNpcTempID;$/;"	m	struct:Cmd::stVisitNpcTradeUserCmd
dwNpcTempID	tmpcode/commond.h	/^		DWORD dwNpcTempID;                      \/**< npc¡Ÿ ±ID *\/$/;"	m	struct:stRefreshNpcStateMapScreenUserCmd::npcState
dwNpcTempID	tmpcode/commond.h	/^		DWORD dwNpcTempID;  $/;"	m	struct:stSendFriendListUserCmd
dwNpcTempID	tmpcode/commond.h	/^	DWORD dwNpcTempID;                      \/**< Npc¡Ÿ ±±‡∫≈ *\/$/;"	m	struct:stNpcMoveMoveUserCmd
dwNpcTempID	tmpcode/commond.h	/^	DWORD dwNpcTempID;$/;"	m	struct:stSellObjListNpcTradeUserCmd
dwNpcTempID	tmpcode/commond.h	/^	DWORD dwNpcTempID;$/;"	m	struct:stSellObjectNpcTradeUserCmd
dwNpcTempID	tmpcode/commond.h	/^	DWORD dwNpcTempID;$/;"	m	struct:stVisitNpcTradeUserCmd
dwNpcTempID	tmpcode/commond.h	/^	DWORD dwNpcTempID;\/\/±¶œ‰µƒtempid$/;"	m	struct:stOpenTrasureUserCmd
dwNpcTempID	tmpcode/commond.h	/^        DWORD dwNpcTempID;      \/\/∞…≈ÆtempID$/;"	m	struct:stPresentBarGirlUserCmd
dwNpcTempID	tmpcode/commond.h	/^        DWORD dwNpcTempID;      \/\/∞…≈ÆtempID$/;"	m	struct:stRTPresentBarGirlUserCmd
dwNpcTempID	tmpcode/commond.h	/^        DWORD dwNpcTempID;$/;"	m	struct:stBuyObjectNpcTradeUserCmd
dwNpcTempID	tmpcode/commond.h	/^    DWORD dwNpcTempID;                      \/**< Npc¡Ÿ ±±‡∫≈ *\/$/;"	m	struct:stNpcDeathUserCmd
dwNpcTempID	tmpcode/commond.h	/^    DWORD dwNpcTempID;$/;"	m	struct:stRepairObjectNpcTradeUserCmd
dwNpcTempId	tmpcode/commond.h	/^	DWORD dwNpcTempId;  \/\/ Àµª∞µƒNPC¡Ÿ ±ID$/;"	m	struct:stNpcChatUserCmd
dwNum	base/BillCommand.h	/^      DWORD dwNum;  \/\/ÂÜ≤ÂÄºÂêéÁöÑÂà∞ÊúüÊó∂Èó¥(time_t)$/;"	m	struct:Cmd::Bill::t_Redeem_MonthCard_Gateway
dwNum	base/Card.h	/^	DWORD dwNum;		\/\/’‚∏ˆ Ù–‘–Ë“™…æ≥˝$/;"	m	struct:t_Card
dwNum	base/Command.h	/^    DWORD dwNum;        \/**< ÂàÜË£ÇÁöÑÊï∞Èáè *\/$/;"	m	struct:Cmd::stSplitObjectPropertyUserCmd
dwNum	base/Command.h	/^    DWORD dwNum;        \/**< Êï∞Èáè *\/$/;"	m	struct:Cmd::stRefCountObjectPropertyUserCmd
dwNum	base/Command.h	/^  DWORD dwNum;    \/\/\/ Êï∞Èáè$/;"	m	struct:Cmd::StockList
dwNum	base/Command.h	/^  DWORD dwNum;  \/\/Âà∞ÊúüÊó∂Èó¥(time_t,4Â≠óËäÇÁªìÊûÑ)$/;"	m	struct:Cmd::stRedeemMonthCard
dwNum	base/Command.h	/^  DWORD dwNum;  \/\/ËøîÂõûÂΩìÂâçÈáëÂ∏ÅÊï∞$/;"	m	struct:Cmd::stRedeemGold
dwNum	base/Command.h	/^  DWORD dwNum;  \/\/ÈáëÂ∏ÅÊàñËÄÖÈì∂Â∏ÅÊï∞Èáè$/;"	m	struct:Cmd::stPutListStockUserCmd
dwNum	base/Command.h	/^  DWORD dwNum;  \/\/ÈúÄË¶ÅÂÖëÊç¢ÁöÑÁÇπÊï∞$/;"	m	struct:Cmd::stRequestRedeemGold
dwNum	base/Command.h	/^  DWORD dwNum;$/;"	m	struct:Cmd::FirstTen
dwNum	base/Command.h	/^  DWORD dwNum;\/\/\/ ÂçñÂçïÊµÅÊ∞¥Âè∑$/;"	m	struct:Cmd::stConsignCancelGoldStockUserCmd
dwNum	base/Command.h	/^  DWORD dwNum;\/\/\/ ÂçñÂçïÊµÅÊ∞¥Âè∑$/;"	m	struct:Cmd::stConsignCancelMoneyStockUserCmd
dwNum	base/Command.h	/^  DWORD dwNum;\/\/\/ ÈáëÂ∏ÅÊï∞Èáè$/;"	m	struct:Cmd::stConsignGoldStockUserCmd
dwNum	base/Command.h	/^  DWORD dwNum;\/\/\/ Èì∂Â∏ÅÊï∞Èáè$/;"	m	struct:Cmd::stConsignMoneyStockUserCmd
dwNum	base/Object.h	/^	DWORD dwNum;	\/\/  ˝¡ø$/;"	m	struct:t_Object
dwNum	base/Object.h	/^	DWORD dwNum;	\/\/  ˝¡ø$/;"	m	struct:t_Object_mobile
dwNum	base/SceneCommand.h	/^      DWORD dwNum;  \/\/–Ë“™∂“ªªµƒµ„ ˝$/;"	m	struct:Cmd::Scene::t_Request_RedeemGold
dwNum	base/SessionCommand.h	/^      DWORD dwNum;$/;"	m	struct:Cmd::Session::t_notifyAddIntegral
dwNum	base/SessionCommand.h	/^      int   dwNum;      \/\/\/ Â¢ûÊàñÂáèÁöÑÈáëÈí±Êï∞$/;"	m	struct:Cmd::Session::t_dareGold_SceneSession
dwNum	tmpcode/commond.h	/^		DWORD dwNum;				\/**< ∑÷¡—µƒ ˝¡ø *\/$/;"	m	struct:stSplitObjectPropertyUserCmd
dwNum	tmpcode/commond.h	/^		DWORD dwNum;				\/**<  ˝¡ø *\/$/;"	m	struct:stRefCountObjectPropertyUserCmd
dwNum	tmpcode/commond.h	/^	  DWORD dwNum;	\/\/  ˝¡ø$/;"	m	struct:st_WatchPlayer
dwNum	tmpcode/commond.h	/^	DWORD dwNum;        \/\/ ŒÔ∆∑ ˝¡ø$/;"	m	struct:Exchange2GiftItem
dwNum	tmpcode/commond.h	/^	DWORD dwNum;        \/\/\/  ˝¡ø$/;"	m	struct:StockList
dwNum	tmpcode/commond.h	/^	DWORD dwNum;    \/\/∑µªÿµ±«∞Ω◊” ˝$/;"	m	struct:stRedeemGold
dwNum	tmpcode/commond.h	/^	DWORD dwNum;    \/\/Ω◊”ªÚ’ﬂ“¯±“ ˝¡ø$/;"	m	struct:stPutListStockUserCmd
dwNum	tmpcode/commond.h	/^	DWORD dwNum;    \/\/–Ë“™∂“ªªµƒµ„ ˝$/;"	m	struct:stRequestRedeemGold
dwNum	tmpcode/commond.h	/^	DWORD dwNum;  \/\/ ∂“ªª ˝, ◊‹ ˝=∂“ªª ˝*configItem.dwNum$/;"	m	struct:stGetExchange4Gift
dwNum	tmpcode/commond.h	/^	DWORD dwNum;  \/\/ ∂“ªª ˝, ◊‹ ˝=∂“ªª ˝*configItem.dwNum$/;"	m	struct:stGetExchange5Gift
dwNum	tmpcode/commond.h	/^	DWORD dwNum;  \/\/ ŒÔ∆∑ ˝¡ø$/;"	m	struct:Exchange4ConfigItem
dwNum	tmpcode/commond.h	/^	DWORD dwNum;  \/\/ ŒÔ∆∑ ˝¡ø$/;"	m	struct:Exchange4ConfigItemClient
dwNum	tmpcode/commond.h	/^	DWORD dwNum; \/\/ ŒÔ∆∑ ˝¡ø$/;"	m	struct:NewbieGiftItem
dwNum	tmpcode/commond.h	/^	DWORD dwNum;$/;"	m	struct:FirstTen
dwNum	tmpcode/commond.h	/^	DWORD dwNum;\/\/\/ ¬Ùµ•¡˜ÀÆ∫≈$/;"	m	struct:stConsignCancelGoldStockUserCmd
dwNum	tmpcode/commond.h	/^	DWORD dwNum;\/\/\/ ¬Ùµ•¡˜ÀÆ∫≈$/;"	m	struct:stConsignCancelMoneyStockUserCmd
dwNum	tmpcode/commond.h	/^        DWORD dwNum;$/;"	m	struct:stBuyObjectNpcTradeUserCmd
dwNum	tmpcode/commond.h	/^    WORD  dwNum;         \/\/◊™ªªƒø±Íµƒ±‡∫≈$/;"	m	struct:stEnergyTransformPropertyUserCmd
dwNum	tmpcode/commond.h	/^    WORD dwNum;\/\/ ’π∫µƒ ˝¡ø$/;"	m	struct:stSalePurchase
dwNumber	base/Command.h	/^    DWORD dwNumber;        \/**< ‰ΩøÁî®ÁöÑÊï∞Èáè *\/$/;"	m	struct:Cmd::stUseObjectPropertyUserCmd
dwNumber	tmpcode/commond.h	/^	DWORD dwNumber;				\/**<  π”√µƒ ˝¡ø *\/$/;"	m	struct:stUseObjectPropertyUserCmd
dwObjID	tmpcode/commond.h	/^	DWORD dwObjID;	\/\/∑ ¡œID$/;"	m	struct:stUpgradeSoilHouseUserCmd
dwObjID	tmpcode/commond.h	/^	DWORD dwObjID;	\/\/π˚ µID£ª”√”⁄œ‘ æ∂‘”¶Õº∆¨$/;"	m	struct:SoilInfo
dwObjID	tmpcode/commond.h	/^	DWORD dwObjID;	\/\/ÀÆID$/;"	m	struct:stWaterSoilHouseUserCmd
dwObjID	tmpcode/commond.h	/^	DWORD dwObjID;	\/\/÷÷◊”ID$/;"	m	struct:stPlantSoilHouseUserCmd
dwObjID	tmpcode/commond.h	/^	DWORD dwObjID[0];                               \/\/ ŒÔ∆∑Œ®“ªID ¡–±Ì$/;"	m	struct:stSellObjListNpcTradeUserCmd
dwObjTempId	tmpcode/commond.h	/^	DWORD dwObjTempId;  \/\/ ŒÔ∆∑µƒ¡Ÿ ±ID$/;"	m	struct:stReqDragonIslandMazeContinue
dwObjThisID	tmpcode/commond.h	/^	DWORD dwObjThisID;$/;"	m	struct:stReqOpenHappyCardBoxUserCmd
dwObjThisID	tmpcode/commond.h	/^        DWORD dwObjThisID;   \/\/ π”√µƒ¡Èƒ‹◊™ªª∆˜id$/;"	m	struct:stConvertMagicPhysicsUserCmd
dwObjThisID	tmpcode/commond.h	/^        DWORD dwObjThisID;$/;"	m	struct:stChargeAccelcmdPropUserCmd
dwObjThisID	tmpcode/commond.h	/^        DWORD dwObjThisID;$/;"	m	struct:stStartAccelcmdPropUserCmd
dwObjThisId	tmpcode/commond.h	/^	DWORD dwObjThisId;  \/\/ µ¿æﬂThisID$/;"	m	struct:stUseTransportObjectUserCmd
dwObjThisId	tmpcode/commond.h	/^	DWORD dwObjThisId;  \/\/ ’˝◊º±∏ π”√µƒ¥´ÀÕµ¿æﬂThisID$/;"	m	struct:stTransportObjectConfigUserCmd
dwObjectID	ScenesServer/Skill.cpp	/^    DWORD  dwObjectID;$/;"	m	class:ItemObjectCompare
dwObjectID	base/Card.h	/^	DWORD dwObjectID;		    \/\/ŒÔ∆∑±Ì÷–µƒ±‡∫≈$/;"	m	struct:t_Card
dwObjectID	base/Command.h	/^  DWORD dwObjectID;                       \/**< Áâ©ÂìÅÁöÑÊï∞ÊçÆID *\/$/;"	m	struct:Cmd::t_MapObjectData
dwObjectID	base/Command.h	/^  DWORD dwObjectID;$/;"	m	struct:Cmd::stTradeObject
dwObjectID	base/Object.h	/^	DWORD dwObjectID;  \/\/ŒÔ∆∑±Ì÷–µƒ±‡∫≈$/;"	m	struct:t_Object
dwObjectID	base/Object.h	/^	DWORD dwObjectID;  \/\/ŒÔ∆∑±Ì÷–µƒ±‡∫≈$/;"	m	struct:t_Object_mobile
dwObjectID	tmpcode/commond.h	/^	  DWORD dwObjectID;  \/\/\/\/ŒÔ∆∑¿‡±id$/;"	m	struct:st_WatchPlayer
dwObjectID	tmpcode/commond.h	/^	DWORD dwObjectID;                       \/**< ŒÔ∆∑µƒ ˝æ›ID *\/$/;"	m	struct:t_MapObjectData
dwObjectID	tmpcode/commond.h	/^	DWORD dwObjectID;$/;"	m	struct:stAddObjectDaTaoShaUserCmd
dwObjectID	tmpcode/commond.h	/^        DWORD dwObjectID;$/;"	m	struct:stBuyObjectNpcTradeUserCmd
dwObjectID	tmpcode/commond.h	/^        DWORD dwObjectID;$/;"	m	struct:stTradeObject
dwObjectID	tmpcode/commond.h	/^    DWORD dwObjectID;  \/\/¥˙±“œµÕ≥÷–“™π∫¬ÚµƒŒÔ∆∑id$/;"	m	struct:stDaiBiBuyTradeUserCmd
dwObjectID	tmpcode/commond.h	/^    DWORD dwObjectID;  \/\/∂“ªªÃ◊◊∞µƒŒÔ∆∑id$/;"	m	struct:stBuySuitTradeUserCmd
dwObjectId	tmpcode/commond.h	/^	DWORD dwObjectId;  \/\/ ŒÔ∆∑ID$/;"	m	struct:Exchange4ConfigItem
dwObjectId	tmpcode/commond.h	/^	DWORD dwObjectId;  \/\/ ŒÔ∆∑ID$/;"	m	struct:Exchange4ConfigItemClient
dwObjectTempID	base/Command.h	/^  DWORD dwObjectTempID;          \/\/\/ Áâ©ÂìÅ‰∏¥Êó∂ID$/;"	m	struct:Cmd::stQuestionObject
dwObjectTempID	base/Command.h	/^  DWORD dwObjectTempID;$/;"	m	struct:Cmd::stTradeObject
dwObjectTempID	base/SessionCommand.h	/^      DWORD dwObjectTempID;$/;"	m	struct:Cmd::Session::t_questionObject_SceneSession
dwObjectTempID	tmpcode/commond.h	/^        DWORD dwObjectTempID;$/;"	m	struct:stTradeObject
dwObjectTempID	tmpcode/commond.h	/^    DWORD dwObjectTempID;          \/\/\/ ŒÔ∆∑¡Ÿ ±ID£ªtype Œ™ 1  ±∏¥”√¥À◊÷∂Œ£¨±Ì æ≈ƒ¬ÙID,typeŒ™2 ±£¨¥˙±Ì¡È∆˜ID$/;"	m	struct:stQuestionObject
dwOfflineTime	tmpcode/commond.h	/^	int dwOfflineTime;$/;"	m	struct:stReturnHealthyGameUserCmd
dwOffset	tmpcode/commond.h	/^	DWORD		dwOffset;	\/\/∆´“∆$/;"	m	struct:stStampDataUserCmd
dwOkTime	base/Command.h	/^  DWORD dwOkTime;$/;"	m	struct:Cmd::ConsignSelfHistoryType
dwOkTime	tmpcode/commond.h	/^	DWORD dwOkTime;$/;"	m	struct:ConsignSelfHistoryType
dwOldObjID	tmpcode/commond.h	/^    DWORD dwOldObjID;  \/\/≥Âµ÷¡È Øµƒæ…Ã◊◊∞Œ®“ªid$/;"	m	struct:stBuySuitTradeUserCmd
dwOldObjID	tmpcode/commond.h	/^    DWORD dwOldObjID;  \/\/∂“ªªÃ◊◊∞ ± π”√,µ÷ªª¡È Øµƒæ…Ã◊◊∞Œ®“ªid$/;"	m	struct:stDaiBiBuyTradeUserCmd
dwOldTempID	base/Command.h	/^  DWORD dwOldTempID;\/\/‰∏¥Êó∂ÁºñÂè∑$/;"	m	struct:Cmd::stSelectPropertyUserCmd
dwOldTempID	tmpcode/commond.h	/^	DWORD dwOldTempID;\/\/¡Ÿ ±±‡∫≈$/;"	m	struct:stSelectPropertyUserCmd
dwOnlineTime	tmpcode/commond.h	/^	int dwOnlineTime;$/;"	m	struct:stReturnHealthyGameUserCmd
dwOption	base/Command.h	/^  DWORD dwOption;  \/\/ ÁßëÊäÄID  $/;"	m	struct:Cmd::stConfirmSearcherUserCmd
dwOption	base/Command.h	/^  DWORD dwOption; \/\/ ËØ•Ê¨°Êèê‰∫§ÁöÑÈÄâÈ°π$/;"	m	struct:Cmd::stCommitVoteUserCmd
dwOption	base/Command.h	/^  DWORD dwOption; \/\/ ÈÄâÈ°πÁºñÂè∑$/;"	m	struct:Cmd::stVoteItem
dwOption	base/Command.h	/^  DWORD dwOption;$/;"	m	struct:Cmd::stCancelTechSearchUserCmd
dwOption	base/Command.h	/^  DWORD dwOption;$/;"	m	struct:Cmd::stSetTechSearchUserCmd
dwOption	base/Command.h	/^  DWORD dwOption;$/;"	m	struct:Cmd::stTechItem
dwOption	base/Command.h	/^  DWORD dwOption;$/;"	m	struct:Cmd::stUpTechDegreeUserCmd
dwOrder	base/Command.h	/^  DWORD dwOrder;        \/\/ ÂÆ∂ÊóèÊéíÂêç$/;"	m	struct:Cmd::stSeptSortInfo
dwOrder	base/Command.h	/^  DWORD dwOrder;        \/\/ Â∏Æ‰ºöÊéíÂêç$/;"	m	struct:Cmd::stUnionSortInfo
dwOrder	tmpcode/commond.h	/^	DWORD dwOrder;                          \/\/ º“◊Â≈≈√˚$/;"	m	struct:stSeptSortInfo
dwOrder	tmpcode/commond.h	/^	DWORD dwOrder;                          \/\/ ”∂±¯Õ≈≈≈√˚$/;"	m	struct:stUnionSortInfo
dwOrder	tmpcode/commond.h	/^	DWORD dwOrder;$/;"	m	struct:stRtnSeptSort
dwOrder	tmpcode/commond.h	/^	DWORD dwOrder;$/;"	m	struct:stRtnUnionSort
dwOtherID	base/Command.h	/^	DWORD dwOtherID;$/;"	m	struct:Cmd::stUpdateTradeMoneycmd
dwOverdueCrystal	tmpcode/commond.h	/^	DWORD dwOverdueCrystal;  \/\/ ÕÊº“À˘¥Ìπ˝¡Ï»°µƒ±£œ’µƒÀÆæß±“∑µªπ≤ø∑÷$/;"	m	struct:stReturnWeekAssuranceDrawState
dwOwner	base/Command.h	/^  DWORD dwOwner;$/;"	m	struct:Cmd::t_MapObjectData
dwOwner	tmpcode/commond.h	/^	DWORD dwOwner;				\/\/ŒÔ∆∑À˘ ÙΩ«…´µƒtemp ID \/\/ –ﬁ∏ƒŒ™»ÀŒÔµƒid( ˝æ›ø‚÷–µƒid)$/;"	m	struct:t_MapObjectData
dwOwnerID	tmpcode/commond.h	/^	DWORD dwOwnerID;$/;"	m	struct:t_NPCData
dwPasswd	tmpcode/commond.h	/^	DWORD dwPasswd;$/;"	m	struct:stSetTempUnsafetyUserCmd
dwPieceThisId	tmpcode/commond.h	/^	DWORD dwPieceThisId;  \/\/ ±¶ Ø\/æ´ ØÀÈ∆¨ThisID$/;"	m	struct:stSealMagicUserCmd
dwPieceThisId	tmpcode/commond.h	/^	DWORD dwPieceThisId;  \/\/ …œ¥Œ π”√µƒÀÈ∆¨ID$/;"	m	struct:stReturnPrevSealMagicUserCmd
dwPkPoints	tmpcode/commond.h	/^		WORD dwPkPoints[5];$/;"	m	union:LingQiPkData::__anon327
dwPlayerId	tmpcode/commond.h	/^	 DWORD dwPlayerId;       $/;"	m	struct:stRetTeamInfoCmd
dwPlayerId	tmpcode/commond.h	/^	 DWORD dwPlayerId;       $/;"	m	struct:stRetTeamInfo_Client
dwPoint	base/BillCommand.h	/^      DWORD dwPoint;  \/\/Ââ©‰ΩôÁÇπÊï∞$/;"	m	struct:Cmd::Bill::t_Return_Point
dwPoint	base/Command.h	/^  DWORD dwPoint;\/\/Ââ©‰ΩôÁÇπÊï∞$/;"	m	struct:Cmd::stReturnRequestPoint
dwPoint	tmpcode/commond.h	/^	DWORD dwPoint;  \/\/ ª˝∑÷÷µ$/;"	m	struct:stCrusadeCastlePoint
dwPoint	tmpcode/commond.h	/^	DWORD dwPoint;\/\/ £”‡µ„ ˝$/;"	m	struct:stReturnRequestPoint
dwPoints	tmpcode/commond.h	/^	DWORD dwPoints;  \/\/ π∫¬Úµ„ ˝$/;"	m	struct:stBuyWeekAssurance
dwPoints	tmpcode/commond.h	/^	DWORD dwPoints[0];  \/\/ byPointsCount∏ˆ±£œ’µ„ ˝∂Ó∂»$/;"	m	struct:stReturnWeekAssuranceConfig
dwPoints	tmpcode/commond.h	/^	DWORD dwPoints[0];  \/\/ “—π∫¬Úµƒ±£œ’µ„ ˝∂Ó∂»÷µ$/;"	m	struct:stReturnBoughtWeekAssurance
dwPosX	ScenesServer/SceneUser.h	/^      DWORD dwPosX;$/;"	m	struct:SceneUser::__anon188
dwPosX	base/SessionCommand.h	/^      DWORD dwPosX;$/;"	m	struct:Cmd::Session::t_NpcDare_NotifyScene_SceneSession
dwPosX	base/SessionCommand.h	/^      DWORD dwPosX;$/;"	m	struct:Cmd::Session::t_notifyNpcHoldData
dwPosY	ScenesServer/SceneUser.h	/^      DWORD dwPosY;$/;"	m	struct:SceneUser::__anon188
dwPosY	base/SessionCommand.h	/^      DWORD dwPosY;$/;"	m	struct:Cmd::Session::t_notifyNpcHoldData
dwPotentialZhuId	tmpcode/commond.h	/^	DWORD dwPotentialZhuId;  \/\/“™ π”√µƒ«±ƒ‹÷Èid$/;"	m	struct:stAddSkillPointPropertyUserCmd
dwPoxY	base/SessionCommand.h	/^      DWORD dwPoxY;$/;"	m	struct:Cmd::Session::t_NpcDare_NotifyScene_SceneSession
dwPrice	base/Command.h	/^  DWORD dwPrice;  \/\/\/ ÂßîÊâò‰ª∑Ê†º$/;"	m	struct:Cmd::StockList
dwPrice	base/Command.h	/^  DWORD dwPrice;  \/\/Âçï‰ª∑(Èì∂Â∏Å\/ÈáëÂ∏Å)$/;"	m	struct:Cmd::stPutListStockUserCmd
dwPrice	base/Command.h	/^  DWORD dwPrice;$/;"	m	struct:Cmd::FirstTen
dwPrice	base/Command.h	/^  WORD dwPrice;$/;"	m	struct:Cmd::ConsignHistoryType
dwPrice	tmpcode/commond.h	/^	DWORD dwPrice;  \/\/\/ ŒØÕ–º€∏Ò$/;"	m	struct:StockList
dwPrice	tmpcode/commond.h	/^	DWORD dwPrice;  \/\/µ•º€(“¯±“\/Ω◊”)$/;"	m	struct:stPutListStockUserCmd
dwPrice	tmpcode/commond.h	/^	DWORD dwPrice;$/;"	m	struct:FirstTen
dwPrice	tmpcode/commond.h	/^	WORD dwPrice;$/;"	m	struct:ConsignHistoryType
dwProgress	base/Command.h	/^  DWORD dwProgress;$/;"	m	struct:Cmd::stTechItem
dwProtecedLeftTime	base/Command.h	/^  DWORD dwProtecedLeftTime;$/;"	m	struct:Cmd::t_MapObjectData
dwProtectedLeftTime	tmpcode/commond.h	/^	DWORD   dwProtectedLeftTime;$/;"	m	struct:t_MapObjectData
dwQuestID	tmpcode/commond.h	/^	DWORD dwQuestID;$/;"	m	struct:stGetDailyRandomQuestUserCmd
dwQuestID	tmpcode/commond.h	/^	DWORD dwQuestID;$/;"	m	struct:stRemoveDailyQuestUserCmd
dwReduceDam	ScenesServer/SceneNpc.h	/^  DWORD dwReduceDam;  \/\/\/ Âè¨Âî§ÂÖΩ‰º§ÂÆ≥Êâ£Âáè$/;"	m	class:SceneNpc
dwRemainTime	tmpcode/commond.h	/^	DWORD dwRemainTime;    \/\/–°Œ›…˝µΩœ¬º∂–Ë“™ ±º‰$/;"	m	struct:stRemainLevelUpTimeDecayHouseUserCmd
dwRemainTime	tmpcode/commond.h	/^        DWORD dwRemainTime;             \/\/ £”‡µƒ ±º‰(√Î)$/;"	m	struct:stRetPotentialSkillBuildUserCmd
dwRemainTime	tmpcode/commond.h	/^        DWORD dwRemainTime;     \/\/ £”‡µƒ ±º‰(√Î)$/;"	m	struct:stSendBuildingPotentialSkillUserCmd
dwRemakeRageNum	tmpcode/commond.h	/^    DWORD dwRemakeRageNum;$/;"	m	struct:stUpdateIntensifyRageNumUserCmd
dwRepute	base/Command.h	/^  DWORD dwRepute;        \/\/ ÂÆ∂ÊóèÂ£∞Êúõ$/;"	m	struct:Cmd::stSeptSortInfo
dwRepute	base/Command.h	/^  DWORD dwRepute;      \/\/ ÂÆ∂ÊóèÂ£∞Êúõ$/;"	m	struct:Cmd::stSeptBaseInfoCmd
dwRepute	base/Sept.h	/^  DWORD     dwRepute;        \/\/ …˘Õ˚$/;"	m	struct:SeptDef::stSeptInfo
dwRepute	base/SessionCommand.h	/^      DWORD dwRepute;      \/\/\/ ÂÆ∂ÊóèÂ£∞Êúõ$/;"	m	struct:Cmd::Session::t_sendUserRelationID
dwRepute	base/SessionCommand.h	/^      DWORD dwRepute; \/\/ ÂÆ∂ÊóèÂ£∞Êúõ$/;"	m	struct:Cmd::Session::t_SendSeptNormal_SceneSession
dwRepute	base/SessionCommand.h	/^      int dwRepute; \/\/  Â£∞ÊúõÂÄº$/;"	m	struct:Cmd::Session::t_OpRepute_SceneSession
dwRepute	tmpcode/commond.h	/^	DWORD dwRepute;                 \/\/ º“◊Â…˘Õ˚$/;"	m	struct:stSeptBaseInfoCmd
dwReqId	tmpcode/commond.h	/^	 DWORD dwReqId;  \/\/ øÕªß∂Àµƒ«Î«Û∫≈£¨º¥stReqJoinChannelCmd.dwReqId$/;"	m	struct:stOpenWindow_ChannelUserCmd
dwReqId	tmpcode/commond.h	/^	 DWORD dwReqId;  \/\/ øÕªß∂À”√”⁄∆•≈‰«Î«Û”¶¥µƒID$/;"	m	struct:stReqJoinChannelCmd
dwRequestUserID	base/Command.h	/^  DWORD dwRequestUserID;    \/\/ ËØ∑Ê±ÇËÄÖID$/;"	m	struct:Cmd::stAnswerTeamUserCmd
dwRight	base/Command.h	/^	  DWORD	dwRight;$/;"	m	struct:Cmd::stSeptBaseInfoCmd::stStepRight
dwRightHandID	ScenesServer/SceneUser.h	/^    DWORD dwRightHandID;$/;"	m	struct:SceneUser
dwRightHandID	base/Command.h	/^  DWORD dwRightHandID;        \/\/\/ Âè≥ÊâãÁâ©ÂìÅID$/;"	m	struct:Cmd::t_MapUserSculpt
dwRightHandID	tmpcode/commond.h	/^	DWORD dwRightHandID;				\/\/\/ ”“ ÷ŒÔ∆∑ID$/;"	m	struct:t_MapUserSculpt
dwRoundId	tmpcode/commond.h	/^	DWORD dwRoundId;  \/\/ µ˜≤È∫≈, º¥µ˜≤È¬÷¥Œ, µ˜≤ÈµƒŒ®“ª±Í ∂∫≈$/;"	m	struct:stSurveyUserCmd
dwSacrificeThisId	tmpcode/commond.h	/^	DWORD dwSacrificeThisId;  \/\/ œ◊º¿◊∞±∏, 0±Ì æ≤ªÃ·π©$/;"	m	struct:stEquipUpgrade2PropertyUserCmd
dwSceneID	base/SessionCommand.h	/^      DWORD dwSceneID;$/;"	m	struct:Cmd::Session::t_updateSceneUnion_SceneSession
dwSceneTempID	base/SceneCommand.h	/^      DWORD dwSceneTempID;$/;"	m	struct:Cmd::Scene::t_Bill_ForwardScene
dwSceneTempID	base/SceneCommand.h	/^      DWORD dwSceneTempID;$/;"	m	struct:Cmd::Scene::t_Refresh_LoginScene
dwSceneTempID	base/SceneCommand.h	/^      DWORD dwSceneTempID;$/;"	m	struct:Cmd::Scene::t_Scene_ForwardScene
dwSceneTempID	base/SceneCommand.h	/^      DWORD dwSceneTempID;$/;"	m	struct:Cmd::Scene::t_Scene_ForwardSceneToBill
dwSceneTempID	base/SceneCommand.h	/^      DWORD dwSceneTempID;$/;"	m	struct:Cmd::Scene::t_Scene_ForwardSceneUserToBill
dwSceneTempID	base/SceneCommand.h	/^      DWORD dwSceneTempID;$/;"	m	struct:Cmd::Scene::t_Unreg_LoginScene
dwSceneTempID	base/SessionCommand.h	/^      DWORD dwSceneTempID;$/;"	m	struct:Cmd::Session::t_enterWar_SceneSession
dwSceneTempID	base/SessionCommand.h	/^      DWORD dwSceneTempID;$/;"	m	struct:Cmd::Session::t_unregUser_GateSession
dwSceneTempID	base/SessionCommand.h	/^      DWORD dwSceneTempID;$/;"	m	struct:Cmd::Session::t_unregUser_SceneSession
dwSchoolID	base/SessionCommand.h	/^      DWORD  dwSchoolID;          \/\/ Èó®Ê¥æID$/;"	m	struct:Cmd::Session::t_SchoolCreateSuccess_SceneSession
dwSchoolID	base/SessionCommand.h	/^      DWORD dwSchoolID;$/;"	m	struct:Cmd::Session::t_regUserSuccess_SceneSession
dwScore	base/Command.h	/^  DWORD dwScore;  \/\/ ÂæóÂàÜ$/;"	m	struct:Cmd::stAnswerQuiz
dwScore	base/Command.h	/^  DWORD dwScore; \/\/ Êú¨Ê¨°Á≠îÈ¢òÁ¥ØÁßØÂàÜÊï∞$/;"	m	struct:Cmd::stQuizCurScore
dwScreen	base/SceneCommand.h	/^      DWORD dwScreen;$/;"	m	struct:Cmd::Scene::t_fresh_ScreenIndex
dwSec	tmpcode/commond.h	/^        DWORD dwSec;   \/\/ªπ–Ë“™∂‡…Ÿ√Î≤≈ƒ‹∏¥ªÓ$/;"	m	struct:stSecondToReliveGatherPoint
dwSecMasterTempID	tmpcode/commond.h	/^	DWORD dwSecMasterTempID;$/;"	m	struct:stSeptBaseInfoCmd
dwSecondCountryId	tmpcode/commond.h	/^    DWORD dwSecondCountryId;$/;"	m	struct:stReturnStrongWeakCountriesUserCmd
dwSeconds	tmpcode/commond.h	/^	DWORD dwSeconds;  \/\/ –Ë“™ ±º‰(√Î)$/;"	m	struct:stNewbieGiftUserCmd
dwSeconds	tmpcode/commond.h	/^	DWORD dwSeconds;  \/\/ ÷ÿ…À◊¥Ã¨–Ë“™N√Î∫Û≤≈ƒ‹ª÷∏¥’˝≥£◊¥Ã¨$/;"	m	struct:stSecondsToRecoverFromDyingCmd
dwSelectedObjId	tmpcode/commond.h	/^	DWORD dwSelectedObjId;  \/\/ —°÷–µƒ¡Ï»°ŒÔ∆∑ID$/;"	m	struct:stWorldCupGiftBagPropertyUserCmd
dwSeptID	base/Command.h	/^    DWORD dwSeptID;$/;"	m	struct:Cmd::stRtnSeptNameListCmd::__anon131
dwSeptID	base/Command.h	/^  DWORD dwSeptID;$/;"	m	struct:Cmd::stReqSeptNameCmd
dwSeptID	base/Command.h	/^  DWORD dwSeptID;$/;"	m	struct:Cmd::stRtnSeptNameCmd
dwSeptID	base/Command.h	/^  DWORD dwSeptID;$/;"	m	struct:Cmd::t_UserData
dwSeptID	base/Command.h	/^  DWORD dwSeptID[0];$/;"	m	struct:Cmd::stReqSeptNameListCmd
dwSeptID	base/Sept.h	/^  DWORD    dwSeptID;                    \/\/ º“◊ÂµƒID$/;"	m	struct:SeptDef::stSeptInfo
dwSeptID	base/SessionCommand.h	/^      DWORD dwSeptID; \/\/ ÂÆ∂ÊóèID$/;"	m	struct:Cmd::Session::t_GetSeptExp_SceneSession
dwSeptID	base/SessionCommand.h	/^      DWORD dwSeptID; \/\/ ÂÆ∂ÊóèID$/;"	m	struct:Cmd::Session::t_GetSeptNormalExp_SceneSession
dwSeptID	base/SessionCommand.h	/^      DWORD dwSeptID; \/\/ ÂÆ∂ÊóèID$/;"	m	struct:Cmd::Session::t_OpLevel_SceneSession
dwSeptID	base/SessionCommand.h	/^      DWORD dwSeptID; \/\/ ÂÆ∂ÊóèID$/;"	m	struct:Cmd::Session::t_OpRepute_SceneSession
dwSeptID	base/SessionCommand.h	/^      DWORD dwSeptID;$/;"	m	struct:Cmd::Session::t_NpcDare_Result_SceneSession
dwSeptID	base/SessionCommand.h	/^      DWORD dwSeptID;$/;"	m	struct:Cmd::Session::t_addSeptMember_SceneSession
dwSeptID	base/SessionCommand.h	/^      DWORD dwSeptID;$/;"	m	struct:Cmd::Session::t_disbandSept_GateSession
dwSeptID	base/SessionCommand.h	/^      DWORD dwSeptID;$/;"	m	struct:Cmd::Session::t_regUserSuccess_SceneSession
dwSeptID	base/Union.h	/^  DWORD   dwSeptID;          \/\/ ‰ºöÂëòÊâÄÂ±ûÂÆ∂Êóè$/;"	m	struct:UnionDef::stUnionMemberInfo
dwSeptID	tmpcode/commond.h	/^	 DWORD dwSeptID;$/;"	m	struct:stReqSeptNameCmd
dwSeptID	tmpcode/commond.h	/^	 DWORD dwSeptID;$/;"	m	struct:stRtnSeptNameCmd
dwSeptID	tmpcode/commond.h	/^	DWORD dwSeptID;				\/\/ º“◊ÂID$/;"	m	struct:t_UserData
dwSeptId	tmpcode/commond.h	/^	DWORD   dwSeptId;$/;"	m	struct:st_CharShow2
dwSeptLevel	ScenesServer/SceneUser.h	/^    DWORD dwSeptLevel;  \/\/ ÂÆ∂ÊóèÁ≠âÁ∫ß$/;"	m	struct:SceneUser
dwSeptLevel	base/SessionCommand.h	/^      DWORD dwSeptLevel;    \/\/\/ ÂÆ∂ÊóèÁ≠âÁ∫ß$/;"	m	struct:Cmd::Session::t_sendUserRelationID
dwSeptRepute	ScenesServer/SceneUser.h	/^    DWORD dwSeptRepute;  \/\/ ÂÆ∂ÊóèÂ£∞Êúõ$/;"	m	struct:SceneUser
dwServerID	base/SessionCommand.h	/^      DWORD dwServerID;$/;"	m	struct:Cmd::Session::t_reqAddScene_SceneSession
dwServerTimestamp	base/Command.h	/^    DWORD dwServerTimestamp;$/;"	m	struct:Cmd::stLoginSelectSuccessUserCmd
dwServerTimestamp	tmpcode/commond.h	/^	DWORD dwServerTimestamp;  \/\/ ∑˛ŒÒ∆˜ ±¥¡, time_t÷µ$/;"	m	struct:stLoginSelectSuccessUserCmd
dwShengChengid	tmpcode/commond.h	/^	DWORD dwShengChengid;$/;"	m	struct:stReturnTmPowerValueList
dwSize	SessionServer/TempArchive.h	/^  DWORD dwSize;$/;"	m	struct:TempArchive
dwSize	base/BattleUserCmd.h	/^	DWORD dwSize;	\/\/ø…Ã¯◊™µƒ ˝¡ø$/;"	m	struct:Cmd::stRtnZoneList
dwSize	base/Command.h	/^  BYTE  dwSize; \/\/ È¢òÁõÆÊù°Êï∞$/;"	m	struct:Cmd::stQuestionQuiz
dwSize	base/Command.h	/^  DWORD dwSize;  \/\/ Ë¢´Êé®Ëçê‰∫∫Êï∞ÁõÆ,ÊúâÂèØËÉΩÊúâÂæàÂ§ö,Â¶ÇÊûúË∂ÖËøáÁ™óÂè£Â§ßÂ∞è,ËÉΩ‰∏çËÉΩÂÅöÊàêÂèØ‰ª•ÊãâÂä®$/;"	m	struct:Cmd::stRtnRecommendBountyUserCmd
dwSize	base/Command.h	/^  DWORD dwSize; \/\/ ÊàòÂú∫‰∏™Êï∞$/;"	m	struct:Cmd::stReturnDareCountryCmd
dwSize	base/Command.h	/^  DWORD dwSize; \/\/Â∑≤Ë£ÖÂ§áÁâ©ÂìÅ‰∏™Êï∞$/;"	m	struct:Cmd::stSelectReturnMainUserPropertyUserCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stListSeptCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stListUnionCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stQuizPosList
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stReturnDareRecordPlanCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stReturnDareRecordResultCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stReturnDareRecordStatCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stReturnVoteListUserCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stRtnArmyListUserCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stRtnArmySpecUserCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stRtnSeptSort
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stRtnTechUserCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stRtnUnionSort
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stRtnWaitGenUserCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stRtnWaitOfficialUserCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stSendDareList
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stUpdateCountryStarCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stVoteListSeptCmd
dwSize	base/Command.h	/^  DWORD dwSize;$/;"	m	struct:Cmd::stVoteListUnionCmd
dwSize	base/SceneCommand.h	/^      DWORD dwSize;$/;"	m	struct:Cmd::Scene::t_Remove_MapIndex
dwSize	base/SceneCommand.h	/^      DWORD dwSize;$/;"	m	struct:Cmd::Scene::t_fresh_MapIndex
dwSize	base/SessionCommand.h	/^		WORD dwSize;		\/\/\/ Èòü‰ºç‰∫∫Êï∞$/;"	m	struct:Cmd::Session::t_Team_Data
dwSize	base/SessionCommand.h	/^      DWORD dwSize;$/;"	m	struct:Cmd::Session::t_ReadUser_SceneArchive
dwSize	base/SessionCommand.h	/^      DWORD dwSize;$/;"	m	struct:Cmd::Session::t_WriteUser_SceneArchive
dwSize	base/SessionCommand.h	/^      DWORD dwSize;$/;"	m	struct:Cmd::Session::t_updateAlly_SceneSession
dwSize	tmpcode/commond.h	/^	  DWORD dwSize;     \/\/“—◊∞±∏ŒÔ∆∑∏ˆ ˝$/;"	m	struct:st_WatchPlayer
dwSize	tmpcode/commond.h	/^	DWORD dwSize; $/;"	m	struct:stRtnSeptSort
dwSize	tmpcode/commond.h	/^	DWORD dwSize; $/;"	m	struct:stRtnUnionAllyInfo
dwSize	tmpcode/commond.h	/^	DWORD dwSize; \/\/ ±Ì æ ˝◊È÷–”–º∏∏ˆ”––ßID$/;"	m	struct:stUpdateUnionAlly
dwSize	tmpcode/commond.h	/^	DWORD dwSize; \/\/“—◊∞±∏ŒÔ∆∑∏ˆ ˝$/;"	m	struct:stSelectReturnMainUserPropertyUserCmd
dwSize	tmpcode/commond.h	/^	DWORD dwSize;$/;"	m	struct:stRtnCancelUnionAllyInfo
dwSize	tmpcode/commond.h	/^	DWORD dwSize;$/;"	m	struct:stRtnUnionSort
dwSize	tmpcode/commond.h	/^        DWORD dwSize; \/\/“—◊∞±∏ŒÔ∆∑∏ˆ ˝$/;"	m	struct:stShowEquipUserPropertyUserCmd
dwSkillID	ScenesServer/SkillStatusManager.h	/^  DWORD dwSkillID;$/;"	m	struct:SkillStatusElement
dwSkillID	base/Command.h	/^  DWORD dwSkillID;        \/**< Áî®Êà∑ÊäÄËÉΩÁºñÂè∑ *\/$/;"	m	struct:Cmd::stRemoveUserSkillPropertyUserCmd
dwSkillID	base/Command.h	/^  DWORD dwSkillID;      \/**< ÊäÄËÉΩID *\/$/;"	m	struct:Cmd::stAddUserSkillPropertyUserCmd
dwSkillID	base/Command.h	/^  DWORD dwSkillID;      \/**< ÊäÄËÉΩID *\/$/;"	m	struct:Cmd::stUpgradeUserSkillPropertyUserCmd
dwSkillID	base/Command.h	/^  DWORD dwSkillID;$/;"	m	struct:Cmd::stAddSkillPointPropertyUserCmd
dwSkillID	tmpcode/commond.h	/^	DWORD dwSkillID;			\/**< ººƒ‹ID *\/$/;"	m	struct:stAddUserSkillPropertyUserCmd
dwSkillID	tmpcode/commond.h	/^	DWORD dwSkillID;$/;"	m	struct:stAddObjectDaTaoShaUserCmd
dwSkillID	tmpcode/commond.h	/^	DWORD dwSkillID;$/;"	m	struct:stAddSkillPointPropertyUserCmd
dwSkillID	tmpcode/commond.h	/^        DWORD dwSkillID;                        \/**< ººƒ‹ID *\/$/;"	m	struct:OneLifeSkill
dwSkillId	tmpcode/commond.h	/^	DWORD dwSkillId;                \/\/øÿ÷∆≥ËŒÔµƒººƒ‹id$/;"	m	struct:stSummonSkillControlMagicUserCmd
dwSkillId	tmpcode/commond.h	/^	DWORD dwSkillId;  \/\/ ººƒ‹∫≈$/;"	m	struct:stWriteSkillBookUserCmd
dwSkillId	tmpcode/commond.h	/^                DWORD dwSkillId;                \/\/«±ƒ‹ººƒ‹id$/;"	m	struct:stRetPotentialSkillBuildUserCmd::SkillItem
dwSkillId	tmpcode/commond.h	/^        DWORD dwSkillId;        \/\/«Î«Û–ﬁ¡∂µƒ«±ƒ‹ººƒ‹id$/;"	m	struct:stReqBuildPotentialSkillUserCmd
dwSkillId	tmpcode/commond.h	/^        DWORD dwSkillId;        \/\/«Î«Û–ﬁ¡∂µƒ«±ƒ‹ººƒ‹id$/;"	m	struct:stSendBuildingPotentialSkillUserCmd
dwSkillId1	tmpcode/commond.h	/^	DWORD dwSkillId1;$/;"	m	struct:stPotentialSkillLevelSwapUserCmd
dwSkillId2	tmpcode/commond.h	/^	DWORD dwSkillId2;$/;"	m	struct:stPotentialSkillLevelSwapUserCmd
dwSpendGold	base/Sept.h	/^  DWORD     dwSpendGold;        \/\/ º“◊Âœ˚∑—Ω±“$/;"	m	struct:SeptDef::stSeptInfo
dwSrcTempID	base/Command.h	/^  DWORD dwSrcTempID;      \/**< ÊîªÂáªËÄÖ‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stRTMagicUserCmd
dwSrcTempID	base/Command.h	/^  DWORD dwSrcTempID;      \/**< ÊîªÂáªËÄÖ‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stRTOtherMagicUserCmd
dwStandTime	ScenesServer/SceneNpc.h	/^  DWORD dwStandTime;$/;"	m	class:SceneNpc
dwStandTimeCount	ScenesServer/SceneNpc.h	/^  DWORD dwStandTimeCount;$/;"	m	class:SceneNpc
dwStar	base/Command.h	/^  DWORD dwStar; \/\/ ÂΩìÂâçËÉúÂà©Ê¨°Êï∞$/;"	m	struct:Cmd::stChangeCountryStar
dwStar	base/Command.h	/^  DWORD dwStar;$/;"	m	struct:Cmd::stCountryStar
dwStarRageNum	tmpcode/commond.h	/^    DWORD dwStarRageNum;$/;"	m	struct:stUpdateIntensifyRageNumUserCmd
dwStarStoneNum	tmpcode/commond.h	/^	DWORD dwStarStoneNum;  \/\/ ∑˚Œ∆(–«–«)±£¡Ù≤ƒ¡œ±£–« Ø∏ˆ ˝$/;"	m	struct:stEquipUpgradePropertyUserCmd
dwStartTime	tmpcode/commond.h	/^	DWORD dwStartTime;  \/\/ ªÓ∂Øø™ º ±º‰£¨time_t÷µ$/;"	m	struct:stReturnGoodsBonusInfoCmd
dwStartTime	tmpcode/commond.h	/^	DWORD dwStartTime;$/;"	m	struct:stReturnExchange2Time
dwStartTime	tmpcode/commond.h	/^	DWORD dwStartTime;$/;"	m	struct:stReturnExchange3Time
dwStartTime	tmpcode/commond.h	/^	DWORD dwStartTime;$/;"	m	struct:stReturnExchange4Config
dwStartTime	tmpcode/commond.h	/^	DWORD dwStartTime;$/;"	m	struct:stReturnExchange5Config
dwState	base/SessionCommand.h	/^      DWORD dwState; \/\/ 1,ÈæôÁ≤æÔºå2,ËôéÈ≠Ñ$/;"	m	struct:Cmd::Session::t_ChangeGemState_SceneSession
dwState	base/SessionCommand.h	/^      DWORD dwState; \/\/ 1‰∏∫ÂºÄÂßãÔºå0‰∏∫ÁªìÊùü$/;"	m	struct:Cmd::Session::t_OpGemState_SceneSession
dwState	base/SessionCommand.h	/^      DWORD dwState; \/\/ 1‰∏∫ÈæôÁ≤æÔºå2‰∏∫ËôéÈ≠Ñ,0‰∏∫Ê∏ÖÈô§Ëøô‰∏§ÁßçÁä∂ÊÄÅ$/;"	m	struct:Cmd::Session::t_SetGemState_SceneSession
dwState	base/SessionCommand.h	/^      DWORD dwState; \/\/ ÂæÖÂèñÊ∂àÁöÑÁä∂ÊÄÅ1,ÈæôÁ≤æÔºå2,ËôéÈ≠Ñ,0ÊâÄÊúâÁä∂ÊÄÅÂèñÊ∂à$/;"	m	struct:Cmd::Session::t_CancelGemState_SceneSession
dwStatus	base/SessionCommand.h	/^      DWORD dwStatus;         \/\/ 1,‰∏∫ÂºÄÂßã‰∫§ÊàòÁöÑËÆ∞ÂΩïÔºå0‰∏∫ÁªìÊùü‰∫§ÊàòÁöÑËÆ∞ÂΩï$/;"	m	struct:Cmd::Session::t_enterWar_SceneSession
dwStatus	base/SessionCommand.h	/^      DWORD dwStatus;$/;"	m	struct:Cmd::Session::t_activeDare_SceneSession
dwStrId	tmpcode/commond.h	/^	DWORD dwStrId;  \/\/ ¡ƒÃÏµƒƒ⁄»›, ”√ID±Í ∂$/;"	m	struct:stNpcChatUserCmd
dwStuffIDs	tmpcode/commond.h	/^        DWORD   dwStuffIDs[4];  \/\/≥Â–«”√µƒ≤ƒ¡œID$/;"	m	struct:stNpcUpgradePropertyUserCmd
dwSubjects	base/SessionCommand.h	/^      DWORD dwSubjects; \/\/ ÊÄªÈ¢òÁõÆÊï∞$/;"	m	struct:Cmd::Session::t_createQuiz_SceneSession
dwSysInfoType	base/Command.h	/^    DWORD dwSysInfoType;    \/**< Á≥ªÁªüÊ∂àÊÅØÁöÑÁ±ªÂûã *\/ \/\/Ë°®ÊÉÖÁ±ªÂûã$/;"	m	struct:Cmd::stKokChatUserCmd
dwSysInfoType	base/Command.h	/^  DWORD dwSysInfoType;    \/**< Á≥ªÁªüÊ∂àÊÅØÁöÑÁ±ªÂûã *\/ \/\/Ë°®ÊÉÖÁ±ªÂûã$/;"	m	struct:Cmd::stChannelChatUserCmd
dwSysInfoType	base/Command.h	/^  DWORD dwSysInfoType;    \/**< Á≥ªÁªüÊ∂àÊÅØÁöÑÁ±ªÂûã *\/ \/\/Ë°®ÊÉÖÁ±ªÂûã$/;"	m	struct:Cmd::stServerChannelChatUserCmd
dwSysInfoType	tmpcode/commond.h	/^         DWORD dwSysInfoType;            \/**< œµÕ≥œ˚œ¢µƒ¿‡–Õ*\/ \/\/±Ì«È¿‡–Õ$/;"	m	struct:stKokChatUserCmd
dwTableID	base/Object.h	/^	DWORD dwTableID;    \/\/ ∞¸∏§ID    ->0$/;"	m	struct:stObjectLocation
dwTagIndex	tmpcode/commond.h	/^		DWORD dwTagIndex;						\/\/ ÕÊº“µ„ª˜µƒŒÔ∆∑Tag±‡∫≈$/;"	m	struct:stReturnQuestionObject
dwTagIndex	tmpcode/commond.h	/^        DWORD dwTagIndex;$/;"	m	struct:rtHorseDataCmd
dwTagIndex	tmpcode/commond.h	/^    DWORD dwTagIndex;               \/\/typeŒ™3 ±∫Ú£¨0-ÀÊ…Ì¬Ì∆•°£1“‘∫Û¥˙±Ì¬Ìæ«÷–µƒÀ˜“˝$/;"	m	struct:stQuestionObject
dwTagIndex	tmpcode/commond.h	/^    DWORD dwTagIndex;               \/\/≤È—ØŒÔ∆∑±‡∫≈$/;"	m	struct:stReturnQuestionLingQi
dwTargetObjectId	tmpcode/commond.h	/^	DWORD dwTargetObjectId;  \/\/ œÎ“™µƒƒø±ÍŒÔ∆∑ID$/;"	m	struct:stObjectExchangeUserCmd
dwTeamID	base/Command.h	/^  DWORD dwTeamID;          \/\/ Èòü‰ºçID$/;"	m	struct:Cmd::stAddTeamMemberUserCmd
dwTeamID	base/Command.h	/^  DWORD dwTeamID;          \/\/ Èòü‰ºçID$/;"	m	struct:Cmd::stRemoveTeamMemberUserCmd
dwTeamID	tmpcode/commond.h	/^	DWORD dwTeamID;					\/\/ ∂”ŒÈID$/;"	m	struct:stAddTeamMemberUserCmd
dwTeamID	tmpcode/commond.h	/^	DWORD dwTeamID;					\/\/ ∂”ŒÈID$/;"	m	struct:stRemoveTeamMemberUserCmd
dwTeamMode	base/Command.h	/^  DWORD dwTeamMode;      \/\/ Èòü‰ºçÊ®°Âºè$/;"	m	struct:Cmd::stAnswerNameTeamUserCmd
dwTeamMode	base/Command.h	/^  DWORD dwTeamMode;      \/\/ Èòü‰ºçÊ®°Âºè$/;"	m	struct:Cmd::stAnswerTeamUserCmd
dwTeamMode	base/Command.h	/^  DWORD dwTeamMode;      \/\/ Èòü‰ºçÊ®°Âºè$/;"	m	struct:Cmd::stRequestNameTeamUserCmd
dwTeamMode	base/Command.h	/^  DWORD dwTeamMode;      \/\/ Èòü‰ºçÊ®°Âºè$/;"	m	struct:Cmd::stRequestTeamUserCmd
dwTeamMode	tmpcode/commond.h	/^	DWORD dwTeamMode;			\/\/ ∂”ŒÈƒ£ Ω$/;"	m	struct:stAnswerNameTeamUserCmd
dwTeamMode	tmpcode/commond.h	/^	DWORD dwTeamMode;		        	\/\/ ∂”ŒÈƒ£ Ω$/;"	m	struct:stRequestNameTeamUserCmd
dwTeamThisID	base/SessionCommand.h	/^		DWORD dwTeamThisID;	\/\/\/ sky Èòü‰ºçÂîØ‰∏ÄID$/;"	m	struct:Cmd::Session::t_Team_Data
dwTeam_tempid	base/SessionCommand.h	/^		DWORD dwTeam_tempid;		\/\/\/ sky Èòü‰ºçÂîØ‰∏ÄID$/;"	m	struct:Cmd::Session::t_Team_AddMember
dwTeam_tempid	base/SessionCommand.h	/^		DWORD dwTeam_tempid;		\/\/\/ sky Èòü‰ºçÂîØ‰∏ÄID$/;"	m	struct:Cmd::Session::t_Team_ChangeLeader
dwTeam_tempid	base/SessionCommand.h	/^		DWORD dwTeam_tempid;		\/\/\/ sky Èòü‰ºçÂîØ‰∏ÄID$/;"	m	struct:Cmd::Session::t_Team_DelMember
dwTeamffff	base/Command.h	/^  BYTE dwTeamffff;$/;"	m	struct:Cmd::t_UserData
dwTempID	base/Command.h	/^        DWORD dwTempID;                                 \/\/ÈòüÂëòtempid$/;"	m	struct:Cmd::stTeamMemberOfflineUserCmd
dwTempID	base/Command.h	/^    DWORD dwTempID;        \/**< ÁªèÈ™åÂÄºÊù•Ê∫ê‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stObtainExpUserCmd
dwTempID	base/Command.h	/^    DWORD dwTempID;        \/**< Èò≤Âæ°Êñπ‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stBackOffMagicUserCmd
dwTempID	base/Command.h	/^  DWORD  dwTempID;      \/**< Áî®Êà∑‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stClearStateMapScreenUserCmd
dwTempID	base/Command.h	/^  DWORD  dwTempID;      \/**< Áî®Êà∑‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stGoodnessStateMapScreenUserCmd
dwTempID	base/Command.h	/^  DWORD  dwTempID;      \/**< Áî®Êà∑‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stSetStateMapScreenUserCmd
dwTempID	base/Command.h	/^  DWORD dwTempID;          \/\/ÊàêÂëòtempid$/;"	m	struct:Cmd::stFreshTeamMemberUserCmd
dwTempID	base/Command.h	/^  DWORD dwTempID;          \/\/ÊàêÂëòtempid$/;"	m	struct:Cmd::stTeamMemberData
dwTempID	base/Command.h	/^  DWORD dwTempID;        \/\/ÁõÆÊ†áÁºñÂè∑$/;"	m	struct:Cmd::stNpcPosition
dwTempID	base/Command.h	/^  DWORD dwTempID;        \/\/ÁõÆÊ†áÁºñÂè∑$/;"	m	struct:Cmd::stNpcTempID
dwTempID	base/Command.h	/^  DWORD dwTempID;\/\/‰∏¥Êó∂ÁºñÂè∑$/;"	m	struct:Cmd::stRTSelectedHpMpPropertyUserCmd
dwTempID	base/Command.h	/^  DWORD dwTempID;\/\/‰∏¥Êó∂ÁºñÂè∑$/;"	m	struct:Cmd::stSelectMainUserPropertyUserCmd
dwTempID	base/Command.h	/^  DWORD dwTempID;\/\/‰∏¥Êó∂ÁºñÂè∑$/;"	m	struct:Cmd::stSelectPropertyUserCmd
dwTempID	base/Command.h	/^  DWORD dwTempID;\/\/‰∏¥Êó∂ÁºñÂè∑$/;"	m	struct:Cmd::stSelectReturnMainUserPropertyUserCmd
dwTempID	base/Command.h	/^  DWORD dwTempID;\/\/‰∏¥Êó∂ÁºñÂè∑$/;"	m	struct:Cmd::stSelectReturnStatesPropertyUserCmd
dwTempID	base/SessionCommand.h	/^		DWORD dwTempID;$/;"	m	struct:Cmd::Session::t_Sports_ReturnMapID
dwTempID	base/SessionCommand.h	/^      DWORD dwTempID;$/;"	m	struct:Cmd::Session::t_changeUser_GateSession
dwTempID	base/SessionCommand.h	/^      DWORD dwTempID;$/;"	m	struct:Cmd::Session::t_regScene_SceneSession
dwTempID	base/SessionCommand.h	/^      DWORD dwTempID;$/;"	m	struct:Cmd::Session::t_regScene_ret_SceneSession
dwTempID	base/SessionCommand.h	/^      DWORD dwTempID;$/;"	m	struct:Cmd::Session::t_regUser_GateSession
dwTempID	base/SessionCommand.h	/^      DWORD dwTempID;$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
dwTempID	base/SessionCommand.h	/^      DWORD dwTempID;$/;"	m	struct:Cmd::Session::t_taxCountry_SceneSession
dwTempID	base/SessionCommand.h	/^      DWORD dwTempID;$/;"	m	struct:Cmd::Session::t_unregScene_SceneSession
dwTempID	tmpcode/commond.h	/^	  DWORD dwTempID;\/\/¡Ÿ ±±‡∫≈$/;"	m	struct:st_WatchPlayer
dwTempID	tmpcode/commond.h	/^	DWORD	dwTempID;			\/**< ”√ªß¡Ÿ ±ID *\/$/;"	m	struct:stClearStateMapScreenUserCmd
dwTempID	tmpcode/commond.h	/^	DWORD   dwTempID;           \/**< ”√ªß¡Ÿ ±ID *\/$/;"	m	struct:stGoodnessStateMapScreenUserCmd
dwTempID	tmpcode/commond.h	/^	DWORD dwTempID;					\/\/≥…‘±tempid$/;"	m	struct:stFreshTeamMemberUserCmd
dwTempID	tmpcode/commond.h	/^	DWORD dwTempID;					\/\/≥…‘±tempid$/;"	m	struct:stTeamMemberData
dwTempID	tmpcode/commond.h	/^	DWORD dwTempID;					\/\/∂”‘±tempid$/;"	m	struct:stRemoveTeamMemberUserCmd
dwTempID	tmpcode/commond.h	/^	DWORD dwTempID;				\/**< ∑¿”˘∑Ω¡Ÿ ±±‡∫≈ *\/$/;"	m	struct:stBackOffMagicUserCmd
dwTempID	tmpcode/commond.h	/^	DWORD dwTempID;				\/**< æ≠—È÷µ¿¥‘¥¡Ÿ ±±‡∫≈*\/$/;"	m	struct:stObtainExpUserCmd
dwTempID	tmpcode/commond.h	/^	DWORD dwTempID;				\/\/∏√Ω«…´µƒTempID$/;"	m	struct:stGotoPlayerZhenxuanUserCmd
dwTempID	tmpcode/commond.h	/^	DWORD dwTempID;                                 \/\/∂”‘±tempid$/;"	m	struct:stTeamMemberOfflineUserCmd
dwTempID	tmpcode/commond.h	/^	DWORD dwTempID;\/\/npcTempID$/;"	m	struct:stNpcLifeTimeCountUserCmd
dwTempID	tmpcode/commond.h	/^	DWORD dwTempID;\/\/¡Ÿ ±±‡∫≈$/;"	m	struct:stDanceTime
dwTempID	tmpcode/commond.h	/^	DWORD dwTempID;\/\/¡Ÿ ±±‡∫≈$/;"	m	struct:stSelectMainUserPropertyUserCmd
dwTempID	tmpcode/commond.h	/^	DWORD dwTempID;\/\/¡Ÿ ±±‡∫≈$/;"	m	struct:stSelectPropertyUserCmd
dwTempID	tmpcode/commond.h	/^	DWORD dwTempID;\/\/¡Ÿ ±±‡∫≈$/;"	m	struct:stSelectReturnMainUserPropertyUserCmd
dwTempID	tmpcode/commond.h	/^	DWORD dwTempID;\/\/¡Ÿ ±±‡∫≈$/;"	m	struct:stSelectReturnStatesPropertyUserCmd
dwTempID	tmpcode/commond.h	/^        DWORD dwTempID;\/\/¡Ÿ ±±‡∫≈$/;"	m	struct:stRTSelectedHpMpPropertyUserCmd
dwTempID	tmpcode/commond.h	/^        DWORD dwTempID;\/\/¡Ÿ ±±‡∫≈$/;"	m	struct:stShowEquipUserPropertyUserCmd
dwTempID	tmpcode/commond.h	/^     DWORD dwTempID;    \/\/ÃÙ’Ω’ﬂµƒtempid$/;"	m	struct:stRequestYingZhanUserCmd
dwTempID	tmpcode/commond.h	/^    DWORD   dwTempID;                       \/**< ”√ªß¡Ÿ ±ID *\/$/;"	m	struct:stSetStateMapScreenUserCmd
dwTempID	tmpcode/commond.h	/^    DWORD dwTempID;     \/\/ temp ID$/;"	m	struct:t_NPCData
dwTempIDList	base/Command.h	/^  DWORD dwTempIDList[0];    \/\/ ÊîªÂáªÁõÆÊ†áÂàóË°®$/;"	m	struct:Cmd::stAttackMagicUserCmd
dwTempIDList	tmpcode/commond.h	/^	DWORD dwTempIDList[0];		\/\/ π•ª˜ƒø±Í¡–±Ì$/;"	m	struct:stAttackMagicUserCmd
dwThisID	ScenesServer/SkillStatusManager.h	/^  DWORD dwThisID;	    \/\/ø®≈∆Œ®“ªID$/;"	m	struct:SkillStatusElement
dwThisID	base/Command.h	/^    DWORD dwThisID;  \/*Ë£ÖÂ§áID *\/$/;"	m	struct:Cmd::stDurabilityUserCmd
dwThisID	base/HeroCardCmd.h	/^	DWORD dwThisID;$/;"	m	struct:Cmd::stRetClearCardOneStateUserCmd
dwThisID	base/HeroCardCmd.h	/^	DWORD dwThisID;$/;"	m	struct:Cmd::stRetRefreshCardAllStateUserCmd
dwThisID	base/HeroCardCmd.h	/^	DWORD dwThisID;$/;"	m	struct:Cmd::stRetRemoveBattleCardUserCmd
dwThisID	base/HeroCardCmd.h	/^	DWORD dwThisID;$/;"	m	struct:Cmd::stRetSetCardOneStateUserCmd
dwThisID	base/Object.h	/^	DWORD dwThisID;   \/\/ŒÔ∆∑Œ®“ªid$/;"	m	struct:t_Object_mobile
dwThisID	tmpcode/commond.h	/^	 DWORD dwThisID;\/\/ŒÔ∆∑ID£¨øÛ»™ÀÆ£∫910£ª∆°æ∆£∫920£ª∫Ïæ∆£∫930£ªº¶Œ≤æ∆£∫940£ªÕ˛ øº…£∫950£®∆‰ µ « π”√¬Ì∂π¿¥¥˙ÃÊæ∆£©$/;"	m	struct:stDrinkOtherBarCmd
dwThisID	tmpcode/commond.h	/^	DWORD dwThisID;	\/*◊∞±∏ID *\/$/;"	m	struct:stDurabilityUserCmd
dwThisID	tmpcode/commond.h	/^	DWORD dwThisID;      \/\/ π”√µƒ¡È∆˜≤∂◊Ωø®µƒThisID$/;"	m	struct:stNotifyCatchLingQiBeginUserCmd
dwThisID	tmpcode/commond.h	/^	DWORD dwThisID;      \/\/ π”√µƒ¡È∆˜≤∂◊Ωø®µƒThisID$/;"	m	struct:stReqCatchLingQiBeginUserCmd
dwThisID	tmpcode/commond.h	/^	DWORD dwThisID; \/\/ ÈthisID $/;"	m	struct:stChangeChuanchengUserCmd
dwThisID	tmpcode/commond.h	/^	DWORD dwThisID; \/\/ŒÔ∆∑Œ®“ªID$/;"	m	struct:stReqPutSeptStoreCmd
dwThisID	tmpcode/commond.h	/^	DWORD dwThisID; \/\/“™Œπ—¯µƒ◊∞±∏ID$/;"	m	struct:stFeedEquipLingQiUserCmd
dwThisID	tmpcode/commond.h	/^	DWORD dwThisID; \/\/◊∞±∏ID $/;"	m	struct:stBookExpUserCmd
dwThisID	tmpcode/commond.h	/^	DWORD dwThisID; \/\/◊∞±∏∫–◊”µƒthisID$/;"	m	struct:stDevoteEquipPropertyUserCmd
dwThisID	tmpcode/commond.h	/^	DWORD dwThisID;$/;"	m	struct:stAddRentStoreTime
dwThisID	tmpcode/commond.h	/^	DWORD dwThisID;$/;"	m	struct:stRecoverNewGiftBag
dwThisID	tmpcode/commond.h	/^        DWORD dwThisID;         \/\/ŒÔ∆∑µƒthisID$/;"	m	struct:stPresentBarGirlUserCmd
dwThisID	tmpcode/commond.h	/^        DWORD dwThisID; \/*µ¿æﬂID *\/$/;"	m	struct:stAtBattDurabilityUserCmd
dwThisId	tmpcode/commond.h	/^	DWORD dwThisId;  \/\/ Œ‰∆˜ªÚ“¬∑˛µƒThisID$/;"	m	struct:stNotifyClearSealMagicUserCmd
dwThisId	tmpcode/commond.h	/^	DWORD dwThisId;  \/\/ Œ‰∆˜ªÚ“¬∑˛µƒThisID$/;"	m	struct:stNotifySealValueMagicUserCmd
dwThunderDam	tmpcode/commond.h	/^	DWORD dwThunderDam;$/;"	m	struct:t_MainUserData
dwTime	ScenesServer/SkillStatusManager.h	/^  DWORD dwTime;$/;"	m	struct:SkillStatusElement
dwTime	base/Command.h	/^    DWORD dwTime;$/;"	m	struct:Cmd::stRetUnlockChangeZone
dwTime	base/Command.h	/^  DWORD dwTime;$/;"	m	struct:Cmd::ConsignHistoryType
dwTime	base/Command.h	/^  DWORD dwTime;\/\/\/ ÂßîÊâòÊó∂Èó¥$/;"	m	struct:Cmd::StockList
dwTime	base/RolechangeCommand.h	/^	DWORD dwTime;$/;"	m	struct:Cmd::Rolechange::t_retCheckZoneState
dwTime	tmpcode/commond.h	/^	DWORD dwTime;$/;"	m	struct:ConsignHistoryType
dwTime	tmpcode/commond.h	/^	DWORD dwTime;\/\/\/ ŒØÕ– ±º‰$/;"	m	struct:StockList
dwTime	tmpcode/commond.h	/^	DWORD dwTime;\/\/≥÷–¯ ±º‰$/;"	m	struct:stNpcLifeTimeCountUserCmd
dwTime	tmpcode/commond.h	/^    DWORD dwTime;   \/\/π˙‘Àø™ º £”‡ ±º‰,==0 ±Œ™πÿ±’π˙‘Àµπº∆ ±$/;"	m	struct:stSendCountryGuradTime
dwTimestamp	base/NullUserCmd.h	/^  DWORD  dwTimestamp;$/;"	m	struct:Cmd::stNullUserCmd
dwTimestamp	tmpcode/commond.h	/^	DWORD	dwTimestamp;$/;"	m	struct:stNullUserCmd
dwTimestamp	tmpcode/commond.h	/^	DWORD dwTimestamp;  \/\/ time() ±¥¡$/;"	m	struct:stBigEventUserCmd
dwTimestampServer	GatewayServer/GatewayTask.h	/^	QWORD dwTimestampServer;$/;"	m	class:GatewayTask
dwTipID	tmpcode/commond.h	/^	DWORD dwTipID;			\/\/ Ã· æƒ⁄»›µƒ±‡∫≈$/;"	m	struct:stShowTipUserCmd
dwToCountryID	base/Command.h	/^    DWORD dwToCountryID; \/\/ ÂèòÊõ¥Âà∞ÂõΩÂÆ∂ÁöÑID$/;"	m	struct:Cmd::stChangeCountryCmd
dwToCountryID	base/Command.h	/^    DWORD dwToCountryID; \/\/ Áî≥ËØ∑Âä†ÂÖ•ÁöÑÂõΩÁ±ç$/;"	m	struct:Cmd::stApplyCountryCmd
dwToCountryID	base/SessionCommand.h	/^      DWORD dwToCountryID;    \/\/\/ ÊîπÂèòÂà∞ÁöÑÂõΩÂÆ∂$/;"	m	struct:Cmd::Session::t_changeCountry_SceneSession
dwToCountryID	base/SessionCommand.h	/^      DWORD dwToCountryID;$/;"	m	struct:Cmd::Session::t_UnionCity_Dare_SceneSession
dwToCountryID	tmpcode/commond.h	/^	DWORD dwToCountryID; \/\/ ±‰∏¸µΩπ˙º“µƒID$/;"	m	struct:stChangeCountryCmd
dwToRelationID	base/SessionCommand.h	/^      DWORD dwToRelationID;   \/\/ ‰∏é‰πã‰∫§ÊàòÁöÑÁ§æ‰ºöÂÖ≥Á≥ªID,ÂÆàÊñπ(Âú®Â§∫ÊóóÁ±ªÂûãÂØπÊàòÊó∂‰ΩøÁî®)$/;"	m	struct:Cmd::Session::t_enterWar_SceneSession
dwToRelationID	base/SessionCommand.h	/^      DWORD dwToRelationID;$/;"	m	struct:Cmd::Session::t_setAntiAttFlag_SceneSession
dwToday	tmpcode/commond.h	/^	DWORD dwToday;  \/\/ ΩÒ»’Ω®…Ë¥Œ ˝$/;"	m	struct:stRetCityHeartState
dwToken	tmpcode/commond.h	/^	DWORD dwToken;$/;"	m	struct:stRtnSoundTokenCmd
dwToolThisId	tmpcode/commond.h	/^    DWORD dwToolThisId;   \/\/ Ωµº∂µ¿æﬂ$/;"	m	struct:stEquipDowngradePropertyUserCmd
dwToolThisId	tmpcode/commond.h	/^    DWORD dwToolThisId;   \/\/ π”√µƒ¡Èƒ‹◊™ªª∆˜id$/;"	m	struct:stEnergyTransformPropertyUserCmd
dwTotal	base/Command.h	/^  DWORD dwTotal;   \/\/ Á¥ØËÆ°Â∑≤È¢ÜÂèñÁöÑÈáëÈ¢ù$/;"	m	struct:Cmd::stRtnRecommendedBountyUserCmd
dwTotal	base/Command.h	/^  DWORD dwTotal;  \/\/ ÊÄª‰∫∫Êï∞$/;"	m	struct:Cmd::stQuestionQuiz
dwTotal	base/Command.h	/^  DWORD dwTotal;  \/\/ Á¥ØËÆ°Â∑≤È¢ÜÂèñÁöÑÈáëÈ¢ù$/;"	m	struct:Cmd::stRtnRecommendBountyUserCmd
dwTotal	base/Command.h	/^  DWORD dwTotal;  \/\/ Á¥ØËÆ°Ë¥°ÁåÆÂ§öÂ∞ëÈáëÈ¢ù$/;"	m	struct:Cmd::stRecommendItem
dwTotal	base/Command.h	/^  WORD dwTotal;$/;"	m	struct:Cmd::ConsignHistoryType
dwTotal	tmpcode/commond.h	/^	DWORD dwTotal;  \/\/ ¿€ª˝Ω®…Ë÷µ$/;"	m	struct:stRetCityHeartState
dwTotal	tmpcode/commond.h	/^	WORD dwTotal;$/;"	m	struct:ConsignHistoryType
dwTotalTime	tmpcode/commond.h	/^	DWORD dwTotalTime;\/\/◊‹ ±º‰$/;"	m	struct:stSecondsToRecoverFromDyingCmd
dwTotemExp	tmpcode/commond.h	/^	DWORD dwTotemExp;										\/\/ÕºÃ⁄æ≠—È$/;"	m	struct:stSeptBaseInfoCmd
dwType	base/Command.h	/^    DWORD dwType;       \/\/ ÊàòÊñóÁ±ªÂûã$/;"	m	struct:Cmd::stNotifyDare
dwType	base/Command.h	/^    DWORD dwType;      \/**< Ê∂àÊÅØÁ±ªÂûã *\/$/;"	m	struct:Cmd::stKokChatUserCmd
dwType	base/Command.h	/^  DWORD dwType;      \/**< Ê∂àÊÅØÁ±ªÂûã *\/$/;"	m	struct:Cmd::stChannelChatUserCmd
dwType	base/Command.h	/^  DWORD dwType;      \/**< Ê∂àÊÅØÁ±ªÂûã *\/$/;"	m	struct:Cmd::stServerChannelChatUserCmd
dwType	base/Command.h	/^  DWORD dwType; \/\/ 1‰∏∫Á≠âÁ†îÁ©∂ÁöÑÁßëÊäÄÔºå2ÔºåÊ≠£Âú®ÂçáÁ∫ßÁöÑÁßëÊäÄ,3ÔºåÂ∑≤ÂÆåÊàêÁöÑÁßëÊäÄ$/;"	m	struct:Cmd::stReqTechUserCmd
dwType	base/Command.h	/^  DWORD dwType;$/;"	m	struct:Cmd::stRtnTechUserCmd
dwType	base/GmToolCommand.h	/^      DWORD dwType;                   \/**< Ê∂àÊÅØÁ±ªÂûã *\/$/;"	m	struct:Cmd::GmTool::t_Chat_GmTool
dwType	base/SessionCommand.h	/^      DWORD dwType;                   \/\/\/ Êâ£Èí±Á±ªÂûã,Êâ£ÊåëÊàòÈáë0,ËøòÊåëÊàòÈáë1,ÂØπÊàòÂ•ñÂä±2$/;"	m	struct:Cmd::Session::t_dareGold_SceneSession
dwType	base/SessionCommand.h	/^      DWORD dwType;$/;"	m	struct:Cmd::Session::_techItem
dwType	base/SessionCommand.h	/^      DWORD dwType;$/;"	m	struct:Cmd::Session::t_setAntiAttFlag_SceneSession
dwType	tmpcode/commond.h	/^	DWORD dwType;  \/\/ ≈≈––¿‡–Õ, º˚FRIENDMSN_TYPE_TOP_XXX$/;"	m	struct:stReqShowMyRankChatCmd
dwType	tmpcode/commond.h	/^         DWORD dwType;                   \/**< œ˚œ¢¿‡–Õ*\/$/;"	m	struct:stKokChatUserCmd
dwType	tmpcode/commond.h	/^        DWORD dwType;                                \/**< ”√ªßººƒ‹±‡∫≈ *\/$/;"	m	struct:stForgetUserLifeSkillPropertyUserCmd
dwUionId	tmpcode/commond.h	/^	DWORD   dwUionId;$/;"	m	struct:st_CharShow2
dwUnionActionPoint	ScenesServer/SceneUser.h	/^    DWORD dwUnionActionPoint;  \/\/ Â∏Æ‰ºöË°åÂä®Âäõ$/;"	m	struct:SceneUser
dwUnionID	base/Command.h	/^    DWORD dwUnionID;$/;"	m	struct:Cmd::stRtnUnionNameListCmd::__anon109
dwUnionID	base/Command.h	/^  DWORD dwUnionID;$/;"	m	struct:Cmd::stReqUnionNameCmd
dwUnionID	base/Command.h	/^  DWORD dwUnionID;$/;"	m	struct:Cmd::stRtnUnionNameCmd
dwUnionID	base/Command.h	/^  DWORD dwUnionID;$/;"	m	struct:Cmd::t_UserData
dwUnionID	base/Command.h	/^  DWORD dwUnionID[0];$/;"	m	struct:Cmd::stReqUnionNameLlistCmd
dwUnionID	base/Sept.h	/^  DWORD     dwUnionID;        \/\/ º“◊ÂÀ˘ Ù∞Ôª·$/;"	m	struct:SeptDef::stSeptInfo
dwUnionID	base/SessionCommand.h	/^      DWORD dwUnionID;  \/\/ ËØ•Âú∫ÊôØ‰∏äÁöÑÊâÄÊúâ‰∫∫ÔºåÈô§‰∫ÜÊåáÂÆöÂ∏Æ‰ºöÁöÑ‰∫∫ÔºåÂÖ∂‰ΩôÂÖ®relive$/;"	m	struct:Cmd::Session::t_clearUnionManor_SceneSession
dwUnionID	base/SessionCommand.h	/^      DWORD dwUnionID; \/\/ ÂØπÊàòËµ¢ÂÆ∂Â∏Æ‰ºö$/;"	m	struct:Cmd::Session::t_UnionCity_DareResult_SceneSession
dwUnionID	base/SessionCommand.h	/^      DWORD dwUnionID; \/\/ Â∏Æ‰ºöID$/;"	m	struct:Cmd::Session::t_OpUnionAction_SceneSession
dwUnionID	base/SessionCommand.h	/^      DWORD dwUnionID; \/\/ Â∏Æ‰ºöID$/;"	m	struct:Cmd::Session::t_OpUnionMoney_SceneSession
dwUnionID	base/SessionCommand.h	/^      DWORD dwUnionID;$/;"	m	struct:Cmd::Session::t_addUnionMember_SceneSession
dwUnionID	base/SessionCommand.h	/^      DWORD dwUnionID;$/;"	m	struct:Cmd::Session::t_disbandUnion_GateSession
dwUnionID	base/SessionCommand.h	/^      DWORD dwUnionID;$/;"	m	struct:Cmd::Session::t_regUserSuccess_SceneSession
dwUnionID	base/SessionCommand.h	/^      DWORD dwUnionID;$/;"	m	struct:Cmd::Session::t_updateSceneUnion_SceneSession
dwUnionID	base/Union.h	/^  DWORD    dwUnionID;        \/\/ Â∏Æ‰ºöÁöÑID$/;"	m	struct:UnionDef::stUnionInfo
dwUnionID	tmpcode/commond.h	/^	 DWORD dwUnionID;$/;"	m	struct:stReqUnionNameCmd
dwUnionID	tmpcode/commond.h	/^	 DWORD dwUnionID;$/;"	m	struct:stRtnUnionNameCmd
dwUnionID	tmpcode/commond.h	/^	DWORD dwUnionID;			\/\/ æ¸Õ≈ID$/;"	m	struct:t_UserData
dwUnionID	tmpcode/commond.h	/^	DWORD dwUnionID; \/\/ ∑¢∆«Î«Ûµƒæ¸Õ≈,∑¢∆ ±≤ª”√ÃÓ–¥$/;"	m	struct:stReqUnionAlly
dwUnionInte	base/SessionCommand.h	/^      DWORD dwUnionInte;$/;"	m	struct:Cmd::Session::t_sendUserRelationID
dwUnionLevel	base/SessionCommand.h	/^      DWORD dwUnionLevel;$/;"	m	struct:Cmd::Session::t_sendUserRelationID
dwUniqueID	tmpcode/commond.h	/^	DWORD dwUniqueID;$/;"	m	struct:stReturnYuYinChannelCmd
dwUpgradeItemThisId	tmpcode/commond.h	/^	DWORD dwUpgradeItemThisId;  \/\/ ≈˚∑Á…˝º∂µ¿æﬂThisID$/;"	m	struct:stUpgradeGuildManteauUserCmd
dwUseJob	SessionServer/Session.h	/^    DWORD dwUseJob;$/;"	m	class:UserSession
dwUseJob	SessionServer/SessionManager.cpp	/^    DWORD dwUseJob; \/\/sky ËÅå‰∏ö$/;"	m	class:CGraceUser
dwUseJob	base/SessionCommand.h	/^      DWORD dwUseJob;$/;"	m	struct:Cmd::Session::t_regUserSuccess_SceneSession
dwUserExp	base/Command.h	/^    QWORD dwUserExp;      \/**< ‰∫∫Áâ©ÂΩìÂâçÁªèÈ™åÂÄºÁöÑÁªèÈ™å *\/$/;"	m	struct:Cmd::stObtainExpUserCmd
dwUserExp	tmpcode/commond.h	/^	QWORD dwUserExp;			\/**< »ÀŒÔµ±«∞æ≠—È÷µµƒæ≠—È*\/$/;"	m	struct:stObtainExpUserCmd
dwUserID	SessionServer/SessionManager.cpp	/^    DWORD dwUserID;$/;"	m	class:CGraceUser
dwUserID	base/Command.h	/^  DWORD dwUserID;    \/\/ÁÑ∞ÁÅ´ÁáÉÊîæËÄÖID$/;"	m	struct:Cmd::stFireWorkUserCmd
dwUserID	base/Command.h	/^  DWORD dwUserID; \/\/ ÂæÖÂºÄÈô§ÁöÑÈòüÈïøID,ÈÄöËøáÂÜõÈòüËØ¶ÁªÜ‰ø°ÊÅØËé∑Âæó$/;"	m	struct:Cmd::stFireArmyCaptainUserCmd
dwUserID	base/Command.h	/^  DWORD dwUserID;$/;"	m	struct:Cmd::stPasswdLogonUserCmd
dwUserID	base/Command.h	/^  DWORD dwUserID;$/;"	m	struct:Cmd::stServerReturnLoginSuccessCmd
dwUserID	base/Command.h	/^  DWORD dwUserID;$/;"	m	struct:Cmd::t_UserData
dwUserID	base/SceneCommand.h	/^	  DWORD dwUserID;$/;"	m	struct:Cmd::Scene::t_gmCommand_SceneGate
dwUserID	base/SceneCommand.h	/^      DWORD dwUserID;                \/\/ ≤È—Ø’ﬂID$/;"	m	struct:Cmd::Scene::t_Query_AccountScene
dwUserID	base/SceneCommand.h	/^      DWORD dwUserID;            \/\/\/ ≤Ÿ◊˜’ﬂµƒΩ«…´ID$/;"	m	struct:Cmd::Scene::t_ChangeCountryStatus
dwUserID	base/SceneCommand.h	/^      DWORD dwUserID;            \/\/\/ ≤Ÿ◊˜’ﬂµƒΩ«…´ID$/;"	m	struct:Cmd::Scene::t_ChangeVerifyVersion
dwUserID	base/SceneCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Scene::t_Bill_ForwardScene
dwUserID	base/SceneCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Scene::t_Refresh_LoginScene
dwUserID	base/SceneCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Scene::t_Request_Bill
dwUserID	base/SceneCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Scene::t_Request_Point
dwUserID	base/SceneCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Scene::t_Request_RedeemCard
dwUserID	base/SceneCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Scene::t_Request_RedeemGold
dwUserID	base/SceneCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Scene::t_Scene_ForwardScene
dwUserID	base/SceneCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Scene::t_Scene_ForwardSceneToBill
dwUserID	base/SceneCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Scene::t_Scene_ForwardSceneUserToBill
dwUserID	base/SceneCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Scene::t_Unreg_LoginScene
dwUserID	base/SessionCommand.h	/^		DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_GlobalMessage_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD  dwUserID;$/;"	m	struct:Cmd::Session::stCountMember
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;            \/\/\/ ËßíËâ≤$/;"	m	struct:Cmd::Session::t_Team_Request
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;      \/\/ Êü•ËØ¢ËÄÖ$/;"	m	struct:Cmd::Session::t_viewCountryDare_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;      \/\/ Áé©ÂÆ∂ID$/;"	m	struct:Cmd::Session::t_changeUserData_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;      \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Session::t_changeCountry_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;      \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Session::t_dareGold_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;      \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Session::t_quizAward_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;      \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Session::t_returnChangeCountry_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;      \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Session::t_sendUserRelationID
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;     \/\/ Áî≥ËØ∑‰∫∫ÁöÑID$/;"	m	struct:Cmd::Session::t_returnEnterUnionManor_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;    $/;"	m	struct:Cmd::Session::t_createQuiz_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;    \/\/$/;"	m	struct:Cmd::Session::t_enterWar_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;  \/\/ Ëµ¢ÂÆ∂Â∏Æ‰∏ª$/;"	m	struct:Cmd::Session::t_UnionCity_DareResult_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;  \/\/\/ ËßíËâ≤ID$/;"	m	struct:Cmd::Session::t_transDareCountry_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID; \/\/ Âú®ÊåáÂÆöÁé©ÂÆ∂Ë∫´ÊóÅ$/;"	m	struct:Cmd::Session::t_BlastGemNPC_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID; \/\/ ÂæÖËÆæÁΩÆÁöÑÁé©ÂÆ∂ID$/;"	m	struct:Cmd::Session::t_setCatcherState_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID; \/\/ ÂæÖËÆæÁΩÆÁöÑÁé©ÂÆ∂ID$/;"	m	struct:Cmd::Session::t_setDiplomatState_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID; \/\/ ÊóèÈïøID$/;"	m	struct:Cmd::Session::t_GetSeptExp_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID; \/\/ ÊóèÈïøID$/;"	m	struct:Cmd::Session::t_GetSeptNormalExp_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID; \/\/ ÊóèÈïøID$/;"	m	struct:Cmd::Session::t_SendSeptNormal_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID; \/\/ ÊóèÈïøID$/;"	m	struct:Cmd::Session::t_SendUnionNormal_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID; \/\/ Áî≥ËØ∑‰∫∫ÁöÑID$/;"	m	struct:Cmd::Session::t_enterUnionManor_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID; \/\/ ÁªôÊåáÂÆöÁöÑÁé©ÂÆ∂$/;"	m	struct:Cmd::Session::t_GetCreateUnionItem_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID; \/\/ ÁªôÊåáÂÆöÁöÑÁé©ÂÆ∂$/;"	m	struct:Cmd::Session::t_ReturnCreateUnionItem_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID; \/\/ Ë¶ÅÂèñÊ∂àÁöÑÁé©ÂÆ∂$/;"	m	struct:Cmd::Session::t_CancelGemState_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::stRequestReturnMember
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_ClearRelation_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_NpcDare_Dare_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_NpcDare_GetGold_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_NpcDare_ItemBack_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_NpcDare_NotifyScene_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_PickupMaster_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_PickupRecommend_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_ReqArmyList_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_SetGemState_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_addRelationEnemy
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_distributeSeptExp_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_exitQuiz_GateSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_levelupNotify_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_notifyAddIntegral
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_notifyNpcHoldData
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_questionNpcDare_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_questionUnionCity_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_regUserSuccess_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_sendUserArmyInfo_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_unregUser_GateSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_unregUser_SceneSession
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_updateConsort
dwUserID	base/SessionCommand.h	/^      DWORD dwUserID;$/;"	m	struct:Cmd::Session::t_updateCountryStar
dwUserID	tmpcode/commond.h	/^	DWORD dwUserID;				\/\/ ”√ªßID$/;"	m	struct:t_UserData
dwUserID	tmpcode/commond.h	/^	DWORD dwUserID;         \/\/\/ ∑¢∆«Î«ÛµƒÕÊº“$/;"	m	struct:stReqUnionAlly
dwUserID	tmpcode/commond.h	/^	DWORD dwUserID;$/;"	m	struct:stPasswdLogonUserCmd
dwUserID	tmpcode/commond.h	/^	DWORD dwUserID;$/;"	m	struct:stServerReturnLoginSuccessCmd
dwUserName	tmpcode/commond.h	/^        char dwUserName[MAX_NAMESIZE];               \/\/∏≥”Ë»®œﬁµƒ∂”‘±µƒ√˚◊÷ $/;"	m	struct:stGiveRightUserCmd
dwUserTempID	base/Command.h	/^    DWORD  dwUserTempID;    \/\/Áî®Êà∑‰∏¥Êó∂ID$/;"	m	struct:Cmd::stChangeFaceMapScreenUserCmd
dwUserTempID	base/Command.h	/^    DWORD dwUserTempID;      \/**< Áî®Êà∑‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stMainUserDeathReliveUserCmd
dwUserTempID	base/Command.h	/^    DWORD dwUserTempID;      \/**< Áî®Êà∑‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stMainUserReliveReliveUserCmd
dwUserTempID	base/Command.h	/^    DWORD dwUserTempID;      \/**< Áî®Êà∑‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stOKReliveUserCmd
dwUserTempID	base/Command.h	/^    DWORD dwUserTempID;      \/**< Áî®Êà∑‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stRemoveUserMapScreenUserCmd
dwUserTempID	base/Command.h	/^    DWORD dwUserTempID;      \/**< Áî®Êà∑‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stUserInstantJumpMoveUserCmd
dwUserTempID	base/Command.h	/^    DWORD dwUserTempID;      \/**< Áî®Êà∑‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stLevelUpUserCmd
dwUserTempID	base/Command.h	/^    DWORD dwUserTempID;      \/**< Áî®Êà∑‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stUserMoveMoveUserCmd
dwUserTempID	base/Command.h	/^    DWORD dwUserTempID[0];  \/\/‰∏¥Êó∂ÁºñÂè∑ÂàóË°®(DWORD)$/;"	m	struct:Cmd::stRequestUserDataMapScreenUserCmd
dwUserTempID	base/Command.h	/^  DWORD dwUserTempID;          \/\/\/\/ Áî®Êà∑‰∏¥Êó∂ID$/;"	m	struct:Cmd::t_UserData
dwUserTempID	base/Command.h	/^  DWORD dwUserTempID;        \/\/\/ Áî®Êà∑‰∏¥Êó∂ID$/;"	m	struct:Cmd::t_MainUserData
dwUserTempID	base/Command.h	/^  DWORD dwUserTempID;      \/**< ÊîªÂáª‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stAttackMagicUserCmd
dwUserTempID	base/Command.h	/^  DWORD dwUserTempID;      \/**< Áî®Êà∑‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stRefreshStateMapScreenUserCmd
dwUserTempID	base/Command.h	/^  DWORD dwUserTempID;      \/**< Áî®Êà∑‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stRideMapScreenUserCmd
dwUserTempID	base/Command.h	/^  DWORD dwUserTempID;      \/**< Áî®Êà∑‰∏¥Êó∂ID *\/$/;"	m	struct:Cmd::stUserGameTimeTimerUserCmd
dwUserTempID	base/Command.h	/^  DWORD dwUserTempID;      \/**< ÁõÆÊ†á‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stObjectHpMpPopUserCmd
dwUserTempID	base/Command.h	/^  DWORD dwUserTempID;      \/**< ÁõÆÊ†á‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stRTMagicUserCmd
dwUserTempID	base/Command.h	/^  DWORD dwUserTempID;      \/**< ÁõÆÊ†á‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stRTOtherMagicUserCmd
dwUserTempID	base/Command.h	/^  DWORD dwUserTempID;$/;"	m	struct:Cmd::stCancelTradeUserCmd
dwUserTempID	base/Command.h	/^  DWORD dwUserTempID;$/;"	m	struct:Cmd::stCommitTradeUserCmd
dwUserTempID	base/SceneCommand.h	/^      DWORD dwUserTempID;                \/\/ userID$/;"	m	struct:Cmd::Scene::t_fresh_ScreenIndex
dwUserTempID	tmpcode/commond.h	/^	 DWORD dwUserTempID;$/;"	m	struct:stOtherDrinkBarCmd
dwUserTempID	tmpcode/commond.h	/^	 DWORD dwUserTempID;\/\/—˚«Î»ÀID$/;"	m	struct:stDrinkOtherBarCmd
dwUserTempID	tmpcode/commond.h	/^	DWORD dwUserTempID;					\/\/\/\/ ”√ªß¡Ÿ ±ID$/;"	m	struct:t_UserData
dwUserTempID	tmpcode/commond.h	/^	DWORD dwUserTempID;				\/\/\/ ”√ªß¡Ÿ ±ID$/;"	m	struct:t_MainUserData
dwUserTempID	tmpcode/commond.h	/^	DWORD dwUserTempID;			\/**< π•ª˜¡Ÿ ±±‡∫≈ *\/$/;"	m	struct:stAttackMagicUserCmd
dwUserTempID	tmpcode/commond.h	/^	DWORD dwUserTempID;			\/**< ”√ªß¡Ÿ ±ID *\/$/;"	m	struct:stOKReliveUserCmd
dwUserTempID	tmpcode/commond.h	/^	DWORD dwUserTempID;			\/**< ”√ªß¡Ÿ ±ID *\/$/;"	m	struct:stRemoveUserMapScreenUserCmd
dwUserTempID	tmpcode/commond.h	/^	DWORD dwUserTempID;			\/**< ”√ªß¡Ÿ ±ID *\/$/;"	m	struct:stUserGameTimeTimerUserCmd
dwUserTempID	tmpcode/commond.h	/^	DWORD dwUserTempID;	\/**< ”√ªß¡Ÿ ±ID *\/$/;"	m	struct:stMainUserDeathReliveUserCmd
dwUserTempID	tmpcode/commond.h	/^	DWORD dwUserTempID;                     \/**< ”√ªß¡Ÿ ±ID *\/$/;"	m	struct:stMainUserReliveReliveUserCmd
dwUserTempID	tmpcode/commond.h	/^	DWORD dwUserTempID;$/;"	m	struct:stCancelBetChallengeUserCmd
dwUserTempID	tmpcode/commond.h	/^	DWORD dwUserTempID;$/;"	m	struct:stCancelDecayLingQiCmd
dwUserTempID	tmpcode/commond.h	/^	DWORD dwUserTempID;$/;"	m	struct:stCancelTradeUserCmd
dwUserTempID	tmpcode/commond.h	/^	DWORD dwUserTempID;$/;"	m	struct:stCommitBetChallengeUserCmd
dwUserTempID	tmpcode/commond.h	/^	DWORD dwUserTempID;$/;"	m	struct:stCommitTradeUserCmd
dwUserTempID	tmpcode/commond.h	/^        DWORD dwUserTempID;     \/**< ”√ªß¡Ÿ ±±‡∫≈ *\/$/;"	m	struct:stLevelUpUserCmd
dwUserTempID	tmpcode/commond.h	/^    DWORD dwUserTempID;                     \/**< π•ª˜¡Ÿ ±±‡∫≈ *\/$/;"	m	struct:stSingMagicUserCmd
dwUserTempID	tmpcode/commond.h	/^    DWORD dwUserTempID;                     \/**< ƒø±Í¡Ÿ ±±‡∫≈ *\/$/;"	m	struct:stObjectHpMpPopUserCmd
dwUserTempID	tmpcode/commond.h	/^    DWORD dwUserTempID;                     \/**< ”√ªß¡Ÿ ±ID *\/$/;"	m	struct:stRideMapScreenUserCmd
dwUserTempId	tmpcode/commond.h	/^	DWORD   dwUserTempId;$/;"	m	struct:stUserEffectCmd
dwUserTempId	tmpcode/commond.h	/^	DWORD   dwUserTempId;$/;"	m	struct:stUserFullEffectCmd
dwUserTempId	tmpcode/commond.h	/^	DWORD dwUserTempId;  \/\/ ”√ªß¡Ÿ ±ID$/;"	m	struct:stCrusadeCastlePointTitle
dwUserTempId	tmpcode/commond.h	/^    DWORD   dwUserTempId;$/;"	m	struct:stUserFullModelCmd
dwUserTempId	tmpcode/commond.h	/^    DWORD   dwUserTempId;$/;"	m	struct:stUserModelCmd
dwValue	ScenesServer/ScenePk.h	/^    DWORD dwValue[11];$/;"	m	union:PkValue::__anon159
dwValue	base/SessionCommand.h	/^      DWORD dwValue;  \/\/ ÊçêÁåÆÂ∫¶$/;"	m	struct:Cmd::Session::t_ContributeCountry_SceneSession
dwVoteID	base/Command.h	/^  DWORD dwVoteID; \/\/ ËØ•Ê¨°ÊäïÁ•®ÁöÑID$/;"	m	struct:Cmd::stCommitVoteUserCmd
dwVoteID	base/Command.h	/^  DWORD dwVoteID;$/;"	m	struct:Cmd::stReturnVoteListUserCmd
dwWaitTime	base/Command.h	/^    DWORD dwWaitTime;$/;"	m	struct:Cmd::stRetCheckCountryUserCmd
dwWaitTime	tmpcode/commond.h	/^	DWORD dwWaitTime;\/\/»Áπ˚µ»¥˝ ±º‰Œ™0‘Ú÷±Ω”∑¢ÀÕ¥¥Ω®œ˚œ¢π˝¿¥$/;"	m	struct:stRetCheckCountryUserCmd
dwWarID	base/Command.h	/^    DWORD dwWarID;    \/\/ ‰∫§ÊàòID$/;"	m	struct:Cmd::stActiveDareCmd
dwWarID	base/SessionCommand.h	/^      DWORD dwWarID;      \/\/\/ ÂØπÊàòID$/;"	m	struct:Cmd::Session::t_dareGold_SceneSession
dwWarID	base/SessionCommand.h	/^      DWORD dwWarID;$/;"	m	struct:Cmd::Session::t_activeDare_SceneSession
dwWarType	base/SessionCommand.h	/^      DWORD dwWarType;        \/\/ ‰∫§ÊàòÁ±ªÂûã$/;"	m	struct:Cmd::Session::t_enterWar_SceneSession
dwWarType	base/SessionCommand.h	/^      DWORD dwWarType;    \/\/\/ ÂØπÊàòÁ±ªÂûã$/;"	m	struct:Cmd::Session::t_dareGold_SceneSession
dwWindDam	tmpcode/commond.h	/^	DWORD dwWindDam;$/;"	m	struct:t_MainUserData
dwX	tmpcode/commond.h	/^	DWORD dwX;$/;"	m	struct:TransportPos
dwY	tmpcode/commond.h	/^	DWORD dwY;$/;"	m	struct:TransportPos
dwZhuTempId	tmpcode/commond.h	/^	DWORD dwZhuTempId; \/\/¡È‘™÷Ètempid$/;"	m	struct:stEvolveUseLingYuanZhuLingQiUserCmd
dynamicMapName	tmpcode/commond.h	/^    char dynamicMapName[0][MAX_NAMESIZE];     \/\/≥°æ∞∑˛ŒÒ∆˜œ¬∂ØÃ¨µÿÕº√˚◊÷$/;"	m	struct:stShowDynamicMapUserCmd
dynamic_copy	base/xml/xml_config.h	/^		virtual bool dynamic_copy(xml_config_base* config)$/;"	f	class:xml_config
dynamic_copy	base/xml/xml_config.h	/^	virtual bool dynamic_copy(xml_config_base* config) {return true;}$/;"	f	struct:xml_config_base
dynamic_dump	base/xml/xml_config.h	/^		virtual void dynamic_dump(std::ostream& os, int deep=0) const$/;"	f	class:xml_config
dynamic_dump	base/xml/xml_config.h	/^	virtual void dynamic_dump(std::ostream& os, int deep = 0) const {}$/;"	f	struct:xml_config_base
dynamic_load	base/xml/xml_config.h	/^		virtual bool dynamic_load()$/;"	f	class:xml_config
dynamic_load	base/xml/xml_config.h	/^		virtual bool dynamic_load(const std::string& filename)$/;"	f	class:xml_config
dynamic_load	base/xml/xml_config.h	/^	virtual bool dynamic_load() {return true;}$/;"	f	struct:xml_config_base
dynamic_load	base/xml/xml_config.h	/^	virtual bool dynamic_load(const std::string& filename) {return true;}$/;"	f	struct:xml_config_base
e	ScenesServer/SceneDefine.h	/^  zPos e;        \/\/\/ Âè≥‰∏ãÁÇπ$/;"	m	struct:zRegion
eBuyGold	base/Command.h	/^  eBuyGold = 2,$/;"	e	enum:Cmd::enumBuyType
eBuySilver	base/Command.h	/^  eBuySilver = 1,$/;"	e	enum:Cmd::enumBuyType
eBuyTicket	base/Command.h	/^  eBuyTicket = 4,$/;"	e	enum:Cmd::enumBuyType
eElement	tmpcode/commond.h	/^	BYTE eElement;  \/\/ º˚Cmd::EnumElement$/;"	m	struct:stReturnElementShiftUserCmd
eElement	tmpcode/commond.h	/^	BYTE eElement;  \/\/ º˚Cmd::EnumElement$/;"	m	struct:stSetElementShiftUserCmd
eKillTitle	tmpcode/commond.h	/^	BYTE eKillTitle;  \/\/ º˚enum CrusadeCastleKillTitle$/;"	m	struct:stCrusadeCastlePointTitle
ePointTitle	tmpcode/commond.h	/^	BYTE ePointTitle;  \/\/ º˚enum CrusadeCastlePointTitle$/;"	m	struct:stCrusadeCastlePointTitle
earnCount	tmpcode/commond.h	/^    DWORD earnCount;$/;"	m	struct:stCityQuestEarnList
earnList	tmpcode/commond.h	/^    stCityQuestEarnInfo earnList[0];$/;"	m	struct:stCityQuestEarnList
earthPower	tmpcode/commond.h	/^			WORD earthPower;                \/\/ µÿ…Ò÷Æ¡¶$/;"	m	struct:t_MainUserData::__anon220::__anon221
edge	tmpcode/commond.h	/^	BYTE edge;$/;"	m	struct:set_manteau
edge	tmpcode/commond.h	/^        BYTE edge;  \/\/œ‚±ﬂ$/;"	m	struct:set_SeptManteau
effect	ScenesServer/zObject.h	/^    WORD effect;  \/\/y$/;"	m	struct:Equips::leech
effect	base/Command.h	/^  BYTE effect[8];$/;"	m	struct:Cmd::t_MainUserData
effect	base/Command.h	/^  BYTE effect[8];$/;"	m	struct:Cmd::t_UserData
effect	base/Object.h	/^		WORD effect;	\/\/y$/;"	m	struct:t_Object::leech
effect	base/zDatabase.h	/^	WORD effect;$/;"	m	struct:zObjectB::leechdom_t
effect	base/zDatabase.h	/^    DWORD effect;$/;"	m	struct:zObjectB
effect	tmpcode/commond.h	/^	BYTE    effect;$/;"	m	struct:stUserEffectCmd
effect	tmpcode/commond.h	/^	BYTE    effect[MAX_EFFECT_SIZE];$/;"	m	struct:t_UserData
effect	tmpcode/commond.h	/^	BYTE    effect[MAX_EFFECT_SIZE];\/\/Ãÿ–ß$/;"	m	struct:t_MainUserData
effect	tmpcode/commond.h	/^	BYTE   effect[EI_MAX_EFFECT_NUM];$/;"	m	struct:stUserFullEffectCmd
effect	tmpcode/commond.h	/^	BYTE   effect[MAX_EFFECT_SIZE];\/\/ø…ƒ‹”√µΩµƒÃÿ–ß÷µ$/;"	m	struct:st_CharShow2
effect	tmpcode/commond.h	/^        BYTE   effect[EI_MAX_EFFECT_NUM];\/\/Ãÿ–ß$/;"	m	struct:stShowEquipUserPropertyUserCmd
effect	tmpcode/commond.h	/^        int effect[4];  \/\/4∏ˆ‘ˆ“Ê–ßπ˚ ˝÷µ$/;"	m	struct:stCrystalEffectDataUserCmd
effect11	base/Command.h	/^    BYTE effect11;$/;"	m	struct:Cmd::SelectUserInfo
effect12	base/Command.h	/^    BYTE effect12;$/;"	m	struct:Cmd::SelectUserInfo
effect13	base/Command.h	/^    BYTE effect13;$/;"	m	struct:Cmd::SelectUserInfo
effect14	base/Command.h	/^    BYTE effect14;$/;"	m	struct:Cmd::SelectUserInfo
effect15	base/Command.h	/^    BYTE effect15;$/;"	m	struct:Cmd::SelectUserInfo
effect16	base/Command.h	/^    BYTE effect16;$/;"	m	struct:Cmd::SelectUserInfo
effect17	base/Command.h	/^    BYTE effect17;$/;"	m	struct:Cmd::SelectUserInfo
effect18	base/Command.h	/^    BYTE effect18;$/;"	m	struct:Cmd::SelectUserInfo
effectBody	tmpcode/commond.h	/^	BYTE effectBody;$/;"	m	struct:SelectUserInfo
effectBoots	tmpcode/commond.h	/^	BYTE effectBoots;$/;"	m	struct:SelectUserInfo
effectCount	ScenesServer/zObject.h	/^    int effectCount;$/;"	m	class:EquipPack
effectHEAD	tmpcode/commond.h	/^	BYTE effectHEAD;$/;"	m	struct:SelectUserInfo
effectHandL	tmpcode/commond.h	/^	BYTE effectHandL;$/;"	m	struct:SelectUserInfo
effectHandR	tmpcode/commond.h	/^	BYTE effectHandR;$/;"	m	struct:SelectUserInfo
effectOther	tmpcode/commond.h	/^	BYTE effectOther;$/;"	m	struct:SelectUserInfo
effectShoulderL	tmpcode/commond.h	/^	BYTE effectShoulderL;$/;"	m	struct:SelectUserInfo
effectShoulderR	tmpcode/commond.h	/^	BYTE effectShoulderR;$/;"	m	struct:SelectUserInfo
efficiency	tmpcode/commond.h	/^	WORD efficiency; \/\/Ã·∏ﬂµƒ–ß¬ $/;"	m	struct:stSetOfflineExpUserCmd
eggTempID	tmpcode/commond.h	/^	DWORD eggTempID;        $/;"	m	struct:stNotifyCatchBeginUserCmd
eggTempID	tmpcode/commond.h	/^	DWORD eggTempID;        $/;"	m	struct:stRetCatchEndUserCmd
eggTempID	tmpcode/commond.h	/^	DWORD eggTempID;$/;"	m	struct:stReqCatchGameBeginUserCmd
elapse	ScenesServer/scriptTickTask.h	/^	time_t elapse;$/;"	m	struct:scriptTask
elapse	base/zTime.h	/^	QWORD elapse(const zRTime &rt) const$/;"	f	class:zRTime
elapse	base/zTime.h	/^	time_t elapse() const$/;"	f	class:zTime
elapse	base/zTime.h	/^	time_t elapse(const zTime &rt) const$/;"	f	class:zTime
element	base/zDatabase.h	/^	DWORD element[6];$/;"	m	union:SkillElement::__anon34
elementHurt	base/zDatabase.h	/^    DWORD elementHurt;$/;"	m	struct:zNpcB
embranchment_iterator	ScenesServer/QuestEvent.h	/^  typedef EMBRANCHMENT::iterator embranchment_iterator;$/;"	t	class:Event
emoteID	tmpcode/commond.h	/^    DWORD emoteID;\/\/«È∏–≈›≈›id$/;"	m	struct:stNpcEmoteUserCmd
emoteid	tmpcode/commond.h	/^        WORD emoteid;$/;"	m	struct:stEmoteQuestUserCmd
emotion	tmpcode/commond.h	/^    DWORD emotion;$/;"	m	struct:ChatAccelItem
emperor	ScenesServer/SceneUser.h	/^    bool  emperor;  \/\/ ÊòØÂê¶‰∏∫ÁöáÂ∏ù$/;"	m	struct:SceneUser
emperor	base/SessionCommand.h	/^      bool  emperor;      \/\/\/ ÊòØÂê¶‰∏∫ÁöáÂ∏ù$/;"	m	struct:Cmd::Session::t_sendUserRelationID
emperorForbid	SessionServer/SessionServer.h	/^    static DWORD emperorForbid[10];\/\/ÁöáÂ∏ùÁ¶ÅË®ÄËøáÁöÑÁé©ÂÆ∂$/;"	m	class:SessionService
empty	RecordServer/RecordSessionManager.h	/^    bool empty()$/;"	f	class:RecordSessionManager
empty	ScenesServer/zObject.h	/^  bool empty() const $/;"	f	class:ObjectPack
empty	base/zEntryManager.h	/^	inline bool empty() const$/;"	f	class:LimitHash
empty	base/zEntryManager.h	/^	inline bool empty() const$/;"	f	class:MultiHash
empty	base/zEntryManager.h	/^	inline bool empty() const$/;"	f	class:zEntryManager
empty	base/zMetaData.h	/^	bool empty(){return recordSet.empty();}$/;"	f	class:DBRecordSet
emptyskillnum	tmpcode/commond.h	/^	WORD emptyskillnum; \/\/ªπø…“‘—ßœ∞µƒø’∞◊ººƒ‹∏ˆ ˝$/;"	m	struct:stSendAllLingQiSkillsUserCmd
enable	SessionServer/NewbieLimit.cpp	/^void NewbieLimit::enable(bool bEnable)$/;"	f	class:NewbieLimit
enableLogin	base/Command.h	/^  BYTE  enableLogin;    \/\/ÂÖÅËÆ∏ÁôªÈôÜ‰∏∫1 ‰∏çÂÖÅËÆ∏‰∏∫0$/;"	m	struct:Cmd::Country_Info
enableLogin	tmpcode/commond.h	/^	BYTE  enableLogin;		\/\/‘ –Ìµ«¬ΩŒ™1 ≤ª‘ –ÌŒ™0$/;"	m	struct:Country_Info
enableRegister	base/Command.h	/^  BYTE  enableRegister; \/\/ÂÖÅËÆ∏Ê≥®ÂÜå‰∏∫1 ‰∏çÂÖÅËÆ∏‰∏∫0$/;"	m	struct:Cmd::Country_Info
enableRegister	tmpcode/commond.h	/^	BYTE  enableRegister; \/\/‘ –Ì◊¢≤·Œ™1 ≤ª‘ –ÌŒ™0$/;"	m	struct:Country_Info
enc	base/zSocket.h	/^	CEncrypt enc;                \/**< º”√‹∑Ω Ω *\/$/;"	m	class:zSocket
encMethod	base/EncDec/EncDec.h	/^  enum encMethod$/;"	g	class:CEncrypt
enc_mask	base/EncDec/EncDec.h	/^  unsigned int enc_mask;$/;"	m	class:CEncrypt
encdec	base/EncDec/EncDec.cpp	/^int CEncrypt::encdec(void *data,unsigned int nLen,bool enc)$/;"	f	class:CEncrypt
encdec_des	base/EncDec/EncDec.cpp	/^int CEncrypt::encdec_des(unsigned char *data,unsigned int nLen,bool enc)$/;"	f	class:CEncrypt
encdec_rc5	base/EncDec/EncDec.cpp	/^int CEncrypt::encdec_rc5(unsigned char *data,unsigned int nLen,bool enc)$/;"	f	class:CEncrypt
end	base/zType.h	/^    end,$/;"	e	enum:taskType
endBattleTime	ScenesServer/SceneEntryPk.h	/^    zRTime endBattleTime;$/;"	m	struct:SceneEntryPk
endDieFlag	base/Card.h	/^    BYTE endDieFlag;	    \/\/ªÿ∫œΩ· ¯À¿Õˆ±Í ∂$/;"	m	struct:t_CardPK
endFlag	tmpcode/commond.h	/^	bool endFlag;   \/\/Ω· ¯µƒ±Íº«  ƒ¨»œŒ™∑Ò$/;"	m	struct:stRetCityDareSortUserCmd
endHour	tmpcode/commond.h	/^            BYTE endHour;$/;"	m	struct:stRetDailyWarningQuestUserCmd::quests::stTime
endMin	tmpcode/commond.h	/^            BYTE endMin;$/;"	m	struct:stRetDailyWarningQuestUserCmd::quests::stTime
endTime	ScenesServer/Scene.h	/^      tm endTime;\/\/‰∏ÄÂ§©‰∏≠ÁªìÊùüÁöÑÊó∂Èó¥$/;"	m	struct:Scene::FixedRush
endTime	base/Command.h	/^  DWORD endTime;$/;"	m	struct:Cmd::stAddListAuction
endTime	base/Command.h	/^  DWORD endTime;$/;"	m	struct:Cmd::stAddListMail
endTime	base/SessionCommand.h	/^      DWORD endTime;$/;"	m	struct:Cmd::Session::auctionInfo
endTime	tmpcode/commond.h	/^	DWORD endTime;  \/\/Ω¯∂»ÃıÕÍ≥… ±º‰$/;"	m	struct:stVisitZhongLiCityTradeUserCmd
endTime	tmpcode/commond.h	/^	DWORD endTime;$/;"	m	struct:stOpenMarryStateCmd
endTime	tmpcode/commond.h	/^        DWORD endTime;  \/\/Ω¯∂»ÃıÕÍ≥… ±º‰ (∫¡√Î)$/;"	m	struct:stVisitAltarTradeUserCmd
endTime	tmpcode/commond.h	/^        DWORD endTime;$/;"	m	struct:stAddListAuction
endTime	tmpcode/commond.h	/^        DWORD endTime;$/;"	m	struct:stSendActivityStateUserCmd
endTime	tmpcode/commond.h	/^        time_t endTime;          \/\/ªÓ∂ØΩ· ¯ ±º‰$/;"	m	struct:stActivityDataUserCmd::act
endTime	tmpcode/commond.h	/^    DWORD endTime;$/;"	m	struct:stAddListMail
endUserRound	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::endUserRound(SceneUser &user)$/;"	f	class:ChallengeGame
end_tid	BillServer/BillUser.cpp	/^void BillUser::end_tid()$/;"	f	class:BillUser
endtime	tmpcode/commond.h	/^    DWORD endtime;$/;"	m	struct:stAddListPurchase
enemyDef	tmpcode/commond.h	/^    DWORD enemyDef;\/\/”˘µ–£∫killIn$/;"	m	struct:kingAchievement
enemyKill	tmpcode/commond.h	/^    DWORD enemyKill;\/\/∑•µ–: killOut$/;"	m	struct:kingAchievement
enemyName	tmpcode/commond.h	/^	char enemyName[MAX_NAMESIZE];$/;"	m	struct:EnemyOnOff
energyJob	base/Object.h	/^	    WORD  energyJob;  \/\/ ÷∞“µ◊∞±∏:ƒ‹¡øµƒ÷∞“µ¿‡–Õ, ∂®“ÂÕ¨CharBase.job  øÕªß∂À∂‘”¶÷∞“µ◊∞±∏÷–÷∞“µ–Ë«Û÷–µƒ÷∞“µœ‘ æ$/;"	m	struct:t_Object::__anon62
enervation	ScenesServer/ScenePk.h	/^      SWORD enervation; \/\/ Ë°∞Âº±$/;"	m	struct:SkillState::__anon155::__anon156
enmCallDutyPipeline	base/Command.h	/^enum enmCallDutyPipeline$/;"	g	namespace:Cmd
enmCallDutyPipeline	tmpcode/commond.h	/^enum enmCallDutyPipeline$/;"	g
enmCallDutyType	base/Command.h	/^enum enmCallDutyType$/;"	g	namespace:Cmd
enmCallDutyType	tmpcode/commond.h	/^enum enmCallDutyType$/;"	g
enmUnStateType	base/Command.h	/^enum enmUnStateType{$/;"	g	namespace:Cmd
enrageID	base/Card.h	/^    DWORD enrageID;	    \/\/º§≈≠ID(skill)$/;"	m	struct:t_CardPK
enrageID	base/zDatabase.h	/^    DWORD enrageID;	    \/\/º§≈≠ID(skill)$/;"	m	struct:CardBase
enrageID	base/zDatabase.h	/^    DWORD enrageID;	    \/\/º§≈≠ID(skill)$/;"	m	struct:zCardB
enragedFlag	base/Card.h	/^    BYTE enragedFlag;	    \/\/±ªº§≈≠¡À$/;"	m	struct:t_CardPK
enter_queue	base/zAStar.h	/^	void enter_queue(zPathQueueHead &queueHead,zPathPoint *pPoint,int currentCost)$/;"	f	class:zAStar
entries	ScenesServer/SceneNpcAI.cpp	/^    SceneEntryPk_vec& entries;$/;"	m	struct:getEntriesCallBack
entry	ScenesServer/SkillStatusManager.h	/^  zCard *entry;	\/\/ Ù÷˜$/;"	m	class:SkillStatusManager
entry	base/SuperCommand.h	/^      ServerEntry entry;$/;"	m	struct:Cmd::Super::t_Startup_ServerEntry_NotifyOther
entry	base/SuperCommand.h	/^      ServerEntry entry[1];$/;"	m	struct:Cmd::Super::t_Startup_ServerEntry_NotifyMe
enumBuyType	base/Command.h	/^enum enumBuyType{$/;"	g	namespace:Cmd
enumChatType	base/Command.h	/^enum enumChatType{$/;"	g	namespace:Cmd
enumDanceNO	tmpcode/commond.h	/^enum enumDanceNO$/;"	g
enumDanceType	tmpcode/commond.h	/^enum enumDanceType$/;"	g
enumEquipType	base/Command.h	/^enum enumEquipType{$/;"	g	namespace:Cmd
enumGameAccelKeyType	base/Command.h	/^enum enumGameAccelKeyType{$/;"	g	namespace:Cmd
enumGameAccelKeyType	tmpcode/commond.h	/^enum enumGameAccelKeyType$/;"	g
enumHairColor	base/Command.h	/^enum enumHairColor$/;"	g	namespace:Cmd
enumHairStyle	base/Command.h	/^enum enumHairStyle$/;"	g	namespace:Cmd
enumItemType	base/Object.h	/^enum enumItemType$/;"	g
enumLifeguardType	tmpcode/commond.h	/^enum enumLifeguardType $/;"	g
enumMapDataType	base/Command.h	/^    enum enumMapDataType{$/;"	g	namespace:Cmd
enumMapDataType	tmpcode/commond.h	/^enum enumMapDataType$/;"	g
enumPopEffect	base/Command.h	/^enum enumPopEffect$/;"	g	namespace:Cmd
enumPopEffect	tmpcode/commond.h	/^enum enumPopEffect$/;"	g
enumSceneRunningState	base/zScene.h	/^enum enumSceneRunningState{$/;"	g
enumSysInfoType	base/Command.h	/^enum enumSysInfoType{$/;"	g	namespace:Cmd
enumSysInfoType	tmpcode/commond.h	/^enum enumSysInfoType{$/;"	g
enumUserSetting	base/Command.h	/^enum  enumUserSetting          $/;"	g	namespace:Cmd
enumUserSetting	tmpcode/commond.h	/^enum  enumUserSetting$/;"	g
enumWriteBackTest_Type	base/RecordCommand.h	/^    enum enumWriteBackTest_Type$/;"	g	namespace:Cmd::Record
env	base/zService.h	/^	zProperties env;        \/**< ¥Ê¥¢µ±«∞‘À––œµÕ≥µƒª∑æ≥±‰¡ø *\/$/;"	m	class:zService
epfds	base/zMTCPServer.h	/^	std::vector<struct epoll_event> epfds;$/;"	m	class:zMTCPServer
eqstr	BillServer/BillCache.h	/^    struct eqstr$/;"	s	class:BillCache
eqstr	SuperServer/RoleregCache.cpp	/^	struct eqstr$/;"	s	class:RoleDataContainer
equip	ScenesServer/zObject.cpp	/^zObject* EquipPack::equip(EQUIPNO no) const$/;"	f	class:EquipPack
equip	ScenesServer/zObject.h	/^    EquipPack equip;$/;"	m	class:Packages
equip	tmpcode/commond.h	/^	char  equip[MAX_NAMESIZE];   \/\/…˝º∂◊∞±∏√˚$/;"	m	struct:stActiveShenLongReward
equip	tmpcode/commond.h	/^        t_Object equip;  \/\/±æ¥Œ»€¡∂µƒ◊∞±∏–≈œ¢$/;"	m	struct:stStoveDataUserCmd
equip	tmpcode/commond.h	/^        t_Object equip;  \/\/ƒß¡¶¬Ø÷–µƒ◊∞±∏–≈œ¢$/;"	m	struct:stEndStoveDataUserCmd
equip	tmpcode/commond.h	/^    DWORD equip;\/\/◊∞±∏∆¿∂®$/;"	m	struct:kingAchievement
equip	tmpcode/commond.h	/^    char  equip[MAX_NAMESIZE];   \/\/…˝º∂◊∞±∏√˚$/;"	m	struct:t_RewardInfo
equip	tmpcode/commond.h	/^    }equip;$/;"	m	struct:t_DragonData	typeref:struct:t_DragonData::DragonEquip
equip1	ScenesServer/zCard.h	/^    EquipSlot equip1;	\/\/Œ‰∆˜≤€$/;"	m	class:CardSlots
equip2	ScenesServer/zCard.h	/^    EquipSlot equip2;$/;"	m	class:CardSlots
equipEnter	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::equipEnter(SceneUser &user, zCard* equip)$/;"	f	class:ChallengeGame
equipID	tmpcode/commond.h	/^        DWORD  equipID;     \/\/¥˝–ﬁ∏¥◊∞±∏Œ®“ªID$/;"	m	struct:stResetTimeUserCmd
equipID	tmpcode/commond.h	/^    DWORD equipID;    \/\/…˝º∂◊∞±∏thisID$/;"	m	struct:t_RewardInfo
equipID	tmpcode/commond.h	/^    DWORD equipID;   \/\/¥˝…˝–«µƒ◊∞±∏id$/;"	m	struct:stUseStarStoneUserCmd
equipID	tmpcode/commond.h	/^    DWORD equipID;   \/\/◊∞±∏id$/;"	m	struct:stUseAddRingUserCmd
equipID	tmpcode/commond.h	/^    DWORD equipID;$/;"	m	struct:stUseElecHammerUserCmd
equipLeave	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::equipLeave(SceneUser &user, zCard* equip)$/;"	f	class:ChallengeGame
equipLevel	tmpcode/commond.h	/^	DWORD equipLevel;       \/\/ƒ‹…˝º∂µƒ◊ÓµÕ◊∞±∏µ»º∂$/;"	m	struct:stRetMagicForgeSolideInfo
equipLevel	tmpcode/commond.h	/^	WORD equipLevel;$/;"	m	struct:stNotifyWenMingInfoUserCmd
equipMinLevel	tmpcode/commond.h	/^        WORD equipMinLevel;\/\/◊∞±∏◊Ó–°µ»º∂$/;"	m	struct:stReturnRequestFlySkill
equipPlusNum	tmpcode/commond.h	/^        WORD equipPlusNum;\/\/◊∞±∏º” ˝$/;"	m	struct:stReturnRequestFlySkill
equip_make	ScenesServer/script_func.cpp	/^void equip_make(SceneUser* user,DWORD thisID,bool drop,int flag)$/;"	f
equiplevelnext	tmpcode/commond.h	/^	WORD equiplevelnext;$/;"	m	struct:stNotifyWenMingInfoUserCmd
equipminlevel	tmpcode/commond.h	/^	WORD equipminlevel;\/\/◊∞±∏º§ªÓ◊ÓµÕµ»º∂$/;"	m	struct:stShowAllSkillUserPropertyUserCmd
equipminlevel	tmpcode/commond.h	/^        WORD  equipminlevel; \/\/◊∞±∏º§ªÓ◊Ó–°µ»º∂$/;"	m	struct:stShowEquipUserPropertyUserCmd
equipminlevel	tmpcode/commond.h	/^     WORD  equipminlevel;\/\/◊∞±∏º§ªÓ◊Ó–°µ»º∂$/;"	m	struct:st_WatchPlayer
equipplus	tmpcode/commond.h	/^	WORD equipplus;\/\/◊∞±∏º§ªÓ◊ÓµÕº” ˝$/;"	m	struct:stShowAllSkillUserPropertyUserCmd
equipplusnum	tmpcode/commond.h	/^	 WORD  equipplusnum;\/\/◊∞±∏º§ªÓº” ˝$/;"	m	struct:st_WatchPlayer
equipplusnum	tmpcode/commond.h	/^        WORD  equipplusnum; \/\/◊∞±∏º§ªÓº” ˝$/;"	m	struct:stShowEquipUserPropertyUserCmd
equipqwThisID	tmpcode/commond.h	/^	DWORD equipqwThisID;\/\/◊∞±∏µƒThisID$/;"	m	struct:stClearJobTokenPropertyUserCmd
equips	ScenesServer/zObject.h	/^    Equips equips;$/;"	m	class:EquipPack
erase	base/zMisc.h	/^	void erase()$/;"	f	class:MsgQueue
erase	base/zMisc.h	/^	void erase(const T& t)$/;"	f	class:zCmdCheck
err_code	base/Command.h	/^  BYTE err_code; \/\/ËøîÂõûÊó∂ÁöÑ‰ø°ÊÅØ 0 Ê≤°ÊúâÈîôËØØ 1 ÂêçÂ≠óÈáçÂ§ç 2 ÂêçÂ≠óÂåÖÂê´‰∏çÂêàÊ≥ïÁöÑÂÜÖÂÆπ$/;"	m	struct:Cmd::stCheckNameSelectUserCmd
err_code	base/Command.h	/^  BYTE err_code; \/\/ËøîÂõûÊó∂ÁöÑ‰ø°ÊÅØ 1: ÊÇ®ÊòØÂ∏Æ‰∏ªÔºåËØ∑Ëß£Êï£Â∏Æ‰ºöÂêéÂÜçÂà†Èô§ËßíËâ≤$/;"	m	struct:Cmd::stReturnDeleteSelectUserCmd
err_code	base/RecordCommand.h	/^      BYTE err_code;            \/\/\/ ËøîÂõû‰ª£Á†Å 0: ÂèØ‰ª•‰ΩøÁî® 1:ËßíËâ≤ÂêçÈáçÂ§ç$/;"	m	struct:Cmd::Record::t_CheckName_Return_GateRecord
err_code	base/SessionCommand.h	/^      BYTE err_code;\/\/ÈîôËØØ‰ø°ÊÅØ$/;"	m	struct:Cmd::Session::t_gmCommand_SceneSession
err_code	base/SessionCommand.h	/^      BYTE err_code;\/\/ÈîôËØØ‰ø°ÊÅØ$/;"	m	struct:Cmd::Session::t_privateChat_SceneSession
err_code	tmpcode/commond.h	/^	BYTE err_code; \/\/∑µªÿ ±µƒ–≈œ¢ 0 √ª”–¥ÌŒÛ 1 √˚◊÷÷ÿ∏¥ 2 √˚◊÷∞¸∫¨≤ª∫œ∑®µƒƒ⁄»›$/;"	m	struct:stCheckNameSelectUserCmd
err_code	tmpcode/commond.h	/^	BYTE err_code; \/\/∑µªÿ ±µƒ–≈œ¢1: ƒ˙ «∞Ô÷˜£¨«ÎΩ‚…¢∞Ôª·∫Û‘Ÿ…æ≥˝Ω«…´$/;"	m	struct:stReturnDeleteSelectUserCmd
errcode	base/zRegex.h	/^	int errcode;$/;"	m	class:zRegex
errorKillNum	tmpcode/commond.h	/^	WORD errorKillNum;      \/\/ŒÛ…À¥Œ ˝$/;"	m	struct:stPopoScore
errorKillScore	tmpcode/commond.h	/^	WORD errorKillScore;    \/\/ŒÛ…À∑÷ ˝(Ω· ¯∫Ûº”µΩ∂‘∑ΩΩ±¿¯µ√∑÷¿Ô)$/;"	m	struct:stPopoScore
errstr	base/zRegex.h	/^	std::string errstr;$/;"	m	class:zRegex
erupt	ScenesServer/ScenePk.h	/^      SWORD erupt;      \/\/ Á†¥ÈáúÊ≤âËàüÁä∂ÊÄÅ È≠îÁâ©ÊîªÂáªÁøª300%ÊåÅÁª≠Êó∂Èó¥ÂÆåÂêé‰ºöËé∑ÂæóÂ§çÊ¥ªËôöÂº±Áä∂ÊÄÅ$/;"	m	struct:SkillState::__anon155::__anon156
escape	tmpcode/commond.h	/^    WORD escape;\/\/Ã”≈‹ ˝¡ø$/;"	m	struct:rtMobEscapeCountUserCmd
essenceID	tmpcode/commond.h	/^    DWORD essenceID; \/\/≤ƒ¡œæ´ª™ŒÔ∆∑id$/;"	m	struct:stExchanceEssenceUserCmd
ets	base/zEntryManager.h	/^	hashmap ets;$/;"	m	class:LimitHash
ets	base/zEntryManager.h	/^	hashmap ets;$/;"	m	class:MultiHash
event	tmpcode/commond.h	/^    DWORD event;$/;"	m	struct:rqTakeCareShenMuCountryCmd
event	tmpcode/commond.h	/^    DWORD event;$/;"	m	struct:rtShenMuStateCountryCmd
eventID	tmpcode/commond.h	/^    DWORD eventID;  \/\/œÚƒ≥∏ˆNPC«Î«ÛªıŒÔ$/;"	m	struct:reqGiveGuardGoodsSeptCmd
eventID	tmpcode/commond.h	/^    DWORD eventID;  \/\/œÚƒ≥∏ˆNPC«Î«ÛªıŒÔ$/;"	m	struct:rtSearchGuardGoodsSeptCmd
eventList	tmpcode/commond.h	/^	CountryGreatEvent eventList[0]; \/\/±‰≥§Ω·ππ$/;"	m	struct:stRetCountryEventDataUserCmd
eventOffset	tmpcode/commond.h	/^    DWORD eventOffset;   \/\/ªÿ¥´÷¥––∑÷÷Æ$/;"	m	struct:reqGiveGuardGoodsSeptCmd
eventOffset	tmpcode/commond.h	/^    DWORD eventOffset;   \/\/ªÿ¥´÷¥––∑÷÷Æ$/;"	m	struct:rtSearchGuardGoodsSeptCmd
eventid	tmpcode/commond.h	/^        DWORD eventid;		\/\/ –¬ ÷Ã· æ ±∏¥”√£¨iFormType$/;"	m	struct:stBeginDisplayCartoonUserCmd
eventnum	tmpcode/commond.h	/^	BYTE eventnum;                  \/\/ ¬º˛◊‹ ˝$/;"	m	struct:stRetCountryEventDataUserCmd
evil	ScenesServer/zObject.h	/^  WORD evil; \/\/Âô¨È≠îÂ¢ûÂä†$/;"	m	class:Equips
evil	base/Object.h	/^	WORD evil; \/\/ …ƒß‘ˆº”$/;"	m	struct:t_Object
evil	tmpcode/commond.h	/^	DWORD   evil;    \/\/◊Ô∂Ò÷µ$/;"	m	struct:st_CharShow2
evildef	ScenesServer/zObject.h	/^  WORD evildef; \/\/ÊäóÂô¨È≠îÂ¢ûÂä†$/;"	m	class:Equips
evildef	base/Object.h	/^	WORD evildef; \/\/øπ …ƒß‘ˆº”$/;"	m	struct:t_Object
evolveData	tmpcode/commond.h	/^	LingQiEvolveData evolveData;$/;"	m	struct:LingQiAllData
evolveData	tmpcode/commond.h	/^    LingQiEvolveData evolveData;$/;"	m	struct:LingQiWatchData
evolveLevel	tmpcode/commond.h	/^    BYTE evolveLevel;       \/\/Ω¯ªØº∂±$/;"	m	struct:t_HorseData
evolveType	tmpcode/commond.h	/^    BYTE evolveType;        \/\/Ω¯ªØ÷÷¿‡$/;"	m	struct:t_HorseData
evolveatk	tmpcode/commond.h	/^			WORD evolveatk; $/;"	m	struct:LingQiEvolveData::__anon335::__anon336
evolveatk	tmpcode/commond.h	/^			WORD evolveatk;$/;"	m	struct:LingQiSimulate::__anon368::__anon369
evolvehp	tmpcode/commond.h	/^			WORD evolvehp;$/;"	m	struct:LingQiEvolveData::__anon335::__anon336
evolvehp	tmpcode/commond.h	/^			WORD evolvehp;$/;"	m	struct:LingQiSimulate::__anon368::__anon369
evolvemdef	tmpcode/commond.h	/^			WORD evolvemdef;        $/;"	m	struct:LingQiEvolveData::__anon335::__anon336
evolvemdef	tmpcode/commond.h	/^			WORD evolvemdef;$/;"	m	struct:LingQiSimulate::__anon368::__anon369
evolvepdef	tmpcode/commond.h	/^			WORD evolvepdef;        $/;"	m	struct:LingQiEvolveData::__anon335::__anon336
evolvepdef	tmpcode/commond.h	/^			WORD evolvepdef;$/;"	m	struct:LingQiSimulate::__anon368::__anon369
excellentAttack	base/Object.h	/^			WORD excellentAttack;  \/\/◊ø‘Ω“ªª˜$/;"	m	struct:t_Object::__anon59::__anon60
exceptme_id	base/SceneCommand.h	/^      DWORD exceptme_id;$/;"	m	struct:Cmd::Scene::t_Nine_ExceptMe_ForwardScene
exchangeMeAndSummonPet	ScenesServer/SceneEntryPk.h	/^    virtual void exchangeMeAndSummonPet(){};$/;"	f	struct:SceneEntryPk
exchangeMeAndSummonPet	ScenesServer/SceneUser.cpp	/^void SceneUser::exchangeMeAndSummonPet()$/;"	f	class:SceneUser
exeScript	ScenesServer/scriptTickTask.h	/^		static bool exeScript(SceneUser *user,Cmd::t_NullCmd *pNullCmd)\/*BYTE cmd,BYTE para*\/$/;"	f	class:scriptMessageFilter
exec	FLServer/TimeTick.cpp	/^    void exec(LoginTask *lt)$/;"	f	struct:LoginTimeout
exec	GatewayServer/ScreenIndex.cpp	/^  bool exec(GateUser *pUser)$/;"	f	struct:SendNineExec
exec	GatewayServer/ScreenIndex.cpp	/^  bool exec(GateUser *pUser)$/;"	f	struct:SendNineExecExceptMe
exec	GatewayServer/TimeTick.cpp	/^  bool exec(GatewayTask *gt)$/;"	f	struct:GatewayTaskCheckTime
exec	ScenesServer/ChallengeGame.cpp	/^	bool exec(zCard *object)$/;"	f	class:CheckFreezeState
exec	ScenesServer/ChallengeGame.cpp	/^	bool exec(zCard *object)$/;"	f	class:ClearEndDieCard
exec	ScenesServer/ChallengeGame.cpp	/^	bool exec(zCard *object)$/;"	f	class:ClearTmpSkillStatus
exec	ScenesServer/ChallengeGame.cpp	/^	bool exec(zCard *object)$/;"	f	class:RefreshCardState
exec	ScenesServer/ChallengeGame.cpp	/^	bool exec(zCard *object)$/;"	f	class:ResetGameCardAttackTimes
exec	ScenesServer/ChallengeGame.cpp	/^	bool exec(zCard *object)$/;"	f	class:sendAllCardListToUser
exec	ScenesServer/Chat.cpp	/^void Gm::exec(SceneUser *pUser,char *cmd)$/;"	f	class:Gm
exec	ScenesServer/Scene.cpp	/^  bool exec(zSceneEntry *entry)$/;"	f	struct:AICallback
exec	ScenesServer/Scene.cpp	/^  bool exec(zSceneEntry *entry)$/;"	f	struct:GetAffectScreen
exec	ScenesServer/Scene.cpp	/^  bool exec(zSceneEntry *entry)$/;"	f	struct:RemoveSceneObjectCallBack
exec	ScenesServer/Scene.cpp	/^  bool exec(zSceneEntry *entry)$/;"	f	struct:SceneSendToEveryOne
exec	ScenesServer/Scene.cpp	/^  bool exec(zSceneEntry *entry)$/;"	f	struct:SceneSendToUnWatchTrap
exec	ScenesServer/Scene.cpp	/^  bool exec(zSceneEntry *entry)$/;"	f	struct:SceneSendToWatchTrap
exec	ScenesServer/Scene.cpp	/^  bool exec(zSceneEntry *entry)$/;"	f	struct:SendToEveryOneExceptMe
exec	ScenesServer/Scene.cpp	/^  bool exec(zSceneEntry *entry)$/;"	f	struct:UpdateSceneObjectCallBack
exec	ScenesServer/Scene.cpp	/^  bool exec(zSceneEntry *entry)$/;"	f	struct:findPosInNine
exec	ScenesServer/SceneManager.cpp	/^    bool exec(Scene *scene)$/;"	f	class:GetSceneByFileName
exec	ScenesServer/SceneManager.cpp	/^  bool exec(SceneManager::MapInfo *info)$/;"	f	struct:EveryMapExec
exec	ScenesServer/SceneNpcAI.cpp	/^    bool exec(zSceneEntry *entry)$/;"	f	struct:getEntriesCallBack
exec	ScenesServer/SceneSkill.cpp	/^  bool exec(TeamMember &member)$/;"	f	struct:TeamSkillExec
exec	ScenesServer/SceneUser.cpp	/^	bool exec(zObject *object)$/;"	f	class:SaveObjectExec
exec	ScenesServer/SceneUser.cpp	/^	bool exec(zObject *object)$/;"	f	class:sendAllObjectListToUser
exec	ScenesServer/SceneUser.cpp	/^	bool exec(zObject *object)$/;"	f	class:sendAllObjectToUser
exec	ScenesServer/SceneUser.cpp	/^	bool exec(zSceneEntry *entry)$/;"	f	struct:GetAllRemovePosNpc
exec	ScenesServer/SceneUser.cpp	/^	bool exec(zSceneEntry *entry)$/;"	f	struct:GetAllRemovePosUser
exec	ScenesServer/SceneUser.cpp	/^	bool exec(zSceneEntry *entry)$/;"	f	struct:GetEnvryOneAndSend
exec	ScenesServer/Skill.cpp	/^  bool exec(TeamMember &member)$/;"	f	struct:SendStatusToTeamExec
exec	ScenesServer/TimeTick.cpp	/^  bool exec(Scene *scene)$/;"	f	struct:EverySceneEntryAction
exec	ScenesServer/zObject.cpp	/^bool ClearPack::exec(zObject* ob)$/;"	f	class:ClearPack
exec	ScenesServer/zObject.cpp	/^bool Combination::exec(zObject* o)$/;"	f	class:Combination
exec	ScenesServer/zObject.cpp	/^bool DropFromPack::exec(zObject* ob)$/;"	f	class:DropFromPack
exec	SessionServer/SessionServer.h	/^  bool exec(UserSession *su)$/;"	f	struct:OneCountryScene
exec	SessionServer/SessionTask.cpp	/^  bool exec(UserSession *su)$/;"	f	struct:EveryUserSessionAction
exec	SessionServer/SessionTask.cpp	/^  bool exec(UserSession *su)$/;"	f	struct:OneCountryUserSessionAction
exec	SessionServer/SessionTask.cpp	/^  bool exec(UserSession *su)$/;"	f	struct:broadcastRushToEveryUser
exec	SessionServer/SessionTask.cpp	/^  bool exec(UserSession *su)$/;"	f	struct:broadcastToEveryUser
exec	base/zDatabaseManager.h	/^	bool exec(data *entry)$/;"	f	class:zDataBM::deleteEvery
execAll	FLServer/LoginManager.cpp	/^void LoginManager::execAll(LoginTaskCallback &cb)$/;"	f	class:LoginManager
execAll	GatewayServer/GatewayTaskManager.cpp	/^void GatewayTaskManager::execAll(GatewayTaskCallback &callback)$/;"	f	class:GatewayTaskManager
execAll	ScenesServer/scriptTickTask.cpp	/^void scriptTaskManagement::execAll()$/;"	f	class:scriptTaskManagement
execAll	base/zDatabaseManager.h	/^	void execAll(zDatabaseCallBack<data> &base)$/;"	f	class:zDataBM
execAllOfCountry	GatewayServer/GateUserManager.cpp	/^void GateUserManager::execAllOfCountry(const DWORD country,execEntry<YourNpcEntry> &callback)$/;"	f	class:GateUserManager
execAllOfEffectNpcScreen	ScenesServer/zSceneEntryIndex.cpp	/^void zSceneEntryIndex::execAllOfEffectNpcScreen(const DWORD group,zSceneEntryCallBack &callback)$/;"	f	class:zSceneEntryIndex
execAllOfScene	ScenesServer/zSceneEntryIndex.cpp	/^void zSceneEntryIndex::execAllOfScene(const zSceneEntry::SceneEntryType type,zSceneEntryCallBack &callback)$/;"	f	class:zSceneEntryIndex
execAllOfScene	ScenesServer/zSceneEntryIndex.cpp	/^void zSceneEntryIndex::execAllOfScene(zSceneEntryCallBack &callback)$/;"	f	class:zSceneEntryIndex
execAllOfScreen	GatewayServer/ScreenIndex.cpp	/^void ScreenIndex::execAllOfScreen(const DWORD screen,execEntry<YourNpcEntry> &callback)$/;"	f	class:ScreenIndex
execAllOfScreen	ScenesServer/zSceneEntryIndex.cpp	/^void zSceneEntryIndex::execAllOfScreen(const zPosI screen,zSceneEntryCallBack &callback)$/;"	f	class:zSceneEntryIndex
execAllOfScreen	ScenesServer/zSceneEntryIndex.cpp	/^void zSceneEntryIndex::execAllOfScreen(const zSceneEntry::SceneEntryType type,const zPosI screen,zSceneEntryCallBack &callback)$/;"	f	class:zSceneEntryIndex
execAllSpecialNpc	ScenesServer/SceneNpcManager.h	/^    void execAllSpecialNpc(specialNpcCallBack &callback)$/;"	f	class:SceneNpcManager
execEntry	base/zEntryManager.h	/^struct execEntry$/;"	s
execEvery	BillServer/BillClientManager.cpp	/^void BillClientManager::execEvery()$/;"	f	class:BillClientManager
execEvery	BillServer/BillTaskManager.cpp	/^void BillTaskManager::execEvery()$/;"	f	class:BillTaskManager
execEvery	ScenesServer/CardManager.cpp	/^void GameCardM::execEvery(UserCardExec &exec)$/;"	f	class:GameCardM
execEvery	ScenesServer/ObjectManager.cpp	/^void UserObjectM::execEvery(UserObjectExec &exec)$/;"	f	class:UserObjectM
execEvery	ScenesServer/SceneTaskManager.cpp	/^void SceneTaskManager::execEvery()$/;"	f	class:SceneTaskManager
execEvery	ScenesServer/SkillManager.cpp	/^void UserSkillM::execEvery(UserSkillExec &exec)$/;"	f	class:UserSkillM
execEvery	ScenesServer/zCard.cpp	/^void CardSlot::execEvery(CardSlotCallback &callback)$/;"	f	class:CardSlot
execEvery	ScenesServer/zCard.h	/^    void execEvery(CardSlot* pack,T t)$/;"	f	class:CardSlots
execEvery	ScenesServer/zCard.h	/^    void execEvery(CardSlot* pack,T t,P1 p1)$/;"	f	class:CardSlots
execEvery	ScenesServer/zObject.cpp	/^void Package::execEvery(PackageCallback &callback)$/;"	f	class:Package
execEvery	ScenesServer/zObject.h	/^    void execEvery(Package* pack,T t)$/;"	f	class:Packages
execEvery	ScenesServer/zObject.h	/^    void execEvery(Package* pack,T t,P1 p1)$/;"	f	class:Packages
execEvery	SessionServer/SessionTaskManager.cpp	/^void SessionTaskManager::execEvery()$/;"	f	class:SessionTaskManager
execEveryEntry	base/zEntryManager.h	/^	inline bool execEveryEntry(execEntry<YourEntry> &eee)$/;"	f	class:zEntryManager
execEveryMap	ScenesServer/SceneManager.h	/^    void execEveryMap(execEntry<YourEntry> &callback)$/;"	f	class:SceneManager
execEveryNpc	ScenesServer/SceneNpcManager.h	/^    bool execEveryNpc(execEntry<YourNpcEntry> &exec)$/;"	f	class:SceneNpcManager
execEveryOne	SessionServer/CRelationManager.h	/^  bool execEveryOne(execEntry<YourEntry> &exec)$/;"	f	class:CRelationManager
execEveryScene	ScenesServer/SceneManager.cpp	/^void SceneManager::execEveryScene(SceneCallBack &callback)$/;"	f	class:SceneManager
execEveryScene	base/zSceneManager.h	/^	bool execEveryScene(execEntry<YourSceneEntry> &exec)$/;"	f	class:zSceneManager
execEverySceneTask	ScenesServer/SceneTaskManager.h	/^    void execEverySceneTask(execEntry<YourEntry> &exec)$/;"	f	class:SceneTaskManager
execEveryUser	BillServer/BillUserManager.h	/^      bool execEveryUser(execEntry<YourUserEntry> &exec)$/;"	f	class:BillUserManager
execEveryUser	GatewayServer/GateUserManager.h	/^	    bool execEveryUser(execEntry<YourUserEntry> &exec)$/;"	f	class:GateUserManager
execEveryUser	ScenesServer/SceneUserManager.h	/^      bool execEveryUser(execEntry<YourUserEntry> &exec)$/;"	f	class:SceneRecycleUserManager
execEveryUser	base/zUserManager.h	/^	bool execEveryUser(execEntry<YourUserEntry> &exec)$/;"	f	class:zUserManager
execGroup	ScenesServer/Scene.h	/^    DWORD execGroup;$/;"	m	class:Scene
execute	ScenesServer/Quest.cpp	/^bool Quest::execute(SceneUser& user,Cmd::stQuestUserCmd* cmd,DWORD len)$/;"	f	class:Quest
execute	ScenesServer/QuestEvent.cpp	/^int Event::execute()$/;"	f	class:Event
execute	ScenesServer/QuestEvent.cpp	/^int Event::execute(SceneUser& user)$/;"	f	class:Event
execute	ScenesServer/QuestEvent.cpp	/^int Event::execute(SceneUser& user,DWORD quest_id,DWORD offset)$/;"	f	class:Event
execute	ScenesServer/QuestEvent.h	/^  int execute(SceneUser& user,E& event)$/;"	f	class:EventManager
execute	ScenesServer/QuestEvent.h	/^inline int EventManager<OnTimer>::execute(OnTimer& event)$/;"	f	class:EventManager
execute	ScenesServer/QuestEvent.h	/^inline int EventManager<OnUse>::execute(SceneUser& user,OnUse& event)$/;"	f	class:EventManager
execute	ScenesServer/QuestEvent.h	/^inline int EventManager<OnVisit>::execute(SceneUser& user,OnVisit& event)$/;"	f	class:EventManager
execute	ScenesServer/QuestTable.h	/^  int execute (E& event)$/;"	f	class:EventTable
execute	ScenesServer/QuestTable.h	/^  int execute (SceneUser& user,E& event)$/;"	f	class:EventTable
execute	ScenesServer/script.cpp	/^void LuaVM::execute( LuaScript* pScript )$/;"	f	class:LuaVM
execute	ScenesServer/script.cpp	/^void LuaVM::execute( const std::string & rData )$/;"	f	class:LuaVM
exist	ScenesServer/CardManager.cpp	/^DWORD GameCardM::exist(DWORD id,DWORD number,BYTE upgrade,BYTE type) const$/;"	f	class:GameCardM
exist	ScenesServer/ObjectManager.cpp	/^DWORD UserObjectM::exist(DWORD id,DWORD number,BYTE upgrade,BYTE type) const$/;"	f	class:UserObjectM
exit_queue	base/zAStar.h	/^	zPathPoint *exit_queue(zPathQueueHead &queueHead)$/;"	f	class:zAStar
exp	ScenesServer/HeroInfoManager.h	/^    QWORD exp;		\/\/”¢–€æ≠—È$/;"	m	struct:HeroData
exp	ScenesServer/ScenePk.h	/^      DWORD  exp;            \/\/\/ ÁªèÈ™åÊ∂àËÄó$/;"	m	struct:PkValue::__anon159::__anon160
exp	base/CharBase.h	/^  QWORD exp;              \/\/\/ ÂΩìÂâçÁªèÈ™åÂÄº$/;"	m	struct:CharBase
exp	base/Command.h	/^	DWORD exp;              \/\/ÁªèÈ™å$/;"	m	struct:Cmd::t_PetData
exp	base/Command.h	/^    DWORD exp;  $/;"	m	struct:Cmd::stObjectExpUserCmd
exp	base/Command.h	/^  DWORD exp;      \/\/ÁªèÈ™å$/;"	m	struct:Cmd::t_CartoonData
exp	base/Command.h	/^  DWORD exp;$/;"	m	struct:Cmd::stHpExpCartoonCmd
exp	base/Command.h	/^  DWORD exp;$/;"	m	struct:Cmd::stHpExpPetCmd
exp	base/Command.h	/^  DWORD exp;$/;"	m	struct:Cmd::stRetGenCountryCmd
exp	base/Command.h	/^  QWORD exp;            \/\/\/ ÂΩìÂâçÁªèÈ™åÂÄº$/;"	m	struct:Cmd::t_MainUserData
exp	base/HeroCardCmd.h	/^	QWORD exp;		\/\/”¢–€æ≠—È$/;"	m	struct:Cmd::t_hero
exp	base/Object.h	/^	DWORD exp;  \/\/µ¿æﬂæ≠—È$/;"	m	struct:t_Object
exp	base/SessionCommand.h	/^      DWORD exp;$/;"	m	struct:Cmd::Session::t_addGenExp_SceneSession
exp	base/SessionCommand.h	/^      DWORD exp;$/;"	m	struct:Cmd::Session::t_refreshGen_SceneSession
exp	base/xmlparser/herobase.h	/^            xml_prop<QWORD>	exp;$/;"	m	struct:HeroBaseCFG::Exp::Item
exp	base/xmlparser/herobase.h	/^    xml_node<Exp>	exp;$/;"	m	struct:HeroBaseCFG
exp	base/zDatabase.h	/^    DWORD  exp;        \/\/ æ≠—È÷µ$/;"	m	struct:zNpcB
exp	tmpcode/commond.h	/^	DWORD   exp;                    \/\/’Ωº®$/;"	m	struct:TankData
exp	tmpcode/commond.h	/^	DWORD exp;                      \/\/ÛÙª∫»æ∆∏¯÷˜»À“ª¥Œ–‘‘ˆº”µƒæ≠—È÷µ$/;"	m	struct:GouhuoMemInfo
exp	tmpcode/commond.h	/^	DWORD exp;              \/\/æ≠—È$/;"	m	struct:t_PetData
exp	tmpcode/commond.h	/^	DWORD exp;   \/\/◊∞±∏≤˙…˙µƒæ≠—È÷µ$/;"	m	struct:stNotifyEquipLingliLingQiUserCmd
exp	tmpcode/commond.h	/^	DWORD exp;$/;"	m	struct:stHpExpPetCmd
exp	tmpcode/commond.h	/^	DWORD exp;$/;"	m	struct:stRetAvatarInfo
exp	tmpcode/commond.h	/^	DWORD exp;\/\/µ√µΩæ≠—È            $/;"	m	struct:Score_Exp
exp	tmpcode/commond.h	/^	QWORD exp;						\/\/\/ µ±«∞æ≠—È÷µ$/;"	m	struct:t_MainUserData
exp	tmpcode/commond.h	/^	QWORD exp;$/;"	m	struct:stRefreshVarLingQiUserCmd
exp	tmpcode/commond.h	/^	QWORD exp;\/\/æ≠—È$/;"	m	struct:LingQiData
exp	tmpcode/commond.h	/^        DWORD exp;      $/;"	m	struct:ResultScoreAndExp
exp	tmpcode/commond.h	/^        DWORD exp;      $/;"	m	struct:stObjectExpUserCmd
expRate	tmpcode/commond.h	/^	DWORD expRate;$/;"	m	struct:stRetCanSetfree
expRate	tmpcode/commond.h	/^	DWORD expRate;$/;"	m	struct:stReturnFarmIntroduce
explode	tmpcode/commond.h	/^	BYTE explode;\/\/ «∑Ò±¨’®$/;"	m	struct:stRemoveTankMapScreenStateUserCmd
exploit	base/CharBase.h	/^  DWORD exploit;        \/\/\/ ÂäüÂããÂÄº$/;"	m	struct:CharBase
exploit	base/Command.h	/^  DWORD   exploit;      \/\/ ÂäüÂããÂÄº$/;"	m	struct:Cmd::stRelationStatusCmd
exploit	base/Command.h	/^  DWORD exploit;            \/\/ ÂäüÂããÂÄº$/;"	m	struct:Cmd::stSeptRember
exploit	base/Command.h	/^  DWORD exploit;           \/\/ ÂäüÂããÂÄº$/;"	m	struct:Cmd::stBroadcastSeptMemberInfo
exploit	base/Command.h	/^  DWORD exploit;          \/\/ ÂäüÂããÂÄº$/;"	m	struct:Cmd::stBroadcastMemberInfo
exploit	base/Command.h	/^  DWORD exploit;          \/\/ ÂäüÂããÂÄº$/;"	m	struct:Cmd::stUnionRember
exploit	base/Command.h	/^  DWORD exploit;    \/\/ ÂäüÂããÂÄº$/;"	m	struct:Cmd::stRelation
exploit	base/Command.h	/^  DWORD exploit;$/;"	m	struct:Cmd::t_MainUserData
exploit	base/SessionCommand.h	/^	DWORD exploit;$/;"	m	struct:Cmd::Session::t_RelationAddFriend
exploit	tmpcode/commond.h	/^	DWORD   exploit;                        \/\/ π¶—´÷µ$/;"	m	struct:stRelationStatusCmd
exploit	tmpcode/commond.h	/^	DWORD exploit;					\/\/ π¶—´÷µ$/;"	m	struct:stBroadcastMemberInfo
exploit	tmpcode/commond.h	/^	DWORD exploit;	\/\/’Ωπ¶÷µ$/;"	m	struct:SortLastWeek
exploit	tmpcode/commond.h	/^	DWORD exploit;	\/\/’Ωπ¶÷µ$/;"	m	struct:SortThisWeek
exploit	tmpcode/commond.h	/^	DWORD exploit;                                          \/\/ π¶—´÷µ$/;"	m	struct:stSeptRember
exploit	tmpcode/commond.h	/^	DWORD exploit;                       \/\/ π¶—´÷µ$/;"	m	struct:stBroadcastSeptMemberInfo
exploit	tmpcode/commond.h	/^	DWORD exploit;          \/\/ π¶—´÷µ$/;"	m	struct:stRelation
exploit	tmpcode/commond.h	/^	DWORD exploit;          \/\/\/ ’Ωπ¶$/;"	m	struct:stRetCourseOfKingCmd
exploit	tmpcode/commond.h	/^	DWORD exploit;       \/\/–¬º” ¥”æ≈∆¡≈≤µΩ»ÀŒÔ÷˜ ˝æ›÷–$/;"	m	struct:t_MainUserData
exploit	tmpcode/commond.h	/^        DWORD exploit;                                  \/\/ π¶—´÷µ$/;"	m	struct:stUnionRember
exploit	tmpcode/commond.h	/^    DWORD exploit;\/\/’Ωπ¶≥∆∫≈$/;"	m	struct:kingAchievement
exploit_arg	base/CharBase.h	/^const int exploit_arg = 100;      \/\/ ÂäüÂããÂÄºÂêåÊØîÊîæÂ§ßÁ≥ªÊï∞$/;"	v
expmap	ScenesServer/SceneNpc.h	/^  NpcHpHashmap expmap;$/;"	m	class:SceneNpc
exprate	ScenesServer/Scene.h	/^    float exprate;$/;"	m	class:Scene
exprate	ScenesServer/SceneManager.h	/^      BYTE exprate;$/;"	m	struct:SceneManager::MapInfo
exprience	tmpcode/commond.h	/^		DWORD exprience;$/;"	m	struct:t_RTPositionSkillInfoSept::__anon264
extend	tmpcode/commond.h	/^	BYTE extend[12];\/\/¿©’π π”√$/;"	m	struct:HappyCardBoxAutoCfg
extra	tmpcode/commond.h	/^	DWORD   extra;  \/\/∂ÓÕ‚◊÷∂Œ£∫µ±≤…ºØ ±£¨”√¿¥º«¬ºNPC tempid$/;"	m	struct:stNotifyCountDownUserCmd
extraRate	tmpcode/commond.h	/^		BYTE  extraRate; \/\/∏ﬂ¬Ø»€¡∂ ß∞‹∫Û‘ˆº”µƒ≥…π¶¬ $/;"	m	struct:stStoveDataUserCmd
extraScore	tmpcode/commond.h	/^	WORD extraScore;\/\/∂ÓÕ‚Ω±¿¯µ√∑÷$/;"	m	struct:stPopoScore
extra_active	base/Object.h	/^	DWORD extra_active[2];$/;"	m	struct:t_Object
extractOneCardFromLib	ScenesServer/ChallengeGame.cpp	/^DWORD ChallengeGame::extractOneCardFromLib(std::vector<DWORD> &libVec)$/;"	f	class:ChallengeGame
fSpeed	tmpcode/commond.h	/^	float fSpeed;\/\/∂Ø◊˜µƒÀŸ∂»$/;"	m	struct:stNpcDoActionUserCmd
f_DES_decrypt3	base/EncDec/mydes.h	/^typedef void (* f_DES_decrypt3) (DES_LONG *data, DES_key_schedule *ks1,DES_key_schedule *ks2,DES_key_schedule *ks3, t_DES_SPtrans *sp);$/;"	t
f_DES_encrypt1	base/EncDec/mydes.h	/^typedef void (* f_DES_encrypt1) (DES_LONG *data, DES_key_schedule *ks, t_DES_SPtrans *sp, int enc);$/;"	t
f_DES_encrypt3	base/EncDec/mydes.h	/^typedef void (* f_DES_encrypt3) (DES_LONG *data, DES_key_schedule *ks1,DES_key_schedule *ks2,DES_key_schedule *ks3, t_DES_SPtrans *sp);$/;"	t
f_DES_random_key	base/EncDec/mydes.h	/^typedef void (* f_DES_random_key) (DES_cblock *ret);$/;"	t
f_DES_set_key	base/EncDec/mydes.h	/^typedef void (* f_DES_set_key) (const_DES_cblock *key, DES_key_schedule *schedule);$/;"	t
f_RC5_32_decrypt	base/EncDec/myrc5.h	/^typedef void (* f_RC5_32_decrypt)(unsigned long *d, RC5_32_KEY *key);$/;"	t
f_RC5_32_encrypt	base/EncDec/myrc5.h	/^typedef void (* f_RC5_32_encrypt)(unsigned long *d, RC5_32_KEY *key);$/;"	t
f_RC5_32_set_key	base/EncDec/myrc5.h	/^typedef void (* f_RC5_32_set_key)(RC5_32_KEY *key, int len, const unsigned char *data, int rounds);$/;"	t
fabuflag	tmpcode/commond.h	/^	DWORD fabuflag;	\/\/∑¢≤ºµƒ±Í ∂  0 ±Ì æÀÊ±„ 1 ±Ì æ÷ªø…“‘∆’Õ®∑¢ 2±Ì æ÷ªø…“‘÷ÿµ„∑¢	$/;"	m	struct:CityQuestInfo
face	GatewayServer/GateUser.h	/^	WORD face;$/;"	m	class:GateSelectUserSession
face	SessionServer/Session.h	/^    DWORD  face;$/;"	m	class:UserSession
face	base/CharBase.h	/^  WORD  face;              \/\/\/ Â§¥ÂÉè$/;"	m	struct:CharBase
face	base/Command.h	/^  DWORD face;$/;"	m	struct:Cmd::stCreateSelectUserCmd
face	base/MiniCommand.h	/^      WORD face;$/;"	m	struct:Cmd::Mini::t_UserLogin_Gateway
face	base/SceneCommand.h	/^      DWORD face;$/;"	m	struct:Cmd::Scene::t_sysSetting_GateScene
face	base/SessionCommand.h	/^		DWORD face;								\/\/\/ sky ÂõûÁ≠îËÄÖÂ§¥ÂÉè$/;"	m	struct:Cmd::Session::t_Team_AnswerTeam
face	base/SessionCommand.h	/^		DWORD face;					\/\/sky Â§¥ÂÉè$/;"	m	struct:Cmd::Session::stMember
face	base/SessionCommand.h	/^      DWORD face;$/;"	m	struct:Cmd::Session::t_sysSetting_SceneSession
face	tmpcode/commond.h	/^	BYTE face;$/;"	m	struct:LTQUserData
face	tmpcode/commond.h	/^	DWORD face;$/;"	m	struct:stChangeFaceLTQUserCmd
face	tmpcode/commond.h	/^        DWORD  face;      \/\/ √Ê»›  headÕ∑–Õ+√Ê»›         $/;"	m	struct:stCreateSelectUserCmd
faceTo	tmpcode/commond.h	/^	DWORD   faceTo; \/\/√ÊœÚ$/;"	m	struct:st_CharShow2
failTime	tmpcode/commond.h	/^	DWORD   failTime;$/;"	m	struct:stGetPackBusiness
faintRes	base/Command.h	/^  WORD faintRes;    \/\/ÊäóÊôïÁú©$/;"	m	struct:Cmd::t_HorseData
falgJundui	tmpcode/commond.h	/^        BYTE falgJundui;        \/\/À˘ Ù’Û”™ 0  ∑ø≤£¨1∫Ï Ø£¨2÷–¡¢$/;"	m	struct:stFlagRelegationLuoRiCmd::flagRelegation
falgType	tmpcode/commond.h	/^        BYTE falgType;          \/\/’Ω∆Ï,1‘™Àÿ∆Ï£¨2∏«—«∆Ï£¨3Ã©Ãπ∆Ï$/;"	m	struct:stFlagRelegationLuoRiCmd::flagRelegation
fame	tmpcode/commond.h	/^	DWORD fame;				\/\/\/ …˘Õ˚µ»º∂$/;"	m	struct:stRetCourseOfKingCmd
familiarDegree	tmpcode/commond.h	/^    BYTE familiarDegree;    \/\/«◊√‹∂» ,◊Ó∏ﬂ100$/;"	m	struct:t_DragonData
familyRank	tmpcode/commond.h	/^	DWORD familyRank;                     \/\/º“◊Â≤„º∂$/;"	m	struct:stSeptBaseInfoCmd
family_obj_time	ScenesServer/zObject.h	/^	DWORD family_obj_time;$/;"	m	class:EquipPack
family_obj_times	ScenesServer/zObject.h	/^    DWORD family_obj_times;$/;"	m	class:EquipPack
familyid	base/RoleregCommand.h	/^	  DWORD familyid;$/;"	m	union:Cmd::RoleReg::t_Charname_reg_withID::__anon51
familyid	roleRegServer/RoleregCommand.h	/^	  DWORD familyid;$/;"	m	union:Cmd::RoleReg::t_Charname_reg_withID::__anon203
farAttack	ScenesServer/SceneUser.h	/^    bool  farAttack; \/\/ ÁÆ≠ÁÅµÁÆ≠‰æ†‰∏ìÁî®$/;"	m	struct:SceneUser
farmID	tmpcode/commond.h	/^	DWORD farmID; $/;"	m	struct:stReturnFarmIntroduce
farmID	tmpcode/commond.h	/^	DWORD farmID;$/;"	m	struct:stReqEnterFarm
farmID	tmpcode/commond.h	/^	DWORD farmID;$/;"	m	struct:stRequestReplaceBoss
farmID	tmpcode/commond.h	/^	DWORD farmID;$/;"	m	struct:stRetCanSetfree
fashionsize	tmpcode/commond.h	/^		WORD fashionsize;$/;"	m	struct:stNotifyPatternUserCmd
father	base/zAStar.h	/^		zPathPoint *father;$/;"	m	struct:zAStar::zPathPoint
faxing	tmpcode/commond.h	/^        DWORD faxing;   \/\/∑¢–Õ$/;"	m	struct:CardMainData
fdsrAdd	base/zTCPClientTask.h	/^	bool fdsrAdd(bool set=true)$/;"	f	class:zTCPClientTask
fdsrAdd	base/zTCPTask.h	/^	bool fdsrAdd()$/;"	f	class:zTCPTask
fdsradd	base/zTCPClientTask.h	/^	bool fdsradd;                  \/**< ∂¡ ¬º˛ÃÌº”±Í÷æ *\/$/;"	m	class:zTCPClientTask
fdsradd	base/zTCPTask.h	/^	bool fdsradd;                  \/**< ∂¡ ¬º˛ÃÌº”±Í÷æ *\/$/;"	m	class:zTCPTask
featherFlag	tmpcode/commond.h	/^        BYTE  featherFlag;\/\/”ªØ$/;"	m	struct:CardMainData
fee_per	tmpcode/commond.h	/^        DWORD fee_per;                  \/\/øÕªß∂À»œø…µƒ ÷–¯±»¿˝,”Î∑˛ŒÒ∆˜µƒΩ¯––∂‘±»”√$/;"	m	struct:stFoundFashionSkillStore
fee_per	tmpcode/commond.h	/^        DWORD fee_per;                  \/\/øÕªß∂À»œø…µƒ ÷–¯±»¿˝,”Î∑˛ŒÒ∆˜µƒΩ¯––∂‘±»”√$/;"	m	struct:stFoundItemSkillStore
fee_per	tmpcode/commond.h	/^        DWORD fee_per;              \/\/∞⁄ÃØ’ﬂ…Ë÷√µƒ¥Ú‘Ï ’∑—±»$/;"	m	struct:stRetShowSkillStoreInfo
fee_per	tmpcode/commond.h	/^        DWORD fee_per;     \/\/∞⁄ÃØµƒ ’∑—∞Ÿ∑÷±»$/;"	m	struct:stBuildSkillStoreCmd
fee_per	tmpcode/commond.h	/^        DWORD fee_per;$/;"	m	struct:stConfirmFeeSkillStore
fee_per	tmpcode/commond.h	/^        DWORD fee_per;$/;"	m	struct:stReqChangeSkillStoreType
fee_per	tmpcode/commond.h	/^        DWORD fee_per;$/;"	m	struct:t_SkillStoreData
fee_per	tmpcode/commond.h	/^    DWORD fee_per;          \/\/øÕªß∂À»œø…µƒ ÷–¯±»¿˝,”Î∑˛ŒÒ∆˜µƒΩ¯––∂‘±»”√$/;"	m	struct:stFoundLeechdomSkillStore
feedObjId	tmpcode/commond.h	/^        DWORD feedObjId;$/;"	m	struct:stFeedDragonUserCmd
feedTimes	tmpcode/commond.h	/^	BYTE feedTimes; \/\/Œπ—¯¥Œ ˝$/;"	m	struct:LingQiPkData
feedTimesNow	tmpcode/commond.h	/^	BYTE feedTimesNow;\/\/“—æ≠Œπ—¯µƒ¥Œ ˝$/;"	m	struct:stConfirmFeedLingQiUserCmd
feeling	tmpcode/commond.h	/^        char    feeling[20];    \/\/–ƒ«È  $/;"	m	struct:stNameCard
fert	tmpcode/commond.h	/^	BYTE fert;			\/\/∑ Œ÷∂»$/;"	m	struct:stLandItem
fertilizer	tmpcode/commond.h	/^	DWORD fertilizer;	\/\/∑ ¡œŒ®“ªID$/;"	m	struct:stReqPlantUserCmd
fetch	ScenesServer/Chat.cpp	/^bool Gm::fetch(SceneUser *pUser,const char *para)$/;"	f	class:Gm
fetchCard	ScenesServer/Chat.cpp	/^bool Gm::fetchCard(SceneUser *pUser,const char *para)$/;"	f	class:Gm
fff	base/Command.h	/^  WORD fff;$/;"	m	struct:Cmd::t_UserData
fffffff1	base/Command.h	/^  WORD  fffffff1;              \/\/\/ Â§¥Ë±°$/;"	m	struct:Cmd::t_UserData
fffffff2	base/Command.h	/^  WORD  fffffff2;$/;"	m	struct:Cmd::t_UserData
fffffff3	base/Command.h	/^  BYTE fffffff3;$/;"	m	struct:Cmd::t_UserData
field	base/zMetaData.h	/^	FIELD field;$/;"	m	class:DBRecord
field1	tmpcode/commond.h	/^	DWORD field1;$/;"	m	struct:UnionNoticeInfo
field2	tmpcode/commond.h	/^	DWORD field2;$/;"	m	struct:UnionNoticeInfo
field3	tmpcode/commond.h	/^	DWORD field3;$/;"	m	struct:UnionNoticeInfo
fieldMapName	ScenesServer/Scene.h	/^    std::vector<stMapName> fieldMapName;$/;"	m	class:Scene
field_it	base/zMetaData.h	/^	typedef FIELD::iterator field_it;$/;"	t	class:DBRecord
fields	base/zMetaData.h	/^	DBFieldSet* fields;$/;"	m	class:DBRecord
fields	base/zMetaData.h	/^	std::vector<DBField*> fields;$/;"	m	class:DBFieldSet
fight	tmpcode/commond.h	/^	BYTE fight;$/;"	m	struct:stSetFightLingQiUserCmd
fightTime	tmpcode/commond.h	/^         DWORD   fightTime;              \/\/ ’Ω∂∑≤ø∑÷◊Ó≥§≥÷–¯ ±º‰$/;"	m	struct:stShowScoreSeptBattleUserCmd
fightType	base/HeroCardCmd.h	/^	BYTE fightType;	    \/\/∂‘’Ω¿‡–Õ$/;"	m	struct:Cmd::stReqHeroFightMatchUserCmd
fightType	base/HeroCardCmd.h	/^	BYTE fightType;	    \/\/∂‘’Ω¿‡–Õ$/;"	m	struct:Cmd::stRetHeroFightMatchUserCmd
fightmatch	ScenesServer/Chat.cpp	/^bool Gm::fightmatch(SceneUser *pUser,const char *para)$/;"	f	class:Gm
fightspeed	tmpcode/commond.h	/^	DWORD   fightspeed;  \/\/ π•ª˜ÀŸ∂» $/;"	m	struct:st_CharShow2
file	SessionServer/Session.h	/^    std::string file;$/;"	m	class:SceneSession
fileName	ScenesServer/Scene.h	/^    std::string fileName;$/;"	m	class:Scene
fileName	base/SessionCommand.h	/^		char fileName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_Sports_ReturnMapID
fileName	base/SessionCommand.h	/^      char fileName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_regScene_SceneSession
filename	GatewayServer/CountryInfo.h	/^		char filename[MAX_NAMESIZE];$/;"	m	struct:CountryInfo::MapDic
filename	ScenesServer/SceneManager.h	/^      char filename[MAX_NAMESIZE];$/;"	m	struct:SceneManager::MapInfo
fill	ScenesServer/zCard.cpp	/^void zCard::fill(t_Card& d)$/;"	f	class:zCard
fill	ScenesServer/zObject.cpp	/^void zObject::fill(t_Object& d)$/;"	f	class:zObject
fill	base/zDatabase.h	/^    void fill(NpcBase &data)$/;"	f	struct:zNpcB
fillNpcMap	ScenesServer/SceneDefine.h	/^  void fillNpcMap(const char * tempChar,std::map<DWORD,std::pair<DWORD,DWORD> > &map)$/;"	f	struct:t_NpcDefine
fillPollFD	base/zSocket.h	/^	inline void fillPollFD(struct pollfd &pfd,short events)$/;"	f	class:zSocket
final	BillServer/BillServer.cpp	/^void BillService::final()$/;"	f	class:BillService
final	FLServer/FLServer.cpp	/^void FLService::final()$/;"	f	class:FLService
final	GatewayServer/GateUser.cpp	/^void GateUser::final()$/;"	f	class:GateUser
final	GatewayServer/GateUserManager.cpp	/^void GateUserManager::final()$/;"	f	class:GateUserManager
final	GatewayServer/GatewayServer.cpp	/^void GatewayService::final()$/;"	f	class:GatewayService
final	RecordServer/RecordServer.cpp	/^void RecordService::final()$/;"	f	class:RecordService
final	Robot/ClientService.cpp	/^void ClientService::final()$/;"	f	class:ClientService
final	ScenesServer/NpcTrade.cpp	/^void NpcTrade::final()$/;"	f	class:NpcTrade
final	ScenesServer/Scene.cpp	/^void Scene::final()$/;"	f	class:Scene
final	ScenesServer/SceneManager.cpp	/^void SceneManager::final()$/;"	f	class:SceneManager
final	ScenesServer/ScenesServer.cpp	/^void ScenesService::final()$/;"	f	class:ScenesService
final	SessionServer/SessionManager.cpp	/^void SceneSessionManager::final()$/;"	f	class:SceneSessionManager
final	SessionServer/SessionManager.cpp	/^void UserSessionManager::final()$/;"	f	class:UserSessionManager
final	SessionServer/SessionServer.cpp	/^void SessionService::final()$/;"	f	class:SessionService
final	SuperServer/SuperServer.cpp	/^void SuperService::final()$/;"	f	class:SuperService
final	base/zTCPClientTask.h	/^	void final()$/;"	f	class:zTCPClientTask
final	base/zThread.h	/^	void final()$/;"	f	class:zThread
final	roleChangeServer/roleChangeServer.cpp	/^void roleChangeService::final()$/;"	f	class:roleChangeService
final	roleRegServer/roleRegServer.cpp	/^void roleRegService::final()$/;"	f	class:roleRegService
find	ScenesServer/QuestEvent.cpp	/^bool Event::find(DWORD questID)$/;"	f	class:Event
find	base/MsgDelegate.h	/^	MsgDelegate* find(const WORD byCmd, const WORD byPara)$/;"	f	class:MsgCenter
find	base/zEntryManager.h	/^	inline bool find(const char * &name,zEntry * &e,const bool r=false) const$/;"	f	class:zMultiEntryName
find	base/zEntryManager.h	/^	inline bool find(const keyT &key,valueT &value) const$/;"	f	class:LimitHash
findAttackTarget	ScenesServer/Skill.cpp	/^bool zSkill::findAttackTarget(const SkillStatus *pSkillStatus,zPos &pd,DWORD &count,SWORD rangDamageBonus)$/;"	f	class:zSkill
findEntryPosInNine	ScenesServer/Scene.cpp	/^bool Scene::findEntryPosInNine(const zPos &vpos,zPosI vposi,zPosVector &range)$/;"	f	class:Scene
findEntryPosInOne	ScenesServer/Scene.cpp	/^bool Scene::findEntryPosInOne(const zPos &vpos,zPosI vposi,zPosVector &range)$/;"	f	class:Scene
findOne	base/zEntryManager.h	/^	inline bool findOne(valueT &value) const$/;"	f	class:LimitHash
findPosForObject	ScenesServer/Scene.cpp	/^bool Scene::findPosForObject(const zPos &pos,zPos &findedPos)$/;"	f	class:Scene
findPosForUser	ScenesServer/Scene.cpp	/^bool Scene::findPosForUser(const zPos &pos,zPos &findedPos)$/;"	f	class:Scene
findPosInNine	ScenesServer/Scene.cpp	/^  findPosInNine(const zPos &pos,zPosVector &range) : _pos(pos),_range(range)$/;"	f	struct:findPosInNine
findPosInNine	ScenesServer/Scene.cpp	/^struct findPosInNine : public zSceneEntryCallBack$/;"	s
findSkill	ScenesServer/SkillManager.cpp	/^zSkill *UserSkillM::findSkill(DWORD skillid)$/;"	f	class:UserSkillM
findTreasureMap	tmpcode/commond.h	/^	BYTE findTreasureMap;   \/\/ ‘¡∂—°‘ÒµƒµÿÕº$/;"	m	struct:t_DragonData
findTreasureTimes	tmpcode/commond.h	/^    BYTE findTreasureTimes; \/\/“ªÃÏ—∞±¶œﬁ∂®¥Œ ˝$/;"	m	struct:t_DragonData
find_space	ScenesServer/zCard.cpp	/^bool CardSlot::find_space(WORD &x,WORD &y) const$/;"	f	class:CardSlot
find_space	ScenesServer/zObject.cpp	/^bool Package::find_space(WORD &x,WORD &y) const$/;"	f	class:Package
finish	tmpcode/commond.h	/^	BYTE finish;    \/\/\/  «∑ÒÕÍ≥…(0£∫Œ¥ÕÍ≥…£¨1£∫ÕÍ≥…)$/;"	m	struct:TitleQuest
finishNum	tmpcode/commond.h	/^		BYTE  finishNum;        \/\/ÕÍ≥…¥Œ ˝$/;"	m	struct:stRetDailyRandomQuestUserCmd::quests
finishNum	tmpcode/commond.h	/^        WORD finishNum;         \/\/ÕÍ≥…¥Œ ˝$/;"	m	struct:stRetDailyWarningQuestUserCmd::quests
finishNum	tmpcode/commond.h	/^    DWORD finishNum;$/;"	m	struct:stCityQuestEarnInfo
finishQuest	tmpcode/commond.h	/^	DWORD finishQuest;      \/\/\/ ÕÍ≥…»ŒŒÒ◊‹ ˝$/;"	m	struct:stRetCourseOfKingCmd
finishTime	tmpcode/commond.h	/^	DWORD finishTime;               \/\/µ√µΩ ±º‰$/;"	m	struct:DecayNewLingQi
fireInterval	tmpcode/commond.h	/^	WORD    fireInterval;           \/\/π•ª˜º‰∏Ù£¨πÃ∂®Œ™1360∫¡√Î$/;"	m	struct:TankData
firePower	tmpcode/commond.h	/^			WORD firePower;                 \/\/ ª…Ò÷Æ¡¶$/;"	m	struct:t_MainUserData::__anon220::__anon221
fireTempID	tmpcode/commond.h	/^	DWORD fireTempID;       \/\/¥ÛªtempID$/;"	m	struct:stReqDrinkBigfireUserCmd
firepower	tmpcode/commond.h	/^    DWORD firepower;\/\/ª¡¶$/;"	m	struct:kingAchievement
first	base/zRegex.h	/^	unsigned int first;$/;"	m	class:zRegex
first	tmpcode/commond.h	/^			BYTE first;       \/\/÷˜ Ù–‘$/;"	m	struct:LingQiData::__anon325::__anon326
first	tmpcode/commond.h	/^			BYTE first;   \/\/÷˜ Ù–‘$/;"	m	struct:LingQiSimulate::__anon366::__anon367
first	tmpcode/commond.h	/^            BYTE first;       \/\/÷˜ Ù–‘$/;"	m	struct:LingQiWatchData::__anon339::__anon340
firstPercent	tmpcode/commond.h	/^			BYTE firstPercent;	$/;"	m	struct:LingQiData::__anon323::__anon324
firstPercent	tmpcode/commond.h	/^			BYTE firstPercent;      $/;"	m	struct:LingQiMaxCoefData::__anon333::__anon334
firstPercent	tmpcode/commond.h	/^			BYTE firstPercent;      $/;"	m	struct:LingQiSimulate::__anon364::__anon365
firstPercent	tmpcode/commond.h	/^            BYTE firstPercent;      $/;"	m	struct:LingQiWatchData::__anon337::__anon338
firstQuestID	tmpcode/commond.h	/^	DWORD firstQuestID;  \/\/–Ë“™µƒµ⁄“ª∏ˆ»ŒŒÒid$/;"	m	struct:TitleInfo
first_time	ScenesServer/SceneNpc.h	/^  zRTime first_time;$/;"	m	class:SceneNpc
firstfive	BillServer/StockConsign.h	/^    Cmd::stFirstFiveListStockUserCmd *firstfive;$/;"	m	class:Consign
fishID	tmpcode/commond.h	/^	DWORD fishID;           \/\/\/ ”„µƒID$/;"	m	struct:stCationFishUserCmd
fishInfo	tmpcode/commond.h	/^	fishInfo()$/;"	f	struct:fishInfo
fishInfo	tmpcode/commond.h	/^struct fishInfo$/;"	s
fit	tmpcode/commond.h	/^        bool fit;                       \/\/ «∑ÒÃıº˛∆•≈‰$/;"	m	struct:stQueryAuction
five	base/RecordCommand.h	/^      WORD five;          \/\/\/ ‰∫îË°å‰∏ªÂ±ûÊÄß$/;"	m	struct:Cmd::Record::t_CreateChar_GateRecord
five	base/zDatabase.h	/^    DWORD  five;        \/\/ ŒÂ–– Ù–‘$/;"	m	struct:zNpcB
fivedam	ScenesServer/ScenePk.h	/^      WORD fivedam;$/;"	m	struct:PkPreValue::__anon157::__anon158
fivedef	ScenesServer/ScenePk.h	/^      WORD fivedef;$/;"	m	struct:PkPreValue::__anon157::__anon158
fiveexpress	ScenesServer/ScenePk.h	/^  float fiveexpress;$/;"	m	struct:PkPreValue
fivelevel	base/CharBase.h	/^  DWORD fivelevel;        \/\/\/ ‰∫îË°åÁÇπÊï∞$/;"	m	struct:CharBase
fivemaxdam	ScenesServer/ScenePk.h	/^      WORD fivemaxdam;$/;"	m	struct:PkPreValue::__anon157::__anon158
fivemaxmdam	ScenesServer/ScenePk.h	/^      WORD fivemaxmdam;$/;"	m	struct:PkPreValue::__anon157::__anon158
fivemdam	ScenesServer/ScenePk.h	/^      WORD fivemdam;$/;"	m	struct:PkPreValue::__anon157::__anon158
fivemdef	ScenesServer/ScenePk.h	/^      WORD fivemdef;$/;"	m	struct:PkPreValue::__anon157::__anon158
fivepoint	base/zDatabase.h	/^    DWORD   fivepoint;      \/\/ ŒÂ––µ„ ˝$/;"	m	struct:zNpcB
fivetype	base/CharBase.h	/^  DWORD fivetype;          \/\/\/ ‰∫îË°åÁ±ªÂûã$/;"	m	struct:CharBase
fixedRush	ScenesServer/Scene.h	/^    } fixedRush;$/;"	m	class:Scene	typeref:struct:Scene::FixedRush
flClientPool	SuperServer/BroadClientManager.h	/^    zTCPClientTaskPool *flClientPool;$/;"	m	class:BroadClientManager
flClientPool	SuperServer/FLClientManager.h	/^    zTCPClientTaskPool *flClientPool;$/;"	m	class:FLClientManager
flag	base/BroadCommand.h	/^      BYTE flag;$/;"	m	struct:Cmd::BroadServer::t_Startup_Response
flag	base/Command.h	/^    BYTE flag;$/;"	m	struct:Cmd::stUseObjectPropertyUserCmd
flag	base/Command.h	/^  BYTE flag; \/\/ 0‰∏∫Ê∂àÊÅØÂ§¥ 1‰∏∫ÂêéÁª≠Ê∂àÊÅØ$/;"	m	struct:Cmd::stListSeptCmd
flag	base/Command.h	/^  BYTE flag; \/\/ 0‰∏∫Ê∂àÊÅØÂ§¥ 1‰∏∫ÂêéÁª≠Ê∂àÊÅØ$/;"	m	struct:Cmd::stVoteListSeptCmd
flag	base/Command.h	/^  BYTE flag; \/\/ 0‰∏∫Ê∂àÊÅØÂ§¥1‰∏∫ÂêéÁª≠Ê∂àÊÅØ$/;"	m	struct:Cmd::stListUnionCmd
flag	base/Command.h	/^  BYTE flag; \/\/ 0‰∏∫Ê∂àÊÅØÂ§¥1‰∏∫ÂêéÁª≠Ê∂àÊÅØ$/;"	m	struct:Cmd::stVoteListUnionCmd
flag	base/Command.h	/^  DWORD flag;\/\/0 ÂÖ≥; 1 ÂºÄ$/;"	m	struct:Cmd::stStampCheckUserCmd
flag	base/Object.h	/^	WORD flag;  \/\/±Í÷æ◊÷∂Œ$/;"	m	struct:t_Object
flag	base/SessionCommand.h	/^      DWORD flag;$/;"	m	struct:Cmd::Session::t_SetService_SceneSession
flag	base/xmlparser/giftbag.h	/^        xml_prop<WORD>	flag;$/;"	m	struct:GiftBagConfig::Open
flag	base/xmlparser/market.h	/^        xml_prop<WORD>	flag;$/;"	m	struct:MarketConfig::Open
flag	tmpcode/commond.h	/^	BYTE flag;					   \/\/ 0,Œ™Ω· ¯œ˚œ¢,1Œ™”–∫Û–¯œ˚œ¢$/;"	m	struct:stAllUnionMemberCmd
flag	tmpcode/commond.h	/^	BYTE flag;                  \/\/ ±Í æ∑˚$/;"	m	struct:stUseObjectPropertyUserCmd
flag	tmpcode/commond.h	/^	BYTE flag; \/\/0Œ™Ω· ¯œ˚œ¢ 1Œ™∫Û–¯$/;"	m	struct:stShowAllUserCmd
flag	tmpcode/commond.h	/^	DWORD flag; \/\/0 ≤ªœ‘ æΩÁ√Ê, 1œ‘ æΩÁ√Ê$/;"	m	struct:stRefreshJieZhanStateList
flag	tmpcode/commond.h	/^	DWORD flag; \/\/ «∑Ò≥…π¶ 1≥…π¶ 0 ß∞‹$/;"	m	struct:stReqShenLongReward
flag	tmpcode/commond.h	/^	WORD flag;      \/\/ «∑Ò–Ë“™∑¢ÀÕπ˙º“Õ®÷™, 1: need, 2: not need$/;"	m	struct:stRequestCountryHelpUserCmd
flag	tmpcode/commond.h	/^         bool flag;      \/\/trueÕ¨“‚Ω¯»ÎµÿÕº£ªfalse∑≈∆˙≈≈∂”$/;"	m	struct:stRespondDaTaoShaUserCmd
flag	tmpcode/commond.h	/^        bool  flag;$/;"	m	struct:stReqStartCollect
flag	tmpcode/commond.h	/^        bool flag;$/;"	m	struct:stFinishQuestLifeSkillPropertyUserCmd
flag	tmpcode/commond.h	/^    BYTE flag;      \/\/0: ∏ˆ»À»ŒŒÒ£¨1£∫∂‡»À»ŒŒÒ$/;"	m	struct:stReqDailyWarningQuestUserCmd
flag	tmpcode/commond.h	/^    BYTE flag;      \/\/1ø…«∞∑≠“≥£ª2ø…∫Û∑≠“≥£ª$/;"	m	struct:stRoomInfoQuestRoomUserCmd
flag	tmpcode/commond.h	/^    BYTE flag; \/\/0∑¿ ÿ 1‘™Àÿ 2¬‰»’ 3∫Ï Ø$/;"	m	struct:stJieZhanAwardIconInfo
flag	tmpcode/commond.h	/^    BYTE flag; \/\/flag = 1,”–ΩÁ’Ω¡À,œ‘ æicon; flag=0 ΩÁ’ΩΩ· ¯¡À,“˛≤ÿicon$/;"	m	struct:stJieZhanIconInfo
flag	tmpcode/commond.h	/^    DWORD flag; \/\/ 1 ≥« ––≈œ¢, 2 ≥« –»ŒŒÒ∑¢≤º–≈œ¢$/;"	m	struct:stReqCityQuestList
flag	tmpcode/commond.h	/^    DWORD flag; \/\/ 1 ∆’Õ®∑¢≤º, 2 ÷ÿµ„∑¢≤º$/;"	m	struct:stReqPutCityQuest
flag	tmpcode/commond.h	/^    DWORD flag; \/\/ 1 ∆’Õ®∑¢≤º, 2 ÷ÿµ„∑¢≤º$/;"	m	struct:stReqSurePutCityQuest
flag	tmpcode/commond.h	/^    DWORD flag;$/;"	m	struct:stZhongLiCityHomeMenu
flagPloy	tmpcode/commond.h	/^		BYTE flagPloy;				\/\/0: ’˝≥£»ŒŒÒ∑«ªÓ∂Ø£¨1£∫ªÓ∂Ø¿‡»ŒŒÒ$/;"	m	struct:stRetDailyWarningQuestUserCmd::quests
flagRelegation	tmpcode/commond.h	/^        flagRelegation()$/;"	f	struct:stFlagRelegationLuoRiCmd::flagRelegation
flagRelegation	tmpcode/commond.h	/^    struct flagRelegation$/;"	s	struct:stFlagRelegationLuoRiCmd
flags	Robot/LoadMap.h	/^  BYTE  flags;  \/\/ Ê†ºÂ≠êÂ±ûÊÄß$/;"	m	struct:stSrvMapTile
flags	ScenesServer/LoadMap.h	/^  BYTE  flags;  \/\/ Ê†ºÂ≠êÂ±ûÊÄß$/;"	m	struct:stSrvMapTile
flags	base/zDatabase.h	/^    DWORD  flags;      \/\/∂˛Ω¯÷∆±Í÷æ£¨ƒø«∞”–“ª∏ˆ£¨ø…≤ªø…±ªÕ‚π˙»À…±$/;"	m	struct:zNpcB
flags	tmpcode/commond.h	/^	DWORD flags;\/\/π¶ƒ‹±Íº«$/;"	m	struct:LingQiData
flags	tmpcode/commond.h	/^    DWORD flags;\/\/π¶ƒ‹±Íº«$/;"	m	struct:LingQiWatchData
flash_type	tmpcode/commond.h	/^    BYTE flash_type;                \/\/¥Úø™±¶∫–≤•∑≈µƒÃÿ–ß$/;"	m	struct:ReturnOpenBoxPropertyUserCmd
flee	ScenesServer/SceneNpcAI.h	/^  bool flee;$/;"	m	struct:t_NpcAIDefine
fleeCount	ScenesServer/SceneNpcAI.h	/^  int fleeCount;$/;"	m	struct:t_NpcAIDefine
fleeDir	ScenesServer/SceneNpcAI.h	/^  int fleeDir;$/;"	m	struct:t_NpcAIDefine
floor	tmpcode/commond.h	/^	BYTE floor;             \/\/\/ ≤„ ˝$/;"	m	struct:fishInfo
flowerTempID	tmpcode/commond.h	/^    DWORD flowerTempID;\/\/ª®µ¿æﬂŒ®“ªID$/;"	m	struct:rt_InsertFlowerHouseUserCmd
flyskillid	tmpcode/commond.h	/^	BYTE flyskillid;$/;"	m	struct:stSendUseFlySkillMagicUserCmd
flyskillstate	tmpcode/commond.h	/^	BYTE  flyskillstate;    \/\/≥·∞Úººƒ‹∑…––◊¥Ã¨$/;"	m	struct:t_MainUserData
flyskillstate	tmpcode/commond.h	/^	BYTE  flyskillstate;    \/\/≥·∞Úººƒ‹∑…––◊¥Ã¨$/;"	m	struct:t_UserData
flyskillstate	tmpcode/commond.h	/^	BYTE flyskillstate;\/\/\/\/≥·∞Úººƒ‹∑…––◊¥Ã¨$/;"	m	struct:st_CharShow2
flyskillstate	tmpcode/commond.h	/^	BYTE flyskillstate;\/\/≥·∞Ú◊¥Ã¨£¨0±Ì æ«Â≥˝Œﬁ◊¥Ã¨$/;"	m	struct:stSendDataFlySkillMagicUserCmd
flyskilsssssss	base/Command.h	/^  BYTE flyskilsssssss;$/;"	m	struct:Cmd::t_MainUserData
focusY	tmpcode/commond.h	/^	WORD focusY;            \/\/—°∂®ŒÔ∆∑µƒY◊¯±Í$/;"	m	struct:NewBoxSendObj
focusY	tmpcode/commond.h	/^	WORD focusY; $/;"	m	struct:ResultData
fontSize	tmpcode/commond.h	/^		BYTE fontSize;			  \/\/◊÷ÃÂ¥Û–°$/;"	m	struct:stCallBoardDataUserCmd
forbid	ScenesServer/ChallengeGame.h	/^	DWORD forbid;	    \/\/±ªΩ˚Ô¿µƒƒß∑®$/;"	m	class:MagicPoint
forbid	base/HeroCardCmd.h	/^	DWORD forbid;$/;"	m	struct:Cmd::t_MagicPoint
forbidtalk	base/CharBase.h	/^  QWORD forbidtalk;          \/\/\/Á¶ÅË®Ä$/;"	m	struct:CharBase
forceChaseUser	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::forceChaseUser(SceneEntryPk *pAtt)$/;"	f	class:SceneNpc
forceSecMeterial	tmpcode/commond.h	/^	BYTE forceSecMeterial;          \/\/\/  «∑Ò«ø÷∆∏®÷˙≤ƒ¡œ(0£∫≤ª«ø÷∆£¨1£∫«ø÷∆)$/;"	m	struct:stEquipIntensifyInfo
foreignbackto	ScenesServer/SceneManager.h	/^      DWORD foreignbackto;$/;"	m	struct:SceneManager::MapInfo
foreignerBacktoMapID	ScenesServer/Scene.h	/^    DWORD foreignerBacktoMapID;$/;"	m	class:Scene
forwardBill	GatewayServer/GateUser.cpp	/^bool GateUser::forwardBill(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:GateUser
forwardBill	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::forwardBill(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:GatewayTask
forwardBillScene	GatewayServer/GateUser.cpp	/^bool GateUser::forwardBillScene(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:GateUser
forwardBillScene	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::forwardBillScene(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:GatewayTask
forwardMini	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::forwardMini(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:GatewayTask
forwardScene	GatewayServer/GateUser.cpp	/^bool GateUser::forwardScene(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:GateUser
forwardScene	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::forwardScene(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:GatewayTask
forwardScene	SessionServer/Session.cpp	/^bool UserSession::forwardScene(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:UserSession
forwardSceneBill	GatewayServer/GateUser.cpp	/^bool GateUser::forwardSceneBill(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:GateUser
forwardSceneBill	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::forwardSceneBill(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:GatewayTask
forwardSession	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::forwardSession(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:GatewayTask
forwardSession	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::forwardSession(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:SceneNpc
forwardSession	ScenesServer/SceneUser.cpp	/^bool SceneUser::forwardSession(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:SceneUser
foundSocket	ScenesServer/zObject.cpp	/^int zObject::foundSocket()$/;"	f	class:zObject
fourth	tmpcode/commond.h	/^			BYTE fourth;  \/\/¥Œ Ù–‘$/;"	m	struct:LingQiData::__anon325::__anon326
fourth	tmpcode/commond.h	/^			BYTE fourth;  \/\/¥Œ Ù–‘$/;"	m	struct:LingQiSimulate::__anon366::__anon367
fourth	tmpcode/commond.h	/^            BYTE fourth;  \/\/¥Œ Ù–‘$/;"	m	struct:LingQiWatchData::__anon339::__anon340
fourthPercent	tmpcode/commond.h	/^			BYTE fourthPercent;		$/;"	m	struct:LingQiData::__anon323::__anon324
fourthPercent	tmpcode/commond.h	/^			BYTE fourthPercent;        $/;"	m	struct:LingQiMaxCoefData::__anon333::__anon334
fourthPercent	tmpcode/commond.h	/^			BYTE fourthPercent;        $/;"	m	struct:LingQiSimulate::__anon364::__anon365
fourthPercent	tmpcode/commond.h	/^            BYTE fourthPercent;        $/;"	m	struct:LingQiWatchData::__anon337::__anon338
fpThisID	tmpcode/commond.h	/^	DWORD fpThisID;		\/\/±⁄¬ØŒ®“ªID£ª◊™∑¢øÕªß∂À$/;"	m	struct:timeOfFireplaceUserCmd
fpThisID	tmpcode/commond.h	/^	DWORD fpThisID;		\/\/±⁄¬ØŒ®“ªID£ª◊™∑¢øÕªß∂À$/;"	m	struct:tipInfoFireplaceUserCmd
fpThisID	tmpcode/commond.h	/^	DWORD fpThisID;	\/\/±⁄¬ØŒ®“ªID$/;"	m	struct:observeFireplaceUserCmd
free	ScenesServer/zCard.cpp	/^bool zCard::free() const$/;"	f	class:zCard
free	ScenesServer/zCard.cpp	/^void zCard::free(bool flag)$/;"	f	class:zCard
free	ScenesServer/zObject.cpp	/^bool zObject::free() const$/;"	f	class:zObject
free	ScenesServer/zObject.cpp	/^void zObject::free(bool flag)$/;"	f	class:zObject
free	base/zDebugNew.h	44;"	d
freeTimes	tmpcode/commond.h	/^    BYTE freeTimes;         \/\/“ªÃÏ∑≈…˙¥Œ ˝£¨◊¢“‚£∫∏√◊÷∂Œ…æ≥˝≥ËŒÔ ±≤ª…æ≥˝$/;"	m	struct:t_DragonData
freeze	base/Card.h	/^    BYTE freeze;	    \/\/∂≥Ω·$/;"	m	struct:t_CardPK
freezeRes	base/Command.h	/^  WORD freezeRes;    \/\/ÊäóÂÜ∞ÂÜª$/;"	m	struct:Cmd::t_HorseData
freeze_round	base/Card.h	/^    DWORD freeze_round;	    \/\/∂≥Ω·∑¢…˙µƒªÿ∫œ ˝$/;"	m	struct:t_CardPK
frenzy	ScenesServer/SceneEntryPk.h	/^    bool frenzy;       \/\/\/ ÁãÇÊö¥Áä∂ÊÄÅ$/;"	m	struct:SceneEntryPk
freshDurability	ScenesServer/zObject.cpp	/^void EquipPack::freshDurability(SceneUser *pThis,zObject *o)$/;"	f	class:EquipPack
freshEffectPosi	ScenesServer/zSceneEntryIndex.cpp	/^void zSceneEntryIndex::freshEffectPosi(const zPosI oldposi,const zPosI newposi)$/;"	f	class:zSceneEntryIndex
freshEverySceneField	ScenesServer/SceneManager.cpp	/^void SceneManager::freshEverySceneField()$/;"	f	class:SceneManager
freshFalg	tmpcode/commond.h	/^	BYTE freshFalg; \/\/◊Ó∏ﬂŒª- «∑Ò◊‘∂ØÀ¢–¬£ª◊ÓµÕŒª-÷∏∂®À¢–¬ŒÔ∆∑£¨µ⁄∂˛Œª-÷∏∂®À¢–¬¥Œ ˝		\/\/ ∞¥Œª¥Ê$/;"	m	struct:HappyCardBoxAutoCfg
freshGateScreenIndex	ScenesServer/Scene.cpp	/^void Scene::freshGateScreenIndex(SceneUser *pUser,const DWORD screen)$/;"	f	class:Scene
freshIndex	GatewayServer/SceneClient.h	/^	void freshIndex(GateUser *pUser,const DWORD map,const DWORD screen)$/;"	f	class:SceneClient
freshTimes	tmpcode/commond.h	/^	BYTE freshTimes;$/;"	m	struct:HappyCardBoxAutoCfg
freshUserData	ScenesServer/zObject.cpp	/^void EquipPack::freshUserData(SceneUser *pThis)$/;"	f	class:EquipPack
friendData	tmpcode/commond.h	/^		DecayHouseSession friendData;$/;"	m	struct:stRetFriendDecayHouseUserCmd::__anon379
friendDegree	base/SessionCommand.h	/^      int friendDegree;$/;"	m	struct:Cmd::Session::t_opAllyFrienddegree_SceneSession
friendID	ScenesServer/SceneUser.h	/^    DWORD friendID;   \/\/\/ÁªìÂ©öÊó∂Êú™Êù•ÈÖçÂÅ∂ÁöÑID$/;"	m	struct:SceneUser
friendID	tmpcode/commond.h	/^        DWORD friendID;$/;"	m	struct:stWatchFriendStoveUserCmd
friendName	tmpcode/commond.h	/^		char friendName[MAX_NAMESIZE + 1];   \/\/”–∑øŒ›µƒ∫√”—√˚◊÷$/;"	m	struct:stReturnFriendHomeUserCmd::__anon302
friendName	tmpcode/commond.h	/^		char friendName[MAX_NAMESIZE];$/;"	m	struct:stRetFriendDecayHouseUserCmd::__anon379
friendName	tmpcode/commond.h	/^                char friendName[MAX_NAMESIZE];$/;"	m	struct:stSendFriendListUserCmd::__anon345
friendName	tmpcode/commond.h	/^        char  friendName[5][MAX_NAMESIZE]; \/\/∞Ô÷˙»€¡∂µƒ∫√”—√˚µ•$/;"	m	struct:stStoveDataUserCmd
friendName	tmpcode/commond.h	/^        char  friendName[MAX_NAMESIZE]; \/\/∞Ô÷˙»€¡∂µƒ∫√”—√˚µ•$/;"	m	struct:stEndStoveDataUserCmd
friendName	tmpcode/commond.h	/^        char  friendName[MAX_NAMESIZE]; \/\/∞Ô÷˙»€¡∂µƒ∫√”—√˚µ•$/;"	m	struct:stUpdateStoveDataUserCmd
friendName	tmpcode/commond.h	/^        char friendName[MAX_NAMESIZE];    \/\/∫√”—µƒ√˚◊÷$/;"	m	struct:stFriendHelpUserCmd
friendNums	tmpcode/commond.h	/^	WORD friendNums;$/;"	m	struct:stRetFriendDecayHouseUserCmd
friend_chanllengeID	SessionServer/HeroCardManager.h	/^    zUniqueID<DWORD>	*friend_chanllengeID;		\/\/PVP ∫√”—∂‘’Ω$/;"	m	class:HeroCardManager
from	tmpcode/commond.h	/^    BYTE    from;$/;"	m	struct:stReqAccelkKeyPropertyUserCmd
fromCountryID	tmpcode/commond.h	/^	DWORD fromCountryID;                    \/\/’–ƒº»ÀΩÁ”ÚID$/;"	m	struct:stSendCountryInviteQuestRoomUserCmd
fromGameID	base/RolechangeCommand.h	/^	DWORD fromGameID;$/;"	m	struct:Cmd::Rolechange::t_checkZoneState
fromGameZone	base/RolechangeCommand.h	/^	GameZone_t fromGameZone;    $/;"	m	struct:Cmd::Rolechange::t_Check_Valid
fromGameZone	base/RolechangeCommand.h	/^	GameZone_t fromGameZone;    $/;"	m	struct:Cmd::Rolechange::t_Ret_Check_Valid
fromGameZone	base/RolechangeCommand.h	/^	GameZone_t fromGameZone;    $/;"	m	struct:Cmd::Rolechange::t_retSendUserToZone
fromGameZone	base/RolechangeCommand.h	/^	GameZone_t fromGameZone;    $/;"	m	struct:Cmd::Rolechange::t_sendUserToZone
fromGameZone	base/RolechangeCommand.h	/^	GameZone_t fromGameZone;$/;"	m	struct:Cmd::Rolechange::t_ForwardMsg_CommonCmd
fromID	base/RecordCommand.h	/^      DWORD fromID;\/\/‰∏¥Êó∂ID$/;"	m	struct:Cmd::Record::t_userExist_SceneRecord
fromID	base/SessionCommand.h	/^      DWORD fromID;$/;"	m	struct:Cmd::Session::mailInfo
fromName	base/Command.h	/^  char fromName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stAddListMail
fromName	base/SessionCommand.h	/^      char fromName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::mailInfo
fromName	tmpcode/commond.h	/^    char fromName[MAX_NAMESIZE];$/;"	m	struct:stAddListMail
fromRelationName	base/Command.h	/^    char fromRelationName[MAX_NAMESIZE]; \/\/ ÊåëÊàòËÄÖÂ∏Æ‰ºöÊàñÂ∏àÈó®ÊàñÂÆ∂ÊóèÂêçÁß∞$/;"	m	struct:Cmd::stActiveDareCmd
fromUserID	base/SessionCommand.h	/^      DWORD fromUserID; \/\/ ‰ªéÊüêÁé©ÂÆ∂$/;"	m	struct:Cmd::Session::t_ChangeGemState_SceneSession
from_id	base/RecordCommand.h	/^      DWORD  from_id;          \/\/\/ Ë¢´Êé®Ëçê‰∫∫ID$/;"	m	struct:Cmd::Record::t_chkUserExist_SessionRecord
from_name	base/SessionCommand.h	/^      char from_name[MAX_NAMESIZE+1];  \/\/ Áâ©ÂìÅÊã•ÊúâËÄÖÂßìÂêç$/;"	m	struct:Cmd::Session::t_questionObject_SceneSession
from_name	base/SessionCommand.h	/^      char from_name[MAX_NAMESIZE+1]; \/\/ Áâ©ÂìÅÊã•ÊúâËÄÖÂßìÂêç$/;"	m	struct:Cmd::Session::t_returnObject_SceneSession
frozen	ScenesServer/SceneEntryPk.h	/^	bool frozen;		\/\/\/ sky ÂÜ∞ÂÜª$/;"	m	struct:SceneEntryPk
full	ScenesServer/SceneUser.cpp	/^	ZlibObject *full;$/;"	m	class:SaveObjectExec
full	tmpcode/commond.h	/^	BYTE full;      \/\/1¬˙0Œ¥¬˙$/;"	m	struct:stRegInfoDTUserCmd
fullAllEquiped	ScenesServer/zObject.cpp	/^DWORD EquipPack::fullAllEquiped(char *buf)$/;"	f	class:EquipPack
fullHp	tmpcode/commond.h	/^	DWORD   fullHp;                 \/\/$/;"	m	struct:TankData
fullMobileObject	ScenesServer/zObject.cpp	/^bool zObject::fullMobileObject(t_Object_mobile &data)$/;"	f	class:zObject
full_PetDataStruct	ScenesServer/SceneNpc.cpp	/^void SceneNpc::full_PetDataStruct(Cmd::t_PetData & data)$/;"	f	class:SceneNpc
full_UState	base/zSceneEntry.h	/^	inline BYTE full_UState(WORD *state)$/;"	f	struct:zSceneEntry
full_all_UState	base/zSceneEntry.h	/^	inline void full_all_UState(void *state)$/;"	f	struct:zSceneEntry
full_ping_list	FLServer/GYListManager.cpp	/^void GYListManager::full_ping_list(Cmd::stPingList* cmd,const GameZone_t& gameZone)$/;"	f	class:GYListManager
full_stRTMagicPosUserCmd	ScenesServer/SceneNpc.cpp	/^void SceneNpc::full_stRTMagicPosUserCmd(Cmd::stRTMagicPosUserCmd &ret) const$/;"	f	class:SceneNpc
full_stRTMagicPosUserCmd	ScenesServer/SceneUser.h	/^    void full_stRTMagicPosUserCmd(Cmd::stRTMagicPosUserCmd &ret) const$/;"	f	struct:SceneUser
full_t_MainUserData	ScenesServer/SceneUser.cpp	/^void SceneUser::full_t_MainUserData(Cmd::t_MainUserData &data) const$/;"	f	class:SceneUser
full_t_MapNpcData	ScenesServer/SceneNpc.cpp	/^void SceneNpc::full_t_MapNpcData(Cmd::t_MapNpcData &data)$/;"	f	class:SceneNpc
full_t_MapNpcDataAndPos	ScenesServer/SceneNpc.cpp	/^void SceneNpc::full_t_MapNpcDataAndPos(Cmd::t_MapNpcDataPos &data)$/;"	f	class:SceneNpc
full_t_MapNpcDataAndPosState	ScenesServer/SceneNpc.cpp	/^void SceneNpc::full_t_MapNpcDataAndPosState(Cmd::t_MapNpcDataPosState &data)$/;"	f	class:SceneNpc
full_t_MapNpcDataState	ScenesServer/SceneNpc.cpp	/^void SceneNpc::full_t_MapNpcDataState(Cmd::t_MapNpcDataState &data)$/;"	f	class:SceneNpc
full_t_MapUserData	ScenesServer/SceneUser.cpp	/^void SceneUser::full_t_MapUserData(Cmd::t_MapUserData &data)$/;"	f	class:SceneUser
full_t_MapUserDataPos	ScenesServer/SceneUser.cpp	/^void SceneUser::full_t_MapUserDataPos(Cmd::t_MapUserDataPos &data)$/;"	f	class:SceneUser
full_t_MapUserDataPosState	ScenesServer/SceneUser.cpp	/^void SceneUser::full_t_MapUserDataPosState(Cmd::t_MapUserDataPosState &data)$/;"	f	class:SceneUser
full_t_MapUserDataState	ScenesServer/SceneUser.cpp	/^void SceneUser::full_t_MapUserDataState(Cmd::t_MapUserDataState &data)$/;"	f	class:SceneUser
full_t_NpcData	ScenesServer/SceneNpc.cpp	/^void SceneNpc::full_t_NpcData(Cmd::t_NpcData &data)$/;"	f	class:SceneNpc
full_t_UserData	ScenesServer/SceneUser.cpp	/^void SceneUser::full_t_UserData(Cmd::t_UserData &data)$/;"	f	class:SceneUser
funcName	ScenesServer/scriptTickTask.h	/^	const char* funcName;$/;"	m	struct:scriptTask
function	GatewayServer/CountryInfo.h	/^		DWORD function;$/;"	m	struct:CountryInfo::CountryDic
function	GatewayServer/CountryInfo.h	/^		DWORD function;$/;"	m	struct:CountryInfo::Info
function	ScenesServer/Scene.h	/^    DWORD function;$/;"	m	class:Scene
function	ScenesServer/SceneManager.h	/^      DWORD function;$/;"	m	struct:SceneManager::CountryInfo
function	ScenesServer/SceneManager.h	/^      DWORD function;$/;"	m	struct:SceneManager::MapInfo
function	SessionServer/CountryInfo.h	/^		DWORD function;$/;"	m	struct:CountryInfo::CountryDic
function	base/zDatabase.h	/^	char  function[1024];  \/\/ –ßπ˚$/;"	m	struct:SkillBase
fund	tmpcode/commond.h	/^	FundUnionHistory fund[0];               \/\/\/ ◊ ÷˙¿˙ ∑ ˝æ›$/;"	m	struct:stRetCityFundUnionHistoryCmd
furnitureList	tmpcode/commond.h	/^	FurnitureMapData	furnitureList[0];$/;"	m	struct:stMapDataHomeUserCmd
furnitureNum	tmpcode/commond.h	/^	BYTE				furnitureNum;$/;"	m	struct:stMapDataHomeUserCmd
gIndex	tmpcode/commond.h	/^    BYTE  gIndex;   \/\/ΩªªªŒÔ∆∑ ±£¨¬Ì≥µªıŒÔÀ˜“˝:¥”0À„∆$/;"	m	struct:stResultCheckGoodsCmd
gIndex	tmpcode/commond.h	/^    BYTE  gIndex;   \/\/Ô⁄≥µ…œŒÔ∆∑À˜“˝$/;"	m	struct:stRequestNpcGoodsCmd
g_LoginTaskDebugValue	FLServer/LoginTask.cpp	/^DWORD g_LoginTaskDebugValue = 0;$/;"	v
g_MoveSceneMemberMapLock	SessionServer/SessionServer.cpp	/^zMutex g_MoveSceneMemberMapLock;$/;"	v
ga	tmpcode/commond.h	/^    BYTE ga;$/;"	m	struct:stWorldCupAct
game	SuperServer/RoleregCache.cpp	/^	WORD game; \/\/”Œœ∑±‡∫≈$/;"	m	struct:RoleData
game	base/Command.h	/^  WORD game;              \/**< Ê∏∏ÊàèÁ±ªÂûãÁºñÂè∑ÔºåÁõÆÂâç‰∏ÄÂæãÊ∑ª0 *\/$/;"	m	struct:Cmd::stUserRefrainLoginCmd
game	base/Command.h	/^  WORD game;              \/**< Ê∏∏ÊàèÁ±ªÂûãÁºñÂè∑ÔºåÁõÆÂâç‰∏ÄÂæãÊ∑ª0 *\/$/;"	m	struct:Cmd::stUserRequestLoginCmd
game	base/zType.h	/^      WORD game;$/;"	m	struct:GameZone_t::__anon8::__anon9
game	roleRegServer/RoleTask.h	/^    unsigned short game;$/;"	m	struct:RoleData
game	tmpcode/commond.h	/^	WORD game;							\/**< ”Œœ∑¿‡–Õ±‡∫≈£¨ƒø«∞“ª¬…ÃÌ0 *\/$/;"	m	struct:stUserRequestLoginCmd
game	tmpcode/commond.h	/^	WORD game;                          \/**< ”Œœ∑¿‡–Õ±‡∫≈£¨ƒø«∞“ª¬…ÃÌ0 *\/$/;"	m	struct:stUserRequestMtcardCmd
gameCount	ScenesServer/ChallengeGameManager.h	/^    DWORD gameCount;$/;"	m	class:ChallengeGameManager
gameCount	base/SessionCommand.h	/^	  DWORD gameCount;$/;"	m	struct:Cmd::Session::t_NotifySceneServerGameCount_SceneSession
gameID	ScenesServer/ChallengeGame.h	/^	DWORD gameID;$/;"	m	class:ChallengeGame
gameID	ScenesServer/zCard.h	/^    DWORD gameID;$/;"	m	struct:zCard
gameID	base/SessionCommand.h	/^	  DWORD gameID;$/;"	m	struct:Cmd::Session::t_PutOneGameIDBack_SceneSession
gameID	tmpcode/commond.h	/^	DWORD gameID;$/;"	m	struct:stChallengeGameUserCmd
gameMap	ScenesServer/ChallengeGameManager.h	/^    GAMEMAP gameMap;$/;"	m	class:ChallengeGameManager
gamePoint	tmpcode/commond.h	/^		WORD    gamePoint;            \/\/ΩÒÃÏµ√µΩµƒæ∫ººµ„ ˝$/;"	m	struct:stReturnScoreListWeekendZhenxuanUserCmd::PlayerScore
gameState	tmpcode/commond.h	/^	DWORD gameState;$/;"	m	struct:stNotifyChallengeStateDragonUserCmd
gameTime	tmpcode/commond.h	/^	WORD gameTime;$/;"	m	struct:stInfoChallengeUserCmd
gameType	ScenesServer/ChallengeGame.h	/^	Cmd::Session::ChallengeGameType gameType;$/;"	m	class:ChallengeGame
gameType	ScenesServer/ChallengeGameManager.h	/^	BYTE gameType;		\/\/∂‘’Ω¿‡–Õ$/;"	m	class:ChallengeTmpData
gameType2Name	ScenesServer/ChallengeGame.cpp	/^char* ChallengeGame::gameType2Name(DWORD gameType)$/;"	f	class:ChallengeGame
gameZone	BillServer/BillClient.h	/^    GameZone_t gameZone;$/;"	m	class:BillClient
gameZone	FLServer/ServerTask.h	/^	GameZone_t gameZone;$/;"	m	class:ServerTask
gameZone	FLServer/UserTask.h	/^	GameZone_t gameZone;$/;"	m	class:UserTask
gameZone	SuperServer/SuperServer.h	/^    GameZone_t gameZone;$/;"	m	class:SuperService
gameZone	base/BroadCastCommand.h	/^      GameZone_t gameZone;$/;"	m	struct:Cmd::BroadCast::t_LoginCmd_OK
gameZone	base/FLCommand.h	/^      GameZone_t gameZone;$/;"	m	struct:Cmd::FL::t_LoginFL_OK
gameZone	base/RolechangeCommand.h	/^	GameZone_t gameZone;$/;"	m	struct:Cmd::Rolechange::t_confirmReceive
gameZone	base/RolechangeCommand.h	/^	GameZone_t gameZone;$/;"	m	struct:Cmd::Rolechange::t_sendChangeSort
gameZone	base/RolechangeCommand.h	/^      GameZone_t gameZone;$/;"	m	struct:Cmd::Rolechange::t_LoginCmd_OK
gameZone	base/RoleregCommand.h	/^      GameZone_t gameZone;$/;"	m	struct:Cmd::RoleReg::t_Charname_reg_withID
gameZone	base/RoleregCommand.h	/^      GameZone_t gameZone;$/;"	m	struct:Cmd::RoleReg::t_LoginRoleReg_OK
gameZone	base/ServerACL.h	/^	GameZone_t gameZone;$/;"	m	struct:ACLZone
gameZone	base/UserCommand.h	/^      GameZone_t   gameZone;      \/\/Ê∏∏ÊàèÂå∫$/;"	m	struct:Cmd::UserServer::t_logon_OK
gameZone	base/zType.h	/^  GameZone_t gameZone;$/;"	m	struct:t_NewLoginSession
gameZone	roleChangeServer/ChangeTask.h	/^	GameZone_t gameZone;$/;"	m	class:ChangeTask
gameZone	roleRegServer/RoleTask.h	/^	GameZone_t gameZone;$/;"	m	class:RoleTask
gameZone	roleRegServer/RoleregCommand.h	/^      GameZone_t gameZone;$/;"	m	struct:Cmd::RoleReg::t_Charname_reg_withID
gameZone	roleRegServer/RoleregCommand.h	/^      GameZone_t gameZone;$/;"	m	struct:Cmd::RoleReg::t_LoginRoleReg_OK
gameZone_str	BillServer/BillClient.h	/^    char gameZone_str[6];$/;"	m	class:BillClient
gametime_define	SuperServer/TimeTick.cpp	/^static const dbCol gametime_define[] =$/;"	v
garden	tmpcode/commond.h	/^	BYTE garden;    \/\/ª®‘∞ID = 110£¨»Áπ˚Œ™0£¨‘Ú≤ª¥Ê‘⁄$/;"	m	struct:rt_memberListHouseUserCmd
gardenLevel	tmpcode/commond.h	/^	BYTE gardenLevel;               \/\/ª®‘∞µ»º∂$/;"	m	struct:st_RetManageHouseUserCmd
gardenMoney	tmpcode/commond.h	/^	DWORD gardenMoney;$/;"	m	struct:st_RetRentHouseUserCmd
gateServerID	base/MiniCommand.h	/^      WORD gateServerID;$/;"	m	struct:Cmd::Mini::t_UserLogin_Gateway
gatetask	ScenesServer/SceneUser.h	/^    SceneTask *gatetask;$/;"	m	struct:SceneUser
gatewayTaskList	SessionServer/SessionTaskManager.h	/^    TaskContainer gatewayTaskList;$/;"	m	class:SessionTaskManager
gatewayTaskSet	GatewayServer/GatewayTaskManager.h	/^	GatewayTaskHashmap gatewayTaskSet;$/;"	m	class:GatewayTaskManager
gateway_ip	base/Command.h	/^  BYTE gateway_ip[15+1];$/;"	m	struct:Cmd::ping_element
gatewaytask	BillServer/BillUser.h	/^    BillTask *gatewaytask;$/;"	m	class:BillUser
gatewaytask	GatewayServer/GateUser.h	/^	GatewayTask *gatewaytask;$/;"	m	class:GateUser
gather	tmpcode/commond.h	/^    struct gather{$/;"	s	struct:stStartEmployGatherCmd
gatherType	tmpcode/commond.h	/^    WORD  gatherType; \/\/≤…ºØ¿‡–Õ,6001~6003$/;"	m	struct:stStartEmployGatherCmd
gb	tmpcode/commond.h	/^    BYTE gb;$/;"	m	struct:stWorldCupAct
gc	tmpcode/commond.h	/^    BYTE gc;$/;"	m	struct:stWorldCupAct
gci	ScenesServer/CardManager.cpp	/^GlobalCardIndex *const gci=GlobalCardIndex::getInstance();$/;"	v
gcm	ScenesServer/zCard.h	/^    GameCardM gcm;	\/\/“ª∏ˆ’Ωæ÷÷–µƒÀ˘”–ø®π‹¿Ì$/;"	m	class:CardSlots
gd	tmpcode/commond.h	/^    BYTE gd;$/;"	m	struct:stWorldCupAct
gemColor	tmpcode/commond.h	/^    BYTE gemColor;   \/\/1±˘ 2ª 3¿◊ 4µÁ 5∑Á$/;"	m	struct:stChangeElecColorUserCmd
gemLevel	tmpcode/commond.h	/^        BYTE gemLevel;   \/\/÷±Ω”∫œ≥…±¶ Øµƒµ»º∂$/;"	m	struct:stComposeElecGemUserCmd
gem_id	base/Command.h	/^      DWORD gem_id; \/\/ÊùêÊñôid,Á±ªÂà´id$/;"	m	struct:Cmd::stFoundItemPropertyUserCmd::material
gem_id	base/Command.h	/^  DWORD gem_id;  \/\/‰øÆÂ§çÂÆùÁü≥ÁöÑÂîØ‰∏ÄidÔºåÊôÆÈÄö‰øÆÁêÜÂ°´0$/;"	m	struct:Cmd::stRepairObjectNpcTradeUserCmd
gem_id	base/Command.h	/^  DWORD gem_id; \/\/Â§©È≠îÁü≥idÔºåÁâ©ÂìÅÁ±ªÂà´id$/;"	m	struct:Cmd::stHolePropertyUserCmd
gem_id	tmpcode/commond.h	/^		DWORD   gem_id;         \/\/≤ƒ¡œ‘⁄µ¿æﬂ±Ì÷–µƒid$/;"	m	struct:stFoundSpecialItemPropertyUserCmd::material
gem_id	tmpcode/commond.h	/^		DWORD gem_id;		\/\/≤ƒ¡œid, ¿‡±id$/;"	m	struct:stHouseFurnitureItemPropertyUserCmd::material
gem_id	tmpcode/commond.h	/^		DWORD gem_id; \/\/≤ƒ¡œid, ¿‡±id$/;"	m	struct:stFoundItemPropertyUserCmd::material
gem_id	tmpcode/commond.h	/^		DWORD gem_id; \/\/≤ƒ¡œid, ¿‡±id$/;"	m	struct:stHouseRoomDeskItemPropertyUserCmd::material
gem_id	tmpcode/commond.h	/^                DWORD gem_id; \/\/≤ƒ¡œid, ¿‡±id$/;"	m	struct:stFoundItemSkillStore::material
gem_id	tmpcode/commond.h	/^        DWORD gem_id; \/\/≤ƒ¡œid, ¿‡±id$/;"	m	struct:stHorseSoulItemPropertyUserCmd::material
gem_id	tmpcode/commond.h	/^    DWORD gem_id;  \/\/±¶ Øµƒid,ŒÔ∆∑Œ®“ªid$/;"	m	struct:stPurplePropertyUserCmd
gem_id	tmpcode/commond.h	/^    DWORD gem_id;  \/\/±¶ Øµƒid,ŒÔ∆∑Œ®“ªid$/;"	m	struct:stPurpleRemovePropertyUserCmd
gem_id	tmpcode/commond.h	/^    DWORD gem_id;  \/\/–ﬁ∏¥±¶ ØµƒŒ®“ªid£¨∆’Õ®–ﬁ¿ÌÃÓ0$/;"	m	struct:stRepairObjectNpcTradeUserCmd
gem_level	base/Command.h	/^      BYTE gem_level; \/\/ÊùêÊñôÁ≠âÁ∫ß$/;"	m	struct:Cmd::stFoundItemPropertyUserCmd::material
gem_level	base/Command.h	/^  BYTE gem_level; \/\/Â§©È≠îÁü≥Á≠âÁ∫ß$/;"	m	struct:Cmd::stHolePropertyUserCmd
gem_level	tmpcode/commond.h	/^		BYTE    gem_level;      \/\/≤ƒ¡œµ»º∂$/;"	m	struct:stFoundSpecialItemPropertyUserCmd::material
gem_level	tmpcode/commond.h	/^		BYTE gem_level;		\/\/≤ƒ¡œµ»º∂$/;"	m	struct:stHouseFurnitureItemPropertyUserCmd::material
gem_level	tmpcode/commond.h	/^		BYTE gem_level; \/\/≤ƒ¡œµ»º∂$/;"	m	struct:stFoundItemPropertyUserCmd::material
gem_level	tmpcode/commond.h	/^		BYTE gem_level; \/\/≤ƒ¡œµ»º∂$/;"	m	struct:stHouseRoomDeskItemPropertyUserCmd::material
gem_level	tmpcode/commond.h	/^                BYTE gem_level; \/\/≤ƒ¡œµ»º∂$/;"	m	struct:stFoundItemSkillStore::material
gem_level	tmpcode/commond.h	/^        BYTE gem_level; \/\/≤ƒ¡œµ»º∂$/;"	m	struct:stHorseSoulItemPropertyUserCmd::material
gem_num	base/Command.h	/^      BYTE gem_num; \/\/ÊùêÊñôÊï∞Èáè$/;"	m	struct:Cmd::stFoundItemPropertyUserCmd::material
gem_num	base/Command.h	/^  BYTE gem_num; \/\/Â§©È≠îÁü≥Êï∞Èáè$/;"	m	struct:Cmd::stHolePropertyUserCmd
gem_num	tmpcode/commond.h	/^		DWORD    gem_num;        \/\/≤ƒ¡œ ˝¡ø$/;"	m	struct:stFoundSpecialItemPropertyUserCmd::material
gem_num	tmpcode/commond.h	/^		DWORD gem_num;		\/\/≤ƒ¡œ ˝¡ø$/;"	m	struct:stHouseFurnitureItemPropertyUserCmd::material
gem_num	tmpcode/commond.h	/^		DWORD gem_num; \/\/≤ƒ¡œ ˝¡ø$/;"	m	struct:stFoundItemPropertyUserCmd::material
gem_num	tmpcode/commond.h	/^		DWORD gem_num; \/\/≤ƒ¡œ ˝¡ø$/;"	m	struct:stHouseRoomDeskItemPropertyUserCmd::material
gem_num	tmpcode/commond.h	/^                DWORD gem_num; \/\/≤ƒ¡œ ˝¡ø$/;"	m	struct:stFoundItemSkillStore::material
gem_num	tmpcode/commond.h	/^        DWORD gem_num; \/\/≤ƒ¡œ ˝¡ø$/;"	m	struct:stHorseSoulItemPropertyUserCmd::material
genName	base/Command.h	/^  char genName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stCreateArmyUserCmd
genTempID	FLServer/LoginTask.h	/^	void genTempID()$/;"	f	class:LoginTask
gender	base/Command.h	/^  WORD gender;$/;"	m	struct:Cmd::stCreateSelectUserCmd
gender	tmpcode/commond.h	/^        WORD  gender;     \/\/ –‘±$/;"	m	struct:stCreateSelectUserCmd
generate	base/xml/xml_parser_generator.h	/^	virtual void generate(std::ostream& os, int deep = 0)$/;"	f	class:xml_prop_parser_generator
generate	base/xml/xml_parser_generator.h	/^	virtual void generate(std::ostream& os, int deep = 0, int layout = 0)$/;"	f	class:xml_node_parser_generator
generateID	ScenesServer/scriptTickTask.h	/^	QWORD generateID()$/;"	f	class:scriptTaskManagement
generateThisID	ScenesServer/zCard.cpp	/^void zCard::generateThisID()$/;"	f	class:zCard
generateThisID	ScenesServer/zObject.cpp	/^void zObject::generateThisID()$/;"	f	class:zObject
generateUpperHand	ScenesServer/ChallengeGame.cpp	/^DWORD ChallengeGame::generateUpperHand()$/;"	f	class:ChallengeGame
generate_node_dec	base/xml/xml_parser_generator.h	/^	virtual void generate_node_dec(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
generate_node_dec	base/xml/xml_parser_generator.h	/^	virtual void generate_node_dec(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_seq_parser_generator
generate_node_dec	base/xml/xml_parser_generator.h	/^	virtual void generate_node_dec(std::ostream& os, int deep =0)$/;"	f	class:xml_node_map_parser_generator
generate_node_dec	base/xml/xml_parser_generator.h	/^	virtual void generate_node_dec(std::ostream& os, int deep =0)$/;"	f	class:xml_node_set_parser_generator
generate_node_parser	base/xml/xml_parser_generator.h	/^	virtual void generate_node_parser(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
generate_node_parser	base/xml/xml_parser_generator.h	/^	virtual void generate_node_parser(std::ostream& os, int deep =0)$/;"	f	class:xml_node_map_parser_generator
generate_node_typedef	base/xml/xml_parser_generator.h	/^	virtual void generate_node_typedef(std::ostream& os, int deep = 0) {	}$/;"	f	class:xml_node_parser_generator
generate_node_typedef	base/xml/xml_parser_generator.h	/^	virtual void generate_node_typedef(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_seq_parser_generator
generate_node_typedef	base/xml/xml_parser_generator.h	/^	virtual void generate_node_typedef(std::ostream& os, int deep =0)$/;"	f	class:xml_node_map_parser_generator
generate_node_typedef	base/xml/xml_parser_generator.h	/^	virtual void generate_node_typedef(std::ostream& os, int deep =0)$/;"	f	class:xml_node_set_parser_generator
generate_parser	base/xml/xml_parser_generator.h	/^	virtual void generate_parser(std::ostream& os, int deep = 0)$/;"	f	class:xml_prop_parser_generator
generate_parser	base/xml/xml_parser_generator.h	/^	void generate_parser(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
generate_parser_2	base/xml/xml_parser_generator.h	/^	void generate_parser_2(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
generate_parser_2_dump_properties	base/xml/xml_parser_generator.h	/^	virtual void generate_parser_2_dump_properties(std::ostream& os, int deep         = 0)$/;"	f	class:xml_node_parser_generator
generate_parser_2_dump_subnodes	base/xml/xml_parser_generator.h	/^	virtual void generate_parser_2_dump_subnodes(std::ostream& os, int deep             = 0)$/;"	f	class:xml_node_parser_generator
generate_parser_2_init_name	base/xml/xml_parser_generator.h	/^	virtual void generate_parser_2_init_name(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
generate_parser_2_init_name	base/xml/xml_parser_generator.h	/^	virtual void generate_parser_2_init_name(std::ostream& os, int deep =0)$/;"	f	class:xml_node_map_parser_generator
generate_parser_2_init_name_properties	base/xml/xml_parser_generator.h	/^	virtual void generate_parser_2_init_name_properties(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
generate_parser_2_init_name_subnodes	base/xml/xml_parser_generator.h	/^	virtual void generate_parser_2_init_name_subnodes(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
generate_parser_2_init_value_properties	base/xml/xml_parser_generator.h	/^	virtual void generate_parser_2_init_value_properties(std::ostream& os, int deep     = 0)$/;"	f	class:xml_node_parser_generator
generate_parser_2_parser_properties	base/xml/xml_parser_generator.h	/^	virtual void generate_parser_2_parser_properties(std::ostream& os, int deep     = 0)$/;"	f	class:xml_node_parser_generator
generate_parser_2_parser_subnodes	base/xml/xml_parser_generator.h	/^	virtual void generate_parser_2_parser_subnodes(std::ostream& os, int deep         = 0)$/;"	f	class:xml_node_parser_generator
generate_prop_parser	base/xml/xml_parser_generator.h	/^	virtual void generate_prop_parser(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
generate_properties	base/xml/xml_parser_generator.h	/^	void generate_properties(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
generate_subnodes_dec	base/xml/xml_parser_generator.h	/^	void generate_subnodes_dec(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
generate_subnodes_define	base/xml/xml_parser_generator.h	/^	virtual void generate_subnodes_define(std::ostream& os, int deep = 0, int layout =0)$/;"	f	class:xml_node_parser_generator
generate_subnodes_define	base/xml/xml_parser_generator.h	/^	virtual void generate_subnodes_define(std::ostream& os, int deep =0, int layout=0)$/;"	f	class:xml_node_set_parser_generator
generate_subnodes_parser	base/xml/xml_parser_generator.h	/^	virtual void generate_subnodes_parser(std::ostream& os, int deep = 0)$/;"	f	class:xml_node_parser_generator
generator_root_nodename	tools/xmlpg.cpp	/^    char* generator_root_nodename;$/;"	m	struct:Args
genname	base/Command.h	/^  char  genname[MAX_NAMESIZE]; \/\/ Â∞ÜÂÜõÂßìÂêç$/;"	m	struct:Cmd::stArmyBaseInfo
genname	base/Command.h	/^  char genname[MAX_NAMESIZE]; \/\/ Â∞ÜÂÜõÂêç$/;"	m	struct:Cmd::stRtnArmySpecUserCmd
get	BillServer/BillCache.cpp	/^BillData *BillCache::get(const char *tid)$/;"	f	class:BillCache
get	BillServer/BillSessionManager.cpp	/^BillSession BillSessionManager::get(const std::string& tid)$/;"	f	class:BillSessionManager
get	ScenesServer/Chat.cpp	/^Channel *ChannelM::get(DWORD dwChannelID)$/;"	f	class:ChannelM
get	SessionServer/SessionChat.cpp	/^SessionChannel * SessionChannelManager::get(DWORD id)$/;"	f	class:SessionChannelManager
get	base/zDatabaseManager.h	/^	data *get(DWORD dataid)$/;"	f	class:zDataBM
get	base/zDatabaseManager.h	/^	data *get(const char *name)$/;"	f	class:zDataBM
get	base/zMisc.h	/^	CmdPair *get()$/;"	f	class:MsgQueue
get	base/zUniqueID.h	/^	T get()$/;"	f	class:zUniqueID
get	base/zUniqueID.h	/^	T get(int size,int & count)$/;"	f	class:zUniqueID
getACCID	GatewayServer/GatewayTask.h	/^	DWORD getACCID() const$/;"	f	class:GatewayTask
getAType	ScenesServer/SceneNpc.cpp	/^BYTE SceneNpc::getAType()$/;"	f	class:SceneNpc
getATypeAndAction	base/zDatabase.h	/^    void getATypeAndAction(BYTE &type,BYTE &action)$/;"	f	struct:zNpcB
getAccount	GatewayServer/GateUser.cpp	/^const char* GateUser::getAccount()$/;"	f	class:GateUser
getAchiveCount	base/RecordCommand.h	/^      WORD getAchiveCount;$/;"	m	struct:Cmd::Record::t_UserInfo_SceneRecord
getAchiveCount	base/SceneCommand.h	/^      WORD getAchiveCount;$/;"	m	struct:Cmd::Scene::t_Unreg_LoginScene
getAchiveCount	base/SessionCommand.h	/^      WORD getAchiveCount;$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
getActRegion	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::getActRegion(zPos &pos,int &x,int &y)$/;"	f	class:NpcAIController
getAddr	base/zSocket.h	/^	inline const DWORD getAddr() const { return addr.sin_addr.s_addr; }$/;"	f	class:zSocket
getAddr	base/zTCPTask.h	/^	const DWORD getAddr() const$/;"	f	class:zTCPTask
getAll	GatewayServer/CountryInfo.cpp	/^int CountryInfo::getAll(char *buf)$/;"	f	class:CountryInfo
getAllSkills	base/zDatabase.h	/^    bool getAllSkills(std::vector<DWORD> & list,WORD level)$/;"	f	struct:zNpcB
getAttFive	ScenesServer/zObject.h	/^  DWORD getAttFive() const {return aftype;}$/;"	f	class:Equips
getAttFivePoint	ScenesServer/zObject.h	/^  DWORD getAttFivePoint() const {return afpoint;}$/;"	f	class:Equips
getAttackTimes	ScenesServer/CardPk.cpp	/^BYTE zCard::getAttackTimes()$/;"	f	class:zCard
getAvl	FLServer/GYListManager.cpp	/^GYList *GYListManager::getAvl(const GameZone_t &gameZone)$/;"	f	class:GYListManager
getBaseMaxHP	ScenesServer/SceneEntryPk.h	/^    virtual DWORD getBaseMaxHP(){return 0;}$/;"	f	struct:SceneEntryPk
getBaseMaxHP	ScenesServer/SceneNpc.cpp	/^DWORD SceneNpc::getBaseMaxHP()$/;"	f	class:SceneNpc
getBaseMaxHP	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getBaseMaxHP()$/;"	f	class:SceneUser
getBaseMaxMP	ScenesServer/SceneEntryPk.h	/^    virtual DWORD getBaseMaxMP(){return 0;}$/;"	f	struct:SceneEntryPk
getBaseMaxMP	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getBaseMaxMP()$/;"	f	class:SceneUser
getBin	base/zMetaData.h	/^	const char* getBin() const$/;"	f	class:DBVarType
getBinSize	base/zMetaData.h	/^	DWORD getBinSize()$/;"	f	class:DBVarType
getBufferSize	base/zSocket.h	/^	inline DWORD getBufferSize() const {return _rcv_queue.maxSize() + _snd_queue.maxSize();}$/;"	f	class:zSocket
getCardSlot	ScenesServer/zCard.cpp	/^CardSlot * CardSlots::getCardSlot(DWORD type,DWORD id)$/;"	f	class:CardSlots
getCardSlot	ScenesServer/zCard.cpp	/^CardSlot** CardSlots::getCardSlot(int packs)$/;"	f	class:CardSlots
getChallengeLastTime	ScenesServer/ChallengeGame.h	/^	DWORD getChallengeLastTime()$/;"	f	class:ChallengeGame
getCharNo	GatewayServer/GateUser.h	/^	DWORD getCharNo(DWORD charid)	    \/\/µ√µΩ–Ú∫≈$/;"	f	class:GateSelectUserSession
getCharType	ScenesServer/SceneSkill.cpp	/^int getCharType(DWORD type)$/;"	f
getCharTypeByFace	base/Command.h	/^inline int getCharTypeByFace(int face)$/;"	f	namespace:Cmd
getChaseMode	ScenesServer/SceneNpc.cpp	/^SceneNpc::SceneNpcChase SceneNpc::getChaseMode() const$/;"	f	class:SceneNpc
getChaseSceneEntry	ScenesServer/SceneNpc.cpp	/^SceneEntryPk* SceneNpc::getChaseSceneEntry() const$/;"	f	class:SceneNpc
getClientByName	Robot/ClientManager.cpp	/^Client *ClientManager::getClientByName(std::string name)$/;"	f	class:ClientManager
getCommonCountryBacktoMapID	ScenesServer/Scene.h	/^    DWORD getCommonCountryBacktoMapID() const { return this->commonCountryBacktoMapID; }$/;"	f	class:Scene
getCommonUserBacktoMapID	ScenesServer/Scene.h	/^    DWORD getCommonUserBacktoMapID() const { return this->commonUserBacktoMapID; }$/;"	f	class:Scene
getCompDir	ScenesServer/zSceneEntryIndex.h	/^    static int getCompDir(const zPos &myPos,const zPos &otherPos)$/;"	f	class:zSceneEntryIndex
getContType	base/xml/xml_parser_generator.h	/^	const std::string getContType() const$/;"	f	class:xml_node_map_parser_generator
getContType	base/xml/xml_parser_generator.h	/^	const std::string getContType() const$/;"	f	class:xml_node_seq_parser_generator
getContType	base/xml/xml_parser_generator.h	/^	const std::string getContType() const$/;"	f	class:xml_node_set_parser_generator
getContTypeDef	base/xml/xml_parser_generator.h	/^	const std::string getContTypeDef() const$/;"	f	class:xml_node_map_parser_generator
getContTypeDef	base/xml/xml_parser_generator.h	/^	const std::string getContTypeDef() const$/;"	f	class:xml_node_seq_parser_generator
getContTypeDef	base/xml/xml_parser_generator.h	/^	const std::string getContTypeDef() const$/;"	f	class:xml_node_set_parser_generator
getCounter	ScenesServer/CounterManager.cpp	/^QWORD CounterManager::getCounter(DWORD id)$/;"	f	class:CounterManager
getCountryDare	ScenesServer/Scene.h	/^    bool getCountryDare() const { return this->isCountryFormalDare; }$/;"	f	class:Scene
getCountryDareBackToMapID	ScenesServer/Scene.h	/^    DWORD getCountryDareBackToMapID() const { return this->countryDareBackToMapID; }$/;"	f	class:Scene
getCountryDefBackToMapID	ScenesServer/Scene.h	/^    DWORD getCountryDefBackToMapID() const { return this->countryDefBackToMapID; }$/;"	f	class:Scene
getCountryID	GatewayServer/CountryInfo.cpp	/^DWORD CountryInfo::getCountryID(DWORD country_id)$/;"	f	class:CountryInfo
getCountryID	ScenesServer/Scene.h	/^    const DWORD getCountryID() const { return countryID; }$/;"	f	class:Scene
getCountryID	SessionServer/CountryInfo.cpp	/^DWORD CountryInfo::getCountryID(DWORD country_id)$/;"	f	class:CountryInfo
getCountryIDByCountryName	ScenesServer/SceneManager.cpp	/^DWORD SceneManager::getCountryIDByCountryName(const char *name)$/;"	f	class:SceneManager
getCountryName	GatewayServer/CountryInfo.cpp	/^std::string CountryInfo::getCountryName(DWORD country_id)$/;"	f	class:CountryInfo
getCountryName	ScenesServer/Scene.cpp	/^const char * Scene::getCountryName() const$/;"	f	class:Scene
getCountryName	SessionServer/CountryInfo.cpp	/^std::string CountryInfo::getCountryName(DWORD country_id)$/;"	f	class:CountryInfo
getCountryNameByCountryID	ScenesServer/SceneManager.cpp	/^const char * SceneManager::getCountryNameByCountryID(DWORD id)$/;"	f	class:SceneManager
getCountrySize	GatewayServer/CountryInfo.cpp	/^int CountryInfo::getCountrySize()$/;"	f	class:CountryInfo
getCountryState	GatewayServer/CountryInfo.cpp	/^int CountryInfo::getCountryState( CountryInfo::Info cInfo )$/;"	f	class:CountryInfo
getCountryUser	SessionServer/Session.h	/^    static void getCountryUser(std::vector<std::pair<DWORD,DWORD> > &v)$/;"	f	class:UserSession
getCreateGameMapName	SessionServer/HeroCardManager.cpp	/^std::string HeroCardManager::getCreateGameMapName()$/;"	f	class:HeroCardManager
getCurTarget	ScenesServer/SceneEntryPk.cpp	/^SceneEntryPk * SceneEntryPk::getCurTarget()$/;"	f	class:SceneEntryPk
getCurrMaxExpByLevel	ScenesServer/HeroInfoManager.cpp	/^QWORD HeroInfoManager::getCurrMaxExpByLevel(const WORD level)$/;"	f	class:HeroInfoManager
getCurrentThreadId	base/zThread.h	/^	static pthread_t getCurrentThreadId()$/;"	f	class:zThread
getCurrentTimeString	base/zMisc.h	/^static void getCurrentTimeString(char *buffer,const int bufferlen,const char *format)$/;"	f	class:zMisc
getData	ScenesServer/script.cpp	/^const std::string& LuaScript::getData() const $/;"	f	class:LuaScript
getDefFive	ScenesServer/zObject.h	/^  DWORD getDefFive() const {return dftype;}$/;"	f	class:Equips
getDefFivePoint	ScenesServer/zObject.h	/^  DWORD getDefFivePoint() const {return dfpoint;}$/;"	f	class:Equips
getDefTarget	ScenesServer/SceneEntryPk.cpp	/^SceneEntryPk * SceneEntryPk::getDefTarget()$/;"	f	class:SceneEntryPk
getDir	base/zSceneEntry.h	/^	inline const BYTE getDir() const$/;"	f	struct:zSceneEntry
getDirect	base/zSceneEntry.h	/^	const int getDirect(const zPos &pos) const$/;"	f	struct:zPos
getDirectScreen	GatewayServer/ScreenIndex.cpp	/^const zPosIVector &ScreenIndex::getDirectScreen(const zPosI &posi,const int dir)$/;"	f	class:ScreenIndex
getDirectScreen	ScenesServer/zSceneEntryIndex.h	/^    const zPosIVector &getDirectScreen(const zPosI &posi,const int dir)$/;"	f	class:zSceneEntryIndex
getDistance	ScenesServer/zSceneEntryIndex.h	/^    DWORD getDistance(zPos pos1,zPos pos2) const { return abs((long)(pos1.x-pos2.x))+abs((long)(pos1.y-pos2.y)); }$/;"	f	class:zSceneEntryIndex
getEmperorDare	ScenesServer/Scene.h	/^    bool getEmperorDare() const { return this->isEmperorDare; }$/;"	f	class:Scene
getEmperorDareDef	ScenesServer/Scene.h	/^    DWORD getEmperorDareDef() const { return this->dwEmperorDareDef; }$/;"	f	class:Scene
getEncMethod	base/EncDec/EncDec.cpp	/^CEncrypt::encMethod CEncrypt::getEncMethod() const$/;"	f	class:CEncrypt
getEnemyEquip	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::getEnemyEquip(DWORD userID, zCard *ret)$/;"	f	class:ChallengeGame
getEnemyHero	ScenesServer/ChallengeGame.cpp	/^zCard* ChallengeGame::getEnemyHero(DWORD userID)$/;"	f	class:ChallengeGame
getEntries	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::getEntries(int radius,SceneEntryPk_vec & entries,int state)$/;"	f	class:SceneNpc
getEntriesCallBack	ScenesServer/SceneNpcAI.cpp	/^    getEntriesCallBack(SceneNpc * npc,int radius,SceneEntryPk_vec& entries,const int state) : npc(npc),radius(radius),entries(entries),state(state)$/;"	f	struct:getEntriesCallBack
getEntriesCallBack	ScenesServer/SceneNpcAI.cpp	/^struct getEntriesCallBack : public zSceneEntryCallBack$/;"	s
getEntryByID	base/zDatabaseManager.h	/^	zEntry * getEntryByID( DWORD id)$/;"	f	class:zDataBM
getEntryByID	base/zEntryManager.h	/^	inline zEntry * getEntryByID(const DWORD id) const$/;"	f	class:zEntryID
getEntryByName	base/zDatabaseManager.h	/^	zEntry * getEntryByName( const char * name)$/;"	f	class:zDataBM
getEntryByName	base/zEntryManager.h	/^	inline zEntry * getEntryByName( const char * name) const$/;"	f	class:zEntryName
getEntryByName	base/zEntryManager.h	/^	inline zEntry * getEntryByName(const std::string  &name) const$/;"	f	class:zEntryName
getEntryByTempID	base/zEntryManager.h	/^	inline zEntry * getEntryByTempID(const DWORD tempid) const$/;"	f	class:zEntryTempID
getEquips	ScenesServer/zObject.cpp	/^const Equips& EquipPack::getEquips() const$/;"	f	class:EquipPack
getField	ScenesServer/Scene.h	/^    DWORD getField(const char *ou) const$/;"	f	class:Scene
getField	base/zMetaData.h	/^	DBField* getField(unsigned int pos)$/;"	f	class:DBFieldSet
getFileName	ScenesServer/Scene.h	/^    const char *getFileName() const { return fileName.c_str(); }$/;"	f	class:Scene
getFileName	base/xml/xml_config.h	/^		virtual const std::string getFileName() const {return _filename;}$/;"	f	class:xml_config
getFileName	base/xml/xml_config.h	/^	virtual const std::string getFileName() const {return "unkown";}$/;"	f	struct:xml_config_base
getFiveLevel	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getFiveLevel() const$/;"	f	class:SceneUser
getFivePoint	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getFivePoint() const$/;"	f	class:SceneUser
getFiveType	ScenesServer/SceneEntryPk.h	/^    virtual DWORD getFiveType() {return 0;}$/;"	f	struct:SceneEntryPk
getFiveType	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getFiveType() const$/;"	f	class:SceneUser
getForeignerBacktoMapID	ScenesServer/Scene.h	/^    DWORD getForeignerBacktoMapID() const { return this->foreignerBacktoMapID; }$/;"	f	class:Scene
getGameByID	ScenesServer/ChallengeGameManager.cpp	/^ChallengeGame* ChallengeGameManager::getGameByID(DWORD gameID)$/;"	f	class:ChallengeGameManager
getGameCount	ScenesServer/ChallengeGameManager.h	/^    DWORD getGameCount()$/;"	f	class:ChallengeGameManager
getGameID	ScenesServer/ChallengeGame.h	/^	DWORD getGameID()$/;"	f	class:ChallengeGame
getGameType	ScenesServer/ChallengeGame.cpp	/^Cmd::Session::ChallengeGameType ChallengeGame::getGameType() const$/;"	f	class:ChallengeGame
getGameZoneID	FLServer/UserTask.h	/^	const DWORD getGameZoneID() const$/;"	f	class:UserTask
getGameZoneID	roleChangeServer/ChangeTask.h	/^	const DWORD getGameZoneID() const$/;"	f	class:ChangeTask
getGateInfo	Robot/LoginClient.h	/^    bool getGateInfo(char *ip, WORD &port, DWORD &acc, DWORD &tempid)$/;"	f	class:LoginClient
getGiftBagQualityVec	ScenesServer/GiftBagManager.cpp	/^void GiftBagManager::getGiftBagQualityVec(const DWORD id, std::vector<DWORD> &qualitys)$/;"	f	class:GiftBagManager
getGold	BillServer/BillManager.cpp	/^double BillManager::getGold(DWORD acc)$/;"	f	class:BillManager
getGold	ScenesServer/zCard.cpp	/^zCard *CardSlots::getGold()$/;"	f	class:CardSlots
getGold	ScenesServer/zObject.cpp	/^zObject * MainPack::getGold()$/;"	f	class:MainPack
getGold	ScenesServer/zObject.cpp	/^zObject *Packages::getGold()$/;"	f	class:Packages
getGoldNum	ScenesServer/zCard.cpp	/^DWORD CardSlots::getGoldNum()$/;"	f	class:CardSlots
getGoldNum	ScenesServer/zObject.cpp	/^DWORD MainPack::getGoldNum()$/;"	f	class:MainPack
getGoldNum	ScenesServer/zObject.cpp	/^DWORD Packages::getGoldNum()$/;"	f	class:Packages
getGoodnessName	ScenesServer/SceneUser.cpp	/^char *SceneUser::getGoodnessName()$/;"	f	class:SceneUser
getGoodnessPrice	ScenesServer/SceneUser.cpp	/^float SceneUser::getGoodnessPrice(DWORD price,bool isBuy)$/;"	f	class:SceneUser
getGoodnessState	ScenesServer/SceneUser.cpp	/^short SceneUser::getGoodnessState() const $/;"	f	class:SceneUser
getHCardByOccupation	ScenesServer/HeroInfoManager.cpp	/^DWORD HeroInfoManager::getHCardByOccupation(const WORD occupation)$/;"	f	class:HeroInfoManager
getHairColor	ScenesServer/SceneUser.h	/^    DWORD getHairColor() const$/;"	f	struct:SceneUser
getHairType	ScenesServer/SceneUser.h	/^    BYTE getHairType() const$/;"	f	struct:SceneUser
getHeroTotalLevel	ScenesServer/HeroInfoManager.cpp	/^WORD HeroInfoManager::getHeroTotalLevel(SceneUser& user)$/;"	f	class:HeroInfoManager
getHoldCountry	ScenesServer/Scene.h	/^    DWORD getHoldCountry() const { return this->dwHoldCountryID; }$/;"	f	class:Scene
getHoldUnion	ScenesServer/Scene.h	/^    DWORD getHoldUnion() const { return this->dwHoldUnionID; }$/;"	f	class:Scene
getHour	base/zTime.h	/^	int getHour()$/;"	f	class:zTime
getHp	ScenesServer/SceneEntryPk.cpp	/^DWORD SceneEntryPk::getHp()$/;"	f	class:SceneEntryPk
getID	BillServer/BillClient.h	/^    const DWORD getID() const$/;"	f	class:BillClient
getID	BillServer/BillTask.h	/^    const WORD getID() const$/;"	f	class:BillTask
getID	RecordServer/RecordTask.h	/^    const WORD getID() const$/;"	f	class:RecordTask
getID	ScenesServer/SceneTask.h	/^    const WORD getID() const$/;"	f	class:SceneTask
getID	ScenesServer/SceneUser.h	/^	DWORD getID()$/;"	f	struct:SceneUser
getID	SessionServer/SessionTask.h	/^    const WORD getID() const$/;"	f	class:SessionTask
getID	SuperServer/ServerTask.h	/^    const WORD getID() const$/;"	f	class:ServerTask
getID	SuperServer/SuperServer.h	/^    const WORD getID() const$/;"	f	class:SuperService
getIP	SuperServer/SuperServer.h	/^    const char *getIP() const$/;"	f	class:SuperService
getIP	base/zSocket.h	/^	inline const char *getIP() const { return inet_ntoa(addr.sin_addr); }$/;"	f	class:zSocket
getIP	base/zTCPClient.h	/^	const char *getIP() const$/;"	f	class:zTCPClient
getIP	base/zTCPTask.h	/^	const char *getIP() const$/;"	f	class:zTCPTask
getIdByThisId	ScenesServer/script_func.cpp	/^DWORD getIdByThisId(DWORD thisid)$/;"	f
getIncCity	ScenesServer/Scene.h	/^    DWORD getIncCity(const char *ou) const$/;"	f	class:Scene
getIndexKey	GatewayServer/GateUser.h	/^	const DWORD getIndexKey() const$/;"	f	class:GateUser
getInfo	GatewayServer/CountryInfo.cpp	/^CountryInfo::Info *CountryInfo::getInfo(DWORD country_id)$/;"	f	class:CountryInfo
getInfo	SessionServer/CountryInfo.cpp	/^CountryInfo::Info *CountryInfo::getInfo(DWORD country_id)$/;"	f	class:CountryInfo
getInstance	BillServer/BillCallback.h	/^    static T& getInstance()$/;"	f	class:SingletonBase
getInstance	BillServer/BillManager.h	/^    static BillManager &getInstance()$/;"	f	class:BillManager
getInstance	BillServer/BillServer.h	/^    static BillService &getInstance()$/;"	f	class:BillService
getInstance	BillServer/BillSessionManager.h	/^    static BillSessionManager &getInstance()$/;"	f	class:BillSessionManager
getInstance	BillServer/BillTaskManager.h	/^    static BillTaskManager &getInstance()$/;"	f	class:BillTaskManager
getInstance	BillServer/BillUserManager.cpp	/^BillUserManager *BillUserManager::getInstance()$/;"	f	class:BillUserManager
getInstance	BillServer/StockConsign.cpp	/^ConsignGoldManager *ConsignGoldManager::getInstance()$/;"	f	class:ConsignGoldManager
getInstance	BillServer/StockConsign.cpp	/^ConsignHistoryManager *ConsignHistoryManager::getInstance()$/;"	f	class:ConsignHistoryManager
getInstance	BillServer/StockConsign.cpp	/^ConsignMoneyManager *ConsignMoneyManager::getInstance()$/;"	f	class:ConsignMoneyManager
getInstance	BillServer/TimeTick.h	/^    static BillTimeTick &getInstance()$/;"	f	class:BillTimeTick
getInstance	FLServer/GYListManager.h	/^	static GYListManager &getInstance()$/;"	f	class:GYListManager
getInstance	FLServer/LoginManager.h	/^	static LoginManager &getInstance()$/;"	f	class:LoginManager
getInstance	FLServer/ServerManager.h	/^	static ServerManager &getInstance()$/;"	f	class:ServerManager
getInstance	FLServer/TimeTick.h	/^	static FLTimeTick &getInstance()$/;"	f	class:FLTimeTick
getInstance	GatewayServer/GateUserManager.cpp	/^GateUserManager * GateUserManager::getInstance()$/;"	f	class:GateUserManager
getInstance	GatewayServer/GatewayServer.h	/^	static GatewayService &getInstance()$/;"	f	class:GatewayService
getInstance	GatewayServer/GatewayTaskManager.h	/^	static GatewayTaskManager &getInstance()$/;"	f	class:GatewayTaskManager
getInstance	GatewayServer/LoginSessionManager.h	/^	static LoginSessionManager &getInstance()$/;"	f	class:LoginSessionManager
getInstance	GatewayServer/SceneClientManager.h	/^	static SceneClientManager &getInstance()$/;"	f	class:SceneClientManager
getInstance	GatewayServer/TimeTick.h	/^	static GatewayTimeTick &getInstance()$/;"	f	class:GatewayTimeTick
getInstance	RecordServer/RecordServer.h	/^    static RecordService &getInstance()$/;"	f	class:RecordService
getInstance	RecordServer/RecordSessionManager.h	/^    static RecordSessionManager &getInstance()$/;"	f	class:RecordSessionManager
getInstance	Robot/ClientManager.cpp	/^ClientManager &ClientManager::getInstance()$/;"	f	class:ClientManager
getInstance	Robot/ClientService.h	/^    static ClientService &getInstance()$/;"	f	class:ClientService
getInstance	Robot/TimeTick.h	/^	static ClientTimeTick &getInstance()$/;"	f	class:ClientTimeTick
getInstance	ScenesServer/CardManager.cpp	/^GlobalCardIndex *GlobalCardIndex::getInstance()$/;"	f	class:GlobalCardIndex
getInstance	ScenesServer/NpcTrade.h	/^    static NpcTrade &getInstance()$/;"	f	class:NpcTrade
getInstance	ScenesServer/ObjectManager.cpp	/^GlobalObjectIndex *GlobalObjectIndex::getInstance()$/;"	f	class:GlobalObjectIndex
getInstance	ScenesServer/SceneManager.cpp	/^SceneManager & SceneManager::getInstance()$/;"	f	class:SceneManager
getInstance	ScenesServer/SceneTaskManager.h	/^    static SceneTaskManager &getInstance()$/;"	f	class:SceneTaskManager
getInstance	ScenesServer/SceneUserManager.cpp	/^SceneRecycleUserManager &SceneRecycleUserManager::getInstance()$/;"	f	class:SceneRecycleUserManager
getInstance	ScenesServer/ScenesServer.h	/^    static ScenesService &getInstance()$/;"	f	class:ScenesService
getInstance	ScenesServer/TimeTick.h	/^    static SceneTimeTick &getInstance()$/;"	f	class:SceneTimeTick
getInstance	SessionServer/SessionManager.cpp	/^SceneSessionManager *SceneSessionManager::getInstance()$/;"	f	class:SceneSessionManager
getInstance	SessionServer/SessionManager.cpp	/^UserSessionManager *UserSessionManager::getInstance()$/;"	f	class:UserSessionManager
getInstance	SessionServer/SessionServer.h	/^    static SessionService &getInstance()$/;"	f	class:SessionService
getInstance	SessionServer/SessionTaskManager.h	/^    static SessionTaskManager &getInstance()$/;"	f	class:SessionTaskManager
getInstance	SessionServer/TempArchive.cpp	/^GlobalTempArchiveIndex *GlobalTempArchiveIndex::getInstance()$/;"	f	class:GlobalTempArchiveIndex
getInstance	SessionServer/TimeTick.h	/^    static SessionTimeTick &getInstance()$/;"	f	class:SessionTimeTick
getInstance	SuperServer/BroadClientManager.h	/^    static BroadClientManager &getInstance()$/;"	f	class:BroadClientManager
getInstance	SuperServer/FLClientManager.h	/^    static FLClientManager &getInstance()$/;"	f	class:FLClientManager
getInstance	SuperServer/InfoClientManager.h	/^    static InfoClientManager &getInstance()$/;"	f	class:InfoClientManager
getInstance	SuperServer/RolechangeClientManager.h	/^    static RolechangeClientManager &getInstance()$/;"	f	class:RolechangeClientManager
getInstance	SuperServer/RoleregCache.h	/^    static RoleregCache &getInstance()$/;"	f	class:RoleregCache
getInstance	SuperServer/RoleregClientManager.h	/^    static RoleregClientManager &getInstance()$/;"	f	class:RoleregClientManager
getInstance	SuperServer/ServerManager.h	/^    static ServerManager &getInstance()$/;"	f	class:ServerManager
getInstance	SuperServer/SuperServer.h	/^    static SuperService &getInstance()$/;"	f	class:SuperService
getInstance	SuperServer/TimeTick.h	/^    static SuperTimeTick &getInstance()$/;"	f	class:SuperTimeTick
getIp	BillServer/BillUser.cpp	/^const char *BillUser::getIp()$/;"	f	class:BillUser
getLevel	ScenesServer/HeroInfoManager.h	/^    WORD getLevel()$/;"	f	struct:HeroData
getLevel	ScenesServer/Scene.h	/^    BYTE getLevel() const { return level; }$/;"	f	class:Scene
getLevel	ScenesServer/SceneNpc.cpp	/^DWORD SceneNpc::getLevel() const$/;"	f	class:SceneNpc
getLevel	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getLevel() const$/;"	f	class:SceneUser
getLevelDegree	SessionServer/CSort.cpp	/^WORD CSortM::getLevelDegree(UserSession *pUser)$/;"	f	class:CSortM
getList	tmpcode/commond.h	/^    stCityQuestGetInfo getList[0];$/;"	m	struct:stRetCityQuestGetList
getLocalIP	FLServer/UserTask.h	/^	const char* getLocalIP() const$/;"	f	class:UserTask
getLocalIP	base/zSocket.h	/^	inline const char *getLocalIP() const { return inet_ntoa(local_addr.sin_addr); }$/;"	f	class:zSocket
getLocalPort	base/zSocket.h	/^	inline const WORD getLocalPort() const { return ntohs(local_addr.sin_port); }$/;"	f	class:zSocket
getLocalTime	base/zTime.h	/^	static void getLocalTime(struct tm & tv1,time_t timValue)$/;"	f	class:zRTime
getLoginTime	ScenesServer/SceneUser.h	/^    DWORD getLoginTime()$/;"	f	struct:SceneUser
getMDay	base/zTime.h	/^	int getMDay()$/;"	f	class:zTime
getMDefence	ScenesServer/SceneEntryPk.h	/^    virtual DWORD getMDefence(){return 0;}$/;"	f	struct:SceneEntryPk
getMDefence	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getMDefence()$/;"	f	class:SceneUser
getMP	ScenesServer/SceneEntryPk.h	/^    virtual DWORD getMP(){return 0;}$/;"	f	struct:SceneEntryPk
getMP	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getMP()$/;"	f	class:SceneUser
getMagicType	ScenesServer/SceneUser.cpp	/^bool SceneUser::getMagicType()$/;"	f	class:SceneUser
getMainCity	ScenesServer/Scene.h	/^    DWORD getMainCity(const char *ou) const$/;"	f	class:Scene
getMapIDByMapName	ScenesServer/SceneManager.cpp	/^DWORD SceneManager::getMapIDByMapName(const char *name)$/;"	f	class:SceneManager
getMapId	ScenesServer/SceneManager.cpp	/^DWORD SceneManager::getMapId(DWORD countryid,DWORD mapid)$/;"	f	class:SceneManager
getMapName	GatewayServer/CountryInfo.cpp	/^std::string CountryInfo::getMapName(DWORD country_id)$/;"	f	class:CountryInfo
getMapName	SessionServer/CountryInfo.cpp	/^std::string CountryInfo::getMapName(DWORD country_id)$/;"	f	class:CountryInfo
getMarryRelation	SessionServer/CRelationManager.cpp	/^CRelation* CRelationManager::getMarryRelation()$/;"	f	class:CRelationManager
getMaster	ScenesServer/SceneNpc.h	/^  virtual SceneEntryPk *getMaster() {return 0;}$/;"	f	class:SceneNpc
getMaster	ScenesServer/SceneUser.cpp	/^SceneEntryPk *SceneUser::getMaster()$/;"	f	class:SceneUser
getMasterMana	ScenesServer/SceneEntryPk.h	/^    virtual DWORD getMasterMana(){return 0;}$/;"	f	struct:SceneEntryPk
getMaterialKind	ScenesServer/zObject.cpp	/^DWORD zObject::getMaterialKind()$/;"	f	class:zObject
getMaxConns	base/zTCPTaskPool.h	/^	inline const int getMaxConns() const { return maxConns; }$/;"	f	class:zTCPTaskPool
getMaxHP	ScenesServer/SceneEntryPk.h	/^    virtual DWORD getMaxHP(){return 0;}$/;"	f	struct:SceneEntryPk
getMaxHP	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getMaxHP()$/;"	f	class:SceneUser
getMaxHp	ScenesServer/SceneEntryPk.cpp	/^DWORD SceneEntryPk::getMaxHp()$/;"	f	class:SceneEntryPk
getMaxMDamage	ScenesServer/SceneEntryPk.h	/^    virtual DWORD getMaxMDamage(){return 0;}$/;"	f	struct:SceneEntryPk
getMaxMDamage	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getMaxMDamage()$/;"	f	class:SceneUser
getMaxMP	ScenesServer/SceneEntryPk.h	/^    virtual DWORD getMaxMP(){return 0;}$/;"	f	struct:SceneEntryPk
getMaxMP	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getMaxMP()$/;"	f	class:SceneUser
getMaxPDamage	ScenesServer/SceneEntryPk.h	/^    virtual DWORD getMaxPDamage(){return 0;}$/;"	f	struct:SceneEntryPk
getMaxPDamage	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getMaxPDamage()$/;"	f	class:SceneUser
getMaxPoolSize	FLServer/FLServer.h	/^	const int getMaxPoolSize() const$/;"	f	class:FLService
getMaxPoolSize	roleChangeServer/roleChangeServer.h	/^	const int getMaxPoolSize() const$/;"	f	class:roleChangeService
getMaxPoolSize	roleRegServer/roleRegServer.h	/^	const int getMaxPoolSize() const$/;"	f	class:roleRegService
getMaxSP	ScenesServer/SceneEntryPk.h	/^    virtual DWORD getMaxSP(){return 0;}$/;"	f	struct:SceneEntryPk
getMaxSkill	ScenesServer/zObject.h	/^  DWORD getMaxSkill(WORD id) const$/;"	f	class:Equips
getMaxSkills	ScenesServer/zObject.h	/^  DWORD getMaxSkills(WORD id) const$/;"	f	class:Equips
getMe	ScenesServer/Chat.cpp	/^ChannelM &ChannelM::getMe()$/;"	f	class:ChannelM
getMe	ScenesServer/Recycle.h	/^	static SceneRecycle &getMe()$/;"	f	class:SceneRecycle
getMe	ScenesServer/SceneNpcManager.cpp	/^SceneNpcManager &SceneNpcManager::getMe()$/;"	f	class:SceneNpcManager
getMe	ScenesServer/SceneUserManager.cpp	/^SceneUserManager &SceneUserManager::getMe()$/;"	f	class:SceneUserManager
getMe	SessionServer/CSort.cpp	/^CSortM& CSortM::getMe()$/;"	f	class:CSortM
getMe	SessionServer/SessionChat.cpp	/^SessionChannelManager & SessionChannelManager::getMe()$/;"	f	class:SessionChannelManager
getMe	base/zDatabaseManager.h	/^	static zDataBM & getMe()$/;"	f	class:zDataBM
getMe	base/zSingleton.h	/^		static T& getMe()$/;"	f	class:Singleton
getMessage	ScenesServer/Chat.cpp	480;"	d
getMessage	SessionServer/Session.cpp	169;"	d
getMessage	SessionServer/SessionChat.cpp	133;"	d
getMessage	SessionServer/SessionServer.cpp	867;"	d
getMeterials	ScenesServer/script_func.cpp	/^char * getMeterials(DWORD id)$/;"	f
getMin	base/zTime.h	/^	int getMin()$/;"	f	class:zTime
getMinCountCountry	SessionServer/HeroCardManager.cpp	/^WORD HeroCardManager::getMinCountCountry()$/;"	f	class:HeroCardManager
getMoney	tmpcode/commond.h	/^    DWORD getMoney;$/;"	m	struct:stCityQuestEarnInfo
getMonth	base/zTime.h	/^	int getMonth()$/;"	f	class:zTime
getMyMoveSpeed	ScenesServer/SceneUser.cpp	/^WORD SceneUser::getMyMoveSpeed() const$/;"	f	class:SceneUser
getName	Robot/Client.h	/^	inline std::string& getName() {return name;}$/;"	f	class:Client
getName	ScenesServer/Scene.h	/^    const char *getName() const { return name; }$/;"	f	class:Scene
getNetType	BillServer/BillClient.h	/^    const NetType getNetType() const$/;"	f	class:BillClient
getNetType	FLServer/UserTask.h	/^	const NetType getNetType() const$/;"	f	class:UserTask
getNetType	SuperServer/BroadClient.h	/^    const NetType getNetType() const$/;"	f	class:BroadClient
getNetType	SuperServer/FLClient.h	/^    const NetType getNetType() const$/;"	f	class:FLClient
getNetType	SuperServer/InfoClient.h	/^    const NetType getNetType() const$/;"	f	class:InfoClient
getNetType	SuperServer/RolechangeClient.h	/^    const NetType getNetType() const$/;"	f	class:RolechangeClient
getNetType	SuperServer/RoleregClient.h	/^    const NetType getNetType() const$/;"	f	class:RoleregClient
getNetType	roleChangeServer/ChangeTask.h	/^	const NetType getNetType() const$/;"	f	class:ChangeTask
getNewBase	ScenesServer/Skill.cpp	/^const zSkillB *zSkill::getNewBase()$/;"	f	class:zSkill
getNewbieMapName	SessionServer/NewbieLimit.cpp	/^std::string NewbieLimit::getNewbieMapName(const std::string &sCountryName)$/;"	f	class:NewbieLimit
getNextPos	ScenesServer/Scene.cpp	/^bool Scene::getNextPos($/;"	f	class:Scene
getNextPos	ScenesServer/Scene.cpp	/^void Scene::getNextPos(const zPos &orgPos,const int dir,zPos &newPos) const$/;"	f	class:Scene
getNineScreen	GatewayServer/ScreenIndex.cpp	/^const zPosIVector &ScreenIndex::getNineScreen(const zPosI &posi)$/;"	f	class:ScreenIndex
getNineScreen	ScenesServer/zSceneEntryIndex.h	/^    const zPosIVector &getNineScreen(const zPosI &posi)$/;"	f	class:zSceneEntryIndex
getNpcAction	ScenesServer/NpcTrade.cpp	/^DWORD NpcTrade::getNpcAction(const DWORD npcid)$/;"	f	class:NpcTrade
getNpcByTempID	ScenesServer/Scene.cpp	/^SceneNpc *Scene::getNpcByTempID(DWORD npctempid)$/;"	f	class:Scene
getNpcByTempID	ScenesServer/SceneNpcManager.cpp	/^SceneNpc *SceneNpcManager::getNpcByTempID(DWORD tempid)$/;"	f	class:SceneNpcManager
getNpcCommonChat	ScenesServer/SceneNpcManager.cpp	/^bool SceneNpcManager::getNpcCommonChat(DWORD type,char * content)$/;"	f	class:SceneNpcManager
getNpcMenu	ScenesServer/NpcTrade.cpp	/^bool NpcTrade::getNpcMenu(const DWORD npcid,char *menuTxt)$/;"	f	class:NpcTrade
getObject	ScenesServer/CardManager.cpp	/^zCard *GameCardM::getObject(UserCardCompare &comp)$/;"	f	class:GameCardM
getObject	ScenesServer/ObjectManager.cpp	/^zObject *UserObjectM::getObject(UserObjectCompare &comp)$/;"	f	class:UserObjectM
getObject	ScenesServer/zObject.h	/^  zObject *getObject()$/;"	f	struct:zSceneObject
getObjectByEquipNo	ScenesServer/zObject.cpp	/^zObject *EquipPack::getObjectByEquipNo(EQUIPNO no)$/;"	f	class:EquipPack
getObjectByEquipPos	ScenesServer/zObject.cpp	/^zObject *EquipPack::getObjectByEquipPos(DWORD no)$/;"	f	class:EquipPack
getObjectByID	ScenesServer/CardManager.cpp	/^zCard* GameCardM::getObjectByID(DWORD id,BYTE upgrade,bool not_need_space,int bindflag) const$/;"	f	class:GameCardM
getObjectByID	ScenesServer/ObjectManager.cpp	/^zObject* UserObjectM::getObjectByID(DWORD id,BYTE upgrade,bool not_need_space,int bindflag) const$/;"	f	class:UserObjectM
getObjectByID	ScenesServer/zCard.cpp	/^bool CardSlot::getObjectByID(zCard **ret,DWORD id)$/;"	f	class:CardSlot
getObjectByID	ScenesServer/zObject.cpp	/^bool Package::getObjectByID(zObject **ret,DWORD id)$/;"	f	class:Package
getObjectByPos	ScenesServer/CardManager.cpp	/^zCard *GameCardM::getObjectByPos(const stObjectLocation &dst)$/;"	f	class:GameCardM
getObjectByPos	ScenesServer/ObjectManager.cpp	/^zObject *UserObjectM::getObjectByPos(const stObjectLocation &dst)$/;"	f	class:UserObjectM
getObjectByRandom	ScenesServer/zCard.cpp	/^bool CardSlot::getObjectByRandom(zCard **ret)$/;"	f	class:CardSlot
getObjectByThisID	ScenesServer/CardManager.cpp	/^zCard * GameCardM::getObjectByThisID( DWORD thisid)$/;"	f	class:GameCardM
getObjectByThisID	ScenesServer/ObjectManager.cpp	/^zObject * UserObjectM::getObjectByThisID( DWORD thisid)$/;"	f	class:UserObjectM
getObjectByThisid	ScenesServer/CardManager.cpp	/^zCard *GlobalCardIndex::getObjectByThisid(DWORD thisid)$/;"	f	class:GlobalCardIndex
getObjectByThisid	ScenesServer/ObjectManager.cpp	/^zObject *GlobalObjectIndex::getObjectByThisid(DWORD thisid)$/;"	f	class:GlobalObjectIndex
getObjectByZone	ScenesServer/zCard.cpp	/^bool BattleSlot::getObjectByZone(zCard **ret,WORD x,WORD y)$/;"	f	class:BattleSlot
getObjectByZone	ScenesServer/zCard.cpp	/^bool CardSlot::getObjectByZone(zCard **ret,WORD x,WORD y)$/;"	f	class:CardSlot
getObjectByZone	ScenesServer/zCard.cpp	/^bool EquipSlot::getObjectByZone(zCard **ret,WORD x,WORD y)$/;"	f	class:EquipSlot
getObjectByZone	ScenesServer/zCard.cpp	/^bool HandSlot::getObjectByZone(zCard **ret,WORD x,WORD y)$/;"	f	class:HandSlot
getObjectByZone	ScenesServer/zCard.cpp	/^bool HeroSlot::getObjectByZone(zCard **ret,WORD x,WORD y)$/;"	f	class:HeroSlot
getObjectByZone	ScenesServer/zCard.cpp	/^bool SkillSlot::getObjectByZone(zCard **ret,WORD x,WORD y)$/;"	f	class:SkillSlot
getObjectByZone	ScenesServer/zCard.cpp	/^bool TombSlot::getObjectByZone(zCard **ret,WORD x,WORD y)$/;"	f	class:TombSlot
getObjectByZone	ScenesServer/zObject.cpp	/^bool EquipPack::getObjectByZone(zObject **ret,WORD x,WORD y)$/;"	f	class:EquipPack
getObjectByZone	ScenesServer/zObject.cpp	/^bool MainPack::getObjectByZone(zObject **ret,WORD x,WORD y)$/;"	f	class:MainPack
getObjectByZone	ScenesServer/zObject.cpp	/^bool Package::getObjectByZone(zObject **ret,WORD x,WORD y)$/;"	f	class:Package
getObjectNum	ScenesServer/zCard.cpp	/^WORD CardSlot::getObjectNum() const$/;"	f	class:CardSlot
getObjectNum	ScenesServer/zObject.cpp	/^WORD Package::getObjectNum() const$/;"	f	class:Package
getObjectNumByBaseID	ScenesServer/zCard.cpp	/^WORD CardSlot::getObjectNumByBaseID(DWORD baseID) const$/;"	f	class:CardSlot
getObjectNumByBaseID	ScenesServer/zObject.cpp	/^WORD Package::getObjectNumByBaseID(DWORD baseID) const$/;"	f	class:Package
getOccupationByIndex	ScenesServer/GroupCardManager.cpp	/^DWORD GroupCardManager::getOccupationByIndex(SceneUser& user, const DWORD index)$/;"	f	class:GroupCardManager
getOldPos1	base/zSceneEntry.h	/^	inline const zPos &getOldPos1() const$/;"	f	struct:zSceneEntry
getOldPos2	base/zSceneEntry.h	/^	inline const zPos &getOldPos2() const$/;"	f	struct:zSceneEntry
getOneHeroLevel	ScenesServer/HeroInfoManager.cpp	/^WORD HeroInfoManager::getOneHeroLevel(SceneUser *user, const WORD occupation)$/;"	f	class:HeroInfoManager
getOneIdTimes	ScenesServer/GroupCardManager.cpp	/^WORD GroupCardManager::getOneIdTimes(const DWORD cardID, DWORD id[], const WORD count)$/;"	f	class:GroupCardManager
getOneNameTimes	ScenesServer/GroupCardManager.cpp	/^WORD GroupCardManager::getOneNameTimes(const DWORD cardID, DWORD id[], const WORD count)$/;"	f	class:GroupCardManager
getOneTujianNum	ScenesServer/CardTujianManager.cpp	/^WORD CardTujianManager::getOneTujianNum(SceneUser& user, const DWORD id)$/;"	f	class:CardTujianManager
getOnline	FLServer/GYListManager.cpp	/^DWORD GYListManager::getOnline(void)$/;"	f	class:GYListManager
getOnlineNum	SuperServer/ServerTask.h	/^    const DWORD getOnlineNum() const$/;"	f	class:ServerTask
getOther	ScenesServer/ChallengeGame.cpp	/^SceneUser* ChallengeGame::getOther(DWORD userID)$/;"	f	class:ChallengeGame
getOverMan	ScenesServer/SceneUser.h	/^    DWORD getOverMan()$/;"	f	struct:SceneUser
getOwner	ScenesServer/zCard.h	/^    ChallengeGame *getOwner()$/;"	f	class:CardSlots
getOwner	ScenesServer/zObject.h	/^    SceneUser *getOwner()$/;"	f	class:Packages
getOwner	ScenesServer/zObject.h	/^  DWORD getOwner()$/;"	f	struct:zSceneObject
getPDefence	ScenesServer/SceneEntryPk.h	/^    virtual DWORD getPDefence(){return 0;}$/;"	f	struct:SceneEntryPk
getPDefence	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getPDefence()$/;"	f	class:SceneUser
getPackage	ScenesServer/zObject.cpp	/^Package * Packages::getPackage(DWORD type,DWORD id)$/;"	f	class:Packages
getPackage	ScenesServer/zObject.cpp	/^Package** Packages::getPackage(int packs)$/;"	f	class:Packages
getPetType	ScenesServer/SceneNpc.cpp	/^Cmd::petType SceneNpc::getPetType()$/;"	f	class:SceneNpc
getPkAddition	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::getPkAddition()$/;"	f	class:SceneUser
getPkLevel	ScenesServer/Scene.h	/^    DWORD getPkLevel() const { return pklevel; }$/;"	f	class:Scene
getPointInTree	ScenesServer/SkillManager.cpp	/^DWORD UserSkillM::getPointInTree(DWORD mySubkind)$/;"	f	class:UserSkillM
getPool	base/zTCPTask.h	/^	zTCPTaskPool *getPool()$/;"	f	class:zTCPTask
getPoolSize	BillServer/BillServer.h	/^    const int getPoolSize() const$/;"	f	class:BillService
getPoolSize	FLServer/FLServer.h	/^	const int getPoolSize() const$/;"	f	class:FLService
getPoolSize	GatewayServer/GatewayServer.h	/^	const int getPoolSize() const$/;"	f	class:GatewayService
getPoolSize	RecordServer/RecordServer.h	/^    const int getPoolSize() const$/;"	f	class:RecordService
getPoolSize	ScenesServer/ScenesServer.h	/^    const int getPoolSize() const$/;"	f	class:ScenesService
getPoolSize	SessionServer/SessionServer.h	/^    const int getPoolSize() const$/;"	f	class:SessionService
getPoolSize	SuperServer/SuperServer.h	/^    const int getPoolSize() const$/;"	f	class:SuperService
getPoolSize	base/zNetService.h	/^	virtual const int getPoolSize() const$/;"	f	class:zNetService
getPoolSize	roleChangeServer/roleChangeServer.h	/^	const int getPoolSize() const$/;"	f	class:roleChangeService
getPoolSize	roleRegServer/roleRegServer.h	/^	const int getPoolSize() const$/;"	f	class:roleRegService
getPoolState	GatewayServer/GatewayServer.h	/^	const int getPoolState() const$/;"	f	class:GatewayService
getPoolState	base/zNetService.h	/^	virtual const int getPoolState() const$/;"	f	class:zNetService
getPort	SuperServer/SuperServer.h	/^    const WORD getPort() const$/;"	f	class:SuperService
getPort	base/zSocket.h	/^	inline const WORD getPort() const { return ntohs(addr.sin_port); }$/;"	f	class:zSocket
getPort	base/zTCPClient.h	/^	const WORD getPort() const$/;"	f	class:zTCPClient
getPort	base/zTCPTask.h	/^	const WORD getPort()$/;"	f	class:zTCPTask
getPos	base/zSceneEntry.h	/^	inline const zPos &getPos() const$/;"	f	struct:zSceneEntry
getPosI	base/zSceneEntry.h	/^	inline const zPosI &getPosI() const$/;"	f	struct:zSceneEntry
getPriceByMarketIndex	ScenesServer/MarketSystemManager.cpp	/^DWORD MarketSystemManager::getPriceByMarketIndex(const DWORD index)$/;"	f	class:MarketSystemManager
getPriv	ScenesServer/SceneEntryPk.h	/^    virtual BYTE getPriv(){return 0;}$/;"	f	struct:SceneEntryPk
getPriv	ScenesServer/SceneUser.h	/^    BYTE getPriv()$/;"	f	struct:SceneUser
getProperty	base/zProperties.h	/^	const std::string &getProperty(const std::string &key)$/;"	f	class:zProperties
getRandDest	ScenesServer/WayPoint.cpp	/^const zPoint WayPoint::getRandDest()$/;"	f	class:WayPoint
getRandPoint	ScenesServer/WayPoint.cpp	/^const zPos WayPoint::getRandPoint()$/;"	f	class:WayPoint
getRandWayPoint	ScenesServer/Scene.h	/^    WayPoint *getRandWayPoint() { return wpm.getRandWayPoint(); }$/;"	f	class:Scene
getRandWayPoint	ScenesServer/WayPoint.cpp	/^WayPoint *WayPointM::getRandWayPoint()$/;"	f	class:WayPointM
getRandomSkillByType	base/zDatabase.h	/^    bool getRandomSkillByType(int type,npcSkill &skill)$/;"	f	struct:zNpcB
getRealFileName	ScenesServer/Scene.h	/^    const char *getRealFileName() const { return fileName.c_str() + fileName.find(".") + 1; }$/;"	f	class:Scene
getRealFileName	ScenesServer/Scene.h	/^    const char *getRealFileName(std::string file) const { return file.c_str() + file.find(".") + 1; }$/;"	f	class:Scene
getRealMapID	GatewayServer/CountryInfo.cpp	/^DWORD CountryInfo::getRealMapID(DWORD map_id)$/;"	f	class:CountryInfo
getRealMapID	ScenesServer/Scene.h	/^    const DWORD getRealMapID() const { return id & 0x0000FFFF; }$/;"	f	class:Scene
getRealMapName	GatewayServer/CountryInfo.cpp	/^const char *CountryInfo::getRealMapName(const char *name)$/;"	f	class:CountryInfo
getRealMinTime	BillServer/BillUser.cpp	/^DWORD BillUser::getRealMinTime()$/;"	f	class:BillUser
getRealName	ScenesServer/Scene.h	/^    const char *getRealName() const$/;"	f	class:Scene
getRelationByID	SessionServer/CRelationManager.cpp	/^CRelation* CRelationManager::getRelationByID(DWORD dwRelationID)$/;"	f	class:CRelationManager
getRelationByName	SessionServer/CRelationManager.cpp	/^CRelation * CRelationManager::getRelationByName(const char *name)$/;"	f	class:CRelationManager
getRelationByType	SessionServer/CRelationManager.cpp	/^CRelation*  CRelationManager::getRelationByType(int relationType)$/;"	f	class:CRelationManager
getRepeat	ScenesServer/SceneNpcAI.cpp	/^int NpcAIController::getRepeat()$/;"	f	class:NpcAIController
getReverseDirect	ScenesServer/zSceneEntryIndex.h	/^    int getReverseDirect(const int direct) const { return (direct + 4) % 8; }$/;"	f	class:zSceneEntryIndex
getReverseDirectScreen	GatewayServer/ScreenIndex.cpp	/^const zPosIVector &ScreenIndex::getReverseDirectScreen(const zPosI &posi,const int dir)$/;"	f	class:ScreenIndex
getReverseDirectScreen	ScenesServer/zSceneEntryIndex.h	/^    const zPosIVector &getReverseDirectScreen(const zPosI &posi,const int dir)$/;"	f	class:zSceneEntryIndex
getRewardFlag	tmpcode/commond.h	/^	BYTE getRewardFlag;\/\/7- «∑Ò◊‘∂ØÃ·»°$/;"	m	struct:HappyCardBoxAutoCfg
getRunningState	base/zScene.h	/^	DWORD getRunningState() const$/;"	f	struct:zScene
getSCardByOccupation	ScenesServer/HeroInfoManager.cpp	/^DWORD HeroInfoManager::getSCardByOccupation(const WORD occupation)$/;"	f	class:HeroInfoManager
getSaveData	ScenesServer/Skill.cpp	/^bool zSkill::getSaveData(SaveSkill *save)$/;"	f	class:zSkill
getSaveData	ScenesServer/zCard.cpp	/^bool zCard::getSaveData(SaveObject *save)$/;"	f	class:zCard
getSaveData	ScenesServer/zObject.cpp	/^bool zObject::getSaveData(SaveObject *save)$/;"	f	class:zObject
getSaveStatusSize	ScenesServer/SkillStatusManager.cpp	/^WORD SkillStatusManager::getSaveStatusSize()$/;"	f	class:SkillStatusManager
getSceneByFile	SessionServer/SessionManager.cpp	/^SceneSession * SceneSessionManager::getSceneByFile(const char *name)$/;"	f	class:SceneSessionManager
getSceneByFileName	ScenesServer/SceneManager.cpp	/^Scene * SceneManager::getSceneByFileName( const char * name)$/;"	f	class:SceneManager
getSceneByID	ScenesServer/SceneManager.cpp	/^Scene * SceneManager::getSceneByID( DWORD id)$/;"	f	class:SceneManager
getSceneByID	SessionServer/SessionManager.cpp	/^SceneSession * SceneSessionManager::getSceneByID(DWORD id)$/;"	f	class:SceneSessionManager
getSceneByID	base/zSceneManager.h	/^	zScene * getSceneByID(DWORD id)$/;"	f	class:zSceneManager
getSceneByName	ScenesServer/SceneManager.cpp	/^Scene * SceneManager::getSceneByName( const char * name)$/;"	f	class:SceneManager
getSceneByName	SessionServer/SessionManager.cpp	/^SceneSession * SceneSessionManager::getSceneByName(const char *name)$/;"	f	class:SceneSessionManager
getSceneByName	base/zSceneManager.h	/^	zScene * getSceneByName( const char * name)$/;"	f	class:zSceneManager
getSceneByTempID	ScenesServer/SceneManager.cpp	/^Scene * SceneManager::getSceneByTempID( DWORD tempid)$/;"	f	class:SceneManager
getSceneByTempID	SessionServer/SessionManager.cpp	/^SceneSession * SceneSessionManager::getSceneByTempID(DWORD tempid)$/;"	f	class:SceneSessionManager
getSceneByTempID	base/zSceneManager.h	/^	zScene * getSceneByTempID( DWORD tempid)$/;"	f	class:zSceneManager
getSceneEntryByPos	ScenesServer/zSceneEntryIndex.cpp	/^zSceneEntry *zSceneEntryIndex::getSceneEntryByPos(zSceneEntry::SceneEntryType type,const zPos &pos,const bool bState,const zSceneEntry::SceneEntryState byState)$/;"	f	class:zSceneEntryIndex
getSceneEntryPk	ScenesServer/SceneUser.cpp	/^SceneEntryPk* SceneUser::getSceneEntryPk(DWORD entryType,DWORD entryID) const$/;"	f	class:SceneUser
getSceneNpcByPos	ScenesServer/Scene.cpp	/^SceneNpc *Scene::getSceneNpcByPos(const zPos &pos,const bool bState,const zSceneEntry::SceneEntryState byState)$/;"	f	class:Scene
getSceneNpcType	ScenesServer/SceneNpc.cpp	/^const SceneNpc::SceneNpcType &SceneNpc::getSceneNpcType() const$/;"	f	class:SceneNpc
getSceneObjectByPos	ScenesServer/Scene.cpp	/^zSceneObject *Scene::getSceneObjectByPos(const zPos &pos)$/;"	f	class:Scene
getSceneUserByPos	ScenesServer/Scene.cpp	/^SceneUser *Scene::getSceneUserByPos(const zPos &pos,const bool bState,const zSceneEntry::SceneEntryState byState)$/;"	f	class:Scene
getScreenByRange	ScenesServer/zSceneEntryIndex.cpp	/^const zPosIVector &zSceneEntryIndex::getScreenByRange(const zPos &pos,const int range)$/;"	f	class:zSceneEntryIndex
getScreenDirect	ScenesServer/zSceneEntryIndex.h	/^    int getScreenDirect(const zPosI posiorg,const zPosI posinew) const$/;"	f	class:zSceneEntryIndex
getScreenX	ScenesServer/zSceneEntryIndex.h	/^    const DWORD getScreenX() const { return screenx; }$/;"	f	class:zSceneEntryIndex
getScreenY	ScenesServer/zSceneEntryIndex.h	/^    const DWORD getScreenY() const { return screeny; }$/;"	f	class:zSceneEntryIndex
getSec	base/zTime.h	/^	int getSec()$/;"	f	class:zTime
getSecondTarget	ScenesServer/SceneNpc.cpp	/^SceneEntryPk * SceneNpc::getSecondTarget()$/;"	f	class:SceneNpc
getSelectInfo	RecordServer/RecordTask.cpp	/^bool RecordTask::getSelectInfo(DWORD accid, DWORD countryid)$/;"	f	class:RecordTask
getSelectStates	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::getSelectStates(Cmd::stSelectReturnStatesPropertyUserCmd *buf,unsigned long maxSize)$/;"	f	class:SkillStatusManager
getSelectUserInfo	GatewayServer/GateUser.h	/^	Cmd::SelectUserInfo *getSelectUserInfo(WORD num)$/;"	f	class:GateSelectUserSession
getSelectUserInfoByID	GatewayServer/GateUser.h	/^	const Cmd::SelectUserInfo *getSelectUserInfoByID(DWORD charid) const$/;"	f	class:GateSelectUserSession
getSelfEquip	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::getSelfEquip(DWORD userID, zCard *ret)$/;"	f	class:ChallengeGame
getSelfHero	ScenesServer/ChallengeGame.cpp	/^zCard* ChallengeGame::getSelfHero(DWORD userID)$/;"	f	class:ChallengeGame
getSendBuffer	ScenesServer/SceneUser.cpp	/^	inline const BYTE *getSendBuffer()$/;"	f	struct:GetAllRemovePosNpc
getSendBuffer	ScenesServer/SceneUser.cpp	/^	inline const BYTE *getSendBuffer()$/;"	f	struct:GetAllRemovePosUser
getSepcialNpc	ScenesServer/SceneNpcManager.h	/^    MonkeyNpcs &getSepcialNpc()$/;"	f	class:SceneNpcManager
getServer	SuperServer/ServerManager.cpp	/^ServerTask *ServerManager::getServer(WORD wdServerID)$/;"	f	class:ServerManager
getServerCountryID	ScenesServer/SceneManager.h	/^    WORD getServerCountryID()$/;"	f	class:SceneManager
getServerID	GatewayServer/BillClient.h	/^	const WORD getServerID() const$/;"	f	class:BillClient
getServerID	GatewayServer/MiniClient.h	/^	const WORD getServerID() const$/;"	f	class:MiniClient
getServerID	GatewayServer/SceneClient.h	/^	const WORD getServerID() const$/;"	f	class:SceneClient
getServerID	ScenesServer/MiniClient.h	/^    const WORD getServerID() const$/;"	f	class:MiniClient
getServerID	base/zSubNetService.h	/^	const WORD getServerID() const$/;"	f	class:zSubNetService
getServerInfo	SuperServer/SuperServer.cpp	/^bool SuperService::getServerInfo()$/;"	f	class:SuperService
getServerType	base/zSubNetService.h	/^	const WORD getServerType() const$/;"	f	class:zSubNetService
getSize	ScenesServer/CounterManager.cpp	/^int CounterManager::getSize()$/;"	f	class:CounterManager
getSize	ScenesServer/SceneUser.cpp	/^	inline const int getSize() const$/;"	f	struct:GetAllRemovePosNpc
getSize	ScenesServer/SceneUser.cpp	/^	inline const int getSize() const$/;"	f	struct:GetAllRemovePosUser
getSkillByTempID	ScenesServer/SkillManager.cpp	/^zSkill *UserSkillM::getSkillByTempID(DWORD id)$/;"	f	class:UserSkillM
getSourceZoneInfo	RecordServer/RecordTask.cpp	/^DWORD RecordTask::getSourceZoneInfo(DWORD accid, DWORD userid, DWORD tozone, DWORD &newuserid, DWORD &offlineTime)$/;"	f	class:RecordTask
getSpeedRate	ScenesServer/SceneNpc.cpp	/^float SceneNpc::getSpeedRate()$/;"	f	class:SceneNpc
getState	ScenesServer/ChallengeGame.cpp	/^ChallengeState ChallengeGame::getState() const$/;"	f	class:ChallengeGame
getState	base/zSceneEntry.h	/^	inline const SceneEntryState & getState() const$/;"	f	struct:zSceneEntry
getState	base/zTCPClientTask.h	/^	const ConnState getState() const$/;"	f	class:zTCPClientTask
getState	base/zTCPTask.h	/^	const zTCPTask_State getState() const$/;"	f	class:zTCPTask
getState	base/zTCPTaskPool.h	/^	const int getState() const$/;"	f	class:zTCPTaskPool
getStateString	base/zTCPClientTask.h	/^	const char *getStateString(const ConnState state)$/;"	f	class:zTCPClientTask
getStateString	base/zTCPTask.h	/^	const char *getStateString(const zTCPTask_State state) const$/;"	f	class:zTCPTask
getSummonAppendDamage	ScenesServer/SceneEntryPk.h	/^    virtual void getSummonAppendDamage(WORD &minDamage,WORD &maxDamage){};$/;"	f	struct:SceneEntryPk
getSummonAppendDamage	ScenesServer/SceneUser.cpp	/^void SceneUser::getSummonAppendDamage(WORD &minDamage,WORD &maxDamage)$/;"	f	class:SceneUser
getTableName	base/zMetaData.h	/^	const char* getTableName() const$/;"	f	class:DBFieldSet
getTableStart	roleRegServer/roleRegServer.h	/^	WORD getTableStart()$/;"	f	class:roleRegService
getTablesEnd	roleRegServer/roleRegServer.h	/^	WORD getTablesEnd()$/;"	f	class:roleRegService
getTask	SessionServer/Session.h	/^    SessionTask *  getTask() const$/;"	f	class:Session
getTaskByID	BillServer/BillTaskManager.cpp	/^BillTask *BillTaskManager::getTaskByID(const WORD wdServerID)$/;"	f	class:BillTaskManager
getTax	ScenesServer/Scene.h	/^    const DWORD getTax() const { return countryTax; }$/;"	f	class:Scene
getTempID	FLServer/LoginTask.h	/^	const DWORD getTempID() const$/;"	f	class:LoginTask
getTempID	SuperServer/FLClient.h	/^    const WORD getTempID() const$/;"	f	class:FLClient
getTempID	SuperServer/InfoClient.h	/^    const DWORD getTempID() const$/;"	f	class:InfoClient
getTempID	SuperServer/RolechangeClient.h	/^    const DWORD getTempID() const$/;"	f	class:RolechangeClient
getThreadName	base/zThread.h	/^	const std::string &getThreadName() const$/;"	f	class:zThread
getTile	ScenesServer/Scene.h	/^    const Tile* getTile(const zPos &pos) const$/;"	f	class:Scene
getTimeString	base/zMisc.h	/^static char *getTimeString(time_t t,char *buffer,const int bufferlen)$/;"	f	class:zMisc
getTimeString	base/zMisc.h	/^static char *getTimeString(time_t t,char *buffer,const int bufferlen,const char *format)$/;"	f	class:zMisc
getTopMaster	ScenesServer/SceneNpc.h	/^  virtual SceneEntryPk *getTopMaster(){return this;}$/;"	f	class:SceneNpc
getTopMaster	ScenesServer/SceneUser.cpp	/^SceneEntryPk *SceneUser::getTopMaster()$/;"	f	class:SceneUser
getType	BillServer/BillTask.h	/^    const WORD getType() const$/;"	f	class:BillTask
getType	FLServer/FLServer.h	/^	const WORD getType() const$/;"	f	class:FLService
getType	RecordServer/RecordTask.h	/^    const WORD getType() const$/;"	f	class:RecordTask
getType	ScenesServer/SceneTask.h	/^    const WORD getType() const$/;"	f	class:SceneTask
getType	SessionServer/SessionTask.h	/^    const WORD getType() const$/;"	f	class:SessionTask
getType	SuperServer/ServerTask.h	/^    const WORD getType() const$/;"	f	class:ServerTask
getType	SuperServer/SuperServer.h	/^    const WORD getType() const$/;"	f	class:SuperService
getType	base/zSceneEntry.h	/^	inline const SceneEntryType & getType() const$/;"	f	struct:zSceneEntry
getType	roleRegServer/roleRegServer.h	/^	const WORD getType() const$/;"	f	class:roleRegService
getUnionDare	ScenesServer/Scene.h	/^    bool getUnionDare() const { return this->isUnionDare; }$/;"	f	class:Scene
getUniqeID	BillServer/BillUserManager.cpp	/^bool BillUserManager::getUniqeID(DWORD &tempid)$/;"	f	class:BillUserManager
getUniqeID	GatewayServer/GateUserManager.cpp	/^bool GateUserManager::getUniqeID(DWORD &tempid)$/;"	f	class:GateUserManager
getUniqeID	ScenesServer/Chat.cpp	/^bool ChannelM::getUniqeID(DWORD &tempid)$/;"	f	class:ChannelM
getUniqeID	ScenesServer/SceneManager.cpp	/^bool SceneManager::getUniqeID(DWORD &tempid)$/;"	f	class:SceneManager
getUniqeID	ScenesServer/SceneNpcManager.h	/^    bool getUniqeID(DWORD &tempid) { return true; }       $/;"	f	class:SceneNpcManager
getUniqeID	ScenesServer/SceneUserManager.cpp	/^bool SceneUserManager::getUniqeID(DWORD& tempid)$/;"	f	class:SceneUserManager
getUniqeID	ScenesServer/SkillManager.cpp	/^bool SkillManager::getUniqeID(DWORD &tempid)$/;"	f	class:SkillManager
getUniqeID	SessionServer/SessionChat.cpp	/^bool SessionChannelManager::getUniqeID(DWORD &tempid)$/;"	f	class:SessionChannelManager
getUniqeID	SessionServer/SessionManager.cpp	/^bool SceneSessionManager::getUniqeID(DWORD &tempid)$/;"	f	class:SceneSessionManager
getUniqeID	SessionServer/SessionManager.cpp	/^bool UserSessionManager::getUniqeID(DWORD &tempid)$/;"	f	class:UserSessionManager
getUniqueID	base/zDatabase.h	/^	const DWORD getUniqueID() const$/;"	f	struct:SkillBase
getUniqueID	base/zDatabase.h	/^    const DWORD getUniqueID() const$/;"	f	struct:CardBase
getUniqueID	base/zDatabase.h	/^    const DWORD getUniqueID() const$/;"	f	struct:NpcBase
getUniqueID	base/zDatabase.h	/^    const DWORD getUniqueID() const$/;"	f	struct:ObjectBase
getUser	Robot/Client.h	/^	inline std::string& getUser() {return user;}$/;"	f	class:Client
getUserByAccID	GatewayServer/GateUserManager.cpp	/^GateUser * GateUserManager::getUserByAccID(DWORD accid)$/;"	f	class:GateUserManager
getUserByID	BillServer/BillUserManager.h	/^    BillUser * getUserByID( DWORD id)$/;"	f	class:BillUserManager
getUserByID	GatewayServer/GateUserManager.cpp	/^zUser *GateUserManager::getUserByID(DWORD id)$/;"	f	class:GateUserManager
getUserByID	ScenesServer/Scene.cpp	/^SceneUser *Scene::getUserByID(DWORD userid)$/;"	f	class:Scene
getUserByID	ScenesServer/SceneUserManager.cpp	/^SceneUser * SceneUserManager::getUserByID( DWORD id)$/;"	f	class:SceneUserManager
getUserByID	ScenesServer/SceneUserManager.cpp	/^SceneUser* SceneRecycleUserManager::getUserByID(DWORD id)$/;"	f	class:SceneRecycleUserManager
getUserByID	SessionServer/SessionManager.cpp	/^UserSession *UserSessionManager::getUserByID(DWORD id)$/;"	f	class:UserSessionManager
getUserByID	base/zUserManager.h	/^	zUser * getUserByID( DWORD id)$/;"	f	class:zUserManager
getUserByIDOut	ScenesServer/SceneUserManager.cpp	/^SceneUser * SceneUserManager::getUserByIDOut( DWORD id)$/;"	f	class:SceneUserManager
getUserByIndex	GatewayServer/SceneClient.h	/^	GateUser* getUserByIndex(const DWORD id)$/;"	f	class:SceneClient
getUserByName	ScenesServer/Scene.cpp	/^SceneUser *Scene::getUserByName(const char *username)$/;"	f	class:Scene
getUserByName	ScenesServer/SceneUserManager.cpp	/^SceneUser * SceneUserManager::getUserByName( const char * name)$/;"	f	class:SceneUserManager
getUserByName	base/zUserManager.h	/^	zUser * getUserByName( const char * name)$/;"	f	class:zUserManager
getUserByNameOut	ScenesServer/SceneUserManager.cpp	/^SceneUser * SceneUserManager::getUserByNameOut( const char * name)$/;"	f	class:SceneUserManager
getUserByTempID	ScenesServer/Scene.cpp	/^SceneUser *Scene::getUserByTempID(DWORD usertempid)$/;"	f	class:Scene
getUserByTempID	ScenesServer/SceneUserManager.cpp	/^SceneUser * SceneUserManager::getUserByTempID( DWORD tempid)$/;"	f	class:SceneUserManager
getUserByTempID	SessionServer/SessionManager.cpp	/^UserSession *UserSessionManager::getUserByTempID(DWORD tempid)$/;"	f	class:UserSessionManager
getUserByTempID	base/zUserManager.h	/^	zUser * getUserByTempID( DWORD tempid)$/;"	f	class:zUserManager
getUserByTempIDOut	ScenesServer/SceneUserManager.cpp	/^SceneUser * SceneUserManager::getUserByTempIDOut( DWORD tempid)$/;"	f	class:SceneUserManager
getUserCardByThisID	ScenesServer/ChallengeGameManager.cpp	/^zCard* ChallengeGameManager::getUserCardByThisID(DWORD gameID, DWORD thisID)$/;"	f	class:ChallengeGameManager
getUserCount	SessionServer/Session.h	/^    DWORD getUserCount() const$/;"	f	class:SceneSession
getUserHero	ScenesServer/ChallengeGameManager.cpp	/^bool ChallengeGameManager::getUserHero(DWORD gameID, DWORD userID, zCard *ret)$/;"	f	class:ChallengeGameManager
getUserSessionByName	SessionServer/SessionManager.cpp	/^UserSession * UserSessionManager::getUserSessionByName( const char * name)$/;"	f	class:UserSessionManager
getVM	ScenesServer/script.cpp	/^LuaVM* ScriptingSystemLua::getVM(int index)$/;"	f	class:ScriptingSystemLua
getVipTime	BillServer/BillManager.cpp	/^DWORD BillManager::getVipTime(DWORD acc)$/;"	f	class:BillManager
getWDay	base/zTime.h	/^	int getWDay()$/;"	f	class:zTime
getWayPoint	ScenesServer/Scene.h	/^    WayPoint *getWayPoint(const char *filename) { return wpm.getWayPoint(filename); }$/;"	f	class:Scene
getWayPoint	ScenesServer/Scene.h	/^    WayPoint *getWayPoint(const zPos &pos) { return wpm.getWayPoint(pos); }$/;"	f	class:Scene
getWayPoint	ScenesServer/WayPoint.cpp	/^WayPoint *WayPointM::getWayPoint(const char *filename)$/;"	f	class:WayPointM
getWayPoint	ScenesServer/WayPoint.cpp	/^WayPoint *WayPointM::getWayPoint(const zPos &pos)$/;"	f	class:WayPointM
getWeaponPower	ScenesServer/SceneUser.cpp	/^SWORD SceneUser::getWeaponPower(int powerkind)$/;"	f	class:SceneUser
getWgLog	ScenesServer/SceneUser.cpp	/^void SceneUser::getWgLog(DWORD data)$/;"	f	class:SceneUser
getYear	base/zTime.h	/^	int getYear()$/;"	f	class:zTime
getZoneID	FLServer/ServerTask.h	/^	const GameZone_t &getZoneID() const$/;"	f	class:ServerTask
getZoneID	FLServer/UserTask.h	/^	const GameZone_t &getZoneID() const$/;"	f	class:UserTask
getZoneID	SuperServer/SuperServer.h	/^    const GameZone_t &getZoneID() const$/;"	f	class:SuperService
getZoneID	roleRegServer/RoleTask.h	/^	const GameZone_t &getZoneID() const$/;"	f	class:RoleTask
getZoneName	SuperServer/SuperServer.h	/^    const std::string &getZoneName() const$/;"	f	class:SuperService
getZoneState	RecordServer/RecordTask.cpp	/^DWORD RecordTask::getZoneState(DWORD accid, DWORD userid, DWORD tozone)$/;"	f	class:RecordTask
getZoneType	ScenesServer/Scene.cpp	/^int Scene::getZoneType(const zPos &pos) const$/;"	f	class:Scene
get_Freedom_con	ScenesServer/zObject.h	/^  WORD get_Freedom_con()		const { return Freedom.con_Attribute;}$/;"	f	class:Equips
get_Freedom_dex	ScenesServer/zObject.h	/^  WORD get_Freedom_dex()		const { return Freedom.dex_Attribute;}$/;"	f	class:Equips
get_Freedom_inte	ScenesServer/zObject.h	/^  WORD get_Freedom_inte()		const { return Freedom.inte_Attribute;}$/;"	f	class:Equips
get_Freedom_spi	ScenesServer/zObject.h	/^  WORD get_Freedom_spi()		const { return Freedom.spi_Attribute;}$/;"	f	class:Equips
get_Freedom_str	ScenesServer/zObject.h	/^  WORD get_Freedom_str()		const { return Freedom.str_Attribute;}$/;"	f	class:Equips
get_SeptManteau	tmpcode/commond.h	/^        get_SeptManteau()$/;"	f	struct:get_SeptManteau
get_SeptManteau	tmpcode/commond.h	/^struct get_SeptManteau : public stSeptUserCmd$/;"	s
get_creator	ScenesServer/QuestMaker.h	/^  C* get_creator(const I& id) const$/;"	f	class:ProductFactory
get_dump_arg	base/xml/xml_utility.h	/^	virtual argument_dump* get_dump_arg()$/;"	f	struct:detail::argument
get_dump_arg	base/xml/xml_utility.h	/^	virtual argument_dump* get_dump_arg()$/;"	f	struct:detail::argument_dump
get_familyvar	ScenesServer/script_func.cpp	/^Vars * get_familyvar(SceneUser* user,int dummy)$/;"	f
get_heigh	base/CharBase.h	/^  DWORD get_heigh;\/\/ÂæóÂà∞È´òÁ∫ßË£ÖÂ§á‰∏™Êï∞$/;"	m	struct:CharTest
get_hpleech_effect	ScenesServer/zObject.h	/^  WORD get_hpleech_effect()  const  {return hpleech.effect;}	 \/\/x%Âê∏Êî∂ÁîüÂëΩÂÄºy$/;"	f	class:Equips
get_hpleech_odds	ScenesServer/zObject.h	/^  BYTE get_hpleech_odds()    const  {return hpleech.odds;}		 $/;"	f	class:Equips
get_init_name_arg	base/xml/xml_utility.h	/^	virtual argument_init_name* get_init_name_arg()$/;"	f	struct:detail::argument
get_init_name_arg	base/xml/xml_utility.h	/^        virtual argument_init_name* get_init_name_arg()$/;"	f	struct:detail::argument_init_name
get_init_value_arg	base/xml/xml_utility.h	/^	virtual argument_init_value* get_init_value_arg() $/;"	f	struct:detail::argument
get_init_value_arg	base/xml/xml_utility.h	/^	virtual argument_init_value* get_init_value_arg()$/;"	f	struct:detail::argument_init_value
get_instance	ScenesServer/script.cpp	/^ScriptQuest& ScriptQuest::get_instance()$/;"	f	class:ScriptQuest
get_key_des	Robot/LoginClient.h	/^    void get_key_des(char* key)$/;"	f	class:LoginClient
get_manteau	tmpcode/commond.h	/^	get_manteau()$/;"	f	struct:get_manteau
get_manteau	tmpcode/commond.h	/^struct get_manteau : public stUnionUserCmd$/;"	s
get_material	base/CharBase.h	/^  DWORD get_material;\/\/ÂæóÂà∞ÂéüÊñô‰∏™Êï∞$/;"	m	struct:CharTest
get_menu	ScenesServer/Quest.cpp	/^int QuestList::get_menu(char* menu,int& status)$/;"	f	class:QuestList
get_money	base/CharBase.h	/^  DWORD get_money;\/\/ÂæóÂà∞Èì∂Â≠êÊï∞$/;"	m	struct:CharTest
get_mpleech_effect	ScenesServer/zObject.h	/^  WORD get_mpleech_effect()  const  {return mpleech.effect;}     \/\/x%Âê∏Êî∂Ê≥ïÊúØÂÄºy$/;"	f	class:Equips
get_mpleech_odds	ScenesServer/zObject.h	/^  BYTE get_mpleech_odds()    const  {return mpleech.odds;}      $/;"	f	class:Equips
get_ob	ScenesServer/script_func.cpp	/^DWORD get_ob(SceneUser* user,int id,int level )$/;"	f
get_parse_arg	base/xml/xml_utility.h	/^	virtual argument_parse* get_parse_arg()$/;"	f	struct:detail::argument
get_parse_arg	base/xml/xml_utility.h	/^	virtual argument_parse* get_parse_arg()$/;"	f	struct:detail::argument_parse
get_scroll	base/CharBase.h	/^  DWORD get_scroll;\/\/ÂæóÂà∞Âç∑ËΩ¥‰∏™Êï∞$/;"	m	struct:CharTest
get_socket	base/CharBase.h	/^  DWORD get_socket;\/\/ÂæóÂà∞Â∏¶Â≠îË£ÖÂ§á‰∏™Êï∞$/;"	m	struct:CharTest
get_stone	base/CharBase.h	/^  DWORD get_stone;\/\/ÂæóÂà∞ÂÆùÁü≥‰∏™Êï∞$/;"	m	struct:CharTest
get_time	ScenesServer/script_func.cpp	/^int get_time()$/;"	f
get_tongvar	ScenesServer/script_func.cpp	/^Vars * get_tongvar(SceneUser* user,int dummy)$/;"	f
get_uservar	ScenesServer/script_func.cpp	/^Vars * get_uservar(SceneUser* user,int dummy)$/;"	f
get_valid_quest	ScenesServer/QuestEvent.cpp	/^void EventManager<OnVisit>::get_valid_quest(SceneUser& user,bool showID)$/;"	f	class:EventManager
get_valid_quest_str	ScenesServer/QuestEvent.cpp	/^void EventManager<OnVisit>::get_valid_quest_str(SceneUser &user)$/;"	f	class:EventManager
get_value	ScenesServer/Quest.h	/^  bool get_value(const std::string& name,T& value)$/;"	f	class:Vars
get_var	ScenesServer/script_func.cpp	/^int get_var(Vars* vars,const char* name)$/;"	f
get_varS	ScenesServer/script_func.cpp	/^const char *  get_varS(Vars* vars,const char* name)$/;"	f
giddy	ScenesServer/SceneNpc.h	/^  DWORD giddy;   \/\/\/ÊîªÂáªÁöÑÊó∂ÂÄô‰ΩøÂØπÊñπÁú©ÊôïÁöÑÂá†Áéá$/;"	m	class:SceneNpc
gift	base/xmlparser/giftbag.h	/^    xml_node_map<DWORD,Gift>	gift;$/;"	m	struct:GiftBagConfig
giftBagName	tmpcode/commond.h	/^	char giftBagName[MAX_NAMESIZE];$/;"	m	struct:stGiftBagResultUserCmd
giftInfo	base/SessionCommand.h	/^    struct giftInfo$/;"	s	namespace:Cmd::Session
giftbox_clientform	tmpcode/commond.h	/^	BYTE giftbox_clientform;        \/\/øÕªß∂ÀΩÁ√Ê 0:‘≠¿¥ΩÁ√Ê≤ª–Ë“™—°‘Ò£¨1:–¬µƒ–Ë“™‘ø≥◊µƒΩÁ√Ê$/;"	m	struct:ReturnFocusPropertyUserCmd
giftbox_clientform	tmpcode/commond.h	/^	BYTE giftbox_clientform;        \/\/øÕªß∂ÀΩÁ√Ê 0:‘≠¿¥ΩÁ√Ê≤ª–Ë“™—°‘Ò£¨1:–¬µƒ–Ë“™‘ø≥◊µƒΩÁ√Ê$/;"	m	struct:ReturnOpenBoxPropertyUserCmd
giftbox_id	tmpcode/commond.h	/^    DWORD giftbox_id;               \/\/±¶∫–Œ®“ªID$/;"	m	struct:ReturnOpenBoxPropertyUserCmd
giftbox_id	tmpcode/commond.h	/^    DWORD giftbox_id;   \/\/±¶∫–Œ®“ªID$/;"	m	struct:ReturnFocusPropertyUserCmd
giftbox_type	tmpcode/commond.h	/^		BYTE giftbox_type;     \/\/KOK20090505±¶œ‰¿‡–Õ£∫ƒø«∞∑÷Œ™NORMALGIFTBOX∆’Õ®±¶œ‰£¨DAILYGIFTBOX√ø»’±¶œ‰$/;"	m	struct:CloseGiftBoxPropertyUserCmd
giftbox_type	tmpcode/commond.h	/^	BYTE giftbox_type;  \/\/KOK20090505±¶œ‰¿‡–Õ£∫ƒø«∞∑÷Œ™NORMALGIFTBOX∆’Õ®±¶œ‰£¨DAILYGIFTBOX√ø»’±¶œ‰$/;"	m	struct:ReturnFocusPropertyUserCmd
giftbox_type	tmpcode/commond.h	/^        BYTE giftbox_type;              \/\/KOK20090505±¶œ‰¿‡–Õ£∫ƒø«∞∑÷Œ™NORMALGIFTBOX∆’Õ®±¶œ‰£¨DAILYGIFTBOX√ø»’±¶œ‰$/;"	m	struct:LaterSelectGiftBoxPropertyUserCmd
giftbox_type	tmpcode/commond.h	/^        BYTE giftbox_type;              \/\/KOK20090505±¶œ‰¿‡–Õ£∫ƒø«∞∑÷Œ™NORMALGIFTBOX∆’Õ®±¶œ‰£¨DAILYGIFTBOX√ø»’±¶œ‰$/;"	m	struct:SelectGiftBoxPropertyUserCmd
giftbox_type	tmpcode/commond.h	/^    BYTE giftbox_type;              \/\/KOK20090505±¶œ‰¿‡–Õ£∫ƒø«∞∑÷Œ™NORMALGIFTBOX∆’Õ®±¶œ‰£¨DAILYGIFTBOX√ø»’±¶œ‰$/;"	m	struct:ReturnOpenBoxPropertyUserCmd
givePetPoint	ScenesServer/ScenePk.cpp	/^void SceneUser::givePetPoint()$/;"	f	class:SceneUser
giveUpBattle	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::giveUpBattle(SceneUser &user)$/;"	f	class:ChallengeGame
globalSys	ScenesServer/script_func.cpp	/^void globalSys(SceneUser* sender,const char* msg)$/;"	f
gm	base/SessionCommand.h	/^      char gm[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_forbidTalk_SceneSession
gmName	base/GmToolCommand.h	/^      char gmName[32];$/;"	m	struct:Cmd::GmTool::t_Msg_GmTool
gmName	base/GmToolCommand.h	/^      char gmName[32];$/;"	m	struct:Cmd::GmTool::t_Msg_Reply_GmTool
gmName	base/GmToolCommand.h	/^      char gmName[MAX_NAMESIZE];$/;"	m	struct:Cmd::GmTool::t_Chat_GmTool
gmName	tmpcode/commond.h	/^	char gmName[MAX_NAMESIZE];$/;"	m	struct:stChatGm
gm_cmd	base/SceneCommand.h	/^	  BYTE gm_cmd;$/;"	m	struct:Cmd::Scene::t_gmCommand_SceneGate
gm_cmd	base/SessionCommand.h	/^      BYTE gm_cmd;\/\/GMÊåá‰ª§$/;"	m	struct:Cmd::Session::t_gmCommand_SceneSession
gm_mode	ScenesServer/Chat.h	/^      gm_mode =    0x02,$/;"	e	enum:Gm::__anon179
gmlogger	ScenesServer/ScenesServer.cpp	/^zLogger * ScenesService::gmlogger = NULL;$/;"	m	class:ScenesService
gmlogger	ScenesServer/ScenesServer.h	/^    static zLogger* gmlogger;$/;"	m	class:ScenesService
goTo	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::goTo(const zPos &pos)$/;"	f	class:SceneNpc
goTo	ScenesServer/SceneUser.cpp	/^bool SceneUser::goTo(zPos &newPos)$/;"	f	class:SceneUser
goTo	ScenesServer/script_func.cpp	/^bool goTo(SceneUser *pUser,const char *para)$/;"	f
goTo	base/zAStar.h	/^inline bool zAStar<step,radius>::goTo(const zPos &srcPos,const zPos &destPos)$/;"	f	class:zAStar
goToRandomRect	ScenesServer/SceneUser.cpp	/^bool SceneUser::goToRandomRect(zPos center,WORD rectx,WORD recty)$/;"	f	class:SceneUser
goToRandomScreen	ScenesServer/SceneEntryPk.h	/^    virtual void goToRandomScreen(){};$/;"	f	struct:SceneEntryPk
goToRandomScreen	ScenesServer/SceneNpc.cpp	/^void SceneNpc::goToRandomScreen()$/;"	f	class:SceneNpc
goToRandomScreen	ScenesServer/SceneUser.cpp	/^void SceneUser::goToRandomScreen()$/;"	f	class:SceneUser
goTo_Gm	ScenesServer/Chat.cpp	/^bool Gm::goTo_Gm(SceneUser *pUser,const char *para)$/;"	f	class:Gm
god	ScenesServer/Chat.cpp	/^bool Gm::god(SceneUser *pUser,const char *para)$/;"	f	class:Gm
godseal	base/Object.h	/^	BYTE godseal;   \/\/…Ò”°¿‡–Õ∂®“Â‘⁄Command.h÷–$/;"	m	struct:t_Object
goi	ScenesServer/ObjectManager.cpp	/^GlobalObjectIndex *const goi=GlobalObjectIndex::getInstance();$/;"	v
gold	BillServer/BillManager.h	/^  double gold;    \/**< ÈáëÂ∏ÅÊï∞Èáè *\/$/;"	m	struct:BillInfo
gold	BillServer/BillUser.h	/^    DWORD gold;    \/**< ÈáëÂ∏ÅÊï∞Èáè *\/$/;"	m	class:BillUser
gold	ScenesServer/zObject.h	/^    zObject *gold;$/;"	m	class:MainPack
gold	base/CharBase.h	/^  DWORD gold;          \/\/\/ ÈáëÂ∏Å$/;"	m	struct:CharBase
gold	base/Command.h	/^  ConsignHistoryType gold;$/;"	m	struct:Cmd::stNewHistoryStockUserCmd
gold	base/Command.h	/^  DWORD gold;  \/\/\/ÈáëÂ∏ÅÊï∞$/;"	m	struct:Cmd::t_MainUserData
gold	base/Command.h	/^  DWORD gold;$/;"	m	struct:Cmd::stBidAuction
gold	base/SessionCommand.h	/^      DWORD gold;$/;"	m	struct:Cmd::Session::t_SpendGold_SceneSession
gold	base/SessionCommand.h	/^      DWORD gold;$/;"	m	struct:Cmd::Session::t_bidAuction_SceneSession
gold	base/SessionCommand.h	/^      DWORD gold;$/;"	m	struct:Cmd::Session::t_checkBidAuction_SceneSession
gold	base/SessionCommand.h	/^      DWORD gold;$/;"	m	struct:Cmd::Session::t_getMailItem_SceneSession
gold	base/zDatabase.h	/^	DWORD gold;$/;"	m	struct:zObjectB::material
gold	tmpcode/commond.h	/^	DWORD gold;	\/\/\/ÀÆæß±“ ˝$/;"	m	struct:t_MainUserData
gold	tmpcode/commond.h	/^        DWORD gold;$/;"	m	struct:stBidAuction
goldgive	base/CharBase.h	/^  DWORD goldgive;        \/\/\/ ÈáëÂ∏ÅÂÜ≤ÂÄºËµ†ÂìÅÊï∞Èáè$/;"	m	struct:CharBase
goldlistNum	BillServer/BillUser.h	/^    DWORD goldlistNum;  \/\/\/ ‰∏™‰∫∫ËÇ°Á•®ÂçñÂçïÊï∞Èáè$/;"	m	class:BillUser
goldrating	base/zDatabase.h	/^    DWORD goldrating;$/;"	m	struct:zObjectB
golds	base/zDatabase.h	/^    std::vector<DWORD> golds;$/;"	m	struct:zObjectB
goldstore	ScenesServer/zObject.cpp	/^void StorePack::goldstore(SceneUser *pThis,bool notify)$/;"	f	class:StorePack
gomap	ScenesServer/Chat.cpp	/^bool Gm::gomap(SceneUser *pUser,const char *para)$/;"	f	class:Gm
gomap	ScenesServer/script_func.cpp	/^bool gomap(SceneUser *pUser,const char *para)$/;"	f
gomap_Gm	ScenesServer/Chat.cpp	/^bool Gm::gomap_Gm(SceneUser *pUser,const char *para)$/;"	f	class:Gm
gomaptype	base/CharBase.h	/^  DWORD gomaptype;      \/\/Ë∑≥Âú∞ÂõæÁ±ªÂûã$/;"	m	struct:CharBase
goodReputation	tmpcode/commond.h	/^		DWORD goodReputation;   \/\/∫√∆¿∂»$/;"	m	struct:stRet32AttentionDragonUserCmd::__anon375
goodReputation	tmpcode/commond.h	/^	DWORD goodReputation;   \/\/∫√∆¿∂»$/;"	m	struct:stRetVoteInChallengeDragonUserCmd
goodness	base/CharBase.h	/^  DWORD goodness;            \/\/\/ ÂñÑÊÅ∂Â∫¶$/;"	m	struct:CharBase
goodness	base/Command.h	/^  DWORD goodness;            \/\/\/ ÂñÑÊÅ∂Â∫¶$/;"	m	struct:Cmd::t_UserData
goodness	base/Command.h	/^  DWORD goodness;$/;"	m	struct:Cmd::t_MainUserData
goodness	tmpcode/commond.h	/^	DWORD   goodness;    \/\/◊Ô∂Ò÷µ$/;"	m	struct:t_MainUserData
goodness	tmpcode/commond.h	/^	DWORD goodness;						\/\/\/ …∆∂Ò∂»$/;"	m	struct:t_UserData
goodnessPeriod	ScenesServer/ScenePk.h	/^  static const int goodnessPeriod = 60 * 1000;$/;"	m	struct:ScenePkState
goods	tmpcode/commond.h	/^	} goods[0];$/;"	m	struct:stRetBuyGoodsListBusiness	typeref:struct:stRetBuyGoodsListBusiness::__anon346
goods	tmpcode/commond.h	/^	} goods[0];$/;"	m	struct:stRetSaleGoodsListBusiness	typeref:struct:stRetSaleGoodsListBusiness::__anon347
goods	tmpcode/commond.h	/^    DWORD goods[0];         $/;"	m	struct:stResultCheckGoodsCmd
goods	tmpcode/commond.h	/^    OneGuardGoodsGrid goods;$/;"	m	struct:rtGiveGuardGoodsSeptCmd
gotoFindPath	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::gotoFindPath(const zPos &srcPos,const zPos &destPos)$/;"	f	class:SceneNpc
gotoFindPath	base/zAStar.h	/^bool zAStar<step,radius>::gotoFindPath(const zPos &srcPos,const zPos &destPos)$/;"	f	class:zAStar
gottenLevel	tmpcode/commond.h	/^	WORD gottenLevel[0];$/;"	m	struct:stNotifyGottenLifeAwardPromoterUserCmd
gouhuoLeftTime	tmpcode/commond.h	/^	WORD  gouhuoLeftTime;	\/\/ÛÙª £”‡ ±º‰$/;"	m	struct:stInfoGouhuoUserCmd
gouhuoTempID	tmpcode/commond.h	/^	DWORD gouhuoTempID;	\/\/ÛÙªtempID$/;"	m	struct:stInfoGouhuoUserCmd
gouhuoTempID	tmpcode/commond.h	/^	DWORD gouhuoTempID;	\/\/ÛÙªtempID$/;"	m	struct:stReqDrinkGouhuoUserCmd
gouhuoType	tmpcode/commond.h	/^	BYTE gouhuoType;        \/\/ÛÙª¿‡–Õ£ª0∆’Õ®ÛÙª£ª1∏ﬂº∂ÛÙª$/;"	m	struct:stSendDrunkStateGouhuoUserCmd
grace	base/Command.h	/^  DWORD grace;$/;"	m	struct:Cmd::t_MainUserData
grace	tmpcode/commond.h	/^	DWORD grace;                    \/\/ Œƒ≤…÷µ$/;"	m	struct:t_MainUserData
gradeUpMoneyNeed	tmpcode/commond.h	/^		DWORD gradeUpMoneyNeed;         \/\/…˝µΩœ¬“ªº∂À˘–Ë“™µƒ«Æ$/;"	m	struct:stRetUnionBuildInfo::__anon269
gradeUpResource	tmpcode/commond.h	/^		}gradeUpResource[4];            \/\/…˝µΩœ¬“ªº∂À˘–Ë“™µƒ◊ ‘¥$/;"	m	struct:stRetUnionBuildInfo::__anon269	typeref:struct:stRetUnionBuildInfo::__anon269::__anon270
gradeUpTimeNeed	tmpcode/commond.h	/^		DWORD gradeUpTimeNeed;          \/\/øµΩœ¬“ªº∂À˘–Ë“™µƒ ±º‰$/;"	m	struct:stRetUnionBuildInfo::__anon269
greens	base/zDatabase.h	/^    std::vector<DWORD> greens;$/;"	m	struct:zObjectB
gridNum	tmpcode/commond.h	/^    BYTE gridNum;\/\/ªıŒÔ∏Ò◊”◊‹ ˝$/;"	m	struct:rtGuardGoodsSeptCmd
grids	tmpcode/commond.h	/^    OneGuardGoodsGrid grids[0];\/\/∏Ò◊”–≈œ¢$/;"	m	struct:rtGuardGoodsSeptCmd
groomName	tmpcode/commond.h	/^	char groomName[MAX_NAMESIZE];$/;"	m	struct:stOpenMarriagePressCmd
group	ScenesServer/Scene.cpp	/^  DWORD group;$/;"	m	struct:GetAffectScreen
group	ScenesServer/TimeTick.cpp	/^  const DWORD group;$/;"	m	struct:EverySceneEntryAction
group	base/Command.h	/^  WORD group;$/;"	m	struct:Cmd::stRelationStatusCmd
group	base/SessionCommand.h	/^	WORD group;$/;"	m	struct:Cmd::Session::t_RelationAddFriend
groupCardMap	ScenesServer/GroupCardManager.h	/^	std::map<DWORD, t_group> groupCardMap;			\/\/index<---->cards$/;"	m	class:GroupCardData
groupID	ScenesServer/ChallengeGameManager.h	/^	DWORD groupID;		\/\/∂‘’ΩµƒŒ®“ª±‡∫≈$/;"	m	class:ChallengeTmpData
groupID	SessionServer/HeroCardManager.h	/^    DWORD groupID;		\/\/Œ®“ª∑÷◊È±‡∫≈$/;"	m	struct:stMatchedInfo
groupID	base/SessionCommand.h	/^	  DWORD groupID;	$/;"	m	struct:Cmd::Session::t_CreateNewPkGame_SceneSession
groupID	base/SessionCommand.h	/^	  DWORD groupID;	$/;"	m	struct:Cmd::Session::t_RetSceneuserPkGame_SceneSession
groupName	base/Command.h	/^  BYTE groupName[MAX_NAMESIZE];   \/**< Â§ßÈôÜÂêçÁß∞ *\/$/;"	m	struct:Cmd::t_LandMass
group_name	base/Command.h	/^  char group_name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stRelation
group_name	base/Command.h	/^  char group_name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stRelationStatusCmd
group_name	base/SessionCommand.h	/^	char group_name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_RelationAddFriend
group_name	tmpcode/commond.h	/^	char group_name[MAX_NAMESIZE];  \/\/∑÷◊È√˚◊÷$/;"	m	struct:stRelation
group_name	tmpcode/commond.h	/^	char group_name[MAX_NAMESIZE];  \/\/∑÷◊È√˚◊÷$/;"	m	struct:stRelationStatusCmd
groupcardData	ScenesServer/SceneUser.h	/^    GroupCardData groupcardData;$/;"	m	struct:SceneUser
growUpDegree	tmpcode/commond.h	/^    DWORD growUpDegree;     \/\/≥…≥§∂»$/;"	m	struct:t_DragonData
guardTempID	tmpcode/commond.h	/^		DWORD guardTempID;  \/\/Ô⁄≥µµƒtempid$/;"	m	struct:stProtectSeptGuardCmd
guardTempID	tmpcode/commond.h	/^	DWORD guardTempID;      \/\/º“◊ÂÔ⁄≥µtempid$/;"	m	struct:stStateSeptGuardCmd
guardenLevel	tmpcode/commond.h	/^    BYTE guardenLevel;	\/\/ª®‘∞µ»º∂$/;"	m	struct:__anon355
guessResult	tmpcode/commond.h	/^	BYTE guessResult;\/\/0√ª”–  1±Ì æ”Æ  2 ±Ì æ ‰$/;"	m	struct:stQuestDrinkWineUserCmd
guessState	tmpcode/commond.h	/^	BYTE guessState;   \/\/”√ªß≥ˆ»≠◊¥Ã¨$/;"	m	struct:stGuessBarkeeperState
guidnum	tmpcode/commond.h	/^	DWORD   guidnum;  \/\/ …˙ŒÔ±‡∫≈int$/;"	m	struct:st_CharShow2
gujia	tmpcode/commond.h	/^        DWORD gujia;    \/\/π«º‹$/;"	m	struct:CardMainData
gum	GatewayServer/GateUserManager.h	/^	static GateUserManager *gum;$/;"	m	class:GateUserManager
gumutime	SessionServer/SessionServer.h	/^    DWORD gumutime;$/;"	m	class:SessionService
gyData	FLServer/GYListManager.h	/^	GYListContainer gyData;$/;"	m	class:GYListManager
h	tmpcode/commond.h	/^	WORD h;$/;"	m	struct:rtPictureHelpUserCmd
hadfilled	BillServer/BillCallback.h	/^  int             hadfilled;                                  \/\/ÊõæÁªèÂÖÖÂÄºÁöÑÊ†áÂøó,1=ÊõæÁªèÂÖÖÂÄº,0=Ê≤°Êúâ$/;"	m	struct:BillData
hadfilled	base/UserCommand.h	/^      int     hadfilled;      \/\/ÊõæÁªèÂÖÖÂÄºÁöÑÊ†áÂøó,1=ÊõæÁªèÂÖÖÂÄº,0=Ê≤°Êúâ$/;"	m	struct:Cmd::UserServer::t_cmd_ret
hair	base/CharBase.h	/^  DWORD hair;              \/\/\/ Â§¥ÂèëÔºåÂèëÂûãÂíåÈ¢úËâ≤$/;"	m	struct:CharBase
hair	base/Command.h	/^  DWORD hair;$/;"	m	struct:Cmd::stCreateSelectUserCmd
hair	base/RecordCommand.h	/^      DWORD hair;            \/\/\/ ËßíËâ≤ÂèëÂûã‰ª•ÂèäÈ¢úËâ≤$/;"	m	struct:Cmd::Record::t_CreateChar_GateRecord
hair	tmpcode/commond.h	/^        DWORD  hair;      \/\/  ∑¢–Õ+Õ∑∑¢—’…´        $/;"	m	struct:stCreateSelectUserCmd
hammerID	tmpcode/commond.h	/^    DWORD hammerID;$/;"	m	struct:stUseElecHammerUserCmd
hand1	ScenesServer/zCard.h	/^    HandSlot hand1;	\/\/ ÷≈∆≤€$/;"	m	class:CardSlots
hand2	ScenesServer/zCard.h	/^    HandSlot hand2;$/;"	m	class:CardSlots
handleBuyMarketObject	ScenesServer/MarketSystemManager.cpp	/^bool MarketSystemManager::handleBuyMarketObject(SceneUser& user, const DWORD index)$/;"	f	class:MarketSystemManager
handleCardAttackMagic	ScenesServer/ChallengeGameManager.cpp	/^bool ChallengeGameManager::handleCardAttackMagic(SceneUser &user, const Cmd::stCardAttackMagicUserCmd *rev)$/;"	f	class:ChallengeGameManager
handleCreateOneGroup	ScenesServer/GroupCardManager.cpp	/^bool GroupCardManager::handleCreateOneGroup(SceneUser& user, const DWORD occupation)$/;"	f	class:GroupCardManager
handleDeleteOneGroup	ScenesServer/GroupCardManager.cpp	/^bool GroupCardManager::handleDeleteOneGroup(SceneUser& user, const DWORD index)$/;"	f	class:GroupCardManager
handleEndOneRound	ScenesServer/ChallengeGameManager.cpp	/^bool ChallengeGameManager::handleEndOneRound(SceneUser &user)$/;"	f	class:ChallengeGameManager
handleGiveUpBattle	ScenesServer/ChallengeGameManager.cpp	/^bool ChallengeGameManager::handleGiveUpBattle(SceneUser &user)$/;"	f	class:ChallengeGameManager
handleMoveCard	ScenesServer/ChallengeGameManager.cpp	/^bool ChallengeGameManager::handleMoveCard(SceneUser &user, DWORD thisID, stObjectLocation dst)$/;"	f	class:ChallengeGameManager
handleSaveOneGroup	ScenesServer/GroupCardManager.cpp	/^bool GroupCardManager::handleSaveOneGroup(SceneUser& user, DWORD id[], const WORD count, const DWORD index)$/;"	f	class:GroupCardManager
handleStartGame	ScenesServer/ChallengeGameManager.cpp	/^bool ChallengeGameManager::handleStartGame(SceneUser &user)$/;"	f	class:ChallengeGameManager
handlesecondEnter	ScenesServer/ChallengeGameManager.cpp	/^bool ChallengeGameManager::handlesecondEnter(SceneUser *pUser)$/;"	f	class:ChallengeGameManager
has	ScenesServer/Chat.cpp	/^WORD Channel::has(const char *name)$/;"	f	class:Channel
has	ScenesServer/script.cpp	/^bool ScriptQuest::has(int type,int id) const$/;"	f	class:ScriptQuest
has	SessionServer/SessionChat.cpp	/^bool SessionChannel::has(DWORD id)$/;"	f	class:SessionChannel
hasArmor	ScenesServer/CardPk.cpp	/^bool zCard::hasArmor()$/;"	f	class:zCard
hasAssigned	base/zUniqueID.h	/^	bool hasAssigned(T testid)$/;"	f	class:zUniqueID
hasChecked	tmpcode/commond.h	/^	bool hasChecked;                \/\/ «∑Ò“—æ≠ºÏ≤‚π˝$/;"	m	struct:DecayNewLingQi
hasDamage	ScenesServer/CardPk.cpp	/^bool zCard::hasDamage()$/;"	f	class:zCard
hasDeadLanguage	ScenesServer/CardPk.cpp	/^bool zCard::hasDeadLanguage()$/;"	f	class:zCard
hasDur	ScenesServer/CardPk.cpp	/^bool zCard::hasDur()$/;"	f	class:zCard
hasEndDieFlag	ScenesServer/CardPk.cpp	/^bool zCard::hasEndDieFlag()$/;"	f	class:zCard
hasEnrage	ScenesServer/CardPk.cpp	/^bool zCard::hasEnrage()$/;"	f	class:zCard
hasEnragedFlag	ScenesServer/CardPk.cpp	/^bool zCard::hasEnragedFlag()$/;"	f	class:zCard
hasFriend	tmpcode/commond.h	/^    BYTE hasFriend;		\/\/ «∑Ò”–∫√”—æ”◊°   0: Œﬁ   1:  «$/;"	m	struct:__anon355
hasInScene	base/zSceneEntry.h	/^	inline bool hasInScene() const$/;"	f	struct:zSceneEntry
hasMagic	ScenesServer/CardPk.cpp	/^bool zCard::hasMagic()$/;"	f	class:zCard
hasNotifyMe	SuperServer/ServerTask.h	/^    bool hasNotifyMe;$/;"	m	class:ServerTask
hasProtected	ScenesServer/ScenePk.cpp	/^bool ScenePkState::hasProtected()$/;"	f	class:ScenePkState
hasSafety	tmpcode/commond.h	/^	BYTE hasSafety;  \/\/  «∑Ò”–√‹¬Î±£ª§$/;"	m	struct:stNotifySafetyUserCmd
hasSayHello	tmpcode/commond.h	/^	bool hasSayHello;   \/\/ΩÒÃÏ «∑ÒŒ ∫Ú$/;"	m	struct:stGRecommendItem
hasSayHello	tmpcode/commond.h	/^	bool hasSayHello; \/\/ «∑ÒŒ ∫Ú$/;"	m	struct:stRtnGRecommendedBountyUserCmd
hasSend	SessionServer/HeroCardManager.h	/^    BYTE hasSend;		\/\/∑¢ÀÕ¿≠»À$/;"	m	struct:stMatchedInfo
hasShield	ScenesServer/CardPk.cpp	/^bool zCard::hasShield()$/;"	f	class:zCard
hasShout	ScenesServer/CardPk.cpp	/^bool zCard::hasShout()$/;"	f	class:zCard
hasTaunt	ScenesServer/CardPk.cpp	/^bool zCard::hasTaunt()$/;"	f	class:zCard
hasUnfinishedGame	ScenesServer/ChallengeGameManager.cpp	/^bool ChallengeGameManager::hasUnfinishedGame(SceneUser *pUser)$/;"	f	class:ChallengeGameManager
hasWindfury	ScenesServer/CardPk.cpp	/^bool zCard::hasWindfury()$/;"	f	class:zCard
hash	ScenesServer/script.cpp	/^int ScriptQuest::hash(int type,int id) const$/;"	f	class:ScriptQuest
hashCodeFunc	base/zDBConnPool.h	/^typedef unsigned int(* hashCodeFunc)(const void *data);$/;"	t
hashcode	base/zDBConnPool.h	/^	const DWORD hashcode;$/;"	m	struct:UrlInfo
hashmap	base/zEntryManager.h	/^	typedef __gnu_cxx::hash_map<keyT,valueT,__gnu_cxx::hash<keyT>,my_key_equal<keyT> > hashmap;$/;"	t	class:LimitHash
hashmap	base/zEntryManager.h	/^	typedef __gnu_cxx::hash_multimap<keyT,valueT, __gnu_cxx::hash<keyT>,my_key_equal<keyT> > hashmap;$/;"	t	class:MultiHash
hasprocessSequence	SuperServer/ServerTask.h	/^    bool hasprocessSequence;$/;"	m	class:ServerTask
haveCheckTime	GatewayServer/GatewayTask.h	/^	volatile bool haveCheckTime;$/;"	m	class:GatewayTask
haveKey_des	base/EncDec/EncDec.h	/^  bool haveKey_des;$/;"	m	class:CEncrypt
haveKey_rc5	base/EncDec/EncDec.h	/^  bool haveKey_rc5;$/;"	m	class:CEncrypt
haveNum	tmpcode/commond.h	/^		DWORD   haveNum;        \/\/“— ’ ˝¡ø$/;"	m	struct:stRetCollectListBusiness::__anon348
haveRenqi	tmpcode/commond.h	/^	DWORD haveRenqi;	\/\/œ÷”–»À∆¯÷µ$/;"	m	struct:tipInfoFireplaceUserCmd
haveSalary	tmpcode/commond.h	/^	bool haveSalary;$/;"	m	struct:stNotifySalaryUnionCmd
have_ob	ScenesServer/script_func.cpp	/^bool have_ob(SceneUser* user,int id,int num,int level,int type)$/;"	f
hcard	base/xmlparser/herobase.h	/^            xml_prop<DWORD>	hcard;$/;"	m	struct:HeroBaseCFG::Init::Item
healFellow	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::healFellow(SceneEntryPk_vec &fellows)$/;"	f	class:SceneNpc
healSelf	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::healSelf()$/;"	f	class:SceneNpc
height	Robot/LoadMap.h	/^  DWORD height;      \/**< È´òÂ∫¶ *\/$/;"	m	struct:stMapFileHeader
height	ScenesServer/LoadMap.h	/^  DWORD height;      \/**< È´òÂ∫¶ *\/$/;"	m	struct:stMapFileHeader
height	ScenesServer/SceneDefine.h	/^	WORD  height;              \/\/Áü©ÂΩ¢Èïø$/;"	m	struct:t_NpcDefine
height	ScenesServer/SceneDefine.h	/^  WORD  height;              \/\/Áü©ÂΩ¢Èïø$/;"	m	struct:ZoneTypeDef
height	ScenesServer/WayPoint.h	/^	int  height; \/\/ Âå∫ÂüüÈ´òÂ∫¶$/;"	m	struct:zZone
height	ScenesServer/zCard.h	/^    virtual WORD height() const$/;"	f	class:CardSlot
height	ScenesServer/zObject.h	/^    virtual WORD height() const$/;"	f	class:Package
height	ScenesServer/zSceneEntryIndex.h	/^    const DWORD height() const { return sceneWH.y; }$/;"	f	class:zSceneEntryIndex
height	base/Command.h	/^    BYTE height;$/;"	m	struct:Cmd::SelectUserInfo
height	base/Command.h	/^    DWORD height;    \/**< Âú∫ÊôØÈ´ò *\/$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
height	base/Command.h	/^  BYTE height;$/;"	m	struct:Cmd::stCreateSelectUserCmd
height	base/Command.h	/^  BYTE height;$/;"	m	struct:Cmd::t_MainUserData
height	base/Command.h	/^  BYTE height;$/;"	m	struct:Cmd::t_UserData
height	tmpcode/commond.h	/^		BYTE height;	  \/\/ ∏ﬂ∞´$/;"	m	struct:stCreateSelectUserCmd
height	tmpcode/commond.h	/^		DWORD height;		\/**< ≥°æ∞∏ﬂ *\/$/;"	m	struct:stClientNewMap
height	tmpcode/commond.h	/^	BYTE height;  \/\/»ÀŒÔ∏ﬂ∞´$/;"	m	struct:st_CharShow2
height	tmpcode/commond.h	/^	BYTE height;$/;"	m	struct:SelectUserInfo
height	tmpcode/commond.h	/^	BYTE height;$/;"	m	struct:t_MainUserData
height	tmpcode/commond.h	/^	BYTE height;$/;"	m	struct:t_UserData
helpFellow	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::helpFellow(SceneEntryPk_vec &fellows)$/;"	f	class:SceneNpc
hero1	ScenesServer/zCard.h	/^    HeroSlot hero1;	\/\/”¢–€≤€$/;"	m	class:CardSlots
hero2	ScenesServer/zCard.h	/^    HeroSlot hero2;$/;"	m	class:CardSlots
heroData	ScenesServer/HeroInfoManager.h	/^	std::map<DWORD, HeroData> heroData;	    \/\/”¢–€÷∞“µ----”¢–€ ˝æ›$/;"	m	class:AllHeroData
heroName	base/Command.h	/^  char heroName[MAX_NAMESIZE];  \/\/Ëã±ÈõÑ‰∫∫Áâ©$/;"	m	struct:Cmd::stKillForeignerUserCmd
heroName	tmpcode/commond.h	/^	char heroName[MAX_NAMESIZE];	\/\/”¢–€»ÀŒÔ$/;"	m	struct:stKillForeignerUserCmd
heroUpgradeOneLevel	ScenesServer/HeroInfoManager.cpp	/^void HeroInfoManager::heroUpgradeOneLevel(SceneUser &user, const WORD occupation)$/;"	f	class:HeroInfoManager
hexchtoi	ScenesServer/Chat.cpp	/^BYTE hexchtoi(char &ch)$/;"	f
hide	GatewayServer/GateUser.h	/^	bool hide;$/;"	m	class:GateUser
hide	tmpcode/commond.h	/^	BYTE hide;\/\/0-–Ë“™“˛≤ÿ£¨1-≤ª–Ë“™“˛≤ÿ$/;"	m	struct:stBindUserToOther
hideAction	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::hideAction()$/;"	f	class:SceneNpc
hideMe	ScenesServer/Chat.cpp	/^bool Gm::hideMe(SceneUser *pUser,const char *para)$/;"	f	class:Gm
hideMe	ScenesServer/SceneNpc.cpp	/^void SceneNpc::hideMe(int showDelay)$/;"	f	class:SceneNpc
hideme	ScenesServer/SceneEntryPk.h	/^    bool hideme;     \/\/\/ ÈöêËóèËá™Â∑±$/;"	m	struct:SceneEntryPk
hint	tmpcode/commond.h	/^	BYTE hint;              \/\/\/ Ã· æ(øÕªß∂ÀΩ¯––Ã· æºÏ≤È) 0:≤ªºÏ≤È,1:ºÏ≤È$/;"	m	struct:stRetCourseOfKingCmd
hireMoney	tmpcode/commond.h	/^	DWORD hireMoney;                                $/;"	m	struct:stSetUnionResidentHireMoney
hirePeriod	tmpcode/commond.h	/^	DWORD hirePeriod;               \/\/ ±º‰∂Œ(’˚µ„ø™ ºÀ„£¨“‘ø™ º ±º‰Œ™÷µ$/;"	m	struct:ResidentHireList
hirePeriod	tmpcode/commond.h	/^	DWORD hirePeriod;$/;"	m	struct:stReqUnionDelResidentReserve
hirePeriod	tmpcode/commond.h	/^	DWORD hirePeriod;$/;"	m	struct:stReqUnionHireResidentResource
hisName	base/Command.h	/^  char hisName[MAX_NAMESIZE];\/\/Ë¢´‰∏æÊä•ËÄÖ$/;"	m	struct:Cmd::stMsgGmTool
hisName	base/GmToolCommand.h	/^      char hisName[MAX_NAMESIZE];\/\/Ë¢´‰∏æÊä•ËÄÖ$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
historyGold	BillServer/StockConsign.h	/^    HistoryIndex historyGold;$/;"	m	class:ConsignHistoryManager
historyMoney	BillServer/StockConsign.h	/^    HistoryIndex historyMoney;$/;"	m	class:ConsignHistoryManager
history_exploit	tmpcode/commond.h	/^		DWORD history_exploit;$/;"	m	struct:t_ReturnHistory::__anon245
holdPlace	tmpcode/commond.h	/^	DWORD holdPlace; \/\/0±Ì√ª”–£¨1±Ìª˘µÿ£¨2±Ì◊§µÿ$/;"	m	struct:stRetUnionInfo
holderId	tmpcode/commond.h	/^	DWORD holderId;$/;"	m	struct:stResidentData
holderName	tmpcode/commond.h	/^                char holderName[MAX_NAMESIZE +1];  \/\/∞⁄∑≈’ﬂXXX(√˚)$/;"	m	struct:stCrystalAllInfoDataUserCmd::cryState
hole	base/zDatabase.h	/^    }hole;$/;"	m	struct:zObjectB	typeref:struct:zObjectB::socket
hole	tmpcode/commond.h	/^	BYTE hole[4];           \/\/≈‰º˛ƒ£–Õ±‡∫≈(1-255)£¨0±Ì æ∏√≤øŒª√ª”–œ‚«∂$/;"	m	struct:t_MapTankData
holy	ScenesServer/zObject.h	/^  WORD holy;  \/\/Á•ûÂú£‰∏ÄÂáª  $/;"	m	class:Equips
holy	base/Object.h	/^	WORD holy;  \/\/…Ò •“ªª˜	$/;"	m	struct:t_Object
holyrating	base/zDatabase.h	/^    DWORD holyrating;$/;"	m	struct:zObjectB
homeExp	tmpcode/commond.h	/^	DWORD	homeExp;                       \/\/∑øŒ›æ≠—È÷µ $/;"	m	struct:HomeMapData
homeExp	tmpcode/commond.h	/^	DWORD homeExp;$/;"	m	struct:stModifyHomeDataUserCmd
homeList	tmpcode/commond.h	/^	stHomeItem homeList[0];$/;"	m	struct:stSendHomeListUserCmd
homeName	tmpcode/commond.h	/^	char	homeName[MAX_NAMESIZE];							\/\/ ∑øŒ›√˚◊÷$/;"	m	struct:stHomeItem
homeName	tmpcode/commond.h	/^	char	homeName[MAX_NAMESIZE];         \/\/∑øº‰√˚◊÷$/;"	m	struct:HomeMapData
homeState	tmpcode/commond.h	/^	BYTE	homeState;										\/\/ ∑øŒ›∂ØÃ¨ Ù–‘$/;"	m	struct:stHomeItem
homeState	tmpcode/commond.h	/^	BYTE	homeState;                     \/\/∑øŒ›∂ØÃ¨$/;"	m	struct:HomeMapData
homepage	tmpcode/commond.h	/^        char    homepage[50];   \/\/÷˜“≥µÿ÷∑$/;"	m	struct:stNameCard
homepageIndex	tmpcode/commond.h	/^        BYTE    homepageIndex;  \/\/÷˜“≥¿‡–Õ$/;"	m	struct:stNameCard
honor	base/CharBase.h	/^  DWORD honor;        \/\/Ëç£Ë™âÂÄº$/;"	m	struct:CharBase
honor	base/Command.h	/^  DWORD honor;\/\/\/Ëç£Ë™âÂÄº$/;"	m	struct:Cmd::t_MainUserData
honor	tmpcode/commond.h	/^	DWORD honor;\/\/\/»Ÿ”˛÷µ$/;"	m	struct:t_MainUserData
honorType	tmpcode/commond.h	/^    WORD honorType;$/;"	m	struct:rst_CurAchievementHonorCmd
honorType	tmpcode/commond.h	/^    WORD honorType;\/\/¿‡–Õ$/;"	m	struct:rtGetAchievementHonorCmd
horseID	tmpcode/commond.h	/^    DWORD   horseID;       \/\/¬Ìµƒƒ£–Õ$/;"	m	struct:stSetStateMapScreenUserCmd
horseSkill	base/Command.h	/^enum horseSkill$/;"	g	namespace:Cmd
horseState	base/Command.h	/^enum horseState$/;"	g	namespace:Cmd
horseState	tmpcode/commond.h	/^enum horseState         $/;"	g
horseSuit	tmpcode/commond.h	/^    OneHorseSuit horseSuit;$/;"	m	struct:stSetSuitPropertyUserCmd
horseSuits	tmpcode/commond.h	/^    OneHorseSuit horseSuits[5];$/;"	m	struct:stSuitsPropertyUserCmd
horseXLlevel	base/Command.h	/^  WORD horseXLlevel;  \/\/È©¨ÂåπËÆ≠ÁªÉÁ≠âÁ∫ß$/;"	m	struct:Cmd::t_HorseData
horseXLtime	base/Command.h	/^  DWORD horseXLtime;  \/\/È©¨ÂåπËÆ≠ÁªÉÂâ©‰ΩôÊó∂Èó¥$/;"	m	struct:Cmd::t_HorseData
horseid	base/Command.h	/^  DWORD horseid;    \/\/È©¨ÁöÑidÔºàÈÅìÂÖ∑idÔºâ$/;"	m	struct:Cmd::t_HorseData
host	base/zDBConnPool.h	/^	char host[MAX_HOSTSIZE];$/;"	m	struct:UrlInfo
hostessName	tmpcode/commond.h	/^	char	hostessName[MAX_NAMESIZE];      \/\/≈Æ÷˜√˚◊÷£®»Áπ˚¥Ê‘⁄£©$/;"	m	struct:HomeMapData
houseCount	tmpcode/commond.h	/^    BYTE houseCount;$/;"	m	struct:rtAreaDataHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;		\/\/ ∑ø◊”±‡∫≈$/;"	m	struct:rqBuyHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:reqGoToBedHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:req_ObjVisitHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:rqEnterHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:rqJoinHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:rqQuitHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:rt_memberListHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:stResSoilInfoHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:stUpdateHouseRoomRenQiUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:st_BanishRoomerHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:st_CancelConscribeHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:st_ConscribeRoomerHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:st_DriveAwayHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:st_MoveItemStoreHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:st_RequestLevelUpHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:st_RequestManageHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:st_RequestRentHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:st_RequestRoomerNameHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:st_RetManageHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:st_StorageMoneyHouseUserCmd
houseID	tmpcode/commond.h	/^	BYTE houseID;$/;"	m	struct:st_TakeOutItemStoreHouseUserCmd
houseID	tmpcode/commond.h	/^    BYTE houseID;		\/\/∑øŒ›ID √ø–°«¯”–10∑øŒ›$/;"	m	struct:__anon355
houseID	tmpcode/commond.h	/^    BYTE houseID;$/;"	m	struct:rt_InsertFlowerHouseUserCmd
houseLevel	tmpcode/commond.h	/^	BYTE houseLevel;                \/\/∑øŒ›µ»º∂$/;"	m	struct:st_RetManageHouseUserCmd
houseList	tmpcode/commond.h	/^    HouseData houseList[0];$/;"	m	struct:rtAreaDataHouseUserCmd
houseMoney	tmpcode/commond.h	/^	DWORD houseMoney;$/;"	m	struct:st_RetRentHouseUserCmd
houseRent	tmpcode/commond.h	/^	DWORD houseRent;$/;"	m	struct:__anon356
houseRoomDataList	tmpcode/commond.h	/^	HouseRoomData houseRoomDataList[0];$/;"	m	struct:st_RetManageHouseUserCmd
housefullID	tmpcode/commond.h	/^	DWORD housefullID;              \/\/∑øŒ›ÕÍ»´ID$/;"	m	struct:st_BroadcastUserApplyHouseUserCmd
housefullID	tmpcode/commond.h	/^	DWORD housefullID;              \/\/∑øŒ›ÕÍ»´ID$/;"	m	struct:st_RejectApplyRoomerHouseUserCmd
housefullID	tmpcode/commond.h	/^	DWORD housefullID;$/;"	m	struct:st_BroadcastBanishRoomerHouseUserCmd
housefullID	tmpcode/commond.h	/^	DWORD housefullID;$/;"	m	struct:st_RejectBanishRoomerHouseUserCmd
how	tmpcode/commond.h	/^	BYTE how; \/\/0-≤ªµØ≥ˆœ‘ æ£¨1-¡¢º¥µØ≥ˆœ‘ æ$/;"	m	struct:stAddUserLifeSkillPropertyUserCmd
how	tmpcode/commond.h	/^        BYTE    how;    \/\/µπº∆ ±µƒ–Œ Ω£∫0-≤ªœ‘ æ£¨1  Ω¯∂»Ãı£¨  2   ˝◊÷µƒ–Œ Ω$/;"	m	struct:stTimeCountUserCmd
how	tmpcode/commond.h	/^    BYTE    how;    \/\/µπº∆ ±µƒ–Œ Ω£∫0-≤ªœ‘ æ£¨1  Ω¯∂»Ãı£¨  2   ˝◊÷µƒ–Œ Ω$/;"	m	struct:stNotifyCountDownUserCmd
hp	ScenesServer/SceneNpc.h	/^  DWORD hp;$/;"	m	class:SceneNpc
hp	base/Card.h	/^	DWORD hp;		    \/\/—™¡ø$/;"	m	struct:t_Card
hp	base/CharBase.h	/^  DWORD hp;              \/\/\/ ÂΩìÂâçÁîüÂëΩÂÄº$/;"	m	struct:CharBase
hp	base/Command.h	/^	DWORD hp;               \/\/ÁîüÂëΩ$/;"	m	struct:Cmd::t_PetData
hp	base/Command.h	/^  DWORD hp;            \/\/\/ ÂΩìÂâçÁîüÂëΩÂÄº$/;"	m	struct:Cmd::t_MainUserData
hp	base/Command.h	/^  DWORD hp;$/;"	m	struct:Cmd::stHpExpPetCmd
hp	base/Command.h	/^  DWORD hp;$/;"	m	struct:Cmd::t_UserData
hp	base/zDatabase.h	/^    DWORD  hp;          \/\/ …˙√¸÷µ$/;"	m	struct:zNpcB
hp	base/zDatabase.h	/^    DWORD hp;		    \/\/—™¡ø$/;"	m	struct:CardBase
hp	base/zDatabase.h	/^    DWORD hp;		    \/\/—™¡ø$/;"	m	struct:zCardB
hp	tmpcode/commond.h	/^			WORD hp;$/;"	m	struct:LingQiData::__anon321::__anon322
hp	tmpcode/commond.h	/^			WORD hp;$/;"	m	struct:LingQiMaxCoefData::__anon331::__anon332
hp	tmpcode/commond.h	/^			WORD hp;$/;"	m	struct:LingQiPkData::__anon327::__anon328
hp	tmpcode/commond.h	/^			WORD hp;$/;"	m	struct:LingQiSimulate::__anon362::__anon363
hp	tmpcode/commond.h	/^	 BYTE type,atk,def,hp,time;$/;"	m	struct:TankBuffValue
hp	tmpcode/commond.h	/^	DWORD	hp;$/;"	m	struct:st_CharShow2
hp	tmpcode/commond.h	/^	DWORD   hp;                     \/\/µ±«∞ƒÕæ√∂»$/;"	m	struct:TankData
hp	tmpcode/commond.h	/^	DWORD   hp;$/;"	m	struct:t_UserData
hp	tmpcode/commond.h	/^	DWORD hp,maxHp;$/;"	m	struct:stSetHpTankCmd
hp	tmpcode/commond.h	/^	DWORD hp;						\/\/\/ µ±«∞…˙√¸÷µ$/;"	m	struct:t_MainUserData
hp	tmpcode/commond.h	/^	DWORD hp;               \/\/…˙√¸$/;"	m	struct:t_PetData
hp	tmpcode/commond.h	/^	DWORD hp;$/;"	m	struct:stHpExpPetCmd
hp	tmpcode/commond.h	/^	DWORD hp;$/;"	m	struct:stStatueHPUserCmd
hpBuff	tmpcode/commond.h	/^	BYTE    hpBuff;                 \/\/’˜Õæ (—™buff)$/;"	m	struct:TankData
hpPercent	tmpcode/commond.h	/^	BYTE hpPercent;$/;"	m	struct:stAutoHpMpLingQiUserCmd
hp_leechdom	base/CharBase.h	/^  DWORD hp_leechdom;\/\/‰ΩøÁî®ÁîüÂëΩÂÄºËçØÂìÅ‰∏™Êï∞$/;"	m	struct:CharTest
hp_s1000	base/Card.h	/^    BYTE hp_s1000;$/;"	m	struct:t_CardPK
hp_s1001	base/Card.h	/^    BYTE hp_s1001;$/;"	m	struct:t_CardPK
hp_s1002	base/Card.h	/^    BYTE hp_s1002;$/;"	m	struct:t_CardPK
hp_s1003	base/Card.h	/^    BYTE hp_s1003;$/;"	m	struct:t_CardPK
hpcost	ScenesServer/ScenePk.h	/^      DWORD  hpcost;            \/\/\/ Ê∂àËÄóÁîüÂëΩÂÄº$/;"	m	struct:PkValue::__anon159::__anon160
hpleech	ScenesServer/zObject.h	/^  leech hpleech; \/\/x%Âê∏Êî∂ÁîüÂëΩÂÄºy$/;"	m	class:Equips
hpleech	base/Object.h	/^	leech hpleech; \/\/x%Œ¸ ’…˙√¸÷µy$/;"	m	struct:t_Object
hplock	ScenesServer/SceneEntryPk.h	/^    bool hplock;  \/\/\/ÂØπhpËøõË°åÈîÅÂÆö$/;"	m	struct:SceneEntryPk
hpr	ScenesServer/zObject.h	/^  WORD hpr;  \/\/ ÁîüÂëΩÂÄºÊÅ¢Â§ç$/;"	m	class:Equips
hpr	base/Object.h	/^	WORD hpr;  \/\/ …˙√¸÷µª÷∏¥$/;"	m	struct:t_Object
hpspeedup	ScenesServer/ScenePk.h	/^      SWORD hpspeedup;  \/\/ÁîüÂëΩÂÄºÊÅ¢Â§çÈÄüÂ∫¶Â¢ûÂä†34$/;"	m	struct:SkillState::__anon155::__anon156
hptomp	ScenesServer/zObject.h	/^  BYTE hptomp; \/\/ËΩ¨Êç¢ÁîüÂëΩÂÄº‰∏∫Ê≥ïÊúØÂÄºxÔºÖ$/;"	m	class:Equips
hptomp	base/Object.h	/^	BYTE hptomp; \/\/◊™ªª…˙√¸÷µŒ™∑® ı÷µx£•$/;"	m	struct:t_Object
hpupbylevel	ScenesServer/ScenePk.h	/^      SWORD hpupbylevel; \/\/Ê†πÊçÆ‰∫∫Áâ©Á≠âÁ∫ßÊèêÂçáÊúÄÂ§ßË°ÄÈáè                    \/\/80$/;"	m	struct:SkillState::__anon155::__anon156
huntermark	ScenesServer/SceneEntryPk.h	/^    bool huntermark;  \/\/\/ ÁåéÊâãÊ†áËÆ∞$/;"	m	struct:SceneEntryPk
hurtType	base/zDatabase.h	/^    DWORD hurtType;$/;"	m	struct:zNpcB
hurtValue	base/zDatabase.h	/^    DWORD hurtValue;$/;"	m	struct:zNpcB
iExp	tmpcode/commond.h	/^	DWORD iExp;     \/\/∏ˆ»ÀΩ±¿¯∑÷ ˝$/;"	m	struct:stPictureEffectMapUserCmd
ice_umdefp	ScenesServer/ScenePk.h	/^      SWORD ice_umdefp; \/\/ÂÜ∞Áî≤Áî®ÊèêÂçáÈ≠îÊ≥ïÈò≤Âæ°ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
iceappend	ScenesServer/ScenePk.h	/^      SWORD iceappend;  \/\/ Èô∑Èò±Á≥ªÊ≥ïÊúØ‰º§ÂÆ≥ÊèêÂçáÊØî‰æãÂçÉÂàÜ‰πãÂá†$/;"	m	struct:SkillState::__anon155::__anon156
icebox	ScenesServer/SceneEntryPk.h	/^    bool icebox;   \/\/\/ ÂÜ∞ÁÅµÊüúÁä∂ÊÄÅ$/;"	m	struct:SceneEntryPk
icedam	ScenesServer/SceneEntryPk.h	/^    SDWORD icedam;  \/\/\/ÂÜ∞ÂÜªÁªìÁïåÂê∏Êî∂ÁöÑ‰º§ÂÆ≥Êï∞ÂÄº$/;"	m	struct:SceneEntryPk
iceflag	ScenesServer/SceneEntryPk.h	/^    bool iceflag;  \/\/\/ÂÜ∞Á≥ªÊ≥ïÊúØÂä†ÊàêÊ†áÂøó$/;"	m	struct:SceneEntryPk
id	BillServer/StockConsign.h	/^  DWORD id;$/;"	m	struct:ConsignTrait
id	GatewayServer/CountryInfo.h	/^		DWORD id;$/;"	m	struct:CountryInfo::CountryDic
id	GatewayServer/CountryInfo.h	/^		DWORD id;$/;"	m	struct:CountryInfo::MapDic
id	RecordServer/RecordSessionManager.h	/^  DWORD id;        \/\/\/ Ω«…´±‡∫≈$/;"	m	struct:RecordSession
id	ScenesServer/NpcTrade.h	/^      DWORD id;          \/\/\/Áâ©ÂìÅÁºñÂè∑$/;"	m	struct:NpcTrade::NpcItem
id	ScenesServer/QuestEvent.h	/^  DWORD id() const$/;"	f	class:Event
id	ScenesServer/QuestEvent.h	/^  DWORD id() const$/;"	f	class:EventTrigger
id	ScenesServer/Scene.h	/^      DWORD id;\/\/ID$/;"	m	struct:Scene::FixedRush
id	ScenesServer/SceneDefine.h	/^	DWORD id;                \/\/ÁºñÂè∑$/;"	m	struct:t_NpcDefine
id	ScenesServer/SceneManager.h	/^      DWORD id;$/;"	m	struct:SceneManager::CountryInfo
id	ScenesServer/SceneManager.h	/^      DWORD id;$/;"	m	struct:SceneManager::MapInfo
id	ScenesServer/ScenePk.h	/^    DWORD  id;$/;"	m	struct:ScenePkState::attProtect
id	ScenesServer/SkillStatusManager.h	/^  DWORD  id;$/;"	m	struct:SkillStatusElement
id	ScenesServer/scriptTickTask.h	/^	QWORD id;$/;"	m	class:scriptTaskManagement
id	ScenesServer/zCard.cpp	/^DWORD CardSlot::id() const$/;"	f	class:CardSlot
id	ScenesServer/zObject.cpp	/^DWORD Package::id() const$/;"	f	class:Package
id	SessionServer/CountryInfo.h	/^		DWORD id;$/;"	m	struct:CountryInfo::CountryDic
id	SessionServer/TempArchive.h	/^  DWORD id;$/;"	m	struct:TempArchive
id	base/BillCommand.h	/^      DWORD id;$/;"	m	struct:Cmd::Bill::t_Bill_ForwardBillToScene
id	base/BroadCommand.h	/^      WORD id;$/;"	m	struct:Cmd::BroadServer::t_Startup_Request
id	base/CharBase.h	/^    DWORD id;$/;"	m	struct:CounterMember
id	base/CharBase.h	/^  DWORD id;              \/\/\/ ËßíËâ≤ÁºñÂè∑$/;"	m	struct:CharBase
id	base/Command.h	/^	DWORD id;               \/\/npcid$/;"	m	struct:Cmd::t_PetData
id	base/Command.h	/^	DWORD id;  \/\/ ÈÄâÊã©ÁöÑÂõΩÂÆ∂id $/;"	m	struct:Cmd::stSelectCountryUserCmd
id	base/Command.h	/^      DWORD id,x,y;$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd::__anon77
id	base/Command.h	/^    DWORD   id[0];$/;"	m	struct:Cmd::stBatchRemoveNpcMapScreenUserCmd
id	base/Command.h	/^    DWORD   id[0];$/;"	m	struct:Cmd::stBatchRemoveUserMapScreenUserCmd
id	base/Command.h	/^    DWORD id;            \/\/\/ ËßíËâ≤ÁºñÂè∑$/;"	m	struct:Cmd::SelectUserInfo
id	base/Command.h	/^    DWORD id;  $/;"	m	struct:Cmd::stObjectExpUserCmd
id	base/Command.h	/^    WORD id[0];    \/\/…Ã≥« €¬ÙÀ˜“˝$/;"	m	struct:Cmd::stNotifyMarketAllObjectPropertyUserCmd
id	base/Command.h	/^  DWORD id;      \/\/\/ ÊµÅÊ∞¥Âè∑$/;"	m	struct:Cmd::StockList
id	base/Command.h	/^  DWORD id;    \/\/npcid$/;"	m	struct:Cmd::t_HorseData
id	base/Command.h	/^  DWORD id;  \/\/‰øÆÁêÜÁâ©ÂìÅidÔºåÂÖ®ÈÉ®‰øÆÁêÜÊó∂‰∏∫0$/;"	m	struct:Cmd::stRepairObjectGoldNpcTradeUserCmd
id	base/Command.h	/^  DWORD id;  \/\/‰øÆÁêÜÁâ©ÂìÅidÔºåÂÖ®ÈÉ®‰øÆÁêÜÊó∂‰∏∫0$/;"	m	struct:Cmd::stRepairObjectNpcTradeUserCmd
id	base/Command.h	/^  DWORD id;  \/\/Ê∏∏ÊàèÂå∫Âè∑$/;"	m	struct:Cmd::stRequestPingList
id	base/Command.h	/^  DWORD id; \/\/‰ªªÂä°id$/;"	m	struct:Cmd::stQuestUserCmd
id	base/Command.h	/^  DWORD id;$/;"	m	struct:Cmd::actTitle
id	base/Command.h	/^  DWORD id;$/;"	m	struct:Cmd::stAddListMail
id	base/Command.h	/^  DWORD id;$/;"	m	struct:Cmd::stAddPetPetCmd
id	base/Command.h	/^  DWORD id;$/;"	m	struct:Cmd::stDelPetPetCmd
id	base/Command.h	/^  DWORD id;$/;"	m	struct:Cmd::stGetDetailGift
id	base/Command.h	/^  DWORD id;$/;"	m	struct:Cmd::stGetItemGift
id	base/Command.h	/^  DWORD id;$/;"	m	struct:Cmd::stHorseDataPetCmd
id	base/Command.h	/^  DWORD id;$/;"	m	struct:Cmd::stRefreshDataPetCmd
id	base/Command.h	/^  DWORD id;$/;"	m	struct:Cmd::stRequestCancelListStockUserCmd
id	base/Command.h	/^  DWORD id;$/;"	m	struct:Cmd::stReturnCancelListStockUserCmd
id	base/Command.h	/^  DWORD id;\/\/\/ÊäÄËÉΩid$/;"	m	struct:Cmd::stDelSkillPetCmd
id	base/Command.h	/^  DWORD id;\/\/\/ÁõÆÊ†áÁöÑ‰∏¥Êó∂ID$/;"	m	struct:Cmd::stSetTargetPetCmd
id	base/Command.h	/^  DWORD id;\/\/tempid$/;"	m	struct:Cmd::stHpExpPetCmd
id	base/Command.h	/^  DWORD id;\/\/ÂõΩÂÆ∂id$/;"	m	struct:Cmd::Country_Info
id	base/Command.h	/^  DWORD id;\/\/Ê¥ªÂä®ID$/;"	m	struct:Cmd::stDetailGift
id	base/Command.h	/^  DWORD id;\/\/Ê¥ªÂä®ID$/;"	m	struct:Cmd::stGetWinnerGift
id	base/GmToolCommand.h	/^      BYTE id;$/;"	m	struct:Cmd::GmTool::t_Broadcast_GmTool
id	base/HeroCardCmd.h	/^	DWORD id;   \/\/baseID$/;"	m	struct:Cmd::t_Tujian
id	base/HeroCardCmd.h	/^	DWORD id;   \/\/ø®≈∆±Ìid$/;"	m	struct:Cmd::stRetNotifyHandIsFullUserCmd
id	base/HeroCardCmd.h	/^	DWORD id;$/;"	m	struct:Cmd::stNotifyOneCardTujianInfoCmd
id	base/HeroCardCmd.h	/^	DWORD id[0];$/;"	m	struct:Cmd::stReqSaveOneCardGroupUserCmd
id	base/HeroCardCmd.h	/^	DWORD id[0];$/;"	m	struct:Cmd::stRetOneCardGroupInfoUserCmd
id	base/HeroCardCmd.h	/^	DWORD id[4];$/;"	m	struct:Cmd::stRetFirstHandCardUserCmd
id	base/HeroCardCmd.h	/^	DWORD id[5];		    \/\/“ª∏ˆ¿Ò∞¸÷–µƒ5’≈ø®$/;"	m	struct:Cmd::stRetGiftBagCardsDataUserCmd
id	base/MiniCommand.h	/^      DWORD id;$/;"	m	struct:Cmd::Mini::t_Mini_ForwardMiniToScene
id	base/MiniCommand.h	/^      DWORD id;$/;"	m	struct:Cmd::Mini::t_Mini_ForwardUser
id	base/MiniCommand.h	/^      DWORD id;$/;"	m	struct:Cmd::Mini::t_Mini_UserForwardMini
id	base/MiniCommand.h	/^      DWORD id;$/;"	m	struct:Cmd::Mini::t_Scene_ForwardMini
id	base/Object.h	/^		WORD id; \/\/ººƒ‹id$/;"	m	struct:t_Object::skillbonus
id	base/Object.h	/^		WORD id; \/\/ººƒ‹id$/;"	m	struct:t_Object::skillsbonus
id	base/RecordCommand.h	/^      DWORD id;              \/\/\/ ËßíËâ≤$/;"	m	struct:Cmd::Record::t_UserInfo_SceneRecord
id	base/RecordCommand.h	/^      DWORD id;              \/\/\/ ËßíËâ≤$/;"	m	struct:Cmd::Record::t_WriteUser_SceneRecord
id	base/RecordCommand.h	/^      DWORD id;              \/\/\/ ËßíËâ≤ÁºñÂè∑$/;"	m	struct:Cmd::Record::t_DelChar_GateRecord
id	base/RecordCommand.h	/^      DWORD id;              \/\/\/ ËßíËâ≤ÁºñÂè∑$/;"	m	struct:Cmd::Record::t_DelChar_Return_GateRecord
id	base/RecordCommand.h	/^      DWORD id;            \/\/\/ ËßíËâ≤$/;"	m	struct:Cmd::Record::t_ReadUser_SceneRecord
id	base/RecordCommand.h	/^      DWORD id;            \/\/\/ ËßíËâ≤$/;"	m	struct:Cmd::Record::t_WriteUser_SceneRecord_Ok
id	base/RecordCommand.h	/^      DWORD id;$/;"	m	struct:Cmd::Record::t_RemoveUser_SceneRecord
id	base/SceneCommand.h	/^      DWORD id;            \/\/\/ Ω«…´$/;"	m	struct:Cmd::Scene::t_Unreg_LoginScene_Ok
id	base/SceneCommand.h	/^      DWORD id;$/;"	m	struct:Cmd::Scene::t_sysSetting_GateScene
id	base/SessionCommand.h	/^      DWORD id;              \/\/\/ ËßíËâ≤ÁºñÂè∑$/;"	m	struct:Cmd::Session::t_DelChar_GateSession
id	base/SessionCommand.h	/^      DWORD id;            \/\/\/ ËßíËâ≤$/;"	m	struct:Cmd::Session::t_ReadUser_SceneArchive
id	base/SessionCommand.h	/^      DWORD id;            \/\/\/ ËßíËâ≤$/;"	m	struct:Cmd::Session::t_ReqUser_SceneArchive
id	base/SessionCommand.h	/^      DWORD id;            \/\/\/ ËßíËâ≤$/;"	m	struct:Cmd::Session::t_WriteUser_SceneArchive
id	base/SessionCommand.h	/^      DWORD id; $/;"	m	struct:Cmd::Session::t_ChangeAP
id	base/SessionCommand.h	/^      DWORD id; \/\/family id or tong id$/;"	m	struct:Cmd::Session::t_QuestBulletinUserCmd
id	base/SessionCommand.h	/^      DWORD id;$/;"	m	struct:Cmd::Session::t_MsgTime_GmTool
id	base/SessionCommand.h	/^      DWORD id;$/;"	m	struct:Cmd::Session::t_changeScene_SceneSession
id	base/SessionCommand.h	/^      DWORD id;$/;"	m	struct:Cmd::Session::t_forwardUser_GateSession
id	base/SessionCommand.h	/^      DWORD id;$/;"	m	struct:Cmd::Session::t_forwardUser_SceneSession
id	base/SessionCommand.h	/^      DWORD id;\/\/  Â∏àÁà∂id$/;"	m	struct:Cmd::Session::t_OvermanTicketAdd
id	base/SessionCommand.h	/^      DWORD id;\/\/Áî®Êà∑ID$/;"	m	struct:Cmd::Session::t_gmCommand_SceneSession
id	base/xmlparser/test.h	/^            xml_prop<int>	id;$/;"	m	struct:TestConfig::Reward::Item
id	base/zDatabase.h	/^	    DWORD id;$/;"	m	struct:SkillElement::__anon34::__anon35
id	base/zDatabase.h	/^	    DWORD id;$/;"	m	struct:zObjectB::material::stuff
id	base/zDatabase.h	/^	    DWORD id;$/;"	m	union:SkillBase::__anon33
id	base/zDatabase.h	/^	    WORD id;\/\/ººƒ‹id$/;"	m	struct:SkillStatus::__anon36::__anon37
id	base/zDatabase.h	/^	BYTE id;$/;"	m	struct:zObjectB::leechdom_t
id	base/zDatabase.h	/^	DWORD id;$/;"	m	struct:zObjectB::skills
id	base/zDatabase.h	/^	DWORD id;$/;"	m	union:CardBase::__anon32
id	base/zDatabase.h	/^	DWORD id;$/;"	m	union:ObjectBase::__anon26
id	base/zDatabase.h	/^    DWORD id;$/;"	m	struct:CarryObject
id	base/zDatabase.h	/^    DWORD id;\/\/\/ººƒ‹id$/;"	m	struct:npcSkill
id	base/zEntry.h	/^	DWORD id;$/;"	m	struct:zEntryC
id	base/zType.h	/^    DWORD id;$/;"	m	union:GameZone_t::__anon8
id	base/zType.h	/^    WORD id;$/;"	m	struct:ZoneData
id	tmpcode/commond.h	/^				DWORD id, x, y;$/;"	m	struct:stClientNewMap::__anon213
id	tmpcode/commond.h	/^		BYTE id;$/;"	m	struct:stRetFarmInfoUserCmd::stBriefLand
id	tmpcode/commond.h	/^		DWORD id;$/;"	m	struct:stForceRelationDataUserCmd::stForceInfo
id	tmpcode/commond.h	/^		DWORD id;$/;"	m	struct:stRetDailyRandomQuestUserCmd::quests
id	tmpcode/commond.h	/^		DWORD id;$/;"	m	struct:stRetTrafficInfoUserCmd::stTrafficInfo
id	tmpcode/commond.h	/^		unsigned int	id;		\/\/ººƒ‹ID$/;"	m	struct:stSeptSkillList::__anon303
id	tmpcode/commond.h	/^	 DWORD id;                        \/\/ÕÊº“ID$/;"	m	struct:PlayerScoreSortItem
id	tmpcode/commond.h	/^	 DWORD id;$/;"	m	struct:stActiveShenLongReward
id	tmpcode/commond.h	/^	BYTE id;        \/\/¥Ûº∂±œ¬µƒ◊”¿‡±;$/;"	m	struct:stReqEquipAwardUserCmd
id	tmpcode/commond.h	/^	BYTE id;  \/\/ƒøµƒµÿ±‡∫≈$/;"	m	struct:stEnterTransPropertyUserCmd
id	tmpcode/commond.h	/^	BYTE id; \/\/\/µ⁄º∏∏ˆ¡È∆˜$/;"	m	struct:stChangeNameLingQiUserCmd
id	tmpcode/commond.h	/^	BYTE id; \/\/¡È∆˜ID$/;"	m	struct:stConfirmFeedLingQiUserCmd
id	tmpcode/commond.h	/^	BYTE id; \/\/¡È∆˜ID$/;"	m	struct:stReduceMPLingQiUserCmd
id	tmpcode/commond.h	/^	BYTE id;$/;"	m	struct:stSetTabKeyPropertyUserCmd
id	tmpcode/commond.h	/^	BYTE id;\/\/µ⁄º∏∏ˆ$/;"	m	struct:stDataLingQiUserCmd
id	tmpcode/commond.h	/^	BYTE id;\/\/µ⁄º∏∏ˆ¡È∆˜$/;"	m	struct:stAbandonLingQiUserCmd
id	tmpcode/commond.h	/^	BYTE id;\/\/µ⁄º∏∏ˆ¡È∆˜$/;"	m	struct:stCheckUpLingQiUserCmd
id	tmpcode/commond.h	/^	BYTE id;\/\/µ⁄º∏∏ˆ¡È∆˜$/;"	m	struct:stFeedEquipLingQiUserCmd
id	tmpcode/commond.h	/^	BYTE id;\/\/µ⁄º∏∏ˆ¡È∆˜$/;"	m	struct:stNotifyLingliLingQiUserCmd
id	tmpcode/commond.h	/^	BYTE id;\/\/µ⁄º∏∏ˆ¡È∆˜$/;"	m	struct:stNotifyMinusExpLingQiUserCmd
id	tmpcode/commond.h	/^	BYTE id;\/\/µ⁄º∏∏ˆ¡È∆˜$/;"	m	struct:stRefreshVarLingQiUserCmd
id	tmpcode/commond.h	/^	BYTE id;\/\/µ⁄º∏∏ˆ¡È∆˜$/;"	m	struct:stSetFightLingQiUserCmd
id	tmpcode/commond.h	/^	DWORD   id;                     \/\/’Ω≥µID$/;"	m	struct:TankData
id	tmpcode/commond.h	/^	DWORD   id;             \/\/ µ¿æﬂID$/;"	m	struct:t_PackBusinessData
id	tmpcode/commond.h	/^	DWORD   id[0];  $/;"	m	struct:stBatchRemoveUserMapScreenUserCmd
id	tmpcode/commond.h	/^	DWORD   id[0];$/;"	m	struct:stBatchRemoveNpcMapScreenUserCmd
id	tmpcode/commond.h	/^	DWORD id, userID;	\/\/»∫ID£¨Ω«…´ID$/;"	m	struct:stTalkLTQUserCmd
id	tmpcode/commond.h	/^	DWORD id;							\/\/…Ã∆∑id$/;"	m	struct:stMerchInfo
id	tmpcode/commond.h	/^	DWORD id;						\/\/œ˚œ¢ID$/;"	m	struct:StoreNotice
id	tmpcode/commond.h	/^	DWORD id;			\/\/»ŒŒÒID$/;"	m	struct:stSingleSelectQuestUserCmd
id	tmpcode/commond.h	/^	DWORD id;			\/\/ŒÔ∆∑Œ®“ªID$/;"	m	struct:HouseObjDef
id	tmpcode/commond.h	/^	DWORD id;                                               \/\/\/ Ω«…´±‡∫≈$/;"	m	struct:SelectUserInfo
id	tmpcode/commond.h	/^	DWORD id;               \/\/\/ ”„µƒID(Õ¨“ª∏ˆΩÁ√Ê…œµƒ√ø∏ˆ”„ «Œ®“ªµƒ)$/;"	m	struct:fishInfo
id	tmpcode/commond.h	/^	DWORD id;               \/\/npcid$/;"	m	struct:t_PetData
id	tmpcode/commond.h	/^	DWORD id;           \/\/\/ ¡˜ÀÆ∫≈$/;"	m	struct:StockList
id	tmpcode/commond.h	/^	DWORD id;         \/\/…Ã∆∑id$/;"	m	struct:Merch
id	tmpcode/commond.h	/^	DWORD id;       \/\/\/ ŒÔ∆∑ID$/;"	m	struct:stBuyUnionMacketObject
id	tmpcode/commond.h	/^	DWORD id;   \/\/—´’¬id$/;"	m	struct:TitleInfo
id	tmpcode/commond.h	/^	DWORD id;  \/\/ »∫ID$/;"	m	struct:stAppearOfflineLTQUserCmd
id	tmpcode/commond.h	/^	DWORD id;  \/\/ »∫ID$/;"	m	struct:stHistoryTalkLTQUserCmd
id	tmpcode/commond.h	/^	DWORD id;  \/\/ »∫ID$/;"	m	struct:stOnoffReceiveLTQUserCmd
id	tmpcode/commond.h	/^	DWORD id;  \/\/—´’¬id$/;"	m	struct:stRetTitleInfoCmd
id	tmpcode/commond.h	/^	DWORD id;  \/\/—´’¬id;$/;"	m	struct:ChangeInfo
id	tmpcode/commond.h	/^	DWORD id; \/\/»ŒŒÒid$/;"	m	struct:stQuestUserCmd
id	tmpcode/commond.h	/^	DWORD id; \/\/ŒÔ∆∑Œ®“ªid$/;"	m	struct:stRemoveObjectTradeUserCmd
id	tmpcode/commond.h	/^	DWORD id; \/\/◊∞±∏ID$/;"	m	struct:EquipSimulate
id	tmpcode/commond.h	/^	DWORD id;$/;"	m	struct:LTQRecord
id	tmpcode/commond.h	/^	DWORD id;$/;"	m	struct:LTQUserData
id	tmpcode/commond.h	/^	DWORD id;$/;"	m	struct:stClearSeptSkill
id	tmpcode/commond.h	/^	DWORD id;$/;"	m	struct:stDelPetPetCmd
id	tmpcode/commond.h	/^	DWORD id;$/;"	m	struct:stGetTankCmd
id	tmpcode/commond.h	/^	DWORD id;$/;"	m	struct:stMidJoinQuestMapUserCmd
id	tmpcode/commond.h	/^	DWORD id;$/;"	m	struct:stRefreshDataPetCmd
id	tmpcode/commond.h	/^	DWORD id;$/;"	m	struct:stReturnCancelListStockUserCmd
id	tmpcode/commond.h	/^	DWORD id;$/;"	m	struct:stSetTextLTQUserCmd
id	tmpcode/commond.h	/^	DWORD id;$/;"	m	struct:strong_info
id	tmpcode/commond.h	/^	DWORD id;\/\/ID$/;"	m	struct:LingQiData
id	tmpcode/commond.h	/^	DWORD id;\/\/\/ƒø±Íµƒ¡Ÿ ±ID$/;"	m	struct:stSetTargetPetCmd
id	tmpcode/commond.h	/^	DWORD id;\/\/tempid$/;"	m	struct:stHpExpPetCmd
id	tmpcode/commond.h	/^	DWORD id;\/\/π˙º“id$/;"	m	struct:Country_Info
id	tmpcode/commond.h	/^	DWORD id;\/\/»∫ID$/;"	m	struct:stInviteLTQUserCmd
id	tmpcode/commond.h	/^	DWORD id;\/\/»∫ID$/;"	m	struct:stLTQDataLTQUserCmd
id	tmpcode/commond.h	/^	DWORD id;\/\/»∫ID$/;"	m	struct:stNotifyJoinLTQUserCmd
id	tmpcode/commond.h	/^	DWORD id;\/\/»∫ID$/;"	m	struct:stNotifyLeaveLTQUserCmd
id	tmpcode/commond.h	/^	DWORD id;\/\/»∫ID$/;"	m	struct:stOfflineLTQUserCmd
id	tmpcode/commond.h	/^	DWORD id;\/\/»∫ID$/;"	m	struct:stOnlineLTQUserCmd
id	tmpcode/commond.h	/^	DWORD id;\/\/»∫ID$/;"	m	struct:stQueryLTQUserCmd
id	tmpcode/commond.h	/^	DWORD id;\/\/»∫ID$/;"	m	struct:stReqJoinLTQUserCmd
id	tmpcode/commond.h	/^	DWORD id;\/\/…˙≥…ÀÈ∆¨µƒ±¶ ØID$/;"	m	struct:stGemToPiecePropertyUserCmd
id	tmpcode/commond.h	/^	WORD id;  \/\/Œ®“ªid$/;"	m	struct:decoration
id	tmpcode/commond.h	/^	unsigned int id;	\/\/ººƒ‹ID$/;"	m	struct:stDevelopSeptSkill
id	tmpcode/commond.h	/^	unsigned int id;	\/\/ººƒ‹ID$/;"	m	struct:stStudySeptSkill
id	tmpcode/commond.h	/^        DWORD id;                 \/\/ÕÊº“ID$/;"	m	struct:UnionCityDareItem
id	tmpcode/commond.h	/^        DWORD id;       $/;"	m	struct:stObjectExpUserCmd
id	tmpcode/commond.h	/^        DWORD id;$/;"	m	struct:actTitle
id	tmpcode/commond.h	/^        DWORD id;$/;"	m	struct:stGetDetailGift
id	tmpcode/commond.h	/^        DWORD id;$/;"	m	struct:stGetItemGift
id	tmpcode/commond.h	/^        DWORD id;$/;"	m	struct:stRetDailyWarningQuestUserCmd::quests
id	tmpcode/commond.h	/^        DWORD id;$/;"	m	struct:stShouLieScoreListCmd::stScoreNode
id	tmpcode/commond.h	/^        DWORD id;\/\/ªÓ∂ØID$/;"	m	struct:stDetailGift
id	tmpcode/commond.h	/^        DWORD id;\/\/ªÓ∂ØID$/;"	m	struct:stGetWinnerGift
id	tmpcode/commond.h	/^    BYTE id;$/;"	m	struct:stChangeSuitPropertyUserCmd
id	tmpcode/commond.h	/^    BYTE id;$/;"	m	struct:stSetSuitPropertyUserCmd
id	tmpcode/commond.h	/^    BYTE id;\/\/0-4£¨ªÒ»°ƒ≥“ªÃ◊£¨>=5ªÒ»°»´≤ø $/;"	m	struct:stGetSuitPropertyUserCmd
id	tmpcode/commond.h	/^    DWORD		id;\/\/◊‘º∫µƒ≈≈√˚$/;"	m	struct:stShouLieScoreListCmd
id	tmpcode/commond.h	/^    DWORD id;                       \/\/npcid$/;"	m	struct:t_DragonData
id	tmpcode/commond.h	/^    DWORD id;               \/\/npcid$/;"	m	struct:t_HorseData
id	tmpcode/commond.h	/^    DWORD id;       $/;"	m	struct:FlowerDef
id	tmpcode/commond.h	/^    DWORD id;      \/\/…Ò¡˙∂˜¥Õid$/;"	m	struct:stAsrShenLongThanks
id	tmpcode/commond.h	/^    DWORD id;  \/\/–ﬁ¿ÌŒÔ∆∑id£¨»´≤ø–ﬁ¿Ì ±Œ™0$/;"	m	struct:stRepairObjectNpcTradeUserCmd
id	tmpcode/commond.h	/^    DWORD id;  \/\/–ﬁ¿ÌŒÔ∆∑id£¨»´≤ø–ﬁ¿Ì ±Œ™1 ◊∞±∏¿∏–ﬁ¿ÌŒ™0$/;"	m	struct:stRepairObjectMoneyNpcTradeUserCmd
id	tmpcode/commond.h	/^    DWORD id; \/\/∂˜¥Õid              $/;"	m	struct:stReqShenLongReward
id	tmpcode/commond.h	/^    DWORD id; \/\/…Ò¡˙∂˜¥Õid$/;"	m	struct:stReqShenLongThanks
id	tmpcode/commond.h	/^    DWORD id;$/;"	m	struct:stAddListMail
id	tmpcode/commond.h	/^    DWORD id;$/;"	m	struct:stHorseDataPetCmd
id	tmpcode/commond.h	/^    DWORD id;$/;"	m	struct:t_RewardInfo
identifier	tmpcode/commond.h	/^	char identifier[MAX_NAMESIZE+1];$/;"	m	struct:stIdentifierAndNameUserCmd
ids	base/zUniqueID.h	/^	std::set<T> ids;$/;"	m	class:zUniqueID
ifCheckSignal	base/zTCPTask.h	/^	const bool ifCheckSignal() const$/;"	f	class:zTCPTask
ifExistName	roleRegServer/RoleTask.cpp	/^bool RoleTask::ifExistName(const char* name)$/;"	f	class:RoleTask
ignoreDam	ScenesServer/SceneEntryPk.h	/^    bool ignoreDam;    \/\/\/ ÂøΩÁï•‰º§ÂÆ≥$/;"	m	struct:SceneEntryPk
ignoreMagicDam	ScenesServer/SceneEntryPk.h	/^    bool ignoreMagicDam; \/\/\/ ÂøΩÁï•È≠îÊ≥ï‰º§ÂÆ≥$/;"	m	struct:SceneEntryPk
ignorePhysicDam	ScenesServer/SceneEntryPk.h	/^    bool ignorePhysicDam; \/\/\/ ÂøΩÁï•Áâ©ÁêÜ‰º§ÂÆ≥$/;"	m	struct:SceneEntryPk
ignoredef	ScenesServer/zObject.h	/^      BYTE ignoredef; \/\/%xÂøΩËßÜÁõÆÊ†áÈò≤Âæ°$/;"	m	struct:Equips::__anon174::__anon175
ignoredef	base/Object.h	/^			WORD ignoredef; \/\/x%%∫ˆ ”ƒø±Í∑¿”˘$/;"	m	struct:t_Object::__anon59::__anon60
imageBuf	tmpcode/commond.h	/^	BYTE  imageBuf[0];$/;"	m	struct:stImageTradeWithNpcCmd
imageBuf	tmpcode/commond.h	/^	BYTE imageBuf[0];$/;"	m	struct:stGetBeTradeImageUserCmd
imageBuf	tmpcode/commond.h	/^        BYTE imageBuf[0];$/;"	m	struct:stSendMailImage
imgErrLock	base/RecordCommand.h	/^      QWORD imgErrLock[MAX_CHARINFO];$/;"	m	struct:Cmd::Record::t_Ret_SelectInfo_GateRecord
impression	base/zDatabase.h	/^    DWORD impression;$/;"	m	struct:zObjectB
inRange	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::inRange(SceneEntryPk * entry)$/;"	f	class:SceneNpc
inSortList	tmpcode/commond.h	/^	bool inSortList;\/\/ «∑Ò‘⁄≈≈––∞Ò¿Ô$/;"	m	struct:stCompareUserDataInFlowerSortUserCmd
inUseOccupation	ScenesServer/HeroInfoManager.h	/^	WORD inUseOccupation;			    \/\/∂‘’Ωµ±«∞ π”√µƒ÷∞“µ$/;"	m	class:AllHeroData
iname	tmpcode/commond.h	/^			char iname[MAX_NAMESIZE + 1];  \/\/∑¢≤º’ﬂ√˚◊÷$/;"	m	struct:stRetAllIssuedQuestUserCmd::quest
iname	tmpcode/commond.h	/^        char iname[MAX_NAMESIZE+1];  \/\/∑¢≤º’ﬂ√˚◊÷$/;"	m	struct:stRetConsignIssuedQuestUserCmd
incMapName	ScenesServer/Scene.h	/^    std::vector<stMapName> incMapName;$/;"	m	class:Scene
incgold	ScenesServer/zObject.h	/^  BYTE incgold; \/\/Â¢ûÂä†ÈáëÈí±ÊéâËêΩx%$/;"	m	class:Equips
increaseGameCount	ScenesServer/ChallengeGameManager.h	/^    void increaseGameCount()$/;"	f	class:ChallengeGameManager
increaseGoldListNum	BillServer/BillUser.cpp	/^void BillUser::increaseGoldListNum()$/;"	f	class:BillUser
increaseMoneyListNum	BillServer/BillUser.cpp	/^void BillUser::increaseMoneyListNum()$/;"	f	class:BillUser
increaseUser	SessionServer/Session.h	/^    void increaseUser()$/;"	f	class:SceneSession
indent	base/xml/xml_utility.h	/^	indent(int _deep, int _space = 4, char c=' ')$/;"	f	struct:detail::indent
indent	base/xml/xml_utility.h	/^    struct indent$/;"	s	namespace:detail
indent	tools/xmlpg.cpp	/^    int indent;$/;"	m	struct:Args
index	GatewayServer/ScreenIndex.h	/^	PosIMapIndex index;$/;"	m	class:ScreenIndex
index	ScenesServer/SceneDefine.h	/^  zPosIndex index;  \/\/\/ ÈùûÈòªÊå°ÁÇπÁ¥¢Âºï$/;"	m	struct:zRegion
index	ScenesServer/zSceneEntryIndex.h	/^    PosIMapIndex index[zSceneEntry::SceneEntry_MAX];$/;"	m	class:zSceneEntryIndex
index	base/Command.h	/^    WORD index;$/;"	m	struct:Cmd::stReqBuyMobileObjectPropertyUserCmd
index	base/HeroCardCmd.h	/^	DWORD index;	    \/\/Ã◊≈∆À˜“˝$/;"	m	struct:Cmd::stReqHeroFightMatchUserCmd
index	base/HeroCardCmd.h	/^	DWORD index;	$/;"	m	struct:Cmd::stReqDeleteOneCardGroupUserCmd
index	base/HeroCardCmd.h	/^	DWORD index;	$/;"	m	struct:Cmd::stReqSaveOneCardGroupUserCmd
index	base/HeroCardCmd.h	/^	DWORD index;	$/;"	m	struct:Cmd::stRetDeleteOneCardGroupUserCmd
index	base/HeroCardCmd.h	/^	DWORD index;	$/;"	m	struct:Cmd::stRetSaveOneCardGroupUserCmd
index	base/HeroCardCmd.h	/^	DWORD index;$/;"	m	struct:Cmd::stReqOneCardGroupInfoUserCmd
index	base/HeroCardCmd.h	/^	DWORD index;$/;"	m	struct:Cmd::stRetCreateOneCardGroupUserCmd
index	base/HeroCardCmd.h	/^	DWORD index;$/;"	m	struct:Cmd::stRetOneCardGroupInfoUserCmd
index	base/HeroCardCmd.h	/^	DWORD index;$/;"	m	struct:Cmd::t_group_list
index	base/xmlparser/giftbag.h	/^        xml_prop<DWORD>	index;$/;"	m	struct:GiftBagConfig::Bag
index	base/xmlparser/giftbag.h	/^        xml_prop<DWORD>	index;$/;"	m	struct:GiftBagConfig::Gift
index	base/xmlparser/market.h	/^            xml_prop<DWORD>	index;$/;"	m	struct:MarketConfig::Obj::Item
index	tmpcode/commond.h	/^		BYTE  index;$/;"	m	struct:stTabKeyPropertyUserCmd::TabKeyNum
index	tmpcode/commond.h	/^		BYTE index;\/\/1:±æΩÏµƒ£¨2:…œΩÏµƒ$/;"	m	struct:stRet32NameListUserCmd::__anon373
index	tmpcode/commond.h	/^		WORD index;         \/\/Ω±¿¯¿‡±$/;"	m	struct:stRet_PromoterRewardUserCmd::Reward
index	tmpcode/commond.h	/^	 unsigned short  index;        \/\/ Item µƒ¿∏Œª (1001 ‘≠¡œ1) (1002 ‘≠¡œ2)$/;"	m	struct:st_WatchPlayer
index	tmpcode/commond.h	/^	BYTE    index;          \/\/…Ã∆∑‘⁄∞¸π¸÷–µƒŒª÷√$/;"	m	struct:stSaleBusinessGoods
index	tmpcode/commond.h	/^	BYTE  index;\/\/Œª÷√$/;"	m	struct:HappyCardInfo
index	tmpcode/commond.h	/^	BYTE index;			\/\/À˜“˝$/;"	m	struct:rqDrawCardHappyCardBoxUserCmd
index	tmpcode/commond.h	/^	BYTE index[4];$/;"	m	struct:HappyCardBoxAutoCfg
index	tmpcode/commond.h	/^	DWORD   index;$/;"	m	struct:stUserEffectCmd
index	tmpcode/commond.h	/^	DWORD index;		\/\/ª®µƒÀ˜“˝$/;"	m	struct:HouseObjDef
index	tmpcode/commond.h	/^	DWORD index;        \/\/’Ω±®À˜“˝£¨”√ ±º‰$/;"	m	struct:stDetailFightContentUserCmd
index	tmpcode/commond.h	/^	WORD index;$/;"	m	struct:stGetForLifeAwardPromoterUserCmd
index	tmpcode/commond.h	/^        BYTE index;\/\/0-»´≤ø…Ë∂®£¨1-10£¨µ⁄NÃ◊$/;"	m	struct:stReqAccelcmdPropUserCmd
index	tmpcode/commond.h	/^        BYTE index;\/\/ π”√µ⁄º∏∏ˆ∫Í$/;"	m	struct:stKeyUseAccelcmdPropUserCmd
index	tmpcode/commond.h	/^        DWORD index;$/;"	m	struct:stQuestTipsUserCmd
index	tmpcode/commond.h	/^        WORD index;                             \/\/Ω±¿¯À˜“˝$/;"	m	struct:rtBlessListUserCmd
index	tmpcode/commond.h	/^    BYTE index; \/\/0µΩ4$/;"	m	struct:rqSendAccelChat
index	tmpcode/commond.h	/^    BYTE index;$/;"	m	struct:rtShenYuCardUserCmd
index	tmpcode/commond.h	/^    BYTE index;\/\/0-4œ¬±Í$/;"	m	struct:ChatAccelItem
index	tmpcode/commond.h	/^    BYTE index;\/\/‘ø≥◊À˜“˝£¨¥”0ø™ º$/;"	m	struct:reqKeyOptShenMiUserCmd
index	tmpcode/commond.h	/^    DWORD   index;  $/;"	m	struct:stUserModelCmd
index	tmpcode/commond.h	/^    DWORD index;   \/\/0~2±Ì æ¥´ÀÕ\/º«¬º 3±Ì æ«Î«Û◊¯±Íœ˚œ¢(µ„ª˜ººƒ‹◊º±∏¥Úø™ΩÁ√Ê ±«Î«Û)$/;"	m	struct:stSetReqShiKongChuanSongUserCmd
indivScore	tmpcode/commond.h	/^	DWORD indivScore;\/\/µ±«∞∏ˆ»Àµ√∑÷  $/;"	m	struct:stPictureEffectMapUserCmd
info	ScenesServer/Quest.cpp	/^std::string QuestList::info(int id) const$/;"	f	class:QuestList
info	ScenesServer/Quest.cpp	/^std::string Vars::info() const$/;"	f	class:Vars
info	SessionServer/HeroCardManager.h	/^    stChallengeInfo info[BATTLE_USER_NUM];	    \/\/∂‘’ΩÀ´∑Ωµƒ–≈œ¢$/;"	m	struct:stMatchedInfo
info	base/Command.h	/^  BYTE info[0];$/;"	m	struct:Cmd::stQuestInfoUserCmd
info	base/Command.h	/^  char info[0];$/;"	m	struct:Cmd::stServerChannelChatUserCmd
info	base/HeroCardCmd.h	/^	t_Tujian info[0];$/;"	m	struct:Cmd::stNotifyAllCardTujianInfoCmd
info	base/HeroCardCmd.h	/^	t_group_list info[0];$/;"	m	struct:Cmd::stRetCardGroupListInfoUserCmd
info	base/HeroCardCmd.h	/^	t_hero info;$/;"	m	struct:Cmd::stRetOneHeroInfoUserCmd
info	base/HeroCardCmd.h	/^	t_hero info[0];$/;"	m	struct:Cmd::stRetAllHeroInfoUserCmd
info	base/RecordCommand.h	/^      SelectUserInfo info[MAX_CHARINFO];  \/\/\/ ËßíËâ≤‰ø°ÊÅØÂàóË°®$/;"	m	struct:Cmd::Record::t_Ret_SelectInfo_GateRecord
info	base/SessionCommand.h	/^		Country_Online info[0];$/;"	m	struct:Cmd::Session::t_updateOnline_SessionGate
info	base/SessionCommand.h	/^      SeptDef::stSeptInfo info;$/;"	m	struct:Cmd::Session::t_addSept_SceneSession
info	base/SessionCommand.h	/^      UnionDef::stUnionInfo info;$/;"	m	struct:Cmd::Session::t_addUnion_SceneSession
info	base/SessionCommand.h	/^      auctionInfo info;$/;"	m	struct:Cmd::Session::t_saleAuction_SceneSession
info	base/SessionCommand.h	/^      char info[MAX_CHATINFO];$/;"	m	struct:Cmd::Session::t_broadcastScene_SceneSession
info	base/SessionCommand.h	/^      char info[MAX_CHATINFO];$/;"	m	struct:Cmd::Session::t_countryNotify_SceneSession
info	base/SessionCommand.h	/^      char info[MAX_CHATINFO];$/;"	m	struct:Cmd::Session::t_serverNotify_SceneSession
info	base/SessionCommand.h	/^      char info[MAX_CHATINFO];$/;"	m	struct:Cmd::Session::t_shutdown_SceneSession
info	base/SessionCommand.h	/^      giftInfo info;$/;"	m	struct:Cmd::Session::t_sendGift_SceneSession
info	tmpcode/commond.h	/^		}info[0];$/;"	m	struct:stRetAllIssuedQuestUserCmd	typeref:struct:stRetAllIssuedQuestUserCmd::quest
info	tmpcode/commond.h	/^	 BYTE info[MAX_INFO_SIZE];  \/\/ Õ£ª˙‘≠“Úµ»–≈œ¢, ŒﬁΩ·Œ≤'\\0'$/;"	m	struct:stStopServerTimeUserCmd
info	tmpcode/commond.h	/^	BYTE info[0];$/;"	m	struct:stQuestInfoUserCmd
info	tmpcode/commond.h	/^	GouhuoMemInfo info[0];  \/\/ÛÙª∫»æ∆µƒ≥…‘±–≈œ¢¡–±Ì$/;"	m	struct:stInfoGouhuoUserCmd
info	tmpcode/commond.h	/^	SortLastWeek info[0];	\/\/∞Òµ•–≈œ¢$/;"	m	struct:infoDukeSortLastWeekUserCmd
info	tmpcode/commond.h	/^	SortLastWeek info[0];	\/\/∞Òµ•–≈œ¢$/;"	m	struct:infoMarquisSortLastWeekUserCmd
info	tmpcode/commond.h	/^	resourceInfo info[0];$/;"	m	struct:stResourceListUnionCmd
info	tmpcode/commond.h	/^	resourceRefine info;$/;"	m	struct:stRetResourceProcessUnionCmd
info	tmpcode/commond.h	/^	teamRecruitInfo info;			\/\/∂”ŒÈ’– ’–≈œ¢$/;"	m	struct:stCreateOrChangeTeamRecruitUserCmd
info	tmpcode/commond.h	/^	}info[2];$/;"	m	struct:stScoreInfoSCUserCmd	typeref:struct:stScoreInfoSCUserCmd::stScoreInfo
info	tmpcode/commond.h	/^	}info[5];$/;"	m	struct:t_RTPositionSkillInfoSept	typeref:struct:t_RTPositionSkillInfoSept::__anon264
info	tmpcode/commond.h	/^        char info[0];     \/\/ºÚµ•¡Ù—‘µƒƒ⁄»›;$/;"	m	struct:stAddIssueQuestUserCmd
info	tmpcode/commond.h	/^        char info[0];    \/\/ºÚµ•¡Ù—‘ƒ⁄»›$/;"	m	struct:stRetInfoIssuedQuestUserCmd
info	tmpcode/commond.h	/^        char info[0];  \/\/»ŒŒÒ√Ë ˆ+(ºÚµ•¡Ù—‘)$/;"	m	struct:stRetConsignIssuedQuestUserCmd
info	tmpcode/commond.h	/^        }info[0];$/;"	m	struct:stCrystalAllInfoDataUserCmd	typeref:struct:stCrystalAllInfoDataUserCmd::cryState
info	tmpcode/commond.h	/^    RoomInfo info[0];$/;"	m	struct:stRoomInfoQuestRoomUserCmd
info	tmpcode/commond.h	/^    SortThisWeek info[0];   \/\/∞Òµ•–≈œ¢$/;"	m	struct:infoDukeSortThisWeekUserCmd
info	tmpcode/commond.h	/^    SortThisWeek info[0];   \/\/∞Òµ•–≈œ¢$/;"	m	struct:infoMarquisSortThisWeekUserCmd
info	tmpcode/commond.h	/^    char info[0];           \/\/∏Ò Ω»Á£≠>"µ»º∂±Í ∂£∫∆ ºµ»º∂-÷’÷πµ»º∂£ªµ»º∂±Í÷æ£∫°£°£°£"$/;"	m	struct:stNotifyLevelFormQuestRoomUserCmd
info	tmpcode/commond.h	/^    char info[0];   \/\/∏Ò Ω»Á"≥…‘±√˚£∫÷∞“µ±‡∫≈£ª°£°£°£"$/;"	m	struct:stRoomMemDetailQuestRoomUserCmd
info	tmpcode/commond.h	/^    t_RewardInfo info[0];$/;"	m	struct:stNotifyShenLongReward
info1	tmpcode/commond.h	/^	DWORD info1;	\/\/0-6Œª±Ì æ…˙≥§Ω◊∂Œ%£ª7-10Œª±Ì æ◊˜ŒÔÀ˘¥¶Ω◊∂Œ£ª11-18Œª±Ì æ∏√Ω◊∂Œ £”‡ ±º‰£ª19-22Œª±Ì æµ±«∞Õ¡µÿ◊¥Ã¨£¨÷µŒ™1”–≥Ê2”–‘”≤›£ª23-31Œª±Ì æ £”‡π˚ µ ˝ƒø$/;"	m	struct:SoilInfo
info2	tmpcode/commond.h	/^	WORD info2;		\/\/0-3Œª±Ì æÕ¡µÿµ»º∂£ª4-10Œª±Ì æÀÆ∑÷ ™∂»%$/;"	m	struct:SoilInfo
infoClientPool	SuperServer/InfoClientManager.h	/^    zTCPClientTaskPool *infoClientPool;$/;"	m	class:InfoClientManager
infoCode	tmpcode/commond.h	/^	BYTE infoCode; \/\/∑¢ÀÕªÚ’ﬂ∑µªÿ¥˙¬Î,∑¢ÀÕ ±1Œ™—˚«Î£¨2Œ™π€ø¥£¨3Œ™≤È—Ø,4Œ™±»»¸∫Ûªÿ≥«$/;"	m	struct:stReqChallengeUserCmd
infoDukeSortLastWeekUserCmd	tmpcode/commond.h	/^	infoDukeSortLastWeekUserCmd()$/;"	f	struct:infoDukeSortLastWeekUserCmd
infoDukeSortLastWeekUserCmd	tmpcode/commond.h	/^struct infoDukeSortLastWeekUserCmd: public stNSUserCmd$/;"	s
infoDukeSortThisWeekUserCmd	tmpcode/commond.h	/^    infoDukeSortThisWeekUserCmd(): size(0), myExploitTW(0)$/;"	f	struct:infoDukeSortThisWeekUserCmd
infoDukeSortThisWeekUserCmd	tmpcode/commond.h	/^struct infoDukeSortThisWeekUserCmd: public stNSUserCmd$/;"	s
infoMap	BillServer/BillManager.h	/^    BillInfoMap infoMap;$/;"	m	class:BillManager
infoMarquisSortLastWeekUserCmd	tmpcode/commond.h	/^	infoMarquisSortLastWeekUserCmd()$/;"	f	struct:infoMarquisSortLastWeekUserCmd
infoMarquisSortLastWeekUserCmd	tmpcode/commond.h	/^struct infoMarquisSortLastWeekUserCmd: public stNSUserCmd$/;"	s
infoMarquisSortThisWeekUserCmd	tmpcode/commond.h	/^    infoMarquisSortThisWeekUserCmd(): size(0), myExploitTW(0)$/;"	f	struct:infoMarquisSortThisWeekUserCmd
infoMarquisSortThisWeekUserCmd	tmpcode/commond.h	/^struct infoMarquisSortThisWeekUserCmd: public stNSUserCmd$/;"	s
infoTempID	base/SuperCommand.h	/^      DWORD    infoTempID;$/;"	m	struct:Cmd::Super::t_CountryOnline
infoTempID	base/SuperCommand.h	/^      DWORD    infoTempID;$/;"	m	struct:Cmd::Super::t_Request_CountryOnline
infoType	base/SessionCommand.h	/^      int infoType;$/;"	m	struct:Cmd::Session::t_broadcastScene_SceneSession
infoType	base/SessionCommand.h	/^      int infoType;$/;"	m	struct:Cmd::Session::t_countryNotify_SceneSession
infoType	base/SessionCommand.h	/^      int infoType;$/;"	m	struct:Cmd::Session::t_serverNotify_SceneSession
infoUserObjUpdate	ScenesServer/script_func.cpp	/^void infoUserObjUpdate(SceneUser *user,DWORD thisid)$/;"	f
infosize	tmpcode/commond.h	/^        DWORD infosize;     \/\/√Ë ˆ¥Û–°$/;"	m	struct:showPeronTaskUserCmd
init	BillServer/BillClientManager.cpp	/^bool BillClientManager::init(const std::string &confile,const std::string &tradelog,BillCallback &bc)$/;"	f	class:BillClientManager
init	BillServer/BillServer.cpp	/^bool BillService::init()$/;"	f	class:BillService
init	BillServer/StockConsign.cpp	/^bool ConsignGoldManager::init()$/;"	f	class:ConsignGoldManager
init	BillServer/StockConsign.cpp	/^bool ConsignHistoryManager::init()$/;"	f	class:ConsignHistoryManager
init	BillServer/StockConsign.cpp	/^bool ConsignMoneyManager::init()$/;"	f	class:ConsignMoneyManager
init	FLServer/FLServer.cpp	/^bool FLService::init()$/;"	f	class:FLService
init	FLServer/UserHttpPub.cpp	/^bool UserConfigM::init()$/;"	f	class:UserConfigM
init	GatewayServer/CmdChecker.cpp	/^bool CheckerTable::init()$/;"	f	class:CheckerTable
init	GatewayServer/CountryInfo.cpp	/^bool CountryInfo::init()$/;"	f	class:CountryInfo
init	GatewayServer/GateUserManager.cpp	/^bool GateUserManager::init()$/;"	f	class:GateUserManager
init	GatewayServer/GatewayServer.cpp	/^bool GatewayService::init()$/;"	f	class:GatewayService
init	GatewayServer/SceneClientManager.cpp	/^bool SceneClientManager::init()$/;"	f	class:SceneClientManager
init	RecordServer/RecordServer.cpp	/^bool RecordService::init()$/;"	f	class:RecordService
init	Robot/Client.cpp	/^bool Client::init(DWORD acc, DWORD tempid, DES_cblock key)$/;"	f	class:Client
init	Robot/ClientManager.cpp	/^bool ClientManager::init()$/;"	f	class:ClientManager
init	Robot/ClientService.cpp	/^bool ClientService::init()$/;"	f	class:ClientService
init	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::init(SceneUser *pUser)$/;"	f	class:ChallengeGame
init	ScenesServer/NpcTrade.cpp	/^bool NpcTrade::init()$/;"	f	class:NpcTrade
init	ScenesServer/QuestTable.cpp	/^bool EventTable::init(const std::string& type,const std::string& file)$/;"	f	class:EventTable
init	ScenesServer/QuestTable.cpp	/^bool QuestTable::init(const std::string &loadtype, const std::string &name)$/;"	f	class:QuestTable
init	ScenesServer/Scene.cpp	/^bool Scene::init(DWORD countryid,DWORD mapid)$/;"	f	class:Scene
init	ScenesServer/SceneManager.cpp	/^bool SceneManager::init()$/;"	f	class:SceneManager
init	ScenesServer/SceneNpcManager.cpp	/^bool SceneNpcManager::init()$/;"	f	class:SceneNpcManager
init	ScenesServer/ScenePk.cpp	/^void SkillState::init()$/;"	f	class:SkillState
init	ScenesServer/ScenePk.h	/^  void init()$/;"	f	struct:PkPreValue
init	ScenesServer/ScenePk.h	/^  void init()$/;"	f	struct:PkValue
init	ScenesServer/ScenesServer.cpp	/^bool ScenesService::init()$/;"	f	class:ScenesService
init	ScenesServer/WayPoint.cpp	/^bool WayPoint::init(zXMLParser *parser,const xmlNodePtr node,DWORD countryid)$/;"	f	class:WayPoint
init	SessionServer/CRelationManager.cpp	/^void CRelationManager::init()$/;"	f	class:CRelationManager
init	SessionServer/CSort.cpp	/^bool CSortM::init()$/;"	f	class:CSortM
init	SessionServer/CountryInfo.cpp	/^bool CountryInfo::init()$/;"	f	class:CountryInfo
init	SessionServer/SessionManager.cpp	/^bool SceneSessionManager::init()$/;"	f	class:SceneSessionManager
init	SessionServer/SessionManager.cpp	/^bool UserSessionManager::init()$/;"	f	class:UserSessionManager
init	SessionServer/SessionServer.cpp	/^bool SessionService::init()$/;"	f	class:SessionService
init	SessionServer/SessionServer.h	/^  void init(Cmd::t_NullCmd * rev,DWORD len,DWORD countryID)$/;"	f	struct:OneCountryScene
init	SessionServer/SessionTask.cpp	/^  bool init(Cmd::stChannelChatUserCmd * rev,DWORD len)$/;"	f	struct:EveryUserSessionAction
init	SessionServer/SessionTask.cpp	/^  bool init(Cmd::stChannelChatUserCmd * rev,DWORD len)$/;"	f	struct:broadcastToEveryUser
init	SessionServer/SessionTask.cpp	/^  bool init(char * content)$/;"	f	struct:broadcastRushToEveryUser
init	SessionServer/SessionTask.cpp	/^  void init(Cmd::stNullUserCmd * rev,DWORD len,DWORD countryID)$/;"	f	struct:OneCountryUserSessionAction
init	SuperServer/BroadClientManager.cpp	/^bool BroadClientManager::init()$/;"	f	class:BroadClientManager
init	SuperServer/FLClientManager.cpp	/^bool FLClientManager::init()$/;"	f	class:FLClientManager
init	SuperServer/InfoClientManager.cpp	/^bool InfoClientManager::init()$/;"	f	class:InfoClientManager
init	SuperServer/RolechangeClientManager.cpp	/^bool RolechangeClientManager::init()$/;"	f	class:RolechangeClientManager
init	SuperServer/RoleregClientManager.cpp	/^bool RoleregClientManager::init()$/;"	f	class:RoleregClientManager
init	SuperServer/SuperServer.cpp	/^bool SuperService::init()$/;"	f	class:SuperService
init	base/xmlparser/herobase.h	/^    xml_node<Init>	init;$/;"	m	struct:HeroBaseCFG
init	base/zUniqueID.h	/^	void init(T min,T max)$/;"	f	class:zUniqueID
init	roleChangeServer/roleChangeServer.cpp	/^bool roleChangeService::init()$/;"	f	class:roleChangeService
init	roleRegServer/roleRegServer.cpp	/^bool roleRegService::init()$/;"	f	class:roleRegService
init	tmpcode/commond.h	/^		inline void init()$/;"	f	struct:ChangeInfo::objInfo
initAnswerCount	ScenesServer/SceneUser.cpp	/^void SceneUser::initAnswerCount()$/;"	f	class:SceneUser
initBaseBattleInfo	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::initBaseBattleInfo()$/;"	f	class:ChallengeGame
initByNpcDefine	ScenesServer/Scene.cpp	/^bool Scene::initByNpcDefine(const t_NpcDefine *pDefine)$/;"	f	class:Scene
initCardsLib	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::initCardsLib(SceneUser *pUser, std::vector<DWORD> &libVec)$/;"	f	class:ChallengeGame
initCharBase	ScenesServer/SceneUser.cpp	/^void SceneUser::initCharBase(Scene *intoscene)$/;"	f	class:SceneUser
initData	ScenesServer/HeroInfoManager.cpp	/^void HeroInfoManager::initData(SceneUser& user)$/;"	f	class:HeroInfoManager
initFilter	ScenesServer/scriptTickTask.h	/^		static void initFilter()$/;"	f	class:scriptMessageFilter
initFunctionList	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::initFunctionList()$/;"	f	class:SkillStatusManager
initFunctionListUnsafe	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::initFunctionListUnsafe()$/;"	f	class:SkillStatusManager
initGameData	ScenesServer/ChallengeGameManager.cpp	/^bool ChallengeGameManager::initGameData(SceneUser *pUser)$/;"	f	class:ChallengeGameManager
initMapGhost	ScenesServer/SceneUser.cpp	/^	void initMapGhost()$/;"	f	struct:GetEnvryOneAndSend
initMapUser	ScenesServer/SceneUser.cpp	/^	void initMapUser()$/;"	f	struct:GetEnvryOneAndSend
initMe	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::initMe(zCard *pEntry)$/;"	f	class:SkillStatusManager
initNpc	ScenesServer/Scene.cpp	/^void Scene::initNpc(SceneNpc *sceneNpc,zRegion *init_region,zPos myPos)$/;"	f	class:Scene
initOneChallengeCards	ScenesServer/GroupCardManager.cpp	/^bool GroupCardManager::initOneChallengeCards(SceneUser& user, const DWORD index, std::vector<DWORD> &lib)$/;"	f	class:GroupCardManager
initPet	ScenesServer/SceneUser.cpp	/^	void initPet()$/;"	f	struct:GetEnvryOneAndSend
initPointMap	FLServer/UserHttpPub.cpp	/^bool UserConfigM::initPointMap()$/;"	f	class:UserConfigM
initRegion	ScenesServer/Scene.cpp	/^void Scene::initRegion(zRegion &reg,const zPos &pos,const WORD width,const WORD height)$/;"	f	class:Scene
initServerSequence	SuperServer/ServerTask.cpp	/^void initServerSequence()$/;"	f
initShopAdv	ScenesServer/SceneUser.cpp	/^	void initShopAdv()		\/\/Shx Add $/;"	f	struct:GetEnvryOneAndSend
initState	GatewayServer/GateUser.h	/^	void initState()$/;"	f	class:GateUser
initTime	GatewayServer/GatewayTask.h	/^	zRTime initTime;$/;"	m	class:GatewayTask
initTire	ScenesServer/SceneUser.cpp	/^void SceneUser::initTire()$/;"	f	class:SceneUser
initWayPoint	ScenesServer/Scene.cpp	/^bool Scene::initWayPoint(zXMLParser *parser,const xmlNodePtr node,DWORD countryid)$/;"	f	class:Scene
init_value	base/xml/xml_node.h	/^		void init_value() {T::init_value(); }$/;"	f	class:xml_node
init_value	base/xml/xml_node_container.h	/^	    void init_value()$/;"	f	class:detail::xml_node_seq_container
init_value	base/xml/xml_node_container.h	/^           void init_value()$/;"	f	class:detail::xml_node_map_container
init_value	base/xml/xml_node_content.h	/^	void init_value() {$/;"	f	class:xml_content
init_value	base/xml/xml_node_content.h	/^	void init_value(const T& init) {$/;"	f	class:xml_content
init_value	base/xml/xml_node_prop.h	/^	void init_value()$/;"	f	class:xml_prop
init_value	base/xml/xml_node_prop.h	/^	void init_value(const T& init)$/;"	f	class:xml_prop
inited	GatewayServer/GateUserManager.h	/^	bool inited;$/;"	m	class:GateUserManager
inited	ScenesServer/Scene.h	/^    bool inited;$/;"	m	class:Scene
inited	ScenesServer/SceneManager.h	/^    bool inited;$/;"	m	class:SceneManager
inited	SessionServer/SessionManager.h	/^    bool inited;$/;"	m	class:SceneSessionManager
inited	SessionServer/SessionManager.h	/^    bool inited;$/;"	m	class:UserSessionManager
inited1	ScenesServer/ChallengeGame.h	/^	bool inited1;$/;"	m	class:ChallengeGame
inited2	ScenesServer/ChallengeGame.h	/^	bool inited2;$/;"	m	class:ChallengeGame
initmapNpc	ScenesServer/SceneUser.cpp	/^	void initmapNpc()$/;"	f	struct:GetEnvryOneAndSend
initstate	ScenesServer/SceneDefine.h	/^	zSceneEntry::SceneEntryState initstate;  \/\/ÂàùÂßãÁä∂ÊÄÅ,ÈöêËóèÊàñËÄÖÈùûÈöêËóè$/;"	m	struct:t_NpcDefine
initstate	ScenesServer/SceneDefine.h	/^  zSceneEntry::SceneEntryState initstate;  \/\/ÂàùÂßãÁä∂ÊÄÅ,ÈöêËóèÊàñËÄÖÈùûÈöêËóè$/;"	m	struct:ZoneTypeDef
insect	tmpcode/commond.h	/^	BYTE insect;			\/\/≤°≥Ê∫¶$/;"	m	struct:stLandItem
insert	ScenesServer/Recycle.cpp	/^void SceneRecycle::insert(SceneNpc *n, DWORD delay)$/;"	f	class:SceneRecycle
insert	base/zEntryManager.h	/^	inline bool insert(const keyT &key,valueT &value)$/;"	f	class:LimitHash
insert	base/zEntryManager.h	/^	inline bool insert(const keyT &key,valueT &value)$/;"	f	class:MultiHash
insertCharTest	RecordServer/RecordTask.cpp	/^bool RecordTask::insertCharTest(Cmd::Record::t_Insert_CharTest_SceneRecord *rev)$/;"	f	class:RecordTask
insertDBRecord	SessionServer/CRelationManager.cpp	/^bool CRelationManager::insertDBRecord(const CRelation *relation)$/;"	f	class:CRelationManager
inserted	GatewayServer/GateUser.h	/^	bool inserted;$/;"	m	class:GateUser
inserted	ScenesServer/Skill.h	/^    bool inserted;$/;"	m	struct:zSkill
inserted	ScenesServer/zCard.h	/^    bool inserted;$/;"	m	struct:zCard
inserted	ScenesServer/zObject.h	/^    bool inserted;$/;"	m	struct:zObject
inserted	base/zSceneEntry.h	/^	bool inserted;$/;"	m	struct:zSceneEntry
inside_port	FLServer/FLServer.h	/^	WORD inside_port;$/;"	m	class:FLService
instance	BillServer/BillCallback.h	/^    static T* instance;$/;"	m	class:SingletonBase
instance	BillServer/BillCallback.h	/^template <typename T> T* SingletonBase<T>::instance = NULL;$/;"	m	class:SingletonBase
instance	BillServer/BillManager.cpp	/^BillManager *BillManager::instance = NULL;$/;"	m	class:BillManager
instance	BillServer/BillManager.h	/^    static BillManager *instance;$/;"	m	class:BillManager
instance	BillServer/BillServer.cpp	/^BillService *BillService::instance = NULL;$/;"	m	class:BillService
instance	BillServer/BillServer.h	/^    static BillService *instance;$/;"	m	class:BillService
instance	BillServer/BillSessionManager.cpp	/^BillSessionManager *BillSessionManager::instance = NULL;$/;"	m	class:BillSessionManager
instance	BillServer/BillSessionManager.h	/^    static BillSessionManager *instance;$/;"	m	class:BillSessionManager
instance	BillServer/BillTaskManager.cpp	/^BillTaskManager *BillTaskManager::instance = NULL;$/;"	m	class:BillTaskManager
instance	BillServer/BillTaskManager.h	/^    static BillTaskManager *instance;$/;"	m	class:BillTaskManager
instance	BillServer/BillUserManager.h	/^    static BillUserManager *instance;$/;"	m	class:BillUserManager
instance	BillServer/StockConsign.cpp	/^ConsignGoldManager *ConsignGoldManager::instance=NULL;$/;"	m	class:ConsignGoldManager
instance	BillServer/StockConsign.cpp	/^ConsignHistoryManager *ConsignHistoryManager::instance=NULL;$/;"	m	class:ConsignHistoryManager
instance	BillServer/StockConsign.cpp	/^ConsignMoneyManager *ConsignMoneyManager::instance=NULL;$/;"	m	class:ConsignMoneyManager
instance	BillServer/StockConsign.h	/^    static ConsignGoldManager *instance;$/;"	m	class:ConsignGoldManager
instance	BillServer/StockConsign.h	/^    static ConsignHistoryManager *instance;$/;"	m	class:ConsignHistoryManager
instance	BillServer/StockConsign.h	/^    static ConsignMoneyManager *instance;$/;"	m	class:ConsignMoneyManager
instance	BillServer/TimeTick.cpp	/^BillTimeTick *BillTimeTick::instance = NULL;$/;"	m	class:BillTimeTick
instance	BillServer/TimeTick.h	/^    static BillTimeTick *instance;$/;"	m	class:BillTimeTick
instance	FLServer/GYListManager.cpp	/^GYListManager *GYListManager::instance = NULL;$/;"	m	class:GYListManager
instance	FLServer/GYListManager.h	/^	static GYListManager *instance;$/;"	m	class:GYListManager
instance	FLServer/LoginManager.cpp	/^LoginManager *LoginManager::instance = NULL;$/;"	m	class:LoginManager
instance	FLServer/LoginManager.h	/^	static LoginManager *instance;$/;"	m	class:LoginManager
instance	FLServer/ServerManager.cpp	/^ServerManager *ServerManager::instance = NULL;$/;"	m	class:ServerManager
instance	FLServer/ServerManager.h	/^	static ServerManager *instance;$/;"	m	class:ServerManager
instance	FLServer/TimeTick.cpp	/^FLTimeTick *FLTimeTick::instance = NULL;$/;"	m	class:FLTimeTick
instance	FLServer/TimeTick.h	/^	static FLTimeTick *instance;$/;"	m	class:FLTimeTick
instance	GatewayServer/GatewayServer.cpp	/^GatewayService *GatewayService::instance = NULL;$/;"	m	class:GatewayService
instance	GatewayServer/GatewayServer.h	/^	static GatewayService *instance;$/;"	m	class:GatewayService
instance	GatewayServer/GatewayTaskManager.cpp	/^GatewayTaskManager *GatewayTaskManager::instance = NULL;$/;"	m	class:GatewayTaskManager
instance	GatewayServer/GatewayTaskManager.h	/^	static GatewayTaskManager *instance;$/;"	m	class:GatewayTaskManager
instance	GatewayServer/LoginSessionManager.cpp	/^LoginSessionManager *LoginSessionManager::instance = NULL;$/;"	m	class:LoginSessionManager
instance	GatewayServer/LoginSessionManager.h	/^	static LoginSessionManager *instance;$/;"	m	class:LoginSessionManager
instance	GatewayServer/SceneClientManager.cpp	/^SceneClientManager *SceneClientManager::instance = NULL;$/;"	m	class:SceneClientManager
instance	GatewayServer/SceneClientManager.h	/^	static SceneClientManager *instance;$/;"	m	class:SceneClientManager
instance	GatewayServer/TimeTick.cpp	/^GatewayTimeTick *GatewayTimeTick::instance = NULL;$/;"	m	class:GatewayTimeTick
instance	GatewayServer/TimeTick.h	/^	static GatewayTimeTick *instance;$/;"	m	class:GatewayTimeTick
instance	RecordServer/RecordServer.cpp	/^RecordService *RecordService::instance = NULL;$/;"	m	class:RecordService
instance	RecordServer/RecordServer.h	/^    static RecordService *instance;$/;"	m	class:RecordService
instance	RecordServer/RecordSessionManager.cpp	/^RecordSessionManager *RecordSessionManager::instance = NULL;$/;"	m	class:RecordSessionManager
instance	RecordServer/RecordSessionManager.h	/^    static RecordSessionManager *instance;$/;"	m	class:RecordSessionManager
instance	Robot/ClientManager.cpp	/^ClientManager *ClientManager::instance = NULL;$/;"	m	class:ClientManager
instance	Robot/ClientManager.h	/^	static ClientManager *instance;$/;"	m	class:ClientManager
instance	Robot/ClientService.cpp	/^ClientService *ClientService::instance = NULL;$/;"	m	class:ClientService
instance	Robot/ClientService.h	/^    static ClientService *instance;$/;"	m	class:ClientService
instance	Robot/TimeTick.cpp	/^ClientTimeTick *ClientTimeTick::instance = NULL;$/;"	m	class:ClientTimeTick
instance	Robot/TimeTick.h	/^	static ClientTimeTick *instance;$/;"	m	class:ClientTimeTick
instance	ScenesServer/NpcTrade.cpp	/^NpcTrade *NpcTrade::instance = NULL;$/;"	m	class:NpcTrade
instance	ScenesServer/NpcTrade.h	/^    static NpcTrade *instance;$/;"	m	class:NpcTrade
instance	ScenesServer/Quest.cpp	/^UserVar& UserVar::instance()$/;"	f	class:UserVar
instance	ScenesServer/Quest.h	/^  static self_t& instance()$/;"	f	class:GlobalVarImpl
instance	ScenesServer/QuestEvent.h	/^  static self_t& instance() $/;"	f	class:EventManager
instance	ScenesServer/QuestMaker.h	/^  static self_t& instance()$/;"	f	class:ProductFactory
instance	ScenesServer/QuestTable.cpp	/^EventTable& EventTable::instance()$/;"	f	class:EventTable
instance	ScenesServer/QuestTable.cpp	/^QuestTable& QuestTable::instance()$/;"	f	class:QuestTable
instance	ScenesServer/Recycle.cpp	/^SceneRecycle *SceneRecycle::instance = NULL;$/;"	m	class:SceneRecycle
instance	ScenesServer/Recycle.h	/^	static SceneRecycle *instance;$/;"	m	class:SceneRecycle
instance	ScenesServer/SceneTaskManager.cpp	/^SceneTaskManager *SceneTaskManager::instance = NULL;$/;"	m	class:SceneTaskManager
instance	ScenesServer/SceneTaskManager.h	/^    static SceneTaskManager *instance;$/;"	m	class:SceneTaskManager
instance	ScenesServer/SceneUserManager.h	/^    static SceneRecycleUserManager *instance;$/;"	m	class:SceneRecycleUserManager
instance	ScenesServer/ScenesServer.cpp	/^ScenesService *ScenesService::instance = NULL;$/;"	m	class:ScenesService
instance	ScenesServer/ScenesServer.h	/^    static ScenesService *instance;$/;"	m	class:ScenesService
instance	ScenesServer/TimeTick.cpp	/^SceneTimeTick *SceneTimeTick::instance = NULL;$/;"	m	class:SceneTimeTick
instance	ScenesServer/TimeTick.h	/^    static SceneTimeTick *instance;$/;"	m	class:SceneTimeTick
instance	ScenesServer/script.cpp	/^ScriptingSystemLua& ScriptingSystemLua::instance()$/;"	f	class:ScriptingSystemLua
instance	SessionServer/SessionServer.cpp	/^SessionService *SessionService::instance = NULL;$/;"	m	class:SessionService
instance	SessionServer/SessionServer.h	/^    static SessionService *instance;$/;"	m	class:SessionService
instance	SessionServer/SessionTaskManager.cpp	/^SessionTaskManager *SessionTaskManager::instance = NULL;$/;"	m	class:SessionTaskManager
instance	SessionServer/SessionTaskManager.h	/^    static SessionTaskManager *instance;$/;"	m	class:SessionTaskManager
instance	SessionServer/TimeTick.cpp	/^SessionTimeTick *SessionTimeTick::instance = NULL;$/;"	m	class:SessionTimeTick
instance	SessionServer/TimeTick.h	/^    static SessionTimeTick *instance;$/;"	m	class:SessionTimeTick
instance	SuperServer/BroadClientManager.cpp	/^BroadClientManager *BroadClientManager::instance = NULL;$/;"	m	class:BroadClientManager
instance	SuperServer/BroadClientManager.h	/^    static BroadClientManager *instance;$/;"	m	class:BroadClientManager
instance	SuperServer/FLClientManager.cpp	/^FLClientManager *FLClientManager::instance = NULL;$/;"	m	class:FLClientManager
instance	SuperServer/FLClientManager.h	/^    static FLClientManager *instance;$/;"	m	class:FLClientManager
instance	SuperServer/InfoClientManager.cpp	/^InfoClientManager *InfoClientManager::instance = NULL;$/;"	m	class:InfoClientManager
instance	SuperServer/InfoClientManager.h	/^    static InfoClientManager *instance;$/;"	m	class:InfoClientManager
instance	SuperServer/RolechangeClientManager.cpp	/^RolechangeClientManager *RolechangeClientManager::instance = NULL;$/;"	m	class:RolechangeClientManager
instance	SuperServer/RolechangeClientManager.h	/^    static RolechangeClientManager *instance;$/;"	m	class:RolechangeClientManager
instance	SuperServer/RoleregCache.cpp	/^RoleregCache *RoleregCache::instance = NULL;$/;"	m	class:RoleregCache
instance	SuperServer/RoleregCache.h	/^    static RoleregCache *instance;$/;"	m	class:RoleregCache
instance	SuperServer/RoleregClientManager.cpp	/^RoleregClientManager *RoleregClientManager::instance = NULL;$/;"	m	class:RoleregClientManager
instance	SuperServer/RoleregClientManager.h	/^    static RoleregClientManager *instance;$/;"	m	class:RoleregClientManager
instance	SuperServer/ServerManager.cpp	/^ServerManager *ServerManager::instance = NULL;$/;"	m	class:ServerManager
instance	SuperServer/ServerManager.h	/^    static ServerManager *instance;$/;"	m	class:ServerManager
instance	SuperServer/SuperServer.cpp	/^SuperService *SuperService::instance = NULL;$/;"	m	class:SuperService
instance	SuperServer/SuperServer.h	/^    static SuperService *instance;$/;"	m	class:SuperService
instance	SuperServer/TimeTick.cpp	/^SuperTimeTick *SuperTimeTick::instance = NULL;$/;"	m	class:SuperTimeTick
instance	SuperServer/TimeTick.h	/^    static SuperTimeTick *instance;$/;"	m	class:SuperTimeTick
instance	base/zMNetService.h	/^	static zMNetService *instance;    \/**< ¿‡µƒŒ®“ª µ¿˝÷∏’Î£¨∞¸¿®≈……˙¿‡£¨≥ı ºªØŒ™ø’÷∏’Î *\/$/;"	m	class:zMNetService
instance	base/zMisc.h	/^	static object_type & instance()$/;"	f	struct:singleton_default
instance	base/zNetService.h	/^	static zNetService *instance;    \/**< ¿‡µƒŒ®“ª µ¿˝÷∏’Î£¨∞¸¿®≈……˙¿‡£¨≥ı ºªØŒ™ø’÷∏’Î *\/$/;"	m	class:zNetService
instance	base/zSingleton.h	/^		static T* instance(void)$/;"	f	class:Singleton
instance	base/zSingleton.h	/^	static T* instance()$/;"	f	class:SingletonFactory
inte	ScenesServer/zObject.h	/^  WORD inte;  \/\/ Êô∫Âäõ$/;"	m	class:Equips
inte	base/Object.h	/^	WORD inte;  \/\/ ÷«¡¶                              \/\/ ∂‘”¶¬Ì∆• ÷«¡¶ \/\/  ±◊∞Ω´¡¶¡ø∫Õ÷«¡¶÷ÿ”√Œ™‘ˆº”HP∫ÕMP…œœﬁµƒ∞Ÿ∑÷±»$/;"	m	struct:t_Object
inte	base/zDatabase.h	/^    DWORD   inte;        \/\/ ÷«¡¶$/;"	m	struct:zNpcB
inte	tmpcode/commond.h	/^	WORD inte;$/;"	m	struct:SimulateHorse
inte_Attribute	ScenesServer/zObject.h	/^	  WORD inte_Attribute;	\/\/ Êô∫ÂäõÂ∑≤ÁªèÂä†ËøáÁöÑËá™Áî±ÁÇπ$/;"	m	struct:Equips::Freedom_Attribute
intel	base/Command.h	/^	DWORD intel;             \/\/Êô∫Âäõ$/;"	m	struct:Cmd::t_PetData
intel	base/Command.h	/^  WORD intel;    \/\/Êô∫Âäõ$/;"	m	struct:Cmd::t_HorseData
intel	tmpcode/commond.h	/^	WORD intel;             \/\/÷«¡¶$/;"	m	struct:t_PetData
intensifyLevel	tmpcode/commond.h	/^	DWORD intensifyLevel;           \/\/\/ µ±«∞∑˚Œƒ«øªØ◊∞±∏µƒ◊Ó∏ﬂµ»º∂$/;"	m	struct:stEquipIntensifyInfo
intensifyStar	tmpcode/commond.h	/^	DWORD intensifyStar;            \/\/\/ µ±«∞∑˚Œƒ«øªØ◊∞±∏µƒ◊Ó¥Û–« ˝$/;"	m	struct:stEquipIntensifyInfo
interval	ScenesServer/SceneDefine.h	/^	DWORD interval;              \/\/Âà∑Êñ∞Êó∂Èó¥$/;"	m	struct:t_NpcDefine
interval	SessionServer/SessionServer.h	/^  DWORD interval;$/;"	m	struct:worldMsg
interval	base/GmToolCommand.h	/^      DWORD interval;$/;"	m	struct:Cmd::GmTool::t_Broadcast_GmTool
interval	tmpcode/commond.h	/^		WORD interval;$/;"	m	struct:stPlaySoundQuestUserCmd
interval	tmpcode/commond.h	/^	DWORD interval; \/\/¥Ã‚À˘ª®∑—µƒ ±º‰º‰∏Ù$/;"	m	struct:stSurveyResultUserCmd
intervalAmendment	ScenesServer/SceneDefine.h	/^	DWORD intervalAmendment;		\/\/sky Â§çÊ¥ªÊó∂Èó¥‰øÆÊ≠£ÂÄº$/;"	m	struct:t_NpcDefine
into	tmpcode/commond.h	/^        bool into;$/;"	m	struct:stCrystalIntoCarryDataUserCmd
intoScene	ScenesServer/SceneUser.cpp	/^bool SceneUser::intoScene(Scene *newscene,bool needInitInfo,const zPos & initPos)$/;"	f	class:SceneUser
introduction	tmpcode/commond.h	/^		ChatAccelItem introduction;$/;"	m	struct:stRetWatchDragonDataUserCmd
introject_maxhp	ScenesServer/ScenePk.h	/^      WORD introject_maxhp; \/\/ Âè¨Âî§Âêà‰ΩìÂ¢ûÂä†ÁîüÂëΩ‰∏äÈôê$/;"	m	struct:SkillState::__anon155::__anon156
introject_maxmdam	ScenesServer/ScenePk.h	/^      WORD introject_maxmdam; \/\/ Âè¨Âî§Âêà‰ΩìÂ¢ûÂä†È≠îÊ≥ïÊîªÂáª$/;"	m	struct:SkillState::__anon155::__anon156
introject_maxpdam	ScenesServer/ScenePk.h	/^      WORD introject_maxpdam; \/\/ Âè¨Âî§Âêà‰ΩìÂ¢ûÂä†Áâ©ÁêÜÊîªÂáª$/;"	m	struct:SkillState::__anon155::__anon156
introject_mdam	ScenesServer/ScenePk.h	/^      WORD introject_mdam; \/\/ Âè¨Âî§Âêà‰ΩìÂ¢ûÂä†È≠îÊ≥ïÊîªÂáª$/;"	m	struct:SkillState::__anon155::__anon156
introject_mdef	ScenesServer/ScenePk.h	/^      WORD introject_mdef; \/\/ Âè¨Âî§Âêà‰ΩìÂ¢ûÂä†È≠îÊ≥ïÈò≤Âæ°$/;"	m	struct:SkillState::__anon155::__anon156
introject_pdam	ScenesServer/ScenePk.h	/^      WORD introject_pdam; \/\/ Âè¨Âî§Âêà‰ΩìÂ¢ûÂä†Áâ©ÁêÜÊîªÂáª$/;"	m	struct:SkillState::__anon155::__anon156
introject_pdef	ScenesServer/ScenePk.h	/^      WORD introject_pdef; \/\/ Âè¨Âî§Âêà‰ΩìÂ¢ûÂä†Áâ©ÁêÜÈò≤Âæ°$/;"	m	struct:SkillState::__anon155::__anon156
invalid	base/zUniqueID.h	/^	T invalid()$/;"	f	class:zUniqueID
inviteName	tmpcode/commond.h	/^	char inviteName[MAX_NAMESIZE+1];  \/\/—˚«Î»À–’√˚$/;"	m	struct:stRetCreateSeptSign
inviterID	tmpcode/commond.h	/^	DWORD inviterID[0];$/;"	m	struct:stInviteIntoTankCmd
ip	BillServer/BillCallback.h	/^  char          ip[MAX_IP_LENGTH];                           \/\/ipÂú∞ÂùÄ$/;"	m	struct:BillData
ip	base/BroadCommand.h	/^      char ip[MAX_IP_LENGTH];$/;"	m	struct:Cmd::BroadServer::t_Startup_Request
ip	base/ServerACL.h	/^	std::string ip;$/;"	m	struct:ACLZone
ip	base/SessionCommand.h	/^      DWORD ip;$/;"	m	struct:Cmd::Session::t_regUser_GateSession
ip	base/SessionCommand.h	/^      DWORD ip;$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
ip	base/UserCommand.h	/^      char       ip[MAX_IP_LENGTH +1];       \/\/ÂÆ¢Êà∑ËØ∑Ê±Çip$/;"	m	struct:Cmd::UserServer::t_cmd_mcard
ip	base/UserCommand.h	/^      char       ip[MAX_IP_LENGTH +1];     \/\/ÂÆ¢Êà∑ËØ∑Ê±Çip$/;"	m	struct:Cmd::UserServer::t_cmd_consume
ip	base/UserCommand.h	/^      char       ip[MAX_IP_LENGTH +1];     \/\/ÂÆ¢Êà∑ËØ∑Ê±Çip$/;"	m	struct:Cmd::UserServer::t_cmd_pcard
ip	base/zTCPClient.h	/^	std::string ip;                  \/**< ∑˛ŒÒ∆˜µÿ÷∑ *\/$/;"	m	class:zTCPClient
ip	base/zTCPClientTask.h	/^	const std::string ip;              \/**< ∑˛ŒÒ∆˜µÿ÷∑ *\/$/;"	m	class:zTCPClientTask
ip	base/zType.h	/^    char ip[MAX_IP_LENGTH + 1];$/;"	m	struct:ZoneData
ip	tmpcode/commond.h	/^	DWORD ip;$/;"	m	struct:stAllUserList
isAble	tmpcode/commond.h	/^		bool isAble;$/;"	m	struct:stRetRecallMasterInfo::voteInfo
isAble	tmpcode/commond.h	/^	bool isAble;                   \/\/’–»À»®œﬁ$/;"	m	struct:stTeamMemberData
isActive	ScenesServer/HeroInfoManager.h	/^    BYTE isActive;	\/\/”¢–€ «∑Ò“—º§ªÓ$/;"	m	struct:HeroData
isActive	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::isActive()$/;"	f	class:SceneNpc
isActive	ScenesServer/SceneNpcAI.cpp	/^bool NpcAIController::isActive()$/;"	f	class:NpcAIController
isActive	base/HeroCardCmd.h	/^	BYTE isActive;		\/\/”¢–€ «∑Ò“—º§ªÓ$/;"	m	struct:Cmd::t_hero
isActive	tmpcode/commond.h	/^    BYTE isActive;\/\/∏Ò◊” «∑Òº§ªÓ:0-√ª”–º§ªÓ£¨≤ªø…“‘ π”√£ª1-º§ªÓ$/;"	m	struct:OneGuardGoodsGrid
isActiveDay	tmpcode/commond.h	/^        bool isActiveDay;       \/\/ «ªÓ∂Ø»’$/;"	m	struct:stRetDailyWarningQuestUserCmd::quests
isActived	ScenesServer/HeroInfoManager.h	/^    bool isActived()$/;"	f	struct:HeroData
isAddrAndPos	tmpcode/commond.h	/^	bool isAddrAndPos;  \/\/ «∑ÒÕ¨ ±∞—¡¥Ω”µÿ÷∑∫ÕŒª÷√∂ºøΩ»ÎºÙÃ˘∞Â$/;"	m	struct:stRetPromoterAddressUserCmd
isAdvert	tmpcode/commond.h	/^		bool isAdvert;$/;"	m	struct:stRetCriminalApplyInfo::applyInfo
isAgree	tmpcode/commond.h	/^	bool isAgree;	\/\/ «∑ÒÕ¨“‚¿ÎªÈ trueÕ¨“‚ false≤ªÕ¨“‚$/;"	m	struct:stRetAgreementUnmarryCmd
isAgree	tmpcode/commond.h	/^	bool isAgree; \/\/Õ¨“‚Œ™true£¨≤ªÕ¨“‚Œ™false$/;"	m	struct:stAnswerCallBackUserCmd
isAgree	tmpcode/commond.h	/^	bool isAgree; \/\/Õ¨“‚Œ™true£¨≤ªÕ¨“‚Œ™false$/;"	m	struct:stAnswerRecommendUserCmd
isAgree	tmpcode/commond.h	/^	bool isAgree;$/;"	m	struct:stRecallVoteSeptCmd
isAgree	tmpcode/commond.h	/^	bool isAgree;$/;"	m	struct:stRetNextStateMarryCmd
isAgree	tmpcode/commond.h	/^	bool isAgree;$/;"	m	struct:stRetSeptAvatar
isAlive	base/zThread.h	/^	const bool isAlive() const$/;"	f	class:zThread
isAll	tmpcode/commond.h	/^    BYTE isAll;\/\/0-À˘”–£¨1-µ•∂¿‘ˆº”$/;"	m	struct:stBindUserToOther
isAllied	ScenesServer/SceneUser.cpp	/^bool SceneUser::isAllied(SceneUser *pUser)$/;"	f	class:SceneUser
isAntiAtt	base/SessionCommand.h	/^      bool isAntiAtt;    \/\/ ÊòØÂê¶ÂèØ‰ª•ÂèçÊîª$/;"	m	struct:Cmd::Session::t_enterWar_SceneSession
isAtt	base/SessionCommand.h	/^      bool isAtt;    \/\/ false,‰∏∫ÂÆàÊñπÔºåtrue‰∏∫ÊîªÊñπÔºàÂ§∫ÊóóÁ±ªÂûãÂØπÊàò‰ΩøÁî®Ôºâ$/;"	m	struct:Cmd::Session::t_enterWar_SceneSession
isAttackMe	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::isAttackMe(SceneEntryPk *entry)$/;"	f	class:SceneNpc
isAttend	ScenesServer/CardPk.cpp	/^bool zCard::isAttend()$/;"	f	class:zCard
isAuto	tmpcode/commond.h	/^	BYTE isAuto; \/\/ 1±Ì æ◊‘∂Ø…˝º∂µƒΩ·π˚,0±Ì æ ÷∂Ø…˝$/;"	m	struct:stResponsePropertyUserCmd
isAuto	tmpcode/commond.h	/^	bool isAuto; $/;"	m	struct:setAutoIntoTeam
isAuto	tmpcode/commond.h	/^        bool  isAuto;$/;"	m	struct:stAutoSignUpDragonUserCmd
isAutoRestitute	ScenesServer/SceneEntryPk.h	/^    bool isAutoRestitute; \/\/ ÊòØÂê¶Ëá™Âä®ÊÅ¢Â§ç$/;"	m	struct:SceneEntryPk
isAutoSignUp	tmpcode/commond.h	/^    bool isAutoSignUp;      \/\/ «∑Ò◊‘∂Ø±®√˚$/;"	m	struct:t_DragonData
isAwake	ScenesServer/CardPk.cpp	/^bool zCard::isAwake()$/;"	f	class:zCard
isBugbear	ScenesServer/SceneEntryPk.h	/^    virtual bool isBugbear(){return true;}$/;"	f	struct:SceneEntryPk
isBugbear	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::isBugbear()$/;"	f	class:SceneNpc
isBusinessMen	tmpcode/commond.h	/^		BYTE  isBusinessMen;                            \/\/ «∑Ò «…Ã»À,0≤ª «£¨1 «$/;"	m	struct:stUnionRember
isBusinessMen	tmpcode/commond.h	/^	BYTE isBusinessMen;                             \/\/0£¨≤ª «…Ã»À£¨1 «$/;"	m	struct:stBroadcastMemberInfo
isCatcher	ScenesServer/SceneUser.h	/^    bool isCatcher;$/;"	m	struct:SceneUser
isChallengerWin	tmpcode/commond.h	/^	BYTE isChallengerWin;  \/\/ ÃÙ’Ω «∑Ò §¿˚$/;"	m	struct:stChallengeResultDragonUserCmd
isChangeCharater	tmpcode/commond.h	/^	bool isChangeCharater;          \/\/ «∑Ò∏ƒ±‰¡À∏ˆ–‘$/;"	m	struct:DecayNewLingQi
isCharge	ScenesServer/CardPk.cpp	/^bool zCard::isCharge()$/;"	f	class:zCard
isCheck	tmpcode/commond.h	/^	BYTE  isCheck;          \/\/  «∑ÒºÏ≤Èµ√æ≠—È¥Œ ˝£¨0≤ªºÏ≤È£¨ 1ºÏ≤È$/;"	m	struct:stSendFriendFlowerCmd
isConfirm	tmpcode/commond.h	/^	bool isConfirm; \/\/false±Ì æ÷ª «≤Èø¥…˝º∂À˘–Ë£¨trueŒ™»∑∂®…˝º∂$/;"	m	struct:st_RequestLevelUpHouseUserCmd
isCopyInfo	tmpcode/commond.h	/^	bool isCopyInfo;$/;"	m	struct:stReqIsPromoterUserCmd
isCountryFormalDare	ScenesServer/Scene.h	/^    bool isCountryFormalDare;$/;"	m	class:Scene
isCreateState	GatewayServer/GateUser.h	/^	bool isCreateState() const$/;"	f	class:GateUser
isDeal	base/GmToolCommand.h	/^      int isDeal;$/;"	m	struct:Cmd::GmTool::t_Msg_GmTool
isDie	ScenesServer/CardPk.cpp	/^bool zCard::isDie()$/;"	f	class:zCard
isDie	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::isDie()$/;"	f	class:SceneNpc
isDie	ScenesServer/SceneUser.cpp	/^bool SceneUser::isDie()$/;"	f	class:SceneUser
isDiplomat	ScenesServer/SceneUser.h	/^    bool isDiplomat;$/;"	m	struct:SceneUser
isDriveHorse	base/RecordCommand.h	/^      BYTE isDriveHorse;$/;"	m	struct:Cmd::Record::t_UserInfo_SceneRecord
isDriveHorse	base/SceneCommand.h	/^      BYTE isDriveHorse;$/;"	m	struct:Cmd::Scene::t_Unreg_LoginScene
isDriveHorse	base/SessionCommand.h	/^      BYTE isDriveHorse;$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
isDying	tmpcode/commond.h	/^	WORD isDying;                                   \/\/ «∑Ò‘⁄÷ÿ…À◊¥Ã¨  1Œ™ « 0Œ™∑Ò$/;"	m	struct:stFreshTeamMemberUserCmd
isDying	tmpcode/commond.h	/^	bool isDying;                                   \/\/ «∑Ò‘⁄÷ÿ…À◊¥Ã¨$/;"	m	struct:stTeamMemberData
isEffect	tmpcode/commond.h	/^        bool isEffect;$/;"	m	struct:stNewUnionMerchListInfo
isEmperor	base/Command.h	/^  BYTE   isEmperor; \/\/ 0‰∏çÊòØÁöáÂ∏ùÊâÄÂú®ÂõΩ,1ÊòØÁöáÂ∏ùÊâÄÂú®ÂõΩ$/;"	m	struct:Cmd::stUpdateCountryKingUserCmd
isEmperorDare	ScenesServer/Scene.h	/^    bool isEmperorDare;$/;"	m	class:Scene
isEmpty	ScenesServer/zObject.cpp	/^bool EquipPack::isEmpty()$/;"	f	class:EquipPack
isEmpty	ScenesServer/zObject.cpp	/^bool PetPack::isEmpty() const$/;"	f	class:PetPack
isEnableLogin	GatewayServer/CountryInfo.cpp	/^bool CountryInfo::isEnableLogin(DWORD country_id)$/;"	f	class:CountryInfo
isEnableRegister	GatewayServer/CountryInfo.cpp	/^bool CountryInfo::isEnableRegister(DWORD country_id)$/;"	f	class:CountryInfo
isEnemy	ScenesServer/CardPk.cpp	/^bool zCard::isEnemy(zCard* entry)$/;"	f	class:zCard
isEnemy	ScenesServer/SceneNpcAI.cpp	/^int SceneNpc::isEnemy(SceneEntryPk * entry,bool notify,bool good)$/;"	f	class:SceneNpc
isEnemy	ScenesServer/SceneUser.cpp	/^int SceneUser::isEnemy(SceneEntryPk * entry,bool notify,bool good)$/;"	f	class:SceneUser
isEnemy	tmpcode/commond.h	/^	bool isEnemy;     \/\/ «∑Ò «µ–»À   ƒ¨»œŒ™ «$/;"	m	struct:stNotifyUserPrayCmd
isFdsrAdd	base/zTCPClientTask.h	/^	bool isFdsrAdd()$/;"	f	class:zTCPClientTask
isFdsrAdd	base/zTCPTask.h	/^	bool isFdsrAdd()$/;"	f	class:zTCPTask
isField	ScenesServer/Scene.h	/^    bool isField() const { return (function & MAP_FUNCTION_MAZE); }$/;"	f	class:Scene
isFighting	ScenesServer/ChallengeGameManager.cpp	/^bool ChallengeGameManager::isFighting(SceneUser *pUser)$/;"	f	class:ChallengeGameManager
isFighting	ScenesServer/SceneEntryPk.cpp	/^bool SceneEntryPk::isFighting()$/;"	f	class:SceneEntryPk
isFinal	base/zThread.h	/^	const bool isFinal() const $/;"	f	class:zThread
isForbidTalk	ScenesServer/SceneUser.h	/^    bool isForbidTalk()$/;"	f	struct:SceneUser
isForce	base/Command.h	/^    BYTE isForce;$/;"	m	struct:Cmd::stReqUnlockChangeZone
isForce	base/RolechangeCommand.h	/^	BYTE isForce;	    \/\/1,«ø÷∆Ω‚À¯ 2-ÕÊº“ «∑ÒøÁ∑˛‘⁄œﬂ$/;"	m	struct:Cmd::Rolechange::t_checkZoneState
isFoundRelation	tmpcode/commond.h	/^	bool isFoundRelation;  \/\/Ω®¡¢πÿœµŒ™true£¨»°œ˚πÿœµŒ™false$/;"	m	struct:stRefreshGRecommendRelationUserCmd
isFreeze	ScenesServer/CardPk.cpp	/^bool zCard::isFreeze()$/;"	f	class:zCard
isFriend	tmpcode/commond.h	/^			bool isFriend;  \/\/ «∑Ò «∫√”—$/;"	m	struct:stRetAllIssuedQuestUserCmd::quest
isFriendWatch	tmpcode/commond.h	/^        bool isFriendWatch;$/;"	m	struct:stRetWatchDragonDataUserCmd
isFromChangeCountry	tmpcode/commond.h	/^    bool isFromChangeCountry; \/\/ «∑Ò‘⁄◊™ΩÁ”Ú ±µ˜”√$/;"	m	struct:stLeaveQuestMapUserCmd
isFromFriendIter	tmpcode/commond.h	/^	bool isFromFriendIter; \/\/ «∑ÒÕ®π˝∫√”—∂ØÃ¨Ω”ø⁄$/;"	m	struct:stAskUserEnterWeekZhenxuanUserCmd
isFunctionNpc	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::isFunctionNpc()$/;"	f	class:SceneNpc
isGetingMailItem	ScenesServer/SceneUser.h	/^    bool isGetingMailItem;$/;"	m	struct:SceneUser
isGold	ScenesServer/HeroInfoManager.h	/^    BYTE isGold;	\/\/”¢–€ «∑Ò «Ω…´$/;"	m	struct:HeroData
isGold	base/HeroCardCmd.h	/^	BYTE isGold;		\/\/”¢–€ «∑Ò «Ω…´$/;"	m	struct:Cmd::t_hero
isGoldHero	ScenesServer/HeroInfoManager.h	/^    bool isGoldHero()$/;"	f	struct:HeroData
isHMagicBang	ScenesServer/SceneEntryPk.h	/^    bool isHMagicBang; \/\/\/ ÊòØÂê¶È≠îÊ≥ïÊö¥Âáª$/;"	m	struct:SceneEntryPk
isHPhysicBang	ScenesServer/SceneEntryPk.h	/^    bool isHPhysicBang; \/\/\/ ÊòØÂê¶Áâ©ÁêÜÊö¥Âáª$/;"	m	struct:SceneEntryPk
isHaveHorse	tmpcode/commond.h	/^	DWORD  isHaveHorse;             \/\/∏√¬Ìæ« «∑Ò¥Ê∑≈”–¬Ì$/;"	m	struct:t_Stable
isHavePrivilege	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::isHavePrivilege(DWORD userID)$/;"	f	class:ChallengeGame
isHero	ScenesServer/CardPk.cpp	/^bool zCard::isHero()$/;"	f	class:zCard
isHeroMagicCard	ScenesServer/CardPk.cpp	/^bool zCard::isHeroMagicCard()$/;"	f	class:zCard
isHide	GatewayServer/GateUser.h	/^	bool isHide() const$/;"	f	class:GateUser
isIn	ScenesServer/SceneDefine.h	/^  const bool isIn(const zPos &pos) const$/;"	f	struct:zRegion
isInGame	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::isInGame(DWORD userID)$/;"	f	class:ChallengeGame
isInLuckyStarState	tmpcode/commond.h	/^	BYTE isInLuckyStarState;                               \/\/ 0:≤ª «–“‘À–« 1: «–“‘À–«$/;"	m	struct:stSeptRember
isInWar	tmpcode/commond.h	/^	DWORD isInWar; \/\/0±Ì æ‘⁄,1±Ì æ≤ª‘⁄$/;"	m	struct:stRetUnionInfo
isIndexValid	ScenesServer/MarketSystemManager.cpp	/^bool MarketSystemManager::isIndexValid(const DWORD index)$/;"	f	class:MarketSystemManager
isInitState	GatewayServer/GateUser.h	/^	bool isInitState() const$/;"	f	class:GateUser
isInjure	base/zDatabase.h	/^	    WORD isInjure;\/\/ «∑Ò–Ë“™…À∫¶º∆À„$/;"	m	struct:SkillStatus::__anon36::__anon37
isInstate	tmpcode/commond.h	/^	bool isInstate;                         \/\/ «∑Ò «»Œ√¸£¨trueŒ™»Œ√¸£¨falseŒ™Ω‚»Œ$/;"	m	struct:stInstateUnionBusinessman
isInstate	tmpcode/commond.h	/^	bool isInstate;$/;"	m	struct:stGiveBusinessStateCmd
isIt	ScenesServer/CardManager.cpp	/^    bool isIt(zCard *object)$/;"	f	class:UserCardComparePos
isIt	ScenesServer/ObjectManager.cpp	/^    bool isIt(zObject *object)$/;"	f	class:UserObjectComparePos
isIt	ScenesServer/Skill.cpp	/^    bool isIt(zObject *object)$/;"	f	class:ItemObjectCompare
isJoinable	base/zThread.h	/^	const bool isJoinable() const$/;"	f	class:zThread
isKingUnion	base/SessionCommand.h	/^      BYTE isKingUnion;$/;"	m	struct:Cmd::Session::t_sendUserRelationID
isKingUnion	tmpcode/commond.h	/^	BYTE isKingUnion;       \/\/\/  «∑Ò «ΩÁÕıÕ≈(0£∫≤ª «£¨1£∫ «)$/;"	m	struct:st_CharShow2
isKingUnion	tmpcode/commond.h	/^	BYTE isKingUnion;       \/\/\/  «∑Ò «ΩÁÕıÕ≈(0£∫≤ª «£¨1£∫ «)$/;"	m	struct:t_UserData
isKuangBao	tmpcode/commond.h	/^	bool isKuangBao;     \/* «∑Ò¥¶”⁄øÒ±©◊¥Ã¨*\/$/;"	m	struct:stKuangBaoSwitchMagicUserCmd
isLeader	tmpcode/commond.h	/^	bool isLeader;$/;"	m	struct:stSeptPrepareTimeChallengeUserCmd
isLoaded	ScenesServer/script.cpp	/^bool LuaScript::isLoaded() $/;"	f	class:LuaScript
isLock	tmpcode/commond.h	/^	bool isLock;            \/\/ «∑ÒÀ¯∂®$/;"	m	struct:NewBoxSendObj
isMagicBang	ScenesServer/SceneEntryPk.h	/^    bool isMagicBang; \/\/\/ ÊòØÂê¶È≠îÊ≥ïÊö¥Âáª$/;"	m	struct:SceneEntryPk
isMagicCard	ScenesServer/CardPk.cpp	/^bool zCard::isMagicCard()$/;"	f	class:zCard
isMagicDongStytle	tmpcode/commond.h	/^	bool isMagicDongStytle; \/* «∑Ò¥¶”⁄ƒß∂Ø◊¥Ã¨*\/$/;"	m	struct:stZhanWuSwitchMagicUserCmd
isMagicEnergyStytle	tmpcode/commond.h	/^	bool isMagicEnergyStytle;     \/* «∑Ò¥¶”⁄ƒßƒ‹◊¥Ã¨*\/$/;"	m	struct:stZhanWuSwitchMagicUserCmd
isMagicNow	tmpcode/commond.h	/^	bool isMagicNow ;     \/* «∑Ò¥¶”⁄ƒßπ•◊¥Ã¨*\/$/;"	m	struct:stWMSwitchMagicUserCmd
isMainCity	ScenesServer/Scene.h	/^    bool isMainCity() const { return (function & MAP_FUNCTION_CAPITAL); }$/;"	f	class:Scene
isMainGeneral	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::isMainGeneral()$/;"	f	class:SceneNpc
isMarketOpen	ScenesServer/MarketSystemManager.cpp	/^bool MarketSystemManager::isMarketOpen()$/;"	f	class:MarketSystemManager
isMasterOnline	tmpcode/commond.h	/^	bool isMasterOnline; \/\/ ¶∏µ «∑Ò‘⁄œﬂ$/;"	m	struct:stRtnGRecommendedBountyUserCmd
isMine	base/Command.h	/^  bool isMine;$/;"	m	struct:Cmd::stAddCartoonCmd
isNewCharBase	ScenesServer/SceneUser.h	/^    bool isNewCharBase() const$/;"	f	struct:SceneUser
isNewZoneConfig	ScenesServer/SceneManager.cpp	/^bool SceneManager::isNewZoneConfig()$/;"	f	class:SceneManager
isNoRedScene	ScenesServer/Scene.h	/^    bool isNoRedScene() const { return (function & MAP_FUNCTION_NORED); }$/;"	f	class:Scene
isNovice	ScenesServer/Scene.h	/^    bool isNovice() const { return (function & MAP_FUNCTION_NOVICE); }$/;"	f	class:Scene
isOnline	SessionServer/CRelationManager.cpp	/^bool CRelation::isOnline()$/;"	f	class:CRelation
isOnline	tmpcode/commond.h	/^		bool isOnline;$/;"	m	struct:st_RetRoomerNameHouseUserCmd::roomerName
isOnline	tmpcode/commond.h	/^	bool isOnline;      \/\/ «∑Ò‘⁄œﬂ$/;"	m	struct:stGRecommendItem
isOnline	tmpcode/commond.h	/^	bool isOnline; \/\/ «∑Ò‘⁄œﬂ$/;"	m	struct:stNotifyOnlineInfoGrecommendUserCmd
isOpen	tmpcode/commond.h	/^	bool isOpen;            \/\/–°œ‰◊” «∑Ò¥Úø™$/;"	m	struct:NewBoxSendObj
isOpen	tmpcode/commond.h	/^	bool isOpen; $/;"	m	struct:ResultData
isOpen	tmpcode/commond.h	/^        bool						isOpen;$/;"	m	struct:stUnionMerchRoadInfo
isOpenSize	tmpcode/commond.h	/^	DWORD isOpenSize;               \/\/“—‘Ÿ¿¥µƒ¥Œ ˝(÷ÿ◊™)$/;"	m	struct:stSendObjNewBoxPropertyUserCmd
isOpenSize	tmpcode/commond.h	/^	DWORD isOpenSize;       \/\/“—◊™¥Œ ˝$/;"	m	struct:stSendResultNewBoxPropertyUserCmd
isOwner	tmpcode/commond.h	/^		bool isOwner;			\/\/ true±Ì æΩ¯¡À◊‘º∫µƒ◊§µÿ¬Ú∂´Œ˜£¨false±Ì æ¿¥Õ‚¿¥π∫ŒÔµƒ$/;"	m	struct:stUnionMerchListInfo
isOwner	tmpcode/commond.h	/^	bool isOwner;$/;"	m	struct:stRetMagicForgeSolideInfo
isOwner	tmpcode/commond.h	/^        bool isOwner;$/;"	m	struct:stRetMagicForgeInfo
isPVE	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::isPVE()$/;"	f	class:ChallengeGame
isPVE	tmpcode/commond.h	/^	bool  isPVE;       \/\/PVE≥«’ΩΩ¯––µƒ±Í÷æ$/;"	m	struct:UnionCityDareInfo
isPVP	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::isPVP()$/;"	f	class:ChallengeGame
isPassiveSkillUp	tmpcode/commond.h	/^	bool isPassiveSkillUp;          \/\/±ª∂Øººƒ‹ «∑Ò…˝º∂$/;"	m	struct:DecayNewLingQi
isPhysicBang	ScenesServer/SceneEntryPk.h	/^    bool isPhysicBang; \/\/\/ ÊòØÂê¶Áâ©ÁêÜÊö¥Âáª$/;"	m	struct:SceneEntryPk
isPhysics	ScenesServer/SceneEntryPk.h	/^    bool isPhysics;    \/\/\/ ËÆ°ÁÆóÂÖ¨ÂºèËµ∞Áâ©ÁêÜ   $/;"	m	struct:SceneEntryPk
isPhysicsNow	tmpcode/commond.h	/^	bool isPhysicsNow ;     \/* «∑Ò¥¶”⁄ŒÔπ•◊¥Ã¨*\/$/;"	m	struct:stYingZhuanSwitchMagicUserCmd
isPkAddition	ScenesServer/SceneUser.cpp	/^bool SceneUser::isPkAddition()$/;"	f	class:SceneUser
isPkMap	ScenesServer/Scene.h	/^    bool isPkMap() const { return getRealMapID()>=213 && getRealMapID()<=215; }$/;"	f	class:Scene
isPkZone	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::isPkZone(SceneEntryPk *other)$/;"	f	class:SceneNpc
isPkZone	ScenesServer/SceneUser.cpp	/^bool SceneUser::isPkZone(SceneEntryPk *other)$/;"	f	class:SceneUser
isPlayState	GatewayServer/GateUser.h	/^	bool isPlayState() const$/;"	f	class:GateUser
isPromoter	tmpcode/commond.h	/^	bool isPromoter;   \/\/ «∑Ò «Õ∆π„‘±£¨»Áπ˚ «∑¢ÀÕµƒ «Õ∆π„‘±¡¥Ω”£¨≤ª «∑¢ÀÕµƒ «Õ∆π„‘±◊¢≤·¡¥Ω”$/;"	m	struct:stRetPromoterAddressUserCmd
isProtect	tmpcode/commond.h	/^	bool	isProtect;$/;"	m	struct:_powerList
isPublish	tmpcode/commond.h	/^		bool isPublish;$/;"	m	struct:stRetCriminalListInfo::criminalInfo
isQuestState	tmpcode/commond.h	/^        bool isQuestState;      \/\/»ŒŒÒ◊¥Ã¨÷–$/;"	m	struct:stRetDailyWarningQuestUserCmd::quests
isQuiz	ScenesServer/SceneUser.h	/^    bool isQuiz;      \/\/ ÊòØÂê¶Â§Ñ‰∫éÁ≠îÈ¢òÁä∂ÊÄÅ$/;"	m	struct:SceneUser
isQuizState	GatewayServer/GateUser.h	/^	bool isQuizState()$/;"	f	class:GateUser
isRedNamed	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::isRedNamed(bool allRedMode) const$/;"	f	class:SceneNpc
isRedNamed	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::isRedNamed(bool allRedMode)$/;"	f	class:SceneNpc
isRedNamed	ScenesServer/SceneUser.cpp	/^bool SceneUser::isRedNamed(bool allRedMode) const$/;"	f	class:SceneUser
isRushNpc	ScenesServer/SceneNpc.h	/^  bool isRushNpc;$/;"	m	class:SceneNpc
isSatisfy	tmpcode/commond.h	/^        bool isSatisfy; \/\/ «∑Ò¬˙“‚$/;"	m	struct:stConfirmMergeResultLingQiUserCmd
isSelectServerState	GatewayServer/GateUser.h	/^	bool isSelectServerState() const$/;"	f	class:GateUser
isSelectState	GatewayServer/GateUser.h	/^	bool isSelectState() const$/;"	f	class:GateUser
isSendingMail	ScenesServer/SceneUser.h	/^    bool isSendingMail;$/;"	m	struct:SceneUser
isSequeueTerminate	GatewayServer/GatewayServer.h	/^	bool isSequeueTerminate() $/;"	f	class:GatewayService
isSequeueTerminate	ScenesServer/ScenesServer.h	/^    bool isSequeueTerminate() $/;"	f	class:ScenesService
isSequeueTerminate	SessionServer/SessionServer.h	/^    bool isSequeueTerminate() $/;"	f	class:SessionService
isShow	tmpcode/commond.h	/^	bool isShow;    \/\/\/ 0£∫≤ªœ‘ æ£¨1£∫œ‘ æ$/;"	m	struct:stNoticeUserPerformFlagCmd
isSing	base/Command.h	/^  bool isSing;$/;"	m	struct:Cmd::stAttackMagicUserCmd
isSitdown	ScenesServer/SceneUser.cpp	/^bool SceneUser::isSitdown()$/;"	f	class:SceneUser
isSneak	ScenesServer/CardPk.cpp	/^bool zCard::isSneak()$/;"	f	class:zCard
isSpecial	tmpcode/commond.h	/^        bool isSpecial;$/;"	m	struct:stFeedDragonUserCmd
isSpecialNpc	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::isSpecialNpc()$/;"	f	class:SceneNpc
isSponsor	tmpcode/commond.h	/^	bool isSponsor;    \/\/ «∑Ò∑¢∆∑Ω$/;"	m	struct:stDetailFightContentUserCmd
isSrvSend	tmpcode/commond.h	/^	 bool isSrvSend;\/\/œ˚œ¢ «øÕªß∂À«Î«Û∑¢µƒ(false)£¨ªπ «∑˛ŒÒ∆˜÷˜∂Ø∑¢µƒ(true)$/;"	m	struct:stNotifyChallengeStateDragonUserCmd
isStart	tmpcode/commond.h	/^    bool isStart;                           \/\/»°œ˚≥™÷‰Œ™false(server->user);$/;"	m	struct:stSingMagicUserCmd
isSubmit	tmpcode/commond.h	/^	bool isSubmit;  \/\/»Áπ˚isSubmitŒ™true£¨±Ì æ «Ωª»ŒŒÒ£¨∑Ò‘Ú «Ω”»ŒŒÒ$/;"	m	struct:stRequestBusinessTask
isSurrounded	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::isSurrounded()$/;"	f	class:SceneNpc
isTaskNpc	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::isTaskNpc()$/;"	f	class:SceneNpc
isTeamed	tmpcode/commond.h	/^	 bool isTeamed;$/;"	m	struct:stRetTeamInfoCmd
isTeamed	tmpcode/commond.h	/^	 bool isTeamed;$/;"	m	struct:stRetTeamInfo_Client
isTerminate	base/zService.h	/^	bool isTerminate() const$/;"	f	class:zService
isTerminate	base/zTCPClientTask.h	/^	bool isTerminate() const$/;"	f	class:zTCPClientTask
isTerminate	base/zTCPTask.h	/^	bool isTerminate() const$/;"	f	class:zTCPTask
isTerminateWait	base/zTCPTask.h	/^	bool isTerminateWait()$/;"	f	class:zTCPTask
isTimeLimit	tmpcode/commond.h	/^    BYTE isTimeLimit;       \/\/ «∑Ò « ±º‰œﬁ÷∆–‘◊¯∆Ô$/;"	m	struct:t_HorseData
isTonic	ScenesServer/zObject.cpp	/^bool EquipPack::isTonic()$/;"	f	class:EquipPack
isTrainingMap	ScenesServer/Scene.h	/^    bool isTrainingMap()$/;"	f	class:Scene
isUnionDare	ScenesServer/Scene.h	/^    bool isUnionDare;$/;"	m	class:Scene
isUnionSceneMember	tmpcode/commond.h	/^	bool isUnionSceneMember;  \/\/ «∑Ò «µ±«∞À˘’ºµÿÕº”∂±¯Õ≈≥…‘±  trueŒ™ «  falseŒ™ºŸ$/;"	m	struct:stShowHelpUnionCmd
isUnique	base/zTCPTask.h	/^	bool isUnique() const$/;"	f	class:zTCPTask
isUse	ScenesServer/SceneNpc.h	/^  bool isUse;$/;"	m	class:SceneNpc
isUsePveOrPvp	ScenesServer/SceneEntryPk.h	/^	useFightState isUsePveOrPvp; \/\/\/ PVEÁä∂ÊÄÅ$/;"	m	struct:SceneEntryPk
isUsing	tmpcode/commond.h	/^    BYTE isUsing;   \/\/ «∑Ò’˝‘⁄ π”√, O ≤ª‘⁄ π”√£¨1 ‘⁄ π”√$/;"	m	struct:FlowerDef
isValid	base/zMetaData.h	/^	bool isValid()$/;"	f	class:DBVarType
isVared	tmpcode/commond.h	/^	bool isVared;                   \/\/ «∑Ò±‰“Ï$/;"	m	struct:DecayNewLingQi
isVerify	tmpcode/commond.h	/^	bool isVerify;$/;"	m	struct:stRetAvatarInfo
isVip	GatewayServer/GatewayTask.h	/^	bool isVip()$/;"	f	class:GatewayTask
isVote	tmpcode/commond.h	/^		bool isVote;$/;"	m	struct:stRetRecallMasterInfo::voteInfo
isWaitPlayState	GatewayServer/GateUser.h	/^	bool isWaitPlayState() const$/;"	f	class:GateUser
isWaitUnregState	GatewayServer/GateUser.h	/^	bool isWaitUnregState() const$/;"	f	class:GateUser
is_boss	ScenesServer/SceneNpc.cpp	/^bool is_boss(int type)$/;"	f
is_keyword	base/xml/xml_parser_generator.h	/^	bool is_keyword(const std::string& prop)$/;"	f	class:xml_node_parser_generator
is_salary	tmpcode/commond.h	/^		BYTE    is_salary;      \/\/  «∑Ò”√π§◊ π∫¬Úµƒ≤ƒ¡œ$/;"	m	struct:stFoundSpecialItemPropertyUserCmd::material
is_salary	tmpcode/commond.h	/^		BYTE is_salary;		\/\/  «∑Ò”√ÀÆæß±“£®∞Û£©π∫¬Úµƒ≤ƒ¡œ$/;"	m	struct:stHouseFurnitureItemPropertyUserCmd::material
is_salary	tmpcode/commond.h	/^		BYTE is_salary; \/\/  «∑Ò”√π§◊ π∫¬Úµƒ≤ƒ¡œ$/;"	m	struct:stFoundItemPropertyUserCmd::material
is_salary	tmpcode/commond.h	/^		BYTE is_salary; \/\/  «∑Ò”√ÀÆæß±“£®∞Û£©π∫¬Úµƒ≤ƒ¡œ$/;"	m	struct:stHouseRoomDeskItemPropertyUserCmd::material
is_salary	tmpcode/commond.h	/^                BYTE is_salary; \/\/  «∑Ò”√∞Û∂®≤ƒ¡œ$/;"	m	struct:stFoundItemSkillStore::material
is_salary	tmpcode/commond.h	/^        BYTE is_salary;  \/\/±Í ∂ «∑Ò”√ÀÆæß±“(∞Û)¬Ú∂´Œ˜$/;"	m	struct:stBuyObjectNpcTradeUserCmd
is_salary	tmpcode/commond.h	/^        BYTE is_salary; \/\/  «∑Ò”√ÀÆæß±“£®∞Û£©π∫¬Úµƒ≤ƒ¡œ$/;"	m	struct:stHorseSoulItemPropertyUserCmd::material
is_timeout	ScenesServer/Quest.cpp	/^bool Vars::is_timeout(int timeout) const$/;"	f	class:Vars
is_tmp	ScenesServer/Quest.h	/^    bool is_tmp() const$/;"	f	class:Vars::VAR
is_valid	ScenesServer/Quest.h	/^  bool is_valid(Operation op,const std::string& name,typename Operation::value_type const & condition) const$/;"	f	class:Vars
is_valid	ScenesServer/QuestCondition.cpp	/^bool Condition::is_valid(const SceneUser* user,const Vars* vars) const$/;"	f	class:Condition
is_valid	ScenesServer/QuestCondition.cpp	/^bool TeamCondition::is_valid(const SceneUser* user,const Vars* vars) const$/;"	f	class:TeamCondition
is_valid	ScenesServer/QuestEvent.cpp	/^bool Event::Embranchment::is_valid(SceneUser* user,const Vars* vars)$/;"	f	class:Event::Embranchment
isbind	base/MsgDelegate.h	/^	bool isbind;	\/\/ «∑Ò“—æ≠∞Û∂®$/;"	m	class:MsgDelegate
isclose	tmpcode/commond.h	/^	bool isclose;$/;"	m	struct:stClearAfterLeaveQuestRoomUserCmd
isdiscount	tmpcode/commond.h	/^        BYTE  isdiscount;\/\/ «∑Ò”≈ª›∆⁄º‰£∞±Ì æ∆Ω ±£¨£±±Ì æ”≈ª›ªÓ∂Ø∆⁄º‰$/;"	m	struct:stReturnExchangeCardIDTradeUserCmd
isgood	base/zLogger.h	/^	bool isgood() {	return logger!=NULL?true:false; };$/;"	f	class:zLogger
issetCardState	ScenesServer/zCard.h	/^    bool issetCardState(const int state)$/;"	f	struct:zCard
issetUState	base/zSceneEntry.h	/^	inline bool issetUState(const int state) const$/;"	f	struct:zSceneEntry
isset_flag	base/zSocket.h	/^	inline bool isset_flag(DWORD _f) const { return bitmask & _f; }$/;"	f	class:zSocket
isset_state	base/Command.h	/^inline bool isset_state(const BYTE *state,const int teststate)$/;"	f	namespace:Cmd
isset_state	tmpcode/commond.h	/^inline bool isset_state(const unsigned char *state, const int teststate)$/;"	f
issueType	tmpcode/commond.h	/^	BYTE issueType;		\/\/0 --- »ŒŒÒ≤ªø…∑¢≤º; 1 --- ∏√»ŒŒÒ“—æ≠∑¢≤º; 2 --- ªπ√ª”–∑¢≤ºµƒø…∑¢≤º»ŒŒÒ$/;"	m	struct:stQuestInfoUserCmd
istemp	ScenesServer/Skill.h	/^    bool istemp;$/;"	m	struct:zSkill
item	base/Command.h	/^  t_Object item;$/;"	m	struct:Cmd::stAddListAuction
item	base/Command.h	/^  t_Object item[MAX_MAILITEM];$/;"	m	struct:Cmd::stContentMail
item	base/SessionCommand.h	/^      SessionObject item;$/;"	m	struct:Cmd::Session::t_ReturnCreateUnionItem_SceneSession
item	base/SessionCommand.h	/^      SessionObject item;$/;"	m	struct:Cmd::Session::t_getMailItemReturn_SceneSession
item	base/SessionCommand.h	/^      SessionObject item;$/;"	m	struct:Cmd::Session::t_saleAuction_SceneSession
item	base/SessionCommand.h	/^      SessionObject item;$/;"	m	struct:Cmd::Session::t_sendMail_SceneSession
item	base/xmlparser/giftbag.h	/^            xml_node_map<DWORD,Item>	item;$/;"	m	struct:GiftBagConfig::Bag::Quality
item	base/xmlparser/herobase.h	/^        xml_node_map<DWORD,Item>	item;$/;"	m	struct:HeroBaseCFG::Init
item	base/xmlparser/herobase.h	/^        xml_node_map<WORD,Item>	item;$/;"	m	struct:HeroBaseCFG::Exp
item	base/xmlparser/market.h	/^        xml_node_map<DWORD,Item>	item;$/;"	m	struct:MarketConfig::Obj
item	base/xmlparser/test.h	/^        xml_node_map<int,Item>	item;$/;"	m	struct:TestConfig::Reward
item	tmpcode/commond.h	/^	DWORD item;             \/\/\/ ŒÔ∆∑ID$/;"	m	struct:stGetCityDefItemUnionCmd
item	tmpcode/commond.h	/^	FarmNotice item;$/;"	m	struct:stSendFarmNoticeUserCmd
item	tmpcode/commond.h	/^	boxObject item[0];$/;"	m	struct:st_StoreItemHouseUserCmd
item	tmpcode/commond.h	/^	stLandItem item;$/;"	m	struct:stRetFarmInfoUserCmd
item	tmpcode/commond.h	/^        t_Object item;$/;"	m	struct:stAddListAuction
item	tmpcode/commond.h	/^    t_Object item[3];$/;"	m	struct:stContentMail
itemGot	base/SessionCommand.h	/^      BYTE itemGot;$/;"	m	struct:Cmd::Session::giftInfo
itemGot	base/SessionCommand.h	/^      BYTE itemGot;$/;"	m	struct:Cmd::Session::mailInfo
itemGuid	tmpcode/commond.h	/^	DWORD itemGuid; \/\/“™π∫¬ÚµƒŒÔ∆∑µƒid$/;"	m	struct:stBuyItemStall
itemGuid	tmpcode/commond.h	/^	DWORD itemGuid; \/\/“™…æ≥˝ŒÔ∆∑µƒid$/;"	m	struct:stDelItemStall
itemGuid	tmpcode/commond.h	/^	DWORD itemGuid; \/\/“™‘ˆº”ŒÔ∆∑µƒid$/;"	m	struct:stAddItemStall
itemID	base/Command.h	/^  DWORD itemID;$/;"	m	struct:Cmd::stContributeCountryMaterialCmd
itemID	base/Command.h	/^  DWORD itemID;$/;"	m	struct:Cmd::stSaleAuction
itemID	base/Command.h	/^  DWORD itemID[MAX_MAILITEM];$/;"	m	struct:Cmd::stSendMail
itemID	base/SessionCommand.h	/^      DWORD itemID;$/;"	m	struct:Cmd::Session::auctionInfo
itemID	base/SessionCommand.h	/^      DWORD itemID;$/;"	m	struct:Cmd::Session::giftInfo
itemID	base/SessionCommand.h	/^      DWORD itemID;$/;"	m	struct:Cmd::Session::mailInfo
itemID	base/SessionCommand.h	/^      DWORD itemID;$/;"	m	struct:Cmd::Session::t_checkSend_SceneSession
itemID	tmpcode/commond.h	/^	DWORD itemID;           \/\/ŒÔ∆∑Ω±¿¯$/;"	m	struct:FarmNotice
itemID	tmpcode/commond.h	/^	DWORD itemID; $/;"	m	struct:stPickObjSeptPopoUserCmd
itemID	tmpcode/commond.h	/^	DWORD itemID;\/\/ ˝∂¿ŒÔ∆∑ID$/;"	m	struct:stRequestShuDuPara
itemID	tmpcode/commond.h	/^	DWORD itemID;\/\/ ˝∂¿ŒÔ∆∑ID$/;"	m	struct:stSendShuDuPara
itemID	tmpcode/commond.h	/^        DWORD itemID;$/;"	m	struct:stSaleAuction
itemID	tmpcode/commond.h	/^    DWORD itemID; \/\/œ¥µ„µ¿æﬂID$/;"	m	struct:stRemoveLingQiSkillUserCmd
itemID	tmpcode/commond.h	/^    DWORD itemID[3];$/;"	m	struct:stSendMail
itemLevel	tmpcode/commond.h	/^        BYTE itemLevel;$/;"	m	struct:stBuyObjectNpcTradeUserCmd
itemName	base/SessionCommand.h	/^      char itemName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::auctionInfo
itemNum	base/SessionCommand.h	/^      DWORD itemNum;$/;"	m	struct:Cmd::Session::giftInfo
itemNum	tmpcode/commond.h	/^	BYTE itemNum;          \/\/ ¥Úø™¿Ò∞¸ªÒµ√ŒÔ∆∑◊‹ ˝$/;"	m	struct:stGiftBagResultUserCmd
itemSize	base/Command.h	/^    DWORD itemSize;$/;"	m	struct:Cmd::stKokChatUserCmd
itemSize	tmpcode/commond.h	/^	DWORD itemSize;  \/\/ ŒÔ∆∑–≈œ¢¥Û–°$/;"	m	struct:stTalkLTQUserCmd
itemType	base/SessionCommand.h	/^      BYTE itemType;$/;"	m	struct:Cmd::Session::giftInfo
itemlevel	ScenesServer/NpcTrade.h	/^      WORD  itemlevel;      \/\/\/Ë¥≠‰π∞Áâ©ÂìÅÁöÑÁ≠âÁ∫ß$/;"	m	struct:NpcTrade::NpcItem
items	ScenesServer/NpcTrade.h	/^      NpcItemMultiMap items;  \/\/\/Áâ©ÂìÅÂä®‰Ωú$/;"	m	struct:NpcTrade::NpcDialog
items	tmpcode/commond.h	/^	ChatAccelItem items[0];$/;"	m	struct:stSetChatDragonUserCmd
items	tmpcode/commond.h	/^	ChatAccelItem items[DRAON_CHAT_NUMS];$/;"	m	struct:stDragonChatInChallengeDragonUserCmd
items	tmpcode/commond.h	/^	GiftItem items[0];$/;"	m	struct:stGiftBagResultUserCmd
items	tmpcode/commond.h	/^        CHUNYUNITEM items[0];$/;"	m	struct:req_rtChunYunListCmd
items	tmpcode/commond.h	/^    ChatAccelItem items[0];$/;"	m	struct:rt_st_ChatAccelPropertyUserCmd
items	tmpcode/commond.h	/^    EquipSortObjItem items[0];$/;"	m	struct:rtEquipSortListUserCmd
itemsize	tmpcode/commond.h	/^	BYTE itemsize;  \/\/ŒÔ∆∑ ˝¡ø$/;"	m	struct:st_StoreItemHouseUserCmd
iter	BillServer/BillCache.h	/^    typedef CacheContainer::iterator iter;$/;"	t	class:BillCache
iter	BillServer/BillClientManager.h	/^    typedef BillClientContainer::iterator iter;$/;"	t	class:BillClientManager
iter	FLServer/UserTask.h	/^	typedef NetUser_multimap::iterator iter;$/;"	t	class:UserContainer
iter	GatewayServer/SceneClientManager.h	/^	typedef SceneClient_map::iterator iter;$/;"	t	class:SceneClientManager
iter	SuperServer/BroadClientManager.h	/^    typedef BroadClientContainer::iterator iter;$/;"	t	class:BroadClientManager
iter	SuperServer/FLClientManager.h	/^    typedef FLClientContainer::iterator iter;$/;"	t	class:FLClientManager
iter	SuperServer/InfoClientManager.h	/^    typedef InfoClient_map::iterator iter;$/;"	t	class:InfoClientManager
iter	SuperServer/RolechangeClientManager.h	/^    typedef RolechangeClient_map::iterator iter;$/;"	t	class:RolechangeClientManager
iter	SuperServer/RoleregClientManager.h	/^    typedef RoleRegClientContainer::iterator iter;$/;"	t	class:RoleregClientManager
iter	base/zEntryManager.h	/^	typedef typename hashmap::iterator iter;$/;"	t	class:LimitHash
iter	base/zEntryManager.h	/^	typedef typename hashmap::iterator iter;$/;"	t	class:MultiHash
iter	roleChangeServer/ChangeTask.h	/^	typedef NetInfo_multimap::iterator iter;$/;"	t	class:RoleContainer
iterator	GatewayServer/CmdChecker.h	/^	typedef typename set::iterator iterator;$/;"	t	class:CmdChecker
iterator	ScenesServer/QuestCondition.h	/^  typedef KV::iterator iterator;$/;"	t	class:ScenesParser
iterator	ScenesServer/scriptTickTask.h	/^	typedef std::map<QWORD,scriptTask*>::iterator iterator;$/;"	t	class:scriptTaskManagement
iterator	base/xml/xml_node_container.h	/^	    typedef typename Container::iterator	iterator;$/;"	t	class:detail::xml_node_map_container
iterator	base/xml/xml_node_container.h	/^	    typedef typename Container::iterator    iterator;$/;"	t	class:detail::xml_node_seq_container
iterator	base/zAStar.h	/^	typedef typename zPathQueueHead::iterator iterator;$/;"	t	class:zAStar
jewelryId	tmpcode/commond.h	/^		DWORD jewelryId;     \/\/ Œ∆∑id$/;"	m	struct:stRet32NameListUserCmd::__anon373
jewelryId	tmpcode/commond.h	/^            DWORD jewelryId;        \/\/ Œ∆∑id$/;"	m	struct:t_DragonData::DragonEquip
jf	tmpcode/commond.h	/^		BYTE	jf;			\/\/ 0≥Â–«  1Ω‚∑‚$/;"	m	struct:stNpcUpgradePropertyUserCmd
jf	tmpcode/commond.h	/^	BYTE jf;				\/\/ «∑Ò «Ω‚∑‚  0≤ª «   1 «$/;"	m	struct:stEquipIntensifyStart
jiaQuan	tmpcode/commond.h	/^		bool jiaQuan;  \/\/ªÒ §∑Ωtrue£¨ ß∞‹∑Ωfalse$/;"	m	struct:ResultScoreAndExp
jieZhanState	tmpcode/commond.h	/^    stJieZhanState jieZhanState[8];$/;"	m	struct:stRefreshJieZhanStateList
job	base/Command.h	/^    WORD job;$/;"	m	struct:Cmd::SelectUserInfo
job	tmpcode/commond.h	/^		WORD job;$/;"	m	struct:stRetPlayerListZhenxuanUserCmd::PlayerInfo
job	tmpcode/commond.h	/^	  WORD job;    \/\/\/ ÷∞“µ¿‡–Õ$/;"	m	struct:st_WatchPlayer
job	tmpcode/commond.h	/^	 WORD job;$/;"	m	struct:stTeamUserInfo
job	tmpcode/commond.h	/^	WORD    job;                    \/\/ ÷˜÷∞“µ							$/;"	m	struct:t_UserData
job	tmpcode/commond.h	/^	WORD    job;$/;"	m	struct:st_CharShow2
job	tmpcode/commond.h	/^	WORD job; \/\/∑¢∏¯±ª—˚«Î’ﬂ ±£¨¿Ô√Ê“™∞¸∫¨—˚«Î’ﬂµƒ÷∞“µ$/;"	m	struct:stInviteChallengeUserCmd
job	tmpcode/commond.h	/^	WORD job;$/;"	m	struct:SelectUserInfo
job	tmpcode/commond.h	/^	WORD job;$/;"	m	struct:stReqAddTeamUserCmd
job	tmpcode/commond.h	/^        BYTE job;                       \/\/¥” Ù Ù–‘£¨”√”⁄«¯±¿‡–Õœ‡Õ¨µƒŒÔ∆∑£¨»Á÷∞“µ£¨≤ªø…ƒ‹Œ™0$/;"	m	struct:stQueryAuction
job	tmpcode/commond.h	/^        WORD  job;                               \/\/\/ ÷∞“µ$/;"	m	struct:stShowEquipUserPropertyUserCmd
job	tmpcode/commond.h	/^        WORD  job;      \/\/÷∞“µ$/;"	m	struct:CardMainData
jobEnergy	base/Object.h	/^	    DWORD jobEnergy;  \/\/ ÷∞“µ◊∞±∏:÷∞“µƒ‹¡ø$/;"	m	struct:t_Object::__anon62
jobs	base/zDatabase.h	/^    JobVector jobs;$/;"	m	struct:zObjectB
joinShop	tmpcode/commond.h	/^		BYTE joinShop;                          \/\/\/  «∑Òº”√À…Ãª·(0£∫√ª”–º”£¨1£∫º”¡À)$/;"	m	struct:stUnionShop
joinTimeLeft	tmpcode/commond.h	/^	DWORD	joinTimeLeft;$/;"	m	struct:stInviteSCUserCmd
joinable	base/zThread.h	/^	bool joinable;          \/**< Á∫øÁ®ãÂ±ûÊÄßÔºåÊòØÂê¶ËÆæÁΩÆjoinableÊ†áËÆ∞ *\/$/;"	m	class:zThread
jpegPassport	FLServer/LoginTask.h	/^	char jpegPassport[5];$/;"	m	class:LoginTask
jpegPassport	GatewayServer/GateUser.h	/^	char jpegPassport[5];$/;"	m	class:GateUser
jpegPassport	base/Command.h	/^  char jpegPassport[7];        \/**< ÂõæÂΩ¢È™åËØÅÁ†Å *\/$/;"	m	struct:Cmd::stUserRequestLoginCmd
jpegPassport	tmpcode/commond.h	/^	char jpegPassport[7];				\/**< Õº–Œ—È÷§¬Î *\/$/;"	m	struct:stUserRequestLoginCmd
judge	base/zAStar.h	/^	int judge(const zPos &midPos,const zPos &endPos)$/;"	f	class:zAStar
juewei	tmpcode/commond.h	/^		BYTE juewei; $/;"	m	struct:t_ReturnHistory::__anon245
juewei	tmpcode/commond.h	/^	BYTE juewei;            \/\/\/ æÙŒª$/;"	m	struct:stRetCourseOfKingCmd
jumpTo	ScenesServer/SceneEntryPk.h	/^    virtual void jumpTo(zPos &newPos){};$/;"	f	struct:SceneEntryPk
jumpTo	ScenesServer/SceneNpc.cpp	/^  void SceneNpc::jumpTo(zPos &newPos)$/;"	f	class:SceneNpc
jumpTo	ScenesServer/SceneUser.cpp	/^void SceneUser::jumpTo(zPos &newPos)$/;"	f	class:SceneUser
junDui	tmpcode/commond.h	/^        BYTE junDui;   \/\/ 0: Øø≤≤º¿◊  1:∫Ï Ø≥« $/;"	m	struct:ResultScoreAndExp
junDui	tmpcode/commond.h	/^    BYTE junDui; \/\/ ’Û”™±‡∫≈£¨0 ∑ø≤£¨1∫Ï Ø$/;"	m	struct:stSoundEffectLuoRiUserCmd
junDui	tmpcode/commond.h	/^    BYTE junDui; \/\/’Û”™±‡∫≈£¨0 ∑ø≤£¨1∫Ï Ø$/;"	m	struct:stJunXianScoreLuoRiUserCmd
junXian	tmpcode/commond.h	/^        BYTE junXian;   $/;"	m	struct:ResultScoreAndExp
junXian	tmpcode/commond.h	/^    BYTE junXian;\/\/ æ¸œŒ±‡∫≈$/;"	m	struct:stSoundEffectLuoRiUserCmd
junXian	tmpcode/commond.h	/^    BYTE junXian;\/\/æ¸œŒ±‡∫≈$/;"	m	struct:stJunXianScoreLuoRiUserCmd
kar	base/Object.h	/^	WORD kar;  \/\/‘À∆¯                                \/\/ ∂‘”¶¬Ì∆• ‘À∆¯$/;"	m	struct:t_Object
kar	tmpcode/commond.h	/^	WORD kar;$/;"	m	struct:SimulateHorse
kdpfd	base/zMTCPServer.h	/^	int kdpfd;$/;"	m	class:zMTCPServer
kdpfd	base/zTCPServer.h	/^	int kdpfd;$/;"	m	class:zTCPServer
keepDir	ScenesServer/SceneEntryPk.h	/^    BYTE keepDir;  \/\/\/ ‰øùÂ≠òÊäÄËÉΩÁöÑÊîªÂáªÊñπÂêë,‰º†ÈÄíÁªôÈúÄË¶Å‰ΩøÁî®ÁöÑÂäüËÉΩ$/;"	m	struct:SceneEntryPk
keepPos	ScenesServer/SceneEntryPk.h	/^    zPos keepPos;  \/\/\/ ‰øùÂ≠òÊäÄËÉΩÁöÑÊîªÂáªÁõÆÊ†áÁÇπ,‰º†ÈÄíÁªôÈúÄË¶Å‰ΩøÁî®ÁöÑÂäüËÉΩ$/;"	m	struct:SceneEntryPk
keepSuit	tmpcode/commond.h	/^    BYTE  keepSuit;     \/\/1±Ì æ±£¡ÙÃ◊◊∞∏ƒ‘Ï$/;"	m	struct:stRemakePropertyUserCmd
key	ScenesServer/QuestCondition.h	/^  void key(const std::string& key) $/;"	f	class:ScenesParser
key	base/Command.h	/^    BYTE key[256];  \/\/ ‰øùÂ≠òÂØÜÂåôÔºåÊï¥‰∏™Êï∞ÁªÑÁî®ÈöèÊú∫Êï∞Â°´ÂÖÖ$/;"	m	union:Cmd::stServerReturnLoginSuccessCmd::__anon66
key	base/xml/xml_node_container.h	/^	    std::string key;$/;"	m	class:detail::xml_node_map_container
key	tmpcode/commond.h	/^		BYTE key[256];	\/\/ ±£¥Ê√‹≥◊£¨’˚∏ˆ ˝◊È”√ÀÊª˙ ˝ÃÓ≥‰$/;"	m	union:stServerReturnLoginSuccessCmd::__anon211
key	tmpcode/commond.h	/^                WORD key;$/;"	m	struct:stNotifyPatternUserCmd::stPattern
key	tmpcode/commond.h	/^                WORD key;$/;"	m	struct:stRetShowSkillStoreInfo::stPattern
key	tmpcode/commond.h	/^    DWORD key;$/;"	m	struct:ChatAccelItem
keyHoles	tmpcode/commond.h	/^    KeyHole keyHoles[3];$/;"	m	struct:rtKeyStateShenMiUserCmd
keyOffset	base/Command.h	/^      BYTE keyOffset;  \/\/ ÂØÜÂåôÂú® key ‰∏≠ÁöÑÂÅèÁßª$/;"	m	struct:Cmd::stServerReturnLoginSuccessCmd::__anon66::__anon67
keyOffset	tmpcode/commond.h	/^			BYTE keyOffset;	\/\/ √‹≥◊‘⁄ key ÷–µƒ∆´“∆$/;"	m	struct:stServerReturnLoginSuccessCmd::__anon211::__anon212
keyValueType	SessionServer/CSort.h	/^    typedef std::multimap<QWORD,DWORD,ltqword>::value_type keyValueType;$/;"	t	class:CSortM
key_des	Robot/Client.h	/^	DES_cblock key_des;$/;"	m	class:Client
key_des	Robot/LoginClient.h	/^    DES_cblock key_des;$/;"	m	class:LoginClient
key_des	base/EncDec/EncDec.h	/^  DES_key_schedule key_des;$/;"	m	class:CEncrypt
key_equal	SuperServer/ServerTask.h	/^    struct key_equal : public std::binary_function<Cmd::Super::ServerEntry,Cmd::Super::ServerEntry,bool>$/;"	s	class:ServerTask
key_equal	base/zProperties.h	/^	struct key_equal : public std::binary_function<const std::string,const std::string,bool>$/;"	s	class:zProperties
key_hash	ScenesServer/Quest.h	/^  struct key_hash : public std::unary_function<const std::string,size_t>$/;"	s	class:Vars
key_hash	SuperServer/ServerTask.h	/^   struct key_hash$/;"	s	class:ServerTask
key_hash	base/zProperties.h	/^	struct key_hash : public std::unary_function<const std::string,size_t>$/;"	s	class:zProperties
key_rc5	base/EncDec/EncDec.h	/^  RC5_32_KEY key_rc5;$/;"	m	class:CEncrypt
keynum	tmpcode/commond.h	/^	DWORD keynum;                           \/\/ ø…¡Ï»°µƒ‘ø≥◊ ˝$/;"	m	struct:stBroadcastSeptMemberInfo
keynum	tmpcode/commond.h	/^	DWORD keynum; $/;"	m	struct:stSeptRember
keyprop	base/xml/xml_parser_generator.h	/^	xml_prop_parser_generator* keyprop;$/;"	m	class:xml_node_map_parser_generator
keyprop	base/xml/xml_parser_generator.h	/^	xml_prop_parser_generator* keyprop;$/;"	m	class:xml_node_set_parser_generator
kick	ScenesServer/Chat.cpp	/^bool Gm::kick(SceneUser *pUser,const char *para)$/;"	f	class:Gm
kickTimes	base/RecordCommand.h	/^      DWORD kickTimes[MAX_CHARINFO];$/;"	m	struct:Cmd::Record::t_Ret_SelectInfo_GateRecord
killAllPets	ScenesServer/SceneNpc.cpp	/^void SceneNpc::killAllPets()$/;"	f	class:SceneNpc
killCount	tmpcode/commond.h	/^        DWORD killCount;$/;"	m	struct:rtNotifyKillCountUserCmd
killCount	tmpcode/commond.h	/^        WORD    killCount;$/;"	m	struct:MOB_KILL_CONTRIBUTE
killIn	tmpcode/commond.h	/^	DWORD killIn;           \/\/\/ ‘⁄±æΩÁ…±µ– ˝(µ–»Àµ»º∂‘⁄ ÕÊº“µ»º∂-5  º∂“‘…œ)$/;"	m	struct:stRetCourseOfKingCmd
killMob	tmpcode/commond.h	/^	DWORD killMob;          \/\/\/ …±À¿ >=£®µ»º∂-5£©µƒπ÷ŒÔ ˝¡ø◊‹∫œ$/;"	m	struct:stRetCourseOfKingCmd
killNum	base/Command.h	/^	DWORD	killNum;				\/\/…±µ–¥Œ ˝ $/;"	m	struct:Cmd::ListData
killNum	tmpcode/commond.h	/^		WORD killNum;$/;"	m	struct:stRetSeptTeamChallengeUserCmd::acceptedQuests
killNum	tmpcode/commond.h	/^	DWORD	killNum;				\/\/…±µ–¥Œ ˝ $/;"	m	struct:ListData
killNum	tmpcode/commond.h	/^	WORD killNum;			\/\/µ•¥Œª˜…±¿€º∆ $/;"	m	struct:stPopoScore
killNums	tmpcode/commond.h	/^		WORD    killNums;                               \/\/ª˜…± ˝$/;"	m	struct:stRetKillNumsListZhenxuanUserCmd::KillData
killNums	tmpcode/commond.h	/^		WORD  killNums;$/;"	m	struct:stReturnScoreListZhenxuanUserCmd::NameAndScore
killOut	tmpcode/commond.h	/^	DWORD killOut;          \/\/\/ ‘⁄÷–¡¢«¯º∞∆‰À˚ΩÁ”Ú…±µ– ˝(µ–»Àµ»º∂‘⁄ ÕÊº“µ»º∂-5  º∂“‘…œ)$/;"	m	struct:stRetCourseOfKingCmd
killScore	tmpcode/commond.h	/^	WORD killScore;			\/\/µ•¥Œª˜…±¿€º∆$/;"	m	struct:stBaseScore
killScore	tmpcode/commond.h	/^	WORD killScore;			\/\/µ•¥Œª˜…±¿€º∆∑÷ ˝$/;"	m	struct:stPopoScore
killedNpcNum	ScenesServer/SceneUser.h	/^    DWORD killedNpcNum;$/;"	m	struct:SceneUser
killnow	ScenesServer/SceneEntryPk.h	/^    BYTE killnow; \/\/‰∏ÄÂáªÂøÖÊùÄ$/;"	m	struct:SceneEntryPk
kind	ScenesServer/NpcTrade.h	/^      WORD  kind;          \/\/\/Áâ©ÂìÅÁ±ªÂûã$/;"	m	struct:NpcTrade::NpcItem
kind	base/Command.h	/^  BYTE kind;      \/\/Áâ©ÂìÅÁ±ªÂûã,0ÊôÆÈÄö,1ËìùËâ≤,2ÈáëËâ≤,4Á•ûÂú£,8Â•óË$/;"	m	struct:Cmd::stTradeObject
kind	base/Command.h	/^  BYTE kind; \/\/Á±ªÂà´Ôºå1:ÂêàÊàê 2:ÊâìÈÄ† 3:ÂçáÁ∫ß$/;"	m	struct:Cmd::stResponsePropertyUserCmd
kind	base/Command.h	/^  BYTE kind;$/;"	m	struct:Cmd::t_MapObjectData
kind	base/Object.h	/^	BYTE kind;	\/\/change for kok by zgm ŒÔ∆∑¿‡–Õ, 0∞◊…´, 1¿∂…´, 2ª∆…´, 4¬Ã…´ \/\/ ∫Û√Ê «–¬‘ˆº”µƒ–ƒªÍµƒ—’…´ 5¬ÃΩ◊∂˛, 6¬ÃΩ◊»˝, 6¬ÃΩ◊Àƒ, 8¬ÃΩ◊ŒÂ$/;"	m	struct:t_Object
kind	base/SessionCommand.h	/^      BYTE kind; \/\/ 0: reserve 1: tong 2 : family$/;"	m	struct:Cmd::Session::t_QuestBulletinUserCmd
kind	base/SessionCommand.h	/^      BYTE kind; \/\/ 1: tong 2 :fam$/;"	m	struct:Cmd::Session::t_ChangeRP
kind	base/zDatabase.h	/^    DWORD  kind;        \/\/ ¿‡–Õ$/;"	m	struct:zNpcB
kind	base/zDatabase.h	/^    DWORD kind;		    \/\/∆∑÷ $/;"	m	struct:CardBase
kind	base/zDatabase.h	/^    DWORD kind;		    \/\/∆∑÷ $/;"	m	struct:zCardB
kind	base/zDatabase.h	/^    DWORD kind;	    \/\/¿‡–Õ$/;"	m	struct:zObjectB
kind	base/zDatabase.h	/^    DWORD kind;$/;"	m	struct:ObjectBase
kind	tmpcode/commond.h	/^		BYTE kind;      \/\/ŒÔ∆∑¿‡–Õ, 0∆’Õ®, 1¿∂…´, 2Ω…´, 4…Ò •, 8Ã◊◊∞$/;"	m	struct:stTradeObject
kind	tmpcode/commond.h	/^	  BYTE kind;  	\/\/ŒÔ∆∑¿‡–Õ, 0∆’Õ®, 1¿∂…´, 2Ω…´, 4…Ò •, 8Ã◊◊∞$/;"	m	struct:st_WatchPlayer
kind	tmpcode/commond.h	/^	BYTE kind;								\/\/—’…´$/;"	m	struct:t_MapObjectData
kind	tmpcode/commond.h	/^	BYTE kind;						\/\/ŒÔ∆∑¿‡–Õ, 0∆’Õ®, 1¿∂…´, 2Ω…´, 4…Ò •, 8Ã◊◊∞$/;"	m	struct:StoreNotice
kind	tmpcode/commond.h	/^	BYTE kind;              \/\/\/ ÷ß∏∂¿‡–Õ(0£∫Õ≈π±œ◊ 1£∫Ω Ù±“ 2£∫Ãÿ ‚«øªØ)$/;"	m	struct:stEquipIntensifyStart
kind	tmpcode/commond.h	/^	BYTE kind;              \/\/œ˚œ¢∑÷¿‡(1ΩΩÀÆ,2◊Ω≥Ê,3 ⁄∑€,4 ’ªÒ)$/;"	m	struct:FarmNotice
kind	tmpcode/commond.h	/^	BYTE kind;      \/\/\/ ∏¸œ∏µƒ∑÷¿‡(º˚…œ√Êµƒenum)$/;"	m	struct:UnionNoticeInfo
kind	tmpcode/commond.h	/^	BYTE kind;      \/\/\/ ¡¨µˆŒ™0£¨≤ª¡¨µˆŒ™1$/;"	m	struct:stConsequentFishUserCmd
kind	tmpcode/commond.h	/^	BYTE kind; \/\/—’…´$/;"	m	struct:EquipSimulate
kind	tmpcode/commond.h	/^	BYTE kind;$/;"	m	struct:stAdBroadcastUserCmd
kind	tmpcode/commond.h	/^	BYTE kind[3];   \/\/µ⁄“ª∏ˆ « ∑ø≤£¨µ⁄∂˛∏ˆ «∫Ï Ø£¨µ⁄»˝∏ˆ «√ﬂ¡˙ 0: Œﬁ ÿŒ¿(≤ªœ‘ æ) 1:’˝≥£ ÿŒ¿ 2:À…–∏µƒ ÿŒ¿ 3:¿¡…¢µƒ ÿŒ¿$/;"	m	struct:GuardSortData
kind	tmpcode/commond.h	/^	DWORD   kind;		\/\/—’…´$/;"	m	struct:t_RewardInfo
kind	tmpcode/commond.h	/^	DWORD kind;$/;"	m	struct:stReturnFarmIntroduce
kind	tmpcode/commond.h	/^        BYTE     kind;          \/\/ 0 ±Ì æ”√º”–«µƒŒÔ∆∑º”–«,1±Ì æ”√◊∞±∏◊‘¥¯µƒæ≠—È÷µº”–«,3±Ì æ◊‘∂Ø≥Â–«$/;"	m	struct:stNpcUpgradePropertyUserCmd
kind	tmpcode/commond.h	/^    BYTE kind; \/\/¿‡±£¨1:∫œ≥… 2:¥Ú‘Ï 3:…˝º∂ 7:∏ƒ‘Ï$/;"	m	struct:stResponsePropertyUserCmd
king	ScenesServer/SceneUser.h	/^    bool  king; \/\/ ÊòØÂê¶‰∏∫ÂõΩÁéã$/;"	m	struct:SceneUser
king	base/SessionCommand.h	/^      bool  king;      \/\/\/ ÊòØÂê¶‰∏∫ÂõΩÁéã$/;"	m	struct:Cmd::Session::t_sendUserRelationID
kingAchievement	tmpcode/commond.h	/^struct kingAchievement$/;"	s
kingConsort	ScenesServer/SceneUser.h	/^    BYTE  kingConsort; \/\/ 0‰∏çÊòØÂõΩÁéãÂíåÁöáÂ∏ùÁöÑÈÖçÂÅ∂,1‰∏∫ÂõΩÁéãÁöÑÈÖçÂÅ∂,2‰∏∫ÁöáÂ∏ùÁöÑÈÖçÂÅ∂$/;"	m	struct:SceneUser
kingList	tmpcode/commond.h	/^	CountryPastKing kingList[0];    \/\/±‰≥§Ω·ππ$/;"	m	struct:stRetCountryPastKingUserCmd
kingList	tmpcode/commond.h	/^	} kingList[10];$/;"	m	struct:stGetKingPurseListCmd	typeref:struct:stGetKingPurseListCmd::__anon252
kingName	base/Command.h	/^  char   kingName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stUpdateCountryKingUserCmd
kingName	tmpcode/commond.h	/^	char kingName[MAX_NAMESIZE+1];\/\/π˙Õı√˚◊÷$/;"	m	struct:CountryPastKing
kingName	tmpcode/commond.h	/^	char kingName[MAX_NAMESIZE];$/;"	m	struct:stJieZhanXuanZhan
kingName	tmpcode/commond.h	/^    char kingName[MAX_NAMESIZE];    \/\/≥«÷˜√˚◊÷$/;"	m	struct:CityInfo
king_name	base/Command.h	/^  char  king_name[MAX_NAMESIZE]; \/\/ ÂõΩÁéãÂêçÁß∞$/;"	m	struct:Cmd::_KingListItem
king_obj_time	ScenesServer/zObject.h	/^    DWORD king_obj_time;$/;"	m	class:EquipPack
king_obj_times	ScenesServer/zObject.h	/^    DWORD king_obj_times;$/;"	m	class:EquipPack
kingnum	tmpcode/commond.h	/^	BYTE kingnum;               \/\/ΩÁÕı ˝¡ø$/;"	m	struct:stRetCountryPastKingUserCmd
kings	tmpcode/commond.h	/^	BYTE kings[COUNTRY_NUM][MAX_NAMESIZE];  \/\/ ∞¥≈≈√˚¥Œ–ÚµƒΩÁÕı√˚◊÷$/;"	m	struct:stReturnCountrySortListUserCmd
kok3DInterval	base/zDatabase.h	/^    DWORD kok3DInterval;$/;"	m	struct:zNpcB
kok3DZoom	base/zDatabase.h	/^    DWORD kok3DZoom;$/;"	m	struct:zNpcB
kokAttGroupID	base/zDatabase.h	/^    DWORD kokAttGroupID;$/;"	m	struct:zNpcB
kokGroupID	base/zDatabase.h	/^    DWORD kokGroupID;$/;"	m	struct:zNpcB
ks	base/EncDec/EncDec.h	/^	} ks[16];$/;"	m	struct:DES_ks	typeref:union:DES_ks::__anon6
ks	base/EncDec/mydes.h	/^	} ks[16];$/;"	m	struct:DES_ks	typeref:union:DES_ks::__anon5
kulou	ScenesServer/ScenePk.h	/^      SWORD kulou;    \/\/È™∑È´ÖÂºìÊâãÂ¢ûÂº∫$/;"	m	struct:SkillState::__anon155::__anon156
lCrossArmyMapID	tmpcode/commond.h	/^static const long lCrossArmyMapID = 5110;$/;"	v
lSeptPPTMapID	tmpcode/commond.h	/^const long lSeptPPTMapID = 5073;			\/\/º“◊Â≈›≈›Ã√∏±±æµÿÕºid$/;"	v
landid	tmpcode/commond.h	/^	BYTE landid;			\/\/Õ¡µÿ±Í ∂$/;"	m	struct:stLandItem
landid	tmpcode/commond.h	/^	BYTE landid;		\/\/“™ ⁄∑€µƒÕ¡µÿ±Í ∂$/;"	m	struct:stReqPollUserCmd
landid	tmpcode/commond.h	/^	BYTE landid;		\/\/“™÷÷÷≤µƒÕ¡µÿ±Í ∂$/;"	m	struct:stReqPlantUserCmd
landid	tmpcode/commond.h	/^	BYTE landid; $/;"	m	struct:stRetPollInfoUserCmd
landid	tmpcode/commond.h	/^	BYTE landid;$/;"	m	struct:stDoPlantActionUserCmd
landid	tmpcode/commond.h	/^	BYTE landid;$/;"	m	struct:stReqLandItemUserCmd
landid	tmpcode/commond.h	/^	BYTE landid;$/;"	m	struct:stReqPollInfoUserCmd
last	GatewayServer/CmdChecker.h	/^	void last(const zRTime& time)$/;"	f	class:CheckInfo
last	GatewayServer/CmdChecker.h	/^	zRTime& last()$/;"	f	class:CheckInfo
lastAwardNums	tmpcode/commond.h	/^	BYTE lastAwardNums;\/\/1:≥ËŒÔæ∫≤¬ 2ΩÁ”Úæ∫≤¬$/;"	m	struct:stNotifyLastBetWinDragonUserCmd
lastBorrower	tmpcode/commond.h	/^	char    lastBorrower[MAX_NAMESIZE];		\/\/ΩË”√’ﬂ$/;"	m	struct:TankData
lastChangeCountryTime	ScenesServer/SceneUser.h	/^    DWORD lastChangeCountryTime;$/;"	m	struct:SceneUser
lastCheckGoodness	ScenesServer/ScenePk.h	/^  zRTime lastCheckGoodness;$/;"	m	struct:ScenePkState
lastCheckMessage	ScenesServer/SceneUser.h	/^    zRTime lastCheckMessage;      \/\/\/ÊúÄÂêé‰∏ÄÊ¨°Ê£ÄÊü•MessageÊó∂Èó¥$/;"	m	struct:SceneUser
lastCheckTime	GatewayServer/GatewayTask.h	/^	Timer lastCheckTime;$/;"	m	class:GatewayTask
lastCountryID	tmpcode/commond.h	/^    DWORD lastCountryID;    \/\/ …œ¥Œ∂‘’Ωπ˙º“$/;"	m	struct:stJieZhanState
lastDisMoney	tmpcode/commond.h	/^		DWORD lastDisMoney;     \/\/…œ¥Œ∑¢π§◊  ±º‰$/;"	m	struct:stRtEarningInfoUnionCmd
lastFinishQuest	tmpcode/commond.h	/^	DWORD lastFinishQuest;  \/\/\/ …œ“ª¥ŒÕÍ≥…µƒ»ŒŒÒ$/;"	m	struct:stRetCourseOfKingCmd
lastIP	base/RecordCommand.h	/^      DWORD lastIP;$/;"	m	struct:Cmd::Record::t_Ret_SelectInfo_GateRecord
lastIP	tmpcode/commond.h	/^	DWORD lastIP, offLineTime;$/;"	m	struct:stLastLoginInfoSelectUserCmd
lastIncTime	ScenesServer/SceneUser.h	/^    DWORD lastIncTime;$/;"	m	struct:SceneUser
lastKiller	ScenesServer/SceneUser.h	/^    DWORD lastKiller;\/\/ÊúÄÂêé‰∏Ä‰∏™ÊùÄÊ≠ªËá™Â∑±ÁöÑÁé©ÂÆ∂ÁöÑ‰∏¥Êó∂ID$/;"	m	struct:SceneUser
lastMTime	ScenesServer/ScenePk.h	/^  DWORD lastMTime;$/;"	m	struct:ScenePkState
lastMoveTime	ScenesServer/SceneUser.h	/^    DWORD  lastMoveTime;$/;"	m	struct:SceneUser
lastNum1	tmpcode/commond.h	/^	WORD lastNum1,lastNum2;$/;"	m	struct:stScoreChallengeUserCmd
lastNum1	tmpcode/commond.h	/^	WORD lastNum1;$/;"	m	struct:stInfoChallengeUserCmd
lastNum2	tmpcode/commond.h	/^	WORD lastNum1,lastNum2;$/;"	m	struct:stScoreChallengeUserCmd
lastNum2	tmpcode/commond.h	/^	WORD lastNum2;$/;"	m	struct:stInfoChallengeUserCmd
lastOfflineLevel	tmpcode/commond.h	/^	DWORD lastOfflineLevel;                                 \/\/\/ …œ¥Œ¿Îœﬂµ»º∂$/;"	m	struct:stSeptRember
lastOfflineTime	tmpcode/commond.h	/^	DWORD lastOfflineTime;                                  \/\/ …œ¥Œ¿Îœﬂ ±º‰ [8\/27\/2009]	$/;"	m	struct:stSeptRember
lastPTime	ScenesServer/ScenePk.h	/^  DWORD lastPTime;$/;"	m	struct:ScenePkState
lastPkTime	ScenesServer/SceneEntryPk.h	/^    BYTE  lastPkTime; \/\/ÊúÄÂêéPKÊ†áÂøó$/;"	m	struct:SceneEntryPk
lastPos1	base/zSceneEntry.h	/^	zPos lastPos1;$/;"	m	struct:zSceneEntry
lastPos2	base/zSceneEntry.h	/^	zPos lastPos2;$/;"	m	struct:zSceneEntry
lastPositionTime	tmpcode/commond.h	/^	lastPositionTime()$/;"	f	struct:lastPositionTime
lastPositionTime	tmpcode/commond.h	/^struct lastPositionTime$/;"	s
lastQuestID	tmpcode/commond.h	/^	DWORD lastQuestID;  \/\/–Ë“™µƒ◊Ó∫Û“ª∏ˆ»ŒŒÒid$/;"	m	struct:TitleInfo
lastResult	tmpcode/commond.h	/^    DWORD lastResult;       \/\/ …œ¥ŒΩÁ’ΩΩ·π˚: 0 ŒﬁΩ·π˚, 1 ’Ω §, 2 ’Ω∞‹$/;"	m	struct:stJieZhanState
lastSelectedID	tmpcode/commond.h	/^	BYTE lastSelectedID;$/;"	m	struct:stTabKeyPropertyUserCmd
lastSelectedID	tmpcode/commond.h	/^	BYTE lastSelectedID;$/;"	m	struct:stTabLastSelectedIDPropertyUserCmd
lastSequenceTime	SuperServer/ServerTask.h	/^    zTime lastSequenceTime;        \/**< ◊Ó∫Û“ª¥Œ¥¶¿Ì∆Ù∂ØÀ≥–Úµƒ ±º‰ *\/$/;"	m	class:ServerTask
lastState	tmpcode/commond.h	/^	BYTE lastState;         \/\/◊ÓΩ¸∂ØÃ¨£¨ÃÓ ˝◊÷£¨øÕªß∂À◊‘º∫Ω‚Œˆ$/;"	m	struct:HouseRoomData
lastTax	tmpcode/commond.h	/^	BYTE lastTax;\/\/…œ“ª∏ˆ…Ë∂®µƒÀ∞¬ $/;"	m	struct:stCanSetUnionCityTax
lastTime	ScenesServer/scriptTickTask.h	/^	time_t lastTime;$/;"	m	struct:scriptTask
lastTime	base/SessionCommand.h	/^      time_t lastTime;$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
lastTime	tmpcode/commond.h	/^		WORD lastTime;$/;"	m	struct:stSendResultListLuoRiCmd
lastTime	tmpcode/commond.h	/^	DWORD lastTime;$/;"	m	struct:stRetAvatarInfo
lastTime	tmpcode/commond.h	/^	DWORD lastTime;$/;"	m	struct:stRetSeptRentStoreCmd
lastTime	tmpcode/commond.h	/^	DWORD lastTime;$/;"	m	struct:stStartSeptPopoUserCmd
lastTime	tmpcode/commond.h	/^        DWORD				lastTime;$/;"	m	struct:stUnionMerchRoadInfo
lastTime	tmpcode/commond.h	/^        DWORD	lastTime;$/;"	m	struct:stShopMeetInfo
lastTime	tmpcode/commond.h	/^        WORD lastTime;                  \/\/¬‰»’’Ω≥°≥÷–¯ ±º‰$/;"	m	struct:stReturnScoreListLuoRiUserCmd
lastTime	tmpcode/commond.h	/^        WORD lastTime;$/;"	m	struct:stPlaySoundQuestUserCmd
lastTime	tmpcode/commond.h	/^    DWORD lastTime;         \/\/ …œ¥Œ–˚’Ω ±º‰$/;"	m	struct:stJieZhanState
lastTimeS	tmpcode/commond.h	/^    DWORD lastTimeS;        \/\/ …œ¥Œ–˚’Ω ±º‰Stamp$/;"	m	struct:stJieZhanState
lastType	tmpcode/commond.h	/^    DWORD lastType;         \/\/ …œ¥ŒΩÁ’Ω¿‡–Õ, 1 π•ª˜, 2 ∑¿ ÿ$/;"	m	struct:stJieZhanState
lastUpdateTime	GatewayServer/LoginSessionManager.h	/^	zRTime lastUpdateTime;$/;"	m	class:LoginSessionManager
lastUseSkill	ScenesServer/SceneUser.h	/^    WORD  lastUseSkill; \/\/ ÊúÄÂêé‰∏ÄÊ¨°‰ΩøÁî®ÁöÑÊäÄËÉΩ$/;"	m	struct:SceneUser
lastUseTime	ScenesServer/Skill.h	/^    QWORD lastUseTime;$/;"	m	struct:zSkill
lastWeekAward	tmpcode/commond.h	/^	DWORD lastWeekAward;            \/\/\/ …œ÷‹º®–ßΩ∂Ó$/;"	m	struct:stRetMasterPerformInfoCmd
lastWeekKill	tmpcode/commond.h	/^		WORD    lastWeekKill;                           \/\/…œ÷‹¡¨ª˜ ˝$/;"	m	struct:stRetSeqKillListZhenxuanUserCmd::SeqKillData
lastWeekPoint	tmpcode/commond.h	/^		WORD    lastWeekPoint;                          \/\/…œ÷‹æ∫ººµ„$/;"	m	struct:stRetPointListZhenxuanUserCmd::PointData
lastWeekReceived	tmpcode/commond.h	/^	BYTE lastWeekReceived;          \/\/\/  «∑Ò¡Ï»°π˝…œ÷‹≥…æÕ(0£∫“—¡Ï»°£¨1£∫≤ª∫œÃıº˛£¨2£∫Œ¥¡Ï»°)$/;"	m	struct:stRetUserPerformInfoCmd
lastWeekReceived	tmpcode/commond.h	/^	BYTE lastWeekReceived;          \/\/\/  «∑Ò¡Ï»°π˝…œ÷‹º®–ß$/;"	m	struct:stRetMasterPerformInfoCmd
lastWeekScore	tmpcode/commond.h	/^	DWORD lastWeekScore;            \/\/\/ …œ÷‹ªÒµ√µ„ ˝$/;"	m	struct:stRetUserPerformInfoCmd
lastWeekScore	tmpcode/commond.h	/^	DWORD lastWeekScore;    \/\/\/ …œ÷‹µ√∑÷$/;"	m	struct:MasterPerformInfo
lastWeekScore	tmpcode/commond.h	/^	DWORD lastWeekScore;    \/\/\/ …œ÷‹µ„ ˝$/;"	m	struct:stUserPerformInfo
last_check_time	base/zSocket.h	/^	zTime last_check_time;            \/**< ◊Ó∫Û“ª¥ŒºÏ≤‚ ±º‰ *\/$/;"	m	class:zSocket
last_setTaxName	tmpcode/commond.h	/^	char last_setTaxName[MAX_NAMESIZE];\/\/…œ“ª∏ˆ…Ë∂®À∞¬ µƒ»À√˚◊÷$/;"	m	struct:stCanSetUnionCityTax
last_time	base/CharBase.h	/^    DWORD last_time;$/;"	m	struct:CounterMember
lasthp	ScenesServer/SceneNpc.h	/^  DWORD lasthp;$/;"	m	class:SceneNpc
lastsavetime	RecordServer/RecordSessionManager.h	/^  zTime lastsavetime;    \/\/\/ ◊Ó∫Û“ª¥Œ¥Êµµ ±º‰$/;"	m	struct:RecordSession
lasttime	ScenesServer/SceneNpcAI.h	/^  int lasttime;$/;"	m	struct:t_NpcAIDefine
lasttime	SessionServer/CRelationManager.h	/^  DWORD lasttime;$/;"	m	struct:CRelation
lasttime	tmpcode/commond.h	/^	WORD lasttime;$/;"	m	struct:stLiuXingHuoYuMagicUserCmd
lasttime	tmpcode/commond.h	/^        DWORD lasttime; \/\/≥÷–¯ ±º‰<µ•Œª√Î>$/;"	m	struct:stBeginDisplayCartoonUserCmd
lasttime	tmpcode/commond.h	/^        DWORD lasttime;$/;"	m	struct:stQuestTipsUserCmd
lasttime	tmpcode/commond.h	/^    DWORD lasttime;\/\/ £”‡¡Ï»° ±º‰$/;"	m	struct:stGetLingQiEggPropertyUserCmd
layout	tools/xmlpg.cpp	/^    int layout;$/;"	m	struct:Args
leaber	base/SessionCommand.h	/^		bool leaber;				\/\/sky ÊòØÂê¶ÊòØÈòüÈïø$/;"	m	struct:Cmd::Session::stMember
leader	ScenesServer/SceneSkill.cpp	/^  SceneUser *leader;$/;"	m	struct:TeamSkillExec
leader	tmpcode/commond.h	/^		DWORD leader; \/\/¥∫‘À¡Ïµº’ﬂ$/;"	m	struct:req_rtChunYunListCmd
leader	tmpcode/commond.h	/^	 stTeamUserInfo leader;$/;"	m	struct:stRetTeamInfoCmd
leader	tmpcode/commond.h	/^	 stTeamUserInfo leader;$/;"	m	struct:stRetTeamInfo_Client
leaderID	base/SessionCommand.h	/^      DWORD leaderID;$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
leaderName	tmpcode/commond.h	/^	 char leaderName[MAX_NAMESIZE];                \/\/…Í«Îº”»ÎµƒÕÊº“√˚$/;"	m	struct:stReqAddTeamCmd
leaderName	tmpcode/commond.h	/^	char leaderName[MAX_NAMESIZE];		\/\/∂”≥§√˚$/;"	m	struct:teamRecruitInfo
leaderName	tmpcode/commond.h	/^	char leaderName[MAX_NAMESIZE];                \/\/…Í«Îº”»ÎµƒÕÊº“√˚$/;"	m	struct:stReqJoinTeamCmd
leaderTempID	base/Command.h	/^  DWORD  leaderTempID;      \/\/È¢ÜÂØºtempid$/;"	m	struct:Cmd::stDareCallDuty
leaderTempID	base/SessionCommand.h	/^      DWORD leaderTempID;  $/;"	m	struct:Cmd::Session::t_Check_CallTimes_SceneSession
leaderTempID	base/SessionCommand.h	/^      DWORD leaderTempID;  $/;"	m	struct:Cmd::Session::t_GoTo_Leader_Check_SceneSession
leaderTempID	base/SessionCommand.h	/^      DWORD leaderTempID;  $/;"	m	struct:Cmd::Session::t_GoTo_Leader_SceneSession
leaderTempID	base/SessionCommand.h	/^      DWORD leaderTempID;  $/;"	m	struct:Cmd::Session::t_Reset_CallTimes_SceneSession
leaderTempID	base/SessionCommand.h	/^      DWORD leaderTempID;  $/;"	m	struct:Cmd::Session::t_Return_CallTimes_SceneSession
leaderTempID	tmpcode/commond.h	/^	DWORD	leaderTempID;			\/\/¡Ïµºtempid$/;"	m	struct:stDareCallDuty
leaderTempID	tmpcode/commond.h	/^        DWORD   leaderTempID;                   \/\/¡Ïµºtempid$/;"	m	struct:stMercenaryCallDuty
leaveBattle	ScenesServer/SceneEntryPk.cpp	/^void SceneEntryPk::leaveBattle()$/;"	f	class:SceneEntryPk
leaveBattle	ScenesServer/SceneNpc.cpp	/^void SceneNpc::leaveBattle()$/;"	f	class:SceneNpc
leaveTime	tmpcode/commond.h	/^	DWORD leaveTime;$/;"	m	struct:stNoticeStopSeptFlag
leech	ScenesServer/SceneEntryPk.h	/^    virtual void leech(DWORD dwDam) {}$/;"	f	struct:SceneEntryPk
leech	ScenesServer/zObject.h	/^  struct leech$/;"	s	class:Equips
leech	base/Object.h	/^	struct leech$/;"	s	struct:t_Object
leechdom	base/zDatabase.h	/^    }leechdom;$/;"	m	struct:zObjectB	typeref:struct:zObjectB::leechdom_t
leechdom_t	base/zDatabase.h	/^    struct leechdom_t$/;"	s	struct:zObjectB
leechdomsize	tmpcode/commond.h	/^		WORD leechdomsize;		\/\/¡∂Ωµƒ≈‰∑Ω ˝¡ø$/;"	m	struct:stNotifyPatternUserCmd
left	tmpcode/commond.h	/^    DWORD left;$/;"	m	struct:stRefreshJieZhanTitleActive
leftCount	tmpcode/commond.h	/^	DWORD leftCount;$/;"	m	struct:stQueryFlowerLeftCountUserCmd
leftDrinkCoolTime	tmpcode/commond.h	/^	WORD leftDrinkCoolTime; \/\/ÛÙª∫»æ∆ £”‡µƒ¿‰»¥ ±º‰(√Î)$/;"	m	struct:stSendDrunkStateGouhuoUserCmd
leftHours	tmpcode/commond.h	/^        WORD   leftHours;    \/\/ £”‡µƒ–° ± ˝$/;"	m	struct:stSetTimeUserCmd
leftMoneyRatio	tmpcode/commond.h	/^	DWORD leftMoneyRatio;\/\/ £”‡◊ Ω±»¿˝$/;"	m	struct:CityInfo
leftProtectTime	ScenesServer/ScenePk.h	/^  DWORD leftProtectTime()$/;"	f	struct:ScenePkState
leftSec	tmpcode/commond.h	/^	WORD  leftSec;  \/\/Ω¯»ÎªÓ∂Øµƒ £”‡ ±º‰$/;"	m	struct:stNotifyEnterDTUserCmd
leftSec	tmpcode/commond.h	/^	WORD leftSec;   \/\/ £”‡√Î ˝$/;"	m	struct:stEnterDTUserCmd
leftSec	tmpcode/commond.h	/^    DWORD leftSec;$/;"	m	struct:stZhongLiCityTime
leftSec	tmpcode/commond.h	/^    WORD leftSec;   \/\/ £”‡ ±º‰£¨√Î$/;"	m	struct:stShowBackInfoUserCmd
leftTime	tmpcode/commond.h	/^	DWORD leftTime;                         \/\/ £”‡ ±º‰$/;"	m	struct:stLeftTimeMaxLevelLimitUserCmd
leftTime	tmpcode/commond.h	/^	DWORD leftTime; \/\/ £”‡ø…Õ£¡Ù ±º‰£¨µ•Œª√Î$/;"	m	struct:stSendInfoUserCmd
leftTime	tmpcode/commond.h	/^	DWORD leftTime; \/\/ £”‡ø…Õ£¡Ù ±º‰£¨µ•Œª√Î$/;"	m	struct:stSendWenMingNCInfoUserCmd
leftTime	tmpcode/commond.h	/^	WORD leftTime;          \/\/’Ω≥° £”‡ ±º‰$/;"	m	struct:stSendAllScoreCmd
leftTime	tmpcode/commond.h	/^        DWORD leftTime;  \/\/±æ¥Œ»€¡∂µƒ £”‡ ±º‰$/;"	m	struct:stStoveDataUserCmd
leftTime	tmpcode/commond.h	/^        DWORD leftTime;  \/\/±æ¥Œ»€¡∂µƒ £”‡ ±º‰$/;"	m	struct:stUpdateStoveDataUserCmd
leftTime	tmpcode/commond.h	/^        DWORD leftTime; \/\/ £”‡ ±º‰:√Î$/;"	m	struct:rtChunYunInfo
leftTime	tmpcode/commond.h	/^        DWORD leftTime;$/;"	m	struct:stSendLeftTimeAuction
leftTime	tmpcode/commond.h	/^        DWORD leftTime;\/\/ £”‡ ±º‰£¨√Î ˝$/;"	m	struct:rtTableListMapScreenUserCmd
leftTime	tmpcode/commond.h	/^        WORD    leftTime;       \/\/Õ®÷™øÕªß∂À¥”∂‡…Ÿ√Îø™ ºµπº∆ ±,ƒ¨»œ∑¢85$/;"	m	struct:stInviteDaTaoShaUserCmd
leftTimePrison	tmpcode/commond.h	/^    DWORD leftTimePrison;$/;"	m	struct:stLeftTimePrison
legendxxx	base/Command.h	/^  WORD	legendxxx;$/;"	m	struct:Cmd::t_MainUserData
legendyyy	base/Command.h	/^  BYTE	legendyyy;$/;"	m	struct:Cmd::t_MainUserData
len	ScenesServer/Scene.cpp	/^  const int len;  \/\/\/ ÂæÖÂèëÈÄÅÊåá‰ª§ÁöÑÂ§ßÂ∞è$/;"	m	struct:SceneSendToEveryOne
len	ScenesServer/Scene.cpp	/^  const int len;  \/\/\/ ÂæÖÂèëÈÄÅÊåá‰ª§ÁöÑÂ§ßÂ∞è$/;"	m	struct:SceneSendToUnWatchTrap
len	ScenesServer/Scene.cpp	/^  const int len;  \/\/\/ ÂæÖÂèëÈÄÅÊåá‰ª§ÁöÑÂ§ßÂ∞è$/;"	m	struct:SceneSendToWatchTrap
len	ScenesServer/Scene.cpp	/^  const int len;  \/\/\/ ÂæÖÂèëÈÄÅÊåá‰ª§ÁöÑÂ§ßÂ∞è$/;"	m	struct:SendToEveryOneExceptMe
len	base/SessionCommand.h	/^      DWORD len;$/;"	m	struct:Cmd::Session::t_sendCmd_SceneSession
len	tmpcode/commond.h	/^	WORD len;  \/\/≥§∂»  $/;"	m	struct:stRetPromoterAddressUserCmd
len	tmpcode/commond.h	/^	WORD len;$/;"	m	struct:rtPictureHelpUserCmd
len	tmpcode/commond.h	/^    WORD len;               \/\/strlen(info)+1$/;"	m	struct:stNotifyLevelFormQuestRoomUserCmd
length	tmpcode/commond.h	/^	BYTE length;$/;"	m	struct:set_manteau
length	tmpcode/commond.h	/^        BYTE length;\/\/≥§∂»       $/;"	m	struct:set_SeptManteau
lessExploit	SessionServer/SessionManager.cpp	/^bool lessExploit(const CGraceUser& p1,const CGraceUser& p2)$/;"	f
lessGraceScore	SessionServer/SessionManager.cpp	/^bool lessGraceScore(const CGraceUser& p1,const CGraceUser& p2)$/;"	f
level	ScenesServer/HeroInfoManager.h	/^    WORD level;		\/\/”¢–€µ»º∂$/;"	m	struct:HeroData
level	ScenesServer/NpcTrade.h	/^      WORD  level;        \/\/\/ÊúÄÈ´òÁ≠âÁ∫ß$/;"	m	struct:NpcTrade::NpcItem
level	ScenesServer/Scene.h	/^    BYTE level;$/;"	m	class:Scene
level	ScenesServer/SceneManager.h	/^      BYTE level;$/;"	m	struct:SceneManager::MapInfo
level	SessionServer/CRelationManager.h	/^  WORD  level;$/;"	m	struct:CRelation
level	SessionServer/Session.h	/^    BYTE level;$/;"	m	class:SceneSession
level	SessionServer/Session.h	/^    WORD  level;$/;"	m	class:UserSession
level	base/CharBase.h	/^  WORD  level;            \/\/\/ ËßíËâ≤Á≠âÁ∫ß$/;"	m	struct:CharBase
level	base/Command.h	/^                WORD    level;                                          \/\/µ»º∂  $/;"	m	struct:Cmd::t_GetSortList::__anon127
level	base/Command.h	/^    WORD level;            \/\/\/ ËßíËâ≤Á≠âÁ∫ß$/;"	m	struct:Cmd::SelectUserInfo
level	base/Command.h	/^    WORD level;$/;"	m	union:Cmd::stRelationStatusCmd::__anon125
level	base/Command.h	/^  DWORD level;$/;"	m	struct:Cmd::stRetGenCountryCmd
level	base/Command.h	/^  DWORD level;\/\/ÂéªÁ¨¨Âá†Â±Ç$/;"	m	struct:Cmd::stGoTrainPropertyUserCmd
level	base/Command.h	/^  WORD  level;            \/\/ ÊàêÂëòÁ≠âÁ∫ß$/;"	m	struct:Cmd::stSeptRember
level	base/Command.h	/^  WORD  level;          \/\/ ÊàêÂëòÁ≠âÁ∫ß$/;"	m	struct:Cmd::stUnionRember
level	base/Command.h	/^  WORD  level;          \/\/\/ ËßíËâ≤Á≠âÁ∫ß$/;"	m	struct:Cmd::t_MainUserData
level	base/Command.h	/^  WORD  level;        \/\/  ÂÖ≥Á≥ªÁ∫ßÂà´$/;"	m	struct:Cmd::stRelation
level	base/Command.h	/^  WORD level;           \/\/ ÊàêÂëòÁ≠âÁ∫ß$/;"	m	struct:Cmd::stBroadcastSeptMemberInfo
level	base/Command.h	/^  WORD level;          \/\/ ÊàêÂëòÁ≠âÁ∫ß$/;"	m	struct:Cmd::stBroadcastMemberInfo
level	base/Command.h	/^  WORD level;$/;"	m	struct:Cmd::stQueryAuction
level	base/Command.h	/^  int level;$/;"	m	struct:Cmd::stQuestInfoUserCmd
level	base/GmToolCommand.h	/^      WORD level;$/;"	m	struct:Cmd::GmTool::t_Punish_GmTool
level	base/HeroCardCmd.h	/^	WORD level;		\/\/”¢–€µ»º∂$/;"	m	struct:Cmd::t_hero
level	base/RecordCommand.h	/^      DWORD level;              \/\/\/ ËßíËâ≤Á≠âÁ∫ß$/;"	m	struct:Cmd::Record::t_Delete_CharTest_SceneRecord
level	base/RecordCommand.h	/^      DWORD level;              \/\/\/ ËßíËâ≤Á≠âÁ∫ß$/;"	m	struct:Cmd::Record::t_Insert_CharTest_SceneRecord
level	base/RecordCommand.h	/^      DWORD level;              \/\/\/ ËßíËâ≤Á≠âÁ∫ß$/;"	m	struct:Cmd::Record::t_Read_CharTest_SceneRecord
level	base/RecordCommand.h	/^      DWORD level;              \/\/\/ ËßíËâ≤Á≠âÁ∫ß$/;"	m	struct:Cmd::Record::t_Update_CharTest_SceneRecord
level	base/RolechangeCommand.h	/^	DWORD level;$/;"	m	struct:Cmd::Rolechange::t_zone_info
level	base/RolechangeCommand.h	/^	int level;	    \/\/∏√«¯µ⁄20√˚µƒµ»º∂$/;"	m	struct:Cmd::Rolechange::t_sendChangeSort
level	base/SessionCommand.h	/^	    WORD level;$/;"	m	union:Cmd::Session::t_RelationAddFriend::__anon45
level	base/SessionCommand.h	/^      DWORD level;$/;"	m	struct:Cmd::Session::t_levelNotifyCartoon_SceneSession
level	base/SessionCommand.h	/^      DWORD level;$/;"	m	struct:Cmd::Session::t_refreshGen_SceneSession
level	base/SessionCommand.h	/^      WORD level;$/;"	m	struct:Cmd::Session::t_levelupNotify_SceneSession
level	base/SessionCommand.h	/^      WORD level;$/;"	m	struct:Cmd::Session::t_queryAuction_SceneSession
level	base/xmlparser/giftbag.h	/^            xml_prop<DWORD>	level;$/;"	m	struct:GiftBagConfig::Bag::Quality
level	base/xmlparser/herobase.h	/^            xml_prop<WORD>	level;$/;"	m	struct:HeroBaseCFG::Exp::Item
level	base/zDatabase.h	/^	    DWORD level;$/;"	m	struct:zObjectB::material::stuff
level	base/zDatabase.h	/^	DWORD level;$/;"	m	struct:zObjectB::skills
level	base/zDatabase.h	/^    DWORD  level;        \/\/ µ»º∂$/;"	m	struct:zNpcB
level	base/zDatabase.h	/^    WORD level;$/;"	m	struct:zObjectB
level	tmpcode/commond.h	/^		BYTE level;             \/\/∑÷…Ìƒ‹¡¶$/;"	m	struct:stRetSeptAvatarInfo::stAvatarInfo
level	tmpcode/commond.h	/^		BYTE level;$/;"	m	struct:stForceRelationDataUserCmd::stForceInfo
level	tmpcode/commond.h	/^		DWORD  level; \/\/»⁄∫œ±£¡Ùµ»º∂$/;"	m	struct:stMergeLingQiUserCmd::lingQiSkillsMerge
level	tmpcode/commond.h	/^		WORD level;             \/\/œ¬œﬂµ»º∂$/;"	m	struct:stRet_PromoterRelationUserCmd::SubPlayer
level	tmpcode/commond.h	/^		WORD level;$/;"	m	union:stRelationStatusCmd::__anon236
level	tmpcode/commond.h	/^		int				level;	\/\/µ±«∞ººƒ‹µ»º∂$/;"	m	struct:stSeptSkillList::__anon303
level	tmpcode/commond.h	/^	 WORD level;$/;"	m	struct:stTeamUserInfo
level	tmpcode/commond.h	/^	BYTE	level;											\/\/ ∑øŒ›µ»º∂$/;"	m	struct:stHomeItem
level	tmpcode/commond.h	/^	BYTE	level;                        \/\/µ»º∂$/;"	m	struct:HomeMapData
level	tmpcode/commond.h	/^	BYTE    level;                           \/\/¥Ú‘Ï ±◊∞µƒº∂±$/;"	m	struct:stFoundFashionPropertyUserCmd
level	tmpcode/commond.h	/^	BYTE    level;                  \/\/µ»º∂  $/;"	m	struct:TankData
level	tmpcode/commond.h	/^	BYTE   level; \/\/º∂±±Í ∂£ªµ±ŒÔ∆∑IDŒ™665 ±£¨levelŒ™1œ‘ æŒ™ÀÆæß±“£¨levelŒ™2œ‘ æŒ™Ω Ù±“£ªbindøÿ÷∆ «∑Ò∞Û∂®£¨µ±«∞»ÙŒ™ÀÆæß±“£¨“ª∂® «∞Û∂®µƒ$/;"	m	struct:GiftItem
level	tmpcode/commond.h	/^	BYTE level;							\/\/Level : 1(<10)   11(>=10)$/;"	m	struct:t_UserData
level	tmpcode/commond.h	/^	BYTE level;							\/\/µ»º∂$/;"	m	struct:DecayHouseBaseData
level	tmpcode/commond.h	/^	BYTE level;			\/\/ŒÔ∆∑µ»º∂$/;"	m	struct:HouseObjDef
level	tmpcode/commond.h	/^	BYTE level;             \/\/µ»º∂$/;"	m	struct:DecayHouseSession
level	tmpcode/commond.h	/^	BYTE level;            \/\/Ã·…˝ªÚºı…Ÿ∫Ûµƒµ»º∂          $/;"	m	struct:stAddUnionMemberRank
level	tmpcode/commond.h	/^	BYTE level;     \/\/µ⁄…œŒÔµ»º∂£¨Ω´æˆ∂®ΩÁ√Êœ‘ æ$/;"	m	struct:rt_ObjVisitHouseUserCmd
level	tmpcode/commond.h	/^	BYTE level;     \/\/◊”º∂±$/;"	m	struct:stReqAchivementAwardUserCmd
level	tmpcode/commond.h	/^	BYTE level;  \/\/ ŒÔ∆∑µ»º∂$/;"	m	struct:NewbieGiftItem
level	tmpcode/commond.h	/^	BYTE level; \/\/µ±«∞µ»º∂∆¿∂®	(◊™≥…◊÷∑˚)$/;"	m	struct:stPictureEffectMapUserCmd
level	tmpcode/commond.h	/^	BYTE level;$/;"	m	struct:DestInfo
level	tmpcode/commond.h	/^	BYTE level;$/;"	m	struct:SeptNotice
level	tmpcode/commond.h	/^	BYTE level;$/;"	m	struct:stHuoDuiLevelUserCmd
level	tmpcode/commond.h	/^	BYTE level;$/;"	m	struct:stRetAvatarInfo
level	tmpcode/commond.h	/^	BYTE level;$/;"	m	struct:stRetSeptAvatar
level	tmpcode/commond.h	/^	BYTE level;$/;"	m	struct:stRetUnionNeedBuildProCmd
level	tmpcode/commond.h	/^	BYTE level;$/;"	m	struct:t_MapTankData
level	tmpcode/commond.h	/^	BYTE level;\/\/‘§¡Ù£∫‘ˆº”æ≠—Èµƒµ»º∂$/;"	m	struct:reqAdjustCityBonfireExpCmd
level	tmpcode/commond.h	/^	DWORD   level;      \/\/ …˙ŒÔµƒµ»º∂  $/;"	m	struct:st_CharShow2
level	tmpcode/commond.h	/^	DWORD level;$/;"	m	struct:stModifyHomeDataUserCmd
level	tmpcode/commond.h	/^	DWORD level;$/;"	m	struct:stReturnFarmIntroduce
level	tmpcode/commond.h	/^	DWORD level;$/;"	m	struct:stSetCityDareThirdLevel
level	tmpcode/commond.h	/^	WORD    level;                  \/\/Ω”»ŒŒÒ ±»ÀŒÔµƒµ»º∂$/;"	m	struct:stGetPackBusiness
level	tmpcode/commond.h	/^	WORD  level;					\/\/\/ Ω«…´µ»º∂$/;"	m	struct:t_MainUserData
level	tmpcode/commond.h	/^	WORD  level;                                            \/\/ ≥…‘±µ»º∂$/;"	m	struct:stSeptRember
level	tmpcode/commond.h	/^	WORD  level;                            \/\/  πÿœµº∂±$/;"	m	struct:stRelation
level	tmpcode/commond.h	/^	WORD level;					\/\/ ≥…‘±µ»º∂$/;"	m	struct:stBroadcastMemberInfo
level	tmpcode/commond.h	/^	WORD level;                                             \/\/\/ Ω«…´µ»º∂$/;"	m	struct:SelectUserInfo
level	tmpcode/commond.h	/^	WORD level;                             \/\/π÷ŒÔµ»º∂$/;"	m	struct:stReqTeamInfoListUserCmd
level	tmpcode/commond.h	/^	WORD level;                             \/\/π÷ŒÔµ»º∂$/;"	m	struct:teamRecruitInfo
level	tmpcode/commond.h	/^	WORD level;                          \/\/ ≥…‘±µ»º∂$/;"	m	struct:stBroadcastSeptMemberInfo
level	tmpcode/commond.h	/^	WORD level;     \/\/¡Ï»°µƒΩ±¿¯º∂±$/;"	m	struct:stReqEquipAwardUserCmd
level	tmpcode/commond.h	/^	WORD level;     \/\/ƒ¨»œΩ«…´µ±«∞º∂±$/;"	m	struct:stReqGetEquipAwardInfoUserCmd
level	tmpcode/commond.h	/^	WORD level;$/;"	m	struct:LingQiData
level	tmpcode/commond.h	/^	WORD level;$/;"	m	struct:LingQiSimulate
level	tmpcode/commond.h	/^	WORD level;$/;"	m	struct:UserInfoBySameIP
level	tmpcode/commond.h	/^	WORD level;$/;"	m	struct:stAllUserList
level	tmpcode/commond.h	/^	WORD level;$/;"	m	struct:stDrawLevelUpBoxAwardUserCmd
level	tmpcode/commond.h	/^	WORD level;$/;"	m	struct:stFreshTeamMemberUserCmd
level	tmpcode/commond.h	/^	WORD level;$/;"	m	struct:stReqAddTeamUserCmd
level	tmpcode/commond.h	/^	WORD level;$/;"	m	struct:stRequestSignMaxLevelUserCmd
level	tmpcode/commond.h	/^	WORD level;$/;"	m	struct:stSendOneLevelEquipAwardInfoUserCmd
level	tmpcode/commond.h	/^	int level;		\/\/¥Û”⁄0µƒµ»º∂±Ì æ’˝≥£µƒ÷˜œﬂ÷ßœﬂ»ŒŒÒµ»º∂£¨0±Ì æ√ø»’»ŒŒÒ£¨-1±Ì æΩ” ‹µƒ¥˙◊ˆ»ŒŒÒ$/;"	m	struct:stQuestInfoUserCmd
level	tmpcode/commond.h	/^                WORD    level;                                          \/\/µ»º∂  $/;"	m	struct:t_GetSortList::__anon241
level	tmpcode/commond.h	/^        BYTE    level;                           \/\/¥Ú‘Ï ±◊∞µƒº∂±$/;"	m	struct:stFoundFashionSkillStore
level	tmpcode/commond.h	/^        WORD level;$/;"	m	struct:OneQuestInfo
level	tmpcode/commond.h	/^        WORD level;$/;"	m	struct:stCheckValidQuestUserCmd
level	tmpcode/commond.h	/^    BYTE level;			\/\/µ±«∞µ»º∂$/;"	m	struct:__anon355
level	tmpcode/commond.h	/^    DWORD level;$/;"	m	struct:AchievementItem
level	tmpcode/commond.h	/^    WORD  level;   \/\/µ»º∂      $/;"	m	struct:stLevelUpLingQiUserCmd
level	tmpcode/commond.h	/^    WORD level;$/;"	m	struct:LingQiWatchData
levelExp	ScenesServer/SceneNpc.cpp	/^DWORD SceneNpc::levelExp(DWORD wdExp,DWORD char_level)$/;"	f	class:SceneNpc
levelMark	tmpcode/commond.h	/^	WORD levelMark;		\/\/µ»º∂±Í ∂$/;"	m	struct:stObserveQuestRoomUserCmd
levelMark	tmpcode/commond.h	/^	WORD levelMark;	\/\/∂‘”¶∏±±æµ»º∂±Í ∂$/;"	m	struct:RoomInfo
levelMark	tmpcode/commond.h	/^	WORD levelMark;$/;"	m	struct:stChangeMemQuestRoomUserCmd
levelMark	tmpcode/commond.h	/^    WORD levelMark;                 \/\/µ»º∂±Í ∂$/;"	m	struct:stCreateQuestRoomUserCmd
levelMark	tmpcode/commond.h	/^    WORD levelMark;         \/\/µ»º∂±Í ∂$/;"	m	struct:reqEnterQuestRoomHailUserCmd
levelMark	tmpcode/commond.h	/^    WORD levelMark;$/;"	m	struct:stJoinQuicklyQuestRoomUserCmd
levelMark	tmpcode/commond.h	/^    WORD levelMark;$/;"	m	struct:stNewMasterQuestRoomUserCmd
levelMark	tmpcode/commond.h	/^    WORD levelMark;$/;"	m	struct:stOneRoomAllInfoQuestRoomUserCmd
levelMark	tmpcode/commond.h	/^    WORD levelMark;$/;"	m	struct:stRoomInfoQuestRoomUserCmd
levelMark	tmpcode/commond.h	/^    WORD levelMark;$/;"	m	struct:stRoomMemDetailQuestRoomUserCmd
levelName	tmpcode/commond.h	/^	BYTE levelName;\/\/µ»º∂√˚≥∆   (◊™≥…◊÷∑˚)    $/;"	m	struct:Score_Exp
levelNum	tmpcode/commond.h	/^	BYTE levelNum; \/\/µ»º∂∏ˆ ˝$/;"	m	struct:stPictureEffectMapUserCmd
levelUpTime	tmpcode/commond.h	/^	DWORD levelUpTime;					\/\/…˝µΩœ¬º∂µƒ ±º‰$/;"	m	struct:DecayHouseBaseData
level_max	tmpcode/commond.h	/^        WORD level_max;                 \/\/≤È—Øµ»º∂◊Ó¥Û÷µ$/;"	m	struct:stQueryAuction
level_min	tmpcode/commond.h	/^        WORD level_min;                 \/\/≤È—Øµ»º∂◊Ó–°÷µ$/;"	m	struct:stQueryAuction
levelsept	base/CharBase.h	/^  DWORD levelsept;      \/\/\/ Á¶ªÂºÄÂÆ∂ÊóèÁöÑÊó∂Èó¥$/;"	m	struct:CharBase
levelupTime	tmpcode/commond.h	/^	time_t levelupTime;     \/\/\/ ¥”…œ“ªº∂…˝º∂µΩ’‚“ªº∂”√ ±$/;"	m	struct:stRetCourseOfKingCmd
levinappend	ScenesServer/ScenePk.h	/^      SWORD levinappend; \/\/ Èõ∑ÁîµÁ≥ªÊ≥ïÊúØ‰º§ÂÆ≥ÊèêÂçáÊØî‰æãÂçÉÂàÜ‰πãÂá†$/;"	m	struct:SkillState::__anon155::__anon156
levinflag	ScenesServer/SceneEntryPk.h	/^    bool levinflag;  \/\/\/Èõ∑ÁîµÁ≥ªÊ≥ïÊúØÂä†ÊàêÊ†áÂøó$/;"	m	struct:SceneEntryPk
lexical_cast	base/zMisc.h	/^      static T lexical_cast(const U& u)    \/\/do not use char*$/;"	f	class:zMisc
life	tmpcode/commond.h	/^    DWORD life; \/\/…˙¥Ê÷∏ ˝$/;"	m	struct:kingAchievement
lifeTime	FLServer/LoginTask.h	/^	zTime lifeTime;$/;"	m	class:LoginTask
lifeTime	base/zTCPClientTask.h	/^	zTime lifeTime;                  \/**< …˙√¸∆⁄£¨º«¬º√ø¥Œ◊¥Ã¨∏ƒ±‰µƒ ±º‰ *\/$/;"	m	class:zTCPClientTask
lifeTime	base/zTCPTask.h	/^	zRTime lifeTime;                \/**< ¡¨Ω”¥¥Ω® ±º‰º«¬º *\/$/;"	m	class:zTCPTask
lifeTime	tmpcode/commond.h	/^    DWORD lifeTime; \/\/¥ÊªÓ ±º‰      $/;"	m	struct:FlowerDef
lightPower	tmpcode/commond.h	/^			WORD lightPower;                \/\/ π‚…Ò÷Æ¡¶$/;"	m	struct:t_MainUserData::__anon220::__anon221
limit	base/xmlparser/battle.h	/^    xml_node<Limit>	limit;$/;"	m	struct:BattleConfig
limitMaterial	tmpcode/commond.h	/^	DWORD limitMaterial;            \/\/ √øº∂º“◊ÂµƒŒÔ◊ …œœﬁ$/;"	m	struct:stSeptBaseInfoCmd
limitOverTime	tmpcode/commond.h	/^    DWORD limitOverTime;    \/\/œﬁ÷∆Ω· ¯ ±º‰$/;"	m	struct:t_HorseData
lindddddd	base/Command.h	/^  DWORD lindddddd;$/;"	m	struct:Cmd::t_UserData
lineNum	tmpcode/commond.h	/^    BYTE lineNum;\/\/∑≈µ⁄º∏¡–$/;"	m	struct:stMoveGoodsToGuardSeptCmd
lineNum	tmpcode/commond.h	/^    BYTE lineNum;\/\/¡– ˝$/;"	m	struct:rtGuardGoodsSeptCmd
lingQiColor	tmpcode/commond.h	/^	BYTE lingQiColor;  \/\/¡È∆˜—’…´$/;"	m	struct:t_UserData
lingQiData	tmpcode/commond.h	/^    LingQiWatchData lingQiData;       \/\/\/ ¡È∆˜◊ ¡œ$/;"	m	struct:stReturnQuestionLingQi
lingQiModel	tmpcode/commond.h	/^	DWORD lingQiModel;		\/\/◊Ó∏ﬂŒª±Ì æ¡È∆˜ «∑Ò±‰“Ïπ˝(1±‰“Ïπ˝,0√ª”–±‰“Ïπ˝),∆‰”‡Œª±Ì æ¡È∆˜modelid$/;"	m	struct:st_CharShow2
lingQiModel	tmpcode/commond.h	/^	DWORD lingQiModel;  \/\/¡È∆˜ƒ£–ÕID$/;"	m	struct:t_UserData
lingQiName	tmpcode/commond.h	/^	char lingQiName[MAX_NAMESIZE]; \/\/¡È∆˜√˚$/;"	m	struct:stChangeNameLingQiUserCmd
lingQiNo	tmpcode/commond.h	/^    WORD  lingQiNo;\/\/¡È∆˜±‡∫≈ $/;"	m	struct:stSendCanLearnFakeSkillLingQiUserCmd
lingQiNo	tmpcode/commond.h	/^    WORD  lingQiNo;\/\/¡È∆˜±‡∫≈$/;"	m	struct:stLevelUpLingQiUserCmd
lingQiNo	tmpcode/commond.h	/^    WORD lingQiNo;  \/\/¡È∆˜±‡∫≈$/;"	m	struct:stSendAllLingQiSkillsUserCmd
lingQiSkills	tmpcode/commond.h	/^    struct lingQiSkills$/;"	s	struct:stDataDecayedLingQiUserCmd
lingQiSkills	tmpcode/commond.h	/^    struct lingQiSkills$/;"	s	struct:stSendAllLingQiSkillsUserCmd
lingQiSkillsCanLearn	tmpcode/commond.h	/^    struct lingQiSkillsCanLearn$/;"	s	struct:stSendCanLearnFakeSkillLingQiUserCmd
lingQiSkillsMerge	tmpcode/commond.h	/^	struct lingQiSkillsMerge{$/;"	s	struct:stMergeLingQiUserCmd
lingQiSkillsWatch	tmpcode/commond.h	/^    lingQiSkillsWatch()$/;"	f	struct:lingQiSkillsWatch
lingQiSkillsWatch	tmpcode/commond.h	/^struct lingQiSkillsWatch$/;"	s
lingQiTempID	tmpcode/commond.h	/^    DWORD lingQiTempID;$/;"	m	struct:stNotifyCatchLingQiBeginUserCmd
lingQiTempID	tmpcode/commond.h	/^    DWORD lingQiTempID;$/;"	m	struct:stReqCatchLingQiBeginUserCmd
lingQiTempID	tmpcode/commond.h	/^    DWORD lingQiTempID;$/;"	m	struct:stRetCatchLingQiEndUserCmd
lingli	tmpcode/commond.h	/^	DWORD lingli;\/\/¡È¡¶$/;"	m	struct:LingQiData
lingli	tmpcode/commond.h	/^	DWORD lingli;\/\/◊∞±∏≤˙…˙µƒ¡È¡¶÷µ$/;"	m	struct:stNotifyEquipLingliLingQiUserCmd
lingli	tmpcode/commond.h	/^    DWORD lingli;\/\/ £”‡¡È¡¶÷µ$/;"	m	struct:stSetLingliLingQiUserCmd
lingliScale	tmpcode/commond.h	/^	WORD lingliScale;$/;"	m	struct:stAutoHpMpLingQiUserCmd
lingliValue	tmpcode/commond.h	/^	DWORD lingliValue;\/\/¡È¡¶÷µ$/;"	m	struct:stNotifyLingliLingQiUserCmd
lingqiPK	base/zDatabase.h	/^    DWORD lingqiPK;$/;"	m	struct:zNpcB
lingqicolor	tmpcode/commond.h	/^	BYTE  lingqicolor;      \/\/ ¡È∆˜—’…´$/;"	m	struct:st_CharShow2
lingqiexp	base/zDatabase.h	/^    DWORD lingqiexp;$/;"	m	struct:zNpcB
lingqiindex	tmpcode/commond.h	/^		BYTE  lingqiindex;\/\/µ⁄º∏∏ˆ¡È∆˜$/;"	m	struct:CardMainData
lingshi_change	tmpcode/commond.h	/^        BYTE lingshi_change;  \/\/±Í ∂ «∑Ò «"¡È Ø∂“ªª"$/;"	m	struct:stBuyObjectNpcTradeUserCmd
link	tmpcode/commond.h	/^	char link[0];$/;"	m	struct:rtPictureHelpUserCmd
link	tmpcode/commond.h	/^    DWORD   link;   $/;"	m	struct:stReqAccelkKeyPropertyUserCmd
linkX	tmpcode/commond.h	/^	WORD linkX;$/;"	m	struct:rtPictureHelpUserCmd
linkY	tmpcode/commond.h	/^	WORD linkY;$/;"	m	struct:rtPictureHelpUserCmd
liquidState	ScenesServer/SceneEntryPk.h	/^    bool liquidState; \/\/\/Ê∂≤ÊÄÅÔºàÊó†ÈòªÊå°Ôºâ$/;"	m	struct:SceneEntryPk
list	GatewayServer/GatewayTask.h	/^	void list()$/;"	f	class:GateCmdCheck
list	base/Command.h	/^        }list[0];$/;"	m	struct:Cmd::stSortObjectPropertyUserCmd	typeref:struct:Cmd::stSortObjectPropertyUserCmd::__anon91
list	base/Command.h	/^    } list[0];$/;"	m	struct:Cmd::stFoundItemPropertyUserCmd	typeref:struct:Cmd::stFoundItemPropertyUserCmd::material
list	base/Command.h	/^    }list[0];$/;"	m	struct:Cmd::stAddMobileObjectListPropertyUserCmd	typeref:struct:Cmd::stAddMobileObjectListPropertyUserCmd::__anon98
list	base/Command.h	/^    }list[0];$/;"	m	struct:Cmd::stAddObjectListPropertyUserCmd	typeref:struct:Cmd::stAddObjectListPropertyUserCmd::__anon97
list	base/Command.h	/^  BYTE list;\/\/1:Êü•ÁúãÂàóË°® 2:Á´ûÊ†áÂàóË°® 3:ÊãçÂçñÂàóË°® 4:ÊâÄÊúâÂàóË°®$/;"	m	struct:Cmd::stAddListAuction
list	base/Command.h	/^  BYTE list;\/\/1:Êü•ÁúãÂàóË°® 2:Á´ûÊ†áÂàóË°® 3:ÊãçÂçñÂàóË°® 4:ÊâÄÊúâÂàóË°®$/;"	m	struct:Cmd::stRemoveListAuction
list	base/Command.h	/^  BYTE list;\/\/2:Á´ûÊ†áÂàóË°® 3:ÊãçÂçñÂàóË°® $/;"	m	struct:Cmd::stGetListAuction
list	base/Command.h	/^  ConsignHistoryType list[0];$/;"	m	struct:Cmd::stHistoryGoldStockUserCmd
list	base/Command.h	/^  ConsignHistoryType list[0];$/;"	m	struct:Cmd::stHistoryMoneyStockUserCmd
list	base/Command.h	/^  ConsignSelfHistoryType list[0];$/;"	m	struct:Cmd::stSelfHistoryGoldStockUserCmd
list	base/Command.h	/^  ConsignSelfHistoryType list[0];$/;"	m	struct:Cmd::stSelfHistoryMoneyStockUserCmd
list	base/Command.h	/^  FirstTen list[0];$/;"	m	struct:Cmd::stFirstFiveListStockUserCmd
list	base/Command.h	/^  StockList list;$/;"	m	struct:Cmd::stReturnPutListStockUserCmd
list	base/Command.h	/^  StockList list[0];$/;"	m	struct:Cmd::stConsignGoldListStockUserCmd
list	base/Command.h	/^  StockList list[0];$/;"	m	struct:Cmd::stConsignMoneyListStockUserCmd
list	base/Command.h	/^  } list[0];$/;"	m	struct:Cmd::stRtnSeptNameListCmd	typeref:struct:Cmd::stRtnSeptNameListCmd::__anon131
list	base/Command.h	/^  } list[0];$/;"	m	struct:Cmd::stRtnUnionNameListCmd	typeref:struct:Cmd::stRtnUnionNameListCmd::__anon109
list	base/Command.h	/^  }list[0];$/;"	m	struct:Cmd::stAddObjectSellListUserCmd	typeref:struct:Cmd::stAddObjectSellListUserCmd::__anon103
list	base/Command.h	/^  }list[0];$/;"	m	struct:Cmd::stRequestAddObjectSellUserCmd	typeref:struct:Cmd::stRequestAddObjectSellUserCmd::__anon104
list	base/Command.h	/^  }list[0];$/;"	m	struct:Cmd::stRtnCityOwnerListCmd	typeref:struct:Cmd::stRtnCityOwnerListCmd::__anon115
list	base/Command.h	/^  }list[0];$/;"	m	struct:Cmd::stRtnNpcOwnerListCmd	typeref:struct:Cmd::stRtnNpcOwnerListCmd::__anon116
list	base/HeroCardCmd.h	/^	}list[0];$/;"	m	struct:Cmd::stAddBattleCardListPropertyUserCmd	typeref:struct:Cmd::stAddBattleCardListPropertyUserCmd::__anon47
list	base/SessionCommand.h	/^      BYTE list;$/;"	m	struct:Cmd::Session::t_getListAuction_SceneSession
list	base/zMisc.h	/^	virtual void list(const char* desc =NULL)$/;"	f	class:zCmdCheck
list	tmpcode/commond.h	/^		DWORD list[6]; \/\/◊Í Øµƒid£¨ŒÔ∆∑Œ®“ªid$/;"	m	struct:stHolePropertyUserCmd
list	tmpcode/commond.h	/^		}list[0];$/;"	m	struct:stAddObjectListPropertyUserCmd	typeref:struct:stAddObjectListPropertyUserCmd::__anon229
list	tmpcode/commond.h	/^	AwardInfo list[0];$/;"	m	struct:stSendAllAchivementAwardInfoUserCmd
list	tmpcode/commond.h	/^	BossTraceItem list[0];$/;"	m	struct:stRetBossListUserCmd
list	tmpcode/commond.h	/^	CityGuard list[0];      \/\/\/  ÿŒ¿–≈œ¢$/;"	m	struct:stRetCityGuardInfo
list	tmpcode/commond.h	/^	CityGuard list[0];      \/\/\/  ÿŒ¿–≈œ¢$/;"	m	struct:stSetCityGuardCmd
list	tmpcode/commond.h	/^	CityMxRec list[0];$/;"	m	struct:stRetCityMinxinRecCmd
list	tmpcode/commond.h	/^	ConsignSelfHistoryType list[0];$/;"	m	struct:stSelfHistoryGoldStockUserCmd
list	tmpcode/commond.h	/^	ConsignSelfHistoryType list[0];$/;"	m	struct:stSelfHistoryMoneyStockUserCmd
list	tmpcode/commond.h	/^	DWORD list[0];\/\/¡Ÿ ±ID¡–±Ì$/;"	m	struct:stUserListTankCmd
list	tmpcode/commond.h	/^	EnemyOnOff list[0];$/;"	m	struct:stEnemyListCmd
list	tmpcode/commond.h	/^	EquipSimulate list[0];$/;"	m	struct:stEquipSimulatePropertyUserCmd
list	tmpcode/commond.h	/^	FirstTen list[0];$/;"	m	struct:stFirstFiveListStockUserCmd
list	tmpcode/commond.h	/^	FlowerSortData list[0];$/;"	m	struct:stReturnDayFlowerListUserCmd
list	tmpcode/commond.h	/^	FlowerSortData list[0];$/;"	m	struct:stReturnFlowerListUserCmd
list	tmpcode/commond.h	/^	LingQiAllData list[0];$/;"	m	struct:stListLingQiUserCmd
list	tmpcode/commond.h	/^	Merch list[0];$/;"	m	struct:stUnionMarketDownGood
list	tmpcode/commond.h	/^	NewBoxSendObj list[0];$/;"	m	struct:stSendObjNewBoxPropertyUserCmd
list	tmpcode/commond.h	/^	ResidentHireList list[0];$/;"	m	struct:stUnionResidentHireList
list	tmpcode/commond.h	/^	ResultData list[0];$/;"	m	struct:stSendResultNewBoxPropertyUserCmd
list	tmpcode/commond.h	/^	SeptGuardList list[0];$/;"	m	struct:stGetMemberListSeptGuardCmd
list	tmpcode/commond.h	/^	SeptNotice list[0];$/;"	m	struct:t_RetCountrySeptNotice
list	tmpcode/commond.h	/^	StockList list;$/;"	m	struct:stReturnPutListStockUserCmd
list	tmpcode/commond.h	/^	StockList list[0];$/;"	m	struct:stConsignGoldListStockUserCmd
list	tmpcode/commond.h	/^	StockList list[0];$/;"	m	struct:stConsignMoneyListStockUserCmd
list	tmpcode/commond.h	/^	UnionCityDareInfo list[0];$/;"	m	struct:stRetCityDareInfoUserCmd
list	tmpcode/commond.h	/^	UnionCityDareInfo list[3];$/;"	m	struct:stRetCityDareInfoUserCmd_buf
list	tmpcode/commond.h	/^	UnionCityDareItem list[0];$/;"	m	struct:stRetCityDareSortUserCmd
list	tmpcode/commond.h	/^	UnionMsgInfo list[0];$/;"	m	struct:RetMsgUnionInfoCmd
list	tmpcode/commond.h	/^	UnionNoticeInfo list[0];$/;"	m	struct:RetNoticeUnionInfoCmd
list	tmpcode/commond.h	/^	UserInfoBySameIP list[0];$/;"	m	struct:stForbidSameIpUserCmd
list	tmpcode/commond.h	/^	commodityList list[0];$/;"	m	struct:stRetUnionBusinessInfo
list	tmpcode/commond.h	/^	commodityList list[0];$/;"	m	struct:stRetUnionTechInfo
list	tmpcode/commond.h	/^	decoration list[0];$/;"	m	struct:stMapDecorationScreenUserCmd
list	tmpcode/commond.h	/^	lastPositionTime list[0];$/;"	m	struct:t_LastPositionTimeListSept
list	tmpcode/commond.h	/^	sellList list[0];       \/\/\/ œ˙ €º«¬º¡–±Ì$/;"	m	struct:stRetUnionSellRecond
list	tmpcode/commond.h	/^	sellList list[0];$/;"	m	struct:stRetUnionSellList
list	tmpcode/commond.h	/^	storageList list[0];$/;"	m	struct:stRetUnionStorageList
list	tmpcode/commond.h	/^	teamRecruitInfo list[0];$/;"	m	struct:stAddTeamRecruitInfoUserCmd
list	tmpcode/commond.h	/^	} list[0];$/;"	m	struct:stFoundItemPropertyUserCmd	typeref:struct:stFoundItemPropertyUserCmd::material
list	tmpcode/commond.h	/^	} list[0];$/;"	m	struct:stFoundSpecialItemPropertyUserCmd	typeref:struct:stFoundSpecialItemPropertyUserCmd::material
list	tmpcode/commond.h	/^	} list[0];$/;"	m	struct:stHouseFurnitureItemPropertyUserCmd	typeref:struct:stHouseFurnitureItemPropertyUserCmd::material
list	tmpcode/commond.h	/^	} list[0];$/;"	m	struct:stHouseRoomDeskItemPropertyUserCmd	typeref:struct:stHouseRoomDeskItemPropertyUserCmd::material
list	tmpcode/commond.h	/^	} list[0];$/;"	m	struct:stPositionNameListCmd	typeref:struct:stPositionNameListCmd::__anon263
list	tmpcode/commond.h	/^	} list[0];$/;"	m	struct:stRetAcceptedDailyQuestUserCmd	typeref:struct:stRetAcceptedDailyQuestUserCmd::acceptedQuests
list	tmpcode/commond.h	/^	} list[0];$/;"	m	struct:stRetDailyRandomQuestUserCmd	typeref:struct:stRetDailyRandomQuestUserCmd::quests
list	tmpcode/commond.h	/^	} list[0];$/;"	m	struct:stRetDangerAreaUserCmd	typeref:struct:stRetDangerAreaUserCmd::__anon253
list	tmpcode/commond.h	/^	} list[0];$/;"	m	struct:stStatueInfoUserCmd	typeref:struct:stStatueInfoUserCmd::__anon319
list	tmpcode/commond.h	/^	}list[0];	$/;"	m	struct:stRetRapidSelectQuestUserCmd	typeref:struct:stRetRapidSelectQuestUserCmd::acceptQuest
list	tmpcode/commond.h	/^	}list[0];$/;"	m	struct:stAddObjectSellListUserCmd	typeref:struct:stAddObjectSellListUserCmd::__anon280
list	tmpcode/commond.h	/^	}list[0];$/;"	m	struct:stRequestAddObjectSellUserCmd	typeref:struct:stRequestAddObjectSellUserCmd::tSellObject
list	tmpcode/commond.h	/^	}list[0];$/;"	m	struct:stRetCityReliveInfo	typeref:struct:stRetCityReliveInfo::reliveInfo
list	tmpcode/commond.h	/^	}list[0];$/;"	m	struct:stRetCreateSeptSignInfo	typeref:struct:stRetCreateSeptSignInfo::__anon304
list	tmpcode/commond.h	/^	}list[0];$/;"	m	struct:stRetSeptTeamChallengeUserCmd	typeref:struct:stRetSeptTeamChallengeUserCmd::acceptedQuests
list	tmpcode/commond.h	/^	}list[0];$/;"	m	struct:stSendSeptStoreDataCmd	typeref:struct:stSendSeptStoreDataCmd::__anon305
list	tmpcode/commond.h	/^	}list[0];$/;"	m	struct:stSurveyResultUserCmd	typeref:struct:stSurveyResultUserCmd::__anon315
list	tmpcode/commond.h	/^	}list[0];$/;"	m	struct:st_RetRoomerNameHouseUserCmd	typeref:struct:st_RetRoomerNameHouseUserCmd::roomerName
list	tmpcode/commond.h	/^	}list[4];$/;"	m	struct:stChangeUnionResourceType	typeref:struct:stChangeUnionResourceType::ResAssign
list	tmpcode/commond.h	/^	}list[4];$/;"	m	struct:stUnionResourceAssign	typeref:struct:stUnionResourceAssign::ResAssign
list	tmpcode/commond.h	/^        BYTE list;                      \/\/1:≤Èø¥¡–±Ì 2:æ∫±Í¡–±Ì 3:≈ƒ¬Ù¡–±Ì 4:À˘”–¡–±Ì$/;"	m	struct:stAddListAuction
list	tmpcode/commond.h	/^        BYTE list;\/\/1:≤Èø¥¡–±Ì 2:æ∫±Í¡–±Ì 3:≈ƒ¬Ù¡–±Ì 4:À˘”–¡–±Ì$/;"	m	struct:stRemoveListAuction
list	tmpcode/commond.h	/^        BYTE list;\/\/2:æ∫±Í¡–±Ì 3:≈ƒ¬Ù¡–±Ì $/;"	m	struct:stGetListAuction
list	tmpcode/commond.h	/^        BlessSortData list[0];$/;"	m	struct:rtBlessListUserCmd
list	tmpcode/commond.h	/^        DWORD list[6];  \/\/±¶ Øµƒid,ŒÔ∆∑Œ®“ªid$/;"	m	struct:stEnchasePropertyUserCmd
list	tmpcode/commond.h	/^        OfficialSend list[0];$/;"	m	struct:stRetOfficialUserCmd
list	tmpcode/commond.h	/^        } list[0];$/;"	m	struct:stAddHorseSoulEnergyUserCmd	typeref:struct:stAddHorseSoulEnergyUserCmd::material
list	tmpcode/commond.h	/^        } list[0];$/;"	m	struct:stFoundItemSkillStore	typeref:struct:stFoundItemSkillStore::material
list	tmpcode/commond.h	/^        }list[0];$/;"	m	struct:stSendFriendListUserCmd	typeref:struct:stSendFriendListUserCmd::__anon345
list	tmpcode/commond.h	/^        }list[0];$/;"	m	struct:stSortObjectPropertyUserCmd	typeref:struct:stSortObjectPropertyUserCmd::__anon344
list	tmpcode/commond.h	/^    BYTE list;      \/\/1À—À˜Ω·π˚2…œΩ…Ω·π˚$/;"	m	struct:stAddListPurchase
list	tmpcode/commond.h	/^    TempSortData list[0];$/;"	m	struct:rtTempListUserCmd
list	tmpcode/commond.h	/^    gather list[0];   \/\/πÕ”∂≤…ºØ¡–±Ì$/;"	m	struct:stStartEmployGatherCmd
list	tmpcode/commond.h	/^    } list[0];$/;"	m	struct:stHorseSoulItemPropertyUserCmd	typeref:struct:stHorseSoulItemPropertyUserCmd::material
list	tmpcode/commond.h	/^    } list[0];$/;"	m	struct:stRetDailyWarningQuestUserCmd	typeref:struct:stRetDailyWarningQuestUserCmd::quests
list	tmpcode/commond.h	/^    }list[2];$/;"	m	struct:stSendAllScoreCmd	typeref:struct:stSendAllScoreCmd::allSorce
list	tmpcode/commond.h	/^    }list[3];$/;"	m	struct:stFlagRelegationLuoRiCmd	typeref:struct:stFlagRelegationLuoRiCmd::flagRelegation
listAll	base/zDatabaseManager.h	/^	void listAll()$/;"	f	class:zDataBM
listDare	tmpcode/commond.h	/^	stDare listDare[0];$/;"	m	struct:stRetResidentDareCmd
listResident	tmpcode/commond.h	/^	stResidentData listResident[0];$/;"	m	struct:stRetResidentInfoCmd
listType	tmpcode/commond.h	/^	BYTE listType;   \/\/∫√”—¡–±Ì 1; º“◊Â≥…‘±¡–±Ì 2;$/;"	m	struct:stRequestFriendHomeUserCmd
list_iterator	ScenesServer/QuestMaker.h	/^  typedef typename LIST::iterator list_iterator;$/;"	t	class:ProductFactory
liveTime	tmpcode/commond.h	/^    DWORD liveTime;         \/\/ Ÿ√¸$/;"	m	struct:t_HorseData
livingRoomLevel	tmpcode/commond.h	/^	DWORD	livingRoomLevel;                \/\/øÕÃ¸µ»º∂$/;"	m	struct:HomeMapData
livingRoomLevel	tmpcode/commond.h	/^	DWORD livingRoomLevel;$/;"	m	struct:stModifyHomeDataUserCmd
lm_updamp	ScenesServer/ScenePk.h	/^      SWORD lm_updamp;   \/\/ È≤ÅËéΩÊèêÂçáÁâ©ÁêÜÊîªÂáªÂäõÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
lmoney	tmpcode/commond.h	/^    DWORD lmoney;\/\/ ÷ÿµ„∑¢≤º◊ Ω$/;"	m	struct:CityQuestInfo
load	ScenesServer/CounterManager.cpp	/^int CounterManager::load(unsigned char* src, unsigned int len)$/;"	f	class:CounterManager
load	ScenesServer/Quest.cpp	/^bool UserVar::load()$/;"	f	class:UserVar
load	ScenesServer/Quest.cpp	/^int Quest::load(SceneUser& user,BYTE* dest,unsigned long &dest_size)$/;"	f	class:Quest
load	ScenesServer/Quest.cpp	/^int QuestList::load(BYTE* dest,unsigned long &dest_size)$/;"	f	class:QuestList
load	ScenesServer/Quest.cpp	/^int UserVar::VAR::load(BYTE* dest)$/;"	f	class:UserVar::VAR
load	ScenesServer/Quest.cpp	/^int Vars::load(BYTE* dest)$/;"	f	class:Vars
load	ScenesServer/Quest.h	/^  bool load()$/;"	f	class:GlobalVarImpl
load	ScenesServer/Skill.cpp	/^zSkill *zSkill::load(SceneEntryPk *pEntry,const SaveSkill *s)$/;"	f	class:zSkill
load	ScenesServer/zCard.cpp	/^zCard *zCard::load(const SaveObject *o)$/;"	f	class:zCard
load	ScenesServer/zObject.cpp	/^int StorePack::load(BYTE* dest)$/;"	f	class:StorePack
load	ScenesServer/zObject.cpp	/^zObject *zObject::load(const SaveObject *o)$/;"	f	class:zObject
load	base/xml/xml_config.h	/^		bool load()$/;"	f	class:xml_config
load	base/xml/xml_config.h	/^		bool load(const std::string& filename)$/;"	f	class:xml_config
loadBattleScene	ScenesServer/SceneManager.cpp	/^Scene * SceneManager::loadBattleScene(DWORD baseid)$/;"	f	class:SceneManager
loadCardGroupData	ScenesServer/GroupCardManager.cpp	/^unsigned int GroupCardData::loadCardGroupData(unsigned char* src)$/;"	f	class:GroupCardData
loadCardTujianData	ScenesServer/CardTujianManager.cpp	/^unsigned int CardTujianData::loadCardTujianData(unsigned char* src)$/;"	f	class:CardTujianData
loadChallengeData	ScenesServer/ChallengeGameManager.cpp	/^unsigned int ChallengeTmpData::loadChallengeData(unsigned char* src)$/;"	f	class:ChallengeTmpData
loadFromDatabase	SessionServer/CRelationManager.cpp	/^void CRelationManager::loadFromDatabase()$/;"	f	class:CRelationManager
loadHeroData	ScenesServer/HeroInfoManager.cpp	/^unsigned int AllHeroData::loadHeroData(unsigned char* dest)$/;"	f	class:AllHeroData
loadMapFile	ScenesServer/Scene.cpp	/^bool Scene::loadMapFile()$/;"	f	class:Scene
loadNpcCommonChatTable	ScenesServer/SceneNpcManager.cpp	/^bool SceneNpcManager::loadNpcCommonChatTable()$/;"	f	class:SceneNpcManager
loadPetState	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::loadPetState(BYTE * data,int size)$/;"	f	class:SceneUser
loadQuest	ScenesServer/Chat.cpp	/^bool Gm::loadQuest(SceneUser *pUser, const char *para)$/;"	f	class:Gm
loadScene	ScenesServer/SceneManager.cpp	/^Scene * SceneManager::loadScene(int type\/*Scene::SceneType type*\/,DWORD countryid,DWORD mapid)$/;"	f	class:SceneManager
loadScript	ScenesServer/SceneNpcAI.cpp	/^bool NpcAIController::loadScript(DWORD id)$/;"	f	class:NpcAIController
loadSysSetting	ScenesServer/SceneUser.cpp	/^int SceneUser::loadSysSetting( BYTE * buf)$/;"	f	class:SceneUser
loadTempPetState	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::loadTempPetState(BYTE * data)$/;"	f	class:SceneUser
loadWeight	tmpcode/commond.h	/^	WORD    loadWeight;             \/\/‘ÿ÷ÿ¡ø$/;"	m	struct:TankData
load_timer	ScenesServer/Quest.cpp	/^int Vars::load_timer(BYTE* dest)$/;"	f	class:Vars
loadxml	ScenesServer/Chat.cpp	/^bool Gm::loadxml(SceneUser *pUser, const char *para)$/;"	f	class:Gm
loc	base/Object.h	/^	DWORD loc() const$/;"	f	struct:stObjectLocation
local_addr	base/zSocket.h	/^	struct sockaddr_in local_addr;        \/**< Ã◊Ω”ø⁄µÿ÷∑ *\/$/;"	m	class:zSocket	typeref:struct:zSocket::sockaddr_in
location	base/Command.h	/^    BYTE location; \/\/‰ΩçÁΩÆÔºå0 Â∑¶Êâã 1 Âè≥Êâã$/;"	m	struct:Cmd::stComposeItemPropertyUserCmd
location	base/Command.h	/^    BYTE location; \/\/‰ΩçÁΩÆÔºå0 Â∑¶Êâã 1 Âè≥Êâã$/;"	m	struct:Cmd::stUpgradeItemPropertyUserCmd
location	base/Command.h	/^  BYTE location; \/\/‰ΩçÁΩÆÔºå0 Â∑¶Êâã 1 Âè≥Êâã$/;"	m	struct:Cmd::stComposeSoulStonePropertyUserCmd
location	base/Command.h	/^  BYTE location; \/\/‰ΩçÁΩÆÔºå0 Â∑¶Êâã 1 Âè≥Êâã$/;"	m	struct:Cmd::stEnchasePropertyUserCmd
location	tmpcode/commond.h	/^    BYTE location; \/\/Œª÷√£¨0 ◊Û ÷ 1 ”“ ÷$/;"	m	struct:stComposeItemPropertyUserCmd
lock	base/zMutex.h	/^	inline void lock()$/;"	f	class:zMutex
lock	base/zUser.h	/^	void lock()$/;"	f	struct:zUser
lockOpenTimes	tmpcode/commond.h	/^	WORD lockOpenTimes;		\/\/–Ë“™∂‡…Ÿ¥Œ≤≈ƒ‹º§ªÓ––À¯∂®$/;"	m	struct:NewBoxSendObj
lockTarget	ScenesServer/SceneNpc.h	/^  bool lockTarget;$/;"	m	class:SceneNpc
lockedUserTime	ScenesServer/SceneNpc.h	/^  zRTime lockedUserTime;$/;"	m	class:SceneNpc
lockuser	tmpcode/commond.h	/^	DWORD lockuser;$/;"	m	struct:stSendForceLockUserMagicUserCmd
log	tmpcode/commond.h	/^	HouseLog log[0];$/;"	m	struct:st_StoreLogHouseUserCmd
logger	BillServer/BillUser.cpp	/^void BillUser::logger(const char *coin_type,DWORD acc,const char *act,DWORD cur,DWORD change,DWORD type,const char *action)$/;"	f	class:BillUser
logger	ScenesServer/zCard.cpp	/^void zCard::logger(QWORD createid,DWORD objid,char *objname,DWORD num,DWORD change,DWORD type,DWORD srcid,char *srcname,DWORD dstid,char *dstname,const char *action,zCardB *base,BYTE kind, DWORD gameID)$/;"	f	class:zCard
logger	ScenesServer/zObject.cpp	/^void zObject::logger(QWORD createid,DWORD objid,char *objname,DWORD num,DWORD change,DWORD type,DWORD srcid,char *srcname,DWORD dstid,char *dstname,const char *action,zObjectB *base,BYTE kind,BYTE upgrade)$/;"	f	class:zObject
logger	base/zLogger.h	/^	log4cxx::LoggerPtr logger;$/;"	m	class:zLogger
login	BillServer/BillManager.cpp	/^bool BillManager::login(const DWORD accid,const DWORD loginTempID)$/;"	f	class:BillManager
login	BillServer/BillUser.cpp	/^bool BillUser::login(const DWORD loginTempID)$/;"	f	class:BillUser
login	base/Command.h	/^  bool  login;$/;"	m	struct:Cmd::stRequestStateStockUserCmd
login	tmpcode/commond.h	/^	bool  login;$/;"	m	struct:stRequestStateStockUserCmd
loginClient	Robot/ClientService.h	/^    LoginClient *loginClient;$/;"	m	class:ClientService
loginGatewayServer	Robot/Client.cpp	/^bool Client::loginGatewayServer()$/;"	f	class:Client
loginLoginServer	Robot/LoginClient.cpp	/^loginLoginServer_retVal LoginClient::loginLoginServer(const char *name, const char *passwd)$/;"	f	class:LoginClient
loginLoginServer_retVal	base/Command.h	/^enum loginLoginServer_retVal$/;"	g
loginReturn	FLServer/LoginManager.cpp	/^void LoginManager::loginReturn(const DWORD loginTempID,const BYTE retcode,const bool tm)$/;"	f	class:LoginManager
loginTaskPool	FLServer/FLServer.h	/^	zTCPTaskPool *loginTaskPool;$/;"	m	class:FLService
loginTaskSet	FLServer/LoginManager.h	/^	LoginTaskHashmap loginTaskSet;$/;"	m	class:LoginManager
loginTempID	BillServer/BillManager.h	/^  DWORD loginTempID;        \/**< ÁôªÈôÜ‰∏¥Êó∂ÁºñÂè∑ *\/$/;"	m	struct:BillInfo
loginTempID	GatewayServer/GatewayTask.h	/^	DWORD loginTempID;$/;"	m	class:GatewayTask
loginTempID	Robot/Client.h	/^    DWORD loginTempID;$/;"	m	struct:ClientBase
loginTempID	Robot/LoginClient.h	/^    DWORD loginTempID;$/;"	m	class:LoginClient
loginTempID	base/BillCommand.h	/^      DWORD loginTempID;$/;"	m	struct:Cmd::Bill::t_LoginVerify_Gateway
loginTempID	base/BillCommand.h	/^      DWORD loginTempID;$/;"	m	struct:Cmd::Bill::t_LoginVerify_Gateway_Return
loginTempID	base/BillCommand.h	/^      DWORD loginTempID;$/;"	m	struct:Cmd::Bill::t_Logout_Gateway
loginTempID	base/Command.h	/^  DWORD loginTempID;$/;"	m	struct:Cmd::stPasswdLogonUserCmd
loginTempID	base/Command.h	/^  DWORD loginTempID;$/;"	m	struct:Cmd::stServerReturnLoginSuccessCmd
loginTempID	base/FLCommand.h	/^      DWORD loginTempID;$/;"	m	struct:Cmd::FL::t_idinuse_Session
loginTempID	base/SuperCommand.h	/^      DWORD loginTempID;$/;"	m	struct:Cmd::Super::t_idinuse_Bill
loginTempID	base/zType.h	/^  DWORD loginTempID;$/;"	m	struct:t_NewLoginSession
loginTempID	tmpcode/commond.h	/^	DWORD loginTempID;$/;"	m	struct:stPasswdLogonUserCmd
loginTempID	tmpcode/commond.h	/^	DWORD loginTempID;$/;"	m	struct:stServerReturnLoginSuccessCmd
loginTime	ScenesServer/SceneUser.h	/^    const zRTime loginTime;$/;"	m	struct:SceneUser
loginTimeOut	BillServer/BillUser.cpp	/^DWORD BillUser::loginTimeOut(zTime current) $/;"	f	class:BillUser
login_port	FLServer/FLServer.h	/^	WORD login_port;$/;"	m	class:FLService
loginmsgParse	ScenesServer/SceneTask.cpp	/^bool SceneTask::loginmsgParse(const Cmd::t_NullCmd *pNullCmd,DWORD cmdLen)$/;"	f	class:SceneTask
logonRole	Robot/Client.cpp	/^bool Client::logonRole(const WORD &i)$/;"	f	class:Client
logout	BillServer/BillManager.cpp	/^bool BillManager::logout(const DWORD accid,const DWORD loginTempID)$/;"	f	class:BillManager
logout	BillServer/BillUser.cpp	/^bool BillUser::logout(const DWORD loginTempID)$/;"	f	class:BillUser
logout	GatewayServer/GateUser.h	/^	bool logout;$/;"	m	class:GateUser
logsize	tmpcode/commond.h	/^	BYTE logsize;   \/\/»’÷æ ˝¡ø$/;"	m	struct:st_StoreLogHouseUserCmd
longGongFlag	tmpcode/commond.h	/^	BYTE longGongFlag;$/;"	m	struct:HappyCardBoxAutoCfg
loseNum	tmpcode/commond.h	/^    DWORD loseNum; \/\/ ß∞‹¥Œ ˝$/;"	m	struct:stJieZhanState
loserDefend	tmpcode/commond.h	/^	DWORD loserDefend; \/\/ ‰∑Ω¡˙∑¿æﬂ$/;"	m	struct:stDetailFightContentUserCmd
loserJewelry	tmpcode/commond.h	/^	DWORD loserJewelry; \/\/ ‰∑Ω¡˙ ◊ Œ$/;"	m	struct:stDetailFightContentUserCmd
loserModel	tmpcode/commond.h	/^	DWORD loserModel;    \/\/ ‰∑Ω¡˙ƒ£–Õ$/;"	m	struct:stDetailFightContentUserCmd
loserWeapon	tmpcode/commond.h	/^	DWORD loserWeapon; \/\/ ‰∑Ω¡˙Œ‰∆˜$/;"	m	struct:stDetailFightContentUserCmd
lost	base/zDatabase.h	/^    void lost(NpcLostObject &nlo,int value,int value1,int value2,int vcharm,int vlucky,int player_level,int DropRate,int DropRateLevel)$/;"	f	struct:NpcCarryObject
lostAll	base/zDatabase.h	/^    void lostAll(NpcLostObject &nlo)$/;"	f	struct:NpcCarryObject
lostObject	ScenesServer/SceneNpc.h	/^  bool lostObject;$/;"	m	class:SceneNpc
lostObject	ScenesServer/SceneUser.cpp	/^void SceneUser::lostObject(SceneUser *pAtt)$/;"	f	class:SceneUser
loverName	tmpcode/commond.h	/^	char loverName[MAX_NAMESIZE+1];			\/\/∞Æ»À√˚◊÷$/;"	m	struct:stSendLoverRelationCmd
lowLevel	ScenesServer/NpcTrade.h	/^      WORD  lowLevel;        \/\/\/ÊúÄ‰ΩéÁ≠âÁ∫ß$/;"	m	struct:NpcTrade::NpcItem
lpstrIP	Robot/LoginClient.h	/^    BYTE lpstrIP[MAX_IP_LENGTH];$/;"	m	class:LoginClient
lt_client	BillServer/BillClientManager.h	/^    struct lt_client$/;"	s	class:BillClientManager
lt_client	SuperServer/BroadClientManager.h	/^    struct lt_client$/;"	s	class:BroadClientManager
lt_client	SuperServer/InfoClientManager.h	/^    struct lt_client$/;"	s	class:InfoClientManager
lt_client	SuperServer/RolechangeClientManager.h	/^    struct lt_client$/;"	s	class:RolechangeClientManager
lt_client	SuperServer/RoleregClientManager.h	/^    struct lt_client$/;"	s	class:RoleregClientManager
ltime	tmpcode/commond.h	/^        BYTE ltime;  \/\/µ±_byType=0, 38, ªÚ45 ±”––ß$/;"	m	struct:stConfirmIssuedQuestUserCmd
ltqID	tmpcode/commond.h	/^	DWORD ltqID;\/\/»∫ID$/;"	m	struct:stChangeColorLTQUserCmd
ltqID	tmpcode/commond.h	/^	DWORD ltqID;\/\/»∫ID$/;"	m	struct:stChangeFaceLTQUserCmd
ltqword	SessionServer/CSort.h	/^    struct ltqword$/;"	s	class:CSortM
lucky	base/Command.h	/^  WORD	lucky;$/;"	m	struct:Cmd::t_MainUserData
lucky	tmpcode/commond.h	/^	WORD  lucky;					\/\/\/ –“‘À÷µ$/;"	m	struct:t_MainUserData
luckyCoin	base/xmlparser/battle.h	/^        xml_prop<DWORD>	luckyCoin;$/;"	m	struct:BattleConfig::Limit
luckyStarTypeName	tmpcode/commond.h	/^	char luckyStarTypeName[MAX_NAMESIZE];                   \/\/ –“‘À–«¿‡–Õµƒ√˚≥∆$/;"	m	struct:stSeptRember
lull	ScenesServer/zObject.h	/^  WORD lull; \/\/È∫ªÁóπÂ¢ûÂä†$/;"	m	class:Equips
lull	base/Object.h	/^	WORD lull; \/\/¬È±‘‘ˆº”$/;"	m	struct:t_Object
lullRes	base/Command.h	/^  WORD lullRes;    \/\/ÊäóÈ∫ªÁóπ$/;"	m	struct:Cmd::t_HorseData
lulldef	ScenesServer/zObject.h	/^  WORD lulldef; \/\/ÊäóÈ∫ªÁóπÂ¢ûÂä†$/;"	m	class:Equips
lulldef	base/Object.h	/^	WORD lulldef; \/\/øπ¬È±‘‘ˆº”$/;"	m	struct:t_Object
luoRiJunDui	tmpcode/commond.h	/^	BYTE  luoRiJunDui;$/;"	m	struct:st_CharShow2
luoRiJunDui	tmpcode/commond.h	/^	BYTE luoRiJunDui;$/;"	m	struct:t_UserData
luorifff	base/Command.h	/^  BYTE luorifff;$/;"	m	struct:Cmd::t_UserData
lupdam	ScenesServer/ScenePk.h	/^      SWORD lupdam;    \/\/ÈïøÊïàÁâ©ÁêÜÊîªÂáªÂäõÂ¢ûÂº∫Âõ∫ÂÆöÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
lure	ScenesServer/zObject.h	/^  WORD lure; \/\/ËØ±ÊÉëÂ¢ûÂä†$/;"	m	class:Equips
lure	base/Object.h	/^	WORD lure; \/\/–ﬁ∏ƒŒ™◊®”√µƒ±Í÷æŒª,∞¥Œª»°÷µ; µ⁄“ªŒª”√”⁄±Íº« «∑Ò «¥”…Ã≥«π∫¬ÚµƒŒÔ∆∑,µ»µ», œÍœ∏∂®“Âº˚…œ, »ÁOBJECT_LURE_BUYFROMMARKET$/;"	m	struct:t_Object
luredef	ScenesServer/zObject.h	/^  WORD luredef; \/\/ÊäóËØ±ÊÉëÂ¢ûÂä†$/;"	m	class:Equips
luredef	base/Object.h	/^	WORD luredef; \/\/øπ”’ªÛ‘ˆº”$/;"	m	struct:t_Object
lv	base/Command.h	/^	BYTE lv;                \/\/Á≠âÁ∫ß$/;"	m	struct:Cmd::t_PetData
lv	base/Command.h	/^  BYTE lv;      \/\/Á≠âÁ∫ß$/;"	m	struct:Cmd::t_CartoonData
lv	base/Command.h	/^  DWORD lv;    \/\/Á≠âÁ∫ß$/;"	m	struct:Cmd::t_HorseData
lv	tmpcode/commond.h	/^	BYTE lv;                \/\/µ»º∂$/;"	m	struct:t_PetData
lv	tmpcode/commond.h	/^    WORD lv;                \/\/µ»º∂$/;"	m	struct:t_HorseData
mAllPointPer	base/Object.h	/^	BYTE mAllPointPer;\/\/»´ Ù–‘∞Ÿ∑÷±»$/;"	m	struct:t_Object
mElec	base/Object.h	/^	WORD mElec; 		\/\/ ¿◊‘™Àÿ…À∫¶Œ¸ ’$/;"	m	struct:t_Object
mFire	base/Object.h	/^	WORD mFire;			\/\/ ª‘™Àÿ…À∫¶Œ¸ ’$/;"	m	struct:t_Object
mGroup	base/Command.h	/^  BYTE mGroup;$/;"	m	struct:Cmd::stGameAccelKey
mGroup	tmpcode/commond.h	/^	BYTE mGroup;$/;"	m	struct:stGameAccelKey
mIce	base/Object.h	/^	WORD mIce;			\/\/ ±˘‘™Àÿ…À∫¶Œ¸ ’$/;"	m	struct:t_Object
mSocket	base/zTCPTask.h	/^	zSocket mSocket;                \/**< µ◊≤„Ã◊Ω”ø⁄ *\/$/;"	m	class:zTCPTask
mState	tmpcode/commond.h	/^        BYTE		mState;				\/\/ 0±Ì æŒ¥º”√À£¨1∫œ‘º¥¶”⁄º§ªÓ◊¥Ã¨£¨2∫œ‘º¥¶”⁄÷–∂œ◊¥Ã¨$/;"	m	struct:stShopMeetInfo
mThunder	base/Object.h	/^	WORD mThunder;		\/\/ ¿◊‘™Àÿ…À∫¶Œ¸ ’$/;"	m	struct:t_Object
mWind	base/Object.h	/^	WORD mWind;			\/\/ ¿◊‘™Àÿ…À∫¶Œ¸ ’$/;"	m	struct:t_Object
m_bBatch	tmpcode/commond.h	/^	BYTE m_bBatch;					   \/\/ µ±«∞Œ™µ⁄º∏¥Œœ˚œ¢£ÆøÕªß∂À∑µªÿ∏¯∑˛ŒÒ∆˜ ±£¨ π”√∏√÷µ  $/;"	m	struct:stAllUnionMember
m_bCanJump	ScenesServer/SceneUser.h	/^	bool m_bCanJump; \/\/ [ranqd] Áé©ÂÆ∂ÊòØÂê¶Â§Ñ‰∫éÂèØË∑≥ËΩ¨Âú∞ÂõæÁöÑÁä∂ÊÄÅ$/;"	m	struct:SceneUser
m_bFlag	tmpcode/commond.h	/^	BYTE m_bFlag;					   \/\/ 0,Œ™Ω· ¯œ˚œ¢,1Œ™”–∫Û–¯œ˚œ¢$/;"	m	struct:stAllUnionMember
m_dwSize	tmpcode/commond.h	/^	DWORD m_dwSize;$/;"	m	struct:stResidentInfo
m_dwSize	tmpcode/commond.h	/^	WORD m_dwSize;                     \/\/  ˝¡ø$/;"	m	struct:stAllUnionMember
m_dwUserTempID	tmpcode/commond.h	/^	DWORD	m_dwUserTempID;								\/\/ ”√ªß¡Ÿ ±ID$/;"	m	struct:stUserInstantJumpMoveUserCmd
m_dwUserTempID	tmpcode/commond.h	/^	DWORD	m_dwUserTempID;	\/\/ ”√ªß¡Ÿ ±ID$/;"	m	struct:stJumpMoveUserCmd
m_dwUserTempID	tmpcode/commond.h	/^	DWORD  m_dwUserTempID;                     \/\/”√ªß¡Ÿ ±ID 20090109  xxp$/;"	m	struct:stUserMoveMoveUserCmd
m_dwUserTempID	tmpcode/commond.h	/^	DWORD m_dwUserTempID;                     \/\/”√ªß¡Ÿ ±ID$/;"	m	struct:stOtherUserMoveMoveUserCmd
m_dwsize	tmpcode/commond.h	/^	DWORD m_dwsize;$/;"	m	struct:stResidentDare
m_info	base/zLogger.h	/^	zServerInfoManager* m_info;$/;"	m	class:zLogger
m_mapID	tmpcode/commond.h	/^	DWORD	m_mapID;$/;"	m	struct:stUserInstantJumpMoveUserCmd
m_moveType	tmpcode/commond.h	/^	BYTE  m_moveType;                          \/\/“∆∂Ø¿‡–Õ$/;"	m	struct:stOtherUserMoveMoveUserCmd
m_sLocalLogFile	base/zLogger.h	/^	std::string m_sLocalLogFile;$/;"	m	class:zLogger
m_sRegion	base/Command.h	/^    SWORD m_sRegion;$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
m_sRegion	tmpcode/commond.h	/^		short m_sRegion;       \/\/ µÿÕºΩÁ”Ú$/;"	m	struct:stClientNewMap
m_sUnused	tmpcode/commond.h	/^		short m_sUnused;       \/\/ Œ¥”√$/;"	m	struct:stClientNewMap
m_shikongPos	tmpcode/commond.h	/^    ShiKongChuanSong m_shikongPos[3];$/;"	m	struct:stShowShiKongChuanSongUserCmd
m_vecDare	tmpcode/commond.h	/^	std::vector<stDare> m_vecDare;$/;"	m	struct:stResidentDare
m_vecMemberList	tmpcode/commond.h	/^	std::vector<stUnionRember> m_vecMemberList; \/\/ ≥…‘±¡–±Ì$/;"	m	struct:stAllUnionMember
m_vecResidentData	tmpcode/commond.h	/^	std::vector<stResidentData> m_vecResidentData;$/;"	m	struct:stResidentInfo
m_wbySpeed	tmpcode/commond.h	/^	WORD  m_wbySpeed;                           \/\/“∆∂ØÀŸ∂»÷µ$/;"	m	struct:stOtherUserMoveMoveUserCmd
m_x	tmpcode/commond.h	/^	WORD	m_x;$/;"	m	struct:stUserInstantJumpMoveUserCmd
m_x	tmpcode/commond.h	/^	float  m_x;$/;"	m	struct:stUserMoveMoveUserCmd
m_x	tmpcode/commond.h	/^	float m_x;                 $/;"	m	struct:stOtherUserMoveMoveUserCmd
m_xxxxxxxx	base/Command.h	/^    SWORD m_xxxxxxxx;$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
m_y	tmpcode/commond.h	/^	WORD	m_y;$/;"	m	struct:stUserInstantJumpMoveUserCmd
m_y	tmpcode/commond.h	/^	float  m_y; $/;"	m	struct:stUserMoveMoveUserCmd
m_y	tmpcode/commond.h	/^	float m_y;$/;"	m	struct:stOtherUserMoveMoveUserCmd
maDouId	tmpcode/commond.h	/^    DWORD maDouId;          \/\/ π”√µƒ¬Ì∂πID$/;"	m	struct:t_HorseData
maDouLastTime	tmpcode/commond.h	/^    DWORD maDouLastTime;    \/\/¬Ì∂π–ßπ˚≥÷–¯µΩµƒ ±º‰$/;"	m	struct:t_HorseData
maDouType	tmpcode/commond.h	/^    BYTE maDouType;         \/\/ π”√µƒ¬Ì∂π¿‡–Õ$/;"	m	struct:t_HorseData
mac	tmpcode/commond.h	/^	char mac[13]; \/\/macµÿ÷∑$/;"	m	struct:stAllUserList
mac_addr	base/Command.h	/^  char mac_addr[13];$/;"	m	struct:Cmd::stUserRefrainLoginCmd
mac_addr	base/Command.h	/^  char mac_addr[13];$/;"	m	struct:Cmd::stUserRequestLoginCmd
mac_addr	tmpcode/commond.h	/^	char mac_addr[13];$/;"	m	struct:stReturnMacUserCmd
mac_addr	tmpcode/commond.h	/^	char mac_addr[13];$/;"	m	struct:stUserRequestLoginCmd
magic	Robot/LoadMap.h	/^  DWORD magic;      \/**< Êñá‰ª∂Ê†áËØÜ  MAP_MAGIC *\/$/;"	m	struct:stMapFileHeader
magic	ScenesServer/LoadMap.h	/^  DWORD magic;      \/**< Êñá‰ª∂Ê†áËØÜ  MAP_MAGIC *\/$/;"	m	struct:stMapFileHeader
magicDamAdd	base/Card.h	/^	BYTE magicDamAdd;	\/\/∑® ı…À∫¶‘ˆº”(X)$/;"	m	struct:t_Card
magicDamAdd	base/zDatabase.h	/^    BYTE magicDamAdd;	    \/\/∑® ı…À∫¶‘ˆº”(X)$/;"	m	struct:zCardB
magicDamAdd	base/zDatabase.h	/^    DWORD magicDamAdd;	    \/\/∑® ı…À∫¶‘ˆº”(X)$/;"	m	struct:CardBase
magicHorseLastTime	tmpcode/commond.h	/^    DWORD magicHorseLastTime;\/\/ƒß∑®◊˘∆Ôµƒ £”‡ ±º‰$/;"	m	struct:t_HorseData
magicID	base/Card.h	/^    DWORD magicID;	    \/\/ø®≈∆–Ø¥¯µƒ∑® ıID$/;"	m	struct:t_CardPK
magicID	base/zDatabase.h	/^    DWORD magicID;	    \/\/∑® ıID(skill)$/;"	m	struct:CardBase
magicID	base/zDatabase.h	/^    DWORD magicID;	    \/\/∑® ıID(skill)$/;"	m	struct:zCardB
magicID	tmpcode/commond.h	/^    DWORD   magicID;        \/\/Ãÿ–ßID$/;"	m	struct:stMapMagicEffectUserCmd
magicID	tmpcode/commond.h	/^    DWORD magicID;\/\/Ãÿ–ßID$/;"	m	struct:stMagicEffectUserCmd
magicNO	tmpcode/commond.h	/^       DWORD magicNO;$/;"	m	struct:stShowMagicEffectUserCmd
magicattack	ScenesServer/ScenePk.h	/^      SWORD magicattack;  \/\/ ‰∏§‰ª™ÂøÉÊ≥ïÔºåÊîªÂáªÁöÑÊó∂ÂÄôÈôÑÂ∏¶Ê≥ïÊúØ‰º§ÂÆ≥$/;"	m	struct:SkillState::__anon155::__anon156
mail	base/SessionCommand.h	/^      mailInfo mail;$/;"	m	struct:Cmd::Session::t_checkSend_SceneSession
mail	base/SessionCommand.h	/^      mailInfo mail;$/;"	m	struct:Cmd::Session::t_sendMail_SceneSession
mailID	base/Command.h	/^  DWORD mailID;$/;"	m	struct:Cmd::stContentMail
mailID	base/Command.h	/^  DWORD mailID;$/;"	m	struct:Cmd::stDelMail
mailID	base/Command.h	/^  DWORD mailID;$/;"	m	struct:Cmd::stGetItemMail
mailID	base/Command.h	/^  DWORD mailID;$/;"	m	struct:Cmd::stOpenMail
mailID	base/Command.h	/^  DWORD mailID;$/;"	m	struct:Cmd::stRemoveItemMail
mailID	base/Command.h	/^  DWORD mailID;$/;"	m	struct:Cmd::stTurnBackMail
mailID	base/SessionCommand.h	/^      DWORD mailID;$/;"	m	struct:Cmd::Session::t_delMail_SceneSession
mailID	base/SessionCommand.h	/^      DWORD mailID;$/;"	m	struct:Cmd::Session::t_getMailItemConfirm_SceneSession
mailID	base/SessionCommand.h	/^      DWORD mailID;$/;"	m	struct:Cmd::Session::t_getMailItemReturn_SceneSession
mailID	base/SessionCommand.h	/^      DWORD mailID;$/;"	m	struct:Cmd::Session::t_getMailItem_SceneSession
mailID	base/SessionCommand.h	/^      DWORD mailID;$/;"	m	struct:Cmd::Session::t_openMail_SceneSession
mailID	base/SessionCommand.h	/^      DWORD mailID;$/;"	m	struct:Cmd::Session::t_turnBackMail_SceneSession
mailID	tmpcode/commond.h	/^	DWORD mailID[0];$/;"	m	struct:stDelSomeMail
mailID	tmpcode/commond.h	/^        DWORD mailID;$/;"	m	struct:stDelMail
mailID	tmpcode/commond.h	/^        DWORD mailID;$/;"	m	struct:stGetItemMail
mailID	tmpcode/commond.h	/^        DWORD mailID;$/;"	m	struct:stOpenMail
mailID	tmpcode/commond.h	/^        DWORD mailID;$/;"	m	struct:stRemoveItemMail
mailID	tmpcode/commond.h	/^        DWORD mailID;$/;"	m	struct:stTurnBackMail
mailID	tmpcode/commond.h	/^    DWORD mailID;$/;"	m	struct:stContentMail
mailInfo	base/SessionCommand.h	/^    struct mailInfo$/;"	s	namespace:Cmd::Session
mailState	base/SessionCommand.h	/^    enum mailState$/;"	g	namespace:Cmd::Session
mailState	tmpcode/commond.h	/^enum mailState$/;"	g
mailText	base/SessionCommand.h	/^      char mailText[MAX_CHATINFO];$/;"	m	struct:Cmd::Session::giftInfo
mailType	base/Command.h	/^  BYTE mailType;$/;"	m	struct:Cmd::stContentMail
mailType	base/Command.h	/^  BYTE mailType;$/;"	m	struct:Cmd::stDelMail
mailType	base/Command.h	/^  BYTE mailType;$/;"	m	struct:Cmd::stNotifyNewMail
mailType	base/Command.h	/^  BYTE mailType;$/;"	m	struct:Cmd::stSendMail
mailType	base/SessionCommand.h	/^    enum mailType$/;"	g	namespace:Cmd::Session
mailType	tmpcode/commond.h	/^		BYTE mailType; \/\/” º˛¿‡–Õ 0npc,1ÀÊ…Ì” º˛$/;"	m	struct:stDelMail
mailType	tmpcode/commond.h	/^		BYTE mailType;\/\/0Œ™ npc” º˛,1Œ™œµÕ≥” º˛$/;"	m	struct:stNotifyNewMail
mailType	tmpcode/commond.h	/^	BYTE mailType; \/\/0Œ™npc” º˛,1Œ™ÀÊ…Ì” $/;"	m	struct:stSendMail
mailType	tmpcode/commond.h	/^	BYTE mailType; \/\/” º˛¿‡–Õ$/;"	m	struct:stContentMail
mailType	tmpcode/commond.h	/^enum mailType \/\/∂‘”⁄ ’” º˛µƒ ±∫Ú∂®“Âµƒ¿‡–Õ$/;"	g
mail_postage	base/Command.h	/^const DWORD mail_postage = 50;  \/\/\/ÈÇÆËµÑ50Êñá$/;"	v
mail_postage	tmpcode/commond.h	/^const unsigned int mail_postage = 50;   \/\/\/” ◊ 50Œƒ$/;"	v
main	BillServer/BillServer.cpp	/^int main(int argc,char **argv)$/;"	f
main	FLServer/FLServer.cpp	/^int main(int argc,char **argv)$/;"	f
main	GatewayServer/GatewayServer.cpp	/^int main(int argc,char **argv)$/;"	f
main	RecordServer/RecordServer.cpp	/^int main(int argc,char **argv)$/;"	f
main	Robot/ClientService.cpp	/^int main(int argc,char **argv)$/;"	f
main	ScenesServer/ScenesServer.cpp	/^int main(int argc,char *argv[])$/;"	f
main	ScenesServer/zObject.h	/^    MainPack main;$/;"	m	class:Packages
main	SessionServer/SessionServer.cpp	/^int main(int argc,char *argv[])$/;"	f
main	SuperServer/SuperServer.cpp	/^int main(int argc,char **argv)$/;"	f
main	roleChangeServer/roleChangeServer.cpp	/^int main(int argc,char **argv)$/;"	f
main	roleRegServer/roleRegServer.cpp	/^int main(int argc,char **argv)$/;"	f
main	tools/codepg.cpp	/^int main(int argc, char* argv[])$/;"	f
main	tools/xmlpg.cpp	/^int main(int argc, char* argv[])$/;"	f
main1	ScenesServer/zCard.h	/^    BattleSlot main1;	\/\/÷˜’Ω≥°≤€$/;"	m	class:CardSlots
main2	ScenesServer/zCard.h	/^    BattleSlot main2;	$/;"	m	class:CardSlots
mainData	tmpcode/commond.h	/^        CardMainData mainData;$/;"	m	struct:rtNameCardCmd
mainMapName	ScenesServer/Scene.h	/^    std::vector<stMapName> mainMapName;$/;"	m	class:Scene
mainRoleX	base/Command.h	/^    int mainRoleX;  $/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
mainRoleX	tmpcode/commond.h	/^		int mainRoleX;	$/;"	m	struct:stClientNewMap
mainRoleY	base/Command.h	/^    int mainRoleY;$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
mainRoleY	tmpcode/commond.h	/^		int mainRoleY;$/;"	m	struct:stClientNewMap
mainloop	base/zTCPClientTask.h	/^	volatile bool mainloop;              \/**<  «∑Ò“—æ≠Ω¯»Î÷˜¥¶¿Ì—≠ª∑ *\/$/;"	m	class:zTCPClientTask
maintainMoney	tmpcode/commond.h	/^		DWORD maintainMoney;            \/\/Œ¨ª§Ω®÷˛À˘–Ë“™µƒ«Æ$/;"	m	struct:stRetUnionBuildInfo::__anon269
mainuser_data	base/Command.h	/^  t_MainUserData mainuser_data;$/;"	m	struct:Cmd::stSelectReturnMainUserPropertyUserCmd
mainuser_data	tmpcode/commond.h	/^	 t_MainUserData mainuser_data;$/;"	m	struct:st_WatchPlayer
mainuser_data	tmpcode/commond.h	/^	t_MainUserData mainuser_data;$/;"	m	struct:stSelectReturnMainUserPropertyUserCmd
make	ScenesServer/QuestMaker.h	/^    Base* make (zXMLParser& xml,xmlNodePtr& node)$/;"	f	class:MakeFunction::Compare
make	ScenesServer/QuestMaker.h	/^    Base* make (zXMLParser& xml,xmlNodePtr& node)$/;"	f	class:MakeFunction::Content
make	ScenesServer/QuestMaker.h	/^    Base* make (zXMLParser& xml,xmlNodePtr& node)$/;"	f	class:MakeFunction::Prop
make	ScenesServer/QuestMaker.h	/^    Base* make (zXMLParser& xml,xmlNodePtr& node)$/;"	f	class:MakeFunction::Update
make	ScenesServer/QuestMaker.h	/^    Base* make (zXMLParser& xml,xmlNodePtr& node)$/;"	f	class:MakeFunction::Void
make	base/xml/xml_parser_generator.h	/^inline xml_node_parser_generator* xml_node_parser_generator::make(zXMLParser& xml, xmlNodePtr node)$/;"	f	class:xml_node_parser_generator
make	base/zDatabase.h	/^    WORD make;$/;"	m	struct:zObjectB
maker	base/Object.h	/^	char maker[MAX_NAMESIZE]; \/\/¥Ú‘Ï’ﬂ$/;"	m	struct:t_Object
makerName	ScenesServer/script_func.cpp	/^void makerName(const char *name,DWORD thisid)$/;"	f
malloc	base/zDebugNew.h	43;"	d
manageFee	tmpcode/commond.h	/^	DWORD manageFee;        \/\/\/ ΩÒ»’π‹¿Ì∑—$/;"	m	struct:stRetCityGuardInfo
mancontry	tmpcode/commond.h	/^				BYTE mancontry;\/\/∞⁄∑≈’ﬂµƒΩÁ”Ú$/;"	m	struct:stCrystalAllInfoDataUserCmd::cryState
map	base/SceneCommand.h	/^      BYTE map[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Scene::t_Unreg_LoginScene
mapID	SessionServer/SessionServer.h	/^  DWORD mapID;$/;"	m	struct:worldMsg
mapID	base/Command.h	/^    DWORD mapID;$/;"	m	struct:Cmd::stUserInstantJumpMoveUserCmd
mapID	base/Command.h	/^  DWORD mapID;$/;"	m	struct:Cmd::stRelationStatusCmd
mapID	base/GmToolCommand.h	/^      DWORD mapID;$/;"	m	struct:Cmd::GmTool::t_Broadcast_GmTool
mapID	base/SessionCommand.h	/^	DWORD mapID;$/;"	m	struct:Cmd::Session::t_RelationAddFriend
mapID	base/SessionCommand.h	/^      DWORD mapID;$/;"	m	struct:Cmd::Session::t_broadcastScene_SceneSession
mapID	base/SessionCommand.h	/^      DWORD mapID;$/;"	m	struct:Cmd::Session::t_sendCmd_SceneSession
mapID	tmpcode/commond.h	/^		DWORD mapID;$/;"	m	struct:stRetValidQuestUserCmd::con
mapID	tmpcode/commond.h	/^	DWORD mapID;   \/\/µÿÕº±‡∫≈$/;"	m	struct:stRelationStatusCmd
mapID	tmpcode/commond.h	/^	DWORD mapID; \/\/ «∑Ò’º”–≥«∞Ó	0:√ª”–’º¡Ï»Œ∫Œ≥«∞Ó 5006:’º¡Ï¡Àª˘µÿ 5010~5021:’º¡Ï¡À◊§µÿ$/;"	m	struct:stUnionBaseInfoCmd
mapID	tmpcode/commond.h	/^	DWORD mapID;$/;"	m	struct:stDare
mapID	tmpcode/commond.h	/^	DWORD mapID;$/;"	m	struct:stResidentData
mapID	tmpcode/commond.h	/^	WORD mapID;     \/\/µÿÕºID  1078--60∑÷ 1079--40∑÷  1080--20∑÷$/;"	m	struct:stSendInfoUserCmd
mapID	tmpcode/commond.h	/^        DWORD mapID;                     \/**< µÿÕºID *\/$/;"	m	struct:stAutoBattMapScreenUserCmd
mapID	tmpcode/commond.h	/^        DWORD mapID;$/;"	m	struct:OneQuestInfo
mapID	tmpcode/commond.h	/^        DWORD mapID;$/;"	m	struct:reqEnterUserCmd
mapID	tmpcode/commond.h	/^        DWORD mapID;$/;"	m	struct:req_ReplyTableMapScreenUserCmd
mapID	tmpcode/commond.h	/^        DWORD mapID;$/;"	m	struct:rtCallTuDiMapScreenUserCmd
mapID	tmpcode/commond.h	/^        DWORD mapID;$/;"	m	struct:rtNotifyEnterUserCmd
mapIndex	GatewayServer/SceneClient.h	/^	MapIndex mapIndex;$/;"	m	class:SceneClient
mapName	Robot/Client.h	/^    std::string mapName;$/;"	m	struct:ClientBase
mapName	base/CharBase.h	/^  char  mapName[MAX_NAMESIZE + 1];  \/\/\/ ËßíËâ≤ÊâÄÂú®Âú∞ÂõæÂêçÁß∞$/;"	m	struct:CharBase
mapName	base/Command.h	/^    char  mapName[MAX_NAMESIZE+1];  \/\/\/ ËßíËâ≤ÊâÄÂú®Âú∞ÂõæÂêçÁß∞$/;"	m	struct:Cmd::SelectUserInfo
mapName	base/Command.h	/^    char mapName[MAX_NAMESIZE];\/\/Âú∞ÂõæÂêçÁß∞$/;"	m	struct:Cmd::stRtnNpcOwnerListCmd::__anon116
mapName	base/Command.h	/^  char  mapName[MAX_NAMESIZE];  \/\/ÁõÆÊ†áÂú∞ÂõæÂêçÁß∞$/;"	m	struct:Cmd::stDareCallDuty
mapName	base/Command.h	/^  char mapName[MAX_NAMESIZE];    \/\/BOSSÂà∑Êñ∞ÁöÑÂú∞ÂõæÂêçÁß∞$/;"	m	struct:Cmd::stKillBossUserCmd
mapName	base/Command.h	/^  char mapName[MAX_NAMESIZE];    \/\/BOSSÂà∑Êñ∞ÁöÑÂú∞ÂõæÂêçÁß∞$/;"	m	struct:Cmd::stRefreshBossUserCmd
mapName	base/Command.h	/^  char mapName[MAX_NAMESIZE];    \/\/Á´ãÂäüÂú∞Âõæ$/;"	m	struct:Cmd::stKillForeignerUserCmd
mapName	base/Command.h	/^  char mapName[MAX_NAMESIZE];    \/\/ËØ∑Ê±ÇÊîØÊè¥ÁöÑÂú∞ÂõæÂêçÁß∞$/;"	m	struct:Cmd::stRequestCountryHelpUserCmd
mapName	base/Command.h	/^  char mapName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stUserGotoMapMoveUserCmd
mapName	base/RecordCommand.h	/^      char mapName[MAX_NAMESIZE];  \/**< Áî®Êà∑Âú∞ÂõæÂêçÂ≠ó  *\/$/;"	m	struct:Cmd::Record::t_CreateChar_GateRecord
mapName	base/SessionCommand.h	/^	  char mapName[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_TelePKGame_SceneSession
mapName	base/SessionCommand.h	/^      char mapName[MAX_NAMESIZE]; \/\/Âú∞ÂõæÂêçÁß∞$/;"	m	struct:Cmd::Session::t_GoTo_Leader_Check_SceneSession
mapName	base/SessionCommand.h	/^      char mapName[MAX_NAMESIZE]; \/\/Âú∞ÂõæÂêçÁß∞$/;"	m	struct:Cmd::Session::t_GoTo_Leader_SceneSession
mapName	base/SessionCommand.h	/^      char mapName[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_cityRush_SceneSession
mapName	tmpcode/commond.h	/^		char  mapName[MAX_NAMESIZE];	 \/*µÿÕº√˚≥∆*\/$/;"	m	struct:stAutoBattMapScreenUserCmd
mapName	tmpcode/commond.h	/^		char mapName[MAX_NAMESIZE]; $/;"	m	struct:stRetValidQuestUserCmd::con
mapName	tmpcode/commond.h	/^		char mapName[MAX_NAMESIZE];$/;"	m	struct:rtCallTuDiMapScreenUserCmd
mapName	tmpcode/commond.h	/^		char mapName[MAX_NAMESIZE];$/;"	m	struct:stRetDangerAreaUserCmd::__anon253
mapName	tmpcode/commond.h	/^	 char mapName[MAX_NAMESIZE];$/;"	m	struct:stReqTeamInfoCmd
mapName	tmpcode/commond.h	/^	 char mapName[MAX_NAMESIZE];$/;"	m	struct:stRetTeamInfoCmd
mapName	tmpcode/commond.h	/^	 char mapName[MAX_NAMESIZE];$/;"	m	struct:stRetTeamInfo_Client
mapName	tmpcode/commond.h	/^	char	mapName[MAX_NAMESIZE];	\/\/ƒø±ÍµÿÕº√˚≥∆$/;"	m	struct:stDareCallDuty
mapName	tmpcode/commond.h	/^	char	mapName[MAX_NAMESIZE];  \/\/À˘‘⁄µÿÕº√˚◊÷$/;"	m	struct:BossTraceItem
mapName	tmpcode/commond.h	/^	char  mapName[MAX_NAMESIZE+1];  \/\/\/ Ω«…´À˘‘⁄µÿÕº√˚≥∆$/;"	m	struct:SelectUserInfo
mapName	tmpcode/commond.h	/^	char  mapName[MAX_NAMESIZE+1];  \/\/npcÀ˘‘⁄µÿÕº$/;"	m	struct:TitleInfo
mapName	tmpcode/commond.h	/^	char mapName[MAX_NAMESIZE];		\/\/¡¢π¶µÿÕº$/;"	m	struct:stKillForeignerUserCmd
mapName	tmpcode/commond.h	/^	char mapName[MAX_NAMESIZE];             \/\/µÿÕº√˚≥∆$/;"	m	struct:stReqTeamInfoListUserCmd
mapName	tmpcode/commond.h	/^	char mapName[MAX_NAMESIZE];             \/\/µÿÕº√˚≥∆$/;"	m	struct:teamRecruitInfo
mapName	tmpcode/commond.h	/^	char mapName[MAX_NAMESIZE];        \/\/Ô⁄≥µÀ˘‘⁄µÿÕº√˚≥∆$/;"	m	struct:attGuardNpcRecordofSept
mapName	tmpcode/commond.h	/^	char mapName[MAX_NAMESIZE];     \/\/«Î«Û÷ß‘ÆµƒµÿÕº√˚≥∆$/;"	m	struct:stRequestCountryHelpUserCmd
mapName	tmpcode/commond.h	/^	char mapName[MAX_NAMESIZE];  \/\/¥´ÀÕµ„À˘‘⁄µÿÕº$/;"	m	struct:stNotifyTransPropertyUserCmd
mapName	tmpcode/commond.h	/^	char mapName[MAX_NAMESIZE];$/;"	m	struct:stGoToAttGuardNpc
mapName	tmpcode/commond.h	/^	char mapName[MAX_NAMESIZE];$/;"	m	struct:stReqJoinQuestMapUserCmd
mapName	tmpcode/commond.h	/^	char mapName[MAX_NAMESIZE];$/;"	m	struct:stRetJoinQuestMapUserCmd
mapName	tmpcode/commond.h	/^         BYTE mapName[MAX_NAMESIZE];     \/\/µÿÕº√˚$/;"	m	struct:stRetNpcOccupiedBySeptNpcDare
mapName	tmpcode/commond.h	/^        char    mapName[MAX_NAMESIZE];  \/\/ƒø±ÍµÿÕº√˚≥∆$/;"	m	struct:stMercenaryCallDuty
mapName	tmpcode/commond.h	/^        char mapName[MAX_NAMESIZE];             \/\/«Î«Û÷ß‘ÆµƒµÿÕº√˚≥∆$/;"	m	struct:stMercenaryCountryHelpUserCmd
mapScreenIndex	GatewayServer/GateUser.h	/^	DWORD mapScreenIndex;$/;"	m	class:GateUser
mapValueType	SessionServer/CSort.h	/^    typedef std::map<DWORD,QWORD>::value_type mapValueType;$/;"	t	class:CSortM
map_dic	GatewayServer/CountryInfo.h	/^	MapMap map_dic;$/;"	m	class:CountryInfo
map_file	base/SessionCommand.h	/^      BYTE map_file[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_changeScene_SceneSession
map_file	base/SessionCommand.h	/^      BYTE map_file[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_gmCommand_SceneSession
map_id	base/SessionCommand.h	/^		DWORD map_id;					\/\/sky Ë¢´‰º†ÈÄÅÁöÑÂú∞ÂõæÁöÑID$/;"	m	struct:Cmd::Session::t_Sports_MoveSecen
map_id	base/SessionCommand.h	/^      DWORD map_id;$/;"	m	struct:Cmd::Session::t_changeScene_SceneSession
map_id	base/SessionCommand.h	/^      DWORD map_id;$/;"	m	struct:Cmd::Session::t_removeScene_SceneSession
map_id	base/SessionCommand.h	/^      DWORD map_id;$/;"	m	struct:Cmd::Session::t_unloadScene_SceneSession
map_info	ScenesServer/SceneManager.h	/^    MapMap map_info;$/;"	m	class:SceneManager
map_name	base/SessionCommand.h	/^      BYTE map_name[MAX_NAMESIZE];      $/;"	m	struct:Cmd::Session::t_changeScene_SceneSession
map_name	base/SessionCommand.h	/^      BYTE map_name[MAX_NAMESIZE];      $/;"	m	struct:Cmd::Session::t_gmCommand_SceneSession
mapid	GatewayServer/CountryInfo.h	/^		DWORD mapid;$/;"	m	struct:CountryInfo::CountryDic
mapid	ScenesServer/SceneManager.h	/^      DWORD mapid;$/;"	m	struct:SceneManager::CountryInfo
mapid	SessionServer/CountryInfo.h	/^		DWORD mapid;$/;"	m	struct:CountryInfo::CountryDic
mapid	base/CharBase.h	/^  DWORD mapid;            \/\/\/ ËßíËâ≤ÊâÄÂú®Âú∞ÂõæÁºñÂè∑$/;"	m	struct:CharBase
mapid	base/Command.h	/^    DWORD mapid;          \/\/\/ ËßíËâ≤ÊâÄÂú®Âú∞ÂõæÁºñÂè∑$/;"	m	struct:Cmd::SelectUserInfo
mapid	tmpcode/commond.h	/^	BYTE mapid;$/;"	m	struct:stFindTreasureDragonUserCmd
mapid	tmpcode/commond.h	/^	DWORD mapid;                                    \/\/\/ Ω«…´À˘‘⁄µÿÕº±‡∫≈$/;"	m	struct:SelectUserInfo
mapid	tmpcode/commond.h	/^                DWORD mapid;$/;"	m	struct:stCrystalAllInfoDataUserCmd::cryState
mapname	GatewayServer/CountryInfo.h	/^		std::string mapname;$/;"	m	struct:CountryInfo::Info
mapname	SessionServer/CountryInfo.h	/^		std::string mapname;$/;"	m	struct:CountryInfo::Info
mapname	base/Command.h	/^    }mapname[0];$/;"	m	struct:Cmd::stScrollMapPropertyUserCmd	typeref:struct:Cmd::stScrollMapPropertyUserCmd::__anon96
mapper	base/zMTCPServer.h	/^	Sock2Port mapper;$/;"	m	class:zMTCPServer
maptempid	base/SceneCommand.h	/^      DWORD maptempid;$/;"	m	struct:Cmd::Scene::MapIndexXY
maptempid	base/SceneCommand.h	/^      DWORD maptempid;$/;"	m	struct:Cmd::Scene::t_Nine_ExceptMe_ForwardScene
maptempid	base/SceneCommand.h	/^      DWORD maptempid;$/;"	m	struct:Cmd::Scene::t_Nine_ForwardScene
maptempid	base/SceneCommand.h	/^      DWORD maptempid;$/;"	m	struct:Cmd::Scene::t_Nine_dir_ForwardScene
maptempid	base/SceneCommand.h	/^      DWORD maptempid;$/;"	m	struct:Cmd::Scene::t_Nine_rdir_ForwardScene
maptempid	base/SceneCommand.h	/^      DWORD maptempid;$/;"	m	struct:Cmd::Scene::t_User_ForwardMap
mapuser_data	base/Command.h	/^  t_MapUserData mapuser_data;$/;"	m	struct:Cmd::stSelectReturnMainUserPropertyUserCmd
mapuser_data	tmpcode/commond.h	/^	t_MapUserData mapuser_data;$/;"	m	struct:stSelectReturnMainUserPropertyUserCmd
mapx	base/SceneCommand.h	/^      DWORD mapx;  \/\/ øÌ∂‡…Ÿ∆¡$/;"	m	struct:Cmd::Scene::MapIndexXY
mapy	base/SceneCommand.h	/^      DWORD mapy; \/\/ ∏ﬂ∂‡…Ÿ∆¡$/;"	m	struct:Cmd::Scene::MapIndexXY
married	tmpcode/commond.h	/^	BYTE married; \/\/ªÈ∑Ò£¨0±£√‹£¨1,“—ªÈ£¨2£¨Œ¥ªÈ$/;"	m	struct:stPersonalSign
marsPower	tmpcode/commond.h	/^			WORD marsPower;                 \/\/ ’Ω…Ò÷Æ¡¶$/;"	m	struct:t_MainUserData::__anon220::__anon221
master	base/Command.h	/^  char  master[MAX_NAMESIZE];            \/\/ ÂÆ∂ÊóèÊóèÈïø$/;"	m	struct:Cmd::stSeptBaseInfoCmd
master	base/Command.h	/^  char  master[MAX_NAMESIZE];        \/\/ Â∏Æ‰ºö‰ºöÈïø$/;"	m	struct:Cmd::stUnionBaseInfoCmd
master	base/Command.h	/^  char master[MAX_NAMESIZE];$/;"	m	struct:Cmd::stSeptRecord
master	base/Command.h	/^  char master[MAX_NAMESIZE];$/;"	m	struct:Cmd::stSeptVoteRecord
master	base/Command.h	/^  char master[MAX_NAMESIZE];$/;"	m	struct:Cmd::stUnionRecord
master	base/Command.h	/^  char master[MAX_NAMESIZE];$/;"	m	struct:Cmd::stUnionVoteRecord
master	tmpcode/commond.h	/^	char  master[MAX_NAMESIZE];                             \/\/ ”∂±¯Õ≈Õ≈≥§$/;"	m	struct:stUnionBaseInfoCmd
master	tmpcode/commond.h	/^	char  master[MAX_NAMESIZE];            \/\/ º“◊Â◊Â≥§$/;"	m	struct:stSeptBaseInfoCmd
master	tmpcode/commond.h	/^	char master[MAX_NAMESIZE + 1];  \/\/\/ ◊Â≥§√˚◊÷(’π æ ± π”√)$/;"	m	struct:stRetMasterPerformInfoCmd
masterID	base/Command.h	/^  DWORD masterID;      \/\/‰∏ª‰∫∫id$/;"	m	struct:Cmd::t_CartoonData
masterID	base/Command.h	/^  DWORD masterID;  \/\/\/‰∏ª‰∫∫ÁöÑid -1ÔºöÊ≤°Êúâ‰∏ª‰∫∫$/;"	m	struct:Cmd::t_MapPetData
masterID	base/SessionCommand.h	/^      DWORD masterID;$/;"	m	struct:Cmd::Session::t_chargeCartoon_SceneSession
masterID	tmpcode/commond.h	/^	DWORD masterID;		\/\/À˘ Ù$/;"	m	struct:HouseObjDef
masterID	tmpcode/commond.h	/^	DWORD masterID;\/\/÷˜»ÀID$/;"	m	struct:RoomMemberInfo
masterID	tmpcode/commond.h	/^	WORD masterID;	\/\/Õ¡µÿ÷˜»ÀID£ªπ≤”–µÿŒ™0$/;"	m	struct:stStealSoilHouseUserCmd
masterID	tmpcode/commond.h	/^	WORD masterID;	\/\/÷˜»ÀID$/;"	m	struct:SoilInfo
masterID	tmpcode/commond.h	/^	WORD masterID;	\/\/÷˜»ÀID$/;"	m	struct:stPlantSoilHouseUserCmd
masterID	tmpcode/commond.h	/^	WORD masterID;	\/\/÷˜»ÀID$/;"	m	struct:stReqSoilHouseUserCmd
masterID	tmpcode/commond.h	/^	WORD masterID;	\/\/÷˜»ÀID$/;"	m	struct:stUpgradeSoilHouseUserCmd
masterID	tmpcode/commond.h	/^	WORD masterID;$/;"	m	struct:stCleanBugSoilHouseUserCmd
masterID	tmpcode/commond.h	/^	WORD masterID;$/;"	m	struct:stCleanGrassSoilHouseUserCmd
masterID	tmpcode/commond.h	/^	WORD masterID;$/;"	m	struct:stHarvestSoilHouseUserCmd
masterID	tmpcode/commond.h	/^	WORD masterID;$/;"	m	struct:stWaterSoilHouseUserCmd
masterID	tmpcode/commond.h	/^    DWORD masterID;					\/\/\/÷˜»Àµƒid -1£∫√ª”–÷˜»À$/;"	m	struct:t_MapPetData
masterLevel	base/Command.h	/^  DWORD masterLevel;    \/\/‰∏ª‰∫∫Á≠âÁ∫ß$/;"	m	struct:Cmd::t_CartoonData
masterName	base/Command.h	/^  char masterName[MAX_NAMESIZE];  \/\/‰∏ª‰∫∫ÂêçÂ≠ó$/;"	m	struct:Cmd::stAddWaitingCartoonCmd
masterName	base/Command.h	/^  char masterName[MAX_NAMESIZE];  \/\/‰∏ª‰∫∫ÂêçÂ≠ó$/;"	m	struct:Cmd::t_CartoonData
masterName	base/Command.h	/^  char masterName[MAX_NAMESIZE];\/\/\/‰∏ª‰ªªÁöÑÂêçÂ≠ó$/;"	m	struct:Cmd::t_MapPetData
masterName	base/Sept.h	/^  char    masterName[MAX_NAMESIZE+1];    \/\/ ª·≥§µƒ√˚◊÷$/;"	m	struct:SeptDef::stSeptInfo
masterName	base/SessionCommand.h	/^      char masterName[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_createSchool_SceneSession
masterName	base/Union.h	/^  char    masterName[MAX_NAMESIZE+1];    \/\/ Â∏Æ‰∏ªÁöÑÂêçÂ≠ó$/;"	m	struct:UnionDef::stUnionInfo
masterName	tmpcode/commond.h	/^	char            masterName[MAX_NAMESIZE];               \/\/◊Â≥§√˚≥∆$/;"	m	struct:stSeptSortInfo
masterName	tmpcode/commond.h	/^	char  masterName[MAX_NAMESIZE];		\/\/ÛÙª÷˜»À√˚◊÷$/;"	m	struct:stInfoGouhuoUserCmd
masterName	tmpcode/commond.h	/^	char masterName[17];$/;"	m	struct:SeptNotice
masterName	tmpcode/commond.h	/^	char masterName[MAX_NAMESIZE+1];\/\/≥«÷˜√˚◊÷       $/;"	m	struct:CountryGreatEvent
masterName	tmpcode/commond.h	/^	char masterName[MAX_NAMESIZE];	\/\/∑ø÷˜√˚◊÷$/;"	m	struct:RoomInfo
masterName	tmpcode/commond.h	/^	char masterName[MAX_NAMESIZE];          \/\/Õ≈≥§√˚≥∆$/;"	m	struct:stUnionSortInfo
masterName	tmpcode/commond.h	/^	char masterName[MAX_NAMESIZE]; \/\/KOK–¬º”µƒ≥…‘±:∑¢≤ºº“◊Â»ŒŒÒµƒÕÊº“µƒ√˚◊÷$/;"	m	struct:stSeptGatherCmd
masterName	tmpcode/commond.h	/^    char  masterName[MAX_NAMESIZE+1];$/;"	m	struct:stZhongLiCityDist
masterName	tmpcode/commond.h	/^    char masterName[17];			\/\/\/÷˜»Àµƒ√˚◊÷$/;"	m	struct:t_MapPetData
masterName	tmpcode/commond.h	/^    char masterName[MAX_NAMESIZE];  \/\/∑ø÷˜√˚◊÷$/;"	m	struct:stOneRoomAllInfoQuestRoomUserCmd
masterName	tmpcode/commond.h	/^    char masterName[MAX_NAMESIZE];\/\/¬Ì÷˜»Àµ√√˚◊÷                    $/;"	m	struct:stSelectReturnHorsePropertyUserCmd
masterOrder	tmpcode/commond.h	/^    BYTE masterOrder;       \/\/info÷–∂”≥§µƒ–Ú∫≈£ª–Ú∫≈¥”0ø™ º£ª¿˝»ÁinfoŒ™xxx:1;yyy:2;zzz:1;¥À ±xxx «∂”≥§£¨‘ÚmasterOrderŒ™1£ª$/;"	m	struct:stRoomMemDetailQuestRoomUserCmd
masterProfession	tmpcode/commond.h	/^	WORD masterProfession;		\/\/∑ø÷˜÷∞“µ$/;"	m	struct:RoomInfo
masterProfession	tmpcode/commond.h	/^    WORD masterProfession;          \/\/∑ø÷˜÷∞“µ$/;"	m	struct:stOneRoomAllInfoQuestRoomUserCmd
masterState	base/SessionCommand.h	/^      BYTE masterState;\/\/È¢ÜÂÖªÊó∂ÔºåÂÖ∂‰∏ª‰∫∫ÁöÑÁä∂ÊÄÅ 0:‰∏çÂú®Á∫ø 1:Âú®Á∫ø$/;"	m	struct:Cmd::Session::t_adoptCartoon_SceneSession
masterType	base/Command.h	/^  BYTE masterType;  \/\/\/‰∏ª‰∫∫ÁöÑÁ±ªÂûã  0ÔºöÁé©ÂÆ∂ 1Ôºönpc$/;"	m	struct:Cmd::t_MapPetData
masterType	tmpcode/commond.h	/^	BYTE masterType;				\/\/\/÷˜»Àµƒ¿‡–Õ  0£∫ÕÊº“ 1£∫npc    \/\/ ”–∏¥”√£∫∂‘Ô⁄≥µ¿¥Àµ 16:√ø»’Ô⁄≥µ 32: «º“◊Â≥µ£¨…œ√ÊµƒrealNameŒ™º“◊Â√˚$/;"	m	struct:t_MapPetData
masterType	tmpcode/commond.h	/^    WORD masterType;             \/\/÷˜»À¿‡–Õ        $/;"	m	struct:stSelectReturnHorsePropertyUserCmd
matID	tmpcode/commond.h	/^        DWORD matID;$/;"	m	struct:stStartEmployGatherCmd::gather
matchScore	SessionServer/HeroCardManager.h	/^    DWORD matchScore;		\/\/’Ω¡¶$/;"	m	struct:stChallengeInfo
matchTime	SessionServer/HeroCardManager.h	/^    DWORD matchTime;		\/\/∆•≈‰≥…π¶µƒ ±º‰¥¡$/;"	m	struct:stMatchedInfo
matchTimes	SessionServer/HeroCardManager.h	/^    DWORD matchTimes;		\/\/¿€º∆∆•≈‰¥Œ ˝$/;"	m	struct:stChallengeInfo
matched	SessionServer/HeroCardManager.h	/^    BYTE matched;		\/\/ «∑Ò“—∆•≈‰$/;"	m	struct:stChallengeInfo
matched	base/zRegex.h	/^	bool matched;$/;"	m	class:zRegex
material	base/Command.h	/^    struct material{$/;"	s	struct:Cmd::stFoundItemPropertyUserCmd
material	base/zDatabase.h	/^    struct material$/;"	s	struct:zObjectB
material	tmpcode/commond.h	/^	struct  material{$/;"	s	struct:stFoundSpecialItemPropertyUserCmd
material	tmpcode/commond.h	/^	struct material{$/;"	s	struct:stFoundItemPropertyUserCmd
material	tmpcode/commond.h	/^	struct material{$/;"	s	struct:stHouseFurnitureItemPropertyUserCmd
material	tmpcode/commond.h	/^	struct material{$/;"	s	struct:stHouseRoomDeskItemPropertyUserCmd
material	tmpcode/commond.h	/^        DWORD material[6]; \/\/◊˜Œ™≤ƒ¡œµƒ¡˘º˛◊∞±∏µƒid$/;"	m	struct:stPushMagicStoveUserCmd
material	tmpcode/commond.h	/^        DWORD material[6]; \/\/◊˜Œ™≤ƒ¡œµƒ¡˘º˛◊∞±∏µƒid$/;"	m	struct:stPushPurpleStoveUserCmd
material	tmpcode/commond.h	/^        struct material{$/;"	s	struct:stAddHorseSoulEnergyUserCmd
material	tmpcode/commond.h	/^        struct material{$/;"	s	struct:stFoundItemSkillStore
material	tmpcode/commond.h	/^    struct material{$/;"	s	struct:stHorseSoulItemPropertyUserCmd
materialPoint	tmpcode/commond.h	/^	WORD materialPoint;					\/\/µ±«∞≤ƒ¡œµ„ ˝$/;"	m	struct:DecayHouseBaseData
matk	base/Command.h	/^	DWORD matk;             \/\/È≠îÊîª$/;"	m	struct:Cmd::t_PetData
matk	tmpcode/commond.h	/^	DWORD matk;             \/\/ƒßπ•$/;"	m	struct:t_PetData
matk_plus	base/Command.h	/^	WORD matk_plus;         \/\/ÈôÑÂä†È≠îÊ≥ïÊîªÂáªÂäõ$/;"	m	struct:Cmd::t_PetData
matk_plus	tmpcode/commond.h	/^	WORD matk_plus;         \/\/∏Ωº”ƒß∑®π•ª˜¡¶$/;"	m	struct:t_PetData
matrix	tmpcode/commond.h	/^	char matrix[13];						\/*æÿ’Ûø®∂‘”¶»˝∏ˆ◊¯±Íµ„µƒ÷µ*\/$/;"	m	struct:stUserRequestMtcardCmd
matureTime	tmpcode/commond.h	/^	DWORD matureTime;		\/\/≥… Ï ±º‰$/;"	m	struct:stLandItem
max	base/Command.h	/^  DWORD max;\/\/ÊÄªÂÖ±Â§öÂ∞ë‰∏™$/;"	m	struct:Cmd::stAddListAuction
max	base/zDatabase.h	/^	BYTE max;$/;"	m	struct:zObjectB::socket
max	tmpcode/commond.h	/^	DWORD max;$/;"	m	struct:rtConsumeHappyCardBoxUserCmd
max	tmpcode/commond.h	/^        DWORD max;                      \/\/◊‹π≤∂‡…Ÿ∏ˆ$/;"	m	struct:stAddListAuction
max	tmpcode/commond.h	/^    DWORD max;      \/\/◊‹π≤”–∂‡…Ÿ∏ˆ$/;"	m	struct:stAddListPurchase
maxActionPower	tmpcode/commond.h	/^    WORD maxActionPower;    \/\/◊Ó¥Û––∂Ø¡¶$/;"	m	struct:t_DragonData
maxBedRoom	tmpcode/commond.h	/^	BYTE maxBedRoom;$/;"	m	struct:rtAreaDataHouseUserCmd
maxBusinessMen	tmpcode/commond.h	/^	BYTE maxBusinessMen;                    \/\/…Ã»À◊‹ ˝…œœﬁ$/;"	m	struct:stGetUnionBusinessmen
maxCleanTaskNum	tmpcode/commond.h	/^	BYTE	maxCleanTaskNum;								\/\/ ø…Ω”»ŒŒÒ ˝¡ø$/;"	m	struct:stHomeItem
maxCleanTaskNum	tmpcode/commond.h	/^	DWORD	maxCleanTaskNum;               \/\/◊Ó¥Û«ÂΩ‡»ŒŒÒ$/;"	m	struct:HomeMapData
maxCleanValue	tmpcode/commond.h	/^	DWORD	maxCleanValue;                 \/\/«ÂΩ‡◊‹÷µ$/;"	m	struct:HomeMapData
maxCleanValue	tmpcode/commond.h	/^	DWORD maxCleanValue;$/;"	m	struct:stModifyHomeDataUserCmd
maxCoefData	tmpcode/commond.h	/^	LingQiMaxCoefData maxCoefData;$/;"	m	struct:LingQiAllData
maxConns	base/zTCPTaskPool.h	/^	const int maxConns;                    \/**< œﬂ≥Ã≥ÿ≤¢––¥¶¿Ì¡¨Ω”µƒ◊Ó¥Û ˝¡ø *\/$/;"	m	class:zTCPTaskPool
maxEnergy	tmpcode/commond.h	/^        WORD maxEnergy; \/\/µ±«∞◊Ó¥Ûƒ‹¡ø÷µ$/;"	m	struct:stShowNowHorseSoulEnergyUserCmd
maxExp	base/Command.h	/^  DWORD maxExp;      \/\/ÂçáÁ∫ßÁªèÈ™å$/;"	m	struct:Cmd::t_CartoonData
maxExp	base/Command.h	/^  DWORD maxExp;$/;"	m	struct:Cmd::stRetGenCountryCmd
maxExp	base/SessionCommand.h	/^      DWORD maxExp;$/;"	m	struct:Cmd::Session::t_refreshGen_SceneSession
maxFeedTimes	tmpcode/commond.h	/^	BYTE maxFeedTimes;$/;"	m	struct:stResetFeedTimesLingQiUserCmd
maxGatewayUser	FLServer/LoginManager.cpp	/^DWORD LoginManager::maxGatewayUser=MAX_GATEWAYUSER;$/;"	m	class:LoginManager
maxGatewayUser	FLServer/LoginManager.h	/^	static DWORD maxGatewayUser;$/;"	m	class:LoginManager
maxGold	base/Command.h	/^  DWORD maxGold;$/;"	m	struct:Cmd::stAddListAuction
maxGold	base/Command.h	/^  DWORD maxGold;$/;"	m	struct:Cmd::stSaleAuction
maxGold	base/SessionCommand.h	/^      DWORD maxGold;$/;"	m	struct:Cmd::Session::auctionInfo
maxGold	tmpcode/commond.h	/^        DWORD maxGold;$/;"	m	struct:stAddListAuction
maxGold	tmpcode/commond.h	/^        DWORD maxGold;$/;"	m	struct:stSaleAuction
maxGrowUpDegree	tmpcode/commond.h	/^    DWORD maxGrowUpDegree;  \/\/◊Ó¥Û≥…≥§∂»$/;"	m	struct:t_DragonData
maxHP	tmpcode/commond.h	/^		DWORD maxHP;$/;"	m	struct:stStatueInfoUserCmd::__anon319
maxHomeExp	tmpcode/commond.h	/^	DWORD	maxHomeExp;                    \/\/∑øŒ›◊Ó¥Ûæ≠—È÷µ$/;"	m	struct:HomeMapData
maxHomeExp	tmpcode/commond.h	/^	DWORD maxHomeExp;$/;"	m	struct:stModifyHomeDataUserCmd
maxHouse	tmpcode/commond.h	/^    BYTE maxHouse;$/;"	m	struct:rtAreaDataHouseUserCmd
maxHp	tmpcode/commond.h	/^	DWORD   maxHp;                  \/\/◊Ó¥ÛƒÕæ√∂» \/\/ ‘⁄º”¡Àbuff∫ÛæÕ «º”¡Àbuff∫Ûµƒhp$/;"	m	struct:TankData
maxHp	tmpcode/commond.h	/^	DWORD   maxHp;$/;"	m	struct:st_CharShow2
maxHp	tmpcode/commond.h	/^	DWORD hp,maxHp;$/;"	m	struct:stSetHpTankCmd
maxID	BillServer/BillClientManager.h	/^    DWORD maxID;$/;"	m	class:BillClientManager
maxID	base/zUniqueID.h	/^	T maxID;$/;"	m	class:zUniqueID
maxLevel	tmpcode/commond.h	/^		DWORD maxLevel;					\/\/µ±Client«Î«Ûø∆ºº–≈œ¢ ±,∏√≥…‘±≤ªŒ™0,∆‰”‡«ÈøˆŒ™0$/;"	m	struct:stRetUnionBuildInfo::__anon269
maxLevel	tmpcode/commond.h	/^	WORD maxLevel;$/;"	m	struct:stNotifyWenMingInfoUserCmd
maxLevel	tmpcode/commond.h	/^	WORD maxLevel;$/;"	m	struct:stSendCountryInviteQuestRoomUserCmd
maxLevel	tmpcode/commond.h	/^    WORD maxLevel;$/;"	m	struct:LinkInfo
maxLevel	tmpcode/commond.h	/^    WORD maxLevel;$/;"	m	struct:stInviteQuestRoomUserCmd
maxLevelLimit	tmpcode/commond.h	/^	WORD    maxLevelLimit;  \/\/µ±«∞œﬁ÷∆º∂±$/;"	m	struct:stRetMaxLevelIconDataUserCmd
maxMemCount	tmpcode/commond.h	/^    BYTE maxMemCount;       \/\/◊Ó¥Û»À ˝$/;"	m	struct:stNotifyLevelFormQuestRoomUserCmd
maxMinXin	tmpcode/commond.h	/^	DWORD maxMinXin;$/;"	m	struct:stRefreshCityMoneyCmd
maxMoney	base/Command.h	/^  DWORD maxMoney;$/;"	m	struct:Cmd::stAddListAuction
maxMoney	base/Command.h	/^  DWORD maxMoney;$/;"	m	struct:Cmd::stSaleAuction
maxMoney	base/SessionCommand.h	/^      DWORD maxMoney;$/;"	m	struct:Cmd::Session::auctionInfo
maxMoney	tmpcode/commond.h	/^        DWORD maxMoney;$/;"	m	struct:stAddListAuction
maxMoney	tmpcode/commond.h	/^        DWORD maxMoney;$/;"	m	struct:stSaleAuction
maxMx	tmpcode/commond.h	/^			DWORD maxMx;$/;"	m	struct:stRetCityMinxinRecCmd::CityMxRec::CityMx
maxMx	tmpcode/commond.h	/^		DWORD maxMx;			\/\/∏√≥«µ±«∞◊Ó¥Û√Ò–ƒ∂»$/;"	m	struct:stReturnCountryTax::CityInfo
maxMx	tmpcode/commond.h	/^	DWORD  maxMx;\/\/◊Ó∏ﬂ√Ò–ƒ$/;"	m	struct:CityInfo
maxNum	tmpcode/commond.h	/^		BYTE	maxNum;$/;"	m	struct:stNpcUpgradePropertyUserCmd
maxNum	tmpcode/commond.h	/^	BYTE maxNum;  \/\/º“◊Â◊Ó¥Û»À ˝$/;"	m	struct:SeptNotice
maxNum	tmpcode/commond.h	/^	DWORD maxNum;$/;"	m	struct:stRetCriminalApplyInfo
maxNum	tmpcode/commond.h	/^    BYTE maxNum;		\/\/◊Ó¥Û»À ˝$/;"	m	struct:__anon355
maxProductStore	tmpcode/commond.h	/^	DWORD maxProductStore;          \/\/\/ ≥…∆∑◊Ó¥Ûø‚¥Ê$/;"	m	struct:resourceRefine
maxProtion	tmpcode/commond.h	/^        BYTE maxProtion; \/\/Ω®…Ë∑—ø…µ˜Ω⁄◊Ó¥Û±»¿˝$/;"	m	struct:stRtEarningInfoUnionCmd
maxSamplePPS	GatewayServer/GatewayTask.h	/^	static const DWORD maxSamplePPS = 145;$/;"	m	class:GatewayTask
maxScore	tmpcode/commond.h	/^	DWORD maxScore;\/\/◊Ó∏ﬂµ√∑÷£¨ªÚ’ﬂπ÷ŒÔÃ”≈‹ ˝¡ø$/;"	m	struct:Score_Exp
maxSeqKill	tmpcode/commond.h	/^		WORD    maxSeqKill;                             \/\/◊Ó∏ﬂ¡¨ª˜ ˝$/;"	m	struct:stRetSeqKillListZhenxuanUserCmd::SeqKillData
maxSeqKillNums	tmpcode/commond.h	/^		WORD    maxSeqKillNums;       \/\/¡¨ª˜  $/;"	m	struct:stReturnScoreListWeekendZhenxuanUserCmd::PlayerScore
maxSeqWinTimes	tmpcode/commond.h	/^	BYTE maxSeqWinTimes;    \/\/◊Ó¥Û¡¨ §¥Œ ˝$/;"	m	struct:t_DragonData
maxSize	base/zSocket.h	/^	inline DWORD maxSize() const$/;"	f	class:ByteBuffer
maxSp	base/Command.h	/^  DWORD maxSp;      \/\/ÊúÄÂ§ßÁ≤æÊ∞îÂÄº$/;"	m	struct:Cmd::t_CartoonData
maxSpiritValue	tmpcode/commond.h	/^	DWORD	maxSpiritValue;                \/\/¡È∆¯◊‹÷µ$/;"	m	struct:HomeMapData
maxSpiritValue	tmpcode/commond.h	/^	DWORD maxSpiritValue;            $/;"	m	struct:stModifyHomeDataUserCmd
maxThreadCount	base/zTCPTaskPool.h	/^	int maxThreadCount;                    \/**< œﬂ≥Ã≥ÿ÷–Õ¨ ±¥Ê‘⁄÷˜¥¶¿Ìœﬂ≥Ãµƒ◊Ó¥Û∏ˆ ˝ *\/$/;"	m	class:zTCPTaskPool
maxUnionBusinessCount	tmpcode/commond.h	/^	WORD maxUnionBusinessCount;             \/\/”∂±¯Õ≈◊Ó¥Û≈‹…Ã¥Œ ˝$/;"	m	struct:stGetUnionBusinessmen
maxUniqueID	ScenesServer/SceneNpc.h	/^  static const DWORD maxUniqueID = 100000;$/;"	m	class:SceneNpc
maxUniqueID	ScenesServer/Skill.h	/^  static const DWORD maxUniqueID = 100000;$/;"	m	struct:zSkill
maxVerifyThreads	base/zTCPTaskPool.h	/^	static const int maxVerifyThreads = 4;          \/**< ◊Ó¥Û—È÷§œﬂ≥Ã ˝¡ø *\/$/;"	m	class:zTCPTaskPool
max_size	base/zSocket.h	/^	DWORD max_size;$/;"	m	class:CmdBuffer_wrapper
maxatk	base/Command.h	/^	DWORD maxatk;           \/\/ÊúÄÂ§ßÊîªÂáªÂäõ$/;"	m	struct:Cmd::t_PetData
maxatk	tmpcode/commond.h	/^	DWORD maxatk;           \/\/◊Ó¥Ûπ•ª˜¡¶$/;"	m	struct:t_PetData
maxatk_plus	base/Command.h	/^	WORD maxatk_plus;       \/\/ÈôÑÂä†ÊúÄÂ§ßÁâ©ÁêÜÊîªÂáªÂäõ$/;"	m	struct:Cmd::t_PetData
maxatk_plus	tmpcode/commond.h	/^	WORD maxatk_plus;       \/\/∏Ωº”◊Ó¥ÛŒÔ¿Ìπ•ª˜¡¶$/;"	m	struct:t_PetData
maxattack	ScenesServer/SceneEntryPk.h	/^    bool maxattack;    \/\/\/ ÊîªÂáªÂèñ‰∏äÈôê$/;"	m	struct:SceneEntryPk
maxcmds	ScenesServer/scriptTickTask.h	/^	static const unsigned int maxcmds = 100;$/;"	m	class:scriptMessageFilter
maxdamage	base/zDatabase.h	/^    DWORD  maxdamage;      \/\/ ◊Ó¥Ûπ•ª˜¡¶$/;"	m	struct:zNpcB
maxdur	base/Card.h	/^	DWORD maxdur;		    \/\/ƒÕæ√∂»…œœﬁ$/;"	m	struct:t_Card
maxdur	base/Object.h	/^	DWORD maxdur; \/\/◊Ó¥ÛƒÕæ√∂»$/;"	m	struct:t_Object
maxexp	base/Command.h	/^	DWORD maxexp;           \/\/ÊúÄÂ§ßÁªèÈ™å$/;"	m	struct:Cmd::t_PetData
maxexp	tmpcode/commond.h	/^	DWORD maxexp;           \/\/◊Ó¥Ûæ≠—È$/;"	m	struct:t_PetData
maxhonor	base/CharBase.h	/^  DWORD maxhonor;        \/\/ÊúÄÂ§ßËç£Ë™âÂÄº$/;"	m	struct:CharBase
maxhonor	base/Command.h	/^  DWORD maxhonor;\/\/\/ÊúÄÂ§ßËç£Ë™âÂÄº$/;"	m	struct:Cmd::t_MainUserData
maxhonor	tmpcode/commond.h	/^	DWORD maxhonor;\/\/\/◊Ó¥Û»Ÿ”˛÷µ$/;"	m	struct:t_MainUserData
maxhp	ScenesServer/ScenePk.h	/^      SWORD maxhp;       \/\/ÁîüÂëΩÂÄºÊúÄÂ§ßÂÄºÂèòÊõ¥$/;"	m	struct:SkillState::__anon155::__anon156
maxhp	ScenesServer/zObject.h	/^  DWORD maxhp;          \/\/ ÊúÄÂ§ßÁîüÂëΩÂÄº$/;"	m	class:Equips
maxhp	base/Card.h	/^	DWORD maxhp;		    \/\/—™¡ø…œœﬁ$/;"	m	struct:t_Card
maxhp	base/CharBase.h	/^  DWORD maxhp;            \/\/\/ ÊúÄÂ§ßÁîüÂëΩÂÄº *$/;"	m	struct:CharState
maxhp	base/Command.h	/^	DWORD maxhp;            \/\/ÊúÄÂ§ßÁîüÂëΩ$/;"	m	struct:Cmd::t_PetData
maxhp	base/Command.h	/^  DWORD maxhp;          \/\/\/ ÊúÄÂ§ßÁîüÂëΩÂÄº$/;"	m	struct:Cmd::t_MainUserData
maxhp	base/Command.h	/^  DWORD maxhp;$/;"	m	struct:Cmd::t_UserData
maxhp	base/Command.h	/^  WORD maxhp;    \/\/ÊúÄÂ§ßHP$/;"	m	struct:Cmd::t_HorseData
maxhp	base/Object.h	/^	WORD maxhp;					\/\/ ◊Ó¥Û…˙√¸÷µ      \/\/ ∂‘”¶¬Ì∆• HPº”≥…$/;"	m	struct:t_Object
maxhp	base/zDatabase.h	/^    WORD maxhp;$/;"	m	struct:zObjectB
maxhp	tmpcode/commond.h	/^	DWORD   maxhp;$/;"	m	struct:t_UserData
maxhp	tmpcode/commond.h	/^	DWORD maxhp;					\/\/\/ ◊Ó¥Û…˙√¸÷µ$/;"	m	struct:t_MainUserData
maxhp	tmpcode/commond.h	/^	DWORD maxhp;            \/\/◊Ó¥Û…˙√¸$/;"	m	struct:t_PetData
maxhp	tmpcode/commond.h	/^	WORD maxhp;$/;"	m	struct:SimulateHorse
maxhp_plus	base/Command.h	/^	DWORD maxhp_plus;       \/\/ÈôÑÂä†ÊúÄÂ§ßÁîüÂëΩ$/;"	m	struct:Cmd::t_PetData
maxhp_plus	tmpcode/commond.h	/^	DWORD maxhp_plus;       \/\/∏Ωº”◊Ó¥Û…˙√¸$/;"	m	struct:t_PetData
maxhprate	ScenesServer/zObject.h	/^  BYTE maxhprate;  \/\/ÊåâÁôæÂàÜÊØîÂ¢ûÂä†ÊúÄÂ§ßhp$/;"	m	class:Equips
maxlevel	base/xmlparser/herobase.h	/^        xml_prop<WORD>	maxlevel;$/;"	m	struct:HeroBaseCFG::Exp
maxmatk	base/Command.h	/^	DWORD maxmatk;          \/\/ÊúÄÂ§ßÈ≠îÊîª$/;"	m	struct:Cmd::t_PetData
maxmatk	tmpcode/commond.h	/^	DWORD maxmatk;          \/\/◊Ó¥Ûƒßπ•$/;"	m	struct:t_PetData
maxmatk_plus	base/Command.h	/^	WORD maxmatk_plus;      \/\/ÈôÑÂä†ÊúÄÂ§ßÈ≠îÊ≥ïÊîªÂáªÂäõ$/;"	m	struct:Cmd::t_PetData
maxmatk_plus	tmpcode/commond.h	/^	WORD maxmatk_plus;      \/\/∏Ωº”◊Ó¥Ûƒß∑®π•ª˜¡¶$/;"	m	struct:t_PetData
maxmdamage	ScenesServer/zObject.h	/^  DWORD maxmdamage;      \/\/ ÊúÄÂ§ßÊ≥ïÊúØÊîªÂáªÂäõ$/;"	m	class:Equips
maxmdamage	base/CharBase.h	/^  DWORD maxmdamage;          \/\/\/ ÊúÄÂ§ßÊ≥ïÊúØÊîªÂáªÂäõ *$/;"	m	struct:CharState
maxmdamage	base/Command.h	/^  DWORD maxmdamage;        \/\/\/ ÊúÄÂ§ßÊ≥ïÊúØÊîªÂáªÂäõ$/;"	m	struct:Cmd::t_MainUserData
maxmdamage	base/Object.h	/^	WORD maxmdamage;			\/\/ ◊Ó¥Û∑® ıπ•ª˜¡¶$/;"	m	struct:t_Object
maxmdamage	base/zDatabase.h	/^    DWORD  maxmdamage;      \/\/ ◊Ó¥Û∑® ıπ•ª˜$/;"	m	struct:zNpcB
maxmdamage	base/zDatabase.h	/^    WORD maxmdamage;			\/\/ ◊Ó¥Û∑® ıπ•ª˜¡¶$/;"	m	struct:zObjectB
maxmdamage	tmpcode/commond.h	/^	DWORD maxmdamage;				\/\/\/ ◊Ó¥Û∑® ıπ•ª˜¡¶$/;"	m	struct:t_MainUserData
maxmdamage	tmpcode/commond.h	/^        DWORD maxmdamage;               \/\/\/ ◊Ó¥Û∑® ıπ•ª˜¡¶ $/;"	m	struct:stPkDataPropertyUserCmd
maxmdamage	tmpcode/commond.h	/^        DWORD maxmdamage;\/\/◊Ó¥Ûƒßπ• $/;"	m	struct:CardMainData
maxmdefence	base/zDatabase.h	/^    DWORD  maxmdefence;    \/\/ ◊Ó¥Û∑® ı∑¿”˘¡¶$/;"	m	struct:zNpcB
maxmp	ScenesServer/ChallengeGame.h	/^	DWORD maxmp;	    \/\/ƒß∑®…œœﬁ$/;"	m	class:MagicPoint
maxmp	ScenesServer/ScenePk.h	/^      SWORD maxmp;       \/\/Ê≥ïÊúØÂÄºÊúÄÂ§ßÂÄºÂèòÊõ¥$/;"	m	struct:SkillState::__anon155::__anon156
maxmp	ScenesServer/zObject.h	/^  DWORD maxmp;          \/\/ ÊúÄÂ§ßÊ≥ïÊúØÂÄº$/;"	m	class:Equips
maxmp	base/CharBase.h	/^  DWORD maxmp;            \/\/\/ ÊúÄÂ§ßÊ≥ïÊúØÂÄº *$/;"	m	struct:CharState
maxmp	base/Command.h	/^  DWORD maxmp;          \/\/\/ ÊúÄÂ§ßÊ≥ïÊúØÂÄº$/;"	m	struct:Cmd::t_MainUserData
maxmp	base/Command.h	/^  WORD maxmp;    \/\/ÊúÄÂ§ßMP$/;"	m	struct:Cmd::t_HorseData
maxmp	base/HeroCardCmd.h	/^	DWORD maxmp;$/;"	m	struct:Cmd::t_MagicPoint
maxmp	base/Object.h	/^	WORD maxmp;					\/\/ ◊Ó¥Û∑® ı÷µ      \/\/ ∂‘”¶¬Ì∆• MPº”≥…$/;"	m	struct:t_Object
maxmp	base/zDatabase.h	/^    WORD maxmp;$/;"	m	struct:zObjectB
maxmp	tmpcode/commond.h	/^	DWORD maxmp;					\/\/\/ ◊Ó¥Û∑® ı÷µ$/;"	m	struct:t_MainUserData
maxmp	tmpcode/commond.h	/^	WORD maxmp;$/;"	m	struct:SimulateHorse
maxmprate	ScenesServer/zObject.h	/^  BYTE maxmprate;  \/\/ÊåâÁôæÂàÜÊØîÂ¢ûÂä†ÊúÄÂ§ßmp$/;"	m	class:Equips
maxnum	base/zDatabase.h	/^    DWORD maxnum;$/;"	m	struct:ObjectBase
maxnum	base/zDatabase.h	/^    DWORD maxnum;$/;"	m	struct:zObjectB
maxnum	base/zDatabase.h	/^    int   maxnum;$/;"	m	struct:CarryObject
maxparas	ScenesServer/scriptTickTask.h	/^	static const unsigned int maxparas = 200;$/;"	m	class:scriptMessageFilter
maxpdamage	ScenesServer/zObject.h	/^  DWORD maxpdamage;      \/\/ ÊúÄÂ§ßÊîªÂáªÂäõ$/;"	m	class:Equips
maxpdamage	base/CharBase.h	/^  DWORD maxpdamage;          \/\/\/ ÊúÄÂ§ßÁâ©ÁêÜÊîªÂáªÂäõ *$/;"	m	struct:CharState
maxpdamage	base/Command.h	/^  DWORD maxpdamage;        \/\/\/ ÊúÄÂ§ßÁâ©ÁêÜÊîªÂáªÂäõ$/;"	m	struct:Cmd::t_MainUserData
maxpdamage	base/Object.h	/^	WORD maxpdamage;			\/\/ ◊Ó¥Ûπ•ª˜¡¶$/;"	m	struct:t_Object
maxpdamage	base/zDatabase.h	/^    WORD maxpdamage;			\/\/ ◊Ó¥Ûπ•ª˜¡¶$/;"	m	struct:zObjectB
maxpdamage	tmpcode/commond.h	/^	DWORD maxpdamage;				\/\/\/ ◊Ó¥ÛŒÔ¿Ìπ•ª˜¡¶$/;"	m	struct:t_MainUserData
maxpdamage	tmpcode/commond.h	/^        DWORD maxpdamage;               \/\/\/ ◊Ó¥ÛŒÔ¿Ìπ•ª˜¡¶ $/;"	m	struct:stPkDataPropertyUserCmd
maxpdamage	tmpcode/commond.h	/^        DWORD maxpdamage;\/\/◊Ó¥ÛŒÔπ•$/;"	m	struct:CardMainData
maxpdefence	base/zDatabase.h	/^    DWORD  maxpdefence;    \/\/ ◊Ó¥ÛŒÔ¿Ì∑¿”˘¡¶$/;"	m	struct:zNpcB
maxsp	ScenesServer/ScenePk.h	/^      SWORD maxsp;       \/\/‰ΩìÂäõÂÄºÊúÄÂ§ßÂÄºÂèòÊõ¥$/;"	m	struct:SkillState::__anon155::__anon156
maxsp	ScenesServer/zObject.h	/^  DWORD maxsp;          \/\/ ÊúÄÂ§ß‰ΩìÂäõÂÄº$/;"	m	class:Equips
maxsp	base/CharBase.h	/^  DWORD maxsp;                     \/\/\/ ÊúÄÂ§ß‰ΩìÂäõÂÄº *$/;"	m	struct:CharState
maxsp	base/Command.h	/^  DWORD maxsp;          \/\/\/ ÊúÄÂ§ß‰ΩìÂäõÂÄº$/;"	m	struct:Cmd::t_MainUserData
maxsp	base/Object.h	/^	WORD maxsp;					\/\/ ◊Ó¥ÛÃÂ¡¶÷µ	   \/\/ ∂‘”¶–ƒªÍµƒµ±«∞ƒ‹¡ø÷µ	$/;"	m	struct:t_Object
maxsp	base/zDatabase.h	/^    WORD maxsp;$/;"	m	struct:zObjectB
maxsp	tmpcode/commond.h	/^	DWORD maxsp;					\/\/\/ ◊Ó¥ÛÃÂ¡¶÷µ$/;"	m	struct:t_MainUserData
mayRush	ScenesServer/SceneNpc.h	/^  bool mayRush;$/;"	m	class:SceneNpc
mbd	base/Command.h	/^      t_MapBuildingDataPos mbd[0];$/;"	m	union:Cmd::stMapDataMapScreenUserCmd::__anon79
mbd	base/Command.h	/^      t_MapBuildingDataPos mbd[1];$/;"	m	union:Cmd::stMapDataMapScreenStateUserCmd::__anon80
mcost	ScenesServer/ScenePk.h	/^      DWORD  mcost;            \/\/\/ Ê∂àËÄóÊ≥ïÊúØÂÄº$/;"	m	struct:PkValue::__anon159::__anon160
mdam	ScenesServer/zObject.h	/^  WORD mdam;  \/\/ Â¢ûÂä†È≠îÊ≥ïÊîªÂáªÂäõ$/;"	m	class:Equips
mdam	base/Command.h	/^  BYTE mdam;    \/\/Â¢ûÂä†È≠îÊ≥ïÊîªÂáªÂäõ%$/;"	m	struct:Cmd::t_HorseData
mdam	base/Object.h	/^	WORD mdam;  \/\/ ‘ˆº”ƒß∑®π•ª˜¡¶  100◊Ó¥Û  ∞Ÿ∑÷±»$/;"	m	struct:t_Object
mdamage	ScenesServer/ScenePk.h	/^      DWORD  mdamage;          \/\/\/ Ê≥ïÊúØÊîªÂáªÂäõ *$/;"	m	struct:PkValue::__anon159::__anon160
mdamage	ScenesServer/zObject.h	/^  DWORD mdamage;        \/\/ ÊúÄÂ∞èÊ≥ïÊúØÊîªÂáªÂäõ$/;"	m	class:Equips
mdamage	base/CharBase.h	/^  DWORD mdamage;            \/\/\/ ÊúÄÂ∞èÊ≥ïÊúØÊîªÂáªÂäõ *$/;"	m	struct:CharState
mdamage	base/Command.h	/^  DWORD mdamage;          \/\/\/ ÊúÄÂ∞èÊ≥ïÊúØÊîªÂáªÂäõ$/;"	m	struct:Cmd::t_MainUserData
mdamage	base/Object.h	/^	WORD mdamage;				\/\/ ◊Ó–°∑® ıπ•ª˜¡¶  \/\/ ∂‘”¶¬Ì∆• ƒßπ•º”≥…$/;"	m	struct:t_Object
mdamage	base/zDatabase.h	/^    DWORD  mdamage;      \/\/ ◊Ó–°∑® ıπ•ª˜$/;"	m	struct:zNpcB
mdamage	base/zDatabase.h	/^    WORD mdamage;				\/\/ ◊Ó–°∑® ıπ•ª˜¡¶  \/\/ ∂‘”¶¬Ì∆• ƒßπ•º”≥…$/;"	m	struct:zObjectB
mdamage	tmpcode/commond.h	/^	DWORD mdamage;					\/\/\/ ◊Ó–°∑® ıπ•ª˜¡¶$/;"	m	struct:t_MainUserData
mdamage	tmpcode/commond.h	/^	WORD mdamage;$/;"	m	struct:SimulateHorse
mdamage	tmpcode/commond.h	/^        DWORD mdamage;                  \/\/\/ ◊Ó–°∑® ıπ•ª˜¡¶ $/;"	m	struct:stPkDataPropertyUserCmd
mdamage	tmpcode/commond.h	/^        DWORD mdamage;  \/\/◊Ó–°ƒßπ•$/;"	m	struct:CardMainData
mdamtodef	ScenesServer/ScenePk.h	/^      SWORD mdamtodef;  \/\/ È≠îÊîªËΩ¨È≠îÈò≤$/;"	m	struct:SkillState::__anon155::__anon156
mdef	ScenesServer/zObject.h	/^  WORD mdef;  \/\/ Â¢ûÂä†È≠îÊ≥ïÈò≤Âæ°Âäõ$/;"	m	class:Equips
mdef	base/Command.h	/^	DWORD mdef;             \/\/È≠îÈò≤$/;"	m	struct:Cmd::t_PetData
mdef	base/Command.h	/^  BYTE mdef;    \/\/Â¢ûÂä†È≠îÊ≥ïÈò≤Âæ°Âäõ%$/;"	m	struct:Cmd::t_HorseData
mdef	base/Object.h	/^	WORD mdef;  \/\/ ‘ˆº”ƒß∑®∑¿”˘¡¶  100◊Ó¥Û  ∞Ÿ∑÷±»$/;"	m	struct:t_Object
mdef	tmpcode/commond.h	/^			WORD mdef;	$/;"	m	struct:LingQiData::__anon321::__anon322
mdef	tmpcode/commond.h	/^			WORD mdef;	$/;"	m	struct:LingQiPkData::__anon327::__anon328
mdef	tmpcode/commond.h	/^			WORD mdef;      $/;"	m	struct:LingQiMaxCoefData::__anon331::__anon332
mdef	tmpcode/commond.h	/^			WORD mdef;      $/;"	m	struct:LingQiSimulate::__anon362::__anon363
mdef	tmpcode/commond.h	/^	DWORD mdef;             \/\/ƒß∑¿$/;"	m	struct:t_PetData
mdef_plus	base/Command.h	/^	WORD mdef_plus;         \/\/ÈôÑÂä†È≠îÈò≤$/;"	m	struct:Cmd::t_PetData
mdef_plus	tmpcode/commond.h	/^	WORD mdef_plus;         \/\/∏Ωº”ƒß∑¿$/;"	m	struct:t_PetData
mdefence	ScenesServer/ScenePk.h	/^      DWORD  mdefence;          \/\/\/ Ê≥ïÊúØÈò≤Âæ°Âäõ *$/;"	m	struct:PkValue::__anon159::__anon160
mdefence	ScenesServer/ScenePk.h	/^      SWORD mdefence;    \/\/Ê≥ïÊúØÈò≤Âæ°ÂèòÊõ¥59Ôºå             \/\/ 40$/;"	m	struct:SkillState::__anon155::__anon156
mdefence	ScenesServer/zObject.h	/^  WORD mdefence;        \/\/ È≠îÈò≤$/;"	m	class:Equips
mdefence	base/CharBase.h	/^  DWORD mdefence;            \/\/\/ Ê≥ïÊúØÈò≤Âæ°Âäõ *$/;"	m	struct:CharState
mdefence	base/Command.h	/^  DWORD mdefence;          \/\/\/ Ê≥ïÊúØÈò≤Âæ°Âäõ$/;"	m	struct:Cmd::t_MainUserData
mdefence	base/Object.h	/^	WORD mdefence;				\/\/ ƒß∑¿            \/\/ ∂‘”¶¬Ì∆• ƒß∑¿º”≥…$/;"	m	struct:t_Object
mdefence	base/zDatabase.h	/^    DWORD  mdefence;      \/\/ ◊Ó–°∑® ı∑¿”˘¡¶$/;"	m	struct:zNpcB
mdefence	base/zDatabase.h	/^    WORD mdefence;				\/\/ ƒß∑¿            \/\/ ∂‘”¶¬Ì∆• ƒß∑¿º”≥…$/;"	m	struct:zObjectB
mdefence	tmpcode/commond.h	/^	DWORD mdefence;					\/\/\/ ∑® ı∑¿”˘¡¶$/;"	m	struct:t_MainUserData
mdefence	tmpcode/commond.h	/^	WORD mdefence;$/;"	m	struct:SimulateHorse
mdefence	tmpcode/commond.h	/^        DWORD mdefence;                 \/\/\/ ∑® ı∑¿”˘¡¶ $/;"	m	struct:stPkDataPropertyUserCmd
mdefence	tmpcode/commond.h	/^        DWORD mdefence; \/\/ƒß∑¿$/;"	m	struct:CardMainData
mdefencep	ScenesServer/ScenePk.h	/^      SWORD mdefencep;  \/\/Ê≥ïÊúØÈò≤Âæ°ÂèòÊõ¥ÁôæÂàÜÊØîx%$/;"	m	struct:SkillState::__anon155::__anon156
mdeftodam	ScenesServer/ScenePk.h	/^      SWORD mdeftodam;  \/\/ È≠îÈò≤ËΩ¨È≠îÊîª$/;"	m	struct:SkillState::__anon155::__anon156
mdeftozero	ScenesServer/SceneEntryPk.h	/^    bool mdeftozero;   \/\/\/ È≠îÊ≥ïÈò≤Âæ°ÂèòÊàê0$/;"	m	struct:SceneEntryPk
mdih	base/Command.h	/^    MapData_ItemHeader mdih;$/;"	m	struct:Cmd::stMapDataMapScreenUserCmd
mdih	tmpcode/commond.h	/^	MapData_ItemHeader mdih;$/;"	m	struct:stMapDataMapScreenUserCmd
mdmtomp	ScenesServer/SceneEntryPk.h	/^    BYTE mdmtomp;  \/\/\/Â∞ÜÊ≥ïÊúØ‰º§ÂÆ≥ËΩ¨ÊàêÈ≠îÊ≥ïÂÄºÁôæÂàÜÊØî$/;"	m	struct:SceneEntryPk
mdmtompper	ScenesServer/SceneEntryPk.h	/^    BYTE mdmtompper; \/\/\/Â∞ÜÊ≥ïÊúØ‰º§ÂÆ≥ËΩ¨ÊàêÈ≠îÊ≥ïÂÄºÁôæÂàÜÊØîÂá†Áéá$/;"	m	struct:SceneEntryPk
me	ScenesServer/Scene.cpp	/^  const zSceneEntry *me;$/;"	m	struct:SendToEveryOneExceptMe
me	ScenesServer/script_func.cpp	/^SceneUser* me()$/;"	f
me	base/zDatabaseManager.h	/^	static zDataBM<data,datafile> *me;$/;"	m	class:zDataBM
medal	tmpcode/commond.h	/^    DWORD medal;\/\/—´’¬$/;"	m	struct:kingAchievement
meetingID	tmpcode/commond.h	/^        BYTE meetingID;$/;"	m	struct:stUnionMerchMeetingOp
meetingID	tmpcode/commond.h	/^        BYTE meetingID;$/;"	m	struct:stUnionShopMeetigInfo
meetingID	tmpcode/commond.h	/^        DWORD meetingID;$/;"	m	struct:stReqMerchMeetingInfo
memCount	tmpcode/commond.h	/^	BYTE memCount;	\/\/∑øº‰ƒ⁄»À ˝$/;"	m	struct:RoomInfo
memCount	tmpcode/commond.h	/^    BYTE memCount;                  \/\/∑øº‰ƒ⁄≥…‘±»À ˝$/;"	m	struct:stOneRoomAllInfoQuestRoomUserCmd
memCountOfAutoStart	tmpcode/commond.h	/^	BYTE memCountOfAutoStart;	\/\/◊‘∂Øø™∆Ùµƒ»À ˝œﬁ÷∆$/;"	m	struct:RoomInfo
memCountOfAutoStart	tmpcode/commond.h	/^    BYTE memCountOfAutoStart;       \/\/◊‘∂Øø™∆Ùµƒ»À ˝œﬁ÷∆$/;"	m	struct:stOneRoomAllInfoQuestRoomUserCmd
memCountOfAutoStart	tmpcode/commond.h	/^    BYTE memCountOfAutoStart;       \/\/◊‘∂Øø™∆ÙªÓ∂Øµƒ»À ˝$/;"	m	struct:stCreateQuestRoomUserCmd
memCountTip	tmpcode/commond.h	/^    BYTE memCountTip;               \/\/Ã· æµƒ»À ˝œﬁ÷∆$/;"	m	struct:stCreateQuestRoomUserCmd
memCountTip	tmpcode/commond.h	/^    BYTE memCountTip;               \/\/Ã· æµƒ»À ˝œﬁ÷∆$/;"	m	struct:stOneRoomAllInfoQuestRoomUserCmd
memInfo	tmpcode/commond.h	/^    char memInfo[0];                \/\/∏Ò Ω»Á"√˚◊÷£∫÷∞“µ±‡∫≈£ª..."$/;"	m	struct:stOneRoomAllInfoQuestRoomUserCmd
memLevel	tmpcode/commond.h	/^	WORD memLevel;                          \/\/’– ’∂”‘±µ»º∂$/;"	m	struct:teamRecruitInfo
memName	tmpcode/commond.h	/^	char memName[MAX_NAMESIZE];	\/\/≥…‘±√˚≥∆$/;"	m	struct:stChangeMemQuestRoomUserCmd
memName	tmpcode/commond.h	/^	char memName[MAX_NAMESIZE];$/;"	m	struct:stKickMemQuestRoomUserCmd
memNum	tmpcode/commond.h	/^		WORD memNum;$/;"	m	struct:stSendScoreSeptPopoUserCmd::stPopoInfo
member	base/Command.h	/^  stRelation member[0];$/;"	m	struct:Cmd::stSendRelationListCmd
member	base/SessionCommand.h	/^      SeptDef::stSeptMemberInfo member;$/;"	m	struct:Cmd::Session::t_addSeptMember_SceneSession
member	base/SessionCommand.h	/^      UnionDef::stUnionMemberInfo member;$/;"	m	struct:Cmd::Session::t_addUnionMember_SceneSession
member	base/xml/xml_parser_generator.h	/^	std::string member;$/;"	m	class:xml_prop_parser_generator
member	tmpcode/commond.h	/^	 stTeamUserInfo member[0];$/;"	m	struct:stRetTeamInfoCmd
member	tmpcode/commond.h	/^	 stTeamUserInfo member[6];$/;"	m	struct:stRetTeamInfo_Client
member	tmpcode/commond.h	/^	attGuardNpcRecordofSept member[0];$/;"	m	struct:stReturnAttGuardNpc
member	tmpcode/commond.h	/^	stRelation member[0];$/;"	m	struct:stGetRelationListCmd
memberAliasName	base/Command.h	/^  char memberAliasName[MAX_NAMESIZE];      \/\/ ÊóèÂëòÂà´Âêç$/;"	m	struct:Cmd::stSeptRember
memberCount	tmpcode/commond.h	/^	BYTE memberCount;\/\/µ±«∞»Î◊°”√ªß ˝¡ø$/;"	m	struct:rt_memberListHouseUserCmd
memberID	base/Command.h	/^  DWORD memberID;                   \/\/ Ë¢´ÈÇÄËØ∑‰∫∫ID$/;"	m	struct:Cmd::stAddMemberToSeptCmd
memberID	base/Command.h	/^  DWORD memberID;                   \/\/ Ë¢´ÈÇÄËØ∑‰∫∫ID$/;"	m	struct:Cmd::stAddMemberToUnionCmd
memberID	tmpcode/commond.h	/^	DWORD memberID;                   \/\/ ±ª—˚«Î»ÀID$/;"	m	struct:stAddMemberToSeptCmd
memberID	tmpcode/commond.h	/^	DWORD memberID;                   \/\/ ±ª—˚«Î»ÀID$/;"	m	struct:stAddMemberToUnionCmd
memberList	base/Command.h	/^  stSeptRember memberList[0];   \/\/ ÊàêÂëòÂàóË°®$/;"	m	struct:Cmd::stAllSeptMemberCmd
memberList	base/Command.h	/^  stUnionRember memberList[0];   \/\/ ÊàêÂëòÂàóË°®$/;"	m	struct:Cmd::stAllUnionMemberCmd
memberList	tmpcode/commond.h	/^	RoomMemberInfo memberList[0];\/\/»Î◊°”√ªß–≈œ¢$/;"	m	struct:rt_memberListHouseUserCmd
memberList	tmpcode/commond.h	/^	stSeptRember memberList[0];   \/\/ ≥…‘±¡–±Ì$/;"	m	struct:stAllSeptMemberCmd
memberList	tmpcode/commond.h	/^	stUnionRember memberList[0];   \/\/ ≥…‘±¡–±Ì$/;"	m	struct:stAllUnionMemberCmd
memberName	base/Command.h	/^  char   memberName[MAX_NAMESIZE];   \/\/ Ë¢´ÈÇÄËØ∑ÁöÑ‰∫∫$/;"	m	struct:Cmd::stAddMemberToSeptCmd
memberName	base/Command.h	/^  char   memberName[MAX_NAMESIZE];   \/\/ Ë¢´ÈÇÄËØ∑ÁöÑ‰∫∫$/;"	m	struct:Cmd::stAddMemberToUnionCmd
memberName	base/Command.h	/^  char  memberName[MAX_NAMESIZE];        \/\/ ÂÆ∂ÊóèÊàêÂëòÂêçÁß∞$/;"	m	struct:Cmd::stSeptRember
memberName	base/Command.h	/^  char  memberName[MAX_NAMESIZE];      \/\/ Â∏Æ‰ºöÊàêÂëòÂêçÁß∞$/;"	m	struct:Cmd::stUnionRember
memberName	base/Command.h	/^  char memberName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stFireMemberFromSeptCmd
memberName	base/Command.h	/^  char memberName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stFireMemberFromUnionCmd
memberName	tmpcode/commond.h	/^	char 	memberName[MAX_NAMESIZE];   \/\/ ±ª—˚«Îµƒ»À$/;"	m	struct:stAddMemberToSeptCmd
memberName	tmpcode/commond.h	/^	char 	memberName[MAX_NAMESIZE];   \/\/ ±ª—˚«Îµƒ»À$/;"	m	struct:stAddMemberToUnionCmd
memberName	tmpcode/commond.h	/^	char  memberName[MAX_NAMESIZE];                         \/\/ º“◊Â≥…‘±√˚≥∆$/;"	m	struct:stSeptRember
memberName	tmpcode/commond.h	/^	char memberName[MAX_NAMESIZE+1];$/;"	m	struct:t_NeedMasterAffrimJoin
memberName	tmpcode/commond.h	/^	char memberName[MAX_NAMESIZE];  \/\/Õ≈‘±√˚◊÷$/;"	m	struct:stAddUnionMemberRank
memberName	tmpcode/commond.h	/^	char memberName[MAX_NAMESIZE];$/;"	m	struct:stFireMemberFromSeptCmd
memberName	tmpcode/commond.h	/^	char memberName[MAX_NAMESIZE];$/;"	m	struct:stFireMemberFromUnionCmd
memberName	tmpcode/commond.h	/^        char  memberName[MAX_NAMESIZE];                 \/\/ ”∂±¯Õ≈≥…‘±√˚≥∆$/;"	m	struct:stUnionRember
memberPos	base/Command.h	/^  stTeamMemberPosition memberPos[0];$/;"	m	struct:Cmd::stReturnTeamMemberPosition
memberPos	tmpcode/commond.h	/^	stTeamMemberPosition memberPos[0];$/;"	m	struct:stReturnTeamMemberPosition
memberlist	base/SessionCommand.h	/^      stRequestReturnMember memberlist[0];  \/\/ Âõ¢ÈòüÂàóË°®$/;"	m	struct:Cmd::Session::t_ReturnFriendDegree_SceneSession
membername	base/xml/xml_parser_generator.h	/^	std::string membername;$/;"	m	class:xml_node_parser_generator
men	base/Command.h	/^	DWORD men;               \/\/Á≤æÁ•û$/;"	m	struct:Cmd::t_PetData
men	base/Command.h	/^  WORD men;    \/\/Á≤æÁ•û$/;"	m	struct:Cmd::t_HorseData
men	base/zDatabase.h	/^    DWORD   men;        \/\/ æ´…Ò$/;"	m	struct:zNpcB
men	tmpcode/commond.h	/^	WORD men;               \/\/æ´…Ò$/;"	m	struct:t_PetData
menu	ScenesServer/NpcTrade.h	/^      char menu[6144];    \/\/\/ËèúÂçïÂÜÖÂÆπ$/;"	m	struct:NpcTrade::NpcDialog
menuTxt	base/Command.h	/^  char menuTxt[1];$/;"	m	struct:Cmd::stVisitNpcTradeUserCmd
menuTxt	tmpcode/commond.h	/^	char menuTxt[1];$/;"	m	struct:stListQuestTradeUserCmd
menuTxt	tmpcode/commond.h	/^	char menuTxt[1];$/;"	m	struct:stVisitNpcTradeUserCmd
merceeedddddddd	base/Command.h	/^  BYTE merceeedddddddd;$/;"	m	struct:Cmd::t_MainUserData
mercenarystate	tmpcode/commond.h	/^	BYTE  mercenarystate;\/\/πÕ”∂æ¸±‡∫≈0±Ì æŒﬁπÕ”∂æ¸£¨1-50±Ì æπÕ”∂æ¸±‡∫≈$/;"	m	struct:st_CharShow2
mercenarystate	tmpcode/commond.h	/^	BYTE  mercenarystate;\/\/πÕ”∂æ¸±‡∫≈0±Ì æŒﬁπÕ”∂æ¸£¨1-50±Ì æπÕ”∂æ¸±‡∫≈$/;"	m	struct:t_MainUserData
mercenarystate	tmpcode/commond.h	/^	BYTE  mercenarystate;\/\/πÕ”∂æ¸±‡∫≈0±Ì æŒﬁπÕ”∂æ¸£¨1-50±Ì æπÕ”∂æ¸±‡∫≈$/;"	m	struct:t_UserData
merch	tmpcode/commond.h	/^		stMerchInfo merch[0];$/;"	m	struct:stNewUnionMerchListInfo
merch	tmpcode/commond.h	/^        stMerchInfo merch[0];$/;"	m	struct:stUnionMerchListInfo
merchText	tmpcode/commond.h	/^        char merchText[MAX_ADVERT_SIZE];$/;"	m	struct:stSendMerchAdvertInfo
mergeTeam	tmpcode/commond.h	/^	}mergeTeam[0];$/;"	m	struct:stReturnMergeServerTeamUserCmd	typeref:struct:stReturnMergeServerTeamUserCmd::MergeTeam
merge_version	GatewayServer/GatewayServer.cpp	/^DWORD merge_version = 0;$/;"	v
mergeskills	tmpcode/commond.h	/^	}mergeskills[0];$/;"	m	struct:stMergeLingQiUserCmd	typeref:struct:stMergeLingQiUserCmd::lingQiSkillsMerge
message	base/zLogger.h	/^	char message[MSGBUF_MAX];$/;"	m	class:zLogger
message	tmpcode/commond.h	/^	char message[MAX_CHATINFO];$/;"	m	struct:stChatGm
message	tmpcode/commond.h	/^	char message[MAX_CHATINFO];$/;"	m	struct:stSendQuestionGm
messageOrder	ScenesServer/SceneUser.h	/^    int messageOrder;          \/\/\/Áî®Êà∑‰∏ä‰∏ÄÊ¨°Êî∂Âà∞ÁöÑMessageÈ°∫Â∫è$/;"	m	struct:SceneUser
metaData	BillServer/BillServer.cpp	/^DBMetaData* BillService::metaData = NULL;$/;"	m	class:BillService
metaData	BillServer/BillServer.h	/^                static DBMetaData* metaData;    $/;"	m	class:BillService
metaData	FLServer/FLServer.cpp	/^DBMetaData * FLService::metaData = NULL;$/;"	m	class:FLService
metaData	FLServer/FLServer.h	/^	static DBMetaData* metaData;$/;"	m	class:FLService
metaData	SessionServer/SessionServer.cpp	/^DBMetaData* SessionService::metaData = NULL;$/;"	m	class:SessionService
metaData	SessionServer/SessionServer.h	/^    static DBMetaData* metaData;$/;"	m	class:SessionService
method	base/Command.h	/^  DWORD method;\/\/Â§ÑÁΩöÊñπÂºè 1:Á¶ÅË®Ä 2:ÂÖ≥ÁõëÁã±$/;"	m	struct:Cmd::stEmperorPunishCountryCmd
method	base/Command.h	/^  DWORD method;\/\/Â§ÑÁΩöÊñπÂºè 1:Á¶ÅË®Ä 2:ÂÖ≥ÁõëÁã±$/;"	m	struct:Cmd::stKingPunishCountryCmd
method	base/EncDec/EncDec.h	/^  encMethod method;$/;"	m	class:CEncrypt
method	base/SessionCommand.h	/^      DWORD method;\/\/Â§ÑÁΩöÊñπÂºè 1Á¶ÅË®Ä 2ÂÖ≥ÁõëÁã±$/;"	m	struct:Cmd::Session::t_countryPunishUser_SceneSession
method	base/SessionCommand.h	/^      DWORD method;\/\/Â§ÑÁΩöÊñπÂºè 1Á¶ÅË®Ä 2ÂÖ≥ÁõëÁã±$/;"	m	struct:Cmd::Session::t_emperorPunishUser_SceneSession
method	tmpcode/commond.h	/^	DWORD method;\/\/¥¶∑£∑Ω Ω 1:Ω˚—‘ 2:πÿº‡”¸$/;"	m	struct:stKingPunishCountryCmd
mf	ScenesServer/zObject.h	/^  BYTE mf; \/\/Â¢ûÂä†ÊéâÂÆùÁéáx%$/;"	m	class:Equips
mgspeed	ScenesServer/ScenePk.h	/^      SWORD mgspeed;    \/\/ÂáèÂ∞ëÊäÄËÉΩÊñΩÊîæÈó¥Èöî17$/;"	m	struct:SkillState::__anon155::__anon156
mhpd	ScenesServer/SceneEntryPk.h	/^    bool mhpd;  \/\/\/ È≠îÊ≥ï‰º§ÂÆ≥ÂáèÂçä,Áâ©ÁêÜ‰º§ÂÆ≥Âä†ÂÄçÊ†áÂøó„ÄÇ$/;"	m	struct:SceneEntryPk
midu	tmpcode/commond.h	/^	DWORD midu;$/;"	m	struct:stRetCanSetfree
midu	tmpcode/commond.h	/^	DWORD midu;$/;"	m	struct:stReturnFarmIntroduce
min	base/zDatabase.h	/^	BYTE min;$/;"	m	struct:zObjectB::socket
min	tmpcode/commond.h	/^	DWORD min;$/;"	m	struct:rtConsumeHappyCardBoxUserCmd
minGold	base/Command.h	/^  DWORD minGold;$/;"	m	struct:Cmd::stAddListAuction
minGold	base/Command.h	/^  DWORD minGold;$/;"	m	struct:Cmd::stSaleAuction
minGold	base/SessionCommand.h	/^      DWORD minGold;$/;"	m	struct:Cmd::Session::auctionInfo
minGold	tmpcode/commond.h	/^        DWORD minGold;$/;"	m	struct:stAddListAuction
minGold	tmpcode/commond.h	/^        DWORD minGold;$/;"	m	struct:stSaleAuction
minID	base/zUniqueID.h	/^	T minID;$/;"	m	class:zUniqueID
minLevel	tmpcode/commond.h	/^	WORD minLevel;                          \/\/µ»º∂$/;"	m	struct:stSendCountryInviteQuestRoomUserCmd
minLevel	tmpcode/commond.h	/^    WORD minLevel;                          \/\/µ»º∂  $/;"	m	struct:stInviteQuestRoomUserCmd
minLevel	tmpcode/commond.h	/^    WORD minLevel;                          \/\/µ»º∂$/;"	m	struct:LinkInfo
minMemCount	tmpcode/commond.h	/^    BYTE minMemCount;       \/\/◊Ó–°»À ˝$/;"	m	struct:stNotifyLevelFormQuestRoomUserCmd
minMoney	base/Command.h	/^  DWORD minMoney;$/;"	m	struct:Cmd::stAddListAuction
minMoney	base/Command.h	/^  DWORD minMoney;$/;"	m	struct:Cmd::stSaleAuction
minMoney	base/SessionCommand.h	/^      DWORD minMoney;$/;"	m	struct:Cmd::Session::auctionInfo
minMoney	tmpcode/commond.h	/^        DWORD minMoney;$/;"	m	struct:stAddListAuction
minMoney	tmpcode/commond.h	/^        DWORD minMoney;$/;"	m	struct:stSaleAuction
minProtion	tmpcode/commond.h	/^        BYTE minProtion; \/\/Ω®…Ë∑—◊Ó–°±»¿˝$/;"	m	struct:stRtEarningInfoUnionCmd
minScore	tmpcode/commond.h	/^	DWORD minScore;\/\/◊ÓµÕµ√∑÷£¨ªÚ’ﬂπ÷ŒÔÃ”≈‹ ˝¡ø$/;"	m	struct:Score_Exp
minThreadCount	base/zTCPTaskPool.h	/^	static const int minThreadCount = 1;          \/**< œﬂ≥Ã≥ÿ÷–Õ¨ ±¥Ê‘⁄÷˜¥¶¿Ìœﬂ≥Ãµƒ◊Ó…Ÿ∏ˆ ˝ *\/$/;"	m	class:zTCPTaskPool
mine	base/Command.h	/^  bool mine;\/\/ÊòØÂê¶ÊàëÁöÑ‰ª∑Ê†ºÊúÄÈ´ò$/;"	m	struct:Cmd::stAddListAuction
mine	tmpcode/commond.h	/^        bool mine;                      \/\/ «∑Ò◊‘º∫≈ƒ¬ÙµƒŒÔ∆∑$/;"	m	struct:stAddListAuction
mingXing	tmpcode/commond.h	/^    DWORD mingXing;     \/\/√Ò–ƒ$/;"	m	struct:CityInfo
miniClient	GatewayServer/MiniClient.cpp	/^MiniClient *miniClient = NULL;$/;"	v
miniClient	ScenesServer/MiniClient.cpp	/^MiniClient *miniClient = NULL;$/;"	v
minnum	base/zDatabase.h	/^    int   minnum;$/;"	m	struct:CarryObject
minxin	tmpcode/commond.h	/^		DWORD minxin;               \/\/√Ò–ƒ$/;"	m	struct:stReturnCountryTax::CityInfo
minxin	tmpcode/commond.h	/^	DWORD minxin; $/;"	m	struct:stRefreshCityMoneyCmd
mlock	BillServer/BillCache.h	/^    zMutex mlock;$/;"	m	class:BillCache
mlock	BillServer/BillManager.h	/^    zMutex mlock;$/;"	m	class:BillManager
mlock	BillServer/BillSessionManager.h	/^    zMutex mlock;$/;"	m	class:BillSessionManager
mlock	BillServer/BillTask.h	/^    zMutex mlock;$/;"	m	class:BillTask
mlock	FLServer/GYListManager.h	/^	zMutex mlock;$/;"	m	class:GYListManager
mlock	FLServer/LoginManager.h	/^	zMutex mlock;$/;"	m	class:LoginManager
mlock	FLServer/ServerManager.h	/^	zMutex mlock;$/;"	m	class:ServerManager
mlock	GatewayServer/GateUserManager.h	/^	zMutex mlock;$/;"	m	class:GateUserManager
mlock	GatewayServer/LoginSessionManager.h	/^	zMutex mlock;$/;"	m	class:LoginSessionManager
mlock	GatewayServer/SceneClient.h	/^	zMutex mlock;$/;"	m	class:SceneClient
mlock	RecordServer/RecordSessionManager.h	/^    zMutex mlock;$/;"	m	class:RecordSessionManager
mlock	ScenesServer/CardManager.h	/^    zMutex mlock;$/;"	m	class:GlobalCardIndex
mlock	ScenesServer/Chat.h	/^                zMutex mlock;$/;"	m	class:ChannelM
mlock	ScenesServer/ObjectManager.h	/^    zMutex mlock;$/;"	m	class:GlobalObjectIndex
mlock	SessionServer/TempArchive.h	/^    zMutex mlock;$/;"	m	class:GlobalTempArchiveIndex
mlock	SuperServer/RoleregCache.cpp	/^	zMutex mlock;$/;"	m	class:RoleDataContainer
mlock	SuperServer/RoleregCache.h	/^    zMutex mlock;$/;"	m	class:RoleregCache
mlock	base/zMTCPServer.h	/^	zMutex mlock;$/;"	m	class:zMTCPServer
mlock	base/zMutex.h	/^	zMutex &mlock;$/;"	m	class:zMutex_scope_lock
mlock	base/zSubNetService.h	/^	zMutex mlock;                    \/**< ÂÖ≥ËÅîÊúçÂä°Âô®‰ø°ÊÅØÂàóË°®ËÆøÈóÆ‰∫íÊñ•‰Ωì *\/$/;"	m	class:zSubNetService
mlock	base/zTCPClientTaskPool.h	/^	zMutex mlock;          \/**< ª•≥‚±‰¡ø *\/$/;"	m	class:zTCPClientTaskPool
mlock	base/zThread.h	/^	zMutex mlock;          \/**< ‰∫íÊñ•ÈîÅ *\/$/;"	m	class:zThread
mlock	base/zUser.h	/^	zMutex mlock;$/;"	m	struct:zUser
mnd	base/Command.h	/^      t_MapNpcDataPos mnd[0];$/;"	m	union:Cmd::stMapDataMapScreenUserCmd::__anon79
mnd	base/Command.h	/^      t_MapNpcDataPosState mnd[1];$/;"	m	union:Cmd::stMapDataMapScreenStateUserCmd::__anon80
mnd	tmpcode/commond.h	/^		t_MapNpcDataPos mnd[0];\/\/npc$/;"	m	union:stMapDataMapScreenUserCmd::__anon225
mobKill	tmpcode/commond.h	/^    DWORD mobKill;\/\/…±π÷$/;"	m	struct:kingAchievement
mobileAccount	base/zType.h	/^  char mobileAccount[48];$/;"	m	struct:t_NewLoginSession
mode	base/Command.h	/^  petAIMode mode;$/;"	m	struct:Cmd::stSetAIPetCmd
mode	base/zDatabase.h	/^	    WORD mode;\/\/∑…––ƒ£ Ω$/;"	m	struct:SkillStatus::__anon36::__anon37
mode	tmpcode/commond.h	/^	BYTE mode; \/\/≤÷ø‚ƒ£ Ω(0 ◊Â≥§÷∏∂®»°≥ˆ 1 À˘”–»ÀÀÊ“‚»°≥ˆ)$/;"	m	struct:stChangeSeptStoreModeCmd
mode	tmpcode/commond.h	/^	BYTE mode;$/;"	m	struct:stSetSkillModeCmd
mode	tmpcode/commond.h	/^	BYTE mode;\/\/¥´ÀÕƒ£ Ωmode=0∏ˆ»À¥´ÀÕ£¨1-◊È∂”¥´ÀÕ$/;"	m	struct:req_TransmitHouseUserCmd
mode	tmpcode/commond.h	/^	BYTE mode;\/\/÷µŒ™0-»´≤øƒ¨»œƒ£ Ω  µ⁄0Œª-Œª÷√…Ë∂®£ªµ⁄1Œª-øÌ∂»…Ë∂®£ªµ⁄2Œª-…Ë∂®close£ªµ⁄3Œª-‘ˆº”≥¨¡¨Ω”$/;"	m	struct:rtPictureHelpUserCmd
mode	tmpcode/commond.h	/^	petAIMode mode;         $/;"	m	struct:stSetAIPetCmd
model	base/Command.h	/^  DWORD model[16];$/;"	m	struct:Cmd::t_MainUserData
model	base/Command.h	/^  DWORD model[16];$/;"	m	struct:Cmd::t_UserData
model	tmpcode/commond.h	/^		DWORD model;					\/\/Ω®÷˛ÕÍ’˚µƒmodelID$/;"	m	struct:stRetUnionBuildInfo::__anon269
model	tmpcode/commond.h	/^		DWORD model;$/;"	m	struct:stMapBuildMapScreenUserCmd::stBuildData
model	tmpcode/commond.h	/^	  DWORD   model[MAX_MODELSIZE];$/;"	m	struct:st_WatchPlayer
model	tmpcode/commond.h	/^	DWORD   model[MAX_MODELSIZE];$/;"	m	struct:st_CharShow2
model	tmpcode/commond.h	/^	DWORD   model[MAX_MODELSIZE];$/;"	m	struct:t_MainUserData
model	tmpcode/commond.h	/^	DWORD   model[MAX_MODELSIZE];$/;"	m	struct:t_UserData
model	tmpcode/commond.h	/^	DWORD model;$/;"	m	struct:stAddMapBuildAndPosMapScreenUserCmd
model	tmpcode/commond.h	/^	DWORD model;$/;"	m	struct:stUnionUpBuild
model	tmpcode/commond.h	/^	QWORD model; \/\/ƒ£–Õ$/;"	m	struct:LingQiData
model	tmpcode/commond.h	/^        DWORD  model[MAX_MODELSIZE];$/;"	m	struct:stShowEquipUserPropertyUserCmd
model	tmpcode/commond.h	/^    DWORD   model;  $/;"	m	struct:stUserModelCmd
model	tmpcode/commond.h	/^    DWORD   model[MAX_MODELSIZE];$/;"	m	struct:stUserFullModelCmd
model	tmpcode/commond.h	/^    QWORD model; \/\/ƒ£–Õ$/;"	m	struct:LingQiWatchData
model1	base/Command.h	/^    DWORD model1;$/;"	m	struct:Cmd::SelectUserInfo
model10	base/Command.h	/^    DWORD model10;$/;"	m	struct:Cmd::SelectUserInfo
model11	base/Command.h	/^    DWORD model11;$/;"	m	struct:Cmd::SelectUserInfo
model12	base/Command.h	/^    DWORD model12;$/;"	m	struct:Cmd::SelectUserInfo
model13	base/Command.h	/^    DWORD model13;$/;"	m	struct:Cmd::SelectUserInfo
model14	base/Command.h	/^    DWORD model14;$/;"	m	struct:Cmd::SelectUserInfo
model15	base/Command.h	/^    DWORD model15;$/;"	m	struct:Cmd::SelectUserInfo
model16	base/Command.h	/^    DWORD model16;$/;"	m	struct:Cmd::SelectUserInfo
model2	base/Command.h	/^    DWORD model2;$/;"	m	struct:Cmd::SelectUserInfo
model3	base/Command.h	/^    DWORD model3;$/;"	m	struct:Cmd::SelectUserInfo
model4	base/Command.h	/^    DWORD model4;$/;"	m	struct:Cmd::SelectUserInfo
model5	base/Command.h	/^    DWORD model5;$/;"	m	struct:Cmd::SelectUserInfo
model6	base/Command.h	/^    DWORD model6;$/;"	m	struct:Cmd::SelectUserInfo
model7	base/Command.h	/^    DWORD model7;$/;"	m	struct:Cmd::SelectUserInfo
model8	base/Command.h	/^    DWORD model8;$/;"	m	struct:Cmd::SelectUserInfo
model9	base/Command.h	/^    DWORD model9;$/;"	m	struct:Cmd::SelectUserInfo
modelFaxing	tmpcode/commond.h	/^	DWORD modelFaxing;$/;"	m	struct:SelectUserInfo
modelGujia	tmpcode/commond.h	/^	DWORD modelGujia;$/;"	m	struct:SelectUserInfo
modelId	tmpcode/commond.h	/^		DWORD modelId;       \/\/ƒ£–Õid$/;"	m	struct:stRet32NameListUserCmd::__anon373
modelJianyou	tmpcode/commond.h	/^	DWORD modelJianyou;$/;"	m	struct:SelectUserInfo
modelJianzuo	tmpcode/commond.h	/^	DWORD modelJianzuo;$/;"	m	struct:SelectUserInfo
modelJiaobu	tmpcode/commond.h	/^	DWORD modelJiaobu;$/;"	m	struct:SelectUserInfo
modelKuzi	tmpcode/commond.h	/^	DWORD modelKuzi;$/;"	m	struct:SelectUserInfo
modelPifeng	tmpcode/commond.h	/^	DWORD modelPifeng;$/;"	m	struct:SelectUserInfo
modelQicheng1	tmpcode/commond.h	/^	DWORD modelQicheng1;$/;"	m	struct:SelectUserInfo
modelQicheng2	tmpcode/commond.h	/^	DWORD modelQicheng2;$/;"	m	struct:SelectUserInfo
modelShoubu	tmpcode/commond.h	/^	DWORD modelShoubu;$/;"	m	struct:SelectUserInfo
modelTaozhuang	tmpcode/commond.h	/^	DWORD modelTaozhuang;$/;"	m	struct:SelectUserInfo
modelTime	tmpcode/commond.h	/^    DWORD modelTime;$/;"	m	struct:LingQiPkData
modelToubu	tmpcode/commond.h	/^	DWORD modelToubu;$/;"	m	struct:SelectUserInfo
modelToukui	tmpcode/commond.h	/^	DWORD modelToukui;$/;"	m	struct:SelectUserInfo
modelTouxian	tmpcode/commond.h	/^	DWORD modelTouxian;$/;"	m	struct:SelectUserInfo
modelYouwu	tmpcode/commond.h	/^	DWORD modelYouwu;$/;"	m	struct:SelectUserInfo
modelZuowu	tmpcode/commond.h	/^	DWORD modelZuowu;$/;"	m	struct:SelectUserInfo
modelid	base/Object.h	/^	QWORD modelid;      \/\/ƒ£–Õ±‡∫≈add for kok$/;"	m	struct:t_Object
modelid	base/zDatabase.h	/^    QWORD modelid;$/;"	m	struct:zObjectB
money	BillServer/BillUser.h	/^    DWORD money;    \/**< Èì∂Â∏ÅÊï∞Èáè *\/$/;"	m	class:BillUser
money	base/CharBase.h	/^  DWORD money;        \/\/\/ ÂΩìÂâçÈì∂Â≠ê,Âè™Â≠òÂÇ®Áª¥Êä§,‰∏çËÉΩ‰ΩøÁî®$/;"	m	struct:CharBase
money	base/CharBase.h	/^  DWORD money;\/\/ÂΩìÂâçÈì∂Â≠êÊï∞$/;"	m	struct:CharTest
money	base/Command.h	/^  ConsignHistoryType money;$/;"	m	struct:Cmd::stNewHistoryStockUserCmd
money	base/Command.h	/^  DWORD money;$/;"	m	struct:Cmd::stBailPrison
money	base/Command.h	/^  DWORD money;$/;"	m	struct:Cmd::stBidAuction
money	base/Command.h	/^  DWORD money;$/;"	m	struct:Cmd::stBribePrison
money	base/SessionCommand.h	/^      DWORD money;$/;"	m	struct:Cmd::Session::giftInfo
money	base/SessionCommand.h	/^      DWORD money;$/;"	m	struct:Cmd::Session::t_bailCheck_SceneSession
money	base/SessionCommand.h	/^      DWORD money;$/;"	m	struct:Cmd::Session::t_bidAuction_SceneSession
money	base/SessionCommand.h	/^      DWORD money;$/;"	m	struct:Cmd::Session::t_checkBidAuction_SceneSession
money	base/SessionCommand.h	/^      DWORD money;$/;"	m	struct:Cmd::Session::t_getMailItem_SceneSession
money	tmpcode/commond.h	/^				DWORD money; \/\/ ÿŒ¿—∫Ω$/;"	m	struct:stCrystalAllInfoDataUserCmd::cryState
money	tmpcode/commond.h	/^		DWORD money;            \/\/¡Ï»°∑—”√$/;"	m	struct:stRetSeptAvatarInfo::stAvatarInfo
money	tmpcode/commond.h	/^		DWORD money;$/;"	m	struct:stRetCriminalApplyInfo::applyInfo
money	tmpcode/commond.h	/^		DWORD money;$/;"	m	struct:stRetCriminalListInfo::criminalInfo
money	tmpcode/commond.h	/^		DWORD money;$/;"	m	struct:stReturnMergeServerTeamUserCmd::MergeTeam
money	tmpcode/commond.h	/^		QWORD money;					\/\/ƒººØΩ∂Ó£¨µ•Œª"Œƒ"£¨øÕªß∂Àœ‘ æ ±◊™ªª≥… XX∂ßXX¡ΩXXŒƒ$/;"	m	struct:stGetKingPurseListCmd::__anon252
money	tmpcode/commond.h	/^	DWORD	money;	\/\/≥Â÷µ“¯◊” ˝¡ø£¨◊¢“‚£∫µ•ŒªŒ™°∞¡Ω°±$/;"	m	struct:t_BuyTimeAutoSkill
money	tmpcode/commond.h	/^	DWORD money;                            \/\/\/ Ω” ‹◊ ÷˙Ω∂Ó$/;"	m	struct:FundUnionHistory
money	tmpcode/commond.h	/^	DWORD money;                            \/\/\/ ◊‹◊ ÷˙Ω∂Ó$/;"	m	struct:stRetCityFundUnionHistoryCmd
money	tmpcode/commond.h	/^	DWORD money;    \/\/\/ ∑µªÿ∏¯≥«÷˜ ±±Ì æø…∑÷∑¢µƒ◊Ó¥Û◊ ÷˙Ω∂Ó£¨$/;"	m	struct:stCityFundUnionCmd
money	tmpcode/commond.h	/^	DWORD money;    \/\/Ω·À„µƒπ§◊ $/;"	m	struct:stWeekSalaryOperationUnionCmd
money	tmpcode/commond.h	/^	DWORD money;    \/\/Ω∂Ó£¨µ•ŒªÕ≠$/;"	m	struct:stShowMoneyUserCmd
money	tmpcode/commond.h	/^	DWORD money;    \/\/…˙≤˙µ•Œª∏√ŒÔ∆∑À˘–Ë“™µƒΩ«Æ$/;"	m	struct:stRetUnionProStateCmd
money	tmpcode/commond.h	/^	DWORD money;$/;"	m	struct:stApplySeptAvatar
money	tmpcode/commond.h	/^	DWORD money;$/;"	m	struct:stRefreshCityMoneyCmd
money	tmpcode/commond.h	/^	DWORD money;$/;"	m	struct:stRetMerchNoticePrice
money	tmpcode/commond.h	/^	DWORD money;$/;"	m	struct:stRetUnionAndProInfo
money	tmpcode/commond.h	/^	DWORD money;$/;"	m	struct:stRetUnionNeedBuildProCmd
money	tmpcode/commond.h	/^	DWORD money;$/;"	m	struct:st_StorageMoneyHouseUserCmd
money	tmpcode/commond.h	/^        DWORD money;            \/\/\/ Ω Ù±“œ˚∫ƒ$/;"	m	struct:stEquipIntensifyConsumeInfo
money	tmpcode/commond.h	/^        DWORD money;$/;"	m	struct:stBidAuction
money	tmpcode/commond.h	/^    DWORD money;\/\/ ∆’Õ®∑¢≤º◊ Ω$/;"	m	struct:CityQuestInfo
money1	tmpcode/commond.h	/^	DWORD money1;	\/\/‘≠µÿ$/;"	m	struct:stMainUserDeathReliveUserCmd
money2	tmpcode/commond.h	/^	DWORD money2;	\/\/‘≠µÿΩ°øµ$/;"	m	struct:stMainUserDeathReliveUserCmd
moneyCount	tmpcode/commond.h	/^	DWORD moneyCount;			\/\/∂‘ƒ⁄«Æº€∏Ò±∂ ˝   Œ™¡„‘Ú±Ì æœ¬º‹$/;"	m	struct:stMerchInfo
moneyCount	tmpcode/commond.h	/^	DWORD moneyCount;  \/\/«Æº€∏Ò±∂ ˝   Œ™¡„‘Ú±Ì æœ¬º‹$/;"	m	struct:Merch
moneyCount	tmpcode/commond.h	/^        DWORD moneyCount;       \/\/∂‘ƒ⁄«Æº€∏Ò±∂ ˝   Œ™¡„‘Ú±Ì æœ¬º‹$/;"	m	struct:stRetMagicForgeInfo
moneyHold	tmpcode/commond.h	/^	DWORD moneyHold;$/;"	m	struct:stRetUnionInfo
moneyID	tmpcode/commond.h	/^	DWORD moneyID;  \/\/\/ ¥˙Ω»Øguid$/;"	m	struct:stBuyUnionMacketObject
moneylistNum	BillServer/BillUser.h	/^    DWORD moneylistNum;  \/\/\/ ‰∏™‰∫∫ËÇ°Á•®‰π∞ÂçïÊï∞Èáè$/;"	m	class:BillUser
month	tmpcode/commond.h	/^        BYTE    month;          \/\/≥ˆ…˙‘¬∑›$/;"	m	struct:stNameCard
month	tmpcode/commond.h	/^    BYTE month;$/;"	m	struct:stCityQuestEarnInfo
moon	base/Object.h	/^	    BYTE moon;$/;"	m	union:t_Object::__anon61
moonFlag	tmpcode/commond.h	/^        BYTE  moonFlag; \/\/‘¬¡¡$/;"	m	struct:CardMainData
move	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::move(const int direct,const int step)$/;"	f	class:SceneNpc
move	ScenesServer/SceneUser.cpp	/^bool SceneUser::move(Cmd::stUserMoveMoveUserCmd *rev)$/;"	f	class:SceneUser
moveAction	ScenesServer/SceneEntryPk.h	/^    bool moveAction;  \/\/\/ ÁßªÂä®ËÆ∏ÂèØ$/;"	m	struct:SceneEntryPk
moveFastCount	ScenesServer/SceneUser.h	/^    DWORD   moveFastCount;$/;"	m	struct:SceneUser
moveInterval	tmpcode/commond.h	/^	WORD    moveInterval;           \/\/“∆∂Øº‰∏Ù£¨ª˘◊ºŒ™640∫¡√Î$/;"	m	struct:TankData
moveObject	ScenesServer/zCard.cpp	/^bool CardSlots::moveObject(SceneUser *pUser,zCard *srcObj,stObjectLocation &dst)$/;"	f	class:CardSlots
moveObject	ScenesServer/zObject.cpp	/^bool Packages::moveObject(SceneUser *pUser,zObject *srcObj,stObjectLocation &dst)$/;"	f	class:Packages
moveObjectToScene	ScenesServer/zCard.cpp	/^bool CardSlots::moveObjectToScene(zCard *o,const zPos &pos,DWORD overdue_msecs,const unsigned long dwID)$/;"	f	class:CardSlots
moveObjectToScene	ScenesServer/zObject.cpp	/^bool Packages::moveObjectToScene(zObject *o,const zPos &pos,DWORD overdue_msecs,const unsigned long dwID)$/;"	f	class:Packages
moveSpeed	tmpcode/commond.h	/^	WORD moveSpeed;$/;"	m	struct:t_MapTankData
moveToEnemy	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::moveToEnemy(SceneEntryPk * enemy)$/;"	f	class:SceneNpc
moveType	base/Command.h	/^    BYTE moveType;$/;"	m	struct:Cmd::stNpcMoveMoveUserCmd
moveType	tmpcode/commond.h	/^	BYTE moveType;                          \/\/“∆∂Ø¿‡–Õ$/;"	m	struct:stNpcMoveMoveUserCmd
moveUserCard	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::moveUserCard(SceneUser &user, DWORD thisID, stObjectLocation dst)$/;"	f	class:ChallengeGame
moveable	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::moveable(const zPos &tempPos,const zPos &destPos,const int radius)$/;"	f	class:SceneNpc
movespeed	ScenesServer/ScenePk.h	/^      SWORD movespeed;  \/\/ÁßªÂä®ÈÄüÂ∫¶ÂèòÊõ¥ÁôæÂàÜÊØî 16Ôºå56$/;"	m	struct:SkillState::__anon155::__anon156
movespeed	base/CharBase.h	/^  WORD  movespeed;          \/\/\/ ÁßªÂä®ÈÄüÂ∫¶ *$/;"	m	struct:CharState
movespeed	base/Command.h	/^	WORD  movespeed;    \/\/\/ ÁßªÂä®ÈÄüÂ∫¶$/;"	m	struct:Cmd::t_NpcData
movespeed	tmpcode/commond.h	/^	WORD  movespeed;					\/\/\/ “∆∂ØÀŸ∂»$/;"	m	struct:t_UserData
movespeed	tmpcode/commond.h	/^	WORD  movespeed; \/\/“∆∂ØÀŸ∂» $/;"	m	struct:st_CharShow2
movespeed	tmpcode/commond.h	/^    WORD  movespeed;                \/\/\/ “∆∂ØÀŸ∂»$/;"	m	struct:t_NPCData
mp	ScenesServer/ChallengeGame.h	/^	DWORD mp;	    \/\/µ±«∞ƒß∑®$/;"	m	class:MagicPoint
mp	base/CharBase.h	/^  DWORD mp;              \/\/\/ ÂΩìÂâçÊ≥ïÊúØÂÄº$/;"	m	struct:CharBase
mp	base/Command.h	/^  DWORD mp;            \/\/\/ ÂΩìÂâçÊ≥ïÊúØÂÄº$/;"	m	struct:Cmd::t_MainUserData
mp	base/HeroCardCmd.h	/^	DWORD mp;$/;"	m	struct:Cmd::t_MagicPoint
mp	tmpcode/commond.h	/^			WORD mp;$/;"	m	struct:LingQiData::__anon321::__anon322
mp	tmpcode/commond.h	/^			WORD mp;$/;"	m	struct:LingQiMaxCoefData::__anon331::__anon332
mp	tmpcode/commond.h	/^			WORD mp;$/;"	m	struct:LingQiPkData::__anon327::__anon328
mp	tmpcode/commond.h	/^			WORD mp;$/;"	m	struct:LingQiSimulate::__anon362::__anon363
mp	tmpcode/commond.h	/^	DWORD mp;						\/\/\/ µ±«∞∑® ı÷µ$/;"	m	struct:t_MainUserData
mp1	ScenesServer/ChallengeGame.h	/^	MagicPoint mp1;		\/\/1∑Ωƒß∑®$/;"	m	class:ChallengeGame
mp2	ScenesServer/ChallengeGame.h	/^	MagicPoint mp2;		\/\/¡Ì“ª∑Ωƒß∑®$/;"	m	class:ChallengeGame
mpPercent	tmpcode/commond.h	/^	BYTE mpPercent;$/;"	m	struct:stAutoHpMpLingQiUserCmd
mp_leechdom	base/CharBase.h	/^  DWORD mp_leechdom;\/\/‰ΩøÁî®Ê≥ïÊúØÂÄºËçØÂìÅ‰∏™Êï∞$/;"	m	struct:CharTest
mpcost	base/Card.h	/^	DWORD mpcost;		    \/\/¿∂∫ƒ$/;"	m	struct:t_Card
mpcost	base/zDatabase.h	/^    DWORD mpcost;	    \/\/¿∂∫ƒ$/;"	m	struct:CardBase
mpcost	base/zDatabase.h	/^    DWORD mpcost;	    \/\/¿∂∫ƒ$/;"	m	struct:zCardB
mpd	base/Command.h	/^      t_MapPetData mpd[0];$/;"	m	union:Cmd::stMapDataMapScreenUserCmd::__anon79
mpd	base/Command.h	/^      t_MapPetData mpd[1];$/;"	m	union:Cmd::stMapDataMapScreenStateUserCmd::__anon80
mpd	tmpcode/commond.h	/^		t_MapPetData mpd[0];$/;"	m	union:stMapDataMapScreenUserCmd::__anon225
mpk	base/Command.h	/^      t_MapPKGameData mpk[0];$/;"	m	union:Cmd::stMapDataMapScreenUserCmd::__anon79
mpleech	ScenesServer/zObject.h	/^  leech mpleech; \/\/x%Âê∏Êî∂Ê≥ïÊúØÂÄºy$/;"	m	class:Equips
mpleech	base/Object.h	/^	leech mpleech; \/\/x%Œ¸ ’∑® ı÷µy$/;"	m	struct:t_Object
mplock	ScenesServer/SceneEntryPk.h	/^    bool mplock;  \/\/\/ÂØπmpËøõË°åÈîÅÂÆö$/;"	m	struct:SceneEntryPk
mpr	ScenesServer/zObject.h	/^  WORD mpr;  \/\/ Ê≥ïÊúØÂÄºÊÅ¢Â§ç$/;"	m	class:Equips
mpr	base/Object.h	/^	WORD mpr;  \/\/ ∑® ı÷µª÷∏¥$/;"	m	struct:t_Object
mps	base/SceneCommand.h	/^      MapIndexXY mps[0]; $/;"	m	struct:Cmd::Scene::t_fresh_MapIndex
mpspeedup	ScenesServer/ScenePk.h	/^      SWORD mpspeedup;  \/\/Ê≥ïÊúØÂÄºÊÅ¢Â§çÈÄüÂ∫¶Â¢ûÂä†35$/;"	m	struct:SkillState::__anon155::__anon156
ms_Singleton	base/zSingleton.h	/^		static T* ms_Singleton;$/;"	m	class:Singleton
ms_Singleton	base/zSingleton.h	/^T* Singleton<T, MANA>::ms_Singleton = 0;$/;"	m	class:Singleton
msec	base/zTime.h	/^	DWORD msec() const$/;"	f	class:zRTime
msecs	base/zTime.h	/^	QWORD msecs() const$/;"	f	class:zRTime
msg	SessionServer/SessionServer.h	/^  char msg[256];$/;"	m	struct:worldMsg
msg	base/RolechangeCommand.h	/^	BYTE msg[0];$/;"	m	struct:Cmd::Rolechange::t_ForwardMsg_CommonCmd
msg	base/RolechangeCommand.h	/^	BYTE msg[0];$/;"	m	struct:Cmd::Rolechange::t_OverZone_ChatCmd
msg	base/SessionCommand.h	/^		char  msg[1];$/;"	m	struct:Cmd::Session::t_GlobalMessage_SceneSession
msg	base/SuperCommand.h	/^	BYTE msg[0];$/;"	m	struct:Cmd::Super::t_ForwardMsg_Scene
msg	tmpcode/commond.h	/^	char msg[150];$/;"	m	struct:UnionMsgInfo
msg	tmpcode/commond.h	/^	char msg[51];$/;"	m	struct:stLeaveMsgUnionCmd
msg	tmpcode/commond.h	/^	char msg[MAX_PLAYER_QUIT_CLOCK]; \/\/ŒÔ∆∑±‡∫≈+ ±º‰(√Î)$/;"	m	struct:st_QuitClock
msgItem	tmpcode/commond.h	/^	BYTE msgItem;       \/\/…À∫¶√Ë ˆ–Ú∫≈$/;"	m	struct:FightDescrip
msgLen	base/BroadCastCommand.h	/^      DWORD msgLen;$/;"	m	struct:Cmd::BroadCast::t_BroadcastMessage
msgMut	base/zLogger.h	/^	zMutex msgMut;$/;"	m	class:zLogger
msgParse	BillServer/BillClient.cpp	/^bool BillClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:BillClient
msgParse	BillServer/BillTask.cpp	/^bool BillTask::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:BillTask
msgParse	FLServer/LoginTask.cpp	/^bool LoginTask::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:LoginTask
msgParse	FLServer/ServerTask.cpp	/^bool ServerTask::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ServerTask
msgParse	FLServer/UserTask.cpp	/^bool UserTask::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:UserTask
msgParse	GatewayServer/BillClient.cpp	/^bool BillClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:BillClient
msgParse	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::msgParse(const Cmd::t_NullCmd *ptNull,const DWORD nCmdLen)$/;"	f	class:GatewayTask
msgParse	GatewayServer/MiniClient.cpp	/^bool MiniClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:MiniClient
msgParse	GatewayServer/RecordClient.cpp	/^bool RecordClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RecordClient
msgParse	GatewayServer/SceneClient.cpp	/^bool SceneClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:SceneClient
msgParse	GatewayServer/SessionClient.cpp	/^bool SessionClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:SessionClient
msgParse	RecordServer/RecordTask.cpp	/^bool RecordTask::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RecordTask
msgParse	Robot/Client.cpp	/^bool Client::msgParse(const Cmd::t_NullCmd *ptNullCmd, const unsigned int nCmdLen)$/;"	f	class:Client
msgParse	Robot/LoginClient.cpp	/^bool LoginClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:LoginClient
msgParse	ScenesServer/MiniClient.cpp	/^bool MiniClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:MiniClient
msgParse	ScenesServer/RecordClient.cpp	/^bool RecordClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RecordClient
msgParse	ScenesServer/SceneTask.cpp	/^bool SceneTask::msgParse(const Cmd::t_NullCmd *cmd,const DWORD cmdLen)$/;"	f	class:SceneTask
msgParse	ScenesServer/SessionClient.cpp	/^bool SessionClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:SessionClient
msgParse	SessionServer/RecordClient.cpp	/^bool RecordClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RecordClient
msgParse	SessionServer/SessionTask.cpp	/^bool SessionTask::msgParse(const Cmd::t_NullCmd *cmd,const DWORD cmdLen)$/;"	f	class:SessionTask
msgParse	SuperServer/BroadClient.cpp	/^bool BroadClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:BroadClient
msgParse	SuperServer/FLClient.cpp	/^bool FLClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:FLClient
msgParse	SuperServer/InfoClient.cpp	/^bool InfoClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:InfoClient
msgParse	SuperServer/RolechangeClient.cpp	/^bool RolechangeClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RolechangeClient
msgParse	SuperServer/RoleregClient.cpp	/^bool RoleregClient::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RoleregClient
msgParse	SuperServer/ServerTask.cpp	/^bool ServerTask::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ServerTask
msgParse	base/MessageQueue.h	/^	bool msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD cmdLen)$/;"	f	class:MessageQueue
msgParse	base/zSocket.h	/^		virtual bool msgParse(const Cmd::t_NullCmd *, const unsigned int)$/;"	f	class:zProcessor
msgParse	roleChangeServer/ChangeTask.cpp	/^bool ChangeTask::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ChangeTask
msgParse	roleRegServer/RoleTask.cpp	/^bool RoleTask::msgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RoleTask
msgParse_Arena	SessionServer/SessionTask.cpp	/^bool SessionTask::msgParse_Arena(const Cmd::t_NullCmd *cmd,const DWORD cmdLen)$/;"	f	class:SessionTask
msgParse_Battle	SuperServer/ServerTask.cpp	/^bool ServerTask::msgParse_Battle(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ServerTask
msgParse_Bill	SuperServer/ServerTask.cpp	/^bool ServerTask::msgParse_Bill(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ServerTask
msgParse_Broad	SuperServer/BroadClient.cpp	/^bool BroadClient::msgParse_Broad(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:BroadClient
msgParse_Common	roleChangeServer/ChangeTask.cpp	/^bool ChangeTask::msgParse_Common(const Cmd::t_NullCmd *pNullCmd, const unsigned int nCmdLen)$/;"	f	class:ChangeTask
msgParse_CountryOnline	SuperServer/ServerTask.cpp	/^bool ServerTask::msgParse_CountryOnline(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ServerTask
msgParse_Forward	SessionServer/SessionTask.cpp	/^bool SessionTask::msgParse_Forward(const Cmd::t_NullCmd *pNullCmd,const DWORD cmdLen)$/;"	f	class:SessionTask
msgParse_Forward	SuperServer/RolechangeClient.cpp	/^bool RolechangeClient::msgParse_Forward(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen, DWORD fromGameID)$/;"	f	class:RolechangeClient
msgParse_Gate	SessionServer/SessionTask.cpp	/^bool SessionTask::msgParse_Gate(const Cmd::t_NullCmd *cmd,const DWORD cmdLen)$/;"	f	class:SessionTask
msgParse_Gateway	RecordServer/RecordTask.cpp	/^bool RecordTask::msgParse_Gateway(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RecordTask
msgParse_Gateway	SuperServer/ServerTask.cpp	/^bool ServerTask::msgParse_Gateway(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ServerTask
msgParse_GmTool	SuperServer/ServerTask.cpp	/^bool ServerTask::msgParse_GmTool(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ServerTask
msgParse_Scene	RecordServer/RecordTask.cpp	/^bool RecordTask::msgParse_Scene(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RecordTask
msgParse_Scene	SessionServer/SessionTask.cpp	/^bool SessionTask::msgParse_Scene(const Cmd::t_NullCmd *cmd,const DWORD cmdLen)$/;"	f	class:SessionTask
msgParse_Scene	SuperServer/ServerTask.cpp	/^bool ServerTask::msgParse_Scene(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ServerTask
msgParse_Select	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::msgParse_Select(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:GatewayTask
msgParse_Session	RecordServer/RecordTask.cpp	/^bool RecordTask::msgParse_Session(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RecordTask
msgParse_Startup	SuperServer/ServerTask.cpp	/^bool ServerTask::msgParse_Startup(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ServerTask
msgParse_SuperService	BillServer/BillServer.cpp	/^bool BillService::msgParse_SuperService(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:BillService
msgParse_SuperService	GatewayServer/GatewayServer.cpp	/^bool GatewayService::msgParse_SuperService(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:GatewayService
msgParse_SuperService	RecordServer/RecordServer.cpp	/^bool RecordService::msgParse_SuperService(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RecordService
msgParse_SuperService	ScenesServer/ScenesServer.cpp	/^bool ScenesService::msgParse_SuperService(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ScenesService
msgParse_SuperService	SessionServer/SessionServer.cpp	/^bool SessionService::msgParse_SuperService(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:SessionService
msgParse_Time	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::msgParse_Time(const Cmd::stNullUserCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:GatewayTask
msgParse_gyList	FLServer/ServerTask.cpp	/^bool ServerTask::msgParse_gyList(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ServerTask
msgParse_gyList	SuperServer/FLClient.cpp	/^bool FLClient::msgParse_gyList(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:FLClient
msgParse_login	Robot/LoginClient.cpp	/^WORD LoginClient::msgParse_login(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:LoginClient
msgParse_loginServer	SuperServer/RoleregCache.cpp	/^bool RoleregCache::msgParse_loginServer(WORD wdServerID,DWORD accid,char name[MAX_NAMESIZE],WORD state)$/;"	f	class:RoleregCache
msgParse_loginServer	roleChangeServer/ChangeTask.cpp	/^bool ChangeTask::msgParse_loginServer(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ChangeTask
msgParse_loginServer_withcharId	roleRegServer/RoleTask.cpp	/^bool RoleTask::msgParse_loginServer_withcharId(const Cmd::RoleReg::t_Charname_reg_withID *ptCmd, const DWORD nCmdLen)$/;"	f	class:RoleTask
msgParse_regwithId	roleRegServer/RoleTask.cpp	/^bool RoleTask::msgParse_regwithId(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:RoleTask
msgParse_session	FLServer/ServerTask.cpp	/^bool ServerTask::msgParse_session(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:ServerTask
msgParse_session	SuperServer/FLClient.cpp	/^bool FLClient::msgParse_session(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:FLClient
msgParse_time	Robot/Client.cpp	/^bool Client::msgParse_time(const Cmd::stNullUserCmd *ptNull, const unsigned int nCmdLen)$/;"	f	class:Client
msgTime	base/CharBase.h	/^  DWORD msgTime;        \/\/‰∏ãÊ¨°ÂèëÈÄÅGMÁïôË®ÄÁöÑÊó∂Èó¥$/;"	m	struct:CharBase
msgType	tmpcode/commond.h	/^	BYTE msgType;\/\/1 «23µ„Ã·–—£¨2 «23£∫45Ã·–—£¨3 «0µ„…æ≥˝»ŒŒÒ≤¢Õ®÷™$/;"	m	struct:stCancelRandomQuestUserCmd
msg_map	base/MsgDelegate.h	/^	std::vector<std::vector<MsgDelegate> > msg_map;$/;"	m	class:MsgCenter
msleep	base/zThread.h	/^	static void msleep(const long msec)$/;"	f	class:zThread
mtd	tmpcode/commond.h	/^		BYTE mtd[0];\/\/’Ω≥µ ˝æ›$/;"	m	union:stMapDataMapScreenUserCmd::__anon225
mud	base/Command.h	/^      t_MapUserDataPos mud[0];$/;"	m	union:Cmd::stMapDataMapScreenUserCmd::__anon79
mud	base/Command.h	/^      t_MapUserDataPosState mud[1];$/;"	m	union:Cmd::stMapDataMapScreenStateUserCmd::__anon80
music_index	base/Command.h	/^    SWORD music_index;$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
music_index	tmpcode/commond.h	/^		short music_index;     \/\/ “ÙπÏ±‡∫≈$/;"	m	struct:stClientNewMap
mutex	GatewayServer/CountryInfo.h	/^	zMutex mutex;$/;"	m	class:CountryInfo
mutex	ScenesServer/scriptTickTask.h	/^	zMutex mutex;$/;"	m	class:scriptTaskManagement
mutex	SuperServer/ServerManager.h	/^    zMutex mutex;$/;"	m	class:ServerManager
mutex	base/zMutex.h	/^	pthread_mutex_t mutex;    \/**< Á≥ªÁªü‰∫íÊñ•‰Ωì *\/$/;"	m	class:zMutex
mutex	base/zSocket.h	/^	zMutex mutex;                \/**< À¯ *\/$/;"	m	class:zSocket
mutex	base/zSyncEvent.h	/^	zMutex mutex;$/;"	m	class:zSyncEvent
mutex	base/zUniqueID.h	/^	zMutex mutex;$/;"	m	class:zUniqueID
mvspeed	ScenesServer/zObject.h	/^  WORD mvspeed;        \/\/ ÁßªÂä®ÈÄüÂ∫¶$/;"	m	class:Equips
mvspeed	base/Object.h	/^	WORD mvspeed;				\/\/ “∆∂ØÀŸ∂»$/;"	m	struct:t_Object
mvspeed	base/zDatabase.h	/^    WORD mvspeed;				\/\/ “∆∂ØÀŸ∂»$/;"	m	struct:zObjectB
mx	tmpcode/commond.h	/^	DWORD mx;     \/\/√Ò–ƒª˘¥°÷µ$/;"	m	struct:CityQuestInfo
mxList	tmpcode/commond.h	/^		}mxList[3];$/;"	m	struct:stRetCityMinxinRecCmd::CityMxRec	typeref:struct:stRetCityMinxinRecCmd::CityMxRec::CityMx
myCityID	tmpcode/commond.h	/^    DWORD myCityID;$/;"	m	struct:stRetCityInfoList
myExploit	tmpcode/commond.h	/^	DWORD myExploit;\/\/ÕÊº“’Ωπ¶$/;"	m	struct:t_ReturnThisWeek
myExploitTW	tmpcode/commond.h	/^	DWORD myExploitTW;      \/\/±æ÷‹ªÒµ√’Ωπ¶÷µ$/;"	m	struct:infoDukeSortThisWeekUserCmd
myExploitTW	tmpcode/commond.h	/^	DWORD myExploitTW;      \/\/±æ÷‹ªÒµ√’Ωπ¶÷µ$/;"	m	struct:infoMarquisSortThisWeekUserCmd
myHistory	tmpcode/commond.h	/^	DWORD myHistory;$/;"	m	struct:t_ReturnHistory
myJuewei	tmpcode/commond.h	/^	BYTE myJuewei;$/;"	m	struct:t_ReturnHistory
myKillnum	tmpcode/commond.h	/^	DWORD myKillnum;\/\/ÕÊº“ª˝∑÷$/;"	m	struct:t_ReturnThisWeek
myOverMan	ScenesServer/SceneUser.h	/^    DWORD myOverMan;$/;"	m	struct:SceneUser
myRank	tmpcode/commond.h	/^	BYTE myRank;            \/\/—° ÷◊‘º∫µƒ≈≈√˚$/;"	m	struct:stReturnScoreListWeekendZhenxuanUserCmd
myRank	tmpcode/commond.h	/^	WORD myRank; \/\/≈≈√˚$/;"	m	struct:stRealtimeUpdateScoreZhenXuanUserCmd
my_id	BillServer/BillClient.h	/^    DWORD my_id;$/;"	m	class:BillClient
my_key_equal	base/zEntryManager.h	/^struct my_key_equal : public std::binary_function<keyT,keyT,bool>$/;"	s
my_timezone	base/zTime.h	/^	static long my_timezone;$/;"	m	class:zRTime
nMoneyCoolSec	tmpcode/commond.h	/^	DWORD nMoneyCoolSec;  \/\/‘≠µÿ∏¥ªÓ £”‡ ±º‰(s)$/;"	m	struct:stMainUserDeathReliveUserCmd
nRight	base/Command.h	/^  WORD  nRight;$/;"	m	struct:Cmd::stBroadcastSeptMemberInfo
nRight	base/Command.h	/^  WORD nRight;$/;"	m	struct:Cmd::stSeptRember
nRight	base/Sept.h	/^  WORD	nRight;				\/\/÷∞Œª–Ú∫≈.$/;"	m	struct:SeptDef::stSeptMemberInfo
name	BillServer/BillSessionManager.h	/^  char   name[MAX_NAMESIZE+1];     \/\/\/ ËßíËâ≤ÂêçÁß∞$/;"	m	struct:BillSession
name	FLServer/ServerTask.h	/^	std::string name;$/;"	m	class:ServerTask
name	FLServer/UserTask.h	/^	std::string name;$/;"	m	class:UserTask
name	GatewayServer/CountryInfo.h	/^		char name[MAX_NAMESIZE];$/;"	m	struct:CountryInfo::CountryDic
name	GatewayServer/CountryInfo.h	/^		char name[MAX_NAMESIZE];$/;"	m	struct:CountryInfo::MapDic
name	Robot/Client.h	/^    std::string name;$/;"	m	struct:ClientBase
name	ScenesServer/GroupCardManager.h	/^    char name[MAX_NAMESIZE+1];	    \/\/≈∆◊È√˚◊÷$/;"	m	struct:t_group
name	ScenesServer/QuestAction.h	/^    std::string name() const $/;"	f	class:Op::Add
name	ScenesServer/QuestAction.h	/^    std::string name() const $/;"	f	class:Op::Div
name	ScenesServer/QuestAction.h	/^    std::string name() const $/;"	f	class:Op::GetP
name	ScenesServer/QuestAction.h	/^    std::string name() const $/;"	f	class:Op::Mul
name	ScenesServer/QuestAction.h	/^    std::string name() const $/;"	f	class:Op::Pow
name	ScenesServer/QuestAction.h	/^    std::string name() const $/;"	f	class:Op::Set
name	ScenesServer/QuestAction.h	/^    std::string name() const $/;"	f	class:Op::Sub
name	ScenesServer/QuestCondition.h	/^    std::string name() const $/;"	f	class:Op::Differ
name	ScenesServer/QuestCondition.h	/^    std::string name() const $/;"	f	class:Op::Equal
name	ScenesServer/QuestCondition.h	/^    std::string name() const $/;"	f	class:Op::Great
name	ScenesServer/QuestCondition.h	/^    std::string name() const $/;"	f	class:Op::Less
name	ScenesServer/SceneDefine.h	/^	char  name[MAX_NAMESIZE+1];        \/\/ÂêçÁß∞$/;"	m	struct:t_NpcDefine
name	ScenesServer/SceneManager.cpp	/^    const char *name;$/;"	m	class:GetSceneByFileName
name	ScenesServer/SceneManager.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:SceneManager::CountryInfo
name	ScenesServer/SceneManager.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:SceneManager::MapInfo
name	ScenesServer/WayPoint.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:zPoint
name	ScenesServer/script_func.h	/^    char name[MAX_NAMESIZE];$/;"	m	struct:RecentMsg
name	SessionServer/CountryInfo.h	/^		char name[MAX_NAMESIZE];$/;"	m	struct:CountryInfo::CountryDic
name	SessionServer/HeroCardManager.h	/^    char name[MAX_NAMESIZE+1];$/;"	m	struct:stChallengeInfo
name	SuperServer/RoleregCache.cpp	/^	char name[MAX_NAMESIZE];\/\/Ω«…´√˚$/;"	m	struct:RoleData
name	SuperServer/RoleregCache.h	/^      char name[MAX_NAMESIZE];  \/**< Ω«…´√˚≥∆ *\/$/;"	m	struct:RoleregCache::Data
name	base/BattleUserCmd.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::zone_info
name	base/BroadCastCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::BroadCast::t_LoginCmd_OK
name	base/CharBase.h	/^  char  name[MAX_NAMESIZE + 1];    \/\/\/ ËßíËâ≤ÂêçÁß∞$/;"	m	struct:CharBase
name	base/Command.h	/^	char name[MAX_NAMESIZE];\/\/ÂêçÂ≠ó$/;"	m	struct:Cmd::t_PetData
name	base/Command.h	/^    BYTE name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stQuestVarsUserCmd::Var
name	base/Command.h	/^    char  name[MAX_NAMESIZE+1];    \/\/\/ ËßíËâ≤ÂêçÁß∞$/;"	m	struct:Cmd::SelectUserInfo
name	base/Command.h	/^    char name[MAX_NAMESIZE]; \/\/ ÊåëÊàòËÄÖÂßìÂêç$/;"	m	struct:Cmd::stActiveDareCmd
name	base/Command.h	/^    char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stRtnSeptNameListCmd::__anon131
name	base/Command.h	/^    char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stRtnUnionNameListCmd::__anon109
name	base/Command.h	/^  BYTE name[64];$/;"	m	struct:Cmd::stQuestInfoUserCmd
name	base/Command.h	/^  char  name[MAX_NAMESIZE + 1];    \/\/\/ ËßíËâ≤ÂêçÁß∞$/;"	m	struct:Cmd::t_UserData
name	base/Command.h	/^  char  name[MAX_NAMESIZE];  \/\/  ÂÖ≥Á≥ª‰∫∫ÂêçÂ≠ó$/;"	m	struct:Cmd::stRelation
name	base/Command.h	/^  char  name[MAX_NAMESIZE]; \/\/ ÂÜõÈòüÂêçÁß∞$/;"	m	struct:Cmd::stArmyBaseInfo
name	base/Command.h	/^  char  name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stRelationStatusCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::stDeleteSelectUserCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::t_MainUserData
name	base/Command.h	/^  char name[MAX_NAMESIZE];             \/\/ Â∏Æ‰ºóÂßìÂêç$/;"	m	struct:Cmd::stChangeUnionMemberAliasName
name	base/Command.h	/^  char name[MAX_NAMESIZE];             \/\/ ÊàêÂëòÂêçÁß∞$/;"	m	struct:Cmd::stBroadcastSeptMemberInfo
name	base/Command.h	/^  char name[MAX_NAMESIZE];             \/\/ ÊóèÂëòÂßìÂêç$/;"	m	struct:Cmd::stChangeSeptMemberAliasName
name	base/Command.h	/^  char name[MAX_NAMESIZE];      \/\/ ÊàêÂëòÂêçÁß∞$/;"	m	struct:Cmd::stBroadcastMemberInfo
name	base/Command.h	/^  char name[MAX_NAMESIZE];    \/\/Áé©ÂÆ∂ÂêçÁß∞$/;"	m	struct:Cmd::stKillBossUserCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];   \/\/ Áé©ÂÆ∂ÂßìÂêç$/;"	m	struct:Cmd::rank_elem
name	base/Command.h	/^  char name[MAX_NAMESIZE];  \/**< Áâ©ÂìÅÊã•ÊúâËÄÖÁöÑÂêçÂ≠ó *\/$/;"	m	struct:Cmd::stQuestionObject
name	base/Command.h	/^  char name[MAX_NAMESIZE];  \/**< Áâ©ÂìÅÊã•ÊúâËÄÖÁöÑÂêçÂ≠ó *\/$/;"	m	struct:Cmd::stReturnQuestionObject
name	base/Command.h	/^  char name[MAX_NAMESIZE];  \/**< Áî®Êà∑ÂêçÂ≠ó  *\/$/;"	m	struct:Cmd::stCheckNameSelectUserCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];  \/**< ËßíËâ≤ÂêçÂ≠ó  *\/$/;"	m	struct:Cmd::stReturnDeleteSelectUserCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];  \/\/ÂêçÂ≠ó$/;"	m	struct:Cmd::stAddWaitingCartoonCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];  \/\/ÂêçÂ≠ó$/;"	m	struct:Cmd::t_CartoonData
name	base/Command.h	/^  char name[MAX_NAMESIZE]; \/\/ ÂÜõÈòüÂêç$/;"	m	struct:Cmd::stRtnArmySpecUserCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE]; \/\/ Â∏Æ‰ºóÂßìÂêç$/;"	m	struct:Cmd::stUnionMemberPower
name	base/Command.h	/^  char name[MAX_NAMESIZE]; \/\/ Êé®Ëçê‰∫∫ÂßìÂêç$/;"	m	struct:Cmd::stRtnRecommendedBountyUserCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE]; \/\/ Ë¢´Êé®Ëçê‰∫∫ÂßìÂêç$/;"	m	struct:Cmd::stRecommendItem
name	base/Command.h	/^  char name[MAX_NAMESIZE]; \/\/npcÁöÑÂêçÁß∞$/;"	m	struct:Cmd::t_MapPetData
name	base/Command.h	/^  char name[MAX_NAMESIZE]; \/\/ÂèëÁªôÊúçÂä°Âô®ÁöÑÊó∂ÂÄôÂ°´ÂØπÊñπ‰ºöÈïøÁöÑÂêçÂ≠óÔºåÊúçÂä°Âô®ÂèëÂá∫Êù•ÁöÑÊó∂ÂÄôÂ°´ÁöÑÊòØËØ∑Ê±Ç‰∫∫ÁöÑÂêçÂ≠ó$/;"	m	struct:Cmd::stRequestJoinUnionCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE]; \/\/ÂèëÁªôÊúçÂä°Âô®ÁöÑÊó∂ÂÄôÂ°´ÂØπÊñπÊóèÈïøÁöÑÂêçÂ≠óÔºåÊúçÂä°Âô®ÂèëÂá∫Êù•ÁöÑÊó∂ÂÄôÂ°´ÁöÑÊòØËØ∑Ê±Ç‰∫∫ÁöÑÂêçÂ≠ó$/;"	m	struct:Cmd::stRequestJoinSeptCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::actTitle
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stAppointCatcherCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stAppointCityCatcherCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stAppointDiplomatCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stBailPrison
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stCaptainBase
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stChangeNameCartoonCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stChangeNamePetCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stCreateChannelUserCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stDareList
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stForbidTalkCountryUserCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stInvite_ChannelUserCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stJoin_ChannelUserCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stLeave_ChannelUserCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stQueryAuction
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stRtnSeptNameCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stRtnUnionNameCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::stSetRecommendUserCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];\/\/ÂêçÂ≠ó$/;"	m	struct:Cmd::t_HorseData
name	base/Command.h	/^  char name[MAX_NAMESIZE];\/\/ÊåáÂÆöÁé©ÂÆ∂ÂêçÂ≠ó$/;"	m	struct:Cmd::stEmperorPunishCountryCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];\/\/ÊåáÂÆöÁé©ÂÆ∂ÂêçÂ≠ó$/;"	m	struct:Cmd::stKingPunishCountryCmd
name	base/Command.h	/^  char name[MAX_NAMESIZE];\/\/ËØ∑Ê±ÇÊó∂ÊòØË¢´ÂßîÊâò‰∫∫ÔºåË¢´ËØ∑Ê±ÇÊó∂ÊòØÂßîÊâò‰∫∫$/;"	m	struct:Cmd::stConsignCartoonCmd
name	base/FLCommand.h	/^      char name[48];$/;"	m	struct:Cmd::FL::t_idinuse_Session
name	base/FLCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::FL::t_LoginFL_OK
name	base/HeroCardCmd.h	/^	char name[MAX_NAMESIZE+1];  \/\/√˚◊÷$/;"	m	struct:Cmd::stNotifyFightEnemyInfoUserCmd
name	base/HeroCardCmd.h	/^	char name[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::stRetCreateOneCardGroupUserCmd
name	base/HeroCardCmd.h	/^	char name[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::t_group_list
name	base/MiniCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Mini::t_UserLogin_Gateway
name	base/RecordCommand.h	/^      char  name[MAX_NAMESIZE+1];    \/\/\/ ËßíËâ≤ÂêçÁß∞$/;"	m	struct:Cmd::Record::t_CreateChar_GateRecord
name	base/RecordCommand.h	/^      char  name[MAX_NAMESIZE+1];    \/\/\/ ËßíËâ≤ÂêçÁß∞$/;"	m	struct:Cmd::Record::t_chkUserExist_SessionRecord
name	base/RecordCommand.h	/^      char name[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Record::t_CheckName_GateRecord
name	base/RecordCommand.h	/^      char name[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Record::t_CheckName_Return_GateRecord
name	base/RecordCommand.h	/^      char name[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Record::t_DelChar_GateRecord
name	base/RecordCommand.h	/^      char name[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Record::t_DelChar_Return_GateRecord
name	base/RecordCommand.h	/^      char name[MAX_NAMESIZE];        \/\/\/ ËßíËâ≤ÂêçÁß∞$/;"	m	struct:Cmd::Record::t_Delete_CharTest_SceneRecord
name	base/RecordCommand.h	/^      char name[MAX_NAMESIZE];        \/\/\/ ËßíËâ≤ÂêçÁß∞$/;"	m	struct:Cmd::Record::t_Insert_CharTest_SceneRecord
name	base/RecordCommand.h	/^      char name[MAX_NAMESIZE];        \/\/\/ ËßíËâ≤ÂêçÁß∞$/;"	m	struct:Cmd::Record::t_Read_CharTest_SceneRecord
name	base/RecordCommand.h	/^      char name[MAX_NAMESIZE];        \/\/\/ ËßíËâ≤ÂêçÁß∞$/;"	m	struct:Cmd::Record::t_Update_CharTest_SceneRecord
name	base/RolechangeCommand.h	/^	char name[MAX_NAMESIZE+1];  $/;"	m	struct:Cmd::Rolechange::t_retSendUserToZone
name	base/RolechangeCommand.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Rolechange::t_zone_info
name	base/RolechangeCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Rolechange::t_LoginCmd_OK
name	base/RoleregCommand.h	/^      char name[MAX_NAMESIZE];  \/**< ËßíËâ≤ÂêçÁß∞ *\/$/;"	m	struct:Cmd::RoleReg::t_Charname_reg_withID
name	base/RoleregCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::RoleReg::t_LoginRoleReg_OK
name	base/SceneCommand.h	/^      BYTE name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Scene::t_sysSetting_GateScene
name	base/Sept.h	/^  char    name[MAX_NAMESIZE+1];       \/\/ º“◊Â√˚≥∆$/;"	m	struct:SeptDef::stSeptInfo
name	base/Sept.h	/^  char  name[MAX_NAMESIZE+1];      \/\/ ª·‘±Ω«…´√˚≥∆    $/;"	m	struct:SeptDef::stSeptMemberInfo
name	base/ServerACL.h	/^	std::string name;$/;"	m	struct:ACLZone
name	base/SessionCommand.h	/^		char  name[MAX_NAMESIZE];	\/\/sky Áî®Êà∑Âêç$/;"	m	struct:Cmd::Session::stMember
name	base/SessionCommand.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_RelationAddFriend
name	base/SessionCommand.h	/^      BYTE name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_sysSetting_SceneSession
name	base/SessionCommand.h	/^      char    name[MAX_NAMESIZE];  \/\/ Áé©ÂÆ∂ÂêçÁß∞$/;"	m	struct:Cmd::Session::t_CountFriendDegree_SceneSession
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_DelChar_GateSession
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_Session_HandleBlackList
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE+1];\/\/ÂæíÂºüÂêçÂ≠ó$/;"	m	struct:Cmd::Session::t_OvermanTicketAdd
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE];  \/\/\/ Á§æ‰ºöÂÖ≥Á≥ªÂêçÁß∞$/;"	m	struct:Cmd::Session::t_sendUserRelationID
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::giftInfo
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::stRequestMember
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_addRelationEnemy
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_bailCheck_SceneSession
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_countryPunishUser_SceneSession
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_emperorPunishUser_SceneSession
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_forbidTalk_SceneSession
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_forwardUser_GateSession
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_forwardUser_SceneSession
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_queryAuction_SceneSession
name	base/SessionCommand.h	/^      char name[MAX_NAMESIZE];\/\/Ë¢´ÂßîÊâò‰∫∫ÂêçÂ≠ó ÂèëÁªôÁé©ÂÆ∂Êó∂ÊòØÂßîÊâò‰∫∫ÁöÑÂêçÂ≠ó$/;"	m	struct:Cmd::Session::t_consignCartoon_SceneSession
name	base/SuperCommand.h	/^	  char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Super::t_ChangeZoneDel_Gateway
name	base/SuperCommand.h	/^      char name[48];$/;"	m	struct:Cmd::Super::t_idinuse_Bill
name	base/SuperCommand.h	/^      char name[MAX_NAMESIZE];  \/**< ËßíËâ≤ÂêçÁß∞ *\/$/;"	m	struct:Cmd::Super::t_Charname_Gateway
name	base/Union.h	/^  char    name[MAX_NAMESIZE+1];       \/\/ Â∏Æ‰ºöÂêçÁß∞$/;"	m	struct:UnionDef::stUnionInfo
name	base/Union.h	/^  char  name[MAX_NAMESIZE+1];        \/\/ ‰ºöÂëòËßíËâ≤ÂêçÁß∞    $/;"	m	struct:UnionDef::stUnionMemberInfo
name	base/UserCommand.h	/^      char     name[MAX_NAMESIZE];  \/\/Âå∫ÂêçÂ≠ó$/;"	m	struct:Cmd::UserServer::t_logon_OK
name	base/xml/xml_node.h	/^			std::string name;$/;"	m	class:xml_node
name	base/xml/xml_node_container.h	/^	    std::string name;$/;"	m	class:detail::xml_node_map_container
name	base/xml/xml_node_container.h	/^	    std::string name;$/;"	m	class:detail::xml_node_seq_container
name	base/xml/xml_node_prop.h	/^	name_type   name;$/;"	m	class:xml_prop
name	base/zDBConnPool.h	/^	const char *name;  \/**< ◊÷∂Œ√˚◊÷ *\/$/;"	m	struct:__anon153
name	base/zDatabase.h	/^	char  name[32];    \/\/ ººƒ‹√˚≥∆$/;"	m	struct:SkillBase
name	base/zDatabase.h	/^    char name[64];  $/;"	m	struct:ObjectBase
name	base/zDatabase.h	/^    char name[64];$/;"	m	struct:CardBase
name	base/zEntry.h	/^	char name[MAX_NAMESIZE+1];$/;"	m	struct:zEntryC
name	base/zMTCPServer.h	/^	std::string name;            \/**< ∑˛ŒÒ∆˜√˚≥∆ *\/$/;"	m	class:zMTCPServer
name	base/zMetaData.h	/^	std::string name;$/;"	m	class:DBField
name	base/zService.h	/^	std::string name;          \/**< ∑˛ŒÒ√˚≥∆ *\/$/;"	m	class:zService
name	base/zTCPServer.h	/^	std::string name;            \/**< ∑˛ŒÒ∆˜√˚≥∆ *\/$/;"	m	class:zTCPServer
name	base/zType.h	/^    char name[48];$/;"	m	union:t_NewLoginSession::__anon11
name	roleChangeServer/ChangeTask.h	/^	std::string name;$/;"	m	class:ChangeTask
name	roleRegServer/RoleTask.h	/^	std::string name;$/;"	m	class:RoleTask
name	roleRegServer/RoleTask.h	/^    char name[MAX_NAMESIZE];$/;"	m	struct:RoleData
name	roleRegServer/RoleregCommand.h	/^      char name[MAX_NAMESIZE];  \/**< ËßíËâ≤ÂêçÁß∞ *\/$/;"	m	struct:Cmd::RoleReg::t_Charname_reg_withID
name	roleRegServer/RoleregCommand.h	/^      char name[MAX_NAMESIZE];$/;"	m	struct:Cmd::RoleReg::t_LoginRoleReg_OK
name	tmpcode/commond.h	/^		BYTE name[MAX_NAMESIZE];$/;"	m	struct:stQuestVarsUserCmd::Var
name	tmpcode/commond.h	/^		char    name[MAX_NAMESIZE];   \/\/–’√˚  $/;"	m	struct:stReturnScoreListWeekendZhenxuanUserCmd::PlayerScore
name	tmpcode/commond.h	/^		char  name[MAX_NAMESIZE];       \/\/»ŒŒÒ√˚≥∆;	$/;"	m	struct:stRetAcceptedDailyQuestUserCmd::acceptedQuests
name	tmpcode/commond.h	/^		char  name[MAX_NAMESIZE]; $/;"	m	struct:stRetSeptTeamChallengeUserCmd::acceptedQuests
name	tmpcode/commond.h	/^		char  name[MAX_NAMESIZE];$/;"	m	struct:stRetCityReliveInfo::reliveInfo
name	tmpcode/commond.h	/^		char name[MAX_LAND_OWNER_NAME];$/;"	m	struct:stRetFarmInfoUserCmd::stBriefLand
name	tmpcode/commond.h	/^		char name[MAX_NAMESIZE+1];		\/\/√˚◊÷$/;"	m	struct:stGetKingPurseListCmd::__anon252
name	tmpcode/commond.h	/^		char name[MAX_NAMESIZE+1];      \/\/…Ã»À√˚◊÷$/;"	m	struct:stGetUnionBusinessmen::__anon349
name	tmpcode/commond.h	/^		char name[MAX_NAMESIZE+1]; \/\/\/ œ¬œﬂΩ«…´√˚$/;"	m	struct:stRet_PromoterRelationUserCmd::SubPlayer
name	tmpcode/commond.h	/^		char name[MAX_NAMESIZE+1];$/;"	m	struct:stReturnMergeServerTeamUserCmd::MergeTeam
name	tmpcode/commond.h	/^		char name[MAX_NAMESIZE+1];$/;"	m	struct:stStatueInfoUserCmd::__anon319
name	tmpcode/commond.h	/^		char name[MAX_NAMESIZE+1];$/;"	m	struct:st_RetRoomerNameHouseUserCmd::roomerName
name	tmpcode/commond.h	/^		char name[MAX_NAMESIZE];$/;"	m	struct:stPositionNameListCmd::__anon263
name	tmpcode/commond.h	/^		char name[MAX_NAMESIZE];$/;"	m	struct:stRetCreateSeptSignInfo::__anon304
name	tmpcode/commond.h	/^		char name[MAX_NAMESIZE];$/;"	m	struct:stRetCriminalApplyInfo::applyInfo
name	tmpcode/commond.h	/^		char name[MAX_NAMESIZE];$/;"	m	struct:stRetCriminalListInfo::criminalInfo
name	tmpcode/commond.h	/^		char name[MAX_NAMESIZE];$/;"	m	struct:stRetPlayerListZhenxuanUserCmd::PlayerInfo
name	tmpcode/commond.h	/^		char name[MAX_NAMESIZE];$/;"	m	struct:stRetTrafficInfoUserCmd::stTrafficInfo
name	tmpcode/commond.h	/^		char name[SEPT_MEM_NAMESIZE+1];\/\/≥…‘±–’√˚$/;"	m	struct:stRetSeptAvatarInfo::stAvatarInfo
name	tmpcode/commond.h	/^	  char    name[MAX_NAMESIZE+1]; \/\/√˚◊÷$/;"	m	struct:st_WatchPlayer
name	tmpcode/commond.h	/^	 BYTE name[MAX_NAMESIZE];  \/\/ ¡ƒÃÏ “£®÷˜»À£©√˚◊÷$/;"	m	struct:stOpenWindow_ChannelUserCmd
name	tmpcode/commond.h	/^	 char name[0];$/;"	m	struct:stJoin_ChannelUserCmd
name	tmpcode/commond.h	/^	 char name[MAX_NAMESIZE];$/;"	m	struct:stRtnSeptNameCmd
name	tmpcode/commond.h	/^	 char name[MAX_NAMESIZE];$/;"	m	struct:stRtnUnionNameCmd
name	tmpcode/commond.h	/^	 char name[MAX_NAMESIZE];$/;"	m	struct:stTeamUserInfo
name	tmpcode/commond.h	/^	BYTE name[64];$/;"	m	struct:stQuestInfoUserCmd
name	tmpcode/commond.h	/^	char	name[MAX_NAMESIZE+1]; \/\/Ω«…´√˚◊÷$/;"	m	struct:stDeleteSelectUserCmd
name	tmpcode/commond.h	/^	char    name[17];               \/\/√˚◊÷  $/;"	m	struct:TankData
name	tmpcode/commond.h	/^	char    name[MAX_NAMESIZE+1]; \/\/√˚◊÷$/;"	m	struct:st_CharShow2
name	tmpcode/commond.h	/^	char    name[MAX_NAMESIZE+1]; \/\/√˚◊÷$/;"	m	struct:t_MainUserData
name	tmpcode/commond.h	/^	char    name[MAX_NAMESIZE];$/;"	m	struct:stRelationStatusCmd
name	tmpcode/commond.h	/^	char  name[MAX_NAMESIZE + 1];		\/\/\/ Ω«…´√˚≥∆$/;"	m	struct:t_UserData
name	tmpcode/commond.h	/^	char  name[MAX_NAMESIZE+1];             \/\/\/ Ω«…´√˚≥∆$/;"	m	struct:SelectUserInfo
name	tmpcode/commond.h	/^	char  name[MAX_NAMESIZE];       \/\/      πÿœµ»À√˚◊÷$/;"	m	struct:stRelation
name	tmpcode/commond.h	/^	char  name[MAX_NAMESIZE];$/;"	m	struct:RoomMemberInfo
name	tmpcode/commond.h	/^	char  name[MAX_NAMESIZE];$/;"	m	struct:strong_info
name	tmpcode/commond.h	/^	char name[0];\/\/√˚◊÷¡–±Ì$/;"	m	struct:stReqJoinSeptPopoUserCmd
name	tmpcode/commond.h	/^	char name[17];  \/\/√˚◊÷$/;"	m	struct:TabKey
name	tmpcode/commond.h	/^	char name[17];$/;"	m	struct:stTankNameCmd
name	tmpcode/commond.h	/^	char name[17];$/;"	m	struct:stUnionTankNameCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE + 1];$/;"	m	struct:UnionNoticeInfo
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE + 1];$/;"	m	struct:stReqMarriageHoldCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE+1];      \/\/±ª«˝÷»Àµƒ√˚◊÷$/;"	m	struct:st_BroadcastBanishRoomerHouseUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE+1];      \/\/√˚◊÷$/;"	m	struct:BlessSortData
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE+1];      \/\/√˚◊÷$/;"	m	struct:FlowerSortData
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE+1];      \/\/√˚◊÷$/;"	m	struct:stInstateUnionBusinessman
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE+1];      \/\/…Í«Î»Àµƒ√˚◊÷$/;"	m	struct:st_BroadcastUserApplyHouseUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE+1];$/;"	m	struct:stAllUserList
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE+1];$/;"	m	struct:stIdentifierAndNameUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE+1];$/;"	m	struct:stReqCreateSeptSign
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];			\/\/ ≥…‘±√˚≥∆$/;"	m	struct:stBroadcastMemberInfo
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];	\/**< Ω«…´√˚◊÷ *\/$/;"	m	struct:stReturnDeleteSelectUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];	\/**< ”√ªß√˚◊÷  *\/$/;"	m	struct:stCheckNameSelectUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];	\/\/±ªæ‹æ¯»Àµƒ√˚◊÷£¨≤ª «∂”≥§√˚◊÷$/;"	m	struct:stRefuseReqAddTeamUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];	\/\/√˚◊÷$/;"	m	struct:SortLastWeek
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];	\/\/√˚◊÷$/;"	m	struct:SortThisWeek
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];	\/\/Õ¡µÿÀ˘”–’ﬂ$/;"	m	struct:stLandItem
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];	\/\/‘§∆⁄µƒ–¬∑ø÷˜$/;"	m	struct:stChangeMasterQuestRoomUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];     	\/\/¿Îø™»Àµƒ√˚◊÷$/;"	m	struct:stLeave_ChannelUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];                $/;"	m	struct:stUnionEnterMap
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];                \/\/øÕªß∂ÀµΩ∑˛ŒÒ∆˜£∫±ª—˚«Î»À√˚◊÷£ª∑˛ŒÒ∆˜µΩøÕªß∂À£∫—˚«Î»À√˚◊÷$/;"	m	struct:stSendCountryInviteQuestRoomUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];                \/\/…Í«Îº”»ÎµƒÕÊº“√˚$/;"	m	struct:stReqAddTeamUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];             \/\/ ≥…‘±√˚≥∆$/;"	m	struct:stBroadcastSeptMemberInfo
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];        \/**< ŒÔ∆∑”µ”–’ﬂµƒ√˚◊÷ *\/                        $/;"	m	struct:stQuestionObject
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];        \/\/\/ ∑˛ŒÒ∆˜∑¢∏¯øÕªß∂À»∑»œ «∑Ò∑≈∆˙ ±£¨”√”⁄œ‘ æ≥« –√˚$/;"	m	struct:stRequestAbjurationCitynCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];        \/\/\/ ŒËƒÔ“’√˚$/;"	m	struct:stSetDancerProfileUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];        \/\/±ªœÆ’ﬂ√˚◊÷$/;"	m	struct:attGuardNpcRecordofSept
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];        \/\/À˘¿≠»À√˚$/;"	m	struct:stDareCallDuty
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];        \/\/œ‘ æµƒƒ⁄»›$/;"	m	struct:stShowSingUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];        \/\/ÛÙª∫»æ∆µƒ»ÀŒÔ√˚≥∆$/;"	m	struct:GouhuoMemInfo
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];   \/\/±ªÀÕ’ﬂ√˚◊÷$/;"	m	struct:stWatcherExpressWeekendZhenxuanUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];   \/\/–’√˚  $/;"	m	struct:stGotoPlayerZhenxuanUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE]; \/\/ ∞Ô÷⁄–’√˚$/;"	m	struct:stUnionMemberPower
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE]; \/\/ ªÿπÈ’ﬂ–’√˚$/;"	m	struct:stReturnerItem
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE]; \/\/  ¶∏µ–’√˚$/;"	m	struct:stRtnGRecommendedBountyUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE]; \/\/ ÕΩµ‹–’√˚$/;"	m	struct:stGRecommendItem
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE]; \/\/ –’√˚$/;"	m	struct:stRefreshGRecommendRelationUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE]; \/\/∂‘∑Ω√˚◊÷$/;"	m	struct:stSimulateMagicUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE]; \/\/ªÿπÈ»À√˚◊÷$/;"	m	struct:stAnswerCallBackUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE]; \/\/ªÿπÈ»À√˚◊÷$/;"	m	struct:stAskBeginCallBackUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE]; \/\/¿≠∂Ø»À√˚◊÷$/;"	m	struct:stSetSponserCallBackUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE]; \/\/√˚◊÷$/;"	m	struct:stCountryInviteGrecommendUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE]; \/\/√˚◊÷$/;"	m	struct:stNotifyOnlineInfoGrecommendUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE]; \/\/√˚◊÷$/;"	m	struct:stRefreshSayHelloRecordUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:LTQRecord
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:LTQUserData
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:UserInfoBySameIP
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:__anon356
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stAdBroadcastUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stAdvertCriminalUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stAnswerRecommendUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stApplySeptAvatar
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stAskBeginRecommendUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stAskJoinChallengeUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stChangeSeptMasterCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stCreateLTQUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stDancerStateUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stForbidTalkCountryUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stGotoCitizenUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stGotoHomeUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stHomeNameHomeUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stInviteChallengeUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stLTQDataLTQUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stNotifyReqJoinLTQUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stNotifySeptLeave
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stQueryLTQUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stReqSeptAvatar
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stRetSeptAvatar
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stRetSeptAvatarSucess
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stRetUnionNeedBuildProCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stSeptPlaceSet
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stSeptPositionSet
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stSetGRecommendUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stStateDancerUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];$/;"	m	struct:stWatchFriendUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];\/\/ø™∆Ù»À√˚◊÷$/;"	m	struct:timeOfFireplaceUserCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];\/\/√˚◊÷$/;"	m	struct:FarmNotice
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];\/\/√˚◊÷$/;"	m	struct:LingQiData
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];\/\/√˚◊÷$/;"	m	struct:t_PetData
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];\/\/‘ˆº”√˚◊÷◊÷∂Œ\/\/add for kok 20080830$/;"	m	struct:stCancelPlaceSet
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];\/\/‘ˆº”√˚◊÷◊÷∂Œ\/\/add for kok 20080830$/;"	m	struct:stCancelPositionSet
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];\/\/÷∏∂®ÕÊº“√˚◊÷$/;"	m	struct:stKingCallCountryCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];\/\/÷∏∂®ÕÊº“√˚◊÷$/;"	m	struct:stKingPunishCountryCmd
name	tmpcode/commond.h	/^	char name[MAX_NAMESIZE];\/\/◊‘∂Øº”»ÎµƒÕÊº“$/;"	m	struct:stCreateChannelUserCmd
name	tmpcode/commond.h	/^                BYTE name[32];$/;"	m	struct:showPeronTaskUserCmd::Var
name	tmpcode/commond.h	/^                char    name[MAX_NAMESIZE];$/;"	m	struct:stReturnScoreListLuoRiUserCmd::NameAndScore
name	tmpcode/commond.h	/^        char    name[MAX_NAMESIZE]; \/\/–Ø¥¯–≈œ¢:◊Ó¥Û16∏ˆ∫∫◊÷      $/;"	m	struct:MOB_KILL_CONTRIBUTE
name	tmpcode/commond.h	/^        char  name[MAX_NAMESIZE + 1];           \/\/\/ Ω«…´√˚≥∆$/;"	m	struct:stShowEquipUserPropertyUserCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE + 1];    \/\/\/ ±ª…Ë÷√µƒÕÊº“√˚$/;"	m	struct:stUnionAppointMasterCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE + 1];    \/\/\/ ±ª…Ë÷√µƒÕÊº“√˚$/;"	m	struct:stUnionSetPositionCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE+1];     \/\/ ID$/;"	m	struct:stCreateSelectUserCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE+1];  \/\/∑¢≤º’ﬂ√˚≥∆$/;"	m	struct:stReqConsignIssuedQuestUserCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE+1];  \/\/∑¢≤º’ﬂ√˚◊÷$/;"	m	struct:stReceiveIssuedQuestUserCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE+1];$/;"	m	struct:stInviteDragonChallengeUserCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE+1];$/;"	m	struct:stNotifyNameCardChangeUserCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE+1];$/;"	m	struct:stWatchDragonUserCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE+1];\/\/–’√˚$/;"	m	struct:MerceryList
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE+1];\/\/–’√˚$/;"	m	struct:ReplayMerceryList
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];        \/\/ŒÔ∆∑√˚≥∆$/;"	m	struct:stQueryAuction
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];  \/\/π´∏Ê»À$/;"	m	struct:stCallBoardDataUserCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];  \/\/ÕÊº“–’√˚$/;"	m	struct:UnionCityDareItem
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];$/;"	m	struct:OfficialItem
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];$/;"	m	struct:OfficialSend
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];$/;"	m	struct:OneQuestInfo
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];$/;"	m	struct:ResultScoreAndExp
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];$/;"	m	struct:actTitle
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];$/;"	m	struct:stChangeHorseNameCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];$/;"	m	struct:stFreeOfficialUserCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];$/;"	m	struct:stNominateOfficialUserCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];$/;"	m	struct:stQueryPurchase
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];$/;"	m	struct:stSendActivityStateUserCmd
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];$/;"	m	struct:stShouLieScoreListCmd::stScoreNode
name	tmpcode/commond.h	/^        char name[MAX_NAMESIZE];$/;"	m	struct:t_client_command
name	tmpcode/commond.h	/^     char name[MAX_NAMESIZE];        \/\/ÕÊº“√˚◊÷$/;"	m	struct:PlayerScoreSortItem
name	tmpcode/commond.h	/^    char    name[MAX_NAMESIZE];$/;"	m	struct:stNotifyChangeJobOrZhuanzhiCmd
name	tmpcode/commond.h	/^    char  name[MAX_NAMESIZE];$/;"	m	struct:KeyHole
name	tmpcode/commond.h	/^    char name[17];$/;"	m	struct:OneSuit
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE+1];      \/\/ΩÁÕıµƒ√˚◊÷$/;"	m	struct:stTransferCountryKingToCityMasterCmd
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE+1];      \/\/√˚◊÷$/;"	m	struct:TempSortData
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE+1];$/;"	m	struct:AchievementItem
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE-6];\/\/√˚◊÷$/;"	m	struct:t_HorseData
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE];		\/\/npcµƒ√˚≥∆£¨ ’‚∏ˆ◊÷∂Œ±ªÔ⁄≥µ∏¥”√Œ™ªıŒÔ◊÷∂Œ¡À$/;"	m	struct:t_MapPetData
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE];                \/\/øÕªß∂ÀµΩ∑˛ŒÒ∆˜£∫±ª—˚«Î»À√˚◊÷£ª∑˛ŒÒ∆˜µΩøÕ>ªß∂À£∫—˚«Î»À√˚◊÷        $/;"	m	struct:stInviteQuestRoomUserCmd
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE];                \/\/øÕªß∂ÀµΩ∑˛ŒÒ∆˜£∫±ª—˚«Î»À√˚◊÷£ª∑˛ŒÒ∆˜µΩøÕ>ªß∂À£∫—˚«Î»À√˚◊÷$/;"	m	struct:LinkInfo
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE];        \/\/√˚◊÷  $/;"	m	struct:t_DragonData
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE];        \/\/«Ûæ»’ﬂ√˚≥∆$/;"	m	struct:stCallPrivateGuardHelpUserCmd
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE];$/;"	m	struct:EquipSortObjItem
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE];$/;"	m	struct:rtDropGuardGoodsSeptCmd
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE];$/;"	m	struct:rtGiveGuardGoodsSeptCmd
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE];$/;"	m	struct:stMoveGoodsToGuardSeptCmd
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE];$/;"	m	struct:stStableHorseNameCmd
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE];\/\/≥∆∫≈√˚$/;"	m	struct:rtGetAchievementHonorCmd
name	tmpcode/commond.h	/^    char name[MAX_NAMESIZE];\/\/√˚◊÷  $/;"	m	struct:LingQiWatchData
name2	base/Command.h	/^  char name2[MAX_NAMESIZE];$/;"	m	struct:Cmd::stCreateChannelUserCmd
nameAndScore	tmpcode/commond.h	/^	NameAndScore nameAndScore[10];  \/\/»ÀŒÔª˝∑÷–≈œ¢$/;"	m	struct:stReturnScoreListZhenxuanUserCmd
nameAndScore	tmpcode/commond.h	/^        NameAndScore nameAndScore[0];\/\/»ÀŒÔ√˚◊÷∫Õª˝∑÷$/;"	m	struct:stReturnScoreListLuoRiUserCmd
nameGroup	tmpcode/commond.h	/^	char nameGroup[0];      \/\/±ª—˚«Îµƒ“ª◊ÈÕÊº“√˚◊÷$/;"	m	struct:stCreateChannelUserCmd
nameGroup	tmpcode/commond.h	/^         char nameGroup[0];    \/\/±ª—˚«Îµƒ“ª◊ÈÕÊº“√˚◊÷$/;"	m	struct:stInviteGroup_ChannelUserCmd
nameGroup	tmpcode/commond.h	/^     char nameGroup[0];      \/\/±ª—˚«Îµƒ“ª◊ÈÕÊº“√˚◊÷$/;"	m	struct:stInvite_ChannelUserCmd
nameIndex	tmpcode/commond.h	/^		WORD  nameIndex;$/;"	m	struct:stReturnScoreListZhenxuanUserCmd::NameAndScore
nameList	tmpcode/commond.h	/^	}nameList[0];$/;"	m	struct:stReturnFriendHomeUserCmd	typeref:struct:stReturnFriendHomeUserCmd::__anon302
nameRepeat	GatewayServer/GateUser.h	/^	void nameRepeat()$/;"	f	class:GateUser
nameTwo	tmpcode/commond.h	/^	char nameTwo[MAX_NAMESIZE];$/;"	m	struct:stAdBroadcastUserCmd
name_type	base/xml/xml_node_prop.h	/^	typedef P   name_type;$/;"	t	class:xml_prop
namelist	base/SessionCommand.h	/^      stCountMember  namelist[0];    \/\/ Ââ©‰ΩôÂõ¢ÈòüÂàóË°®$/;"	m	struct:Cmd::Session::t_CountFriendDegree_SceneSession
namelist	base/SessionCommand.h	/^      stRequestMember namelist[0];  \/\/ Âõ¢ÈòüÂàóË°®$/;"	m	struct:Cmd::Session::t_RequestFriendDegree_SceneSession
names	tmpcode/commond.h	/^	BYTE names[0][MAX_NAMESIZE];  \/\/ ±ª—˚«Î»À√˚◊÷$/;"	m	struct:stInviteLTQUserCmd
nco	base/zDatabase.h	/^    NpcCarryObject nco;$/;"	m	struct:zNpcB
needAddit	tmpcode/commond.h	/^		bool needAddit; \/\/ «∑Ò±ÿ–Î∏Ωº”≤ƒ¡œ$/;"	m	struct:stUnionMerchRoadInfo
needAddit	tmpcode/commond.h	/^		bool needAddit;$/;"	m	struct:stRetMagicForgeInfo
needAddit	tmpcode/commond.h	/^	bool needAddit;$/;"	m	struct:stSetNeedAdditUnionMerch
needButton	tmpcode/commond.h	/^	BYTE needButton;$/;"	m	struct:rtCityFightRule
needClear	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::needClear()$/;"	f	class:SceneNpc
needLevel	base/SessionCommand.h	/^      WORD needLevel;$/;"	m	struct:Cmd::Session::auctionInfo
needLevel	base/zDatabase.h	/^    int needLevel;\/\/\/ººƒ‹id$/;"	m	struct:npcSkill
needMoney	base/Command.h	/^  BYTE needMoney;$/;"	m	struct:Cmd::stAddListMail
needMoney	tmpcode/commond.h	/^		DWORD needMoney;$/;"	m	struct:stRetTrafficInfoUserCmd::stTrafficInfo
needMoney	tmpcode/commond.h	/^	DWORD needMoney;        \/\/…˝º∂À˘–ËΩ«Æ$/;"	m	struct:st_LevelUpNeedThingHouseUserCmd
needMoney	tmpcode/commond.h	/^    BYTE needMoney; \/\/ «∑Ò ’∑—” º˛$/;"	m	struct:stAddListMail
needMoney	tmpcode/commond.h	/^    DWORD needMoney;$/;"	m	struct:stNeedMoneyAndBaseSuccessRateUserCmd
needNum	tmpcode/commond.h	/^			DWORD needNum;$/;"	m	struct:stRetUnionBuildInfo::__anon269::__anon270
needNums	tmpcode/commond.h	/^	DWORD needNums[4];$/;"	m	struct:rtTypeAutoHappyCardBoxUserCmd
needObj	tmpcode/commond.h	/^	DWORD needObj;\/\/–Ë“™œ˚∫ƒƒ«÷÷µ¿æﬂ$/;"	m	struct:rtTypeAutoHappyCardBoxUserCmd
needRecalc	ScenesServer/zObject.h	/^    bool needRecalc;$/;"	m	class:EquipPack
needRecover	ScenesServer/SceneNpc.h	/^  bool needRecover;$/;"	m	class:SceneNpc
needRenqi	tmpcode/commond.h	/^	DWORD needRenqi;	\/\/ø™∆Ù±⁄¬ØÀ˘–Ëµƒ»À∆¯÷µ$/;"	m	struct:tipInfoFireplaceUserCmd
needResource	tmpcode/commond.h	/^			DWORD needResource;$/;"	m	struct:stRetUnionBuildInfo::__anon269::__anon270
needSave	ScenesServer/Skill.h	/^    bool needSave;$/;"	m	struct:zSkill
needSaveBinayArchive	ScenesServer/SceneUser.cpp	/^bool SceneUser::needSaveBinayArchive(BinaryArchiveType type)$/;"	f	class:SceneUser
needSaveTempArchive	ScenesServer/SceneUser.cpp	/^bool SceneUser::needSaveTempArchive(TempArchiveType type)$/;"	f	class:SceneUser
needSwap	ScenesServer/zCard.cpp	/^bool CardSlot::needSwap(zCard* ob1, zCard* ob2)$/;"	f	class:CardSlot
needSwap	ScenesServer/zObject.cpp	/^bool Package::needSwap(zObject* ob1, zObject* ob2)$/;"	f	class:Package
needTarget	base/zDatabase.h	/^    DWORD needTarget;   \/\/–Ë“™ƒø±Í$/;"	m	struct:CardBase
needTarget	base/zDatabase.h	/^    DWORD needTarget;   \/\/–Ë“™ƒø±Í$/;"	m	struct:zCardB
needTime	tmpcode/commond.h	/^	DWORD needTime;$/;"	m	struct:stRetUnionInfo
needTimes	tmpcode/commond.h	/^	WORD needTimes;         \/\/¥Úø™–Ë“™µƒ¥Œ ˝$/;"	m	struct:NewBoxSendObj
needTurn	tmpcode/commond.h	/^	BYTE needTurn;				\/\/ «∑Ò‘⁄œ‘œ÷∫ÛΩ¯––∑≠◊™:0-≤ª–Ë“™£¨1-–Ë“™$/;"	m	struct:rtHappyCardBoxUserCmd
needType	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::needType(const DWORD &needtype)$/;"	f	class:SceneNpc
needType	ScenesServer/SceneUser.cpp	/^bool SceneUser::needType(const DWORD &needtype)$/;"	f	class:SceneUser
needVigour	tmpcode/commond.h	/^		WORD  needVigour;               \/\/œ˚∫ƒªÓ¡¶÷µ$/;"	m	struct:stRetDailyRandomQuestUserCmd::quests
needVigour	tmpcode/commond.h	/^        BYTE needVigour;$/;"	m	struct:stPopUpDailDailyQuestUserCmd
needWeapon	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::needWeapon(DWORD skillid)$/;"	f	class:SceneNpc
needWeapon	ScenesServer/SceneUser.cpp	/^bool SceneUser::needWeapon(DWORD skillid)$/;"	f	class:SceneUser
need_enc	base/zSocket.h	/^	inline bool need_enc() const { return CEncrypt::ENCDEC_NONE!=enc.getEncMethod(); }$/;"	f	class:zSocket
need_material	base/zDatabase.h	/^    material need_material;$/;"	m	struct:zObjectB
need_skill	base/zDatabase.h	/^    skills need_skill;$/;"	m	struct:zObjectB
needlevel	base/Object.h	/^	WORD needlevel;				\/\/ –Ë“™µ»º∂$/;"	m	struct:t_Object
needlevel	base/zDatabase.h	/^    WORD needlevel;$/;"	m	struct:zObjectB
needlevel	tmpcode/commond.h	/^    WORD   needlevel;   \/\/¡Ï»°∂˜¥Õµƒ◊Ó∏ﬂµ»º∂$/;"	m	struct:t_RewardInfo
needobject	base/zDatabase.h	/^    std::vector<DWORD> needobject;$/;"	m	struct:zObjectB
netType	BillServer/BillClient.h	/^    NetType netType;$/;"	m	class:BillClient
netType	FLServer/UserTask.h	/^	NetType netType;$/;"	m	class:UserTask
netType	SuperServer/BroadClient.h	/^    NetType netType;$/;"	m	class:BroadClient
netType	SuperServer/FLClient.h	/^    NetType netType;$/;"	m	class:FLClient
netType	SuperServer/InfoClient.h	/^    NetType netType;$/;"	m	class:InfoClient
netType	SuperServer/RolechangeClient.h	/^    NetType netType;$/;"	m	class:RolechangeClient
netType	SuperServer/RoleregClient.h	/^    NetType netType;$/;"	m	class:RoleregClient
netType	base/BroadCastCommand.h	/^      BYTE netType;$/;"	m	struct:Cmd::BroadCast::t_LoginCmd_OK
netType	base/FLCommand.h	/^      BYTE netType;$/;"	m	struct:Cmd::FL::t_LoginFL_OK
netType	base/RolechangeCommand.h	/^      BYTE netType;$/;"	m	struct:Cmd::Rolechange::t_LoginCmd_OK
netType	base/RoleregCommand.h	/^      BYTE netType;$/;"	m	struct:Cmd::RoleReg::t_LoginRoleReg_OK
netType	base/UserCommand.h	/^      BYTE     netType;      \/\/ÁΩëÁªúÁ±ªÂûã$/;"	m	struct:Cmd::UserServer::t_logon_OK
netType	roleChangeServer/ChangeTask.h	/^	NetType netType;$/;"	m	class:ChangeTask
netType	roleRegServer/RoleregCommand.h	/^      BYTE netType;$/;"	m	struct:Cmd::RoleReg::t_LoginRoleReg_OK
newArmyName	base/Command.h	/^  char  newArmyName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stChangeArmyNameUserCmd
newChangeZoneCharbase	RecordServer/RecordTask.cpp	/^bool RecordTask::newChangeZoneCharbase(Cmd::Rolechange::t_sendUserToZone* rev)$/;"	f	class:RecordTask
newDir	tmpcode/commond.h	/^	BYTE newDir;$/;"	m	struct:st_rt_MoveObjectHouseUserCmd
newFactor	tmpcode/commond.h	/^        BYTE newFactor;$/;"	m	struct:stRetAwardDailyQuestUserCmd
newHistoryGold	BillServer/StockConsign.h	/^    Cmd::ConsignHistoryType newHistoryGold; $/;"	m	class:ConsignHistoryManager
newHistoryMoney	BillServer/StockConsign.h	/^    Cmd::ConsignHistoryType newHistoryMoney; $/;"	m	class:ConsignHistoryManager
newIndex	tmpcode/commond.h	/^	BYTE	newIndex;$/;"	m	struct:stMoveFurnitureInStorageUserCmd
newInstance	BillServer/BillCallback.h	/^    static void newInstance()$/;"	f	class:SingletonBase
newJob	tmpcode/commond.h	/^	WORD newJob; $/;"	m	struct:stNotifyChangeJobDataUserCmd
newMaster	tmpcode/commond.h	/^    char newMaster[MAX_NAMESIZE];$/;"	m	struct:stNewMasterQuestRoomUserCmd
newMasterJob	tmpcode/commond.h	/^    WORD newMasterJob;$/;"	m	struct:stNewMasterQuestRoomUserCmd
newPasswd	tmpcode/commond.h	/^	DWORD newPasswd;$/;"	m	struct:stSetNewNumPasswdCmd
newRoomID	tmpcode/commond.h	/^	BYTE  newRoomID;$/;"	m	struct:st_rt_MoveObjectHouseUserCmd
newTCPTask	BillServer/BillServer.cpp	/^void BillService::newTCPTask(const int sock,const struct sockaddr_in *addr)$/;"	f	class:BillService
newTCPTask	FLServer/FLServer.cpp	/^void FLService::newTCPTask(const int sock,const WORD srcPort)$/;"	f	class:FLService
newTCPTask	GatewayServer/GatewayServer.cpp	/^void GatewayService::newTCPTask(const int sock,const struct sockaddr_in *addr)$/;"	f	class:GatewayService
newTCPTask	RecordServer/RecordServer.cpp	/^void RecordService::newTCPTask(const int sock,const struct sockaddr_in *addr)$/;"	f	class:RecordService
newTCPTask	ScenesServer/ScenesServer.cpp	/^void ScenesService::newTCPTask(const int sock,const struct sockaddr_in *addr)$/;"	f	class:ScenesService
newTCPTask	SessionServer/SessionServer.cpp	/^void SessionService::newTCPTask(const int sock,const struct sockaddr_in *addr)$/;"	f	class:SessionService
newTCPTask	SuperServer/SuperServer.cpp	/^void SuperService::newTCPTask(const int sock,const struct sockaddr_in *addr)$/;"	f	class:SuperService
newTCPTask	base/zNetService.h	/^	virtual void newTCPTask(const int sock,const struct sockaddr_in *addr) $/;"	f	class:zNetService
newTCPTask	roleChangeServer/roleChangeServer.cpp	/^void roleChangeService::newTCPTask(const int sock,const WORD srcPort)$/;"	f	class:roleChangeService
newTCPTask	roleRegServer/roleRegServer.cpp	/^void roleRegService::newTCPTask(const int sock,const WORD srcPort)$/;"	f	class:roleRegService
newX	tmpcode/commond.h	/^	WORD newX;$/;"	m	struct:st_rt_MoveObjectHouseUserCmd
newY	tmpcode/commond.h	/^	WORD newY;$/;"	m	struct:st_rt_MoveObjectHouseUserCmd
newZoneVec_iter	ScenesServer/SceneManager.h	/^    typedef NewZoneVec::iterator newZoneVec_iter;$/;"	t	class:SceneManager
new_TempID	tmpcode/commond.h	/^	DWORD new_TempID; \/\/–¬»Œ∂”≥§ temp id$/;"	m	struct:stRequestChangeTeamleader
newid	tmpcode/commond.h	/^	DWORD newid;\/\/–¬±‰…Ìπ÷ŒÔµƒID$/;"	m	struct:stSendChangeFaceNPCMagicUserCmd
newpass	base/Command.h	/^  char newpass[8]; \/\/Êñ∞ÂØÜÁ†Å$/;"	m	struct:Cmd::stUpdateStorePassUserCmd
newpass	tmpcode/commond.h	/^	char newpass[8]; \/\/–¬√‹¬Î$/;"	m	struct:stUpdateStorePassUserCmd
newzon_vec	ScenesServer/SceneManager.h	/^    NewZoneVec newzon_vec; $/;"	m	class:SceneManager
newzone	ScenesServer/SceneManager.h	/^    bool newzone;$/;"	m	class:SceneManager
next	base/zTime.h	/^	void next(const zRTime &cur)$/;"	f	class:RandTimer
next	base/zTime.h	/^	void next(const zRTime &cur)$/;"	f	class:Timer
nextAttackTime	ScenesServer/SceneNpc.h	/^  zRTime nextAttackTime;$/;"	m	class:SceneNpc
nextBlessTime	SessionServer/Session.h	/^    zRTime nextBlessTime;$/;"	m	class:UserSession
nextChatTime	GatewayServer/GatewayTask.h	/^	zRTime nextChatTime;$/;"	m	class:GatewayTask
nextCountryChatTime	GatewayServer/GatewayTask.h	/^	zRTime nextCountryChatTime;$/;"	m	class:GatewayTask
nextExp	tmpcode/commond.h	/^	DWORD   nextExp;                \/\/…˝º∂’Ωº®$/;"	m	struct:TankData
nextExp	tmpcode/commond.h	/^	DWORD nextExp;          \/\/\/ ºÃ–¯ø…“‘µ√µΩµƒæ≠—È$/;"	m	struct:stBuyWineState
nextHorseID	tmpcode/commond.h	/^    DWORD nextHorseID;$/;"	m	struct:stNeedMoneyAndBaseSuccessRateUserCmd
nextKeyNum	tmpcode/commond.h	/^	DWORD nextKeyNum;   \/\/œ¬¥Œ–Ë“™‘ø≥◊∏ˆ ˝  (÷‹ƒ©ª√æ≥±¶œ‰°∞‘Ÿ◊™“ª¥Œπ¶ƒ‹°±)$/;"	m	struct:ReturnFocusPropertyUserCmd
nextLevelExp	tmpcode/commond.h	/^		DWORD nextLevelExp;$/;"	m	struct:t_RTPositionSkillInfoSept::__anon264
nextMoveTime	ScenesServer/SceneNpc.h	/^  zRTime nextMoveTime;$/;"	m	class:SceneNpc
nextPhase	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::nextPhase(int index = -1)$/;"	f	class:NpcAIController
nextRent	tmpcode/commond.h	/^	DWORD nextRent;         \/\/…˝º∂∫Ûµƒ∑ø◊‚$/;"	m	struct:st_LevelUpNeedThingHouseUserCmd
nextTime	ScenesServer/Scene.h	/^      DWORD nextTime;\/\/‰∏ãÊ¨°ÁöÑÊó∂Èó¥$/;"	m	struct:Scene::FixedRush
nextTitleFlag	tmpcode/commond.h	/^    DWORD nextTitleFlag;$/;"	m	struct:stRefreshJieZhanTitleActive
nextUseBYTE5	base/Object.h	/^	BYTE nextUseBYTE5;\/\/‘§¡Ù◊÷∂Œ£¨œ¬¥Œ π”√∏ƒ√˚$/;"	m	struct:t_Object
nextUseBYTE6	base/Object.h	/^	BYTE nextUseBYTE6;\/\/‘§¡Ù◊÷∂Œ£¨œ¬¥Œ π”√∏ƒ√˚$/;"	m	struct:t_Object
nextUseDWORD2	base/Object.h	/^	DWORD nextUseDWORD2;\/\/‘§¡Ù◊÷∂Œ, œ¬¥Œ π”√∏ƒ√˚$/;"	m	struct:t_Object
nextUseDWORD3	base/Object.h	/^	DWORD nextUseDWORD3;\/\/‘§¡Ù◊÷∂Œ, œ¬¥Œ π”√∏ƒ√˚$/;"	m	struct:t_Object
nextUseDWORD4	base/Object.h	/^	DWORD nextUseDWORD4;\/\/‘§¡Ù◊÷∂Œ, œ¬¥Œ π”√∏ƒ√˚$/;"	m	struct:t_Object
nextUseDWORD5	base/Object.h	/^	DWORD nextUseDWORD5;\/\/‘§¡Ù◊÷∂Œ, œ¬¥Œ π”√∏ƒ√˚$/;"	m	struct:t_Object
nextWeekRent	tmpcode/commond.h	/^	DWORD nextWeekRent;             \/\/œ¬÷‹∑ø◊‚$/;"	m	struct:st_RetManageHouseUserCmd
next_protion	tmpcode/commond.h	/^        BYTE next_protion; \/\/0-100;Ω®…Ë∑—’º±»¿˝$/;"	m	struct:stRtEarningInfoUnionCmd
next_time	base/zTime.h	507;"	d
nextexp	base/CharBase.h	/^  QWORD nextexp;            \/\/\/ ÂçáÁ∫ßÁªèÈ™åÂÄº *$/;"	m	struct:CharState
nextexp	base/Command.h	/^  QWORD nextexp;          \/\/\/ ÂçáÁ∫ßÁªèÈ™åÂÄº$/;"	m	struct:Cmd::t_MainUserData
nextexp	tmpcode/commond.h	/^	QWORD nextexp;					\/\/\/ …˝º∂æ≠—È÷µ$/;"	m	struct:t_MainUserData
nextexp	tmpcode/commond.h	/^	QWORD nextexp;$/;"	m	struct:LingQiPkData
nick	tmpcode/commond.h	/^	char    nick[MAX_NICKSIZE]; \/\/Í«≥∆$/;"	m	struct:st_CharShow2
nickname	tmpcode/commond.h	/^	char nickname[MAX_NAMESIZE]; \/\/Í«≥∆$/;"	m	struct:stPersonalSign
ninescreen	GatewayServer/ScreenIndex.h	/^	NineScreen_map ninescreen;$/;"	m	class:ScreenIndex
ninescreen	ScenesServer/zSceneEntryIndex.h	/^    NineScreen_map ninescreen;$/;"	m	class:zSceneEntryIndex
no	tmpcode/commond.h	/^        BYTE no;\/\/±‡∫≈$/;"	m	struct:MerceryList
no	tmpcode/commond.h	/^        BYTE no;\/\/Õ¨“‚πÕ”∂µƒ ±∫Ú∑¢ÀÕ√˚¥Œ$/;"	m	struct:stReturnMerceryManagerCountryCmd
no	tmpcode/commond.h	/^        WORD no;\/\/≈≈√˚$/;"	m	struct:MercenaryReplayCountryList
noCharInfo	GatewayServer/GateUser.h	/^	void noCharInfo()$/;"	f	class:GateUser
noSelectLowLeval	tmpcode/commond.h	/^	bool noSelectLowLeval; \/\/tabº¸≤ª—°µÕº∂ÕÊº“$/;"	m	struct:TabKey
noStrongWeakCountry	tmpcode/commond.h	/^	BYTE noStrongWeakCountry;  \/\/ Œﬁ«ø»ıΩÁ 1:Œﬁ«ø»ıΩÁ 0:”–«ø»ıΩÁ$/;"	m	struct:stReturnCountrySortListUserCmd
noTeam	ScenesServer/Scene.h	/^    bool noTeam() const { return (function & MAP_FUNCTION_NOTEAM); }$/;"	f	class:Scene
noWeakCountry	tmpcode/commond.h	/^	bool noWeakCountry;$/;"	m	struct:stReturnCountryPowerCmd
nobbbbb	base/Command.h	/^  BYTE nobbbbb;$/;"	m	struct:Cmd::t_UserData
nobility	tmpcode/commond.h	/^	 BYTE nobility;  \/\/ æÙŒª$/;"	m	struct:st_WatchPlayer
nobility	tmpcode/commond.h	/^	BYTE nobility;      \/\/æÙŒª  20091015–¬‘ˆæÙŒª–≈œ¢∑¢æ≈∆¡$/;"	m	struct:st_CharShow2
nobility	tmpcode/commond.h	/^	BYTE nobility;      \/\/æÙŒª  20091015–¬‘ˆæÙŒª–≈œ¢∑¢æ≈∆¡$/;"	m	struct:t_UserData
node	base/xml/xml_utility.h	/^	xmlNodePtr node;$/;"	m	struct:detail::argument_parse
node	base/zAStar.h	/^		zPathPoint *node;$/;"	m	struct:zAStar::zPathQueue
node	tmpcode/commond.h	/^    stScoreNode node[3];$/;"	m	struct:stShouLieScoreListCmd
node_has_content	base/xml/xml_utility.h	/^    const int node_has_content  =0x04;$/;"	v
node_has_nothing	base/xml/xml_utility.h	/^    const int node_has_nothing	=0x00;$/;"	v
node_has_props	base/xml/xml_utility.h	/^    const int node_has_props	=0x01;$/;"	v
node_has_subnodes	base/xml/xml_utility.h	/^    const int node_has_subnodes =0x02;$/;"	v
node_parser_generator_cont	base/xml/xml_parser_generator.h	/^	typedef std::vector<xml_node_parser_generator*> node_parser_generator_cont;$/;"	t	class:xml_node_parser_generator
nodename	base/xml/xml_parser_generator.h	/^	std::string nodename;$/;"	m	class:xml_node_parser_generator
nodevalue	base/xml/xml_parser_generator.h	/^	std::string nodevalue;$/;"	m	class:xml_node_parser_generator
nofivedam	ScenesServer/ScenePk.h	/^      WORD nofivedam;$/;"	m	struct:PkPreValue::__anon157::__anon158
nofivedef	ScenesServer/ScenePk.h	/^      WORD nofivedef;$/;"	m	struct:PkPreValue::__anon157::__anon158
nofivemaxdam	ScenesServer/ScenePk.h	/^      WORD nofivemaxdam;$/;"	m	struct:PkPreValue::__anon157::__anon158
nofivemaxmdam	ScenesServer/ScenePk.h	/^      WORD nofivemaxmdam;$/;"	m	struct:PkPreValue::__anon157::__anon158
nofivemdam	ScenesServer/ScenePk.h	/^      WORD nofivemdam;$/;"	m	struct:PkPreValue::__anon157::__anon158
nofivemdef	ScenesServer/ScenePk.h	/^      WORD nofivemdef;$/;"	m	struct:PkPreValue::__anon157::__anon158
nominator	tmpcode/commond.h	/^        char nominator[MAX_NAMESIZE];  \/\/ «À≠»Œ√¸µƒ$/;"	m	struct:OfficialItem
none_mode	ScenesServer/Chat.h	/^      none_mode =   0x00,$/;"	e	enum:Gm::__anon179
normalAction	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::normalAction()$/;"	f	class:SceneNpc
normal_mode	ScenesServer/Chat.h	/^      normal_mode =   0x01,$/;"	e	enum:Gm::__anon179
normalexptime	base/Sept.h	/^  DWORD    normalexptime;        \/\/ ¡Ó≈∆ π”√ÃÏ ˝$/;"	m	struct:SeptDef::stSeptInfo
notOnlineTime	ScenesServer/ChallengeGame.h	/^	DWORD notOnlineTime;		    \/\/À´∑Ω≤ª‘⁄œﬂ ±≥§$/;"	m	class:ChallengeGame
note	base/Command.h	/^    BYTE note;$/;"	m	struct:Cmd::stKokChatUserCmd
note	base/Command.h	/^  char  note[255];            \/\/ Â∏Æ‰ºö‰ªãÁªç$/;"	m	struct:Cmd::stUnionBaseInfoCmd
note	base/Command.h	/^  char  note[255];$/;"	m	struct:Cmd::stSeptBaseInfoCmd
note	base/Command.h	/^  char note[255];$/;"	m	struct:Cmd::stCountryNoteCmd
note	base/Command.h	/^  char note[255];$/;"	m	struct:Cmd::stSeptRecord
note	base/Command.h	/^  char note[255];$/;"	m	struct:Cmd::stSeptVoteRecord
note	base/Command.h	/^  char note[255];$/;"	m	struct:Cmd::stUnionRecord
note	base/Command.h	/^  char note[255];$/;"	m	struct:Cmd::stUnionVoteRecord
note	base/Sept.h	/^  char    note[254+1];        \/\/ º“◊ÂΩÈ…‹$/;"	m	struct:SeptDef::stSeptInfo
note	base/Union.h	/^  char    note[254+1];        \/\/ Â∏Æ‰ºö‰ªãÁªç$/;"	m	struct:UnionDef::stUnionInfo
note	tmpcode/commond.h	/^		 BYTE note;                     \/\/±∏”√◊÷∂Œ£¨∏¥”√¥Àœ˚œ¢ ±ø… π”√$/;"	m	struct:stKokChatUserCmd
note	tmpcode/commond.h	/^	char  note[512];$/;"	m	struct:stSeptBaseInfoCmd
note	tmpcode/commond.h	/^	char  note[512];$/;"	m	struct:stUnionBaseInfoCmd
note	tmpcode/commond.h	/^	char note[255];$/;"	m	struct:stCountryNoteCmd
note	tmpcode/commond.h	/^	char note[33];          \/\/∫∞ª∞µƒƒ⁄»›$/;"	m	struct:stUseBugleObjSayToWorldUserCmd
note2	base/Command.h	/^    WORD note2;$/;"	m	struct:Cmd::stKokChatUserCmd
note2	tmpcode/commond.h	/^		 WORD  note2;                    \/\/±∏”√◊÷∂Œ£¨∏¥”√ ± π”√$/;"	m	struct:stKokChatUserCmd
noteBuf	base/Command.h	/^  char noteBuf[255];$/;"	m	struct:Cmd::stNoteSeptCmd
noteBuf	base/Command.h	/^  char noteBuf[255];$/;"	m	struct:Cmd::stNoteUnionCmd
noteBuf	tmpcode/commond.h	/^	char noteBuf[512];$/;"	m	struct:stNoteSeptCmd
noteBuf	tmpcode/commond.h	/^	char noteBuf[512];$/;"	m	struct:stNoteUnionCmd
nothing	tmpcode/commond.h	/^	BYTE nothing;                   \/\/Œﬁ÷µ£¨’ºŒª$/;"	m	struct:LingQiData
nothing	tmpcode/commond.h	/^	DWORD nothing[2];					\/\/’ºŒª”√$/;"	m	struct:DecayHouseBaseData
nothing	tmpcode/commond.h	/^	DWORD nothing[2];               \/\/’ºŒª”√$/;"	m	struct:DecayNewLingQi
nothing	tmpcode/commond.h	/^	DWORD nothing[3];       \/\/’ºŒª”√$/;"	m	struct:t_DragonData
notice	tmpcode/commond.h	/^		char notice[MAX_NOTICEINFO];$/;"	m	struct:stUnionShopMeetigInfo
notice	tmpcode/commond.h	/^	BYTE notice;$/;"	m	struct:stRetTrafficInfoUserCmd
noticeType	tmpcode/commond.h	/^	BYTE noticeType;  \/\/π´∏Ê¿‡–Õ  ≤Œº˚√∂æŸNoticeState$/;"	m	struct:SeptNotice
noticeType	tmpcode/commond.h	/^	BYTE noticeType;  \/\/π´∏Ê¿‡–Õ ≤Œº˚…œ√Ê√∂æŸnoticeState$/;"	m	struct:t_ReqPutSeptNotice
noticeType	tmpcode/commond.h	/^	BYTE noticeType;  \/\/π´∏Ê¿‡–Õ ≤Œº˚…œ√Ê√∂æŸnoticeState$/;"	m	struct:t_ReqSeptNoticeManager
notify	ScenesServer/Quest.cpp	/^int Quest::notify(SceneUser& user)$/;"	f	class:Quest
notify	ScenesServer/Quest.cpp	/^int QuestList::notify(SceneUser& user) const$/;"	f	class:QuestList
notify	ScenesServer/Quest.cpp	/^int Vars::notify(SceneUser& user) const$/;"	f	class:Vars
notify	ScenesServer/Quest.cpp	/^int Vars::notify(SceneUser& user,const std::string& name) const$/;"	f	class:Vars
notify	ScenesServer/zObject.cpp	/^void StorePack::notify(SceneUser* user)$/;"	f	class:StorePack
notify	tmpcode/commond.h	/^	BYTE notify;\/\/\/\/ «∑Ò∏¯Õ®÷™,0±Ì æ≤ªÕ®÷™£¨1±Ì æ…œœﬂÕ®÷™£¨2±Ì æΩ· ¯Õ®÷™$/;"	m	struct:stSetOfflineExpUserCmd
notifyAllGroupListToMe	ScenesServer/GroupCardManager.cpp	/^void GroupCardManager::notifyAllGroupListToMe(SceneUser& user)$/;"	f	class:GroupCardManager
notifyAllHeroInfoToMe	ScenesServer/HeroInfoManager.cpp	/^void HeroInfoManager::notifyAllHeroInfoToMe(SceneUser& user)$/;"	f	class:HeroInfoManager
notifyAllTujianDataToMe	ScenesServer/CardTujianManager.cpp	/^void CardTujianManager::notifyAllTujianDataToMe(SceneUser& user)$/;"	f	class:CardTujianManager
notifyCountryTax	SessionServer/SessionManager.cpp	/^void SceneSessionManager::notifyCountryTax(DWORD dwCountry,BYTE byTax)$/;"	f	class:SceneSessionManager
notifyHMS	ScenesServer/SceneEntryPk.h	/^    bool notifyHMS;    \/\/\/ ÈÄöÁü•HP,MP,SPÊîπÂèò$/;"	m	struct:SceneEntryPk
notifyLoginServer	GatewayServer/GatewayServer.cpp	/^bool GatewayService::notifyLoginServer()$/;"	f	class:GatewayService
notifyMarketInfo	ScenesServer/MarketSystemManager.cpp	/^void MarketSystemManager::notifyMarketInfo(SceneUser& user)$/;"	f	class:MarketSystemManager
notifyMe	SuperServer/ServerTask.cpp	/^bool ServerTask::notifyMe()$/;"	f	class:ServerTask
notifyOneGroupInfoToMe	ScenesServer/GroupCardManager.cpp	/^void GroupCardManager::notifyOneGroupInfoToMe(SceneUser& user, const DWORD index)$/;"	f	class:GroupCardManager
notifyOnlineToGate	SessionServer/SessionManager.cpp	/^void UserSessionManager::notifyOnlineToGate()$/;"	f	class:UserSessionManager
notifyOther	SuperServer/ServerTask.cpp	/^bool ServerTask::notifyOther()$/;"	f	class:ServerTask
notifyOther	SuperServer/ServerTask.cpp	/^bool ServerTask::notifyOther(WORD dstID)$/;"	f	class:ServerTask
notifyType	tmpcode/commond.h	/^	BYTE notifyType;  \/\/Õ®÷™¿‡–Õ ≤Œº˚…œ√Ê√∂æŸ$/;"	m	struct:stNotifyUserPrayCmd
notifyUnfinished	ScenesServer/SceneUser.h	/^    bool notifyUnfinished;$/;"	m	struct:SceneUser
notifystep	ScenesServer/SceneNpc.h	/^  BYTE notifystep; \/\/ÁªøBOSSÈÄöÁü•Ê≠•È™§$/;"	m	class:SceneNpc
notuse	base/zTCPTask.h	/^		notuse    =  0,            \/**< ¡¨Ω”πÿ±’◊¥Ã¨ *\/$/;"	e	enum:zTCPTask::zTCPTask_State
now	base/zTime.h	/^	void now()$/;"	f	class:zRTime
now	base/zTime.h	/^	void now()$/;"	f	class:zTime
now	tmpcode/commond.h	/^    DWORD now;$/;"	m	struct:stRefreshJieZhanTitleActive
nowByDelay	base/zTime.h	/^	void nowByDelay(int delay)$/;"	f	class:zRTime
nowEnergy	tmpcode/commond.h	/^        WORD nowEnergy; \/\/µ±«∞µƒƒ‹¡ø÷µ$/;"	m	struct:stShowNowHorseSoulEnergyUserCmd
nowExp	tmpcode/commond.h	/^	DWORD nowExp;           \/\/\/ ƒø«∞ø…µ√µΩµƒæ≠—È$/;"	m	struct:stBuyWineState
nowMP	tmpcode/commond.h	/^	DWORD nowMP;$/;"	m	struct:stRetCityDareMpUserCmd
nowNum	tmpcode/commond.h	/^	BYTE nowNum;  \/\/œ÷‘⁄»À ˝$/;"	m	struct:SeptNotice
nowPrice	tmpcode/commond.h	/^	DWORD nowPrice;$/;"	m	struct:stDancerStateUserCmd
nowUpBuild	tmpcode/commond.h	/^	DWORD nowUpBuild;\/\/’˝‘⁄…˝º∂µƒΩ®÷˛ªÚ’ﬂø∆ººid$/;"	m	struct:stUnionBaseInfoCmd
nowrelive	ScenesServer/ScenePk.h	/^      SWORD nowrelive; \/\/ Á´ãÂç≥Â§çÊ¥ªÊó∂ÂõûÂ§çÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
npc	ScenesServer/SceneNpc.h	/^  zNpcB *npc;$/;"	m	class:SceneNpc
npc	ScenesServer/SceneNpcAI.cpp	/^    SceneNpc * npc;$/;"	m	struct:getEntriesCallBack
npc	ScenesServer/SceneNpcAI.h	/^  SceneNpc * npc;$/;"	m	class:NpcAIController
npcAdKind	tmpcode/commond.h	/^	DWORD npcAdKind;        \/\/\/ –˚¥´¿‡–Õ$/;"	m	struct:stEmployNpcAdUserCmd
npcDefine	ScenesServer/Scene.h	/^    NpcDefineVector npcDefine;$/;"	m	class:Scene
npcHoldData	ScenesServer/SceneUser.h	/^    } npcHoldData;    \/\/\/ ÂÆ∂ÊóèÊéßÂà∂ÁöÑNPCÁõ∏ÂÖ≥Êï∞ÊçÆ$/;"	m	struct:SceneUser	typeref:struct:SceneUser::__anon188
npcID	base/Command.h	/^    DWORD npcID;\/\/npcÁöÑÊï∞ÊçÆid$/;"	m	struct:Cmd::stRtnNpcOwnerListCmd::__anon116
npcID	base/Command.h	/^  DWORD npcID;      \/\/npcid$/;"	m	struct:Cmd::t_CartoonData
npcID	base/Command.h	/^  DWORD npcID;    \/\/NPC ID$/;"	m	struct:Cmd::stAddWaitingCartoonCmd
npcID	base/Command.h	/^  DWORD npcID;$/;"	m	struct:Cmd::stBuyCartoonCmd
npcID	tmpcode/commond.h	/^		DWORD npcID;  \/\/npcID$/;"	m	struct:stRetValidQuestUserCmd::con
npcID	tmpcode/commond.h	/^	DWORD   npcID;                  \/\/’˜Õæ (±‰…ÌNPCID)$/;"	m	struct:TankData
npcID	tmpcode/commond.h	/^	DWORD npcID;            \/\/±‰…ÌNPCID$/;"	m	struct:t_MapTankData
npcID	tmpcode/commond.h	/^	DWORD npcID;    \/\/NPCID$/;"	m	struct:stEnterDTUserCmd
npcID	tmpcode/commond.h	/^	DWORD npcID;    \/\/¡˙ÕºÃ⁄ID$/;"	m	struct:stRegInfoDTUserCmd
npcID	tmpcode/commond.h	/^	DWORD npcID;    \/\/¡˙ÕºÃ⁄NPCID$/;"	m	struct:stNotifyEnterDTUserCmd
npcID	tmpcode/commond.h	/^	DWORD npcID;$/;"	m	struct:stCheckRegUserCmd
npcID	tmpcode/commond.h	/^	DWORD npcID;$/;"	m	struct:stRegNotifyUserCmd
npcID	tmpcode/commond.h	/^	DWORD npcID;$/;"	m	struct:stReqEnterDTUserCmd
npcID	tmpcode/commond.h	/^	DWORD npcID;$/;"	m	struct:stVisitFlagSCUserCmd
npcID	tmpcode/commond.h	/^        DWORD npcID;$/;"	m	struct:OneQuestInfo
npcID	tmpcode/commond.h	/^    DWORD npcID;                    $/;"	m	struct:stResultCheckGoodsCmd
npcID	tmpcode/commond.h	/^    DWORD npcID;    \/\/±ª«Î«Û≤Èø¥µƒÊ‰’æNPCID$/;"	m	struct:stRequestNpcGoodsCmd
npcList	ScenesServer/Recycle.h	/^	std::queue<SceneNpc *> npcList;$/;"	m	class:SceneRecycle
npcName	tmpcode/commond.h	/^	char  npcName[MAX_NAMESIZE+1];    \/\/–Ë“™µƒnpc√˚◊÷$/;"	m	struct:TitleInfo
npcRecover	base/zDatabase.h	/^    npcRecover()$/;"	f	struct:npcRecover
npcRecover	base/zDatabase.h	/^struct npcRecover$/;"	s
npcSkill	base/zDatabase.h	/^    npcSkill():id(0),needLevel(0),rate(0),coefficient(0){}$/;"	f	struct:npcSkill
npcSkill	base/zDatabase.h	/^    npcSkill(const npcSkill &skill)$/;"	f	struct:npcSkill
npcSkill	base/zDatabase.h	/^struct npcSkill$/;"	s
npcState	tmpcode/commond.h	/^	struct npcState{$/;"	s	struct:stRefreshNpcStateMapScreenUserCmd
npcState	tmpcode/commond.h	/^struct npcState : public t_NPCData$/;"	s
npcTempID	tmpcode/commond.h	/^		DWORD npcTempID;$/;"	m	struct:stRetCityReliveInfo::reliveInfo
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;                        $/;"	m	struct:stUnionUpBuild
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;        \/\/\/ µ„ª˜NPCµƒtempid$/;"	m	struct:stGetCityDefItemUnionCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;        \/\/∂‘∏√NPC“˝µºΩ· ¯$/;"	m	struct:stEndReadFlagHeroIslandUserCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;        \/\/∆Ï◊”µƒtempid$/;"	m	struct:stReadFlagHeroIslandUserCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;        \/\/’Ω∆Ïtempid$/;"	m	struct:stReqFlagInfoUserCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;        \/\/◊‹π‹tempID$/;"	m	struct:stCheckMasterNpcUserCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;        \/\/◊‹π‹tempID$/;"	m	struct:stReqMoneyUserCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;        \/\/◊‹π‹tempID$/;"	m	struct:stShowMoneyUserCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;$/;"	m	struct:stEndDarePrayCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;$/;"	m	struct:stRecoverNewGiftBag
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;$/;"	m	struct:stReduceCityNpcReliveTime
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;$/;"	m	struct:stRepairUnionTower
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;$/;"	m	struct:stReqCityDareMpUserCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;$/;"	m	struct:stReqCityDarePrayUserCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;$/;"	m	struct:stReqTotmeEndCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;$/;"	m	struct:stReqTotmeStartCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;$/;"	m	struct:stRetCityDareSuccessUserCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;$/;"	m	struct:stRetVisitResidentTower
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;$/;"	m	struct:stSendSeptAdCmd
npcTempID	tmpcode/commond.h	/^	DWORD npcTempID;\/\/∑√Œ NPCµƒ¡Ÿ ±ID$/;"	m	struct:stVisitMaxLevelMapNpcUserCmd
npcTempID	tmpcode/commond.h	/^        DWORD npcTempID;$/;"	m	struct:stReqStartCollect
npcTempID	tmpcode/commond.h	/^    DWORD npcTempID;        \/\/npc¡Ÿ ±ID$/;"	m	struct:stReqOpenBoxUserCmd
npcTempID	tmpcode/commond.h	/^    DWORD npcTempID;$/;"	m	struct:reqGiveGuardGoodsSeptCmd
npcTempID	tmpcode/commond.h	/^    DWORD npcTempID;$/;"	m	struct:rtSearchGuardGoodsSeptCmd
npcTempID	tmpcode/commond.h	/^    DWORD npcTempID;$/;"	m	struct:stVisitQuestMapFeiLongNpcUserCmd
npcTempid	tmpcode/commond.h	/^	DWORD npcTempid;$/;"	m	struct:stReqTransportUserCmd
npcTempid	tmpcode/commond.h	/^	DWORD npcTempid;$/;"	m	struct:stRetTrafficInfoUserCmd
npcTempid	tmpcode/commond.h	/^	DWORD npcTempid;$/;"	m	struct:stShowBombEffectUserCmd
npcTempid	tmpcode/commond.h	/^        DWORD npcTempid;$/;"	m	struct:stEmoteQuestUserCmd
npcType	tmpcode/commond.h	/^    BYTE npcType;\/\/0ÕÊº“ 1NPC$/;"	m	struct:stMagicEffectUserCmd
npc_call_fellow_rate	ScenesServer/SceneNpcAI.cpp	/^const int NpcAIController::npc_call_fellow_rate = 30;\/\/\/NPCÂè¨Âî§Âêå‰º¥ÁöÑÂá†Áéá$/;"	m	class:NpcAIController
npc_call_fellow_rate	ScenesServer/SceneNpcAI.h	/^  static const int npc_call_fellow_rate;\/\/\/NPCÂè¨Âî§Âêå‰º¥ÁöÑÂá†Áéá$/;"	m	class:NpcAIController
npc_canSend	ScenesServer/SceneUser.cpp	/^	inline const bool npc_canSend() const$/;"	f	struct:GetEnvryOneAndSend
npc_checkpoint_region	ScenesServer/SceneNpcAI.cpp	/^const int NpcAIController::npc_checkpoint_region = 2;\/\/\/NPCÁßªÂä®,Âà∞Ëææ‰∏Ä‰∏™Ë∑ØÁÇπÁöÑÂà§ÂÆöËåÉÂõ¥$/;"	m	class:NpcAIController
npc_checkpoint_region	ScenesServer/SceneNpcAI.h	/^  static const int npc_checkpoint_region;\/\/\/NPCÁßªÂä®,Âà∞Ëææ‰∏Ä‰∏™Ë∑ØÁÇπÁöÑÂà§ÂÆöËåÉÂõ¥$/;"	m	class:NpcAIController
npc_count	base/Command.h	/^    short npc_count;$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
npc_count	tmpcode/commond.h	/^		short npc_count;$/;"	m	struct:stClientNewMap
npc_dwNpcDataID	ScenesServer/SceneUser.h	/^    DWORD npc_dwNpcDataID;        \/\/\/NpcÊï∞ÊçÆÁºñÂè∑$/;"	m	struct:SceneUser
npc_dwNpcTempID	ScenesServer/SceneUser.h	/^    DWORD npc_dwNpcTempID;        \/\/\/Npc‰∏¥Êó∂ÁºñÂè∑$/;"	m	struct:SceneUser
npc_flee_distance	ScenesServer/SceneNpcAI.cpp	/^const int NpcAIController::npc_flee_distance = 4;\/\/\/NPCÈÄÉÁ¶ªÊîªÂáªËÄÖÁöÑË∑ùÁ¶ª$/;"	m	class:NpcAIController
npc_flee_distance	ScenesServer/SceneNpcAI.h	/^  static const int npc_flee_distance;\/\/\/NPCÈÄÉÁ¶ªÊîªÂáªËÄÖÁöÑË∑ùÁ¶ª$/;"	m	class:NpcAIController
npc_getSendBuffer	ScenesServer/SceneUser.cpp	/^	inline const BYTE *npc_getSendBuffer()$/;"	f	struct:GetEnvryOneAndSend
npc_getSize	ScenesServer/SceneUser.cpp	/^	inline const int npc_getSize() const$/;"	f	struct:GetEnvryOneAndSend
npc_list	base/Command.h	/^    } npc_list[0];$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd	typeref:struct:Cmd::stMapScreenSizeDataUserCmd::__anon77
npc_list	tmpcode/commond.h	/^			} npc_list[0];$/;"	m	struct:stClientNewMap	typeref:struct:stClientNewMap::__anon213
npc_list	tmpcode/commond.h	/^	}npc_list[0];         $/;"	m	struct:stRefreshNpcStateMapScreenUserCmd	typeref:struct:stRefreshNpcStateMapScreenUserCmd::npcState
npc_lost_target_region	ScenesServer/SceneNpc.h	/^  static const int npc_lost_target_region = 12;$/;"	m	class:SceneNpc
npc_min_act_region	ScenesServer/SceneNpcAI.cpp	/^const int NpcAIController::npc_min_act_region = 5;\/\/\/NPCÈÄÉÁ¶ªÊîªÂáªËÄÖÁöÑË∑ùÁ¶ª$/;"	m	class:NpcAIController
npc_min_act_region	ScenesServer/SceneNpcAI.h	/^  static const int npc_min_act_region;\/\/\/NPCÊúÄÂ∞èÊ¥ªÂä®ËåÉÂõ¥$/;"	m	class:NpcAIController
npc_name	ScenesServer/QuestEvent.h	/^  const char * npc_name() const$/;"	f	class:Event
npc_one_checkpoint_time	ScenesServer/SceneNpcAI.cpp	/^const int NpcAIController::npc_one_checkpoint_time = 60;\/\/\/NPCÊåâÁÖßË∑ØÁ∫øÁßªÂä®Êó∂,Ëµ∞‰∏Ä‰∏™Ë∑ØÁÇπÁöÑÊúÄÈïøÊó∂Èó¥$/;"	m	class:NpcAIController
npc_one_checkpoint_time	ScenesServer/SceneNpcAI.h	/^  static const int npc_one_checkpoint_time;\/\/\/NPCÊåâÁÖßË∑ØÁ∫øÁßªÂä®Êó∂,Ëµ∞‰∏Ä‰∏™Ë∑ØÁÇπÁöÑÊúÄÈïøÊó∂Èó¥$/;"	m	class:NpcAIController
npc_onhit_stop_time	ScenesServer/SceneNpcAI.cpp	/^const int NpcAIController::npc_onhit_stop_time = 2;\/\/\/‰ªªÂä°NPCÁßªÂä®‰∏≠Ë¢´ÊîªÂáªÊó∂,ÂÅúÊ≠¢ÁöÑÊó∂Èó¥$/;"	m	class:NpcAIController
npc_onhit_stop_time	ScenesServer/SceneNpcAI.h	/^  static const int npc_onhit_stop_time;\/\/\/‰ªªÂä°NPCÁßªÂä®‰∏≠Ë¢´ÊîªÂáªÊó∂,ÂÅúÊ≠¢ÁöÑÊó∂Èó¥$/;"	m	class:NpcAIController
npc_out_of_range_region	ScenesServer/SceneNpc.h	/^  static const int npc_out_of_range_region = 20;$/;"	m	class:SceneNpc
npc_outofbound	ScenesServer/SceneUser.cpp	/^	inline const bool npc_outofbound() const$/;"	f	struct:GetEnvryOneAndSend
npc_pet_chase_region	ScenesServer/SceneNpc.h	/^  static const int npc_pet_chase_region = 2;$/;"	m	class:SceneNpc
npc_pet_run_region	ScenesServer/SceneNpc.h	/^  static const int npc_pet_run_region = 4;$/;"	m	class:SceneNpc
npc_pet_warp_region	ScenesServer/SceneNpc.h	/^  static const int npc_pet_warp_region = 6;$/;"	m	class:SceneNpc
npc_search_region	ScenesServer/SceneNpc.h	/^  static const int npc_search_region = 5;$/;"	m	class:SceneNpc
npcdareCountryID	ScenesServer/SceneUser.h	/^    DWORD npcdareCountryID;$/;"	m	struct:SceneUser
npcdareMapID	ScenesServer/SceneUser.h	/^    DWORD npcdareMapID;$/;"	m	struct:SceneUser
npcdareNotify	ScenesServer/SceneUser.h	/^    bool npcdareNotify;$/;"	m	struct:SceneUser
npcdarePosX	ScenesServer/SceneUser.h	/^    DWORD npcdarePosX;$/;"	m	struct:SceneUser
npcdarePosY	ScenesServer/SceneUser.h	/^    DWORD npcdarePosY;$/;"	m	struct:SceneUser
npcdareflag	ScenesServer/SceneUser.h	/^    bool npcdareflag;$/;"	m	struct:SceneUser
npcid	ScenesServer/NpcTrade.h	/^      DWORD npcid;      \/\/\/NpcÁºñÂè∑$/;"	m	struct:NpcTrade::NpcDialog
npcid	base/Command.h	/^  DWORD npcid;$/;"	m	struct:Cmd::stKillBossUserCmd
npcid	base/Command.h	/^  DWORD npcid;$/;"	m	struct:Cmd::stRefreshBossUserCmd
nsc_updamp	ScenesServer/ScenePk.h	/^      SWORD nsc_updamp; \/\/ÈÄÜÊâãÂà∫ÁöÑ‰∏ìÁî®ÊäÄËÉΩÊèêÂçáÁä∂ÊÄÅ„ÄÇ$/;"	m	struct:SkillState::__anon155::__anon156
num	BillServer/StockConsign.h	/^  DWORD num;$/;"	m	struct:ConsignTrait
num	ScenesServer/SceneDefine.h	/^	DWORD num;                \/\/Êï∞Èáè$/;"	m	struct:t_NpcDefine
num	ScenesServer/zObject.h	/^  int num() const$/;"	f	struct:Combination
num	base/Command.h	/^        WORD num; \/\/ŒÔ∆∑ ˝ƒø$/;"	m	struct:Cmd::stSortObjectPropertyUserCmd
num	base/Command.h	/^    WORD  num;$/;"	m	struct:Cmd::stBatchRemoveNpcMapScreenUserCmd
num	base/Command.h	/^    WORD  num;$/;"	m	struct:Cmd::stBatchRemoveUserMapScreenUserCmd
num	base/Command.h	/^    WORD num;$/;"	m	struct:Cmd::stAddMobileObjectListPropertyUserCmd
num	base/Command.h	/^    WORD num;$/;"	m	struct:Cmd::stAddObjectListPropertyUserCmd
num	base/Command.h	/^  BYTE num;     \/\/\/Â∏¶Áä∂ÊÄÅÁöÑÊï∞Èáè$/;"	m	struct:Cmd::t_MapNpcDataPosState
num	base/Command.h	/^  BYTE num;     \/\/\/Â∏¶Áä∂ÊÄÅÁöÑÊï∞Èáè$/;"	m	struct:Cmd::t_MapNpcDataState
num	base/Command.h	/^  BYTE num;     \/\/\/Â∏¶Áä∂ÊÄÅÁöÑÊï∞Èáè$/;"	m	struct:Cmd::t_MapUserDataPosState
num	base/Command.h	/^  BYTE num;     \/\/\/Â∏¶Áä∂ÊÄÅÁöÑÊï∞Èáè$/;"	m	struct:Cmd::t_MapUserDataState
num	base/Command.h	/^  BYTE num;$/;"	m	struct:Cmd::stReqSeptNameListCmd
num	base/Command.h	/^  BYTE num;$/;"	m	struct:Cmd::stReqUnionNameLlistCmd
num	base/Command.h	/^  BYTE num;$/;"	m	struct:Cmd::stRtnSeptNameListCmd
num	base/Command.h	/^  BYTE num;$/;"	m	struct:Cmd::stRtnUnionNameListCmd
num	base/Command.h	/^  DWORD num;$/;"	m	struct:Cmd::stListGift
num	base/Command.h	/^  DWORD num;$/;"	m	struct:Cmd::stRequstHistoryStockUserCmd
num	base/Command.h	/^  DWORD num;$/;"	m	struct:Cmd::stRequstSelfHistoryStockUserCmd
num	base/Command.h	/^  DWORD num;$/;"	m	struct:Cmd::stWinnerGift
num	base/Command.h	/^  WORD num;$/;"	m	struct:Cmd::stAddObjectSellListUserCmd
num	base/Command.h	/^  WORD num;$/;"	m	struct:Cmd::stRequestAddObjectSellUserCmd
num	base/Command.h	/^  WORD num;$/;"	m	struct:Cmd::stTradeObject
num	base/HeroCardCmd.h	/^	BYTE num;   \/\/∏ˆ ˝$/;"	m	struct:Cmd::t_Tujian
num	base/HeroCardCmd.h	/^	BYTE num;$/;"	m	struct:Cmd::stNotifyOneCardTujianInfoCmd
num	base/MiniCommand.h	/^      DWORD num;$/;"	m	struct:Cmd::Mini::t_Scene_Check_Draw
num	base/MiniCommand.h	/^      DWORD num;$/;"	m	struct:Cmd::Mini::t_Scene_Deposit
num	base/MiniCommand.h	/^      DWORD num;$/;"	m	struct:Cmd::Mini::t_Scene_Draw_Ret
num	base/RecordCommand.h	/^      WORD num;              \/\/\/ ÊúâÊïàËßíËâ≤‰ø°ÊÅØËÆ°Êï∞$/;"	m	struct:Cmd::Record::t_Ret_SelectInfo_GateRecord
num	base/SessionCommand.h	/^      DWORD num;$/;"	m	struct:Cmd::Session::t_drawCartoon_SceneSession
num	base/SuperCommand.h	/^        DWORD num;$/;"	m	struct:Cmd::Super::t_CountryOnline::Online
num	base/xmlparser/market.h	/^            xml_prop<DWORD>	num;$/;"	m	struct:MarketConfig::Obj::Item
num	base/xmlparser/test.h	/^            xml_prop<int>	num;$/;"	m	struct:TestConfig::Reward::Item
num	base/zDatabase.h	/^	    WORD num;	    \/\/µ±(attack==3 || attack==4)∏√◊÷∂Œ”––ß  $/;"	m	struct:SkillStatus::__anon36::__anon37
num	base/zDatabase.h	/^    DWORD num;$/;"	m	struct:npcRecover
num	tmpcode/commond.h	/^		BYTE num;               \/\/∑÷…Ì¥Œ ˝$/;"	m	struct:stRetSeptAvatarInfo::stAvatarInfo
num	tmpcode/commond.h	/^		DWORD num;$/;"	m	struct:ChangeInfo::objInfo
num	tmpcode/commond.h	/^		DWORD num;$/;"	m	struct:stChangeUnionResourceType::ResAssign
num	tmpcode/commond.h	/^		DWORD num;$/;"	m	struct:stRetUnionAndProInfo::__anon273
num	tmpcode/commond.h	/^		DWORD num;$/;"	m	struct:stRetUnionInfo::__anon271
num	tmpcode/commond.h	/^		DWORD num;$/;"	m	struct:stRetUnionNeedBuildProCmd::__anon275
num	tmpcode/commond.h	/^		DWORD num;$/;"	m	struct:stRetUnionProStateCmd::__anon274
num	tmpcode/commond.h	/^		WORD    num;                          \/\/¥Ú‘Ï¥Œ ˝$/;"	m	struct:stFoundLeechdomPropertyUserCmd
num	tmpcode/commond.h	/^		WORD    num;            \/\/ ˝¡ø  $/;"	m	struct:stRetBuyGoodsListBusiness::__anon346
num	tmpcode/commond.h	/^		WORD num;$/;"	m	struct:stAddObjectListPropertyUserCmd
num	tmpcode/commond.h	/^		WORD num;$/;"	m	struct:stTradeObject
num	tmpcode/commond.h	/^	BYTE  num;              \/\/∏ƒ¡ºÀÈ∆¨µƒµƒ∏ˆ ˝$/;"	m	struct:stTankPartUpgradePropertyUserCmd
num	tmpcode/commond.h	/^	BYTE num;				\/\/∂”ŒÈ»À ˝$/;"	m	struct:teamRecruitInfo
num	tmpcode/commond.h	/^	BYTE num; 		\/\/\/¥¯◊¥Ã¨µƒ ˝¡ø$/;"	m	struct:t_MapUserDataPosState
num	tmpcode/commond.h	/^	BYTE num;               \/\/\/¥¯◊¥Ã¨µƒ ˝¡ø$/;"	m	struct:npcState
num	tmpcode/commond.h	/^	BYTE num;$/;"	m	struct:stListLingQiUserCmd
num	tmpcode/commond.h	/^	BYTE num;$/;"	m	struct:stNotifyGottenLifeAwardPromoterUserCmd
num	tmpcode/commond.h	/^	BYTE num;$/;"	m	struct:stPositionNameListCmd
num	tmpcode/commond.h	/^	BYTE num;$/;"	m	struct:stRetAvatarInfo
num	tmpcode/commond.h	/^	BYTE num;$/;"	m	struct:stRetBossListUserCmd
num	tmpcode/commond.h	/^	BYTE num;$/;"	m	struct:stRetCourseOfKingCmd
num	tmpcode/commond.h	/^	BYTE num;$/;"	m	struct:stRetTankListCmd
num	tmpcode/commond.h	/^	BYTE num;$/;"	m	struct:stReturnFriendHomeUserCmd
num	tmpcode/commond.h	/^	BYTE num;$/;"	m	struct:stSendScoreSeptPopoUserCmd
num	tmpcode/commond.h	/^	BYTE num;$/;"	m	struct:stStatueInfoUserCmd
num	tmpcode/commond.h	/^	BYTE num;$/;"	m	struct:stUpdateScoreSeptPopoUserCmd
num	tmpcode/commond.h	/^	BYTE num;$/;"	m	struct:stUserListTankCmd
num	tmpcode/commond.h	/^	DWORD num;                              \/\/\/ ◊ ÷˙”∂±¯Õ≈ ˝¡ø$/;"	m	struct:stRetCityFundUnionHistoryCmd
num	tmpcode/commond.h	/^	DWORD num;              \/\/\/ ¥À¥ŒµˆµΩµƒŒÔ∆∑ ˝¡ø$/;"	m	struct:stCationInfoFishUserCmd
num	tmpcode/commond.h	/^	DWORD num;              \/\/∏ˆ ˝  $/;"	m	struct:FarmNotice
num	tmpcode/commond.h	/^	DWORD num;          \/\/◊ ‘¥ ˝¡ø $/;"	m	struct:stContributeResurceUnionCmd
num	tmpcode/commond.h	/^	DWORD num;       \/\/\/ ≤˙∆∑ ˝¡ø$/;"	m	struct:sellList
num	tmpcode/commond.h	/^	DWORD num;       \/\/\/ ø‚¥Ê ˝¡ø$/;"	m	struct:storageList
num	tmpcode/commond.h	/^	DWORD num;      \/\/\/ »ˆ∫Ï∞¸±Ì æ√ø¥Œ»ˆµƒ∏ˆ ˝$/;"	m	struct:stSetMarriageInteractionCmd
num	tmpcode/commond.h	/^	DWORD num;      \/\/\/ ŒÔ∆∑ ˝¡ø$/;"	m	struct:stBuyUnionMacketObject
num	tmpcode/commond.h	/^	DWORD num;      \/\/µ±«∞µƒø‚¥Ê¡ø$/;"	m	struct:stRetUnionProStateCmd
num	tmpcode/commond.h	/^	DWORD num;      \/\/◊‘º∫µƒ˜»¡¶÷µ$/;"	m	struct:stCompareUserDataInFlowerSortUserCmd
num	tmpcode/commond.h	/^	DWORD num;    \/\/¡Ï»° ˝¡ø$/;"	m	struct:stReqExploitToMoneyUserCmd
num	tmpcode/commond.h	/^	DWORD num; \/\/∑¢ÀÕ ˝¡ø$/;"	m	struct:stResourceListUnionCmd
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:BlessObjectItem
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stAnswerNineScreenSeptMemberCmd
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stAnswerNineScreenUnionMemberCmd
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stQueryRetLTQUserCmd
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stReqExploitToExpUserCmd
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stReqProcessResourceUnionCmd
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stReqProducingUnionProCmd
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stReqRestExploitToSalaryUserCmd
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stReqSellToStorage
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stReqStorageToSell
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stRequstSelfHistoryStockUserCmd
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stRetCityDareInfoUserCmd
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stRetCityDareInfoUserCmd_buf
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stRetCityDareSortUserCmd
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stSendHomeListUserCmd
num	tmpcode/commond.h	/^	DWORD num;$/;"	m	struct:stStableDataCmd
num	tmpcode/commond.h	/^	DWORD num;\/\/≥§∂»$/;"	m	struct:stRetUnionBuildInfo
num	tmpcode/commond.h	/^	DWORD num;\/\/√˚◊÷∏ˆ ˝$/;"	m	struct:stReqJoinSeptPopoUserCmd
num	tmpcode/commond.h	/^	WORD    num;    $/;"	m	struct:stBatchRemoveUserMapScreenUserCmd
num	tmpcode/commond.h	/^	WORD num;						\/\/ŒÔ∆∑ ˝¡ø$/;"	m	struct:StoreNotice
num	tmpcode/commond.h	/^	WORD num;       \/\/±®√˚º“◊Â ˝$/;"	m	struct:stRegInfoDTUserCmd
num	tmpcode/commond.h	/^	WORD num;       \/\/ŒÔ∆∑ ˝¡ø$/;"	m	struct:NeedMaterial
num	tmpcode/commond.h	/^	WORD num;   \/\/ŒÔ∆∑ ˝¡ø$/;"	m	struct:stGRecommendAward
num	tmpcode/commond.h	/^	WORD num;$/;"	m	struct:stAddObjectSellListUserCmd
num	tmpcode/commond.h	/^	WORD num;$/;"	m	struct:stDistributePointPropertyUserCmd
num	tmpcode/commond.h	/^	WORD num;$/;"	m	struct:stRefreshNpcStateMapScreenUserCmd
num	tmpcode/commond.h	/^	WORD num;\/\/ŒÔ∆∑µƒ¥Û–°$/;"	m	struct:stRequestAddObjectSellUserCmd
num	tmpcode/commond.h	/^	int num;$/;"	m	struct:stReturnCountryTax
num	tmpcode/commond.h	/^	int num;$/;"	m	struct:stReturnTaxHistory
num	tmpcode/commond.h	/^	int num;$/;"	m	struct:stReturnTrafficTaxHistory
num	tmpcode/commond.h	/^         BYTE    num;                    \/\/  ˝÷µ÷–»À ˝$/;"	m	struct:stShowScoreSeptBattleUserCmd
num	tmpcode/commond.h	/^         WORD  num;                      \/\/±æ¥Œ∑¢ÀÕµƒ’ÛÕˆÕÊº“ ˝¡ø$/;"	m	struct:stGuyDeadDaTaoShaUserCmd
num	tmpcode/commond.h	/^         WORD num;       \/\/…˙≥…Ãÿ–ßµƒ«¯”Ú ˝ƒø$/;"	m	struct:stAddUnsafeRegionDTSUserCmd
num	tmpcode/commond.h	/^        BYTE     num;           \/\/º”–«µƒ∏ˆ ˝$/;"	m	struct:stNpcUpgradePropertyUserCmd
num	tmpcode/commond.h	/^        DWORD num;      \/\/‘ÀÀÕ»À ˝$/;"	m	struct:rtChunYunInfo
num	tmpcode/commond.h	/^        DWORD num;$/;"	m	struct:stListGift
num	tmpcode/commond.h	/^        DWORD num;$/;"	m	struct:stReturnBargirlADContent
num	tmpcode/commond.h	/^        DWORD num;$/;"	m	struct:stStartEmployGatherCmd::gather
num	tmpcode/commond.h	/^        DWORD num;$/;"	m	struct:stWinnerGift
num	tmpcode/commond.h	/^        DWORD num;\/\/ø®∏ˆ ˝$/;"	m	struct:stExchangeGoldCardUserCmd
num	tmpcode/commond.h	/^        WORD num; \/\/ŒÔ∆∑ ˝ƒø$/;"	m	struct:stSortObjectPropertyUserCmd
num	tmpcode/commond.h	/^        WORD num;$/;"	m	struct:stRetOfficialUserCmd
num	tmpcode/commond.h	/^        WORD num;$/;"	m	struct:stSendFriendListUserCmd
num	tmpcode/commond.h	/^        WORD num;\/\/∑˚∫œ…Í«Îµƒπ˙º“ ˝¡ø$/;"	m	struct:stSendCountryListMercenaryCountryCmd
num	tmpcode/commond.h	/^        WORD num;\/\/πÕ”∂æ¸ ˝¡ø$/;"	m	struct:stSendMercenaryListCountryCmd
num	tmpcode/commond.h	/^        WORD num;\/\/…Í«ÎπÕ”∂æ¸µƒ ˝¡ø$/;"	m	struct:stSendReplayMerceryListCountryCmd
num	tmpcode/commond.h	/^        WORD num;\/\/ £”‡…Í«Î»À ˝$/;"	m	struct:MercenaryReplayCountryList
num	tmpcode/commond.h	/^        int num;$/;"	m	struct:stCrystalAllInfoDataUserCmd
num	tmpcode/commond.h	/^    BYTE num;       \/\/≥…‘± ˝ƒø£ª∑ø÷˜≥˝Õ‚$/;"	m	struct:stRoomMemDetailQuestRoomUserCmd
num	tmpcode/commond.h	/^    BYTE num;       \/\/¥´ÀÕµƒ∑øº‰ ˝ƒø$/;"	m	struct:stRoomInfoQuestRoomUserCmd
num	tmpcode/commond.h	/^    BYTE num;       \/\/œÚøÕªß∂ÀÀ¢ŒÔ∆∑µƒ ˝ƒø$/;"	m	struct:stResultCheckGoodsCmd
num	tmpcode/commond.h	/^    DWORD num;       \/\/“™∂“ªªµƒ ˝¡ø$/;"	m	struct:stExchanceEssenceUserCmd
num	tmpcode/commond.h	/^    DWORD num; \/\/ ˝÷µ$/;"	m	struct:refreshUserDataCmd
num	tmpcode/commond.h	/^    DWORD num;$/;"	m	struct:TempObjectItem
num	tmpcode/commond.h	/^    WORD    num;            \/\/¥Ú‘Ï¥Œ ˝$/;"	m	struct:stFoundLeechdomSkillStore
num	tmpcode/commond.h	/^    WORD    num;$/;"	m	struct:stBatchRemoveNpcMapScreenUserCmd
num	tmpcode/commond.h	/^    WORD   num;         \/\/∂˜¥ÕµƒŒÔ∆∑ ˝¡ø$/;"	m	struct:t_RewardInfo
num	tmpcode/commond.h	/^    WORD  num;$/;"	m	struct:stAddListPurchase
num	tmpcode/commond.h	/^    WORD  num;$/;"	m	struct:stSurrenderPurchase
numPassword	GatewayServer/GatewayTask.h	/^	char numPassword[MAX_NUMPASSWORD];$/;"	m	class:GatewayTask
numPwd	GatewayServer/GatewayTask.h	/^	DWORD numPwd;$/;"	m	class:GatewayTask
number	base/zDatabase.h	/^	    DWORD number;$/;"	m	struct:zObjectB::material::stuff
number	tmpcode/commond.h	/^	BYTE number;            \/\/‘⁄¥¢≤ÿπÒµƒŒª÷√$/;"	m	struct:st_TakeOutItemStoreHouseUserCmd
number	tmpcode/commond.h	/^	BYTE number;            \/\/‘⁄¥¢≤ÿπÒ÷–µƒŒª÷√$/;"	m	struct:st_PutItemStoreHouseUserCmd
number	tmpcode/commond.h	/^	BYTE number;    \/\/‘⁄¥¢≤ÿπÒµƒŒª÷√$/;"	m	struct:boxObject
number	tmpcode/commond.h	/^	DWORD number;	\/\/∏ƒ±‰µƒ ˝¡ø$/;"	m	struct:stUpdateHouseRoomRenQiUserCmd
numpasswd	base/zType.h	/^  char numpasswd[MAX_NUMPASSWORD];$/;"	m	struct:t_NewLoginSession
nums	tmpcode/commond.h	/^	BYTE nums;              \/\/ ªÿπÈ’ﬂ ˝ƒø$/;"	m	struct:stRtnSponserAwardCallBackUserCmd
nums	tmpcode/commond.h	/^	BYTE nums;          \/\/Ãı ˝  $/;"	m	struct:stDetailFightContentUserCmd
nums	tmpcode/commond.h	/^	BYTE nums;$/;"	m	struct:stRetBetInChallengeDragonUserCmd
nums	tmpcode/commond.h	/^	WORD nums;$/;"	m	struct:stRefreshRelativeNumZhenxuanUserCmd
o	ScenesServer/SceneUser.cpp	/^	SaveObject *o;$/;"	m	class:SaveObjectExec
o	ScenesServer/zObject.h	/^  zObject *o;$/;"	m	struct:zSceneObject
obID	tmpcode/commond.h	/^    DWORD   obID;                       \/\/ŒÔ∆∑id$/;"	m	struct:stFoundLeechdomSkillStore
obj	base/xmlparser/market.h	/^    xml_node<Obj>	obj;$/;"	m	struct:MarketConfig
obj	base/zMisc.h	/^	static object_type obj;$/;"	m	struct:singleton_default
obj	base/zMisc.h	/^typename singleton_default<T>::object_type singleton_default<T>::obj;$/;"	m	class:singleton_default
obj	tmpcode/commond.h	/^	HouseObjDef obj;$/;"	m	struct:rt_AddObjectHouseUserCmd
obj	tmpcode/commond.h	/^    t_Object obj;$/;"	m	struct:EquipSortObjItem
obj	tmpcode/commond.h	/^    t_Object obj[1];        \/\/1º˛¡ÈªÍ+4º˛◊∞±∏,obj[0]Œ™¡ÈªÍ$/;"	m	struct:t_HorseData
objCount	tmpcode/commond.h	/^	BYTE objCount;$/;"	m	struct:HouseRoomDataMapUserCmd
objCount	tmpcode/commond.h	/^	DWORD objCount;$/;"	m	struct:rt_stAutoCfgHappyCardBoxUserCmd
objID	tmpcode/commond.h	/^		DWORD   objID;          \/\/objID $/;"	m	struct:stRetBuyGoodsListBusiness::__anon346
objID	tmpcode/commond.h	/^		DWORD   objID;          \/\/objID $/;"	m	struct:stRetCollectListBusiness::__anon348
objID	tmpcode/commond.h	/^		DWORD   objID;          \/\/objID $/;"	m	struct:stRetSaleGoodsListBusiness::__anon347
objID	tmpcode/commond.h	/^		DWORD objID;$/;"	m	struct:ChangeInfo::objInfo
objID	tmpcode/commond.h	/^	DWORD	objID;$/;"	m	struct:stNotifyAddFurnitureHomeUserCmd
objID	tmpcode/commond.h	/^	DWORD   objID;              \/\/…˝º∂◊∞±∏µƒµ¿æﬂ±ÌID$/;"	m	struct:t_RewardInfo
objID	tmpcode/commond.h	/^	DWORD   objID;          \/\/…Ã∆∑ID$/;"	m	struct:stBuyBusinessGoods
objID	tmpcode/commond.h	/^	DWORD objID;		\/\/ŒÔ∆∑ª˘¥°ID tbl$/;"	m	struct:HouseObjDef
objID	tmpcode/commond.h	/^	DWORD objID;            \/\/\/ ¥À¥ŒµˆµΩµƒŒÔ∆∑ID(»Áπ˚ «”„»‚‘Úobj=0£¨’‚∏ˆ÷µ≤ªÃÓ–¥)$/;"	m	struct:stCationInfoFishUserCmd
objID	tmpcode/commond.h	/^	DWORD objID;            \/\/\/ ŒÔ∆∑µƒdwThisID;$/;"	m	struct:stEquipIntensifyStart
objID	tmpcode/commond.h	/^	DWORD objID;            \/\/\/ ŒÔ∆∑µƒdwThisID;$/;"	m	struct:stEquipIntnedsifyResult
objID	tmpcode/commond.h	/^	DWORD objID;    \/\/∞¸¿‡–Õ£∫ŒÔ∆∑µ¿æﬂID£¨∂‘”¶ŒÔ∆∑±Ì$/;"	m	struct:rtTypeAutoHappyCardBoxUserCmd
objID	tmpcode/commond.h	/^	DWORD objID;    \/\/ŒÔ∆∑±ÌID$/;"	m	struct:NeedMaterial
objID	tmpcode/commond.h	/^	DWORD objID;  \/\/ŒÔ∆∑id$/;"	m	struct:stAddDecorationCmd
objID	tmpcode/commond.h	/^	DWORD objID;  \/\/ŒÔ∆∑id$/;"	m	struct:stDelDecorationCmd
objID	tmpcode/commond.h	/^	DWORD objID; \/\/ƒ£–Õid$/;"	m	struct:decoration
objID	tmpcode/commond.h	/^	DWORD objID;$/;"	m	struct:BlessObjectItem
objID	tmpcode/commond.h	/^	DWORD objID;$/;"	m	struct:DestInfo
objID	tmpcode/commond.h	/^	DWORD objID;$/;"	m	struct:FurnitureMapData
objID	tmpcode/commond.h	/^	DWORD objID;$/;"	m	struct:stContributeTankCmd
objID	tmpcode/commond.h	/^	DWORD objID;$/;"	m	struct:stContributeUnionTankCmd
objID	tmpcode/commond.h	/^	DWORD objID;$/;"	m	struct:stNotifyDecorationUnionID
objID	tmpcode/commond.h	/^	DWORD objID;$/;"	m	struct:stQueryFlowerLeftCountUserCmd
objID	tmpcode/commond.h	/^	DWORD objID;$/;"	m	struct:stReqCreateSeptSignInfo
objID	tmpcode/commond.h	/^	DWORD objID;$/;"	m	struct:stSendCrystalFlowerUserCmd
objID	tmpcode/commond.h	/^                DWORD objID; \/\/≤ƒ¡œid, ¿‡±id$/;"	m	struct:stAddHorseSoulEnergyUserCmd::material
objID	tmpcode/commond.h	/^        DWORD objID;            \/\/\/ ŒÔ∆∑dwThisID$/;"	m	struct:stEquipIntensifyConsumeInfo
objID	tmpcode/commond.h	/^        DWORD objID;            \/\/ŒÔ∆∑ID$/;"	m	struct:stQueryPurchase
objID	tmpcode/commond.h	/^        DWORD objID;$/;"	m	struct:stSendMutualGiftUserCmd
objID	tmpcode/commond.h	/^    DWORD objID ;   \/\/¥À»À–Ø¥¯µƒªıŒÔID,add by gjf$/;"	m	struct:SeptGuardList
objID	tmpcode/commond.h	/^    DWORD objID;    \/\/øÕªß∂À∑≈∆˙µƒŒÔ∆∑ID$/;"	m	struct:stRequestNpcGoodsCmd
objID	tmpcode/commond.h	/^    DWORD objID;  \/\/ŒÔ∆∑ID$/;"	m	struct:OneGuardGoodsGrid
objID	tmpcode/commond.h	/^    DWORD objID;$/;"	m	struct:TempObjectItem
objID	tmpcode/commond.h	/^    DWORD objID;$/;"	m	struct:stAddListPurchase
objID	tmpcode/commond.h	/^    DWORD objID;\/\/ŒÔ∆∑µƒid$/;"	m	struct:stSurrenderPurchase
objIDOrPos	tmpcode/commond.h	/^    DWORD objIDOrPos;\/\/¿‡–ÕŒ™1‘Ú «‘⁄¬Ìæ«÷–µƒŒª÷√£¨2‘Ú «¬Ì≈∆µƒµ¿æﬂID$/;"	m	struct:stHorseMaterialEvolveResultUserCmd
objIDOrPos	tmpcode/commond.h	/^    DWORD objIDOrPos;\/\/¿‡–ÕŒ™1‘Ú «‘⁄¬Ìæ«÷–µƒŒª÷√£¨2‘Ú «¬Ì≈∆µƒµ¿æﬂID$/;"	m	struct:stPushHorseIntoEvolveMaterialUserCmd
objIndex	tmpcode/commond.h	/^		DWORD objIndex;					\/\/ µ¿æﬂ‘⁄±≥∞¸¿ÔµƒIndex$/;"	m	struct:stAutoBattMapScreenUserCmd
objInfo	tmpcode/commond.h	/^		objInfo():objID(0),num(0) {}$/;"	f	struct:ChangeInfo::objInfo
objInfo	tmpcode/commond.h	/^	struct objInfo$/;"	s	struct:ChangeInfo
objItem	tmpcode/commond.h	/^	BlessObjectItem  objItem[4];    \/\/Ω±¿¯ŒÔ∆∑$/;"	m	struct:BlessSortData
objItem	tmpcode/commond.h	/^    TempObjectItem  objItem[MAX_TEMP_REWARD_OBJ_NUM];       \/\/Ω±¿¯ŒÔ∆∑$/;"	m	struct:TempSortData
objLevel	tmpcode/commond.h	/^    BYTE objLevel; \/\/ŒÔ∆∑µ»º∂$/;"	m	struct:OneGuardGoodsGrid
objLevel	tmpcode/commond.h	/^    BYTE objLevel; \/\/ŒÔ∆∑µ»º∂$/;"	m	struct:SeptGuardList
objList	tmpcode/commond.h	/^	std::map<DWORD,objInfo> objList;  \/\/–Ë“™µƒµ¿æﬂid$/;"	m	struct:ChangeInfo
objModel	base/Command.h	/^  BYTE objModel;$/;"	m	struct:Cmd::t_MapObjectData
objModel	tmpcode/commond.h	/^	BYTE    objModel;			\/\/ ±Íº«µ±«∞∑÷≈‰ƒ£ Ω$/;"	m	struct:t_MapObjectData
objName	tmpcode/commond.h	/^	char objName[MAX_NAMESIZE];     \/\/ŒÔ∆∑√˚≥∆$/;"	m	struct:StoreNotice
objNum	tmpcode/commond.h	/^	WORD objNum;			\/\/µ¿æﬂ ˝$/;"	m	struct:stPopoScore
objNum	tmpcode/commond.h	/^                DWORD objNum; \/\/≤ƒ¡œ ˝¡ø$/;"	m	struct:stAddHorseSoulEnergyUserCmd::material
objScore	tmpcode/commond.h	/^	WORD objScore;			\/\/µ¿æﬂ∑÷ ˝$/;"	m	struct:stPopoScore
objTempID	tmpcode/commond.h	/^	DWORD objTempID;	\/\/≤ÒŒÔ∆∑¡Ÿ ±ID$/;"	m	struct:reqAddFirewoodUserCmd
objTempID	tmpcode/commond.h	/^	DWORD objTempID;        \/\/ ª®Œ®“ªID$/;"	m	struct:st_SendFlowerNoExpDataUserCmd
objTempID	tmpcode/commond.h	/^	DWORD objTempID;        \/\/ŒÔ∆∑µƒ¡Ÿ ±ID$/;"	m	struct:stReqContinueUserCmd
objTempID	tmpcode/commond.h	/^	DWORD objTempID;        \/\/ŒÔ∆∑µƒ¡Ÿ ±ID$/;"	m	struct:stReqWenMingNCContinueUserCmd
objTempID	tmpcode/commond.h	/^	DWORD objTempID;$/;"	m	struct:stSendFriendFlowerCmd
objThisID	tmpcode/commond.h	/^	DWORD   objThisID;                    \/\/ŒÔ∆∑Œ®“ªid$/;"	m	struct:stUseCanSelectScrollPropertyUserCmd
objThisID	tmpcode/commond.h	/^	DWORD   objThisID;                    \/\/ŒÔ∆∑Œ®“ªid$/;"	m	struct:stUseObjectScrollPropertyUserCmd
objThisID	tmpcode/commond.h	/^	DWORD objThisID;	\/\/±⁄¬ØŒ®“ªID$/;"	m	struct:reqStartFireplaceUserCmd
objThisID	tmpcode/commond.h	/^	DWORD objThisID;        \/\/µ¿æﬂŒ®“ªID$/;"	m	struct:stUseBugleObjSayToWorldUserCmd
objThisID	tmpcode/commond.h	/^	DWORD objThisID;        \/\/µ¿æﬂŒ®“ªID$/;"	m	struct:st_PutItemStoreHouseUserCmd
objThisID	tmpcode/commond.h	/^	DWORD objThisID;$/;"	m	struct:st_rt_DestroyObjectHouseUserCmd
objThisID	tmpcode/commond.h	/^	DWORD objThisID;\/\/±ª∑√Œ NPCµƒ¡Ÿ ±ID$/;"	m	struct:req_ObjVisitHouseUserCmd
objThisID	tmpcode/commond.h	/^	DWORD objThisID;\/\/¥≤Œª$/;"	m	struct:reqGoToBedHouseUserCmd
objThisID	tmpcode/commond.h	/^	DWORD objThisID;\/\/∆æΩË¥´ÀÕ’ÛID$/;"	m	struct:req_TransmitHouseUserCmd
objThisID	tmpcode/commond.h	/^	DWORD objThisID;\/\/ŒÔ∆∑µƒŒ®“ªID$/;"	m	struct:st_rt_MoveObjectHouseUserCmd
objThisID	tmpcode/commond.h	/^	DWORD objThisID;\/\/ŒÔ∆∑Œ®“ªID$/;"	m	struct:rt_ObjVisitHouseUserCmd
objThisID	tmpcode/commond.h	/^        DWORD   objThisID;                    \/\/ŒÔ∆∑Œ®“ªid$/;"	m	struct:stFoundLeechdomPropertyUserCmd
objThisID	tmpcode/commond.h	/^    DWORD objThisID;\/\/µÿŒÔŒ®“ªID$/;"	m	struct:rt_InsertFlowerHouseUserCmd
objThisID	tmpcode/commond.h	/^    DWORD objThisID;\/\/‘ø≥◊ŒÔ∆∑ID$/;"	m	struct:KeyHole
objType	tmpcode/commond.h	/^    BYTE objType ;   \/\/ªıŒÔ¿‡–Õ$/;"	m	struct:OneGuardGoodsGrid
objValue	tmpcode/commond.h	/^    WORD objValue; \/\/ªıŒÔ◊‹º€÷µ$/;"	m	struct:rtGuardGoodsSeptCmd
objVersion	base/RolechangeCommand.h	/^	DWORD objVersion;$/;"	m	struct:Cmd::Rolechange::t_Check_Valid
object	ScenesServer/zObject.h	/^  zObject* object()$/;"	f	class:ObjectPack
object	base/Command.h	/^      t_Object object;      \/**< Áâ©ÂìÅÊï∞ÊçÆ *\/$/;"	m	struct:Cmd::stAddObjectListPropertyUserCmd::__anon97
object	base/Command.h	/^      t_Object_mobile object;      \/**< Áâ©ÂìÅÊï∞ÊçÆ *\/$/;"	m	struct:Cmd::stAddMobileObjectListPropertyUserCmd::__anon98
object	base/Command.h	/^    t_Object object;      \/**< Áâ©ÂìÅÊï∞ÊçÆ *\/$/;"	m	struct:Cmd::stAddObjectPropertyUserCmd
object	base/Command.h	/^    t_Object object; \/\/Áâ©ÂìÅÊï∞ÊçÆ$/;"	m	struct:Cmd::stAddObjectSellListUserCmd::__anon103
object	base/Command.h	/^    t_Object_mobile object;      \/**< Áâ©ÂìÅÊï∞ÊçÆ *\/$/;"	m	struct:Cmd::stAddMobileObjectPropertyUserCmd
object	base/Command.h	/^  t_Object object;               \/\/\/ Áâ©ÂìÅËµÑÊñô$/;"	m	struct:Cmd::stReturnQuestionObject
object	base/Command.h	/^  t_Object object; \/\/Áâ©ÂìÅÊï∞ÊçÆ$/;"	m	struct:Cmd::stAddObjectSellUserCmd
object	base/Command.h	/^  t_Object object; \/\/Áâ©ÂìÅÊï∞ÊçÆ$/;"	m	struct:Cmd::stAddObjectTradeUserCmd
object	base/Command.h	/^  t_Object object;\/\/Áâ©ÂìÅ$/;"	m	struct:Cmd::EquipedObject
object	base/HeroCardCmd.h	/^	    t_Card object;$/;"	m	struct:Cmd::stAddBattleCardListPropertyUserCmd::__anon47
object	base/HeroCardCmd.h	/^	t_Card object;	  $/;"	m	struct:Cmd::stAddBattleCardPropertyUserCmd
object	base/SaveObject.h	/^    t_Object object;$/;"	m	struct:SaveObject
object	base/SessionCommand.h	/^      t_Object object;$/;"	m	struct:Cmd::Session::SessionObject
object	base/SessionCommand.h	/^      t_Object object;$/;"	m	struct:Cmd::Session::t_returnObject_SceneSession
object	tmpcode/commond.h	/^			t_Object object;			\/**< ŒÔ∆∑ ˝æ› *\/$/;"	m	struct:stAddObjectListPropertyUserCmd::__anon229
object	tmpcode/commond.h	/^		t_Object object;			\/**< ŒÔ∆∑ ˝æ› *\/$/;"	m	struct:stAddObjectPropertyUserCmd
object	tmpcode/commond.h	/^		t_Object object; \/\/ŒÔ∆∑ ˝æ›$/;"	m	struct:stAddObjectSellListUserCmd::__anon280
object	tmpcode/commond.h	/^		t_Object object;$/;"	m	struct:stSendSeptStoreDataCmd::__anon305
object	tmpcode/commond.h	/^	  t_Object object[MAX_NAMESIZE];$/;"	m	struct:st_WatchPlayer
object	tmpcode/commond.h	/^	t_Object object;    $/;"	m	struct:HappyCardInfo
object	tmpcode/commond.h	/^	t_Object object; \/\/ŒÔ∆∑ ˝æ›$/;"	m	struct:stAddBetObjectChallengeUserCmd
object	tmpcode/commond.h	/^	t_Object object; \/\/ŒÔ∆∑ ˝æ›$/;"	m	struct:stAddObjectSellUserCmd
object	tmpcode/commond.h	/^	t_Object object; \/\/ŒÔ∆∑ ˝æ›$/;"	m	struct:stAddObjectTradeUserCmd
object	tmpcode/commond.h	/^	t_Object object;$/;"	m	struct:stAddObjectSeptStoreCmd
object	tmpcode/commond.h	/^	t_Object object;\/\/ŒÔ∆∑$/;"	m	struct:EquipedObject
object	tmpcode/commond.h	/^	t_Object object[7];     \/\/7∏ˆŒÔ∆∑$/;"	m	struct:NewBoxSendObj
object	tmpcode/commond.h	/^        t_Object object;               \/\/\/ ŒÔ∆∑◊ ¡œ$/;"	m	struct:stReturnQuestionObject
objectID	tmpcode/commond.h	/^    DWORD  objectID;    \/\/∂˜¥ÕµƒŒÔ∆∑id$/;"	m	struct:t_RewardInfo
object_data	base/Command.h	/^  EquipedObject object_data[0];$/;"	m	struct:Cmd::stSelectReturnMainUserPropertyUserCmd
object_data	tmpcode/commond.h	/^	EquipedObject object_data[0];$/;"	m	struct:stSelectReturnMainUserPropertyUserCmd
object_data	tmpcode/commond.h	/^	t_Object object_data[0];$/;"	m	struct:stNotifyBetObjectChallengeUserCmd
object_data	tmpcode/commond.h	/^        EquipedObject object_data[0];$/;"	m	struct:stShowEquipUserPropertyUserCmd
object_id	base/Command.h	/^  DWORD object_id; \/\/Áâ©ÂìÅÂîØ‰∏ÄID$/;"	m	struct:Cmd::stRequestSellBuyUserCmd
object_id	base/Command.h	/^  DWORD object_id; \/\/Áâ©ÂìÅÂîØ‰∏Äid$/;"	m	struct:Cmd::stRemoveObjectSellUserCmd
object_id	base/Command.h	/^  DWORD object_id; \/\/Áâ©ÂìÅÂîØ‰∏Äid$/;"	m	struct:Cmd::stRemoveObjectTradeUserCmd
object_id	tmpcode/commond.h	/^	DWORD object_id; \/\/ŒÔ∆∑Œ®“ªID$/;"	m	struct:stRequestSellBuyUserCmd
object_id	tmpcode/commond.h	/^	DWORD object_id; \/\/ŒÔ∆∑Œ®“ªid$/;"	m	struct:stRemoveBetObjectChallengeUserCmd
object_id	tmpcode/commond.h	/^	DWORD object_id; \/\/ŒÔ∆∑Œ®“ªid$/;"	m	struct:stRemoveObjectSellUserCmd
object_id	tmpcode/commond.h	/^    DWORD object_id;    \/\/—°÷–ŒÔ∆∑µƒ◊¯±Í   ypos$/;"	m	struct:ReturnFocusPropertyUserCmd
object_type	base/zMisc.h	/^	typedef T object_type;$/;"	t	struct:singleton_default
objectid	tmpcode/commond.h	/^    DWORD objectid;         \/\/∂‘”¶µƒµ¿æﬂid$/;"	m	struct:t_HorseData
objid	base/xmlparser/giftbag.h	/^        xml_prop<DWORD>	objid;$/;"	m	struct:GiftBagConfig::Gift
objid	base/xmlparser/market.h	/^            xml_prop<DWORD>	objid;$/;"	m	struct:MarketConfig::Obj::Item
objid	tmpcode/commond.h	/^	DWORD objid; \/\/Ω±¿¯ŒÔ∆∑id$/;"	m	struct:stGRecommendAward
objid	tmpcode/commond.h	/^    DWORD objid;$/;"	m	struct:stSalePurchase
objlogger	ScenesServer/ScenesServer.cpp	/^zLogger * ScenesService::objlogger = NULL;$/;"	m	class:ScenesService
objlogger	ScenesServer/ScenesServer.h	/^    static zLogger* objlogger;$/;"	m	class:ScenesService
objname	tmpcode/commond.h	/^    char objname[MAX_NAMESIZE+1];$/;"	m	struct:stAddListPurchase
objqwThisID	tmpcode/commond.h	/^	DWORD objqwThisID;\/\/œ¥µ„µ¿æﬂµƒThisID$/;"	m	struct:stClearJobTokenPropertyUserCmd
objs	tmpcode/commond.h	/^	DWORD objs[0];$/;"	m	struct:rt_stAutoCfgHappyCardBoxUserCmd
objs	tmpcode/commond.h	/^	HouseObjDef objs[0];$/;"	m	struct:rt_ObjectsHouseUserCmd
observeFireplaceUserCmd	tmpcode/commond.h	/^	observeFireplaceUserCmd()$/;"	f	struct:observeFireplaceUserCmd
observeFireplaceUserCmd	tmpcode/commond.h	/^struct observeFireplaceUserCmd: public stHouseUserCmd$/;"	s
obtain_exp	ScenesServer/zObject.cpp	/^void EquipPack::obtain_exp(SceneUser* user,DWORD exp,bool force)$/;"	f	class:EquipPack
occupation	ScenesServer/GroupCardManager.h	/^    DWORD occupation;$/;"	m	struct:t_group
occupation	SessionServer/CRelationManager.h	/^  WORD  occupation;$/;"	m	struct:CRelation
occupation	SessionServer/HeroCardManager.h	/^    WORD occupation;		\/\/÷∞“µ$/;"	m	struct:stChallengeInfo
occupation	SessionServer/Session.h	/^    WORD  occupation;$/;"	m	class:UserSession
occupation	base/Command.h	/^  WORD  occupation;          \/\/ ËÅå‰∏öÁ±ªÂûã$/;"	m	struct:Cmd::stSeptRember
occupation	base/Command.h	/^  WORD  occupation;        \/\/ ËÅå‰∏öÁ±ªÂûã$/;"	m	struct:Cmd::stUnionRember
occupation	base/Command.h	/^  WORD  occupation;      \/\/ ËÅå‰∏öÁ±ªÂûã$/;"	m	struct:Cmd::stRelation
occupation	base/Command.h	/^  WORD  occupation;$/;"	m	struct:Cmd::stRelationStatusCmd
occupation	base/HeroCardCmd.h	/^	DWORD occupation;	    \/\/÷∞“µ$/;"	m	struct:Cmd::stNotifyFightEnemyInfoUserCmd
occupation	base/HeroCardCmd.h	/^	DWORD occupation;	\/\/÷∞“µ$/;"	m	struct:Cmd::stReqCreateOneCardGroupUserCmd
occupation	base/HeroCardCmd.h	/^	DWORD occupation;	\/\/÷∞“µ$/;"	m	struct:Cmd::stRetCreateOneCardGroupUserCmd
occupation	base/HeroCardCmd.h	/^	DWORD occupation;$/;"	m	struct:Cmd::t_group_list
occupation	base/HeroCardCmd.h	/^	WORD occupation;$/;"	m	struct:Cmd::t_hero
occupation	base/SessionCommand.h	/^	WORD occupation;$/;"	m	struct:Cmd::Session::t_RelationAddFriend
occupation	base/xmlparser/herobase.h	/^            xml_prop<DWORD>	occupation;$/;"	m	struct:HeroBaseCFG::Init::Item
occupation	base/zDatabase.h	/^    DWORD occupation;	    \/\/÷∞“µ$/;"	m	struct:CardBase
occupation	base/zDatabase.h	/^    DWORD occupation;	    \/\/÷∞“µ$/;"	m	struct:zCardB
occupation	tmpcode/commond.h	/^	WORD    occupation;$/;"	m	struct:stRelationStatusCmd
occupation	tmpcode/commond.h	/^	WORD  occupation;                                       \/\/ ÷∞“µ¿‡–Õ$/;"	m	struct:stSeptRember
occupation	tmpcode/commond.h	/^	WORD  occupation;                       \/\/ ÷∞“µ¿‡–Õ$/;"	m	struct:stRelation
occupation	tmpcode/commond.h	/^        WORD  occupation;                               \/\/ ÷∞“µ¿‡–Õ$/;"	m	struct:stUnionRember
occupation	tmpcode/commond.h	/^    WORD    occupation;$/;"	m	struct:stNotifyChangeJobOrZhuanzhiCmd
odd_parity	base/EncDec/mydes.cpp	/^static const unsigned char odd_parity[256]={  $/;"	v
odds	ScenesServer/zObject.h	/^    BYTE odds;    \/\/x$/;"	m	struct:Equips::leech
odds	base/Object.h	/^		BYTE odds;    \/\/x$/;"	m	struct:t_Object::leech
odds	base/xmlparser/giftbag.h	/^                xml_prop<DWORD>	odds;$/;"	m	struct:GiftBagConfig::Bag::Quality::Item
odds	base/zDatabase.h	/^	WORD odds;$/;"	m	struct:zObjectB::socket
odds_t	base/zMisc.h	/^struct odds_t$/;"	s
offLine	tmpcode/commond.h	/^	WORD  offLine;$/;"	m	struct:__anon356
offLineTime	base/RecordCommand.h	/^      DWORD offLineTime;$/;"	m	struct:Cmd::Record::t_Ret_SelectInfo_GateRecord
offLineTime	tmpcode/commond.h	/^	DWORD lastIP, offLineTime;$/;"	m	struct:stLastLoginInfoSelectUserCmd
offPtr	base/zSocket.h	/^	inline DWORD offPtr() const $/;"	f	class:ByteBuffer
official	base/Command.h	/^  BYTE official;$/;"	m	struct:Cmd::t_MainUserData
official	tmpcode/commond.h	/^	BYTE	official; \/\/πŸ÷∞$/;"	m	struct:t_MainUserData
offline	SessionServer/CRelationManager.cpp	/^void CRelationManager::offline(const DWORD dwID,const char* name)$/;"	f	class:CRelationManager
offlineCount	SessionServer/CSort.cpp	/^void CSortM::offlineCount(UserSession *pUser)$/;"	f	class:CSortM
offlineExp	tmpcode/commond.h	/^	QWORD offlineExp;\/\/¿Îœﬂæ≠—È≥ÿ÷–µƒæ≠—È$/;"	m	struct:stSetOfflineExpUserCmd
offlinetime	base/CharBase.h	/^  DWORD offlinetime;        \/\/\/ ‰∏äÊ¨°‰∏ãÁ∫øÊó∂Èó¥$/;"	m	struct:CharBase
offset	ScenesServer/QuestEvent.h	/^  DWORD offset() const$/;"	f	class:EventTrigger2
offset	base/Command.h	/^  BYTE offset; \/\/‰ªªÂä°ÂàÜÊîØ$/;"	m	struct:Cmd::stRequestQuestUserCmd
offset	tmpcode/commond.h	/^	BYTE offset; \/\/»ŒŒÒ∑÷÷ß$/;"	m	struct:stRequestQuestUserCmd
offset	tmpcode/commond.h	/^    DWORD offset;$/;"	m	struct:rqTakeCareShenMuCountryCmd
offset	tmpcode/commond.h	/^    DWORD offset;$/;"	m	struct:rtShenMuStateCountryCmd
offsetid	tmpcode/commond.h	/^        DWORD offsetid;$/;"	m	struct:stBeginDisplayCartoonUserCmd
okay	base/zTCPClientTask.h	/^		okay    =  2,            \/**< ¡¨Ω”¥¶¿ÌΩ◊∂Œ *\/$/;"	e	enum:zTCPClientTask::ConnState
okay	base/zTCPTask.h	/^		okay    =  3,            \/**< ¡¨Ω”¥¶¿ÌΩ◊∂Œ£¨—È÷§Õ®π˝¡À£¨Ω¯»Î÷˜—≠ª∑ *\/$/;"	e	enum:zTCPTask::zTCPTask_State
okayThreads	base/zTCPTaskPool.h	/^	zThreadGroup okayThreads;                \/**< ¥¶¿Ì÷˜œﬂ≥Ã£¨∂‡∏ˆ *\/$/;"	m	class:zTCPTaskPool
old	FLServer/LoginTask.h	/^	DWORD old;$/;"	m	class:LoginTask
old	FLServer/ServerTask.h	/^	DWORD old;$/;"	m	class:ServerTask
old	GatewayServer/GatewayTask.h	/^	DWORD old;$/;"	m	class:GatewayTask
oldAI	ScenesServer/SceneNpcAI.h	/^  t_NpcAIDefine curAI,oldAI;$/;"	m	class:NpcAIController
oldFactor	tmpcode/commond.h	/^        BYTE oldFactor;$/;"	m	struct:stPopUpDailDailyQuestUserCmd
oldIndex	tmpcode/commond.h	/^	BYTE	oldIndex;$/;"	m	struct:stMoveFurnitureInStorageUserCmd
oldModel	tmpcode/commond.h	/^	QWORD oldModel;$/;"	m	struct:LingQiPkData
oldPasswd	tmpcode/commond.h	/^	DWORD oldPasswd;$/;"	m	struct:stSetNewNumPasswdCmd
old_TempID	tmpcode/commond.h	/^	DWORD old_TempID; \/\/œ÷»Œ∂”≥§ temp id$/;"	m	struct:stRequestChangeTeamleader
oldpass	base/Command.h	/^  char oldpass[8]; \/\/ÊóßÂØÜÁ†Å$/;"	m	struct:Cmd::stUpdateStorePassUserCmd
oldpass	tmpcode/commond.h	/^	char oldpass[8]; \/\/æ…√‹¬Î$/;"	m	struct:stUpdateStorePassUserCmd
oldtempid	tmpcode/commond.h	/^	DWORD oldtempid;\/\/±‰…Ìπ÷ŒÔ◊‘º∫µƒ¡Ÿ ±ID $/;"	m	struct:stSendChangeFaceNPCMagicUserCmd
on_GameOver	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::on_GameOver()$/;"	f	class:ChallengeGame
on_RoundEnd	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::on_RoundEnd()$/;"	f	class:ChallengeGame
on_RoundStart	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::on_RoundStart()$/;"	f	class:ChallengeGame
on_death	ScenesServer/SceneNpc.h	/^  virtual void on_death(SceneEntryPk* att){}$/;"	f	class:SceneNpc
on_die	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::on_die()$/;"	f	class:NpcAIController
on_find_enemy	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::on_find_enemy(const SceneEntryPk *pFound)$/;"	f	class:NpcAIController
on_hit	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::on_hit(SceneEntryPk *pAtk)$/;"	f	class:NpcAIController
on_phaseEnd	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::on_phaseEnd()$/;"	f	class:NpcAIController
on_reached	ScenesServer/SceneNpc.h	/^  virtual void on_reached() { }$/;"	f	class:SceneNpc
on_relive	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::on_relive()$/;"	f	class:NpcAIController
onceScore	tmpcode/commond.h	/^		DWORD   onceScore;            \/\/±æΩ⁄µ√∑÷$/;"	m	struct:stReturnScoreListWeekendZhenxuanUserCmd::PlayerScore
oneReceiveTime	tmpcode/commond.h	/^	BYTE oneReceiveTime;                    \/\/…Ã»À√øÃÏ≈‹…Ã¥Œ ˝…œœﬁ$/;"	m	struct:stGetUnionBusinessmen
oneSize	base/Command.h	/^	WORD oneSize;$/;"	m	struct:Cmd::MapData_ItemHeader
oneSize	tmpcode/commond.h	/^	WORD oneSize; \/\/add by gjf°£øÕªß∂À”Î∑˛ŒÒ∆˜∂À◊‹◊¥Ã¨∏ˆ ˝≤ªœ‡Õ¨µƒ ±∫Ú£¨æÕ“™“¿øø’‚∏ˆ◊÷∂Œ¡À$/;"	m	struct:MapData_ItemHeader
one_second	GatewayServer/TimeTick.h	/^	Timer one_second;$/;"	m	class:GatewayTimeTick
online	SessionServer/CRelationManager.cpp	/^void CRelationManager::online(const DWORD dwID)$/;"	f	class:CRelationManager
online	SessionServer/CRelationManager.h	/^  bool online;$/;"	m	struct:CRelation
online	base/Command.h	/^  BYTE  online;             \/\/  Âú®Á∫øÁä∂ÊÄÅ 0‰∏∫‰∏çÂú®Á∫øÔºå1‰∏∫Âú®Á∫ø$/;"	m	struct:Cmd::stRelation
online	tmpcode/commond.h	/^	BYTE  online;             \/\/  ‘⁄œﬂ◊¥Ã¨ 0Œ™≤ª‘⁄œﬂ£¨1Œ™‘⁄œﬂ$/;"	m	struct:stRelation
online	tmpcode/commond.h	/^	BYTE online;\/\/ «∑Ò‘⁄œﬂ$/;"	m	struct:LTQUserData
online	tmpcode/commond.h	/^	bool online;							\/\/true‘⁄œﬂ,false≤ª‘⁄œﬂ$/;"	m	struct:stSendLoverRelationCmd
online	tmpcode/commond.h	/^	bool online;$/;"	m	struct:EnemyOnOff
onlineAddGrowUp	tmpcode/commond.h	/^    BYTE onlineAddGrowUp;   \/\/‘⁄œﬂ ±º‰¿€ª˝‘ˆº”≥…≥§∂»º∆ ˝$/;"	m	struct:t_DragonData
onlineCount	SessionServer/CSort.cpp	/^void CSortM::onlineCount(DWORD dwCharID, WORD wdLevel, QWORD qwExp)$/;"	f	class:CSortM
onlineCount	SessionServer/CSort.cpp	/^void CSortM::onlineCount(UserSession *pUser)$/;"	f	class:CSortM
onlineTime	tmpcode/commond.h	/^	DWORD onlineTime;       \/\/\/ ÕÊº“‘⁄œﬂ ±º‰$/;"	m	struct:stRetCourseOfKingCmd
online_time	base/Command.h	/^  WORD  online_time; \/\/Âú®Á∫øÊó∂Èó¥ Âçï‰Ωç‰∏∫Â∞èÊó∂$/;"	m	struct:Cmd::_KingListItem
onlinetime	base/CharBase.h	/^  DWORD onlinetime;          \/\/\/ Âú®Á∫øÊó∂Èó¥ÁªüËÆ°$/;"	m	struct:CharBase
onlyme	ScenesServer/CardManager.cpp	/^GlobalCardIndex *GlobalCardIndex::onlyme=NULL;$/;"	m	class:GlobalCardIndex
onlyme	ScenesServer/CardManager.h	/^    static GlobalCardIndex *onlyme;$/;"	m	class:GlobalCardIndex
onlyme	ScenesServer/ObjectManager.cpp	/^GlobalObjectIndex *GlobalObjectIndex::onlyme=NULL;$/;"	m	class:GlobalObjectIndex
onlyme	ScenesServer/ObjectManager.h	/^    static GlobalObjectIndex *onlyme;$/;"	m	class:GlobalObjectIndex
onwerID	tmpcode/commond.h	/^		DWORD onwerID;                  \/\/∑¢≤º’ﬂid$/;"	m	struct:stReceiveIssuedQuestUserCmd
oooType	base/Command.h	/^  BYTE oooType;$/;"	m	struct:Cmd::stQuestInfoUserCmd
op	tmpcode/commond.h	/^	BYTE op;$/;"	m	struct:stDoPlantActionUserCmd
op	tmpcode/commond.h	/^        BYTE op;        \/\/0º”√À,1ÕÀ≥ˆ,2–¯‘º$/;"	m	struct:stUnionMerchMeetingOp
opTimeSequence	ScenesServer/zCard.h	/^    DWORD opTimeSequence;	\/\/≤Ÿ◊˜ ±º‰–Ú¡–$/;"	m	struct:zCard
opcode_dump	base/xml/xml_utility.h	/^    const int opcode_dump	=2;$/;"	v
opcode_init_name	base/xml/xml_utility.h	/^    const int opcode_init_name	=1;$/;"	v
opcode_init_value	base/xml/xml_utility.h	/^    const int opcode_init_value	=0;$/;"	v
opcode_parse	base/xml/xml_utility.h	/^    const int opcode_parse	=3;$/;"	v
open	base/xmlparser/giftbag.h	/^    xml_node<Open>	open;$/;"	m	struct:GiftBagConfig
open	base/xmlparser/market.h	/^    xml_node<Open>	open;$/;"	m	struct:MarketConfig
openNextFlag	tmpcode/commond.h	/^	BYTE openNextFlag;\/\/ «∑Ò¡¨–¯ø™∆Ù        $/;"	m	struct:HappyCardBoxAutoCfg
openOneGiftBag	ScenesServer/GiftBagManager.cpp	/^void GiftBagManager::openOneGiftBag(const DWORD objid, std::vector<DWORD> &cards)$/;"	f	class:GiftBagManager
openRoomMyself	tmpcode/commond.h	/^	 bool  openRoomMyself;     \/\/£®º“◊Â∫Õ”∂±¯Õ≈¿Ô√Ê£© «◊‘º∫÷˜∂Ø“™¥Úø™¡ƒÃÏ “£¨ªπ «±»À¥Úø™∫Û◊‘º∫±ª∂Ø¥Úø™$/;"	m	struct:stOpenWindow_ChannelUserCmd
openTimes	tmpcode/commond.h	/^	WORD openTimes;         \/\/ø™∆Ù¥Œ ˝œﬁ÷∆$/;"	m	struct:HappyCardBoxAutoCfg
openType	tmpcode/commond.h	/^	BYTE openType; \/\/«Î«Û¿‡–Õ,1:Œ™±æΩÏ£¨2:Œ™…œΩÏ$/;"	m	struct:stReq32NameListUserCmd
oper	base/SceneCommand.h	/^      BYTE  oper;              \/\/\/ ≤Ÿ◊˜¿‡–Õ$/;"	m	struct:Cmd::Scene::t_ChangeCountryStatus
oper	base/SceneCommand.h	/^      BYTE  oper;              \/\/\/ ≤Ÿ◊˜¿‡–Õ$/;"	m	struct:Cmd::Scene::t_ChangeVerifyVersion
operation	base/GmToolCommand.h	/^      WORD operation;$/;"	m	struct:Cmd::GmTool::t_Punish_GmTool
operation	base/SessionCommand.h	/^      WORD operation;$/;"	m	struct:Cmd::Session::t_forbidTalk_SceneSession
operator !=	base/Object.h	/^	bool operator!= (const stObjectLocation& st) const$/;"	f	struct:stObjectLocation
operator !=	base/zThread.h	/^	bool operator!=(const zThread& other) const$/;"	f	class:zThread
operator ()	BillServer/BillCache.h	/^      bool operator()(const char* s1,const char* s2) const$/;"	f	struct:BillCache::eqstr
operator ()	BillServer/BillClientManager.h	/^      bool operator()(BillClient *s1,BillClient *s2) const$/;"	f	struct:BillClientManager::lt_client
operator ()	GatewayServer/CmdChecker.h	/^		void operator () (T target)$/;"	f	class:CheckerTable::FreeMemory
operator ()	ScenesServer/Quest.h	/^    size_t operator()(const std::string &x) const$/;"	f	struct:Vars::key_hash
operator ()	ScenesServer/QuestAction.h	/^     void operator() (T& value,T action,SceneUser *user) const$/;"	f	class:Op::Div
operator ()	ScenesServer/QuestAction.h	/^     void operator() (T& value,T action,SceneUser *user) const$/;"	f	class:Op::GetP
operator ()	ScenesServer/QuestAction.h	/^     void operator() (T& value,T action,SceneUser *user) const$/;"	f	class:Op::Mul
operator ()	ScenesServer/QuestAction.h	/^     void operator() (T& value,T action,SceneUser *user) const$/;"	f	class:Op::Pow
operator ()	ScenesServer/QuestAction.h	/^     void operator() (T& value,T action,SceneUser *user) const$/;"	f	class:Op::Set
operator ()	ScenesServer/QuestAction.h	/^    void operator() (T& value,T action,SceneUser *user) const$/;"	f	class:Op::Add
operator ()	ScenesServer/QuestAction.h	/^    void operator() (T& value,T action,SceneUser *user) const$/;"	f	class:Op::Sub
operator ()	ScenesServer/QuestCondition.h	/^    bool operator() (T value,T condition) const$/;"	f	class:Op::Differ
operator ()	ScenesServer/QuestCondition.h	/^    bool operator() (T value,T condition) const$/;"	f	class:Op::Equal
operator ()	ScenesServer/QuestCondition.h	/^    bool operator() (T value,T condition) const$/;"	f	class:Op::Great
operator ()	ScenesServer/QuestCondition.h	/^    bool operator() (T value,T condition) const$/;"	f	class:Op::Less
operator ()	ScenesServer/QuestEvent.h	/^    bool operator() (T preceding,T posterior) const$/;"	f	class:Event::LessIgnoreHB
operator ()	ScenesServer/QuestEvent.h	/^    void operator () (T target)$/;"	f	class:Event::FreeMemory
operator ()	ScenesServer/SceneUserManager.cpp	/^    void operator()(T id)$/;"	f	struct:Del
operator ()	SessionServer/CSort.h	/^      bool operator()(const QWORD s1,const QWORD s2) const$/;"	f	struct:CSortM::ltqword
operator ()	SessionServer/SessionServer.cpp	/^  bool operator()(const DWORD s1,const DWORD s2) const$/;"	f	struct:ss
operator ()	SuperServer/BroadClientManager.h	/^	bool operator()(BroadClient *s1, BroadClient *s2) const$/;"	f	struct:BroadClientManager::lt_client
operator ()	SuperServer/InfoClientManager.h	/^      bool operator()(InfoClient *s1,InfoClient *s2) const$/;"	f	struct:InfoClientManager::lt_client
operator ()	SuperServer/RolechangeClientManager.h	/^	bool operator() (RolechangeClient *s1, RolechangeClient *s2) const$/;"	f	struct:RolechangeClientManager::lt_client
operator ()	SuperServer/RoleregCache.cpp	/^		bool operator()(const char* s1,const char* s2) const$/;"	f	struct:RoleDataContainer::eqstr
operator ()	SuperServer/RoleregClientManager.h	/^	bool operator() (RoleregClient *s1, RoleregClient *s2) const$/;"	f	struct:RoleregClientManager::lt_client
operator ()	SuperServer/ServerTask.h	/^      bool operator()(const Cmd::Super::ServerEntry &s1,const Cmd::Super::ServerEntry &s2) const$/;"	f	struct:ServerTask::key_equal
operator ()	SuperServer/ServerTask.h	/^      size_t operator()(const Cmd::Super::ServerEntry &x) const$/;"	f	struct:ServerTask::key_hash
operator ()	base/xml/xml_node_content.h	/^	const value_type& operator ()() const {$/;"	f	class:xml_content
operator ()	base/xml/xml_node_content.h	/^	value_type& operator() (){$/;"	f	class:xml_content
operator ()	base/xml/xml_node_prop.h	/^	const value_type& operator()() const$/;"	f	class:xml_prop
operator ()	base/xml/xml_node_prop.h	/^	value_type& operator()()$/;"	f	class:xml_prop
operator ()	base/xml/xml_prop2value.h	/^		T operator() (const std::string& prop)$/;"	f	struct:detail::xml_prop2value
operator ()	base/zEntryManager.h	/^inline bool my_key_equal<DWORD>::operator()(const DWORD s1,const DWORD s2) const$/;"	f	class:my_key_equal
operator ()	base/zEntryManager.h	/^inline bool my_key_equal<const char *>::operator()(const char * s1,const char * s2) const$/;"	f	class:my_key_equal
operator ()	base/zProperties.h	/^	    bool operator()(const std::string &s1,const std::string &s2) const$/;"	f	struct:zProperties::key_equal
operator ()	base/zProperties.h	/^	size_t operator()(const std::string &x) const$/;"	f	struct:zProperties::key_hash
operator ()	base/zString.h	/^	char operator() (char c) const$/;"	f	struct:Zebra::ToLower
operator ()	base/zString.h	/^	char operator() (char c) const$/;"	f	struct:Zebra::ToUpper
operator ()	base/zTime.h	/^	bool operator() (const zRTime& current)$/;"	f	class:RandTimer
operator ()	base/zTime.h	/^	bool operator() (const zRTime& current)$/;"	f	class:Timer
operator ()	tmpcode/commond.h	/^	bool operator()(HouseRoomData lhs, HouseRoomData rhs) const$/;"	f	struct:HouseDataCmpEquip
operator ()	tmpcode/commond.h	/^	bool operator()(SoilInfo lhs, SoilInfo rhs) const$/;"	f	struct:SoilCmpEquip
operator +	base/zSceneEntry.h	/^	const zPos & operator+ (const zAdjust &adjust)$/;"	f	struct:zPos
operator +	base/zSceneEntry.h	/^	const zPos & operator+ (const zPos &pos)$/;"	f	struct:zPos
operator +	base/zTime.h	/^	const zRTime & operator+ (const zRTime &rt)$/;"	f	class:zRTime
operator +	base/zTime.h	/^	const zTime & operator+ (const zTime &rt)$/;"	f	class:zTime
operator +=	base/zSceneEntry.h	/^	const zPos & operator+= (const zAdjust &adjust)$/;"	f	struct:zPos
operator +=	base/zSceneEntry.h	/^	const zPos & operator+= (const zPos &pos)$/;"	f	struct:zPos
operator -	base/zSceneEntry.h	/^	const zPos & operator- (const zAdjust &adjust)$/;"	f	struct:zPos
operator -	base/zSceneEntry.h	/^	const zPos & operator- (const zPos &pos)$/;"	f	struct:zPos
operator -	base/zTime.h	/^	const zRTime & operator- (const zRTime &rt)$/;"	f	class:zRTime
operator -	base/zTime.h	/^	const zTime & operator- (const zTime &rt)$/;"	f	class:zTime
operator -=	base/zSceneEntry.h	/^	const zPos & operator-= (const zAdjust &adjust)$/;"	f	struct:zPos
operator -=	base/zSceneEntry.h	/^	const zPos & operator-= (const zPos &pos)$/;"	f	struct:zPos
operator -=	base/zTime.h	/^	const zTime & operator-= (const time_t s)$/;"	f	class:zTime
operator <	SessionServer/HeroCardManager.h	/^    bool operator < (const stChallengeInfo &other) const$/;"	f	struct:stChallengeInfo
operator <	base/zSceneEntry.h	/^	const bool operator< (const zPos &pos) const$/;"	f	struct:zPos
operator <	base/zTime.h	/^	bool operator < (const zRTime &rt) const$/;"	f	class:zRTime
operator <	base/zTime.h	/^	bool operator < (const zTime &rt) const$/;"	f	class:zTime
operator <	tmpcode/commond.h	/^	bool operator<(const FarmNotice& n) const$/;"	f	struct:FarmNotice
operator <	tmpcode/commond.h	/^	bool operator<(const PlayerScoreSortItem& ps)const$/;"	f	struct:PlayerScoreSortItem
operator <	tmpcode/commond.h	/^	bool operator<(const StoreNotice &n) const$/;"	f	struct:StoreNotice
operator <<	base/Command.h	/^  t_CartoonData & operator << (const t_CartoonData& reg)$/;"	f	struct:Cmd::t_CartoonData
operator <<	base/xml/xml_config.h	/^	inline std::ostream& operator << (std::ostream& os, const xml::xml_config<Config>& config)$/;"	f	namespace:std
operator <<	base/xml/xml_node.h	/^	inline std::ostream& operator << (std::ostream& os, const xml::xml_node<T>& node)$/;"	f	namespace:std
operator <<	base/xml/xml_node_container.h	/^	inline std::ostream& operator << (std::ostream& os, const xml::detail::xml_node_map_container<Key, T, Container>& cont)$/;"	f	namespace:std
operator <<	base/xml/xml_node_container.h	/^	inline std::ostream& operator << (std::ostream& os, const xml::detail::xml_node_seq_container<T, Container>& seq)$/;"	f	namespace:std
operator <<	base/xml/xml_node_content.h	/^	std::ostream& operator << (std::ostream& os, const xml::xml_content<T>& content)$/;"	f	namespace:std
operator <<	base/xml/xml_node_prop.h	/^	std::ostream& operator << (std::ostream& os, const xml::xml_prop<T, P>& prop)$/;"	f	namespace:std
operator <<	base/xml/xml_node_prop.h	/^	std::ostream& operator << (std::ostream& os, const xml::xml_prop<T, std::string>& prop)$/;"	f	namespace:std
operator <<	base/xml/xml_utility.h	/^    inline std::ostream& operator << (std::ostream& os, const xml::detail::indent& indent)$/;"	f	namespace:std
operator <=	base/zSceneEntry.h	/^	const bool operator<= (const zPos &pos) const$/;"	f	struct:zPos
operator <=	base/zTime.h	/^	bool operator <= (const zRTime &rt) const$/;"	f	class:zRTime
operator <=	base/zTime.h	/^	bool operator <= (const zTime &rt) const$/;"	f	class:zTime
operator =	BillServer/BillManager.h	/^  BillInfo & operator= (const BillInfo &ai)$/;"	f	struct:BillInfo
operator =	FLServer/GYListManager.h	/^	GYList & operator= (const GYList &gy)$/;"	f	struct:GYList
operator =	GatewayServer/LoginSessionManager.h	/^		LoginSession & operator= (const LoginSession &ls)$/;"	f	struct:LoginSessionManager::LoginSession
operator =	ScenesServer/SceneDefine.h	/^  ZoneTypeDef & operator= (const ZoneTypeDef &zone)$/;"	f	struct:ZoneTypeDef
operator =	ScenesServer/SceneDefine.h	/^  t_NpcDefine & operator= (const t_NpcDefine &reg)$/;"	f	struct:t_NpcDefine
operator =	ScenesServer/SceneDefine.h	/^  zRegion & operator= (const zRegion &reg)$/;"	f	struct:zRegion
operator =	ScenesServer/SceneNpcAI.h	/^  t_NpcAIDefine & operator = (const t_NpcAIDefine &ad)$/;"	f	struct:t_NpcAIDefine
operator =	ScenesServer/WayPoint.h	/^	zPoint & operator= (const zPoint &point)$/;"	f	struct:zPoint
operator =	SessionServer/HeroCardManager.h	/^    stChallengeInfo &operator= (const stChallengeInfo& other)$/;"	f	struct:stChallengeInfo
operator =	SessionServer/SessionManager.cpp	/^    CGraceUser& operator =(const CGraceUser& ref)$/;"	f	class:CGraceUser
operator =	SuperServer/RoleregCache.cpp	/^	const RoleData & operator= (const RoleData &rd)$/;"	f	struct:RoleData
operator =	SuperServer/RoleregCache.h	/^      Data &operator=(const Data &data)$/;"	f	struct:RoleregCache::Data
operator =	base/Command.h	/^  t_CartoonData & operator = (const t_CartoonData& reg)$/;"	f	struct:Cmd::t_CartoonData
operator =	base/Command.h	/^  void operator = (const t_CartoonData& reg)$/;"	f	struct:Cmd::stAddWaitingCartoonCmd
operator =	base/Object.h	/^	void operator = (const stObjectLocation& loc)$/;"	f	struct:stObjectLocation
operator =	base/SuperCommand.h	/^      ServerEntry & operator= (const ServerEntry &se)$/;"	f	struct:Cmd::Super::ServerEntry
operator =	base/zAStar.h	/^		zPathQueue & operator= (const zPathQueue &queue)$/;"	f	struct:zAStar::zPathQueue
operator =	base/zDatabase.h	/^    npcSkill& operator = (const npcSkill &skill)$/;"	f	struct:npcSkill
operator =	base/zSceneEntry.h	/^	zPos & operator= (const zPos &pos)$/;"	f	struct:zPos
operator =	base/zTime.h	/^	zRTime & operator= (const zRTime &rt)$/;"	f	class:zRTime
operator =	base/zTime.h	/^	zTime & operator= (const zTime &rt)$/;"	f	class:zTime
operator =	base/zType.h	/^  GameZone_t & operator= (const GameZone_t &gameZone)$/;"	f	struct:GameZone_t
operator =	base/zType.h	/^  t_NewLoginSession & operator= (const t_NewLoginSession &session)$/;"	f	struct:t_NewLoginSession
operator =	roleRegServer/RoleTask.h	/^    const RoleData &operator= (const RoleData &rd)$/;"	f	struct:RoleData
operator =	tmpcode/commond.h	/^		stScoreNode& operator = (const stScoreNode& stData)$/;"	f	struct:stShouLieScoreListCmd::stScoreNode
operator =	tmpcode/commond.h	/^	DecayHouseSession &operator = (const DecayHouseSession &data)$/;"	f	struct:DecayHouseSession
operator =	tmpcode/commond.h	/^	TankData &operator=(const TankData &d)$/;"	f	struct:TankData
operator =	tmpcode/commond.h	/^	const FarmNotice& operator=(const FarmNotice& n)$/;"	f	struct:FarmNotice
operator =	tmpcode/commond.h	/^	const PlayerScoreSortItem & operator=(const PlayerScoreSortItem & ps)$/;"	f	struct:PlayerScoreSortItem
operator =	tmpcode/commond.h	/^	const StoreNotice& operator=(const StoreNotice &n)$/;"	f	struct:StoreNotice
operator =	tmpcode/commond.h	/^        CHUNYUNITEM& operator =(const CHUNYUNITEM& item)$/;"	f	struct:CHUNYUNITEM
operator =	tmpcode/commond.h	/^    FlowerDef & operator = (const FlowerDef& other)$/;"	f	struct:FlowerDef
operator ==	SessionServer/HeroCardManager.h	/^    bool operator == (const stChallengeInfo &other) const$/;"	f	struct:stChallengeInfo
operator ==	base/Object.h	/^	bool operator == (const stObjectLocation& st) const$/;"	f	struct:stObjectLocation
operator ==	base/zSceneEntry.h	/^	const bool operator== (const zPos &pos) const$/;"	f	struct:zPos
operator ==	base/zThread.h	/^	bool operator==(const zThread& other) const$/;"	f	class:zThread
operator ==	base/zTime.h	/^	bool operator == (const zRTime &rt) const$/;"	f	class:zRTime
operator ==	base/zTime.h	/^	bool operator == (const zTime &rt) const$/;"	f	class:zTime
operator ==	base/zType.h	/^  bool operator== (const GameZone_t &gameZone) const$/;"	f	struct:GameZone_t
operator ==	tmpcode/commond.h	/^	bool operator==(const FarmNotice& n) const$/;"	f	struct:FarmNotice
operator ==	tmpcode/commond.h	/^	bool operator==(const StoreNotice &n) const$/;"	f	struct:StoreNotice
operator ==	tmpcode/commond.h	/^     bool operator==(const PlayerScoreSortItem& ps)$/;"	f	struct:PlayerScoreSortItem
operator >	base/zSceneEntry.h	/^	const bool operator> (const zPos &pos) const$/;"	f	struct:zPos
operator >	base/zTime.h	/^	bool operator > (const zRTime &rt) const$/;"	f	class:zRTime
operator >	base/zTime.h	/^	bool operator > (const zTime &rt) const$/;"	f	class:zTime
operator >=	base/zSceneEntry.h	/^	const bool operator>= (const zPos &pos) const$/;"	f	struct:zPos
operator >=	base/zTime.h	/^	bool operator >= (const zRTime &rt) const$/;"	f	class:zRTime
operator >=	base/zTime.h	/^	bool operator >= (const zTime &rt) const$/;"	f	class:zTime
operator BYTE	base/zMetaData.h	/^	operator BYTE() const$/;"	f	class:DBVarType
operator DWORD	base/zMetaData.h	/^	operator DWORD() const$/;"	f	class:DBVarType
operator QWORD	base/zMetaData.h	/^	operator QWORD() const$/;"	f	class:DBVarType
operator SQWORD	base/zMetaData.h	/^	operator SQWORD() const$/;"	f	class:DBVarType
operator T	base/xml/xml_node_content.h	/^	operator T(){$/;"	f	class:xml_content
operator T	base/xml/xml_node_prop.h	/^	operator T()$/;"	f	class:xml_prop
operator WORD	base/zMetaData.h	/^	operator WORD() const$/;"	f	class:DBVarType
operator []	base/zProperties.h	/^	std::string & operator[] (const std::string &key)$/;"	f	class:zProperties
operator const char*	base/zMetaData.h	/^	operator const char*() const$/;"	f	class:DBVarType
operator double	base/zMetaData.h	/^	operator double() const$/;"	f	class:DBVarType
operator float	base/zMetaData.h	/^	operator float() const$/;"	f	class:DBVarType
operator int	base/SuperCommand.h	/^	   operator int() const $/;"	f	struct:Cmd::Super::ServerEntry
operator int	base/zMetaData.h	/^	operator int() const$/;"	f	class:DBVarType
operator int	base/zType.h	/^  operator int() const$/;"	f	struct:GameZone_t
operator long	base/zMetaData.h	/^	operator long() const$/;"	f	class:DBVarType
operator short	base/zMetaData.h	/^	operator short() const$/;"	f	class:DBVarType
opt	tmpcode/commond.h	/^	DWORD opt; \/\/0-»°œ˚¥›ªŸ£ª∑«0-¥›ªŸ$/;"	m	struct:stDestroyTankCmd
opt	tmpcode/commond.h	/^        BYTE opt;\/\/0Œª-0πÿ±’£¨1ø™∆Ù;2-¥´À˘”–ƒ⁄»›;3-≤ø∑÷ƒ⁄»›$/;"	m	struct:req_rtChunYunListCmd
opt	tmpcode/commond.h	/^    BYTE opt; \/\/0-Ω·À„Õ≈¿˚»Û£¨1-¡Ó ’»Î±»¬ ¡¢º¥…˙–ß£¨≤ª”√µ»µ⁄2ÃÏ°£$/;"	m	struct:stWeekSalaryOperationUnionCmd
opt	tmpcode/commond.h	/^    BYTE opt;\/\/1-∑≈»Î‘ø≥◊£¨2-»°≥ˆ‘ø≥◊£¨3-º§ªÓº¿Ã≥$/;"	m	struct:reqKeyOptShenMiUserCmd
opt	tmpcode/commond.h	/^    DWORD opt;\/\/¥¶¿Ì∑Ω Ω:0-≤ª¥¶¿Ì£¨1-ΩΩÀÆ£¨2-◊•≥Ê£¨3- ©∑ £¨4-≥˙≤›$/;"	m	struct:rqTakeCareShenMuCountryCmd
optflag	tmpcode/commond.h	/^        bool optflag;       $/;"	m	struct:stOptGmTool
option	tmpcode/commond.h	/^    BYTE option;\/\/0-Œﬁ¥À≤Ÿ◊˜£ª1-Ωªªªø®∆¨£ª2-∂™∆˙ø®∆¨£ª$/;"	m	struct:st_rtShenYuCardOptionUserCmd
options	tools/codepg.cpp	/^static struct argp_option options[] =$/;"	v	typeref:struct:argp_option
options	tools/xmlpg.cpp	/^static struct argp_option options[] =$/;"	v	typeref:struct:argp_option
order	base/RecordCommand.h	/^      CountrOrder order;      \/\/ÊéíÂ∫èÁöÑÂõΩÂÆ∂ $/;"	m	struct:Cmd::Record::t_order_Country_GateRecord
order	base/RecordCommand.h	/^      } order[0];$/;"	m	struct:Cmd::Record::CountrOrder	typeref:struct:Cmd::Record::CountrOrder::__anon48
order	base/SessionCommand.h	/^      CountrOrder order;      \/\/ÊéíÂ∫èÁöÑÂõΩÂÆ∂ $/;"	m	struct:Cmd::Session::t_order_Country_GateSession
order	base/SessionCommand.h	/^      } order[0];$/;"	m	struct:Cmd::Session::CountrOrder	typeref:struct:Cmd::Session::CountrOrder::__anon40
order	tmpcode/commond.h	/^	BYTE order[9]; \/\/œ÷‘⁄”–9∏ˆ”≈œ»º∂$/;"	m	struct:TabKey
origDate	tmpcode/commond.h	/^	DWORD origDate;\/\/∑¢∆ ±º‰$/;"	m	struct:stRetRecallMasterInfo
origName	tmpcode/commond.h	/^	char origName[MAX_NAMESIZE];$/;"	m	struct:stRetRecallMasterInfo
os	base/xml/xml_utility.h	/^	std::ostream& os;$/;"	m	struct:detail::argument_dump
other	base/HeroCardCmd.h	/^	t_MagicPoint other;$/;"	m	struct:Cmd::stRetMagicPointInfoUserCmd
otherName	tmpcode/commond.h	/^	char otherName[MAX_NAMESIZE];   \/\/∂‘∑Ω√˚◊÷$/;"	m	struct:stBeginBetChallengeUserCmd
otherNum	base/HeroCardCmd.h	/^	DWORD otherNum;	    \/\/∂‘∑Ω £”‡$/;"	m	struct:Cmd::stRetLeftCardLibNumUserCmd
otherTempID	tmpcode/commond.h	/^        DWORD otherTempID;$/;"	m	struct:stUnBindUserToOther
otherTempID	tmpcode/commond.h	/^    DWORD otherTempID;$/;"	m	struct:stBindUserToOther
outMoneyCount	tmpcode/commond.h	/^	DWORD outMoneyCount;    \/\/∂‘Õ‚º€∏Ò±∂ ˝  Œ™¡„±Ì æœ¬º‹$/;"	m	struct:stMerchInfo
outMoneyCount	tmpcode/commond.h	/^        DWORD outMoneyCount;    \/\/∂‘Õ‚º€∏Ò±∂ ˝  Œ™¡„±Ì æœ¬º‹$/;"	m	struct:stRetMagicForgeInfo
outOfRegion	ScenesServer/SceneNpcAI.cpp	/^bool NpcAIController::outOfRegion() const$/;"	f	class:NpcAIController
outputfile	tools/codepg.cpp	/^    char* outputfile;$/;"	m	struct:Args
outputfile	tools/xmlpg.cpp	/^    char* outputfile;$/;"	m	struct:Args
outputfile2	tools/codepg.cpp	/^    char* outputfile2;$/;"	m	struct:Args
ownGrid	tmpcode/commond.h	/^    OneGuardGoodsGrid ownGrid;\/\/Ω” ’◊≈◊‘º∫∞·‘ÀµƒªıŒÔ$/;"	m	struct:rtGuardGoodsSeptCmd
ownType	tmpcode/commond.h	/^	BYTE ownType;		\/\/1 ÀΩ”– £¨2 π´”–$/;"	m	struct:HouseObjDef
owner	ScenesServer/zCard.h	/^    ChallengeGame *owner;$/;"	m	class:CardSlots
owner	ScenesServer/zObject.h	/^    SceneUser *owner;$/;"	m	class:Packages
owner	ScenesServer/zObject.h	/^    SceneUser* owner;$/;"	m	class:EquipPack
owner	base/Command.h	/^  char owner[MAX_NAMESIZE];\/\/ÊãçÂçñËÄÖ$/;"	m	struct:Cmd::stAddListAuction
owner	base/SessionCommand.h	/^      char owner[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::auctionInfo
owner	tmpcode/commond.h	/^	char owner[MAX_NAMESIZE];$/;"	m	struct:LTQRecord
owner	tmpcode/commond.h	/^        char owner[MAX_NAMESIZE];       \/\/≈ƒ¬Ù’ﬂ$/;"	m	struct:stAddListAuction
owner	tmpcode/commond.h	/^    char  owner[MAX_NAMESIZE];   \/\/∑¢≤º∂˜¥Õ’ﬂ√˚◊÷$/;"	m	struct:t_RewardInfo
ownerCity	tmpcode/commond.h	/^		DWORD ownerCity;        \/\/À˘ Ù≥« –$/;"	m	struct:stReturnCountryTax::CityInfo
ownerCountry	tmpcode/commond.h	/^		BYTE ownerCountry;          \/\/÷˜»ÀΩÁ”Ú$/;"	m	struct:stRet32NameListUserCmd::__anon373
ownerID	ScenesServer/zObject.h	/^  DWORD ownerID;$/;"	m	struct:zSceneObject
ownerID	base/Command.h	/^	DWORD ownerID;				\/\/sky NpcÊúÄÂ§ßHP$/;"	m	struct:Cmd::t_NpcData
ownerID	base/SessionCommand.h	/^      DWORD ownerID;$/;"	m	struct:Cmd::Session::auctionInfo
ownerID	tmpcode/commond.h	/^			DWORD ownerID;                 \/\/∑¢≤º’ﬂid$/;"	m	struct:stRetAllIssuedQuestUserCmd::quest
ownerID	tmpcode/commond.h	/^		DWORD ownerID;                \/\/∑¢≤º’ﬂid$/;"	m	struct:stReqConsignIssuedQuestUserCmd
ownerID	tmpcode/commond.h	/^		DWORD ownerID;                \/\/∑¢≤º’ﬂid$/;"	m	struct:stRetConsignIssuedQuestUserCmd
ownerName	tmpcode/commond.h	/^		char ownerName[MAX_NAMESIZE + 1]; \/\/÷˜»À√˚◊÷$/;"	m	struct:stRet32NameListUserCmd::__anon373
ownerName	tmpcode/commond.h	/^	char	ownerName[MAX_NAMESIZE];						\/\/ ∑ø÷˜√˚◊÷$/;"	m	struct:stHomeItem
ownerName	tmpcode/commond.h	/^	char	ownerName[MAX_NAMESIZE];        \/\/∑ø÷˜√˚◊÷$/;"	m	struct:HomeMapData
ownerName	tmpcode/commond.h	/^	char ownerName[MAX_NAMESIZE+1];$/;"	m	struct:stNotifyTop2DragonUserCmd
ownerName	tmpcode/commond.h	/^	char ownerName[MAX_NAMESIZE];$/;"	m	struct:stStateDancerUserCmd
ownerName	tmpcode/commond.h	/^                char ownerName[MAX_NAMESIZE];   \/\/◊Ó∏ﬂ«±ƒ‹µ»º∂µƒÕÊº“√˚◊÷$/;"	m	struct:stRetPotentialSkillBuildUserCmd::SkillItem
ownerName	tmpcode/commond.h	/^        char  ownerName[MAX_NAMESIZE];     \/\/ƒß¡¶¬Øµƒ÷˜»À√˚◊÷$/;"	m	struct:stEndStoveDataUserCmd
ownerName	tmpcode/commond.h	/^        char  ownerName[MAX_NAMESIZE];     \/\/ƒß¡¶¬Øµƒ÷˜»À√˚◊÷$/;"	m	struct:stStoveDataUserCmd
ownerName	tmpcode/commond.h	/^        char  ownerName[MAX_NAMESIZE];     \/\/ƒß¡¶¬Øµƒ÷˜»À√˚◊÷$/;"	m	struct:stUpdateStoveDataUserCmd
ownerType	base/Command.h	/^	BYTE ownerType;\/\/\/Á≠âÁ∫ß$/;"	m	struct:Cmd::t_NpcData
ownerType	tmpcode/commond.h	/^    BYTE ownerType;      \/\/NPC¿‡–Õ,0-◊‘÷˜µƒ£¨1- Ù”⁄º“◊Â,2- Ù”⁄æ¸Õ≈£¨4- Ù”⁄∏ˆ»À$/;"	m	struct:t_NPCData
ownerid	tmpcode/commond.h	/^	DWORD ownerid;\/\/”–≥·∞Ú»ÀµƒID$/;"	m	struct:stSendDataFlySkillMagicUserCmd
ownertempid	tmpcode/commond.h	/^	DWORD ownertempid;\/\/÷˜»Àµƒ¡Ÿ ±ID  $/;"	m	struct:stSendChangeFaceNPCMagicUserCmd
p1	ScenesServer/scriptTickTask.h	/^	int p1;$/;"	m	struct:scriptTask
pAttThisID	base/HeroCardCmd.h	/^	DWORD pAttThisID;   \/\/π•ª˜’ﬂ$/;"	m	struct:Cmd::stAddBattleCardPropertyUserCmd
pContent	SessionServer/SessionTask.cpp	/^  char * pContent;$/;"	m	struct:broadcastRushToEveryUser
pDefThisID	base/HeroCardCmd.h	/^	DWORD pDefThisID;   \/\/∑¿”˘’ﬂ$/;"	m	struct:Cmd::stAddBattleCardPropertyUserCmd
pItemBuf	tmpcode/commond.h	/^		 stTradeObject pItemBuf[0];$/;"	m	struct:stKokChatUserCmd
pOrder	tmpcode/commond.h	/^        BYTE pOrder;            \/\/0≤ª∞¥º€∏Ò≈≈–Ú1º€∏Ò…˝–Ú2º”∏ˆΩµ–Ú$/;"	m	struct:stQueryPurchase
pSocket	base/zTCPClient.h	/^	zSocket *pSocket;                \/**< µ◊≤„Ã◊Ω”ø⁄ *\/$/;"	m	class:zTCPClient
pSocket	base/zTCPClientTask.h	/^	zSocket *pSocket;                \/**< µ◊≤„Ã◊Ω”ø⁄ *\/$/;"	m	class:zTCPClientTask
pUser	GatewayServer/GatewayTask.h	/^	GateUser *pUser;$/;"	m	class:GatewayTask
pUser	ScenesServer/ChallengeGame.cpp	/^	SceneUser *pUser;$/;"	m	class:sendAllCardListToUser
pUser	ScenesServer/SceneUser.cpp	/^	SceneUser *pUser;$/;"	m	class:sendAllObjectListToUser
pUser	ScenesServer/SceneUser.cpp	/^	SceneUser *pUser;$/;"	m	class:sendAllObjectToUser
pUser	ScenesServer/SceneUser.cpp	/^	SceneUser *pUser;$/;"	m	struct:GetEnvryOneAndSend
pack	ScenesServer/zObject.cpp	/^ObjectPack* EquipPack::pack(PACKNO no) const$/;"	f	class:EquipPack
pack	ScenesServer/zObject.h	/^    Package* pack;$/;"	m	struct:DropFromPack::Param
packData	tmpcode/commond.h	/^	t_PackBusinessData      packData[BUSINESSPACKSIZE];$/;"	m	struct:stGetPackBusiness
packetAppend	base/zSocket.h	/^inline DWORD zSocket::packetAppend(const void *pData,const DWORD nLen,buffer_type &cmd_queue)$/;"	f	class:zSocket
packetAppendNoEnc	base/zSocket.h	/^inline DWORD zSocket::packetAppendNoEnc(const void *pData,const DWORD nLen,buffer_type &cmd_queue)$/;"	f	class:zSocket
packetMinSize	base/zSocket.h	/^	inline DWORD packetMinSize() const { return PH_LEN; }$/;"	f	class:zSocket
packetPackEnc	base/zSocket.h	/^inline DWORD zSocket::packetPackEnc(buffer_type &cmd_queue,const DWORD current_cmd,DWORD offset)$/;"	f	class:zSocket
packetPackZip	base/zSocket.h	/^inline DWORD zSocket::packetPackZip(const void *pData,const DWORD nLen,buffer_type &cmd_queue,const bool _compress)$/;"	f	class:zSocket
packetSize	base/zSocket.h	/^	inline DWORD packetSize(const BYTE *in) const { return PH_LEN + ((*((DWORD *)in)) & PACKET_MASK); }$/;"	f	class:zSocket
packets	GatewayServer/CmdChecker.h	/^	int packets() const$/;"	f	class:CheckInfo
packets	GatewayServer/CmdChecker.h	/^	void packets(int packets_)$/;"	f	class:CheckInfo
packs	ScenesServer/SceneUser.h	/^    Packages packs;$/;"	m	struct:SceneUser
packs	ScenesServer/zObject.h	/^    ObjectPack** packs;$/;"	m	class:EquipPack
page	base/Command.h	/^  BYTE page; \/\/È°µÊï∞$/;"	m	struct:Cmd::stStoreInfoNpcTradeUserCmd
page	base/Command.h	/^  WORD page;$/;"	m	struct:Cmd::stQueryAuction
page	base/SessionCommand.h	/^      WORD page;$/;"	m	struct:Cmd::Session::t_queryAuction_SceneSession
page	tmpcode/commond.h	/^		BYTE page;$/;"	m	struct:stSendSeptStoreDataCmd::__anon305
page	tmpcode/commond.h	/^	BYTE page;			\/\/“≥ ˝$/;"	m	struct:stStoreInfoNpcTradeUserCmd
page	tmpcode/commond.h	/^	BYTE page;		\/\/“≥ ˝$/;"	m	struct:stObserveQuestRoomUserCmd
page	tmpcode/commond.h	/^	BYTE page;	\/\/ 0:µ⁄1≤÷ø‚À˜“˝ 1:µ⁄2≤÷ø‚À˜“˝$/;"	m	struct:stChangeSeptStoreModeCmd
page	tmpcode/commond.h	/^	BYTE page;	\/\/ 1:ø™∆Ù¡À1∏ˆ≤÷ø‚ 2:ø™∆Ù¡À2∏ˆ≤÷ø‚$/;"	m	struct:stRetSeptRentStoreCmd
page	tmpcode/commond.h	/^	BYTE page;      \/\/0 µ⁄“ª≤÷ø‚ 1 µ⁄∂˛≤÷ø‚$/;"	m	struct:stReqPutSeptStoreCmd
page	tmpcode/commond.h	/^	BYTE page;      \/\/±Ì æ≤È—Ø“≥ ˝£®“≥ ˝BYTE(-1)Œﬁ–ß£©$/;"	m	struct:stRequestScoreListWeekendZhenxuanUserCmd
page	tmpcode/commond.h	/^	BYTE page;$/;"	m	struct:stAddObjectSeptStoreCmd
page	tmpcode/commond.h	/^	BYTE page;$/;"	m	struct:stAllRoomQuestRoomUserCmd
page	tmpcode/commond.h	/^	BYTE page;$/;"	m	struct:stRemoveObjectSeptStore
page	tmpcode/commond.h	/^	BYTE page;$/;"	m	struct:stReqFetchSeptStoreCmd
page	tmpcode/commond.h	/^	BYTE page;$/;"	m	struct:stSetObjectRightSeptStore
page	tmpcode/commond.h	/^	DWORD page;    \/\/«Î«Û“≥ ˝$/;"	m	struct:stReqCityDareSortUserCmd
page	tmpcode/commond.h	/^	DWORD page;  \/\/“≥ ˝$/;"	m	struct:t_ReqCountrySeptNotice
page	tmpcode/commond.h	/^	WORD  page;$/;"	m	struct:stAddTeamRecruitInfoUserCmd
page	tmpcode/commond.h	/^	WORD page;                              \/\/“≥ ˝,0º¥±Ì æµ⁄“ª“≥£¨“¿¥Œ¿‡Õ∆$/;"	m	struct:stReqTeamInfoListUserCmd
page	tmpcode/commond.h	/^        WORD page;              \/\/“≥ ˝$/;"	m	struct:stQueryPurchase
page	tmpcode/commond.h	/^        WORD page;$/;"	m	struct:stAddListAuction
page	tmpcode/commond.h	/^        WORD page;$/;"	m	struct:stQueryAuction
page	tmpcode/commond.h	/^    BYTE page;              \/\/“≥ ˝$/;"	m	struct:reqEnterQuestRoomHailUserCmd
page	tmpcode/commond.h	/^    BYTE page;      \/\/“≥ ˝£ª0ø™ º$/;"	m	struct:stRoomInfoQuestRoomUserCmd
page	tmpcode/commond.h	/^    WORD page;      \/\/“≥ ˝$/;"	m	struct:stAddListPurchase
pageFlag	tmpcode/commond.h	/^	BYTE pageFlag;          \/\/“≥ ˝±Í ∂£ª1ø…œ¬∑≠£ª2ø……œ∑≠$/;"	m	struct:stReturnScoreListWeekendZhenxuanUserCmd
pageFlag	tmpcode/commond.h	/^        BYTE pageFlag[2];               \/\/“≥ ˝±Í ∂£ª1ø…œ¬∑≠£ª2ø……œ∑≠$/;"	m	struct:stReturnScoreListLuoRiUserCmd
para	ScenesServer/script_func.h	/^    int para;$/;"	m	struct:RecentMsg
para	base/zNullCmd.h	/^    BYTE para;          \/**< Êåá‰ª§‰ª£Á†ÅÂ≠êÁºñÂè∑ *\/$/;"	m	struct:Cmd::t_NullCmd
para1	base/SceneCommand.h	/^	  DWORD para1;$/;"	m	struct:Cmd::Scene::t_gmCommand_SceneGate
para2	base/SceneCommand.h	/^	  DWORD para2;$/;"	m	struct:Cmd::Scene::t_gmCommand_SceneGate
paraExp	tmpcode/commond.h	/^	WORD paraExp;           \/\/‘ˆº”æ≠—È∞Ÿ∑÷±»$/;"	m	struct:stSendDrunkStateGouhuoUserCmd
paraNum	tmpcode/commond.h	/^        BYTE  paraNum;          \/\/–˚¥´ƒ⁄»›µƒ±‰¡ø∏ˆ ˝$/;"	m	struct:stReturnBargirlADContent
param	tmpcode/commond.h	/^	DWORD param;    \/\/∏Ωº”≤Œ ˝:¥´ÀÕÃ®-»ÀŒÔµ±«∞»À∆¯$/;"	m	struct:rt_ObjVisitHouseUserCmd
param	tmpcode/commond.h	/^	WORD param;             \/\/typeµ»1 ±Œ™0£¨typeµ»2 ±±Ì æΩ˙º∂º∏«ø£¨typeµ»3 ±±Ì æªÒµ√¡˙æß∏ˆ ˝$/;"	m	struct:stNotifyBetDragonFightUserCmd
param	tmpcode/commond.h	/^        BYTE param[2];  \/\/2Œ¨ ˝◊È±Ì æ∂‘’ÛÀ´∑Ω£¨ ˝◊È÷µ±Ì æ≤È—Ø“≥ ˝£®“≥ ˝BYTE(-1)Œﬁ–ß£©$/;"	m	struct:stRequestScoreListLuoRiUserCmd
param	tmpcode/commond.h	/^    BYTE param;\/\/0 «Î«Û√‹¬Î 1£∫—È÷§≥…π¶$/;"	m	struct:stReqSecPasswordSelectUserCmd
params	ScenesServer/Scene.h	/^    std::map<std::string,std::string> params;$/;"	m	class:Scene
paras	ScenesServer/scriptTickTask.h	/^	typedef std::vector<const char *> paras;$/;"	t	class:scriptMessageFilter
parlor	tmpcode/commond.h	/^	BYTE parlor;    \/\/øÕÃ¸ID = 100,»Áπ˚Œ™0£¨‘Ú≤ª¥Ê‘⁄$/;"	m	struct:rt_memberListHouseUserCmd
parse	ScenesServer/Chat.h	/^        bool (*parse)( SceneUser *pUser,const char *para);$/;"	m	struct:Gm
parse	ScenesServer/QuestCondition.h	/^  bool parse (zXMLParser& xml,xmlNodePtr& node)$/;"	f	class:ScenesParser
parse	ScenesServer/QuestEvent.cpp	/^bool Event::parse(const std::string& file_name)$/;"	f	class:Event
parse	ScenesServer/QuestEvent.h	/^  bool parse(const std::string& file_name) $/;"	f	class:EventManager
parse	base/xml/xml_node.h	/^		bool parse(zXMLParser& xml, xmlNodePtr node, bool root =false)$/;"	f	class:xml_node
parse	base/xml/xml_node.h	/^		virtual bool parse(zXMLParser& xml, xmlNodePtr node) {return false; }$/;"	f	class:xml_node_base
parse	base/xml/xml_node_container.h	/^	    bool parse(zXMLParser& xml, xmlNodePtr node)$/;"	f	class:detail::xml_node_map_container
parse	base/xml/xml_node_container.h	/^	    bool parse(zXMLParser& xml, xmlNodePtr node)$/;"	f	class:detail::xml_node_seq_container
parse	base/xml/xml_node_content.h	/^	bool parse(zXMLParser& xml, xmlNodePtr node)$/;"	f	class:xml_content
parse	base/xml/xml_node_prop.h	/^	bool parse(zXMLParser& xml, xmlNodePtr node)$/;"	f	class:xml_prop
parse	base/xml/xml_parser_generator.h	/^	virtual bool parse(zXMLParser& xml, xmlNodePtr node)$/;"	f	class:xml_node_map_parser_generator
parse	base/xml/xml_parser_generator.h	/^	virtual bool parse(zXMLParser& xml, xmlNodePtr node)$/;"	f	class:xml_node_parser_generator
parse	base/xml/xml_parser_generator.h	/^	virtual bool parse(zXMLParser& xml, xmlNodePtr node)$/;"	f	class:xml_node_set_parser_generator
parse	base/xml/xml_parser_generator.h	/^	virtual bool parse(zXMLParser& xml, xmlNodePtr node)$/;"	f	class:xml_prop_parser_generator
parse	base/zDatabase.h	/^    void parse(const char * str)$/;"	f	struct:npcRecover
parse	base/zSceneEntry.h	/^	bool parse(const std::string& sPos)$/;"	f	struct:zPos
parseAction	ScenesServer/SceneNpcAI.cpp	/^SceneNpcAIType NpcAIController::parseAction(char * action)$/;"	f	class:NpcAIController
parseMySQLURLString	base/zDBConnPool.h	/^	void parseMySQLURLString()$/;"	f	struct:UrlInfo
parseSkills	base/zDatabase.h	/^    bool parseSkills(const char * str)$/;"	f	struct:zNpcB
parseYour	BillServer/BillServer.cpp	/^  bool parseYour(const xmlNodePtr node)$/;"	f	class:BillConfile
parseYour	FLServer/FLServer.cpp	/^	bool parseYour(const xmlNodePtr node)$/;"	f	class:LoginConfile
parseYour	GatewayServer/GatewayServer.cpp	/^  bool parseYour(const xmlNodePtr node)$/;"	f	class:GatewayConfile
parseYour	RecordServer/RecordServer.cpp	/^  bool parseYour(const xmlNodePtr node)$/;"	f	class:RecordConfile
parseYour	Robot/ClientService.cpp	/^  bool parseYour(const xmlNodePtr node)$/;"	f	class:RecordConfile
parseYour	ScenesServer/ScenesServer.cpp	/^	bool parseYour(const xmlNodePtr node)$/;"	f	class:SceneConfile
parseYour	SessionServer/SessionServer.cpp	/^  bool parseYour(const xmlNodePtr node)$/;"	f	class:SessionConfile
parseYour	SuperServer/SuperServer.cpp	/^	bool parseYour(const xmlNodePtr node)$/;"	f	class:SuperConfile
parseYour	roleChangeServer/roleChangeServer.cpp	/^	bool parseYour(const xmlNodePtr node)$/;"	f	class:roleChangeConfile
parseYour	roleRegServer/roleRegServer.cpp	/^	bool parseYour(const xmlNodePtr node)$/;"	f	class:roleRegConfile
parse_flag	tools/xmlpg.cpp	/^    int parse_flag;$/;"	m	struct:Args
parse_node_value	base/xml/xml_parser_generator.h	/^void xml_node_parser_generator::parse_node_value()$/;"	f	class:xml_node_parser_generator
parse_opt	tools/codepg.cpp	/^static error_t parse_opt(int key, char* arg, struct argp_state* state)$/;"	f
parse_opt	tools/xmlpg.cpp	/^static error_t parse_opt(int key, char* arg, struct argp_state* state)$/;"	f
parse_prop_value	base/xml/xml_parser_generator.h	/^inline bool xml_prop_parser_generator::parse_prop_value()$/;"	f	class:xml_prop_parser_generator
parse_the_node	base/xml/xml_parser_generator.h	/^	void parse_the_node(zXMLParser& xml, xmlNodePtr node)$/;"	f	class:xml_node_parser_generator
parser	base/zConfile.h	/^	zXMLParser parser;$/;"	m	class:zConfile
part	tmpcode/commond.h	/^		BYTE    part;                 \/\/’Û”™ 1:¿∂∑Ω 2£∫∫Ï∑Ω£¨0£∫–›œ¢◊¥Ã¨$/;"	m	struct:stReturnScoreListWeekendZhenxuanUserCmd::PlayerScore
part	tmpcode/commond.h	/^	BYTE part;             \/\/Œ“µƒ’Û”™$/;"	m	struct:stRefreshUserInfoWeekendZhenxuanUserCmd
part	tmpcode/commond.h	/^        BYTE part; \/\/1:Œ‰∆˜£¨2£∫∑¿æﬂ£¨3£∫ Œ∆∑$/;"	m	struct:stDisBurdenEquipDragonUserCmd
part	tmpcode/commond.h	/^        BYTE part;$/;"	m	struct:stSendAllScoreCmd::allSorce
part	tmpcode/commond.h	/^        BYTE part;$/;"	m	struct:stSendUserPartUserCmd
part	tmpcode/commond.h	/^        WORD part[2];                   \/\/nameAndScore÷–≥…‘±µƒ∏ˆ ˝$/;"	m	struct:stReturnScoreListLuoRiUserCmd
partID	tmpcode/commond.h	/^	DWORD partID;           \/\/≈‰º˛id$/;"	m	struct:stTankPartUpgradePropertyUserCmd
partID	tmpcode/commond.h	/^	DWORD partID[TANK_HOLE_MAX];    \/\/¥˝œ‚«∂µƒ≈‰º˛id£¨Œ™0±Ì æ∏√œ‚«∂ø◊≤ª–Ë“™œ‚«∂$/;"	m	struct:stCheckRebuildUnionTankCmd
partID	tmpcode/commond.h	/^	DWORD partID[TANK_HOLE_MAX];    \/\/¥˝œ‚«∂µƒ≈‰º˛‘⁄tbl¿Ôµƒid£¨Œ™0±Ì æ∏√œ‚«∂ø◊≤ª–Ë“™œ‚«∂$/;"	m	struct:stCheckRebuildTankCmd
partOneScore	tmpcode/commond.h	/^	DWORD partOneScore;     \/\/¿∂∑Ω◊‹ª˝∑÷$/;"	m	struct:stRefreshCommonInfoWeekendZhenxuanUserCmd
partTwoScore	tmpcode/commond.h	/^	DWORD partTwoScore;     \/\/∫Ï∑Ω◊‹ª˝∑÷$/;"	m	struct:stRefreshCommonInfoWeekendZhenxuanUserCmd
passdam	ScenesServer/ScenePk.h	/^      SWORD passdam;    \/\/Ë¢´Âä®ÔºöÈ¢ùÂ§ñ‰º§ÂÆ≥117$/;"	m	struct:SkillState::__anon155::__anon156
passengerID	tmpcode/commond.h	/^	DWORD passengerID[0];   \/\/≥ÀøÕ$/;"	m	struct:t_MapTankData
passengerNum	tmpcode/commond.h	/^	BYTE passengerNum;      \/\/≥ÀøÕ ˝¡ø$/;"	m	struct:t_MapTankData
passpodPwd	base/Command.h	/^  unsigned char passpodPwd[9];$/;"	m	struct:Cmd::stUserRequestLoginCmd
passpodPwd	tmpcode/commond.h	/^	unsigned char passpodPwd[9];	\/**√‹±£√‹¬Î *\/$/;"	m	struct:stUserRequestLoginCmd
passtime	tmpcode/commond.h	/^        DWORD passtime;$/;"	m	struct:stNotifyFinishedIssueQuestUserCmd
passwd	base/zDBConnPool.h	/^	char passwd[MAX_PASSWORD];$/;"	m	struct:UrlInfo
passwd	base/zType.h	/^  char passwd[MAX_PASSWORD];$/;"	m	struct:t_NewLoginSession
passwd2	base/zType.h	/^  char passwd2[MAX_PASSWORD];$/;"	m	struct:t_NewLoginSession
passwd2	tmpcode/commond.h	/^    char passwd2[MAX_PASSWORD];$/;"	m	struct:stRetSecPasswordSelectUserCmd
password	BillServer/BillUser.h	/^    char password[MAX_PASSWORD+1];$/;"	m	class:BillUser
password	tmpcode/commond.h	/^	char password[7];                               \/\/√‹¬Î$/;"	m	struct:stReqJoinTeamCmd
password	tmpcode/commond.h	/^	char password[7];$/;"	m	struct:stJoinModeTeamMemberUserCmd
password	tmpcode/commond.h	/^    char password[7];               \/\/∑øº‰√‹¬Î$/;"	m	struct:stCreateQuestRoomUserCmd
password	tmpcode/commond.h	/^    char password[7];       \/\/√‹¬Î  $/;"	m	struct:stJoinQuestRoomUserCmd
password	tmpcode/commond.h	/^    char password[MAX_ROOMPASSWORD];                        \/\/√‹¬Î$/;"	m	struct:stInviteQuestRoomUserCmd
path	tmpcode/commond.h	/^        char path[MAX_NAMESIZE + 1];  \/\/øÕªß∂À π”√$/;"	m	struct:stPlaySoundQuestUserCmd
patrating	ScenesServer/ScenePk.h	/^      SWORD patrating;   \/\/ Â¢ûÂä†ÂëΩ‰∏≠ÁéáÔºàË¢´Âä®Ôºâ$/;"	m	struct:SkillState::__anon155::__anon156
pattackspeed	ScenesServer/ScenePk.h	/^      SWORD pattackspeed;  \/\/Â¢ûÂä†ÊîªÂáªÈÄüÂ∫¶ÔºàË¢´Âä®Ôºâ$/;"	m	struct:SkillState::__anon155::__anon156
pattern	tmpcode/commond.h	/^                BYTE pattern;                   $/;"	m	struct:stNotifyPatternUserCmd::stPattern
pattern	tmpcode/commond.h	/^                BYTE pattern;$/;"	m	struct:stRetShowSkillStoreInfo::stPattern
pattern	tmpcode/commond.h	/^        stPattern pattern[0];     \/\/≈‰∑Ω ˝æ›$/;"	m	struct:stRetShowSkillStoreInfo
patternID	tmpcode/commond.h	/^	DWORD   patternID;                    \/\/Õº÷Ωid$/;"	m	struct:stFoundFashionPropertyUserCmd
patternID	tmpcode/commond.h	/^        DWORD   patternID;                    \/\/Õº÷Ωid$/;"	m	struct:stFoundFashionSkillStore
payMoney	tmpcode/commond.h	/^    DWORD payMoney;$/;"	m	struct:stCityQuestEarnInfo
pblazeappend	ScenesServer/ScenePk.h	/^      SWORD pblazeappend; \/\/ ÁÅ´ÁÑ∞Á≥ªÊ≥ïÊúØ‰º§ÂÆ≥ÊèêÂçáÊØî‰æãÂçÉÂàÜ‰πãÂá†$/;"	m	struct:SkillState::__anon155::__anon156
pcardid	base/UserCommand.h	/^      char      pcardid[CARDID_LENGTH +1];\/\/ÂÖÖÂÄºÂç°Âè∑$/;"	m	struct:Cmd::UserServer::t_cmd_pcard
pdam	ScenesServer/zObject.h	/^  WORD pdam;  \/\/ Â¢ûÂä†Áâ©ÁêÜÊîªÂáªÂäõ$/;"	m	class:Equips
pdam	base/Command.h	/^  BYTE pdam;    \/\/Â¢ûÂä†Áâ©ÁêÜÊîªÂáªÂäõ%$/;"	m	struct:Cmd::t_HorseData
pdam	base/Object.h	/^	WORD pdam;  \/\/ ‘ˆº”ŒÔ¿Ìπ•ª˜¡¶  100◊Ó¥Û  ∞Ÿ∑÷±»$/;"	m	struct:t_Object
pdamage	ScenesServer/ScenePk.h	/^      DWORD  pdamage;          \/\/\/ Áâ©ÁêÜÊîªÂáªÂäõ *$/;"	m	struct:PkValue::__anon159::__anon160
pdamage	ScenesServer/zObject.h	/^  DWORD pdamage;        \/\/ ÊúÄÂ∞èÊîªÂáªÂäõ$/;"	m	class:Equips
pdamage	base/CharBase.h	/^  DWORD pdamage;                   \/\/\/ ÊúÄÂ∞èÁâ©ÁêÜÊîªÂáªÂäõ *$/;"	m	struct:CharState
pdamage	base/Command.h	/^  DWORD pdamage;          \/\/\/ ÊúÄÂ∞èÁâ©ÁêÜÊîªÂáªÂäõ$/;"	m	struct:Cmd::t_MainUserData
pdamage	base/Object.h	/^	WORD pdamage;				\/\/ ◊Ó–°π•ª˜¡¶      \/\/ ∂‘”¶¬Ì∆• ŒÔπ•º”≥…$/;"	m	struct:t_Object
pdamage	base/zDatabase.h	/^    WORD pdamage;				\/\/ ◊Ó–°π•ª˜¡¶      \/\/ ∂‘”¶¬Ì∆• ŒÔπ•º”≥…$/;"	m	struct:zObjectB
pdamage	tmpcode/commond.h	/^	DWORD pdamage;					\/\/\/ ◊Ó–°ŒÔ¿Ìπ•ª˜¡¶$/;"	m	struct:t_MainUserData
pdamage	tmpcode/commond.h	/^	WORD pdamage;$/;"	m	struct:SimulateHorse
pdamage	tmpcode/commond.h	/^        DWORD pdamage;                  \/\/\/ ◊Ó–°ŒÔ¿Ìπ•ª˜¡¶ $/;"	m	struct:stPkDataPropertyUserCmd
pdamage	tmpcode/commond.h	/^        DWORD pdamage;  \/\/◊Ó–°ŒÔπ•$/;"	m	struct:CardMainData
pdamtodef	ScenesServer/ScenePk.h	/^      SWORD pdamtodef;  \/\/ Áâ©ÊîªËΩ¨Áâ©Èò≤$/;"	m	struct:SkillState::__anon155::__anon156
pdef	ScenesServer/zObject.h	/^  WORD pdef;  \/\/ Â¢ûÂä†Áâ©ÁêÜÈò≤Âæ°Âäõ$/;"	m	class:Equips
pdef	base/Command.h	/^  BYTE pdef;    \/\/Â¢ûÂä†Áâ©ÁêÜÈò≤Âæ°Âäõ%$/;"	m	struct:Cmd::t_HorseData
pdef	base/Object.h	/^	WORD pdef;  \/\/ ‘ˆº”ŒÔ¿Ì∑¿”˘¡¶  100◊Ó¥Û  ∞Ÿ∑÷±»$/;"	m	struct:t_Object
pdef	tmpcode/commond.h	/^			WORD pdef;	$/;"	m	struct:LingQiData::__anon321::__anon322
pdef	tmpcode/commond.h	/^			WORD pdef;	$/;"	m	struct:LingQiPkData::__anon327::__anon328
pdef	tmpcode/commond.h	/^			WORD pdef;      $/;"	m	struct:LingQiMaxCoefData::__anon331::__anon332
pdef	tmpcode/commond.h	/^			WORD pdef;      $/;"	m	struct:LingQiSimulate::__anon362::__anon363
pdef_plus	base/Command.h	/^	WORD pdef_plus;         \/\/ÈôÑÂä†Áâ©Èò≤$/;"	m	struct:Cmd::t_PetData
pdef_plus	tmpcode/commond.h	/^	WORD pdef_plus;         \/\/∏Ωº”ŒÔ∑¿$/;"	m	struct:t_PetData
pdefence	ScenesServer/ScenePk.h	/^      DWORD  pdefence;          \/\/\/ Áâ©ÁêÜÈò≤Âæ°Âäõ *$/;"	m	struct:PkValue::__anon159::__anon160
pdefence	ScenesServer/ScenePk.h	/^      SWORD pdefence;    \/\/Áâ©ÁêÜÈò≤Âæ°Êï∞ÂÄºÂèòÊõ¥ 57Ôºå86$/;"	m	struct:SkillState::__anon155::__anon156
pdefence	ScenesServer/zObject.h	/^  WORD pdefence;        \/\/ Áâ©Èò≤$/;"	m	class:Equips
pdefence	base/CharBase.h	/^  DWORD pdefence;            \/\/\/ Áâ©ÁêÜÈò≤Âæ°Âäõ *$/;"	m	struct:CharState
pdefence	base/Command.h	/^  DWORD pdefence;          \/\/\/ Áâ©ÁêÜÈò≤Âæ°Âäõ$/;"	m	struct:Cmd::t_MainUserData
pdefence	base/Object.h	/^	WORD pdefence;				\/\/ ŒÔ∑¿            \/\/ ∂‘”¶¬Ì∆• ŒÔ∑¿º”≥…$/;"	m	struct:t_Object
pdefence	base/zDatabase.h	/^    DWORD  pdefence;      \/\/ ◊Ó–°ŒÔ¿Ì∑¿”˘¡¶$/;"	m	struct:zNpcB
pdefence	base/zDatabase.h	/^    WORD pdefence;				\/\/ ŒÔ∑¿            \/\/ ∂‘”¶¬Ì∆• ŒÔ∑¿º”≥…$/;"	m	struct:zObjectB
pdefence	tmpcode/commond.h	/^	DWORD pdefence;					\/\/\/ ŒÔ¿Ì∑¿”˘¡¶$/;"	m	struct:t_MainUserData
pdefence	tmpcode/commond.h	/^	WORD pdefence;$/;"	m	struct:SimulateHorse
pdefence	tmpcode/commond.h	/^        DWORD pdefence;                 \/\/\/ ŒÔ¿Ì∑¿”˘¡¶ $/;"	m	struct:stPkDataPropertyUserCmd
pdefence	tmpcode/commond.h	/^        DWORD pdefence; \/\/ŒÔ∑¿$/;"	m	struct:CardMainData
pdefencep	ScenesServer/ScenePk.h	/^      SWORD pdefencep;  \/\/Áâ©ÁêÜÈò≤Âæ°ÂèòÊõ¥ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
pdeftodam	ScenesServer/ScenePk.h	/^      SWORD pdeftodam;  \/\/ Áâ©Èò≤ËΩ¨Áâ©Êîª$/;"	m	struct:SkillState::__anon155::__anon156
pdeftozero	ScenesServer/SceneEntryPk.h	/^    bool pdeftozero;   \/\/\/ È≠îÊ≥ïÈò≤Âæ°ÂèòÊàê0$/;"	m	struct:SceneEntryPk
peaceNum	base/xmlparser/battle.h	/^        xml_prop<DWORD>	peaceNum;$/;"	m	struct:BattleConfig::Limit
per_num	base/Command.h	/^    BYTE per_num; \/\/ÂçïÊ¨°ÂêàÊàêÊï∞Èáè$/;"	m	struct:Cmd::stComposeItemPropertyUserCmd
per_num	tmpcode/commond.h	/^    BYTE  per_num;   \/\/∫œ≥…ª˘ ˝$/;"	m	struct:stComposeStarStoneUserCmd
per_num	tmpcode/commond.h	/^    BYTE per_num; \/\/µ•¥Œ∫œ≥… ˝¡ø$/;"	m	struct:stComposeItemPropertyUserCmd
per_num	tmpcode/commond.h	/^    BYTE per_num; \/\/µ•¥Œ∫œ≥… ˝¡ø$/;"	m	struct:stNpcComposeItemPropertyUserCmd
percent	ScenesServer/SkillStatusManager.h	/^  DWORD percent;$/;"	m	struct:SkillStatusElement
percent	base/zDatabase.h	/^	    DWORD percent;$/;"	m	struct:SkillElement::__anon34::__anon35
percent_up_off	GatewayServer/CmdChecker.h	/^class percent_up_off$/;"	c
permission	tmpcode/commond.h	/^        DWORD   permission;     \/\/»®œﬁ  $/;"	m	struct:stNameCard
personCount	tmpcode/commond.h	/^		DWORD personCount;				\/\/œÏ”¶ƒººØµƒ◊‹»À ˝$/;"	m	struct:stGetKingPurseListCmd::__anon252
personality	tmpcode/commond.h	/^		BYTE personality[4];$/;"	m	union:LingQiData::__anon325
personality	tmpcode/commond.h	/^		BYTE personality[4];$/;"	m	union:LingQiSimulate::__anon366
personality	tmpcode/commond.h	/^    BYTE personality[4];$/;"	m	union:LingQiWatchData::__anon339
personalityMaxPercent	tmpcode/commond.h	/^		BYTE personalityMaxPercent[4];$/;"	m	union:LingQiMaxCoefData::__anon333
personalityPercent	tmpcode/commond.h	/^		BYTE personalityPercent[4];$/;"	m	union:LingQiData::__anon323
personalityPercent	tmpcode/commond.h	/^		BYTE personalityPercent[4];$/;"	m	union:LingQiSimulate::__anon364
personalityPercent	tmpcode/commond.h	/^    BYTE personalityPercent[4];$/;"	m	union:LingQiWatchData::__anon337
pet	base/Command.h	/^    t_MapPetData pet; $/;"	m	struct:Cmd::stAddMapNpcPetMapScreenStateUserCmd
pet	base/Command.h	/^    t_MapPetData pet; $/;"	m	struct:Cmd::stAddMapNpcPetMapScreenUserCmd
pet	base/Command.h	/^    t_MapPetData pet; $/;"	m	struct:Cmd::stAddMapPetMapScreenUserCmd
pet	tmpcode/commond.h	/^	t_MapPetData pet; $/;"	m	struct:stAddMapPetMapScreenUserCmd
pet	tmpcode/commond.h	/^    t_MapPetData pet;$/;"	m	struct:stAddMapNpcPetMapScreenUserCmd
petAIMode	base/Command.h	/^enum petAIMode$/;"	g	namespace:Cmd
petAIMode	tmpcode/commond.h	/^enum petAIMode$/;"	g
petAutoRepair	ScenesServer/SceneUser.cpp	/^void SceneUser::petAutoRepair(zObject *obj)$/;"	f	class:SceneUser
petData	ScenesServer/SceneUser.h	/^    Cmd::t_PetData petData;\/\/ÂºìÊâãÊäìÁöÑÂÆ†Áâ©Êï∞ÊçÆ$/;"	m	struct:SceneUser
petDeath	ScenesServer/SceneNpc.h	/^  virtual void petDeath(){}$/;"	f	class:SceneNpc
petList	ScenesServer/SceneDefine.h	/^	std::map<DWORD,std::pair<DWORD,DWORD> > petList;$/;"	m	struct:t_NpcDefine
petPack	ScenesServer/zObject.h	/^    PetPack petPack;$/;"	m	class:Packages
petPack	base/CharBase.h	/^  WORD petPack;        \/\/\/ ÂÆ†Áâ©ÂåÖË£πÂ§ßÂ∞è$/;"	m	struct:CharBase
petPoint	base/CharBase.h	/^  DWORD petPoint;        \/\/\/ Â•ñÂä±ÁöÑÂÆ†Áâ©‰øÆÁÇºÊó∂Èó¥$/;"	m	struct:CharBase
petSkillMode	tmpcode/commond.h	/^enum petSkillMode$/;"	g
petState	base/Command.h	/^enum petState$/;"	g	namespace:Cmd
petState	tmpcode/commond.h	/^enum petState$/;"	g
petType	base/Command.h	/^enum petType$/;"	g	namespace:Cmd
petType	tmpcode/commond.h	/^enum petType$/;"	g
pet_pic	base/zDatabase.h	/^    DWORD  pet_pic;      \/\/≥ËŒÔÕº∆¨$/;"	m	struct:zNpcB
pet_type	base/Command.h	/^  BYTE pet_type;\/\/ÂÆ†Áâ©Á±ªÂûã$/;"	m	struct:Cmd::t_MapPetData
pet_type	tmpcode/commond.h	/^    BYTE pet_type;					\/\/≥ËŒÔ¿‡–Õ$/;"	m	struct:t_MapPetData
petrify	ScenesServer/zObject.h	/^  WORD petrify; \/\/Áü≥ÂåñÂ¢ûÂä†$/;"	m	class:Equips
petrify	base/Object.h	/^	WORD petrify; \/\/ ØªØ‘ˆº”$/;"	m	struct:t_Object
petrifyRes	base/Command.h	/^  WORD petrifyRes;  \/\/ÊäóÁü≥Âåñ$/;"	m	struct:Cmd::t_HorseData
petrifydef	ScenesServer/zObject.h	/^  WORD petrifydef; \/\/ÊäóÁü≥ÂåñÂ¢ûÂä†$/;"	m	class:Equips
petrifydef	base/Object.h	/^	WORD petrifydef; \/\/øπ ØªØ‘ˆº”$/;"	m	struct:t_Object
petrifyp	ScenesServer/ScenePk.h	/^      SWORD petrifyp;    \/\/ÂáèÂ∞ëÈô∑ÂÖ•Áü≥ÂåñÁä∂ÊÄÅÂá†Áéá20$/;"	m	struct:SkillState::__anon155::__anon156
ph	tmpcode/commond.h	/^		BYTE ph;$/;"	m	struct:stRetFarmInfoUserCmd::stBriefLand
ph	tmpcode/commond.h	/^	BYTE ph;			\/\/À·ºÓ∂»$/;"	m	struct:stLandItem
phAlter	tmpcode/commond.h	/^	DWORD phAlter;		\/\/µ˜∫Õº¡Œ®“ªID$/;"	m	struct:stReqPlantUserCmd
phase	tmpcode/commond.h	/^		BYTE phase;$/;"	m	struct:stRetFarmInfoUserCmd::stBriefLand
phase	tmpcode/commond.h	/^	BYTE phase;			\/\/…˙≥§Ω◊∂Œ$/;"	m	struct:stLandItem
phaseEndTime	ScenesServer/SceneNpcAI.h	/^  zRTime phaseEndTime;$/;"	m	class:NpcAIController
phaseTimeOver	ScenesServer/SceneNpcAI.cpp	/^bool NpcAIController::phaseTimeOver()$/;"	f	class:NpcAIController
phaseVector	ScenesServer/SceneNpcAI.h	/^  std::vector<t_NpcAIDefine> phaseVector;$/;"	m	class:NpcAIController
photoState	base/RecordCommand.h	/^      BYTE photoState[MAX_CHARINFO];$/;"	m	struct:Cmd::Record::t_Ret_SelectInfo_GateRecord
pic	base/zDatabase.h	/^    DWORD  pic;        \/\/ Õº∆¨$/;"	m	struct:zNpcB
picName	tmpcode/commond.h	/^    char picName[MAX_NAMESIZE];$/;"	m	struct:rtPictureHelpUserCmd
picbindloginclearnum	base/Command.h	/^    WORD picbindloginclearnum;$/;"	m	struct:Cmd::SelectUserInfo
picbindloginclearnum	tmpcode/commond.h	/^	WORD picbindloginclearnum;\/\/»˝÷÷––Œ™«Â≥˝µƒº∆ ˝ª˙÷∆:µ«¬ΩÕº–Œ—È÷§,πÛ÷ÿŒÔ∆∑∞Û∂®µÙ¬‰,¬Ù∂´Œ˜$/;"	m	struct:SelectUserInfo
ping_element	base/Command.h	/^  ping_element()$/;"	f	struct:Cmd::ping_element
ping_element	base/Command.h	/^struct ping_element$/;"	s	namespace:Cmd
ping_list	base/Command.h	/^  struct ping_element ping_list;$/;"	m	struct:Cmd::stPingList	typeref:struct:Cmd::stPingList::ping_element
ping_port	FLServer/FLServer.h	/^	WORD ping_port;$/;"	m	class:FLService
pk	ScenesServer/zCard.h	/^    t_CardPK pk;$/;"	m	struct:zCard
pkData	tmpcode/commond.h	/^	LingQiPkData pkData;$/;"	m	struct:LingQiAllData
pkData	tmpcode/commond.h	/^    LingQiPkData pkData; $/;"	m	struct:LingQiWatchData
pkMode	ScenesServer/SceneUser.h	/^    BYTE pkMode;$/;"	m	struct:SceneUser
pkaddition	base/CharBase.h	/^  DWORD pkaddition;        \/\/\/ ÂñÑÊÅ∂ËøΩÂä†ÂÄº$/;"	m	struct:CharBase
pklevel	ScenesServer/Scene.h	/^    DWORD pklevel;$/;"	m	class:Scene
pklevel	ScenesServer/SceneManager.h	/^      DWORD pklevel;$/;"	m	struct:SceneManager::MapInfo
pkmode	base/Command.h	/^  WORD  pkmode;                       \/\/\/ pkÊ®°Âºè$/;"	m	struct:Cmd::t_MainUserData
pkmode	tmpcode/commond.h	/^	WORD  pkmode;                       \/\/\/ pkƒ£ Ω$/;"	m	struct:t_MainUserData
place	tmpcode/commond.h	/^	BYTE place;     \/\/√˚¥Œ $/;"	m	struct:stCompareUserDataInFlowerSortUserCmd
place	tmpcode/commond.h	/^	BYTE place;    \/\/1:π⁄æ¸;2:—«æ¸$/;"	m	struct:stNotifyTop2DragonUserCmd
planTime	base/Command.h	/^  DWORD planTime;$/;"	m	struct:Cmd::stDarePlan
plantState	tmpcode/commond.h	/^    BYTE plantState;	\/\/÷≤ŒÔ◊¥Ã¨$/;"	m	struct:__anon355
plantType	tmpcode/commond.h	/^	DWORD plantType;	\/\/÷÷◊”¿‡–Õ$/;"	m	struct:stReqPlantUserCmd
plantid	tmpcode/commond.h	/^	DWORD plantid;			\/\/◊˜ŒÔID$/;"	m	struct:stLandItem
plantid	tmpcode/commond.h	/^	DWORD plantid;		\/\/÷÷◊”Œ®“ªID$/;"	m	struct:stReqPlantUserCmd
plantid	tmpcode/commond.h	/^	DWORD plantid;          \/\/◊˜ŒÔid$/;"	m	struct:FarmNotice
playState	GatewayServer/GateUser.cpp	/^void GateUser::playState(SceneClient *s,DWORD scene_tempid)$/;"	f	class:GateUser
playerCount	tmpcode/commond.h	/^	WORD playerCount;                   \/\/∏√’À∫≈∂‘”¶µƒœ¬œﬂ∏ˆ ˝$/;"	m	struct:stRet_PromoterRelationUserCmd
playerNums	tmpcode/commond.h	/^	WORD playerNums;        \/\/ÕÊº“∏ˆ ˝,ƒø«∞µ±¥Œ≤ª≥¨π˝10∏ˆ$/;"	m	struct:stReturnScoreListWeekendZhenxuanUserCmd
playerNums	tmpcode/commond.h	/^	WORD playerNums;$/;"	m	struct:stRetPlayerListZhenxuanUserCmd
playerScore	tmpcode/commond.h	/^	PlayerScore playerScore[0];$/;"	m	struct:stReturnScoreListWeekendZhenxuanUserCmd
plevinappend	ScenesServer/ScenePk.h	/^      SWORD plevinappend; \/\/ Èõ∑ÁîµÁ≥ªÊ≥ïÊúØ‰º§ÂÆ≥ÊèêÂçáÊØî‰æãÂçÉÂàÜ‰πãÂá†(Ë¢´Âä®)$/;"	m	struct:SkillState::__anon155::__anon156
pmaxhp	ScenesServer/ScenePk.h	/^      SWORD pmaxhp;    \/\/Ë¢´Âä®ÊèêÂçáÁîüÂëΩÊúÄÂ§ßÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
point	BillServer/BillCallback.h	/^  DWORD  point;                                      \/\/Êâ£Ë¥πÁÇπÊï∞  $/;"	m	struct:BillData
point	BillServer/BillSessionManager.h	/^  DWORD point;                    \/\/\/ Êâ£Ë¥πÁÇπÊï∞$/;"	m	struct:BillSession
point	ScenesServer/WayPoint.h	/^	std::vector<zZone> point;$/;"	m	struct:WayPoint
point	base/BillCommand.h	/^      DWORD point;        \/\/\/ ÈúÄÂÖëÊç¢ÁöÑÁÇπÊï∞$/;"	m	struct:Cmd::Bill::t_Request_Redeem_Gold_Gateway
point	base/Object.h	/^		WORD point; \/\/ ººƒ‹µ„ ˝$/;"	m	struct:t_Object::skillbonus
point	base/Object.h	/^		WORD point; \/\/ ººƒ‹µ„ ˝$/;"	m	struct:t_Object::skillsbonus
point	base/SessionCommand.h	/^      int point; $/;"	m	struct:Cmd::Session::t_ChangeAP
point	base/SessionCommand.h	/^      int point; $/;"	m	struct:Cmd::Session::t_ChangeRP
point	base/UserCommand.h	/^      int        point;                      \/\/ÂÖÖÂÄºÁÇπÊï∞  $/;"	m	struct:Cmd::UserServer::t_cmd_fillin
point	base/UserCommand.h	/^      int        point;                      \/\/Êâ£Ë¥πÁÇπÊï∞  $/;"	m	struct:Cmd::UserServer::t_cmd_mcard
point	base/UserCommand.h	/^      int        point;                    \/\/Êâ£Ë¥πÁÇπÊï∞  $/;"	m	struct:Cmd::UserServer::t_cmd_consume
point	base/UserCommand.h	/^      int     point;$/;"	m	struct:Cmd::UserServer::t_cmd_ret
point	tmpcode/commond.h	/^	DWORD point;$/;"	m	struct:stRPointCard
pointC	ScenesServer/WayPoint.h	/^    WORD pointC;$/;"	m	struct:WayPoint
points	base/CharBase.h	/^  WORD  points;            \/\/\/ Êú™ÂàÜÈÖç‰∫∫Áâ©Â±ûÊÄßÁÇπÊï∞$/;"	m	struct:CharBase
points	base/Command.h	/^  WORD  points;                       \/\/\/ ÁÇπÊï∞$/;"	m	struct:Cmd::t_MainUserData
points	tmpcode/commond.h	/^	WORD  points;                       \/\/\/ µ„ ˝$/;"	m	struct:t_MainUserData
pointsLock	FLServer/UserHttpPub.h	/^	zRWLock pointsLock;$/;"	m	class:UserConfigM
pointsMap	FLServer/UserHttpPub.h	/^	PointMap pointsMap;$/;"	m	class:UserConfigM
poison	ScenesServer/zObject.h	/^  WORD poison; \/\/‰∏≠ÊØíÂ¢ûÂä†$/;"	m	class:Equips
poison	base/Object.h	/^	WORD poison; \/\/÷–∂æ‘ˆº”$/;"	m	struct:t_Object
poisonRes	base/Command.h	/^  WORD poisonRes;    \/\/ÊäóÊØí$/;"	m	struct:Cmd::t_HorseData
poisondef	ScenesServer/zObject.h	/^  WORD poisondef; \/\/ÊäóÊØíÂ¢ûÂä†$/;"	m	class:Equips
poisondef	base/Object.h	/^	WORD poisondef; \/\/øπ∂æ‘ˆº”$/;"	m	struct:t_Object
poisonp	ScenesServer/ScenePk.h	/^      SWORD poisonp;    \/\/ÂáèÂ∞ëÈô∑ÂÖ•‰∏≠ÊØíÁä∂ÊÄÅÂá†Áéá19$/;"	m	struct:SkillState::__anon155::__anon156
poll	tmpcode/commond.h	/^	BYTE poll;			\/\/ ⁄∑€¥Œ ˝ 0:√ª”– ⁄∑€π˝ 1: ⁄∑€π˝“ª¥Œ$/;"	m	struct:stLandItem
pollItem	tmpcode/commond.h	/^	DWORD pollItem;		\/\/ ⁄∑€µ¿æﬂŒ®“ªID$/;"	m	struct:stReqPollUserCmd
pool	base/zTCPTask.h	/^	zTCPTaskPool *pool;                \/**< »ŒŒÒÀ˘ Ùµƒ≥ÿ *\/$/;"	m	class:zTCPTask
pop	tmpcode/commond.h	/^    BYTE pop;\/\/0-≤ª–Ë“™µØ≥ˆ£¨1-±ÿ–ÎµØ≥ˆ$/;"	m	struct:rtKeyStateShenMiUserCmd
popform	tmpcode/commond.h	/^		BYTE  popform;	\/\/ 0 - ≤ªµØ»Œ∫ŒΩÁ√Ê£¨1 - CΩÁ√Ê£¨2 - BΩÁ√Ê$/;"	m	struct:stQuestTipsUserCmd
port	base/BroadCastCommand.h	/^      WORD port;$/;"	m	struct:Cmd::BroadCast::t_LoginCmd
port	base/BroadCommand.h	/^      WORD port;$/;"	m	struct:Cmd::BroadServer::t_Startup_Request
port	base/FLCommand.h	/^      WORD port;$/;"	m	struct:Cmd::FL::t_LoginFL
port	base/RolechangeCommand.h	/^      WORD port;$/;"	m	struct:Cmd::Rolechange::t_LoginCmd
port	base/RoleregCommand.h	/^      WORD port;$/;"	m	struct:Cmd::RoleReg::t_LoginRoleReg
port	base/ServerACL.h	/^	WORD port;$/;"	m	struct:ACLZone
port	base/UserCommand.h	/^	unsigned short port;	    \/\/game super$/;"	m	struct:Cmd::UserServer::t_logon
port	base/zDBConnPool.h	/^	DWORD port;$/;"	m	struct:UrlInfo
port	base/zTCPClient.h	/^	WORD port;              \/**< ∑˛ŒÒ∆˜∂Àø⁄ *\/$/;"	m	class:zTCPClient
port	base/zTCPClientTask.h	/^	const WORD port;            \/**< ∑˛ŒÒ∆˜∂Àø⁄ *\/$/;"	m	class:zTCPClientTask
port	base/zType.h	/^    WORD port;$/;"	m	struct:ZoneData
port	roleRegServer/RoleregCommand.h	/^      WORD port;$/;"	m	struct:Cmd::RoleReg::t_LoginRoleReg
pos	ScenesServer/SceneDefine.h	/^	zPos  pos;                \/\/ÂùêÊ†á$/;"	m	struct:t_NpcDefine
pos	ScenesServer/SceneDefine.h	/^  zPos  pos;                \/\/ÂùêÊ†á$/;"	m	struct:ZoneTypeDef
pos	ScenesServer/SceneNpcAI.h	/^  zPos pos;$/;"	m	struct:t_NpcAIDefine
pos	ScenesServer/SceneUser.cpp	/^	Cmd::stBatchRemoveNpcMapScreenUserCmd *pos;$/;"	m	struct:GetAllRemovePosNpc
pos	ScenesServer/SceneUser.cpp	/^	Cmd::stBatchRemoveUserMapScreenUserCmd *pos;$/;"	m	struct:GetAllRemovePosUser
pos	ScenesServer/WayPoint.h	/^	zPos pos;\/\/ Â∑¶‰∏äËßíÁöÑÁÇπ$/;"	m	struct:zZone
pos	ScenesServer/WayPoint.h	/^	zZone pos;$/;"	m	struct:zPoint
pos	ScenesServer/zObject.h	/^    zPos pos;$/;"	m	struct:DropFromPack::Param
pos	base/Card.h	/^	stObjectLocation pos;	\/\/ Œª÷√$/;"	m	struct:t_Card
pos	base/Command.h	/^  stNpcPosition pos;$/;"	m	struct:Cmd::stRTMagicPosUserCmd
pos	base/GmToolCommand.h	/^      char pos[MAX_NAMESIZE];\/\/Âú∞ÂõæÂêç$/;"	m	struct:Cmd::GmTool::t_Log_GmTool
pos	base/Object.h	/^	stObjectLocation pos;	\/\/ Œª÷√$/;"	m	struct:t_Object
pos	base/Object.h	/^	stObjectLocation pos;	\/\/ Œª÷√$/;"	m	struct:t_Object_mobile
pos	base/SessionCommand.h	/^		CampPos pos[20];				\/\/sky ‰º†ÈÄÅ‰ΩçÁΩÆ$/;"	m	struct:Cmd::Session::t_Sports_ReturnMapID
pos	base/zAStar.h	/^		zPos pos;$/;"	m	struct:zAStar::zPathPoint
pos	base/zSceneEntry.h	/^	zPos pos;$/;"	m	struct:zSceneEntry
pos	tmpcode/commond.h	/^	TransportPos pos;$/;"	m	struct:stUseTransportObjectUserCmd
pos	tmpcode/commond.h	/^    BYTE pos;       \/\/∑≈µΩŒª÷√£¨øÕªß∂À”√µΩ$/;"	m	struct:stHorseMaterialEvolveResultUserCmd
pos	tmpcode/commond.h	/^    BYTE pos;       \/\/∑≈µΩŒª÷√£¨øÕªß∂À”√µΩ$/;"	m	struct:stPushHorseIntoEvolveMaterialUserCmd
posList	tmpcode/commond.h	/^		 } posList[0];$/;"	m	struct:stAddUnsafeRegionDTSUserCmd	typeref:struct:stAddUnsafeRegionDTSUserCmd::__anon309
posX	tmpcode/commond.h	/^		WORD  posX;						 \/*∆ ºµ„*\/	$/;"	m	struct:stAutoBattMapScreenUserCmd
posX	tmpcode/commond.h	/^        WORD posX;$/;"	m	struct:req_ReplyTableMapScreenUserCmd
posX	tmpcode/commond.h	/^        WORD posX;$/;"	m	struct:rtCallTuDiMapScreenUserCmd
posY	tmpcode/commond.h	/^		WORD  posY;		$/;"	m	struct:stAutoBattMapScreenUserCmd
posY	tmpcode/commond.h	/^        WORD posY;$/;"	m	struct:req_ReplyTableMapScreenUserCmd
posY	tmpcode/commond.h	/^        WORD posY;$/;"	m	struct:rtCallTuDiMapScreenUserCmd
pos_x	tmpcode/commond.h	/^                DWORD pos_x;$/;"	m	struct:stCrystalAllInfoDataUserCmd::cryState
pos_y	tmpcode/commond.h	/^                DWORD pos_y;$/;"	m	struct:stCrystalAllInfoDataUserCmd::cryState
posi	base/zSceneEntry.h	/^	zPosI posi;$/;"	m	struct:zSceneEntry
posiEffect	ScenesServer/zSceneEntryIndex.h	/^    PosiEffectMap posiEffect[MAX_NPC_GROUP];$/;"	m	class:zSceneEntryIndex
position	ScenesServer/zCard.cpp	/^int CardSlot::position(WORD x,WORD y) const$/;"	f	class:CardSlot
position	ScenesServer/zObject.cpp	/^int EquipPack::position(WORD x,WORD y) const$/;"	f	class:EquipPack
position	ScenesServer/zObject.cpp	/^int Package::position(WORD x,WORD y) const$/;"	f	class:Package
position	tmpcode/commond.h	/^		BYTE position;$/;"	m	struct:t_RTPositionSkillInfoSept::__anon264
position	tmpcode/commond.h	/^            DWORD position[2];      $/;"	m	struct:stTransCrystalPropertyUserCmd::__anon233
position	tmpcode/commond.h	/^        BYTE position;                  \/\/\/ ±ª…Ë÷√(Ω‚≥˝)µƒ÷∞ŒÒ$/;"	m	struct:stUnionSetPositionCmd
position	tmpcode/commond.h	/^        BYTE position;$/;"	m	struct:OfficialSend
position	tmpcode/commond.h	/^        DWORD position;$/;"	m	struct:OfficialItem
position	tmpcode/commond.h	/^        DWORD position;$/;"	m	struct:stNominateOfficialUserCmd
post	tmpcode/commond.h	/^	DWORD post;             \/\/÷∞ŒÒ$/;"	m	struct:lastPositionTime
posx	tmpcode/commond.h	/^	DWORD posx;     \/\/◊¯±Í  $/;"	m	struct:stRetOccupiedNpcNpcDare
posy	tmpcode/commond.h	/^	DWORD posy;     \/\/◊¯±Í  $/;"	m	struct:stRetOccupiedNpcNpcDare
powerList	tmpcode/commond.h	/^	_powerList powerList[7];$/;"	m	struct:stReturnTmPowerValueList
practise_chanllengeID	SessionServer/HeroCardManager.h	/^    zUniqueID<DWORD>	*practise_chanllengeID;		\/\/PVE ∆’Õ®¡∑œ∞$/;"	m	class:HeroCardManager
preAttackMe	ScenesServer/CardPk.cpp	/^bool zCard::preAttackMe(zCard *pAtt, const Cmd::stCardAttackMagicUserCmd *rev)$/;"	f	class:zCard
preAttackMe	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::preAttackMe(SceneEntryPk *pEntry,const Cmd::stAttackMagicUserCmd *rev,bool physics,const bool good)$/;"	f	class:SceneNpc
preAttackMe	ScenesServer/SceneUser.cpp	/^bool SceneUser::preAttackMe(SceneEntryPk *pUser,const Cmd::stAttackMagicUserCmd *rev,bool physics,const bool good)$/;"	f	class:SceneUser
preg	base/zRegex.h	/^	regex_t preg;$/;"	m	class:zRegex
prepare1	ScenesServer/ChallengeGame.h	/^	bool prepare1;$/;"	m	class:ChallengeGame
prepare2	ScenesServer/ChallengeGame.h	/^	bool prepare2;$/;"	m	class:ChallengeGame
prepareTime	tmpcode/commond.h	/^	WORD     prepareTime;   \/\/»Ù’Ω≥µªπ‘⁄◊º±∏£¨‘Ú±Ì æ’Ω≥µ◊º±∏µƒ ±º‰£ª∑Ò‘ÚŒ™0         $/;"	m	struct:stRetOneTankCmd
prepareTime	tmpcode/commond.h	/^        WORD     prepareTime;   \/\/»Ù’Ω≥µªπ‘⁄◊º±∏£¨‘Ú±Ì æ’Ω≥µ◊º±∏µƒ ±º‰£ª∑Ò‘ÚŒ™0       $/;"	m	struct:stRetTankListCmd::__anon301
preparetime	base/xmlparser/battle.h	/^        xml_prop<DWORD>	preparetime;$/;"	m	struct:BattleConfig::Limit
previous	GatewayServer/CmdChecker.h	/^	void previous(const zRTime& time)$/;"	f	class:CheckInfo
previous	GatewayServer/CmdChecker.h	/^	zRTime& previous()$/;"	f	class:CheckInfo
price	BillServer/StockConsign.h	/^  DWORD price;$/;"	m	struct:ConsignTrait
price	base/Command.h	/^    DWORD price; \/\/Áâ©ÂìÅ‰ª∑Èí±$/;"	m	struct:Cmd::stAddObjectSellListUserCmd::__anon103
price	base/Command.h	/^    DWORD price; \/\/Áâ©ÂìÅ‰ª∑Èí±$/;"	m	struct:Cmd::stRequestAddObjectSellUserCmd::__anon104
price	base/Command.h	/^  DWORD price;        \/\/ Ë∑≥ËΩ¨Ë¥πÁî®$/;"	m	struct:Cmd::t_LandMass
price	base/Command.h	/^  DWORD price; \/\/Áâ©ÂìÅ‰ª∑Èí±$/;"	m	struct:Cmd::stAddObjectSellUserCmd
price	base/Object.h	/^	DWORD price;     \/\/º€∏Ò$/;"	m	struct:t_Object
price	base/xmlparser/market.h	/^            xml_prop<DWORD>	price;$/;"	m	struct:MarketConfig::Obj::Item
price	base/zDatabase.h	/^    DWORD price;$/;"	m	struct:zObjectB
price	tmpcode/commond.h	/^		DWORD   price;          \/\/µ±«∞¬Ùº€$/;"	m	struct:stRetBuyGoodsListBusiness::__anon346
price	tmpcode/commond.h	/^		DWORD   price;          \/\/µ±«∞¬Ùº€$/;"	m	struct:stRetSaleGoodsListBusiness::__anon347
price	tmpcode/commond.h	/^		DWORD price; \/\/ŒÔ∆∑º€«Æ$/;"	m	struct:stAddObjectSellListUserCmd::__anon280
price	tmpcode/commond.h	/^		DWORD price; \/\/ŒÔ∆∑º€«Æ$/;"	m	struct:stRequestAddObjectSellUserCmd::tSellObject
price	tmpcode/commond.h	/^	DWORD price;     \/\/\/ µ•º€$/;"	m	struct:sellList
price	tmpcode/commond.h	/^	DWORD price;    \/\/\/ µ•º€$/;"	m	struct:stBuyUnionMacketObject
price	tmpcode/commond.h	/^	DWORD price;  \/\/≥ˆº€$/;"	m	struct:stReqBuySeptAdCmd
price	tmpcode/commond.h	/^	DWORD price; \/\/ŒÔ∆∑º€«Æ$/;"	m	struct:stAddObjectSellUserCmd
price	tmpcode/commond.h	/^	DWORD price;$/;"	m	struct:stRepairObjectMoneyNpcTradeUserCmd
price	tmpcode/commond.h	/^	DWORD price;$/;"	m	struct:stReqAlterUnionSellPrice
price	tmpcode/commond.h	/^	DWORD price;$/;"	m	struct:stReqNowSeptAdPrice
price	tmpcode/commond.h	/^	DWORD price;$/;"	m	struct:stReqStorageToSell
price	tmpcode/commond.h	/^	DWORD price;\/\/«Î«Ûπ∫¬ÚŒÔ∆∑µƒº€∏Ò,”√”⁄≈–∂œ”Î∑˛ŒÒ∆˜µƒº€∏Ò «∑Ò“ª÷¬$/;"	m	struct:stRequestSellBuyUserCmd
price	tmpcode/commond.h	/^	WORD    price;          \/\/ ¬Ú»Îº€∏Ò$/;"	m	struct:t_PackBusinessData
price	tmpcode/commond.h	/^        DWORD price;  \/\/‘⁄…Ã≥«¬Ú∂´Œ˜ ±,œ˚œ¢÷–¥¯øÕªß∂Àº€∏Ò”√”⁄—È÷§,º€∏Ò≤ª“ª÷¬,≤ªƒ‹π∫¬Ú$/;"	m	struct:stBuyObjectNpcTradeUserCmd
price	tmpcode/commond.h	/^    DWORD price;$/;"	m	struct:stAddListPurchase
price	tmpcode/commond.h	/^    DWORD price;$/;"	m	struct:stSalePurchase
priority	tmpcode/commond.h	/^		BYTE priority;$/;"	m	struct:stRetFarmInfoUserCmd::stBriefLand
priority	tmpcode/commond.h	/^	BYTE priority;			\/\/”≈œ»◊¥Ã¨$/;"	m	struct:stLandItem
priv	ScenesServer/Chat.h	/^  BYTE priv;$/;"	m	struct:Gm
priv	ScenesServer/SceneUser.h	/^    BYTE priv;$/;"	m	struct:SceneUser
priv	base/HeroCardCmd.h	/^	BYTE priv;	\/\/1,◊‘º∫ 2,∂‘∑Ω$/;"	m	struct:Cmd::stRetRefreshBattlePrivilegeUserCmd
privateCardMap	ScenesServer/CardTujianManager.h	/^	std::map<DWORD, BYTE> privateCardMap;		     \/\/baseid<---->num$/;"	m	class:CardTujianData
privateStoreData	tmpcode/commond.h	/^		BYTE privateStoreData[0];\/\/∞⁄ÃØ√˚ ˝æ›$/;"	m	union:stMapDataMapScreenUserCmd::__anon225
privateStoreName	tmpcode/commond.h	/^	char privateStoreName[MAX_NAMESIZE + 1]; \/\/ÃØŒª√˚$/;"	m	struct:stPrivateStoreNameUserCmd
privilegeUser	ScenesServer/ChallengeGame.h	/^	DWORD privilegeUser;	\/\/”–»®œﬁµƒ“ª∑Ω$/;"	m	class:ChallengeGame
pro	tmpcode/commond.h	/^	DWORD pro; \/\/ŒÔ∆∑µƒID$/;"	m	struct:stRetUnionNeedBuildProCmd
pro	tmpcode/commond.h	/^	DWORD pro; \/\/ŒÔ∆∑µƒID$/;"	m	struct:stRetUnionProStateCmd
pro	tmpcode/commond.h	/^	DWORD pro[0];           \/\/µ±«∞ŒÔ∆∑◊¥øˆ$/;"	m	struct:stRetUnionAndProInfo
proID	tmpcode/commond.h	/^	DWORD proID;$/;"	m	struct:stReqProducingUnionProCmd
proID	tmpcode/commond.h	/^	DWORD proID;$/;"	m	struct:stRequestUnionProStateCmd
processAnswerCount	ScenesServer/SceneUser.cpp	/^void SceneUser::processAnswerCount()$/;"	f	class:SceneUser
processChange	GatewayServer/CountryInfo.cpp	/^void CountryInfo::processChange(GateUser *pUser,Cmd::Scene::t_ChangeCountryStatus *rev)$/;"	f	class:CountryInfo
processCheckTime	ScenesServer/SceneUser.h	/^    DWORD processCheckTime;\/\/‰∏ãÊ¨°Ê£ÄÊµãÂ§ñÊåÇÁöÑÊó∂Èó¥$/;"	m	struct:SceneUser
processDeath	ScenesServer/CardPk.cpp	/^bool zCard::processDeath(zCard *pAtt, zCard *pDef)$/;"	f	class:zCard
processDeath	ScenesServer/SceneEntryPk.cpp	/^bool SceneEntryPk::processDeath(SceneEntryPk *pAtt)$/;"	f	class:SceneEntryPk
processDeath	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::processDeath(SceneEntryPk *pAtt)$/;"	f	class:SceneNpc
processDeath	ScenesServer/SceneUser.cpp	/^bool SceneUser::processDeath(SceneEntryPk *pAtt)$/;"	f	class:SceneUser
processDeath	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::processDeath()$/;"	f	class:SkillStatusManager
processMessage	SessionServer/HeroCardManager.cpp	/^bool HeroCardManager::processMessage(Cmd::Session::t_ReqFightMatch_SceneSession *rev)$/;"	f	class:HeroCardManager
processPassiveness	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::processPassiveness()$/;"	f	class:SkillStatusManager
processPhase	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::processPhase()$/;"	f	class:NpcAIController
processSequence	SuperServer/ServerTask.cpp	/^bool ServerTask::processSequence()$/;"	f	class:ServerTask
processTire	ScenesServer/SceneUser.cpp	/^void SceneUser::processTire()$/;"	f	class:SceneUser
processUserMessage	SessionServer/CRelationManager.cpp	/^bool CRelationManager::processUserMessage(const Cmd::stNullUserCmd *pNullCmd,const DWORD cmdLen)$/;"	f	class:CRelationManager
process_extra_add	ScenesServer/zObject.cpp	/^bool EquipPack::process_extra_add(zObject* ob)$/;"	f	class:EquipPack
process_extra_get	ScenesServer/zObject.cpp	/^bool EquipPack::process_extra_get(zObject** ob,WORD x,WORD y)$/;"	f	class:EquipPack
process_extra_remove	ScenesServer/zObject.cpp	/^bool EquipPack::process_extra_remove(zObject* ob)$/;"	f	class:EquipPack
produce	tmpcode/commond.h	/^	DWORD produce;			\/\/≤˙¡ø$/;"	m	struct:stLandItem
produceNum	tmpcode/commond.h	/^	DWORD produceNum;     \/\/Õ≈≤÷ø‚…˙≤˙◊ ‘¥ ˝¡ø$/;"	m	struct:resourceInfo
produceNum	tmpcode/commond.h	/^	DWORD produceNum;\/\/\/ ’˝‘⁄…˙≤˙÷–µƒ ˝¡ø$/;"	m	struct:storageList
productID	tmpcode/commond.h	/^	DWORD productID; \/\/\/ ≤˙∆∑ID$/;"	m	struct:sellList
productID	tmpcode/commond.h	/^	DWORD productID; \/\/\/ ≤˙∆∑ID$/;"	m	struct:storageList
productID	tmpcode/commond.h	/^	DWORD productID;$/;"	m	struct:stReqAlterUnionSellPrice
productID	tmpcode/commond.h	/^	DWORD productID;$/;"	m	struct:stReqSellToStorage
productID	tmpcode/commond.h	/^	DWORD productID;$/;"	m	struct:stReqStorageToSell
productID	tmpcode/commond.h	/^	DWORD productID;$/;"	m	struct:stSetUnionMerchInfo
productStore	tmpcode/commond.h	/^	DWORD productStore;             \/\/\/ ≥…∆∑ø‚¥Ê$/;"	m	struct:resourceRefine
profession	tmpcode/commond.h	/^	WORD profession;		\/\/≥…‘±÷∞“µ$/;"	m	struct:stChangeMemQuestRoomUserCmd
progName	base/Command.h	/^  char progName[64];\/\/Áñë‰ººÂ§ñÊåÇÂêçÁß∞$/;"	m	struct:Cmd::stMsgGmTool
progName	base/GmToolCommand.h	/^      char progName[64];\/\/ÂÆú‰ººÂ§ñÊåÇÂêçÁß∞$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
progress	tmpcode/commond.h	/^	DWORD progress;			\/\/Ω®‘Ï÷–Ω®÷˛µƒÕÍ≥…Ω¯∂»$/;"	m	struct:stRetUnionBuildInfo
progressBarTime	tmpcode/commond.h	/^	DWORD progressBarTime;          \/\/∂¡Ω¯∂»Ãıµƒ ±º‰$/;"	m	struct:stGetItemFromNpcProgressBar
progressBarTime	tmpcode/commond.h	/^	DWORD progressBarTime;$/;"	m	struct:stNotifyCityDareLadderUserCmd
progressBarTime	tmpcode/commond.h	/^        DWORD progressBarTime;          \/\/Ω¯∂»ÃıÕÍ≥…µƒ ±º‰$/;"	m	struct:stGetItemProgressBarSecond
progressBarTime	tmpcode/commond.h	/^        DWORD progressBarTime;          \/\/Ω¯∂»ÃıÕÍ≥…µƒ ±º‰$/;"	m	struct:stGetItemProgressBarThird
prop	base/xml/xml_parser_generator.h	/^	xml_prop<std::string> prop;$/;"	m	class:xml_prop_parser_generator
prop2value	base/xml/xml_prop2value.h	/^	inline T prop2value(const std::string& prop)$/;"	f	namespace:detail
prop_parser_generator_cont	base/xml/xml_parser_generator.h	/^	typedef std::vector<xml_prop_parser_generator*> prop_parser_generator_cont;$/;"	t	class:xml_node_parser_generator
properties	base/zProperties.h	/^	property_hashtype properties;      \/**< ±£¥Ê Ù–‘µƒº¸÷µ∂‘ *\/$/;"	m	class:zProperties
property_hashtype	base/zProperties.h	/^	typedef __gnu_cxx::hash_map<std::string, std::string, key_hash, key_equal> property_hashtype;$/;"	t	class:zProperties
protectPeriod	ScenesServer/ScenePk.h	/^  static const int protectPeriod = 10 * 1000;$/;"	m	struct:ScenePkState
protectTime	ScenesServer/zObject.h	/^  zRTime protectTime;$/;"	m	struct:zSceneObject
protectUpAtt	ScenesServer/ScenePk.h	/^      SWORD protectUpAtt; \/\/‰øùÊä§Áä∂ÊÄÅ‰πãÊîªÂáªÁøªÂÄç$/;"	m	struct:SkillState::__anon155::__anon156
protect_time	ScenesServer/ScenePk.h	/^  DWORD protect_time;$/;"	m	struct:ScenePkState
protectdam	ScenesServer/ScenePk.h	/^      SWORD protectdam; \/\/‰øùÊä§Áä∂ÊÄÅ‰πã‰º§ÂÆ≥$/;"	m	struct:SkillState::__anon155::__anon156
protion	tmpcode/commond.h	/^    BYTE protion;$/;"	m	struct:stWeekSalaryOperationUnionCmd
province	tmpcode/commond.h	/^        BYTE    province;       \/\/ °    $/;"	m	struct:stNameCard
ps	tmpcode/commond.h	/^         PlayerScoreSortItem ps[0];      \/\/ √ø∏ˆ’Ω∂∑»À‘±–≈œ¢$/;"	m	struct:stShowScoreSeptBattleUserCmd
psi	base/Command.h	/^    stNpcTempID psi[0];$/;"	m	struct:Cmd::stAllMapScreenUserCmd
psstReqAllCardTujianDataUserCmd	ScenesServer/SceneTask.cpp	/^bool SceneTask::psstReqAllCardTujianDataUserCmd(SceneUser *pUser, const Cmd::t_NullCmd *pNullCmd, const DWORD cmdLen)$/;"	f	class:SceneTask
pstr	tmpcode/commond.h	/^	char pstr[128];$/;"	m	struct:stReqJoinSeptBattleUserCmd
pstrChat	base/Command.h	/^    char pstrChat[MAX_CHATINFO];$/;"	m	struct:Cmd::stKokChatUserCmd
pstrChat	base/Command.h	/^  char pstrChat[MAX_CHATINFO];$/;"	m	struct:Cmd::stChannelChatUserCmd
pstrChat	tmpcode/commond.h	/^         char pstrChat[MAX_CHATINFO];    \/**< ∂‘ª∞*\/$/;"	m	struct:stKokChatUserCmd
pstrCityName	base/Command.h	/^    char pstrCityName[MAX_NAMESIZE];  \/**< ÂüéÂ∏ÇÂêçÁß∞ *\/$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
pstrCityName	tmpcode/commond.h	/^		char pstrCityName[MAX_NAMESIZE];	\/**< ≥« –√˚≥∆ *\/$/;"	m	struct:stClientNewMap
pstrCountryName	base/Command.h	/^    char pstrCountryName[MAX_NAMESIZE];  \/**< ÂõΩÂÆ∂ÂêçÁß∞ *\/$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
pstrCountryName	tmpcode/commond.h	/^		char pstrCountryName[MAX_NAMESIZE];	\/**< π˙º“√˚≥∆ *\/$/;"	m	struct:stClientNewMap
pstrFilename	base/Command.h	/^    char pstrFilename[MAX_NAMESIZE];  \/**< Êñá‰ª∂ÂêçÁß∞ *\/$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
pstrFilename	tmpcode/commond.h	/^		char pstrFilename[MAX_NAMESIZE];	\/**< Œƒº˛√˚≥∆ *\/$/;"	m	struct:stClientNewMap
pstrGroupName	base/Command.h	/^    char pstrGroupName[MAX_NAMESIZE];  \/**< ÊúçÂä°Âô®ÁªÑÂêçÁß∞ *\/$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
pstrGroupName	tmpcode/commond.h	/^		char pstrGroupName[MAX_NAMESIZE];	\/**< ∑˛ŒÒ∆˜◊È√˚≥∆ *\/$/;"	m	struct:stClientNewMap
pstrIP	FLServer/GYListManager.h	/^	char pstrIP[MAX_IP_LENGTH];  \/**< ÊúçÂä°Âô®Âú∞ÂùÄ *\/$/;"	m	struct:GYList
pstrIP	Robot/Client.h	/^	char pstrIP[MAX_IP_LENGTH];$/;"	m	class:Client
pstrIP	Robot/LoginClient.h	/^    char pstrIP[MAX_IP_LENGTH];$/;"	m	class:LoginClient
pstrIP	SuperServer/ServerTask.h	/^    char pstrIP[MAX_IP_LENGTH];      \/**< ∑˛ŒÒ∆˜ƒ⁄Õ¯µÿ÷∑ *\/$/;"	m	class:ServerTask
pstrIP	SuperServer/SuperServer.h	/^    char pstrIP[MAX_IP_LENGTH];      \/**< ∑˛ŒÒ∆˜ƒ⁄Õ¯µÿ÷∑ *\/$/;"	m	class:SuperService
pstrIP	base/Command.h	/^    unsigned char pstrIP[MAX_IP_LENGTH];$/;"	m	struct:Cmd::stReturnClientIP
pstrIP	base/Command.h	/^  char pstrIP[MAX_IP_LENGTH];$/;"	m	struct:Cmd::stServerReturnLoginSuccessCmd
pstrIP	base/FLCommand.h	/^      char pstrIP[MAX_IP_LENGTH];  \/**< ÊúçÂä°Âô®Âú∞ÂùÄ *\/$/;"	m	struct:Cmd::FL::t_GYList_FL
pstrIP	base/SuperCommand.h	/^      char pstrIP[MAX_IP_LENGTH];  \/**< ÊúçÂä°Âô®Âú∞ÂùÄ *\/$/;"	m	struct:Cmd::Super::t_GYList_Gateway
pstrIP	base/SuperCommand.h	/^      char pstrIP[MAX_IP_LENGTH];$/;"	m	struct:Cmd::Super::ServerEntry
pstrIP	base/SuperCommand.h	/^      char pstrIP[MAX_IP_LENGTH];$/;"	m	struct:Cmd::Super::t_Startup_Request
pstrIP	base/SuperCommand.h	/^      char pstrIP[MAX_IP_LENGTH];$/;"	m	struct:Cmd::Super::t_Startup_Response
pstrIP	base/zSubNetService.h	/^	char pstrIP[MAX_IP_LENGTH];      \/**< ÊúçÂä°Âô®ÂÜÖÁΩëÂú∞ÂùÄ *\/$/;"	m	class:zSubNetService
pstrIP	base/zType.h	/^  char pstrIP[MAX_IP_LENGTH];$/;"	m	struct:t_NewLoginSession
pstrIP	tmpcode/commond.h	/^	char pstrIP[MAX_IP_LENGTH];$/;"	m	struct:stServerReturnLoginSuccessCmd
pstrIP	tmpcode/commond.h	/^	unsigned char pstrIP[MAX_IP_LENGTH];$/;"	m	struct:stReturnClientIP
pstrMapName	base/Command.h	/^    char pstrMapName[MAX_NAMESIZE];  \/**< Â§ßÈôÜÂêçÁß∞ *\/$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
pstrMapName	tmpcode/commond.h	/^		char pstrMapName[MAX_NAMESIZE];	\/**< ¥Û¬Ω√˚≥∆ *\/$/;"	m	struct:stClientNewMap
pstrName	base/Command.h	/^    char pstrName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stKokChatUserCmd
pstrName	base/Command.h	/^  char pstrName[MAX_ACCNAMESIZE];    \/**< Â∏êÂè∑ *\/$/;"	m	struct:Cmd::stPasswdLogonUserCmd
pstrName	base/Command.h	/^  char pstrName[MAX_ACCNAMESIZE];    \/**< Â∏êÂè∑ *\/$/;"	m	struct:Cmd::stUserRefrainLoginCmd
pstrName	base/Command.h	/^  char pstrName[MAX_ACCNAMESIZE];    \/**< Â∏êÂè∑ *\/$/;"	m	struct:Cmd::stUserRequestLoginCmd
pstrName	base/Command.h	/^  char pstrName[MAX_NAMESIZE];    \/**< Âª∫Á≠ëÁâ©ÁöÑÂêçÁß∞ *\/$/;"	m	struct:Cmd::t_MapBuildingData
pstrName	base/Command.h	/^  char pstrName[MAX_NAMESIZE];  \/\/ ÈòüÂëòÂêçÂ≠ó$/;"	m	struct:Cmd::stRemoveTeamMemberUserCmd
pstrName	base/Command.h	/^  char pstrName[MAX_NAMESIZE];  \/\/ ÈòüÂëòÂêçÂ≠ó$/;"	m	struct:Cmd::stTeamMemberData
pstrName	base/Command.h	/^  char pstrName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stChannelChatUserCmd
pstrName	base/Command.h	/^  char pstrName[MAX_NAMESIZE];\/\/ÂõΩÂÆ∂ÂêçÁß∞$/;"	m	struct:Cmd::Country_Info
pstrName	tmpcode/commond.h	/^	char pstrName[MAX_ACCNAMESIZE];		\/**< ’ ∫≈ *\/$/;"	m	struct:stUserRequestLoginCmd
pstrName	tmpcode/commond.h	/^	char pstrName[MAX_ACCNAMESIZE];         \/**< ’ ∫≈ *\/$/;"	m	struct:stPasswdLogonUserCmd
pstrName	tmpcode/commond.h	/^	char pstrName[MAX_ACCNAMESIZE];     \/**< ’ ∫≈ *\/$/;"	m	struct:stUserRequestMtcardCmd
pstrName	tmpcode/commond.h	/^	char pstrName[MAX_NAMESIZE+1];$/;"	m	struct:stRemoveNameSeptGuardCmd
pstrName	tmpcode/commond.h	/^	char pstrName[MAX_NAMESIZE];	\/\/ ∂”‘±√˚◊÷$/;"	m	struct:stRemoveTeamMemberUserCmd
pstrName	tmpcode/commond.h	/^	char pstrName[MAX_NAMESIZE];	\/\/ ∂”‘±√˚◊÷$/;"	m	struct:stTeamMemberData
pstrName	tmpcode/commond.h	/^	char pstrName[MAX_NAMESIZE];\/\/π˙º“√˚≥∆$/;"	m	struct:Country_Info
pstrName	tmpcode/commond.h	/^         char pstrName[MAX_NAMESIZE];    \/**< √˚◊÷*\/$/;"	m	struct:stKokChatUserCmd
pstrName	tmpcode/commond.h	/^    char pstrName[MAX_NAMESIZE+1];$/;"	m	struct:SeptGuardList
pstrPassword	base/Command.h	/^  char pstrPassword[MAX_PASSWORD];$/;"	m	struct:Cmd::stPasswdLogonUserCmd
pstrPassword	base/Command.h	/^  unsigned char pstrPassword[33];  \/**< Áî®Êà∑ÂØÜÁ†Å *\/$/;"	m	struct:Cmd::stUserRequestLoginCmd
pstrPassword	tmpcode/commond.h	/^	char pstrPassword[MAX_PASSWORD];$/;"	m	struct:stPasswdLogonUserCmd
pstrPassword	tmpcode/commond.h	/^	unsigned char pstrPassword[33];		\/**< ”√ªß√‹¬Î *\/$/;"	m	struct:stUserRequestLoginCmd
pstrUserName	base/Command.h	/^  char pstrUserName[MAX_NAMESIZE];  \/**< Âª∫Á≠ëÁâ©ÁöÑÊâÄÊúâËÄÖÂêçÁß∞ *\/$/;"	m	struct:Cmd::t_MapBuildingData
pumdam	ScenesServer/ScenePk.h	/^      SWORD pumdam;    \/\/Ê≥ïÊúØÊîªÂáªÂ¢ûÂä†Âõ∫ÂÆöÊï∞ÂÄºÔºàË¢´Âä®Ôºâ$/;"	m	struct:SkillState::__anon155::__anon156
pumdamp	ScenesServer/ScenePk.h	/^      SWORD pumdamp;    \/\/Ë¢´Âä®ÊèêÂçáÊ≥ïÊúØÊîªÂáªÂäõÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
pumdef	ScenesServer/ScenePk.h	/^      SWORD pumdef;    \/\/Ê≥ïÊúØÈò≤Âæ°Â¢ûÂä†Âõ∫ÂÆöÊï∞ÂÄºÔºàË¢´Âä®Ôºâ$/;"	m	struct:SkillState::__anon155::__anon156
punishTime	base/CharBase.h	/^  DWORD punishTime;      \/\/\/ ÊùÄ‰∫∫Ë¢´ÊäìÁöÑÊó∂Èó¥ÔºåÂàÜÈíü‰∏∫Âçï‰Ωç$/;"	m	struct:CharBase
pupdam	ScenesServer/ScenePk.h	/^      SWORD pupdam;    \/\/Áâ©ÁêÜÊîªÂáªÂ¢ûÂä†Âõ∫ÂÆöÊï∞ÂÄºÔºàË¢´Âä®Ôºâ$/;"	m	struct:SkillState::__anon155::__anon156
pupdef	ScenesServer/ScenePk.h	/^      SWORD pupdef;    \/\/Áâ©ÁêÜÈò≤Âæ°Â¢ûÂä†Âõ∫ÂÆöÊï∞ÂÄºÔºàË¢´Âä®Ôºâ$/;"	m	struct:SkillState::__anon155::__anon156
purchaseID	tmpcode/commond.h	/^    DWORD purchaseID;$/;"	m	struct:stAddListPurchase
purchaseID	tmpcode/commond.h	/^    DWORD purchaseID;\/\/ ˝æ›ø‚÷–∂‘”¶µƒ ’π∫–≈œ¢µƒid$/;"	m	struct:stSurrenderPurchase
purpleFlag	base/Object.h	/^	BYTE purpleFlag;\/\/◊œ◊∞µ»º∂$/;"	m	struct:t_Object
purpleMaxmdamage	base/Object.h	/^	WORD purpleMaxmdamage;  \/\/◊œ◊∞º”≥…◊Ó¥Ûƒßπ•$/;"	m	struct:t_Object
purpleMaxpdamage	base/Object.h	/^	WORD purpleMaxpdamage;  \/\/◊œ◊∞º”≥…◊Ó¥ÛŒÔπ•$/;"	m	struct:t_Object
purpleMdamage	base/Object.h	/^	WORD purpleMdamage;     \/\/◊œ◊∞º”≥…ƒßπ•$/;"	m	struct:t_Object
purpleMdefence	base/Object.h	/^	WORD purpleMdefence;    \/\/◊œ◊∞º”≥…ƒß∑¿$/;"	m	struct:t_Object
purplePdamage	base/Object.h	/^	WORD purplePdamage;     \/\/◊œ◊∞º”≥…ŒÔπ•$/;"	m	struct:t_Object
purplePdefence	base/Object.h	/^	WORD purplePdefence;    \/\/◊œ◊∞º”≥…ŒÔ∑¿$/;"	m	struct:t_Object
purpleValue	base/Object.h	/^	BYTE purpleValue;\/\/◊œ◊∞ ˝÷µ ∞Ÿ∑÷±»$/;"	m	struct:t_Object
push	GatewayServer/GateUserManager.h	/^	bool push(GateUser * &e)$/;"	f	class:GateUserAccountID
push	base/zEntryManager.h	/^	inline bool push(zEntry * &e) { return true; }$/;"	f	class:zEntryNone
push	base/zEntryManager.h	/^	inline bool push(zEntry * &e)$/;"	f	class:zEntryID
push	base/zEntryManager.h	/^	inline bool push(zEntry * &e)$/;"	f	class:zEntryName
push	base/zEntryManager.h	/^	inline bool push(zEntry * &e)$/;"	f	class:zMultiEntryName
push	base/zEntryManager.h	/^	inline bool push(zEntry * e)$/;"	f	class:zEntryTempID
put	FLServer/GYListManager.cpp	/^bool GYListManager::put(const GameZone_t &gameZone,const GYList &gy)$/;"	f	class:GYListManager
put	GatewayServer/LoginSessionManager.cpp	/^void LoginSessionManager::put(const t_NewLoginSession &session)$/;"	f	class:LoginSessionManager
put	base/zMetaData.h	/^	void put(const char* fieldName,const X& value,bool binary = false)$/;"	f	class:DBRecord
put	base/zMisc.h	/^	bool put(const T& t)$/;"	f	class:zCmdCheck
put	base/zMisc.h	/^	bool put(const void *pNullCmd,const DWORD cmdLen)$/;"	f	class:MsgQueue
put	base/zSocket.h	/^	inline void put(const BYTE *buf,const DWORD size)$/;"	f	class:ByteBuffer
put	base/zUniqueID.h	/^	void put(T id)$/;"	f	class:zUniqueID
putGameIDBack	SessionServer/HeroCardManager.cpp	/^bool HeroCardManager::putGameIDBack(BYTE type, DWORD gameID)$/;"	f	class:HeroCardManager
putList	BillServer/BillUser.cpp	/^bool BillUser::putList(DWORD num,DWORD price,BYTE type)$/;"	f	class:BillUser
putOperationToMe	ScenesServer/SkillStatusManager.cpp	/^bool SkillStatusManager::putOperationToMe(const SkillStatusCarrier &carrier,const bool good)$/;"	f	class:SkillStatusManager
putPassivenessOperationToMe	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::putPassivenessOperationToMe(const DWORD skillid,const SkillStatus *pSkillStatus)$/;"	f	class:SkillStatusManager
putQueueToArray	base/zMisc.h	/^	bool putQueueToArray()$/;"	f	class:MsgQueue
putSelectUserInfo	GatewayServer/GateUser.cpp	/^void GateSelectUserSession::putSelectUserInfo(const Cmd::SelectUserInfo &info)$/;"	f	class:GateSelectUserSession
putTwoUserToBattleScene	SessionServer/HeroCardManager.cpp	/^bool HeroCardManager::putTwoUserToBattleScene(UserSession *pUser1, UserSession *pUser2, char* mapName)$/;"	f	class:HeroCardManager
putType	tmpcode/commond.h	/^	BYTE putType;  \/\/≤Ÿ◊˜¿‡–– ≤Œº˚…œ√Ê√∂æŸputType$/;"	m	struct:t_ReqPutSeptNotice
putType	tmpcode/commond.h	/^enum putType     \/\/∑¢≤º≤Ÿ◊˜¿‡–Õ$/;"	g
putUniqeID	BillServer/BillUserManager.cpp	/^void BillUserManager::putUniqeID(const DWORD &tempid)$/;"	f	class:BillUserManager
putUniqeID	GatewayServer/GateUserManager.cpp	/^void GateUserManager::putUniqeID(const DWORD &tempid)$/;"	f	class:GateUserManager
putUniqeID	ScenesServer/Chat.cpp	/^void ChannelM::putUniqeID(const DWORD &tempid)$/;"	f	class:ChannelM
putUniqeID	ScenesServer/SceneManager.cpp	/^void SceneManager::putUniqeID(const DWORD &tempid)$/;"	f	class:SceneManager
putUniqeID	ScenesServer/SceneNpcManager.h	/^    void putUniqeID(const DWORD &tempid) {}$/;"	f	class:SceneNpcManager
putUniqeID	ScenesServer/SceneUserManager.cpp	/^void SceneUserManager::putUniqeID(const DWORD& tempid)$/;"	f	class:SceneUserManager
putUniqeID	ScenesServer/SkillManager.cpp	/^void SkillManager::putUniqeID(const DWORD &tempid)$/;"	f	class:SkillManager
putUniqeID	SessionServer/SessionChat.cpp	/^void SessionChannelManager::putUniqeID(const DWORD &tempid)$/;"	f	class:SessionChannelManager
putUniqeID	SessionServer/SessionManager.cpp	/^void SceneSessionManager::putUniqeID(const DWORD &tempid)$/;"	f	class:SceneSessionManager
putUniqeID	SessionServer/SessionManager.cpp	/^void UserSessionManager::putUniqeID(const DWORD &tempid)$/;"	f	class:UserSessionManager
pwd	tmpcode/commond.h	/^	DWORD pwd;  \/\/ √‹¬Î—È÷§, ªÚ–¬…Ë√‹¬Î(»Ù‘≠¿¥Œﬁ√‹¬Î)$/;"	m	struct:stSetSafetyDetailUserCmd
qqId	tmpcode/commond.h	/^        QWORD   qqId;           \/\/qq∫≈  $/;"	m	struct:stNameCard
quality	base/Command.h	/^  BYTE quality;\/\/1ÊôÆÈÄö,2ËìùËâ≤,3ÈáëËâ≤,5Á•ûÂú£$/;"	m	struct:Cmd::stQueryAuction
quality	base/SessionCommand.h	/^      BYTE quality;$/;"	m	struct:Cmd::Session::auctionInfo
quality	base/SessionCommand.h	/^      BYTE quality;$/;"	m	struct:Cmd::Session::t_queryAuction_SceneSession
quality	base/xmlparser/giftbag.h	/^        xml_node_map<DWORD,Quality>	quality;$/;"	m	struct:GiftBagConfig::Bag
quality	tmpcode/commond.h	/^	BYTE quality;\/\/∆∑÷ $/;"	m	struct:LingQiData
quality	tmpcode/commond.h	/^        BYTE quality;                   \/\/0£¨+1£¨+2°£°£°£°£°£°£+9,$/;"	m	struct:stQueryAuction
qualityBase	tmpcode/commond.h	/^	WORD qualityBase;\/\/∆∑÷ ª˘ ˝$/;"	m	struct:LingQiData
qualityBase	tmpcode/commond.h	/^	WORD qualityBase;\/\/∆∑÷ ª˘ ˝$/;"	m	struct:LingQiSimulate
qualityBase	tmpcode/commond.h	/^    WORD qualityBase;\/\/∆∑÷ ª˘ ˝$/;"	m	struct:LingQiWatchData
qualityOdds	base/xmlparser/giftbag.h	/^            xml_prop<std::string>	qualityOdds;$/;"	m	struct:GiftBagConfig::Gift::Card
queryNewZonePos	ScenesServer/SceneManager.cpp	/^SceneManager::NewZoneVec &SceneManager::queryNewZonePos()$/;"	f	class:SceneManager
queryTime	ScenesServer/SceneUser.h	/^    DWORD queryTime;$/;"	m	struct:SceneUser
queryType	tmpcode/commond.h	/^	BYTE queryType;         \/\/\/ 0Œ™»’≤È—Ø£¨1Œ™÷‹≤È—Ø$/;"	m	struct:stReqUnionSellRecond
queryType	tmpcode/commond.h	/^	BYTE queryType;         \/\/\/ 0Œ™»’≤È—Ø£¨1Œ™÷‹≤È—Ø$/;"	m	struct:stRetUnionSellRecond
queryType	tmpcode/commond.h	/^	BYTE queryType;  \/\/≤È—Ø¿‡–Õ ≤Œº˚…œ√Ê√∂æŸ$/;"	m	struct:t_ReqCountrySeptNotice
query_point	BillServer/BillUser.cpp	/^bool BillUser::query_point(const BillData* bd)$/;"	f	class:BillUser
quest	ScenesServer/QuestTable.cpp	/^const Quest* QuestTable::quest(DWORD id) const$/;"	f	class:QuestTable
quest	tmpcode/commond.h	/^		struct  quest$/;"	s	struct:stRetAllIssuedQuestUserCmd
questCount	tmpcode/commond.h	/^    BYTE questCount;$/;"	m	struct:stRetCityQuestGetList
questCount	tmpcode/commond.h	/^    DWORD questCount;$/;"	m	struct:stRetCityQuestList
questID	base/SessionCommand.h	/^      DWORD questID;$/;"	m	struct:Cmd::Session::t_regUser_SceneSession
questID	tmpcode/commond.h	/^	DWORD questID;  \/\/–Ë“™»ŒŒÒid$/;"	m	struct:ChangeInfo
questID	tmpcode/commond.h	/^	WORD questID;		\/\/∏±±æID$/;"	m	struct:stObserveQuestRoomUserCmd
questID	tmpcode/commond.h	/^	WORD questID;	$/;"	m	struct:stAllRoomQuestRoomUserCmd
questID	tmpcode/commond.h	/^	WORD questID;                           \/\/ªÓ∂ØID$/;"	m	struct:stSendCountryInviteQuestRoomUserCmd
questID	tmpcode/commond.h	/^	WORD questID;$/;"	m	struct:stChangeMemQuestRoomUserCmd
questID	tmpcode/commond.h	/^        DWORD questID;$/;"	m	struct:stPopUpDailDailyQuestUserCmd
questID	tmpcode/commond.h	/^        DWORD questID;$/;"	m	struct:stReqAwardDailyQuestUserCmd
questID	tmpcode/commond.h	/^        DWORD questID;$/;"	m	struct:stRetAwardDailyQuestUserCmd
questID	tmpcode/commond.h	/^    DWORD questID;                          $/;"	m	struct:stResultCheckGoodsCmd
questID	tmpcode/commond.h	/^    DWORD questID;          $/;"	m	struct:stLeaveQuestMapUserCmd
questID	tmpcode/commond.h	/^    DWORD questID;  \/\/µ±«∞»ŒŒÒID$/;"	m	struct:stRequestNpcGoodsCmd
questID	tmpcode/commond.h	/^    DWORD questID;  \/\/»ŒŒÒID$/;"	m	struct:reqGiveGuardGoodsSeptCmd
questID	tmpcode/commond.h	/^    DWORD questID;  \/\/»ŒŒÒID$/;"	m	struct:rtSearchGuardGoodsSeptCmd
questID	tmpcode/commond.h	/^    DWORD questID;$/;"	m	struct:rqTakeCareShenMuCountryCmd
questID	tmpcode/commond.h	/^    DWORD questID;$/;"	m	struct:rtShenMuStateCountryCmd
questID	tmpcode/commond.h	/^    WORD questID;                           \/\/ªÓ∂ØID$/;"	m	struct:LinkInfo
questID	tmpcode/commond.h	/^    WORD questID;                           \/\/ªÓ∂ØID$/;"	m	struct:stInviteQuestRoomUserCmd
questID	tmpcode/commond.h	/^    WORD questID;                   $/;"	m	struct:stJoinQuicklyQuestRoomUserCmd
questID	tmpcode/commond.h	/^    WORD questID;                   \/\/∏±±æID$/;"	m	struct:stCreateQuestRoomUserCmd
questID	tmpcode/commond.h	/^    WORD questID;           \/\/∏±±æID$/;"	m	struct:reqEnterQuestRoomHailUserCmd
questID	tmpcode/commond.h	/^    WORD questID;           \/\/ªÓ∂ØID$/;"	m	struct:stJoinQuestRoomUserCmd
questID	tmpcode/commond.h	/^    WORD questID;           \/\/ªÓ∂ØID$/;"	m	struct:stNotifyLevelFormQuestRoomUserCmd
questID	tmpcode/commond.h	/^    WORD questID;$/;"	m	struct:stNewMasterQuestRoomUserCmd
questID	tmpcode/commond.h	/^    WORD questID;$/;"	m	struct:stOneRoomAllInfoQuestRoomUserCmd
questID	tmpcode/commond.h	/^    WORD questID;$/;"	m	struct:stRoomInfoQuestRoomUserCmd
questID	tmpcode/commond.h	/^    WORD questID;$/;"	m	struct:stRoomMemDetailQuestRoomUserCmd
questInfoList	tmpcode/commond.h	/^        OneQuestInfo questInfoList[0];$/;"	m	struct:stRetAllValidQuestUserCmd
questList	tmpcode/commond.h	/^    stCityQuestInfo questList[0];$/;"	m	struct:stRetCityQuestList
questName	tmpcode/commond.h	/^	char  questName[MAX_NAMESIZE+1];  \/\/–Ë“™µƒ»ŒŒÒ√˚$/;"	m	struct:TitleInfo
questType	tmpcode/commond.h	/^		BYTE  questType;                \/\/»ŒŒÒ¿‡–Õ$/;"	m	struct:stRetDailyRandomQuestUserCmd::quests
questType	tmpcode/commond.h	/^	BYTE questType;  \/\/»ŒŒÒ¿‡–Õ£¨‘≠”–√∞œ’ŒØÕ–»ŒŒÒ∑¢254£¨∆‰À˚µƒŒ™»ŒŒÒ¿‡–Õ$/;"	m	struct:stGetDailyRandomQuestUserCmd
questType	tmpcode/commond.h	/^        BYTE questType;         \/\/»ŒŒÒ¿‡–Õ »ŒŒÒ¿‡–Õ   0:∏ˆ»À»ŒŒÒ  1: º“◊Â»ŒŒÒ 2: ”∂±¯Õ≈»ŒŒÒ 3: π˙º“»ŒŒÒ 4:ªÓ∂Ø»ŒŒÒ$/;"	m	struct:stRetDailyWarningQuestUserCmd::quests
quest_id	ScenesServer/Quest.h	/^  DWORD quest_id() const$/;"	f	class:Vars
quest_id	ScenesServer/QuestEvent.h	/^  DWORD quest_id() const$/;"	f	class:EventTrigger2
quest_id	tmpcode/commond.h	/^			DWORD quest_id;				\/\/»ŒŒÒID$/;"	m	struct:stRetAllIssuedQuestUserCmd::quest
quest_iterator	ScenesServer/Quest.h	/^  typedef QUESTS::iterator quest_iterator;$/;"	t	class:QuestList
quest_iterator	ScenesServer/QuestEvent.h	/^  typedef QUESTS::iterator quest_iterator;$/;"	t	class:Event
quest_iterator	ScenesServer/QuestTable.h	/^  typedef QUESTS::iterator quest_iterator;$/;"	t	class:QuestTable
quest_list	ScenesServer/SceneUser.h	/^    QuestList quest_list;$/;"	m	struct:SceneUser
quest_menu	ScenesServer/Quest.h	/^  typedef MENU::iterator quest_menu;$/;"	t	class:QuestList
questid	tmpcode/commond.h	/^		DWORD questid;                   \/\/»ŒŒÒID$/;"	m	struct:stRetAcceptedDailyQuestUserCmd::acceptedQuests
questid	tmpcode/commond.h	/^        DWORD questid;		\/\/ –¬ ÷Ã· æ ±∏¥”√£¨iTipIndex$/;"	m	struct:stBeginDisplayCartoonUserCmd
questid	tmpcode/commond.h	/^    DWORD questid;$/;"	m	struct:CityQuestInfo
questid	tmpcode/commond.h	/^    DWORD questid;$/;"	m	struct:stCityQuestAutoInfo
questid	tmpcode/commond.h	/^    DWORD questid;$/;"	m	struct:stCityQuestEarnInfo
questid	tmpcode/commond.h	/^    DWORD questid;$/;"	m	struct:stCityQuestGetInfo
questid	tmpcode/commond.h	/^    DWORD questid;$/;"	m	struct:stNotifySuccessPutCityQuest
questid	tmpcode/commond.h	/^    DWORD questid;$/;"	m	struct:stReqPutCityQuest
questid	tmpcode/commond.h	/^    DWORD questid;$/;"	m	struct:stReqSurePutCityQuest
questid	tmpcode/commond.h	/^    DWORD questid;$/;"	m	struct:stRetPutCityQuest
questionNO	tmpcode/commond.h	/^		WORD questionNO;	\/\/Œ Ã‚±‡∫≈$/;"	m	struct:stSurveyResultUserCmd::__anon315
quests	tmpcode/commond.h	/^	struct quests {$/;"	s	struct:stRetDailyRandomQuestUserCmd
quests	tmpcode/commond.h	/^    struct quests$/;"	s	struct:stRetDailyWarningQuestUserCmd
queueCmd	base/zMisc.h	/^	std::queue<CmdPair> queueCmd;$/;"	m	class:MsgQueue
queueRead	base/zMisc.h	/^	DWORD queueRead;$/;"	m	class:MsgQueue
queueWrite	base/zMisc.h	/^	DWORD queueWrite;$/;"	m	class:MsgQueue
quiz	GatewayServer/GateUser.h	/^	bool quiz;$/;"	m	class:GateUser
quiz	ScenesServer/TimeTick.h	/^    bool quiz;$/;"	m	class:SceneTimeTick
quizState	GatewayServer/GateUser.h	/^	void quizState()$/;"	f	class:GateUser
quiz_active_time	SessionServer/SessionServer.cpp	/^DWORD quiz_active_time = 0;$/;"	v
quiz_ready_time	SessionServer/SessionServer.cpp	/^DWORD quiz_ready_time = 0;$/;"	v
qwBrick	base/SessionCommand.h	/^      QWORD qwBrick;$/;"	m	struct:Cmd::Session::t_sendUserRelationID
qwDstThisID	base/Command.h	/^    DWORD qwDstThisID;      \/**< ÁõÆÊ†áÁâ©ÂìÅÂîØ‰∏ÄID *\/$/;"	m	struct:Cmd::stUnionObjectPropertyUserCmd
qwExp	SessionServer/Session.h	/^    QWORD qwExp;$/;"	m	class:UserSession
qwExp	base/Command.h	/^  QWORD qwExp;                         \/\/ Â∏Æ‰ºöÁªèÈ™å$/;"	m	struct:Cmd::stUnionBaseInfoCmd
qwExp	base/SessionCommand.h	/^      QWORD qwExp;$/;"	m	struct:Cmd::Session::t_levelupNotify_SceneSession
qwExp	base/SessionCommand.h	/^      QWORD qwExp;$/;"	m	struct:Cmd::Session::t_regUserSuccess_SceneSession
qwExp	base/Union.h	/^  QWORD    qwExp;                       \/\/ Â∏Æ‰ºöÁªèÈ™å$/;"	m	struct:UnionDef::stUnionInfo
qwExp	tmpcode/commond.h	/^	QWORD qwExp;                         \/\/ ”∂±¯Õ≈æ≠—È$/;"	m	struct:stUnionBaseInfoCmd
qwGameTime	GatewayServer/GatewayTask.h	/^	QWORD qwGameTime;$/;"	m	class:GatewayTask
qwGameTime	Robot/Client.h	/^    QWORD qwGameTime;$/;"	m	struct:ClientBase
qwGameTime	base/BroadCommand.h	/^      QWORD qwGameTime;$/;"	m	struct:Cmd::BroadServer::t_GameTime
qwGameTime	base/Command.h	/^  QWORD qwGameTime;      \/**< Ê∏∏ÊàèÊó∂Èó¥ *\/$/;"	m	struct:Cmd::stGameTimeTimerUserCmd
qwGameTime	base/Command.h	/^  QWORD qwGameTime;      \/**< Áî®Êà∑Ê∏∏ÊàèÊó∂Èó¥ *\/$/;"	m	struct:Cmd::stUserGameTimeTimerUserCmd
qwGameTime	base/SuperCommand.h	/^      QWORD qwGameTime;$/;"	m	struct:Cmd::Super::t_GameTime
qwGameTime	tmpcode/commond.h	/^	QWORD qwGameTime;			\/**< ”√ªß”Œœ∑ ±º‰ *\/$/;"	m	struct:stUserGameTimeTimerUserCmd
qwGameTime	tmpcode/commond.h	/^	QWORD qwGameTime;			\/**< ”Œœ∑ ±º‰ *\/$/;"	m	struct:stGameTimeTimerUserCmd
qwGold	base/Command.h	/^  QWORD qwGold; $/;"	m	struct:Cmd::stFiskCountryUserCmd
qwHW	tmpcode/commond.h	/^	QWORD qwHW;		\/\/bios$/;"	m	struct:stReqHWInfoDataUserCmd
qwHW1	tmpcode/commond.h	/^	QWORD qwHW1;	\/\/mac$/;"	m	struct:stReqHWInfoDataUserCmd
qwHW2	tmpcode/commond.h	/^	QWORD qwHW2;	\/\/boottime$/;"	m	struct:stReqHWInfoDataUserCmd
qwMaterial	base/Command.h	/^  QWORD qwMaterial; \/\/ Áâ©ËµÑ$/;"	m	struct:Cmd::stFiskCountryUserCmd
qwMaterialID	tmpcode/commond.h	/^	DWORD qwMaterialID; \/\/≤ƒ¡œŒ®“ªid        $/;"	m	struct:stReqBuildMagicForgeObject
qwMaterialID	tmpcode/commond.h	/^	DWORD qwMaterialID; \/\/≤ƒ¡œŒ®“ªid        $/;"	m	struct:stTaskBuildMagicForgeObject
qwMinusExp	tmpcode/commond.h	/^	QWORD qwMinusExp;$/;"	m	struct:stNotifyMinusExpLingQiUserCmd
qwNewThisID	base/Command.h	/^    DWORD qwNewThisID;      \/**< Êñ∞Áâ©ÂìÅÁöÑÂîØ‰∏ÄID *\/$/;"	m	struct:Cmd::stSplitObjectPropertyUserCmd
qwNewThisID	tmpcode/commond.h	/^		DWORD qwNewThisID;			\/**< –¬ŒÔ∆∑µƒŒ®“ªID *\/$/;"	m	struct:stSplitObjectPropertyUserCmd
qwObjectID	tmpcode/commond.h	/^	DWORD qwObjectID;   \/\/ŒÔ∆∑Œ®“ªid$/;"	m	struct:stReqBuildMagicForgeObject
qwObjectID	tmpcode/commond.h	/^	DWORD qwObjectID;   \/\/ŒÔ∆∑Œ®“ªid$/;"	m	struct:stTaskBuildMagicForgeObject
qwObjectID	tmpcode/commond.h	/^	DWORD qwObjectID;$/;"	m	struct:stCreateSeptBySign
qwObjectTempID	base/Command.h	/^  QWORD qwObjectTempID;  \/\/ÁÑ∞ÁÅ´ÈÅìÂÖ∑ID$/;"	m	struct:Cmd::stFireWorkUserCmd
qwSrcThisID	base/Command.h	/^    DWORD qwSrcThisID;      \/**< Ê∫êÁâ©ÂìÅÂîØ‰∏ÄID *\/$/;"	m	struct:Cmd::stUnionObjectPropertyUserCmd
qwStartGameTime	SuperServer/TimeTick.h	/^    QWORD qwStartGameTime;$/;"	m	class:SuperTimeTick
qwStock	base/Command.h	/^  QWORD qwStock;    \/\/ ÂéüÊñô$/;"	m	struct:Cmd::stFiskCountryUserCmd
qwTaxMoney	base/SessionCommand.h	/^      QWORD qwTaxMoney;$/;"	m	struct:Cmd::Session::t_taxAddCountry_SceneSession
qwThisID	base/Card.h	/^	DWORD qwThisID;		    \/\/ŒÔ∆∑Œ®“ªid$/;"	m	struct:t_Card
qwThisID	base/Command.h	/^            DWORD qwThisID; \/\/ ŒÔ∆∑Œ®“ªID$/;"	m	struct:Cmd::stSortObjectPropertyUserCmd::__anon91
qwThisID	base/Command.h	/^    DWORD qwThisID;        \/**< Áâ©ÂìÅÂîØ‰∏ÄID *\/$/;"	m	struct:Cmd::stRefCountObjectPropertyUserCmd
qwThisID	base/Command.h	/^    DWORD qwThisID;        \/**< Áâ©ÂìÅÂîØ‰∏ÄID *\/$/;"	m	struct:Cmd::stRemoveObjectPropertyUserCmd
qwThisID	base/Command.h	/^    DWORD qwThisID;        \/**< Áâ©ÂìÅÂîØ‰∏ÄID *\/$/;"	m	struct:Cmd::stScrollMapPropertyUserCmd
qwThisID	base/Command.h	/^    DWORD qwThisID;        \/**< Áâ©ÂìÅÂîØ‰∏ÄID *\/$/;"	m	struct:Cmd::stSplitObjectPropertyUserCmd
qwThisID	base/Command.h	/^    DWORD qwThisID;        \/**< Áâ©ÂìÅÂîØ‰∏ÄID *\/$/;"	m	struct:Cmd::stSwapObjectPropertyUserCmd
qwThisID	base/Command.h	/^    DWORD qwThisID;        \/**< Áâ©ÂìÅÂîØ‰∏ÄID *\/$/;"	m	struct:Cmd::stUseObjectPropertyUserCmd
qwThisID	base/Command.h	/^    DWORD qwThisID; \/\/Áâ©ÂìÅid$/;"	m	struct:Cmd::stRequestAddObjectSellUserCmd::__anon104
qwThisID	base/Command.h	/^  DWORD qwThisID;        \/**< Áâ©ÂìÅÂîØ‰∏ÄID *\/$/;"	m	struct:Cmd::stSellObjectNpcTradeUserCmd
qwThisID	base/Command.h	/^  QWORD qwThisID;$/;"	m	struct:Cmd::stClearPointLimitPropertyUserCmd
qwThisID	base/HeroCardCmd.h	/^	DWORD qwThisID;		    \/\/ø®≈∆thisID$/;"	m	struct:Cmd::stMoveGameCardUserCmd
qwThisID	base/HeroCardCmd.h	/^	DWORD qwThisID;		    \/\/ø®≈∆thisID$/;"	m	struct:Cmd::stRetMoveGameCardUserCmd
qwThisID	base/Object.h	/^	DWORD qwThisID;   \/\/ŒÔ∆∑Œ®“ªid$/;"	m	struct:t_Object
qwThisID	base/SessionCommand.h	/^      DWORD qwThisID;        \/\/‰ª§Áâåid$/;"	m	struct:Cmd::Session::t_Check_CallTimes_SceneSession
qwThisID	base/SessionCommand.h	/^      DWORD qwThisID;        \/\/‰ª§Áâåid$/;"	m	struct:Cmd::Session::t_Return_CallTimes_SceneSession
qwThisID	tmpcode/commond.h	/^		DWORD qwThisID;				\/**< ŒÔ∆∑Œ®“ªID *\/$/;"	m	struct:stRefCountObjectPropertyUserCmd
qwThisID	tmpcode/commond.h	/^		DWORD qwThisID;				\/**< ŒÔ∆∑Œ®“ªID *\/$/;"	m	struct:stSplitObjectPropertyUserCmd
qwThisID	tmpcode/commond.h	/^		DWORD qwThisID;                 \/**< ŒÔ∆∑Œ®“ªID *\/$/;"	m	struct:stEquipMaskPropertyUserCmd
qwThisID	tmpcode/commond.h	/^		DWORD qwThisID;             \/**< ŒÔ∆∑Œ®“ªID *\/$/;"	m	struct:stSwapObjectPropertyUserCmd
qwThisID	tmpcode/commond.h	/^		DWORD qwThisID; \/\/ŒÔ∆∑id$/;"	m	struct:stRequestAddObjectSellUserCmd::tSellObject
qwThisID	tmpcode/commond.h	/^		DWORD qwThisID;$/;"	m	struct:stReqMapTreasureUserCmd
qwThisID	tmpcode/commond.h	/^	DWORD qwThisID;				\/**< ŒÔ∆∑Œ®“ªID *\/	\/\/µ±dwNumber◊÷∂Œ”––ß ±£¨qwThisID=ŒÔ∆∑µƒOBJID$/;"	m	struct:stUseObjectPropertyUserCmd
qwThisID	tmpcode/commond.h	/^	DWORD qwThisID;				\/**< ŒÔ∆∑Œ®“ªID *\/$/;"	m	struct:stEndDigTreasureUserCmd
qwThisID	tmpcode/commond.h	/^	DWORD qwThisID;				\/**< ŒÔ∆∑Œ®“ªID *\/$/;"	m	struct:stRemoveObjectPropertyUserCmd
qwThisID	tmpcode/commond.h	/^	DWORD qwThisID;				\/**< ŒÔ∆∑Œ®“ªID *\/$/;"	m	struct:stStartDigTreasureUserCmd
qwThisID	tmpcode/commond.h	/^	DWORD qwThisID;                         \/**< ŒÔ∆∑Œ®“ªID *\/$/;"	m	struct:stSellObjectNpcTradeUserCmd
qwThisID	tmpcode/commond.h	/^	DWORD qwThisID;$/;"	m	struct:stSetReqShiKongChuanSongUserCmd
qwThisID	tmpcode/commond.h	/^            DWORD qwThisID; \/\/ ŒÔ∆∑Œ®“ªID$/;"	m	struct:stSortObjectPropertyUserCmd::__anon344
qwThisID	tmpcode/commond.h	/^        DWORD  qwThisID;     \/\/ŒÔ∆∑Œ®“ªID$/;"	m	struct:stSetTimeUserCmd
qwThisID	tmpcode/commond.h	/^        DWORD qwThisID;    \/\/¥˝π‡ƒßµƒ◊∞±∏id$/;"	m	struct:stPushMagicStoveUserCmd
qwThisID	tmpcode/commond.h	/^        DWORD qwThisID;    \/\/¥˝π‡ƒßµƒ◊∞±∏id$/;"	m	struct:stPushPurpleStoveUserCmd
qwThisID	tmpcode/commond.h	/^    DWORD qwThisID;                         \/\/ŒÔ∆∑Œ®“ªID $/;"	m	struct:stTransCrystalPropertyUserCmd
qwThisID	tmpcode/commond.h	/^    DWORD qwThisID;         \/\/ •¡È ØŒ®“ªID$/;"	m	struct:stAddTimeEffectHorseDataCmd
qwThisID	tmpcode/commond.h	/^    DWORD qwThisID;     \/\/◊∞±∏µƒThisID$/;"	m	struct:stRemakePropertyUserCmd
qwThisID	tmpcode/commond.h	/^    DWORD qwThisID;   \/\/≤…ºØ∆æ÷§µƒid$/;"	m	struct:stStartEmployGatherCmd
qwThisID	tmpcode/commond.h	/^    DWORD qwThisID;$/;"	m	struct:suitElement
qwThisID	tmpcode/commond.h	/^    DWORD qwThisID;\/\/¡ÈªÍµ¿æﬂ$/;"	m	struct:stAddHorseSoulPetCmd
qwTime	ScenesServer/SkillStatusManager.h	/^  QWORD qwTime;$/;"	m	struct:SkillStatusElement
rTimestamp	base/BroadCastCommand.h	/^      DWORD rTimestamp;$/;"	m	struct:Cmd::BroadCast::t_BroadcastMessage
rTimestamp	base/SuperCommand.h	/^      QWORD     rTimestamp;              \/\/ËØ∑Ê±ÇÊó∂Èó¥Êà≥$/;"	m	struct:Cmd::Super::t_CountryOnline
rTimestamp	base/SuperCommand.h	/^      QWORD     rTimestamp;              \/\/ËØ∑Ê±ÇÊó∂Èó¥Êà≥$/;"	m	struct:Cmd::Super::t_Request_CountryOnline
race	base/Command.h	/^  WORD race;$/;"	m	struct:Cmd::stCreateSelectUserCmd
race	base/zDatabase.h	/^    DWORD race;		    \/\/÷÷◊Â$/;"	m	struct:CardBase
race	base/zDatabase.h	/^    DWORD race;		    \/\/÷÷◊Â$/;"	m	struct:zCardB
race	tmpcode/commond.h	/^        WORD race;        \/\/ ÷÷◊Â$/;"	m	struct:stCreateSelectUserCmd
radius	ScenesServer/SceneNpcAI.cpp	/^    int radius;$/;"	m	struct:getEntriesCallBack
radius	tmpcode/commond.h	/^		DWORD radius;					\/*ªÓ∂Ø∞Îæ∂*\/	$/;"	m	struct:stAutoBattMapScreenUserCmd
radix	base/zDatabase.h	/^    DWORD radix;$/;"	m	struct:zNpcB
rand	tmpcode/commond.h	/^	BYTE rand;$/;"	m	struct:stAdBroadcastUserCmd
randBetween	base/zMisc.h	/^static int randBetween(int min,int max)$/;"	f	class:zMisc
randPosByRegion	ScenesServer/Scene.cpp	/^bool Scene::randPosByRegion(const zPosIndex &index,zPos &pos) const$/;"	f	class:Scene
randnum	base/Command.h	/^      BYTE randnum[58];$/;"	m	struct:Cmd::stServerReturnLoginSuccessCmd::__anon66::__anon67
randnum	tmpcode/commond.h	/^			BYTE randnum[58];$/;"	m	struct:stServerReturnLoginSuccessCmd::__anon211::__anon212
randomChat	ScenesServer/SceneNpc.cpp	/^void SceneNpc::randomChat(NpcChatType type)$/;"	f	class:SceneNpc
randomDropHand	ScenesServer/CardPk.cpp	/^bool zCard::randomDropHand(DWORD userID, DWORD num)$/;"	f	class:zCard
randomMove	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::randomMove()$/;"	f	class:SceneNpc
randomOneCard	ScenesServer/GiftBagManager.cpp	/^DWORD GiftBagManager::randomOneCard(const DWORD index, const DWORD level)$/;"	f	class:GiftBagManager
randomTask	tmpcode/commond.h	/^		DWORD randomTask;  \/\/—°‘Òµƒ»ŒŒÒID$/;"	m	struct:stRetRapidSelectQuestUserCmd::acceptQuest
randomTask	tmpcode/commond.h	/^	DWORD randomTask[0];	\/\/—°‘Òµƒ»ŒŒÒID$/;"	m	struct:stReqRapidSelectQuestUserCmd
random_key_des	base/EncDec/EncDec.cpp	/^void CEncrypt::random_key_des( DES_cblock *ret)$/;"	f	class:CEncrypt
randzPosByZoneType	ScenesServer/Scene.cpp	/^bool Scene::randzPosByZoneType(const int type,zPos &pos) const$/;"	f	class:Scene
randzPosByZoneType	ScenesServer/Scene.cpp	/^bool Scene::randzPosByZoneType(const int type,zPos &pos,const zPos orign)$/;"	f	class:Scene
randzPosNewZone	ScenesServer/SceneManager.cpp	/^bool SceneManager::randzPosNewZone(Scene *intoScene,zPos &findedPos)$/;"	f	class:SceneManager
randzPosOnRect	ScenesServer/Scene.cpp	/^bool Scene::randzPosOnRect(const zPos &center,zPos &pos,WORD rectx,WORD recty) const$/;"	f	class:Scene
range	base/zDatabase.h	/^	    WORD range;	    \/\/∑∂Œß(◊˜”√∑∂Œß,≤Œº˚√∂æŸ)$/;"	m	struct:SkillStatus::__anon36::__anon37
rangeType	tmpcode/commond.h	/^	BYTE rangeType;            \/\/–˚¥´∑∂Œß¿‡–Õ∫≈$/;"	m	struct:stWatcherExpressWeekendZhenxuanUserCmd
rank	SessionServer/HeroCardManager.h	/^    WORD rank;$/;"	m	struct:stMatchedInfo
rank	base/Command.h	/^  int  rank; \/\/ Áé©ÂÆ∂ÊéíÂêç$/;"	m	struct:Cmd::rank_elem
rank	tmpcode/commond.h	/^		BYTE    rank;                 \/\/≈≈√˚  $/;"	m	struct:stReturnScoreListWeekendZhenxuanUserCmd::PlayerScore
rank	tmpcode/commond.h	/^	WORD rank;             \/\/≈≈√˚  $/;"	m	struct:stRefreshUserInfoWeekendZhenxuanUserCmd
rank	tmpcode/commond.h	/^	WORD rank; \/\/(server->client ±±Ì æ≈≈√˚)$/;"	m	struct:stReqRankZhenxuanUserCmd
rank	tmpcode/commond.h	/^	WORD rank; \/\/≈≈√˚$/;"	m	struct:stReturnScoreListZhenxuanUserCmd
rank	tmpcode/commond.h	/^                BYTE    rank;$/;"	m	struct:stReturnScoreListLuoRiUserCmd::NameAndScore
rankName	tmpcode/commond.h	/^	char rankName[255];   \/\/∏ƒ±‰µƒ–¬√˚◊÷$/;"	m	struct:stSetUnionMemberRankName
rank_elem	base/Command.h	/^struct rank_elem$/;"	s	namespace:Cmd
rank_list	base/Command.h	/^  rank_elem rank_list[21];$/;"	m	struct:Cmd::stQuizPosList
ranking_chanllengeID	SessionServer/HeroCardManager.h	/^    zUniqueID<DWORD>	*ranking_chanllengeID;		\/\/PVP ≈≈√˚∂‘’Ω$/;"	m	class:HeroCardManager
ranks	tmpcode/commond.h	/^		WORD ranks[10];	\/\/8->10$/;"	m	union:stRetRanksChatCmd::__anon246
rate	base/zDatabase.h	/^    int   rate;$/;"	m	struct:CarryObject
rate	base/zDatabase.h	/^    int rate;\/\/\/ π”√º∏¬ $/;"	m	struct:npcSkill
rate	tmpcode/commond.h	/^        BYTE  rate;      \/\/±æ¥Œ»€¡∂µƒ≥…π¶¬ $/;"	m	struct:stStoveDataUserCmd
rate	tmpcode/commond.h	/^        DWORD rate;             \/\/\/ µ±«∞◊∞±∏«øªØµƒƒ¨»œ≥…π¶¬ $/;"	m	struct:stEquipIntensifyConsumeInfo
rate	tmpcode/commond.h	/^    DWORD rate;                             $/;"	m	struct:stCheckExchangeRateTradeUserCmd
rating	base/zDatabase.h	/^    DWORD  rating;        \/\/ √¸÷–¬ $/;"	m	struct:zNpcB
rc5_key_st	base/EncDec/EncDec.h	/^typedef struct rc5_key_st$/;"	s
rc5_key_st	base/EncDec/myrc5.h	/^typedef struct rc5_key_st$/;"	s
rcvTimePet	ScenesServer/SceneNpc.h	/^  zRTime rcvTimePet;\/\/ÂÆ†Áâ©‰ºëÊÅØ$/;"	m	class:SceneNpc
rcvTimeRest	ScenesServer/SceneNpc.h	/^  zRTime rcvTimeRest;\/\/ËÑ±Á¶ªÊàòÊñó$/;"	m	class:SceneNpc
rcvTimeUnder30	ScenesServer/SceneNpc.h	/^  zRTime rcvTimeUnder30;\/\/hp30‰ª•‰∏ã$/;"	m	class:SceneNpc
rd_buf	base/zSocket.h	/^	inline BYTE *rd_buf()$/;"	f	class:ByteBuffer
rd_count	base/zRWLock.h	/^	unsigned int rd_count;$/;"	m	class:zRWLock
rd_flip	base/zSocket.h	/^	inline void rd_flip(DWORD size)$/;"	f	class:ByteBuffer
rd_msec	base/zSocket.h	/^	int rd_msec;                \/**< ∂¡»°≥¨ ±£¨∫¡√Î *\/$/;"	m	class:zSocket
rd_ready	base/zSocket.h	/^	inline bool rd_ready()$/;"	f	class:ByteBuffer
rd_size	base/zSocket.h	/^	inline DWORD rd_size()$/;"	f	class:ByteBuffer
rdam	ScenesServer/zObject.h	/^      BYTE rdam; \/\/‰º§ÂÆ≥ÂèçÂ∞Ñ%x$/;"	m	struct:Equips::__anon174::__anon175
rdam	base/Object.h	/^			WORD rdam; \/\/…À∫¶∑¥…‰x%%$/;"	m	struct:t_Object::__anon59::__anon60
rdamage_s4000	base/Card.h	/^    BYTE rdamage_s4000;$/;"	m	struct:t_CardPK
rdamage_s4001	base/Card.h	/^    BYTE rdamage_s4001;$/;"	m	struct:t_CardPK
rdamage_s4002	base/Card.h	/^    BYTE rdamage_s4002;$/;"	m	struct:t_CardPK
rdamage_s4003	base/Card.h	/^    BYTE rdamage_s4003;$/;"	m	struct:t_CardPK
rdlock	base/zRWLock.h	/^	inline void rdlock()$/;"	f	class:zRWLock
reSendData	ScenesServer/SceneEntryPk.h	/^    bool reSendData;  \/\/\/ ÈáçÊñ∞ÂèëÈÄÅNPCÊàñËßíËâ≤Êï∞ÊçÆÁªôËá™Â∑±$/;"	m	struct:SceneEntryPk
reSendMyMapData	ScenesServer/SceneNpc.cpp	/^void SceneNpc::reSendMyMapData()$/;"	f	class:SceneNpc
reSendMyMapData	ScenesServer/SceneUser.cpp	/^void SceneUser::reSendMyMapData()$/;"	f	class:SceneUser
reSendOther	ScenesServer/SceneEntryPk.h	/^    bool reSendOther;  \/\/\/ ÈáçÊñ∞ÂèëÈÄÅNPCÊàñËßíËâ≤Êï∞ÊçÆÁªôÂÖ∂ÂÆÉ‰∫∫$/;"	m	struct:SceneEntryPk
reached	ScenesServer/SceneNpcAI.h	/^  bool reached;$/;"	m	class:NpcAIController
readCharBase	RecordServer/RecordTask.cpp	/^bool RecordTask::readCharBase(const Cmd::Record::t_ReadUser_SceneRecord *rev)$/;"	f	class:RecordTask
readCharTest	RecordServer/RecordTask.cpp	/^bool RecordTask::readCharTest(Cmd::Record::t_Read_CharTest_SceneRecord *rev)$/;"	f	class:RecordTask
readCharTest	ScenesServer/SceneUser.cpp	/^void SceneUser::readCharTest(Cmd::Record::t_Read_CharTest_SceneRecord *rev)$/;"	f	class:SceneUser
readTempArchive	SessionServer/TempArchive.cpp	/^bool GlobalTempArchiveIndex::readTempArchive(DWORD id,char *out,DWORD &outSize)$/;"	f	class:GlobalTempArchiveIndex
readTime	SuperServer/TimeTick.cpp	/^bool SuperTimeTick::readTime()$/;"	f	class:SuperTimeTick
readyTime	tmpcode/commond.h	/^    QWORD   readyTime;              \/\/’Ω≥µø…“‘¡Ï»°µƒ ±º‰£¨¥Û”⁄∏√ ±º‰’Ω≥µº¥ø…¡Ï»°$/;"	m	struct:TankData
ready_time	base/SessionCommand.h	/^      DWORD ready_time;    \/\/ ÂØπÊàòÂâçÁöÑÁ≠âÂæÖÊó∂Èó¥$/;"	m	struct:Cmd::Session::t_createDare_SceneSession
ready_time	base/SessionCommand.h	/^      DWORD ready_time;$/;"	m	struct:Cmd::Session::t_createQuiz_SceneSession
realName	tmpcode/commond.h	/^	char realName[MAX_NAMESIZE];	\/\/≥ËŒÔµƒ’Ê’˝√˚◊÷$/;"	m	struct:t_MapPetData
realname	base/Command.h	/^  char realname[MAX_NAMESIZE]; \/\/npcÁöÑÂêçÁß∞$/;"	m	struct:Cmd::t_MapPetData
reason	base/GmToolCommand.h	/^      char reason[128];$/;"	m	struct:Cmd::GmTool::t_Punish_GmTool
reason	base/SessionCommand.h	/^      char reason[128];$/;"	m	struct:Cmd::Session::t_forbidTalk_SceneSession
recalHeroDamage	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::recalHeroDamage(DWORD userID)$/;"	f	class:ChallengeGame
recalMagicAddDam	ScenesServer/ChallengeGame.cpp	/^DWORD ChallengeGame::recalMagicAddDam(DWORD userID)$/;"	f	class:ChallengeGame
recast	base/zDatabase.h	/^    BYTE recast;$/;"	m	struct:zObjectB
recastcost	base/zDatabase.h	/^    WORD recastcost;$/;"	m	struct:zObjectB
recastlevel	base/zDatabase.h	/^    BYTE recastlevel;$/;"	m	struct:zObjectB
recentmsg	ScenesServer/script_func.cpp	/^RecentMsg recentmsg[20];$/;"	v
recommendTaskUserCmd	tmpcode/commond.h	/^        recommendTaskUserCmd()$/;"	f	struct:recommendTaskUserCmd
recommendTaskUserCmd	tmpcode/commond.h	/^struct recommendTaskUserCmd : public stQuestUserCmd$/;"	s
record	ScenesServer/zCard.h	/^    TombSlot record;	\/\/ƒπµÿ$/;"	m	class:CardSlots
recordClient	GatewayServer/RecordClient.cpp	/^RecordClient *recordClient = NULL;$/;"	v
recordClient	ScenesServer/RecordClient.cpp	/^RecordClient *recordClient = NULL;$/;"	v
recordClient	SessionServer/RecordClient.cpp	/^RecordClient *recordClient = NULL;$/;"	v
recordSet	base/zMetaData.h	/^	std::vector<DBRecord*>    recordSet;$/;"	m	class:DBRecordSet
recover	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::recover()$/;"	f	class:SceneNpc
recover	base/zDatabase.h	/^    npcRecover recover;$/;"	m	struct:zNpcB
recoverUnder30	ScenesServer/SceneNpc.h	/^  bool recoverUnder30;$/;"	m	class:SceneNpc
recvGold	base/Command.h	/^  DWORD recvGold;$/;"	m	struct:Cmd::stContentMail
recvGold	base/Command.h	/^  DWORD recvGold;$/;"	m	struct:Cmd::stSendMail
recvGold	base/SessionCommand.h	/^      DWORD recvGold;$/;"	m	struct:Cmd::Session::mailInfo
recvGold	base/SessionCommand.h	/^      DWORD recvGold;$/;"	m	struct:Cmd::Session::t_getMailItemReturn_SceneSession
recvGold	tmpcode/commond.h	/^    DWORD recvGold;$/;"	m	struct:stContentMail
recvGold	tmpcode/commond.h	/^    DWORD recvGold;$/;"	m	struct:stSendMail
recvMoney	base/Command.h	/^  DWORD recvMoney;$/;"	m	struct:Cmd::stContentMail
recvMoney	base/Command.h	/^  DWORD recvMoney;$/;"	m	struct:Cmd::stSendMail
recvMoney	base/SessionCommand.h	/^      DWORD recvMoney;$/;"	m	struct:Cmd::Session::mailInfo
recvMoney	base/SessionCommand.h	/^      DWORD recvMoney;$/;"	m	struct:Cmd::Session::t_getMailItemReturn_SceneSession
recvMoney	tmpcode/commond.h	/^    DWORD recvMoney;$/;"	m	struct:stContentMail
recvMoney	tmpcode/commond.h	/^    DWORD recvMoney;$/;"	m	struct:stSendMail
recvTempID	tmpcode/commond.h	/^	DWORD recvTempID[0];$/;"	m	struct:stClearFlowerEffectNine
recvTempID	tmpcode/commond.h	/^	DWORD recvTempID[0];$/;"	m	struct:stSendFlowerEffectNineCmd
recycle	base/zTCPClientTask.h	/^		recycle    =  3              \/**< ¡¨Ω”ÕÀ≥ˆ◊¥Ã¨ *\/$/;"	e	enum:zTCPClientTask::ConnState
recycle	base/zTCPTask.h	/^		recycle    =  4              \/**< ¡¨Ω”ÕÀ≥ˆ◊¥Ã¨£¨ªÿ ’ *\/$/;"	e	enum:zTCPTask::zTCPTask_State
recycleConn	BillServer/BillTask.cpp	/^int BillTask::recycleConn()$/;"	f	class:BillTask
recycleConn	FLServer/LoginTask.cpp	/^int LoginTask::recycleConn()$/;"	f	class:LoginTask
recycleConn	GatewayServer/GatewayTask.cpp	/^int GatewayTask::recycleConn()$/;"	f	class:GatewayTask
recycleConn	RecordServer/RecordTask.cpp	/^int RecordTask::recycleConn()$/;"	f	class:RecordTask
recycleConn	ScenesServer/SceneTask.cpp	/^int SceneTask::recycleConn()$/;"	f	class:SceneTask
recycleConn	SessionServer/SessionTask.cpp	/^int SessionTask::recycleConn()$/;"	f	class:SessionTask
recycleConn	SuperServer/ServerTask.cpp	/^int ServerTask::recycleConn()$/;"	f	class:ServerTask
recycleConn	base/zTCPClientTask.h	/^	virtual void recycleConn() {};$/;"	f	class:zTCPClientTask
recycleConn	base/zTCPTask.h	/^	virtual int recycleConn()$/;"	f	class:zTCPTask
recycleThread	base/zTCPTaskPool.h	/^	zRecycleThread *recycleThread;              \/**< ¡¨Ω”ªÿ ’œﬂ≥Ã *\/$/;"	m	class:zTCPTaskPool
recycle_delay	ScenesServer/SceneUser.h	/^    zRTime recycle_delay;$/;"	m	struct:SceneUser
recycle_state	BillServer/BillTask.h	/^    int recycle_state;$/;"	m	class:BillTask
recycle_state	ScenesServer/SceneTask.h	/^    int recycle_state;$/;"	m	class:SceneTask
recycle_state	SessionServer/SessionTask.h	/^    int recycle_state;$/;"	m	class:SessionTask
recycle_wait	GatewayServer/GatewayTask.h	/^	DWORD recycle_wait;$/;"	m	class:GatewayTask
redeem_gold	BillServer/BillUser.cpp	/^bool BillUser::redeem_gold(const BillData* bd)$/;"	f	class:BillUser
redeem_gold_err	BillServer/BillUser.cpp	/^bool BillUser::redeem_gold_err(const BillData* bd)$/;"	f	class:BillUser
redeem_moth_card	BillServer/BillUser.cpp	/^bool BillUser::redeem_moth_card(const BillData* bd)$/;"	f	class:BillUser
redeem_object_card	BillServer/BillUser.cpp	/^bool BillUser::redeem_object_card(const BillData* bd)$/;"	f	class:BillUser
redeem_object_card_err	BillServer/BillUser.cpp	/^bool BillUser::redeem_object_card_err(const BillData* bd)$/;"	f	class:BillUser
reduce	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::reduce(const DWORD &object,const BYTE num)$/;"	f	class:SceneNpc
reduce	ScenesServer/SceneUser.cpp	/^bool SceneUser::reduce(const DWORD &object,const BYTE num)$/;"	f	class:SceneUser
reduceDur	ScenesServer/zObject.cpp	/^bool EquipPack::reduceDur(SceneUser *pThis,DWORD which)$/;"	f	class:EquipPack
reduceDur	ScenesServer/zObject.cpp	/^int EquipPack::reduceDur(SceneUser *pThis,DWORD which,DWORD type,DWORD num,bool needFresh,bool needCal)$/;"	f	class:EquipPack
reduceExp	tmpcode/commond.h	/^	QWORD reduceExp; \/\/»⁄∫œ¡È∆˜ ±±£¥Ê±ªæ≠—È∏∫÷µ≤ø∑÷$/;"	m	struct:LingQiData
reduceGoodness	ScenesServer/ScenePk.cpp	/^void SceneUser::reduceGoodness(SceneNpc *pNpc)$/;"	f	class:SceneUser
reduceHP	ScenesServer/SceneNpc.cpp	/^void SceneNpc::reduceHP(SceneUser *pAtt,DWORD wdHP)$/;"	f	class:SceneNpc
reduceObjectNum	ScenesServer/CardManager.cpp	/^int GameCardM::reduceObjectNum(SceneUser* user,DWORD id,DWORD number,zCard*& update_ob,ObjID_vec& del_obs,BYTE upgrade)$/;"	f	class:GameCardM
reduceObjectNum	ScenesServer/ObjectManager.cpp	/^int UserObjectM::reduceObjectNum(SceneUser* user,DWORD id,DWORD number,zObject*& update_ob,ObjID_vec& del_obs,BYTE upgrade)$/;"	f	class:UserObjectM
reduceObjectNum	ScenesServer/SceneUser.cpp	/^int SceneUser::reduceObjectNum(DWORD id,DWORD num,BYTE upgrade)$/;"	f	class:SceneUser
reduceTime	tmpcode/commond.h	/^	DWORD reduceTime;$/;"	m	struct:stRetPollInfoUserCmd
reduce_akdodge	ScenesServer/ScenePk.h	/^      SWORD reduce_akdodge;  \/\/ Èó™ÈÅøÁéá‰∏ãÈôç$/;"	m	struct:SkillState::__anon155::__anon156
reduce_atrating	ScenesServer/ScenePk.h	/^      SWORD reduce_atrating;  \/\/ ÂëΩ‰∏≠ÁéáÂáèÂ∞ë ZJWÂä†ÂÖ•$/;"	m	struct:SkillState::__anon155::__anon156
reel	ScenesServer/zObject.h	/^  WORD reel; \/\/Áú©ÊôïÂ¢ûÂä†$/;"	m	class:Equips
reel	base/Object.h	/^	WORD reel; \/\/—£‘Œ‘ˆº”$/;"	m	struct:t_Object
reeldef	ScenesServer/zObject.h	/^  WORD reeldef; \/\/ÊäóÁú©ÊôïÂ¢ûÂä†$/;"	m	class:Equips
reeldef	base/Object.h	/^	WORD reeldef; \/\/øπ—£‘Œ‘ˆº”$/;"	m	struct:t_Object
reference	base/zAStar.h	/^	typedef typename zPathQueueHead::reference reference;$/;"	t	class:zAStar
reflect	ScenesServer/ScenePk.h	/^	  SWORD reflect;		\/\/sky ÂèçÂºπ‰º§ÂÆ≥Âõ∫ÂÆöÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
reflect2	ScenesServer/ScenePk.h	/^	  SWORD reflect2;		\/\/sky ÂèçÂºπÈ≠îÊ≥ïÊîªÂáª‰º§ÂÆ≥ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
reflect_ardor	ScenesServer/ScenePk.h	/^      SWORD reflect_ardor; \/\/ ÂèçÂºπÁÅºÁÉ≠Áä∂ÊÄÅÁªôÊîªÂáªËá™Â∑±ÁöÑÊïå‰∫∫$/;"	m	struct:SkillState::__anon155::__anon156
reflect_frost	ScenesServer/ScenePk.h	/^      SWORD reflect_frost; \/\/ ÂèçÂºπÂÜ∞ÂÜªÁä∂ÊÄÅÁªôÊîªÂáªËá™Â∑±ÁöÑÊïå‰∫∫$/;"	m	struct:SkillState::__anon155::__anon156
reflect_icelull	ScenesServer/ScenePk.h	/^      SWORD reflect_icelull; \/\/ ÂèçÂºπ‰∏Ä‰∏™È∫ªÁóπÁä∂ÊÄÅ ÂÜ∞Èõ∑ÁõæÁî®$/;"	m	struct:SkillState::__anon155::__anon156
reflect_lull	ScenesServer/ScenePk.h	/^      SWORD reflect_lull;  \/\/ ÂèçÂºπÈ∫ªÁóπÁä∂ÊÄÅÁªôÊîªÂáªËá™Â∑±ÁöÑÊïå‰∫∫$/;"	m	struct:SkillState::__anon155::__anon156
reflect_poison	ScenesServer/ScenePk.h	/^      SWORD reflect_poison; \/\/ÂèçÂºπ‰∏≠ÊØíÁä∂ÊÄÅÁªôÊîªÂáªËá™Â∑±ÁöÑÊïå‰∫∫$/;"	m	struct:SkillState::__anon155::__anon156
reflectp	ScenesServer/ScenePk.h	/^	  SWORD reflectp;		\/\/sky ÂèçÂºπÁâ©ÁêÜÊîªÂáª‰º§ÂÆ≥ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
refrainLogin	FLServer/LoginTask.cpp	/^bool LoginTask::refrainLogin(const Cmd::stUserRefrainLoginCmd *ptCmd)$/;"	f	class:LoginTask
refresh	GatewayServer/ScreenIndex.cpp	/^bool ScreenIndex::refresh(GateUser *e,const DWORD newIndex)$/;"	f	class:ScreenIndex
refresh	ScenesServer/SceneUserManager.cpp	/^void SceneRecycleUserManager::refresh()$/;"	f	class:SceneRecycleUserManager
refresh	ScenesServer/Skill.cpp	/^void zSkill::refresh(bool ignoredirty)$/;"	f	class:zSkill
refresh	ScenesServer/SkillManager.cpp	/^void UserSkillM::refresh()$/;"	f	class:UserSkillM
refresh	ScenesServer/SkillStatusManager.h	/^  BYTE  refresh;$/;"	m	struct:SkillStatusElement
refresh	ScenesServer/zSceneEntryIndex.cpp	/^bool zSceneEntryIndex::refresh(zSceneEntry *e,const zPos & newPos)$/;"	f	class:zSceneEntryIndex
refresh	base/zDatabaseManager.h	/^	bool refresh(const char *filename)$/;"	f	class:zDataBM
refresh	base/zDatabaseManager.h	/^	bool refresh(datafile &base)$/;"	f	class:zDataBM
refreshCharInfo	GatewayServer/GateUser.cpp	/^void GateUser::refreshCharInfo()$/;"	f	class:GateUser
refreshClient	ScenesServer/CardPk.cpp	/^bool zCard::refreshClient(DWORD pAttThisID, DWORD pDefThisID, BYTE attackType)$/;"	f	class:zCard
refreshExpmapAttackTime	ScenesServer/SceneNpc.cpp	/^void SceneNpc::refreshExpmapAttackTime(SceneUser* pAtt)$/;"	f	class:SceneNpc
refreshMe	ScenesServer/SceneUser.cpp	/^bool SceneUser::refreshMe()$/;"	f	class:SceneUser
refreshNpc	ScenesServer/Scene.cpp	/^bool Scene::refreshNpc(SceneNpc *sceneNpc,const zPos & pos)$/;"	f	class:Scene
refreshOneHero	ScenesServer/HeroInfoManager.cpp	/^void HeroInfoManager::refreshOneHero(SceneUser& user, const WORD occupation)$/;"	f	class:HeroInfoManager
refreshUserDataCmd	tmpcode/commond.h	/^    refreshUserDataCmd()$/;"	f	struct:refreshUserDataCmd
refreshUserDataCmd	tmpcode/commond.h	/^struct refreshUserDataCmd : public stDataUserCmd$/;"	s
refresh_quest	ScenesServer/script_func.cpp	/^void refresh_quest(int id)$/;"	f
reg	GatewayServer/GateUser.cpp	/^void GateUser::reg(int charno)$/;"	f	class:GateUser
reg	SessionServer/Session.h	/^    bool reg(Cmd::Session::t_regScene_SceneSession *reginfo)$/;"	f	class:SceneSession
reg	SessionServer/Session.h	/^    bool reg(Cmd::Session::t_regUser_GateSession *reginfo)$/;"	f	class:UserSession
regTime	SessionServer/Session.h	/^    zRTime regTime;$/;"	m	class:UserSession
regType	base/RoleregCommand.h	/^	WORD regType;	    \/\/◊¢≤·¿‡–Õ(«¯± ◊¢≤·Ω«…´°¢º“◊Â°¢∞Ôª·)$/;"	m	struct:Cmd::RoleReg::t_Charname_reg_withID
regType	base/SuperCommand.h	/^	WORD regType;	    \/\/◊¢≤·¿‡–Õ(«¯± ◊¢≤·Ω«…´°¢º“◊Â°¢∞Ôª·)$/;"	m	struct:Cmd::Super::t_Charname_Gateway
regType	roleRegServer/RoleregCommand.h	/^	WORD regType;	    \/\/◊¢≤·¿‡–Õ(«¯± ◊¢≤·Ω«…´°¢º“◊Â°¢∞Ôª·)$/;"	m	struct:Cmd::RoleReg::t_Charname_reg_withID
region	ScenesServer/SceneDefine.h	/^	zRegion region;              \/\/ËåÉÂõ¥Êï∞ÊçÆ,ÂåÖÊã¨ËåÉÂõ¥ÂÜÖÁöÑÂèØË°åËµ∞ÁÇπÊï∞ÊçÆÁ¥¢Âºï$/;"	m	struct:t_NpcDefine
region	ScenesServer/SceneDefine.h	/^  zRegion region;              \/\/ËåÉÂõ¥Êï∞ÊçÆ,ÂåÖÊã¨ËåÉÂõ¥ÂÜÖÁöÑÂèØË°åËµ∞ÁÇπÊï∞ÊçÆÁ¥¢Âºï$/;"	m	struct:ZoneTypeDef
region	tmpcode/commond.h	/^		WORD region;$/;"	m	struct:stReturnMergeServerTeamUserCmd::MergeTeam
region	tmpcode/commond.h	/^	DWORD   region;     \/\/ ΩÁ”Ú $/;"	m	struct:st_CharShow2
region	tmpcode/commond.h	/^        DWORD region;     \/\/ ΩÁ”Ú$/;"	m	struct:stCreateSelectUserCmd
regionX	ScenesServer/SceneNpcAI.h	/^  int regionX,regionY;$/;"	m	struct:t_NpcAIDefine
regionY	ScenesServer/SceneNpcAI.h	/^  int regionX,regionY;$/;"	m	struct:t_NpcAIDefine
registerSceneMsgCmd	ScenesServer/SceneMsgCmdHandle.cpp	/^bool SceneMsgCmdHandle::registerSceneMsgCmd()$/;"	f	class:SceneMsgCmdHandle
register_creator	ScenesServer/QuestMaker.h	/^  void register_creator(const I& id,C* creator)  $/;"	f	class:ProductFactory
reinitFilter	ScenesServer/scriptTickTask.h	/^		static void reinitFilter()$/;"	f	class:scriptMessageFilter
reject	tmpcode/commond.h	/^	bool reject;                    \/\/trueæ‹æ¯»Î◊°£¨falseÕ¨“‚»Î◊°$/;"	m	struct:st_RejectApplyRoomerHouseUserCmd
reject	tmpcode/commond.h	/^	bool reject;$/;"	m	struct:st_RejectBanishRoomerHouseUserCmd
relation	tmpcode/commond.h	/^	BYTE	relation;										\/\/ œ‘ æ”≈œ»º∂,æÕ «πÿœµ∞…$/;"	m	struct:stHomeItem
relationID2	base/SessionCommand.h	/^      DWORD relationID2;    \/\/ Â∫îÊàòÊñπÁ§æ‰ºöÂÖ≥Á≥ªID$/;"	m	struct:Cmd::Session::t_createDare_SceneSession
relationManager	SessionServer/Session.h	/^    CRelationManager relationManager;$/;"	m	class:UserSession
relationType	tmpcode/commond.h	/^	BYTE  relationType;      \/\/…Í«Îπÿœµ÷÷¿‡     $/;"	m	struct:stReqUnionAlly
relationType	tmpcode/commond.h	/^	BYTE  relationType;     $/;"	m	struct:_UnionAllyInfo
relaxBufferList	SessionServer/HeroCardManager.h	/^    WaitForMatch relaxBufferList;			\/\/PVP –›œ–$/;"	m	class:HeroCardManager
relaxForMatchList	SessionServer/HeroCardManager.h	/^    WaitForMatch relaxForMatchList;			\/\/PVP –›œ–$/;"	m	class:HeroCardManager
relaxList	SessionServer/HeroCardManager.h	/^    MatchedList relaxList;				\/\/PVP –›œ–$/;"	m	class:HeroCardManager
relaxMode	tmpcode/commond.h	/^	BYTE relaxMode;\/\/–›œ¢ƒ£ Ω 1-‘⁄œﬂ–›œ¢£¨ 2-¿Îœﬂ–›œ¢$/;"	m	struct:reqGoToBedHouseUserCmd
relax_chanllengeID	SessionServer/HeroCardManager.h	/^    zUniqueID<DWORD>	*relax_chanllengeID;		\/\/PVP –›œ–∂‘’Ω$/;"	m	class:HeroCardManager
relive	ScenesServer/SceneEntryPk.h	/^    virtual void relive(){};$/;"	f	struct:SceneEntryPk
relive	ScenesServer/ScenePk.cpp	/^bool SceneUser::relive(const int relive_type,const int delaytime,const int data_percent)$/;"	f	class:SceneUser
relive	ScenesServer/ScenePk.h	/^      SWORD relive;    \/\/ ÂÜçÁîü$/;"	m	struct:SkillState::__anon155::__anon156
relive	ScenesServer/SceneUser.cpp	/^void SceneUser::relive()$/;"	f	class:SceneUser
reliveInfo	tmpcode/commond.h	/^		reliveInfo()$/;"	f	struct:stRetCityReliveInfo::reliveInfo
reliveInfo	tmpcode/commond.h	/^	struct reliveInfo$/;"	s	struct:stRetCityReliveInfo
relivePet	ScenesServer/SceneNpc.h	/^  virtual void relivePet(){};$/;"	f	class:SceneNpc
reliveReady	ScenesServer/ScenePk.cpp	/^bool SceneUser::reliveReady(const Cmd::stOKReliveUserCmd *rev,bool isOrigin)$/;"	f	class:SceneUser
reliveTime	ScenesServer/SceneNpc.h	/^  zRTime reliveTime;\/\/Â§çÊ¥ªÊó∂Èó¥$/;"	m	class:SceneNpc
reliveTime	tmpcode/commond.h	/^		DWORD reliveTime;$/;"	m	struct:stRetCityReliveInfo::reliveInfo
reliveTime	tmpcode/commond.h	/^	DWORD	reliveTime;         \/\/À¢–¬◊¥Ã¨ ±Œ™hpµƒ∞Ÿ∑÷±»£¨Œ¥À¢–¬ ±£¨œ‘ æÀ¢–¬ ±º‰$/;"	m	struct:BossTraceItem
reliveWeakTime	base/CharBase.h	/^  WORD reliveWeakTime;      \/\/\/ Â§çÊ¥ªËôöÂº±Ââ©‰ΩôÊó∂Èó¥$/;"	m	struct:CharBase
reload	FLServer/UserHttpPub.cpp	/^bool UserConfigM::reload()$/;"	f	class:UserConfigM
reload	GatewayServer/CountryInfo.cpp	/^bool CountryInfo::reload()$/;"	f	class:CountryInfo
reload	ScenesServer/ScenesServer.cpp	/^bool ScenesService::reload=false;$/;"	m	class:ScenesService
reload	ScenesServer/ScenesServer.h	/^    static bool reload;$/;"	m	class:ScenesService
reload	SessionServer/CountryInfo.cpp	/^bool CountryInfo::reload()$/;"	f	class:CountryInfo
reload	base/xml/xml_config.h	/^		bool reload()$/;"	f	class:xml_config
reload	base/xml/xml_config.h	/^		bool reload(const std::string& filename)$/;"	f	class:xml_config
reloadConfig	BillServer/BillServer.cpp	/^void BillService::reloadConfig()$/;"	f	class:BillService
reloadConfig	FLServer/FLServer.cpp	/^void FLService::reloadConfig()$/;"	f	class:FLService
reloadConfig	GatewayServer/GatewayServer.cpp	/^void GatewayService::reloadConfig()$/;"	f	class:GatewayService
reloadConfig	RecordServer/RecordServer.cpp	/^void RecordService::reloadConfig()$/;"	f	class:RecordService
reloadConfig	ScenesServer/ScenesServer.cpp	/^void ScenesService::reloadConfig()$/;"	f	class:ScenesService
reloadConfig	SessionServer/SessionServer.cpp	/^void SessionService::reloadConfig()$/;"	f	class:SessionService
reloadConfig	SuperServer/SuperServer.cpp	/^void SuperService::reloadConfig()$/;"	f	class:SuperService
reloadConfig	base/zService.h	/^	virtual void reloadConfig()$/;"	f	class:zService
reloadConfig	roleChangeServer/roleChangeServer.cpp	/^void roleChangeService::reloadConfig()$/;"	f	class:roleChangeService
reloadConfig	roleRegServer/roleRegServer.cpp	/^void roleRegService::reloadConfig()$/;"	f	class:roleRegService
reloadVM	ScenesServer/script.cpp	/^void ScriptingSystemLua::reloadVM()$/;"	f	class:ScriptingSystemLua
remainReward	tmpcode/commond.h	/^		WORD remainReward;        \/\/ £”‡Ω±¿¯¥Œ ˝$/;"	m	struct:stRet_PromoterRewardUserCmd::Reward
remainTime	tmpcode/commond.h	/^	 DWORD remainTime;$/;"	m	struct:stNotifyChallengeStateDragonUserCmd
remainTime	tmpcode/commond.h	/^	WORD remainTime;        \/\/±æΩ⁄ £”‡ ±º‰$/;"	m	struct:stRefreshCommonInfoWeekendZhenxuanUserCmd
remainTime	tmpcode/commond.h	/^	WORD remainTime; \/\/∏√Ω◊∂Œ £”‡ ±º‰$/;"	m	struct:stNotifyStateAndTimeZhenXuanUserCmd
remark	BillServer/BillCallback.h	/^  char          remark[Cmd::UserServer::REMARK_LENGTH +1];  \/\/Â§áÊ≥®$/;"	m	struct:BillData
remark	base/UserCommand.h	/^      char      remark[REMARK_LENGTH +1];    \/\/Â§áÊ≥®$/;"	m	struct:Cmd::UserServer::t_cmd_fillin
remark	base/UserCommand.h	/^      char      remark[REMARK_LENGTH +1];    \/\/Â§áÊ≥®$/;"	m	struct:Cmd::UserServer::t_cmd_mcard
remark	base/UserCommand.h	/^      char      remark[REMARK_LENGTH +1];  \/\/Â§áÊ≥®$/;"	m	struct:Cmd::UserServer::t_cmd_consume
remark	tmpcode/commond.h	/^        char    remark[150];    \/\/∏ˆ»ÀÀµ√˜$/;"	m	struct:stNameCard
remove	BillServer/BillCache.cpp	/^void BillCache::remove(const char *tid)$/;"	f	class:BillCache
remove	BillServer/BillClientManager.cpp	/^void BillClientManager::remove(BillClient *billClient)$/;"	f	class:BillClientManager
remove	BillServer/BillSessionManager.cpp	/^bool BillSessionManager::remove(const std::string& tid)$/;"	f	class:BillSessionManager
remove	FLServer/LoginManager.cpp	/^void LoginManager::remove(LoginTask *task)$/;"	f	class:LoginManager
remove	FLServer/UserTask.h	/^	void remove(UserTask *iTask)$/;"	f	class:UserContainer
remove	GatewayServer/SceneClientManager.cpp	/^void SceneClientManager::remove(SceneClient *sceneClient)$/;"	f	class:SceneClientManager
remove	RecordServer/RecordSessionManager.cpp	/^bool RecordSessionManager::remove(const DWORD accid,const DWORD id,const WORD wdServerID)$/;"	f	class:RecordSessionManager
remove	Robot/ClientManager.cpp	/^void ClientManager::remove(Client *task)$/;"	f	class:ClientManager
remove	ScenesServer/Chat.cpp	/^bool Channel::remove(const char *uname)$/;"	f	class:Channel
remove	ScenesServer/Chat.cpp	/^void ChannelM::remove(DWORD dwChannelID)$/;"	f	class:ChannelM
remove	ScenesServer/zCard.cpp	/^bool BattleSlot::remove(zCard *object)$/;"	f	class:BattleSlot
remove	ScenesServer/zCard.cpp	/^bool CardSlot::remove(zCard *object)$/;"	f	class:CardSlot
remove	ScenesServer/zCard.cpp	/^bool EquipSlot::remove(zCard *object)$/;"	f	class:EquipSlot
remove	ScenesServer/zCard.cpp	/^bool HandSlot::remove(zCard *object)$/;"	f	class:HandSlot
remove	ScenesServer/zCard.cpp	/^bool HeroSlot::remove(zCard *object)$/;"	f	class:HeroSlot
remove	ScenesServer/zCard.cpp	/^bool SkillSlot::remove(zCard *object)$/;"	f	class:SkillSlot
remove	ScenesServer/zCard.cpp	/^bool TombSlot::remove(zCard *object)$/;"	f	class:TombSlot
remove	ScenesServer/zObject.cpp	/^bool EquipPack::remove(zObject *object)$/;"	f	class:EquipPack
remove	ScenesServer/zObject.cpp	/^bool MainPack::remove(zObject *object)$/;"	f	class:MainPack
remove	ScenesServer/zObject.cpp	/^bool Package::remove(zObject *object)$/;"	f	class:Package
remove	SessionServer/SessionChat.cpp	/^bool SessionChannel::remove(DWORD id)$/;"	f	class:SessionChannel
remove	SessionServer/SessionChat.cpp	/^bool SessionChannel::remove(UserSession *pUser)$/;"	f	class:SessionChannel
remove	SessionServer/SessionChat.cpp	/^void SessionChannelManager::remove(DWORD id)$/;"	f	class:SessionChannelManager
remove	SessionServer/TempArchive.cpp	/^void GlobalTempArchiveIndex::remove(TempArchive_iterator del_iter)$/;"	f	class:GlobalTempArchiveIndex
remove	SuperServer/BroadClientManager.cpp	/^void BroadClientManager::remove(BroadClient *flClient)$/;"	f	class:BroadClientManager
remove	SuperServer/FLClientManager.cpp	/^void FLClientManager::remove(FLClient *flClient)$/;"	f	class:FLClientManager
remove	SuperServer/InfoClientManager.cpp	/^void InfoClientManager::remove(InfoClient *infoClient)$/;"	f	class:InfoClientManager
remove	SuperServer/RolechangeClientManager.cpp	/^void RolechangeClientManager::remove(RolechangeClient *rolechangeClient)$/;"	f	class:RolechangeClientManager
remove	SuperServer/RoleregCache.cpp	/^	void remove(const char *name)$/;"	f	class:RoleDataContainer
remove	SuperServer/RoleregClientManager.cpp	/^void RoleregClientManager::remove(RoleregClient *roleregClient)$/;"	f	class:RoleregClientManager
remove	base/zEntryManager.h	/^	inline void remove(const keyT &key)$/;"	f	class:LimitHash
remove	base/zEntryManager.h	/^	inline void remove(zEntry * &e) { }$/;"	f	class:zEntryNone
remove	base/zEntryManager.h	/^	inline void remove(zEntry * &e)$/;"	f	class:zMultiEntryName
remove	base/zEntryManager.h	/^	inline void remove(zEntry * e)$/;"	f	class:zEntryID
remove	base/zEntryManager.h	/^	inline void remove(zEntry * e)$/;"	f	class:zEntryName
remove	base/zEntryManager.h	/^	inline void remove(zEntry * e)$/;"	f	class:zEntryTempID
remove	roleChangeServer/ChangeTask.h	/^	void remove(ChangeTask *iTask)$/;"	f	class:RoleContainer
removeAll	ScenesServer/zCard.cpp	/^void CardSlot::removeAll()$/;"	f	class:CardSlot
removeAll	ScenesServer/zObject.cpp	/^void Package::removeAll()$/;"	f	class:Package
removeAllByServerID	RecordServer/RecordSessionManager.cpp	/^void RecordSessionManager::removeAllByServerID(const WORD wdServerID)$/;"	f	class:RecordSessionManager
removeAllSceneByTask	SessionServer/SessionManager.cpp	/^void SceneSessionManager::removeAllSceneByTask(SessionTask *task)$/;"	f	class:SceneSessionManager
removeAllUser	GatewayServer/GateUserManager.cpp	/^void GateUserManager::removeAllUser()$/;"	f	class:GateUserManager
removeAllUser	ScenesServer/SceneUserManager.cpp	/^void SceneUserManager::removeAllUser()$/;"	f	class:SceneUserManager
removeAllUser	SessionServer/SessionChat.cpp	/^bool SessionChannel::removeAllUser()$/;"	f	class:SessionChannel
removeAllUserByTask	SessionServer/SessionManager.cpp	/^void UserSessionManager::removeAllUserByTask(SessionTask *task)$/;"	f	class:UserSessionManager
removeBlackList	GatewayServer/GateUser.cpp	/^void GateUser::removeBlackList(const char *name)$/;"	f	class:GateUser
removeCountryUser	GatewayServer/GateUserManager.cpp	/^void GateUserManager::removeCountryUser(GateUser *user)$/;"	f	class:GateUserManager
removeEntry	base/zEntryManager.h	/^	inline void removeEntry(zEntry * e)$/;"	f	class:zEntryManager
removeEntryByID	base/zDatabaseManager.h	/^	void removeEntryByID(DWORD id)$/;"	f	class:zDataBM
removeEntryByName	base/zDatabaseManager.h	/^	void removeEntryByName(const char * name)$/;"	f	class:zDataBM
removeEntry_Pred	base/zEntryManager.h	/^struct removeEntry_Pred$/;"	s
removeEntry_if	base/zEntryManager.h	/^	inline void removeEntry_if (removeEntry_Pred<YourEntry> &pred)$/;"	f	class:zEntryManager
removeFromContainer	BillServer/BillClient.cpp	/^void BillClient::removeFromContainer()$/;"	f	class:BillClient
removeFromContainer	FLServer/UserTask.cpp	/^void UserTask::removeFromContainer()$/;"	f	class:UserTask
removeFromContainer	GatewayServer/GatewayTask.cpp	/^void GatewayTask::removeFromContainer()$/;"	f	class:GatewayTask
removeFromContainer	GatewayServer/SceneClient.cpp	/^void SceneClient::removeFromContainer()$/;"	f	class:SceneClient
removeFromContainer	SessionServer/SessionTask.cpp	/^void SessionTask::removeFromContainer()$/;"	f	class:SessionTask
removeFromContainer	SuperServer/BroadClient.cpp	/^void BroadClient::removeFromContainer()$/;"	f	class:BroadClient
removeFromContainer	SuperServer/FLClient.cpp	/^void FLClient::removeFromContainer()$/;"	f	class:FLClient
removeFromContainer	SuperServer/InfoClient.cpp	/^void InfoClient::removeFromContainer()$/;"	f	class:InfoClient
removeFromContainer	SuperServer/RolechangeClient.cpp	/^void RolechangeClient::removeFromContainer()$/;"	f	class:RolechangeClient
removeFromContainer	SuperServer/RoleregClient.cpp	/^void RoleregClient::removeFromContainer()$/;"	f	class:RoleregClient
removeFromContainer	SuperServer/ServerTask.cpp	/^void ServerTask::removeFromContainer()$/;"	f	class:ServerTask
removeFromContainer	base/zTCPClientTask.h	/^	virtual void removeFromContainer() {};$/;"	f	class:zTCPClientTask
removeFromContainer	base/zTCPTask.h	/^	virtual void removeFromContainer() {}$/;"	f	class:zTCPTask
removeFromContainer	roleChangeServer/ChangeTask.cpp	/^void ChangeTask::removeFromContainer()$/;"	f	class:ChangeTask
removeGateUser	GatewayServer/ScreenIndex.cpp	/^void ScreenIndex::removeGateUser(GateUser *e)$/;"	f	class:ScreenIndex
removeGold	BillServer/BillUser.cpp	/^bool BillUser::removeGold(DWORD num,const char *disc,bool transfer,bool tax)$/;"	f	class:BillUser
removeGold	ScenesServer/Chat.cpp	/^bool Gm::removeGold(SceneUser *pUser, const char *para)$/;"	f	class:Gm
removeGold	ScenesServer/zObject.cpp	/^bool Packages::removeGold(DWORD num,const char *disc,bool need)$/;"	f	class:Packages
removeIndex	GatewayServer/SceneClient.h	/^	void removeIndex(GateUser *pUser,const DWORD map)$/;"	f	class:SceneClient
removeMoney	BillServer/BillUser.cpp	/^bool BillUser::removeMoney(DWORD num,const char *disc,bool transfer,bool tax)$/;"	f	class:BillUser
removeMoney	ScenesServer/Chat.cpp	/^bool Gm::removeMoney(SceneUser *pUser, const char *para)$/;"	f	class:Gm
removeMoney	ScenesServer/zObject.cpp	/^bool Packages::removeMoney(DWORD num,const char *disc)$/;"	f	class:Packages
removeNineEntry	ScenesServer/SceneUser.cpp	/^void SceneUser::removeNineEntry(zPosI posi)$/;"	f	class:SceneUser
removeNpc	ScenesServer/Scene.cpp	/^void Scene::removeNpc(SceneNpc *sn)$/;"	f	class:Scene
removeNpcInOneScene	ScenesServer/SceneNpcManager.cpp	/^void SceneNpcManager::removeNpcInOneScene(Scene *scene)$/;"	f	class:SceneNpcManager
removeNpc_if	ScenesServer/SceneNpcManager.h	/^    void removeNpc_if(removeEntry_Pred<YourNpcEntry> &pred)$/;"	f	class:SceneNpcManager
removeObject	ScenesServer/CardManager.cpp	/^void GameCardM::removeObject(zCard * o)$/;"	f	class:GameCardM
removeObject	ScenesServer/CardManager.cpp	/^void GlobalCardIndex::removeObject(DWORD thisid)$/;"	f	class:GlobalCardIndex
removeObject	ScenesServer/ObjectManager.cpp	/^void GlobalObjectIndex::removeObject(DWORD thisid)$/;"	f	class:GlobalObjectIndex
removeObject	ScenesServer/ObjectManager.cpp	/^void UserObjectM::removeObject(zObject * o)$/;"	f	class:UserObjectM
removeObject	ScenesServer/Scene.cpp	/^void Scene::removeObject(zSceneObject *so)$/;"	f	class:Scene
removeObject	ScenesServer/zCard.cpp	/^bool CardSlots::removeObject(DWORD userID, zCard *srcObj,bool notify,bool del)$/;"	f	class:CardSlots
removeObject	ScenesServer/zObject.cpp	/^bool Packages::removeObject(zObject *srcObj,bool notify,bool del)$/;"	f	class:Packages
removeObjectByThisID	ScenesServer/CardManager.cpp	/^void GameCardM::removeObjectByThisID(DWORD thisid)$/;"	f	class:GameCardM
removeObjectByThisID	ScenesServer/ObjectManager.cpp	/^void UserObjectM::removeObjectByThisID(DWORD thisid)$/;"	f	class:UserObjectM
removeRelation	SessionServer/CRelationManager.cpp	/^void CRelationManager::removeRelation(const char * name)$/;"	f	class:CRelationManager
removeScene	SessionServer/SessionManager.cpp	/^void SceneSessionManager::removeScene(SceneSession *scene)$/;"	f	class:SceneSessionManager
removeSceneEntry	ScenesServer/zSceneEntryIndex.cpp	/^bool zSceneEntryIndex::removeSceneEntry(zSceneEntry *e)$/;"	f	class:zSceneEntryIndex
removeSceneNpc	ScenesServer/SceneNpcManager.cpp	/^void SceneNpcManager::removeSceneNpc(SceneNpc *sceneNpc)$/;"	f	class:SceneNpcManager
removeSceneObjectInOneScene	ScenesServer/Scene.cpp	/^void Scene::removeSceneObjectInOneScene()$/;"	f	class:Scene
removeScene_if	base/zSceneManager.h	/^	void removeScene_if(removeEntry_Pred<YourSceneEntry> &pred)$/;"	f	class:zSceneManager
removeServer	SuperServer/ServerManager.cpp	/^void ServerManager::removeServer(ServerTask *task)$/;"	f	class:ServerManager
removeSessionTask	SessionServer/SessionTaskManager.cpp	/^void SessionTaskManager::removeSessionTask(SessionTask *task)$/;"	f	class:SessionTaskManager
removeSkill	ScenesServer/SceneSkill.cpp	/^bool SceneUser::removeSkill(const Cmd::stRemoveUserSkillPropertyUserCmd *rev)$/;"	f	class:SceneUser
removeSkill	ScenesServer/SkillManager.cpp	/^void UserSkillM::removeSkill(zSkill *s)$/;"	f	class:UserSkillM
removeSkillByTempID	ScenesServer/SkillManager.cpp	/^void UserSkillM::removeSkillByTempID(DWORD id)$/;"	f	class:UserSkillM
removeSpecialNpc	ScenesServer/SceneNpcManager.cpp	/^void SceneNpcManager::removeSpecialNpc(SceneNpc *sceneNpc)$/;"	f	class:SceneNpcManager
removeTicket	ScenesServer/zObject.cpp	/^bool Packages::removeTicket(DWORD num,const char *disc)$/;"	f	class:Packages
removeUser	BillServer/BillUserManager.h	/^    void removeUser(BillUser *user)$/;"	f	class:BillUserManager
removeUser	GatewayServer/GateUserManager.cpp	/^void GateUserManager::removeUser(zSceneEntry *user)$/;"	f	class:GateUserManager
removeUser	ScenesServer/Chat.cpp	/^void ChannelM::removeUser(const char *name)$/;"	f	class:ChannelM
removeUser	ScenesServer/Scene.cpp	/^void Scene::removeUser(SceneUser *so)$/;"	f	class:Scene
removeUser	ScenesServer/SceneUserManager.cpp	/^void SceneRecycleUserManager::removeUser(SceneUser *user)$/;"	f	class:SceneRecycleUserManager
removeUser	ScenesServer/SceneUserManager.cpp	/^void SceneUserManager::removeUser(SceneUser *user)$/;"	f	class:SceneUserManager
removeUser	SessionServer/SessionChat.cpp	/^void SessionChannelManager::removeUser(UserSession * user)$/;"	f	class:SessionChannelManager
removeUser	base/zUserManager.h	/^	void removeUser(zSceneEntry *user)$/;"	f	class:zUserManager
removeUserByGatewayID	BillServer/BillUserManager.cpp	/^void BillUserManager::removeUserByGatewayID(BillTask *task)$/;"	f	class:BillUserManager
removeUserBySceneClient	GatewayServer/GateUserManager.cpp	/^void GateUserManager::removeUserBySceneClient(SceneClient *scene)$/;"	f	class:GateUserManager
removeUserByTask	ScenesServer/SceneUserManager.cpp	/^void SceneUserManager::removeUserByTask(SceneTask *task)$/;"	f	class:SceneUserManager
removeUserInOneScene	ScenesServer/SceneUserManager.cpp	/^void SceneUserManager::removeUserInOneScene(Scene *scene)$/;"	f	class:SceneUserManager
removeUserOnlyByAccID	GatewayServer/GateUserManager.cpp	/^void GateUserManager::removeUserOnlyByAccID(DWORD accid)$/;"	f	class:GateUserManager
removeUserToHuangcheng	ScenesServer/SceneUserManager.cpp	/^void SceneUserManager::removeUserToHuangcheng(Scene *scene)$/;"	f	class:SceneUserManager
removeUser_if	base/zUserManager.h	/^	void removeUser_if(removeEntry_Pred<YourUserEntry> &pred)$/;"	f	class:zUserManager
remove_money	ScenesServer/script_func.cpp	/^bool remove_money(SceneUser* user,int money)$/;"	f
removed	base/zEntryManager.h	/^	std::vector<YourEntry *> removed;$/;"	m	struct:removeEntry_Pred
renqi	tmpcode/commond.h	/^	DWORD  renqi;$/;"	m	struct:FlowerDef
renqi	tmpcode/commond.h	/^	DWORD renqi;$/;"	m	struct:__anon356
renqi_week	tmpcode/commond.h	/^	DWORD renqi_week;$/;"	m	struct:__anon356
repair	base/Command.h	/^  BYTE repair;      \/\/Ëá™Âä®‰øÆÁêÜ‰∏ª‰∫∫Ë£ÖÂ§á$/;"	m	struct:Cmd::t_CartoonData
repair	base/Command.h	/^  BYTE repair;\/\/0ÔºöÂÖ≥Èó≠ 1ÔºöÊâìÂºÄ$/;"	m	struct:Cmd::stRepairCartoonCmd
repair	base/SessionCommand.h	/^      BYTE repair;\/\/0ÔºöÂÖ≥Èó≠ 1ÔºöÊâìÂºÄ$/;"	m	struct:Cmd::Session::t_setRepairCartoon_SceneSession
repairID	tmpcode/commond.h	/^        DWORD  repairID;    \/\/–ﬁ∏¥µ¿æﬂŒ®“ªID$/;"	m	struct:stResetTimeUserCmd
repeat	ScenesServer/SceneNpcAI.h	/^  int repeat;$/;"	m	class:NpcAIController
repentange	ScenesServer/SceneEntryPk.h	/^	bool repentange;	\/\/\/ sky ÂøèÊÇî$/;"	m	struct:SceneEntryPk
replaceObject	ScenesServer/zCard.cpp	/^bool CardSlots::replaceObject(SceneUser *pUser, zCard *oldObj, zCard *newObj)$/;"	f	class:CardSlots
replace_all	base/zString.h	/^inline std::string& replace_all(std::string& str, const std::string& old_value, const std::string& new_value)$/;"	f	namespace:Zebra
reply	base/GmToolCommand.h	/^      char reply[256-32];$/;"	m	struct:Cmd::GmTool::t_Msg_Reply_GmTool
replyText	ScenesServer/SceneUser.h	/^    char replyText[MAX_CHATINFO];\/\/Ëá™Âä®ÂõûÂ§ç$/;"	m	struct:SceneUser
reportGm	SessionServer/SessionServer.cpp	/^bool SessionService::reportGm(const char * fromName,const char * msg,...)$/;"	f	class:SessionService
reqAddFirewoodUserCmd	tmpcode/commond.h	/^	reqAddFirewoodUserCmd()$/;"	f	struct:reqAddFirewoodUserCmd
reqAddFirewoodUserCmd	tmpcode/commond.h	/^struct reqAddFirewoodUserCmd: public stHouseUserCmd$/;"	s
reqAdjustCityBonfireExpCmd	tmpcode/commond.h	/^	reqAdjustCityBonfireExpCmd()$/;"	f	struct:reqAdjustCityBonfireExpCmd
reqAdjustCityBonfireExpCmd	tmpcode/commond.h	/^struct reqAdjustCityBonfireExpCmd : public stCountryUserCmd$/;"	s
reqAdopter	SessionServer/Session.h	/^    DWORD reqAdopter;$/;"	m	class:Session
reqCallAllToCityBonfireCmd	tmpcode/commond.h	/^	reqCallAllToCityBonfireCmd()$/;"	f	struct:reqCallAllToCityBonfireCmd
reqCallAllToCityBonfireCmd	tmpcode/commond.h	/^struct reqCallAllToCityBonfireCmd : public stCountryUserCmd$/;"	s
reqChatAccelPropertyUserCmd	tmpcode/commond.h	/^    reqChatAccelPropertyUserCmd()$/;"	f	struct:reqChatAccelPropertyUserCmd
reqChatAccelPropertyUserCmd	tmpcode/commond.h	/^struct reqChatAccelPropertyUserCmd : public stPropertyUserCmd$/;"	s
reqConvertShenYuUserCmd	tmpcode/commond.h	/^    reqConvertShenYuUserCmd()$/;"	f	struct:reqConvertShenYuUserCmd
reqConvertShenYuUserCmd	tmpcode/commond.h	/^struct reqConvertShenYuUserCmd:public stMapScreenUserCmd$/;"	s
reqDukeSortLastWeekUserCmd	tmpcode/commond.h	/^	reqDukeSortLastWeekUserCmd()$/;"	f	struct:reqDukeSortLastWeekUserCmd
reqDukeSortLastWeekUserCmd	tmpcode/commond.h	/^struct reqDukeSortLastWeekUserCmd: public stNSUserCmd$/;"	s
reqDukeSortThisWeekUserCmd	tmpcode/commond.h	/^	reqDukeSortThisWeekUserCmd()$/;"	f	struct:reqDukeSortThisWeekUserCmd
reqDukeSortThisWeekUserCmd	tmpcode/commond.h	/^struct reqDukeSortThisWeekUserCmd: public stNSUserCmd$/;"	s
reqEnterQuestRoomHailUserCmd	tmpcode/commond.h	/^    reqEnterQuestRoomHailUserCmd(): questID(0), levelMark(0),page(0)$/;"	f	struct:reqEnterQuestRoomHailUserCmd
reqEnterQuestRoomHailUserCmd	tmpcode/commond.h	/^struct reqEnterQuestRoomHailUserCmd: public stQuestMapUserCmd$/;"	s
reqEnterUserCmd	tmpcode/commond.h	/^        reqEnterUserCmd()$/;"	f	struct:reqEnterUserCmd
reqEnterUserCmd	tmpcode/commond.h	/^struct reqEnterUserCmd:public stMapScreenUserCmd$/;"	s
reqGiveGuardGoodsSeptCmd	tmpcode/commond.h	/^    reqGiveGuardGoodsSeptCmd()$/;"	f	struct:reqGiveGuardGoodsSeptCmd
reqGiveGuardGoodsSeptCmd	tmpcode/commond.h	/^struct reqGiveGuardGoodsSeptCmd : public stSeptUserCmd$/;"	s
reqGoToBedHouseUserCmd	tmpcode/commond.h	/^	reqGoToBedHouseUserCmd()$/;"	f	struct:reqGoToBedHouseUserCmd
reqGoToBedHouseUserCmd	tmpcode/commond.h	/^struct reqGoToBedHouseUserCmd: public stHouseUserCmd$/;"	s
reqGuardGoodsSeptCmd	tmpcode/commond.h	/^    reqGuardGoodsSeptCmd()$/;"	f	struct:reqGuardGoodsSeptCmd
reqGuardGoodsSeptCmd	tmpcode/commond.h	/^struct reqGuardGoodsSeptCmd : public stSeptUserCmd$/;"	s
reqInviteChunYunCmd	tmpcode/commond.h	/^       reqInviteChunYunCmd()            $/;"	f	struct:reqInviteChunYunCmd
reqInviteChunYunCmd	tmpcode/commond.h	/^struct reqInviteChunYunCmd : public stChatUserCmd$/;"	s
reqJoinCityBonfireCmd	tmpcode/commond.h	/^	reqJoinCityBonfireCmd()$/;"	f	struct:reqJoinCityBonfireCmd
reqJoinCityBonfireCmd	tmpcode/commond.h	/^struct reqJoinCityBonfireCmd : public stCountryUserCmd$/;"	s
reqKeyOptShenMiUserCmd	tmpcode/commond.h	/^    reqKeyOptShenMiUserCmd()$/;"	f	struct:reqKeyOptShenMiUserCmd
reqKeyOptShenMiUserCmd	tmpcode/commond.h	/^struct reqKeyOptShenMiUserCmd: public stQuestMapUserCmd$/;"	s
reqKickUserChunYunCmd	tmpcode/commond.h	/^        reqKickUserChunYunCmd()$/;"	f	struct:reqKickUserChunYunCmd
reqKickUserChunYunCmd	tmpcode/commond.h	/^struct reqKickUserChunYunCmd : public stChatUserCmd$/;"	s
reqMarquisSortLastWeekUserCmd	tmpcode/commond.h	/^	reqMarquisSortLastWeekUserCmd()$/;"	f	struct:reqMarquisSortLastWeekUserCmd
reqMarquisSortLastWeekUserCmd	tmpcode/commond.h	/^struct reqMarquisSortLastWeekUserCmd: public stNSUserCmd$/;"	s
reqMarquisSortThisWeekUserCmd	tmpcode/commond.h	/^	reqMarquisSortThisWeekUserCmd()$/;"	f	struct:reqMarquisSortThisWeekUserCmd
reqMarquisSortThisWeekUserCmd	tmpcode/commond.h	/^struct reqMarquisSortThisWeekUserCmd: public stNSUserCmd$/;"	s
reqMatchTime	SessionServer/HeroCardManager.h	/^    DWORD reqMatchTime;		\/\/«Î«Û∆•≈‰µƒ ±º‰¥¡$/;"	m	struct:stChallengeInfo
reqQuitChunYunCmd	tmpcode/commond.h	/^        reqQuitChunYunCmd()$/;"	f	struct:reqQuitChunYunCmd
reqQuitChunYunCmd	tmpcode/commond.h	/^struct reqQuitChunYunCmd : public stChatUserCmd$/;"	s
reqRewardDukeSortUserCmd	tmpcode/commond.h	/^	reqRewardDukeSortUserCmd()$/;"	f	struct:reqRewardDukeSortUserCmd
reqRewardDukeSortUserCmd	tmpcode/commond.h	/^struct reqRewardDukeSortUserCmd: public stNSUserCmd$/;"	s
reqRewardMarquisSortUserCmd	tmpcode/commond.h	/^	reqRewardMarquisSortUserCmd()$/;"	f	struct:reqRewardMarquisSortUserCmd
reqRewardMarquisSortUserCmd	tmpcode/commond.h	/^struct reqRewardMarquisSortUserCmd: public stNSUserCmd$/;"	s
reqStartFireplaceUserCmd	tmpcode/commond.h	/^	reqStartFireplaceUserCmd()$/;"	f	struct:reqStartFireplaceUserCmd
reqStartFireplaceUserCmd	tmpcode/commond.h	/^struct reqStartFireplaceUserCmd: public stHouseUserCmd$/;"	s
reqTopKillCountUserCmd	tmpcode/commond.h	/^        reqTopKillCountUserCmd()$/;"	f	struct:reqTopKillCountUserCmd
reqTopKillCountUserCmd	tmpcode/commond.h	/^struct reqTopKillCountUserCmd:public stMapScreenUserCmd$/;"	s
req_JoinTableMapScreenUserCmd	tmpcode/commond.h	/^        req_JoinTableMapScreenUserCmd()$/;"	f	struct:req_JoinTableMapScreenUserCmd
req_JoinTableMapScreenUserCmd	tmpcode/commond.h	/^struct req_JoinTableMapScreenUserCmd : public stRecommendUserCmd$/;"	s
req_ObjVisitHouseUserCmd	tmpcode/commond.h	/^	req_ObjVisitHouseUserCmd()$/;"	f	struct:req_ObjVisitHouseUserCmd
req_ObjVisitHouseUserCmd	tmpcode/commond.h	/^struct req_ObjVisitHouseUserCmd : public stHouseUserCmd$/;"	s
req_PlaceTableMapScreenUserCmd	tmpcode/commond.h	/^        req_PlaceTableMapScreenUserCmd()$/;"	f	struct:req_PlaceTableMapScreenUserCmd
req_PlaceTableMapScreenUserCmd	tmpcode/commond.h	/^struct req_PlaceTableMapScreenUserCmd : public stRecommendUserCmd$/;"	s
req_ReplyTableMapScreenUserCmd	tmpcode/commond.h	/^        req_ReplyTableMapScreenUserCmd()$/;"	f	struct:req_ReplyTableMapScreenUserCmd
req_ReplyTableMapScreenUserCmd	tmpcode/commond.h	/^struct req_ReplyTableMapScreenUserCmd : public stRecommendUserCmd$/;"	s
req_TableListMapScreenUserCmd	tmpcode/commond.h	/^        req_TableListMapScreenUserCmd()$/;"	f	struct:req_TableListMapScreenUserCmd
req_TableListMapScreenUserCmd	tmpcode/commond.h	/^struct req_TableListMapScreenUserCmd : public stRecommendUserCmd$/;"	s
req_TransmitHouseUserCmd	tmpcode/commond.h	/^	req_TransmitHouseUserCmd()$/;"	f	struct:req_TransmitHouseUserCmd
req_TransmitHouseUserCmd	tmpcode/commond.h	/^struct req_TransmitHouseUserCmd : public stHouseUserCmd$/;"	s
req_rtChunYunListCmd	tmpcode/commond.h	/^        req_rtChunYunListCmd()$/;"	f	struct:req_rtChunYunListCmd
req_rtChunYunListCmd	tmpcode/commond.h	/^struct req_rtChunYunListCmd : public stChatUserCmd$/;"	s
requestIP	Robot/LoginClient.cpp	/^bool LoginClient::requestIP()$/;"	f	class:LoginClient
requestLogin	FLServer/LoginTask.cpp	/^bool LoginTask::requestLogin(const Cmd::stUserRequestLoginCmd *ptCmd)$/;"	f	class:LoginTask
resAssignType	tmpcode/commond.h	/^	BYTE  resAssignType;  \/\/ÕÊº“—°‘Òµƒ‘ˆº”◊ ‘¥¿‡–Õ$/;"	m	struct:resourceInfo
reserve	ScenesServer/Quest.cpp	/^bool Vars::reserve()$/;"	f	class:Vars
reserve	ScenesServer/zCard.cpp	/^const stObjectLocation &zCard::reserve() const$/;"	f	class:zCard
reserve	ScenesServer/zObject.cpp	/^const stObjectLocation &zObject::reserve() const$/;"	f	class:zObject
reserve	base/Command.h	/^  DWORD reserve;    \/\/±£¡Ù◊÷∂Œ$/;"	m	struct:Cmd::stUserVerifyVerCmd
reserve	tmpcode/commond.h	/^	DWORD reserve;	\/\/±£¡Ù◊÷∂Œ$/;"	m	struct:stUserVerifyVerCmd
reset	ScenesServer/zObject.h	/^  void reset()$/;"	f	class:Equips
reset	base/zSocket.h	/^	inline void reset()$/;"	f	class:ByteBuffer
resetAllUseTime	ScenesServer/SkillManager.cpp	/^void UserSkillM::resetAllUseTime()$/;"	f	class:UserSkillM
resetAspeedRate	ScenesServer/SceneNpc.cpp	/^void SceneNpc::resetAspeedRate()$/;"	f	class:SceneNpc
resetAttackTimes	ScenesServer/CardPk.cpp	/^void zCard::resetAttackTimes()$/;"	f	class:zCard
resetMp	ScenesServer/ChallengeGame.h	/^	void resetMp()$/;"	f	class:MagicPoint
resetSpeedRate	ScenesServer/SceneEntryPk.h	/^    virtual void resetSpeedRate(){};$/;"	f	struct:SceneEntryPk
resetSpeedRate	ScenesServer/SceneNpc.cpp	/^void SceneNpc::resetSpeedRate()$/;"	f	class:SceneNpc
resetUseTime	ScenesServer/Skill.cpp	/^void zSkill::resetUseTime()$/;"	f	class:zSkill
resist	ScenesServer/SceneEntryPk.h	/^    BYTE resist;     \/\/\/Ê†ºÊ°£,Êúâ‰∏ÄÊ¨°ÊäµÂæ°‰º§ÂÆ≥ÁöÑÊú∫‰ºö$/;"	m	struct:SceneEntryPk
resource	tmpcode/commond.h	/^		DWORD resource;$/;"	m	struct:stRetUnionAndProInfo::__anon273
resource	tmpcode/commond.h	/^		DWORD resource;$/;"	m	struct:stRetUnionInfo::__anon271
resource	tmpcode/commond.h	/^		DWORD resource;$/;"	m	struct:stRetUnionNeedBuildProCmd::__anon275
resource	tmpcode/commond.h	/^		DWORD resource;$/;"	m	struct:stRetUnionProStateCmd::__anon274
resource	tmpcode/commond.h	/^	}resource[4];$/;"	m	struct:stRetUnionAndProInfo	typeref:struct:stRetUnionAndProInfo::__anon273
resource	tmpcode/commond.h	/^	}resource[4];$/;"	m	struct:stRetUnionNeedBuildProCmd	typeref:struct:stRetUnionNeedBuildProCmd::__anon275
resource	tmpcode/commond.h	/^	}resource[4];$/;"	m	struct:stRetUnionProStateCmd	typeref:struct:stRetUnionProStateCmd::__anon274
resource1	tmpcode/commond.h	/^	DWORD resource1;        \/\/ª˘µÿ◊ ‘¥$/;"	m	struct:stRetUnionBuildInfo
resource2	tmpcode/commond.h	/^	DWORD resource2;        \/\/ª˘µÿ◊ ‘¥$/;"	m	struct:stRetUnionBuildInfo
resourceID	tmpcode/commond.h	/^		DWORD resourceID;$/;"	m	struct:stChangeUnionResourceType::ResAssign
resourceID	tmpcode/commond.h	/^		DWORD resourceID;$/;"	m	struct:stUnionResourceAssign::ResAssign
resourceID	tmpcode/commond.h	/^	DWORD resourceID;   \/\/◊ ‘¥id$/;"	m	struct:stContributeResurceUnionCmd
resourceId	tmpcode/commond.h	/^	DWORD resourceId[2];$/;"	m	struct:stResidentData
resourceInfo	tmpcode/commond.h	/^struct resourceInfo$/;"	s
resourceRefine	tmpcode/commond.h	/^struct resourceRefine$/;"	s
resourceStore	tmpcode/commond.h	/^	DWORD resourceStore;            \/\/\/ ‘≠¡œø‚¥Ê$/;"	m	struct:resourceRefine
resourceType	tmpcode/commond.h	/^	BYTE resourceType;              \/\/\/ RESOURCE_TIMBER, RESOURCE_DUST, RESOURCE_IRON, RESOURCE_STONE$/;"	m	struct:stReqProcessResourceUnionCmd
resourceType	tmpcode/commond.h	/^	BYTE resourceType;              \/\/\/ RESOURCE_TIMBER, RESOURCE_DUST, RESOURCE_IRON, RESOURCE_STONE$/;"	m	struct:stReqResourceProcessUnionCmd
resourceType	tmpcode/commond.h	/^	BYTE resourceType;              \/\/\/ RESOURCE_TIMBER, RESOURCE_DUST, RESOURCE_IRON, RESOURCE_STONE$/;"	m	struct:stRetResourceProcessUnionCmd
resourceType	tmpcode/commond.h	/^	DWORD resourceType;                     $/;"	m	struct:stSetUnionResidentHireMoney
resourceType	tmpcode/commond.h	/^	DWORD resourceType;             \/\/÷µ£∫1£¨2$/;"	m	struct:stUnionResidentHireList
resourceType	tmpcode/commond.h	/^	DWORD resourceType;$/;"	m	struct:stReqUnionDelResidentReserve
resourceType	tmpcode/commond.h	/^	DWORD resourceType;$/;"	m	struct:stReqUnionHireResidentResource
resourceType	tmpcode/commond.h	/^	DWORD resourceType;$/;"	m	struct:stRetUnionResidentHireMoneyFail
resourceid	tmpcode/commond.h	/^	DWORD resourceid;   \/\/◊ ‘¥id$/;"	m	struct:resourceInfo
responseOther	SuperServer/ServerManager.cpp	/^void ServerManager::responseOther(const WORD srcID,const WORD wdServerID)$/;"	f	class:ServerManager
responseOther	SuperServer/ServerTask.cpp	/^void ServerTask::responseOther(const WORD wdServerID)$/;"	f	class:ServerTask
responseTime	tmpcode/commond.h	/^	WORD    responseTime;           \/\/œÏ”¶ ±º‰$/;"	m	struct:stUseMainPowerTankDamageCmd
restTime	tmpcode/commond.h	/^	DWORD restTime;              \/\/ £”‡ ±º‰$/;"	m	struct:stNotifyTransPropertyUserCmd
restTime	tmpcode/commond.h	/^	WORD restTime;$/;"	m	struct:stSeptPrepareTimeChallengeUserCmd
restitute	ScenesServer/SceneUser.cpp	/^void SceneUser::restitute()$/;"	f	class:SceneUser
restituteDurability	ScenesServer/zObject.cpp	/^void EquipPack::restituteDurability(SceneUser *pThis,const zRTime &ct)$/;"	f	class:EquipPack
restore	ScenesServer/zCard.cpp	/^void zCard::restore(const stObjectLocation &loc)$/;"	f	class:zCard
restore	ScenesServer/zObject.cpp	/^void zObject::restore(const stObjectLocation &loc)$/;"	f	class:zObject
restoreLife	ScenesServer/CardPk.cpp	/^void zCard::restoreLife(DWORD hp)$/;"	f	class:zCard
restorecard	BillServer/BillUser.cpp	/^bool BillUser::restorecard()$/;"	f	class:BillUser
restoregold	BillServer/BillUser.cpp	/^bool BillUser::restoregold()$/;"	f	class:BillUser
result	BillServer/BillCallback.h	/^  int            result;                                      \/\/‰∫§ÊòìÁªìÊûú,1ÊàêÂäü,0Â§±Ë¥•$/;"	m	struct:BillData
result	base/Command.h	/^        WORD result;\/\/Êï∞ÂÄº$/;"	m	struct:Cmd::stSelectReturnStatesPropertyUserCmd::__anon93::__anon94::__anon95
result	tmpcode/commond.h	/^				WORD result;\/\/ ˝÷µ$/;"	m	struct:stSelectReturnStatesPropertyUserCmd::__anon230::__anon231::__anon232
result	tmpcode/commond.h	/^	BYTE result;            \/\/\/ Ω·π˚(0£∫≥…π¶ 1£∫ ß∞‹ 2£∫Ãÿ ‚«øªØ≥…π¶)$/;"	m	struct:stEquipIntnedsifyResult
result	tmpcode/commond.h	/^	WORD result;\/\/ ˝÷µ$/;"	m	struct:stDanceTime
result	tmpcode/commond.h	/^	bool result;       \/\/≤¬»≠Ω·π˚   $/;"	m	struct:stGuessBarkeeperState
result	tmpcode/commond.h	/^	bool result; $/;"	m	struct:stRetCatchEndUserCmd
result	tmpcode/commond.h	/^        BYTE result;    \/\/0  ß∞‹£¨ 1 ≥…π¶$/;"	m	struct:stHorseSoulEvolveResultUserCmd
result	tmpcode/commond.h	/^        ResultScoreAndExp result[0];\/\/»ÀŒÔ√˚◊÷∫Õª˝∑÷$/;"	m	struct:stSendResultListLuoRiCmd
result	tmpcode/commond.h	/^    BYTE result;    \/\/0  ß∞‹£¨ 1 ≥…π¶$/;"	m	struct:stHorseMaterialEvolveResultUserCmd
result	tmpcode/commond.h	/^    BYTE result; \/\/ 0 :  ß∞‹-‘≠¡œ±£¡Ù£¨ 1 :  ß∞‹--ø€≥˝‘≠¡œ    2 : ≥…π¶$/;"	m	struct:stEvolveHorseResultUserCmd
result	tmpcode/commond.h	/^    bool result;$/;"	m	struct:stRetCatchLingQiEndUserCmd
resumehp	base/CharBase.h	/^  DWORD resumehp;            \/\/\/ ÁîüÂëΩÂÄºÊÅ¢Â§ç *$/;"	m	struct:CharState
resumehp	base/Command.h	/^  DWORD resumehp;          \/\/\/ ÁîüÂëΩÂÄºÊÅ¢Â§ç$/;"	m	struct:Cmd::t_MainUserData
resumehp	tmpcode/commond.h	/^	DWORD resumehp;					\/\/\/ …˙√¸÷µª÷∏¥$/;"	m	struct:t_MainUserData
resumemp	base/CharBase.h	/^  DWORD resumemp;            \/\/\/ Ê≥ïÊúØÂÄºÊÅ¢Â§ç *$/;"	m	struct:CharState
resumemp	base/Command.h	/^  DWORD resumemp;          \/\/\/ Ê≥ïÊúØÂÄºÊÅ¢Â§ç$/;"	m	struct:Cmd::t_MainUserData
resumemp	tmpcode/commond.h	/^	DWORD resumemp;					\/\/\/ ∑® ı÷µª÷∏¥$/;"	m	struct:t_MainUserData
resumesp	base/CharBase.h	/^  DWORD resumesp;                  \/\/\/ ‰ΩìÂäõÊÅ¢Â§çÂÄº *$/;"	m	struct:CharState
resumesp	base/Command.h	/^  DWORD resumesp;          \/\/\/ ‰ΩìÂäõÂÄºÊÅ¢Â§ç$/;"	m	struct:Cmd::t_MainUserData
resumesp	tmpcode/commond.h	/^	DWORD resumesp;					\/\/\/ ÃÂ¡¶÷µª÷∏¥$/;"	m	struct:t_MainUserData
ret	ScenesServer/SceneManager.cpp	/^    Scene *ret;$/;"	m	class:GetSceneByFileName
ret	base/Command.h	/^  BYTE ret;\/\/0ÔºöÊãíÁªù 1ÔºöÂêåÊÑè$/;"	m	struct:Cmd::stConsignRetCartoonCmd
ret	base/MiniCommand.h	/^      BYTE ret;$/;"	m	struct:Cmd::Mini::t_Scene_Deposit_Ret
ret	base/MiniCommand.h	/^      DWORD ret;\/\/0Â§±Ë¥• 1ÊàêÂäü 2Áé©ÂÆ∂‰∏çÂú®Á∫ø$/;"	m	struct:Cmd::Mini::t_Scene_Draw_Ret
ret	base/RolechangeCommand.h	/^	BYTE ret;   \/\/0,≤ª‘⁄œﬂ$/;"	m	struct:Cmd::Rolechange::t_OverZoneRet_ChatCmd
ret	base/SessionCommand.h	/^      BYTE ret;\/\/0ÔºöÊãíÁªù 1ÔºöÂêåÊÑè 2ÔºöÂ∑≤ÁªèÈ¢ÜÂÖª5‰∏™‰∫Ü$/;"	m	struct:Cmd::Session::t_consignRetCartoon_SceneSession
ret	base/UserCommand.h	/^      int     ret;            \/\/ÂëΩ‰ª§ËøîÂõû‰ª£Á†Å$/;"	m	struct:Cmd::UserServer::t_cmd_ret
ret	tmpcode/commond.h	/^		BYTE ret;             \/\/1Õ¨“‚ 0≤ªÕ¨“‚$/;"	m	struct:stAnswerDance
ret	tmpcode/commond.h	/^	BYTE ret;         \/\/\/ 0 ∑¢◊º±∏ªπ≥µœ˚œ¢£¨ 1∑¢ªπ≥µœ˚œ¢$/;"	m	struct:stReturnTankCmd
ret	tmpcode/commond.h	/^	BYTE ret;       \/\/ 0 ±Ì ææ‹æ¯  1 ±Ì æÕ¨“‚$/;"	m	struct:stRetJoinLTQUserCmd
ret	tmpcode/commond.h	/^	BYTE ret;     \/\/0:∆’Õ®œ¬≥µ(≥µƒ⁄ªπ”–»À) 1:◊Ó∫Û“ª»À◊º±∏œ¬≥µ£¨ 2:º∆ ±5√Î,◊Ó∫Û“ª»Àœ¬≥µ$/;"	m	struct:stGetOffTankCmd
ret	tmpcode/commond.h	/^	BYTE ret;   \/\/ 1Õ¨“‚£¨0æ‹æ¯$/;"	m	struct:stReplyRequestGetOnTank
ret	tmpcode/commond.h	/^	BYTE ret;\/\/0:æ‹æ¯ 1:Õ¨“‚$/;"	m	struct:stRetChallengeUserCmd
ret	tmpcode/commond.h	/^	BYTE ret;\/\/0≤ªÕ¨“‚ 1Õ¨“‚$/;"	m	struct:stInviteRetTankCmd
ret	tmpcode/commond.h	/^	int ret; \/\/0±Ì æ≥…π¶,-1±Ì æ√‹¬Î¥ÌŒÛ,-2”√ªß≤ª¥Ê‘⁄ -3”‡∂Ó≤ª◊„ ,-4µ¿æﬂø®≤ª¥Ê‘⁄,-5±æµ¿æﬂø®≤ªƒ‹‘⁄∏√«¯ π”√,-6µ¿æﬂø®≤ªƒ‹÷ÿ∏¥ π”√,-7◊®«¯ø®ø®∫≈¥ÌŒÛ,-8◊®«¯ø®√‹¬Î¥ÌŒÛ,-9 ˝æ›ø‚¥ÌŒÛ$/;"	m	struct:stRPointCard
retcode	FLServer/DBAccessCommand.h	/^      BYTE retcode;$/;"	m	struct:Cmd::DBAccess::t_ChangeServer_SessionCheck
retcode	FLServer/DBAccessCommand.h	/^      BYTE retcode;$/;"	m	struct:Cmd::DBAccess::t_LoginServer_SessionCheck
retcode	base/BillCommand.h	/^      BYTE retcode;$/;"	m	struct:Cmd::Bill::t_LoginVerify_Gateway_Return
retcode	base/RecordCommand.h	/^      BYTE retcode;            \/\/\/ ËøîÂõû‰ª£Á†ÅÔºå0Ë°®Á§∫Âà†Èô§ËßíËâ≤Â§±Ë¥•Ôºå1Ë°®Á§∫Âà†Èô§ËßíËâ≤ÊàêÂäü$/;"	m	struct:Cmd::Record::t_DelChar_Return_GateRecord
retcode	base/RecordCommand.h	/^      BYTE retcode;            \/\/\/ ËøîÂõû‰ª£Á†ÅÔºå0Ë°®Á§∫Â§±Ë¥•ÔºåËßíËâ≤ÂêçÁß∞ÈáçÂ§çÔºå1Ë°®Á§∫ÂàõÂª∫ËßíËâ≤ÊàêÂäü$/;"	m	struct:Cmd::Record::t_CreateChar_Return_GateRecord
retcode	base/SceneCommand.h	/^      BYTE retcode;$/;"	m	struct:Cmd::Scene::t_Unreg_LoginScene
retcode	base/SessionCommand.h	/^      BYTE retcode;$/;"	m	struct:Cmd::Session::t_unregUser_GateSession
retcode	base/SessionCommand.h	/^      BYTE retcode;$/;"	m	struct:Cmd::Session::t_unregUser_SceneSession
returnKind	tmpcode/commond.h	/^	BYTE returnKind;	\/\/∑˛ŒÒ∆˜∑µªÿµƒ¿‡–Õ,π∫¬Ú ±œﬁ,◊„πªΩ«Æ,π∫¬Ú≥…π¶$/;"	m	struct:stReturnFromServerUserCmd
returnResult	tmpcode/commond.h	/^	BYTE returnResult;	\/\/SET_YES,SET_NO$/;"	m	struct:stReturnFromServerUserCmd
returnTime	tmpcode/commond.h	/^	QWORD   returnTime;             \/\/πÈªπ ±º‰£¨“‘sŒ™µ•Œª$/;"	m	struct:TankData
returnToRegion	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::returnToRegion()$/;"	f	class:NpcAIController
return_send_user	RecordServer/RecordTask.cpp	/^void RecordTask::return_send_user(DWORD tozone, DWORD accid, DWORD userid, DWORD type, DWORD state, const char* name)$/;"	f	class:RecordTask
return_type	tmpcode/commond.h	/^	BYTE return_type;               \/\/∑µªÿ¥Úø™±¶∫–Ω·π˚$/;"	m	struct:ReturnOpenBoxPropertyUserCmd
retype	tmpcode/commond.h	/^    DWORD retype;       \/\/∑µªÿ≥…π¶¿‡–Õ$/;"	m	struct:ReturnFocusPropertyUserCmd
revCmd	ScenesServer/SkillStatusManager.h	/^    Cmd::stCardAttackMagicUserCmd revCmd;$/;"	m	struct:SkillStatusCarrier
revCmd	SessionServer/SessionTask.cpp	/^  Cmd::stChannelChatUserCmd * revCmd;$/;"	m	struct:EveryUserSessionAction
revCmd	SessionServer/SessionTask.cpp	/^  Cmd::stChannelChatUserCmd * revCmd;$/;"	m	struct:broadcastToEveryUser
revState	tmpcode/commond.h	/^    DWORD revState; \/\/ Ω”»°◊¥Ã¨ 0 Œ¥Ω”, 1 “—Ω”$/;"	m	struct:CityQuestInfo
revenge_time	base/Command.h	/^  DWORD revenge_time;$/;"	m	struct:Cmd::stRelation
revenge_time	tmpcode/commond.h	/^	DWORD revenge_time;  \/\/∏¥≥∆⁄œﬁ$/;"	m	struct:stRelation
reversedirect_screen	GatewayServer/ScreenIndex.h	/^	NineScreen_map reversedirect_screen[8];$/;"	m	class:ScreenIndex
reversedirect_screen	ScenesServer/zSceneEntryIndex.h	/^    NineScreen_map reversedirect_screen[8];$/;"	m	class:zSceneEntryIndex
revivalNum	tmpcode/commond.h	/^	WORD revivalNum;		\/\/µ•¥Œæ»‘Æ¿€º∆$/;"	m	struct:stPopoScore
revivalScore	tmpcode/commond.h	/^	WORD revivalScore;		\/\/µ•¥Œæ»‘Æ¿€º∆$/;"	m	struct:stBaseScore
revivalScore	tmpcode/commond.h	/^	WORD revivalScore;		\/\/µ•¥Œæ»‘Æ¿€º∆∑÷ ˝$/;"	m	struct:stPopoScore
reward	base/xmlparser/test.h	/^    xml_node<Reward>	reward;$/;"	m	struct:TestConfig
reward	tmpcode/commond.h	/^        DWORD reward;           \/\/∏√»ŒŒÒ»Áπ˚ «¥˙◊ˆ»ŒŒÒ,‘Ú∑¢ÀÕ∆‰¥˙◊ˆµƒ≥Í¿Õ$/;"	m	struct:showPeronTaskUserCmd
reward	tmpcode/commond.h	/^        DWORD reward; \/\/µ±_byType=45 ±”––ß$/;"	m	struct:stConfirmIssuedQuestUserCmd
reward	tmpcode/commond.h	/^        DWORD reward;$/;"	m	struct:stNotifyFinishedIssueQuestUserCmd
rewardCount	tmpcode/commond.h	/^	WORD rewardCount;           \/\/ø…¡Ï»°Ω±¿¯∏ˆ ˝$/;"	m	struct:stRet_PromoterRewardUserCmd
rewardFactor	tmpcode/commond.h	/^		BYTE  rewardFactor; \/\/»ŒŒÒΩ±¿¯$/;"	m	struct:stRetRapidSelectQuestUserCmd::acceptQuest
rewardFactor	tmpcode/commond.h	/^	BYTE  rewardFactor;		\/\/∏√»ŒŒÒµƒΩ±¿¯œµ ˝$/;"	m	struct:stSingleSelectQuestUserCmd
rewardInfo	tmpcode/commond.h	/^	}rewardInfo[0];$/;"	m	struct:stRet_PromoterRewardUserCmd	typeref:struct:stRet_PromoterRewardUserCmd::Reward
rewardNum	tmpcode/commond.h	/^	DWORD rewardNum;\/\/ΩÒÃÏ¡Ï»°µƒ ˝¡ø$/;"	m	struct:stNotifyShenLongReward
rewardNum	tmpcode/commond.h	/^	DWORD rewardNum;\/\/ΩÒÃÏ¡Ï»°µƒ ˝¡ø$/;"	m	struct:stReqShenLongReward
rewardPerTask	tmpcode/commond.h	/^	DWORD	rewardPerTask;									\/\/ »ŒŒÒµ•∏ˆΩ±¿¯$/;"	m	struct:stHomeItem
rewardPerTask	tmpcode/commond.h	/^	DWORD	rewardPerTask;                 \/\/»ŒŒÒ Ω±Ω µ•º€ $/;"	m	struct:HomeMapData
rewardRate	tmpcode/commond.h	/^    WORD  rewardRate;\/\/Ω±¿¯±∂ ˝     $/;"	m	struct:stResultCheckGoodsCmd
rewardRate	tmpcode/commond.h	/^    WORD rewardRate;\/\/Ω±¿¯±∂ ˝$/;"	m	struct:rtGuardGoodsSeptCmd
rewardType	tmpcode/commond.h	/^		BYTE  rewardType;	\/\/ 1 -- Ω Ù±“; 2 -- ÀÆæß±“$/;"	m	struct:showPeronTaskUserCmd
rewardType	tmpcode/commond.h	/^		BYTE rewardType;                \/\/≥Í¿Õ¿‡–Õ$/;"	m	struct:stReceiveIssuedQuestUserCmd
rewardType	tmpcode/commond.h	/^		BYTE rewardType;$/;"	m	struct:stNotifyFinishedIssueQuestUserCmd
rgb	base/Command.h	/^    DWORD rgb;          \/**< È¢úËâ≤Ê†áÂøó0x00rrggbb *\/$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
rgb	tmpcode/commond.h	/^		DWORD rgb;					\/**< —’…´±Í÷æ0x00rrggbb *\/$/;"	m	struct:stClientNewMap
rgm	base/zRegex.h	/^	regmatch_t rgm[32];$/;"	m	class:zRegex
rhp_s2000	base/Card.h	/^    BYTE rhp_s2000;$/;"	m	struct:t_CardPK
rhp_s2001	base/Card.h	/^    BYTE rhp_s2001;$/;"	m	struct:t_CardPK
rhp_s2002	base/Card.h	/^    BYTE rhp_s2002;$/;"	m	struct:t_CardPK
rhp_s2003	base/Card.h	/^    BYTE rhp_s2003;$/;"	m	struct:t_CardPK
ride	ScenesServer/SceneUser.cpp	/^bool SceneUser::ride(Cmd::stRideMapScreenUserCmd *rev)$/;"	f	class:SceneUser
rightNum	tmpcode/commond.h	/^	WORD rightNum;$/;"	m	struct:stRetRecallMasterInfo
ringID	tmpcode/commond.h	/^    DWORD ringID;   \/\/º” ˝ª∑µƒid$/;"	m	struct:stUseAddRingUserCmd
road	tmpcode/commond.h	/^	BYTE road;              \/\/\/ ¬∑œﬂ(∂‘”¶”⁄≈‰÷√Œƒº˛)$/;"	m	struct:CityGuard
roleChangeConfile	roleChangeServer/roleChangeServer.cpp	/^class roleChangeConfile:public zConfile$/;"	c
roleChangeService	roleChangeServer/roleChangeServer.cpp	/^roleChangeService::roleChangeService()$/;"	f	class:roleChangeService
roleChangeService	roleChangeServer/roleChangeServer.h	/^class roleChangeService : public Singleton<roleChangeService>, public zMNetService$/;"	c
roleExist	Robot/Client.h	/^    bool roleExist;$/;"	m	struct:ClientBase
roleRegConfile	roleRegServer/roleRegServer.cpp	/^class roleRegConfile:public zConfile$/;"	c
roleRegService	roleRegServer/roleRegServer.cpp	/^roleRegService::roleRegService()$/;"	f	class:roleRegService
roleRegService	roleRegServer/roleRegServer.h	/^class roleRegService : public Singleton<roleRegService>, public zMNetService$/;"	c
role_num	Robot/Client.h	/^    BYTE role_num;$/;"	m	struct:ClientBase
rolechangeClientPool	SuperServer/RolechangeClientManager.h	/^    zTCPClientTaskPool *rolechangeClientPool;$/;"	m	class:RolechangeClientManager
roleregClientPool	SuperServer/RoleregClientManager.h	/^    zTCPClientTaskPool *roleregClientPool;$/;"	m	class:RoleregClientManager
rolereg_verify	GatewayServer/GatewayServer.h	/^	bool rolereg_verify;$/;"	m	class:GatewayService
roomBank	tmpcode/commond.h	/^	DWORD roomBank;         \/\/¥Ê»Îµƒ∑ø◊‚◊‹ ˝$/;"	m	struct:HouseRoomData
roomCount	tmpcode/commond.h	/^	BYTE  roomCount;                \/\/∑øº‰∏ˆ ˝$/;"	m	struct:st_RetManageHouseUserCmd
roomCount	tmpcode/commond.h	/^	BYTE roomCount; \/\/∑øº‰◊‹ ˝¡ø:Œ‘ “±‡∫≈¥”1µΩroomCount$/;"	m	struct:rt_memberListHouseUserCmd
roomCount	tmpcode/commond.h	/^    WORD roomCount; \/\/∑øº‰◊‹ ˝$/;"	m	struct:stRoomInfoQuestRoomUserCmd
roomID	tmpcode/commond.h	/^	BYTE  roomID;   \/\/¥´ÀÕ’ÛÀ˘‘⁄∑øº‰$/;"	m	struct:req_TransmitHouseUserCmd
roomID	tmpcode/commond.h	/^	BYTE  roomID;$/;"	m	struct:st_rt_DestroyObjectHouseUserCmd
roomID	tmpcode/commond.h	/^	BYTE  roomID;\/\/100-øÕÃ¸£¨110-ª®‘∞$/;"	m	struct:RoomMemberInfo
roomID	tmpcode/commond.h	/^	BYTE roomID;			\/\/ ∑øº‰ID 1-6$/;"	m	struct:HouseRoomData
roomID	tmpcode/commond.h	/^	BYTE roomID;	\/\/$/;"	m	struct:rt_ObjectsHouseUserCmd
roomID	tmpcode/commond.h	/^	BYTE roomID;	\/\/∑øº‰ID$/;"	m	struct:st_rt_MoveObjectHouseUserCmd
roomID	tmpcode/commond.h	/^	BYTE roomID;	\/\/ƒø±Í∑øº‰ 1--6  øÕÃ¸100 ª®‘∞ 110$/;"	m	struct:st_PlaceObjectHouseUserCmd
roomID	tmpcode/commond.h	/^	BYTE roomID;	\/\/ƒø±Í∑øº‰$/;"	m	struct:rt_AddObjectHouseUserCmd
roomID	tmpcode/commond.h	/^	BYTE roomID;    \/\/ŒÔ∆∑À˘‘⁄∑øº‰$/;"	m	struct:rt_ObjVisitHouseUserCmd
roomID	tmpcode/commond.h	/^	BYTE roomID;$/;"	m	struct:reqGoToBedHouseUserCmd
roomID	tmpcode/commond.h	/^	BYTE roomID;$/;"	m	struct:req_ObjVisitHouseUserCmd
roomID	tmpcode/commond.h	/^	DWORD roomID;	\/\/∑øº‰±‡∫≈$/;"	m	struct:RoomInfo
roomID	tmpcode/commond.h	/^	DWORD roomID;                           \/\/∑øº‰ID$/;"	m	struct:LinkInfo
roomID	tmpcode/commond.h	/^	DWORD roomID;                           \/\/∑øº‰ID$/;"	m	struct:stSendCountryInviteQuestRoomUserCmd
roomID	tmpcode/commond.h	/^	DWORD roomID;$/;"	m	struct:stChangeMasterQuestRoomUserCmd
roomID	tmpcode/commond.h	/^	DWORD roomID;$/;"	m	struct:stChangeMemQuestRoomUserCmd
roomID	tmpcode/commond.h	/^	DWORD roomID;$/;"	m	struct:stKickMemQuestRoomUserCmd
roomID	tmpcode/commond.h	/^	DWORD roomID;$/;"	m	struct:stLeaveRoomQuestRoomUserCmd
roomID	tmpcode/commond.h	/^	DWORD roomID;$/;"	m	struct:stRequestRoomMemDetailQuestRoomUserCmd
roomID	tmpcode/commond.h	/^	DWORD roomID;$/;"	m	struct:stStartQuestQuestRoomUserCmd
roomID	tmpcode/commond.h	/^    BYTE roomID;    \/\/$/;"	m	struct:rt_AllFlowerHouseUserCmd
roomID	tmpcode/commond.h	/^    BYTE roomID; $/;"	m	struct:rt_InsertFlowerHouseUserCmd
roomID	tmpcode/commond.h	/^    DWORD roomID;                           \/\/∑øº‰ID$/;"	m	struct:stInviteQuestRoomUserCmd
roomID	tmpcode/commond.h	/^    DWORD roomID;           \/\/∑øº‰ID$/;"	m	struct:stJoinQuestRoomUserCmd
roomID	tmpcode/commond.h	/^    DWORD roomID;   \/\/∑øº‰ID$/;"	m	struct:stReqCountryInviteQuestMapUserCmd
roomID	tmpcode/commond.h	/^    DWORD roomID; $/;"	m	struct:stOneRoomAllInfoQuestRoomUserCmd
roomID	tmpcode/commond.h	/^    DWORD roomID; $/;"	m	struct:stRoomMemDetailQuestRoomUserCmd
roomID	tmpcode/commond.h	/^    DWORD roomID;$/;"	m	struct:stNewMasterQuestRoomUserCmd
roomLevel	tmpcode/commond.h	/^	DWORD	roomLevel;                     \/\/Œ‘ “µ»º∂$/;"	m	struct:HomeMapData
roomLevel	tmpcode/commond.h	/^	DWORD roomLevel;$/;"	m	struct:stModifyHomeDataUserCmd
roomerID	tmpcode/commond.h	/^	DWORD roomerID;         \/\/»ÀŒÔ ˝æ›ø‚ID $/;"	m	struct:HouseRoomData
roomerName	tmpcode/commond.h	/^	char roomerName[MAX_NAMESIZE+1];$/;"	m	struct:HouseRoomData
roomerName	tmpcode/commond.h	/^	struct roomerName$/;"	s	struct:st_RetRoomerNameHouseUserCmd
round	tmpcode/commond.h	/^	BYTE round;\/\/÷ÿ…˙ $/;"	m	struct:LingQiData
round	tmpcode/commond.h	/^    BYTE round;\/\/÷ÿ…˙ $/;"	m	struct:LingQiWatchData
rounds	base/EncDec/EncDec.h	/^	int rounds;$/;"	m	struct:rc5_key_st
rounds	base/EncDec/myrc5.h	/^	int rounds;$/;"	m	struct:rc5_key_st
roundtime	base/xmlparser/battle.h	/^        xml_prop<DWORD>	roundtime;$/;"	m	struct:BattleConfig::Limit
rowNum	tmpcode/commond.h	/^    BYTE rowNum;\/\/∑≈µ⁄º∏––$/;"	m	struct:stMoveGoodsToGuardSeptCmd
rowNum	tmpcode/commond.h	/^    BYTE rowNum;\/\/–– ˝$/;"	m	struct:rtGuardGoodsSeptCmd
rpupdam	ScenesServer/ScenePk.h	/^      SWORD rpupdam;    \/\/Ê£çÂ≠êÁ±ªÂ¢ûÂä†Áâ©ÁêÜÊîªÂáªÂäõÂõ∫ÂÆöÂÄº(Ë¢´Âä®)$/;"	m	struct:SkillState::__anon155::__anon156
rqAchievementCmd	tmpcode/commond.h	/^    rqAchievementCmd()$/;"	f	struct:rqAchievementCmd
rqAchievementCmd	tmpcode/commond.h	/^struct rqAchievementCmd : public stDataUserCmd$/;"	s
rqAreaDataHouseUserCmd	tmpcode/commond.h	/^    rqAreaDataHouseUserCmd()     $/;"	f	struct:rqAreaDataHouseUserCmd
rqAreaDataHouseUserCmd	tmpcode/commond.h	/^struct rqAreaDataHouseUserCmd : public stHouseUserCmd$/;"	s
rqAutoCfgHappyCardBoxUserCmd	tmpcode/commond.h	/^	rqAutoCfgHappyCardBoxUserCmd()$/;"	f	struct:rqAutoCfgHappyCardBoxUserCmd
rqAutoCfgHappyCardBoxUserCmd	tmpcode/commond.h	/^struct rqAutoCfgHappyCardBoxUserCmd: public stWeekBoxUserCmd$/;"	s
rqBlessListUserCmd	tmpcode/commond.h	/^	rqBlessListUserCmd()            $/;"	f	struct:rqBlessListUserCmd
rqBlessListUserCmd	tmpcode/commond.h	/^struct rqBlessListUserCmd : public stDataUserCmd$/;"	s
rqBuyHouseUserCmd	tmpcode/commond.h	/^	rqBuyHouseUserCmd()$/;"	f	struct:rqBuyHouseUserCmd
rqBuyHouseUserCmd	tmpcode/commond.h	/^struct rqBuyHouseUserCmd : public stHouseUserCmd$/;"	s
rqDevelopUpdateUserCmd	tmpcode/commond.h	/^    rqDevelopUpdateUserCmd()$/;"	f	struct:rqDevelopUpdateUserCmd
rqDevelopUpdateUserCmd	tmpcode/commond.h	/^struct rqDevelopUpdateUserCmd : public stDataUserCmd$/;"	s
rqDrawCardHappyCardBoxUserCmd	tmpcode/commond.h	/^	rqDrawCardHappyCardBoxUserCmd()$/;"	f	struct:rqDrawCardHappyCardBoxUserCmd
rqDrawCardHappyCardBoxUserCmd	tmpcode/commond.h	/^struct rqDrawCardHappyCardBoxUserCmd: public stWeekBoxUserCmd$/;"	s
rqEnterHouseUserCmd	tmpcode/commond.h	/^	rqEnterHouseUserCmd()$/;"	f	struct:rqEnterHouseUserCmd
rqEnterHouseUserCmd	tmpcode/commond.h	/^struct rqEnterHouseUserCmd : public stHouseUserCmd$/;"	s
rqEquipSortListUserCmd	tmpcode/commond.h	/^    rqEquipSortListUserCmd()$/;"	f	struct:rqEquipSortListUserCmd
rqEquipSortListUserCmd	tmpcode/commond.h	/^struct rqEquipSortListUserCmd : public stDataUserCmd$/;"	s
rqGetBlessRewardUserCmd	tmpcode/commond.h	/^	rqGetBlessRewardUserCmd()                                       $/;"	f	struct:rqGetBlessRewardUserCmd
rqGetBlessRewardUserCmd	tmpcode/commond.h	/^struct rqGetBlessRewardUserCmd : public stDataUserCmd                           $/;"	s
rqGetRewardHappyCardBoxUserCmd	tmpcode/commond.h	/^	rqGetRewardHappyCardBoxUserCmd()$/;"	f	struct:rqGetRewardHappyCardBoxUserCmd
rqGetRewardHappyCardBoxUserCmd	tmpcode/commond.h	/^struct rqGetRewardHappyCardBoxUserCmd: public stWeekBoxUserCmd$/;"	s
rqGetTempRewardUserCmd	tmpcode/commond.h	/^    rqGetTempRewardUserCmd()$/;"	f	struct:rqGetTempRewardUserCmd
rqGetTempRewardUserCmd	tmpcode/commond.h	/^struct rqGetTempRewardUserCmd : public stDataUserCmd$/;"	s
rqJoinHouseUserCmd	tmpcode/commond.h	/^	rqJoinHouseUserCmd()$/;"	f	struct:rqJoinHouseUserCmd
rqJoinHouseUserCmd	tmpcode/commond.h	/^struct rqJoinHouseUserCmd : public stHouseUserCmd$/;"	s
rqPromoterInfoUserCmd	tmpcode/commond.h	/^    rqPromoterInfoUserCmd()$/;"	f	struct:rqPromoterInfoUserCmd
rqPromoterInfoUserCmd	tmpcode/commond.h	/^struct rqPromoterInfoUserCmd : public stDataUserCmd$/;"	s
rqQuitHouseUserCmd	tmpcode/commond.h	/^	rqQuitHouseUserCmd()$/;"	f	struct:rqQuitHouseUserCmd
rqQuitHouseUserCmd	tmpcode/commond.h	/^struct rqQuitHouseUserCmd : public stHouseUserCmd$/;"	s
rqRefreshHappyCardBoxUserCmd	tmpcode/commond.h	/^	rqRefreshHappyCardBoxUserCmd()$/;"	f	struct:rqRefreshHappyCardBoxUserCmd
rqRefreshHappyCardBoxUserCmd	tmpcode/commond.h	/^struct rqRefreshHappyCardBoxUserCmd: public stWeekBoxUserCmd$/;"	s
rqRegEquipSortListUserCmd	tmpcode/commond.h	/^    rqRegEquipSortListUserCmd()$/;"	f	struct:rqRegEquipSortListUserCmd
rqRegEquipSortListUserCmd	tmpcode/commond.h	/^struct rqRegEquipSortListUserCmd : public stDataUserCmd$/;"	s
rqSendAccelChat	tmpcode/commond.h	/^    rqSendAccelChat()$/;"	f	struct:rqSendAccelChat
rqSendAccelChat	tmpcode/commond.h	/^struct rqSendAccelChat : public stChatUserCmd$/;"	s
rqShenYuInfoUserCmd	tmpcode/commond.h	/^    rqShenYuInfoUserCmd()$/;"	f	struct:rqShenYuInfoUserCmd
rqShenYuInfoUserCmd	tmpcode/commond.h	/^struct rqShenYuInfoUserCmd:public stMapScreenUserCmd$/;"	s
rqTakeCareShenMuCountryCmd	tmpcode/commond.h	/^    rqTakeCareShenMuCountryCmd()$/;"	f	struct:rqTakeCareShenMuCountryCmd
rqTakeCareShenMuCountryCmd	tmpcode/commond.h	/^struct rqTakeCareShenMuCountryCmd : public stCountryUserCmd$/;"	s
rqTempListUserCmd	tmpcode/commond.h	/^    rqTempListUserCmd()                     $/;"	f	struct:rqTempListUserCmd
rqTempListUserCmd	tmpcode/commond.h	/^struct rqTempListUserCmd : public stDataUserCmd$/;"	s
rq_stCloseHappyCardBoxUserCmd	tmpcode/commond.h	/^	rq_stCloseHappyCardBoxUserCmd()$/;"	f	struct:rq_stCloseHappyCardBoxUserCmd
rq_stCloseHappyCardBoxUserCmd	tmpcode/commond.h	/^struct rq_stCloseHappyCardBoxUserCmd: public stWeekBoxUserCmd$/;"	s
rst_CurAchievementHonorCmd	tmpcode/commond.h	/^    rst_CurAchievementHonorCmd()$/;"	f	struct:rst_CurAchievementHonorCmd
rst_CurAchievementHonorCmd	tmpcode/commond.h	/^struct rst_CurAchievementHonorCmd : public stDataUserCmd$/;"	s
rtAchievementCmd	tmpcode/commond.h	/^    rtAchievementCmd()$/;"	f	struct:rtAchievementCmd
rtAchievementCmd	tmpcode/commond.h	/^struct rtAchievementCmd : public stDataUserCmd$/;"	s
rtAchievementItemCmd	tmpcode/commond.h	/^    rtAchievementItemCmd()$/;"	f	struct:rtAchievementItemCmd
rtAchievementItemCmd	tmpcode/commond.h	/^struct rtAchievementItemCmd : public stDataUserCmd$/;"	s
rtAreaDataHouseUserCmd	tmpcode/commond.h	/^    rtAreaDataHouseUserCmd()$/;"	f	struct:rtAreaDataHouseUserCmd
rtAreaDataHouseUserCmd	tmpcode/commond.h	/^struct rtAreaDataHouseUserCmd : public stHouseUserCmd$/;"	s
rtBlessListUserCmd	tmpcode/commond.h	/^        rtBlessListUserCmd()$/;"	f	struct:rtBlessListUserCmd
rtBlessListUserCmd	tmpcode/commond.h	/^struct rtBlessListUserCmd : public stDataUserCmd$/;"	s
rtCallTuDiMapScreenUserCmd	tmpcode/commond.h	/^        rtCallTuDiMapScreenUserCmd()$/;"	f	struct:rtCallTuDiMapScreenUserCmd
rtCallTuDiMapScreenUserCmd	tmpcode/commond.h	/^struct rtCallTuDiMapScreenUserCmd : public stRecommendUserCmd$/;"	s
rtChunYunInfo	tmpcode/commond.h	/^        rtChunYunInfo()$/;"	f	struct:rtChunYunInfo
rtChunYunInfo	tmpcode/commond.h	/^struct rtChunYunInfo : public stMapScreenUserCmd$/;"	s
rtCityFightRule	tmpcode/commond.h	/^	rtCityFightRule()$/;"	f	struct:rtCityFightRule
rtCityFightRule	tmpcode/commond.h	/^struct rtCityFightRule:public stMapScreenUserCmd$/;"	s
rtConsumeHappyCardBoxUserCmd	tmpcode/commond.h	/^	rtConsumeHappyCardBoxUserCmd()$/;"	f	struct:rtConsumeHappyCardBoxUserCmd
rtConsumeHappyCardBoxUserCmd	tmpcode/commond.h	/^struct rtConsumeHappyCardBoxUserCmd: public stWeekBoxUserCmd$/;"	s
rtDefence	tmpcode/commond.h	/^	stReturnDefenceList  rtDefence; \/**◊‘º∫µƒø€—™–≈œ¢<*\/$/;"	m	struct:stToDefAttackMagicUserCmd
rtDropGuardGoodsSeptCmd	tmpcode/commond.h	/^    rtDropGuardGoodsSeptCmd()$/;"	f	struct:rtDropGuardGoodsSeptCmd
rtDropGuardGoodsSeptCmd	tmpcode/commond.h	/^struct rtDropGuardGoodsSeptCmd : public stSeptUserCmd$/;"	s
rtEquipSortListUserCmd	tmpcode/commond.h	/^    rtEquipSortListUserCmd()$/;"	f	struct:rtEquipSortListUserCmd
rtEquipSortListUserCmd	tmpcode/commond.h	/^struct rtEquipSortListUserCmd : public stDataUserCmd$/;"	s
rtGetAchievementHonorCmd	tmpcode/commond.h	/^    rtGetAchievementHonorCmd()$/;"	f	struct:rtGetAchievementHonorCmd
rtGetAchievementHonorCmd	tmpcode/commond.h	/^struct rtGetAchievementHonorCmd : public stDataUserCmd$/;"	s
rtGiveGuardGoodsSeptCmd	tmpcode/commond.h	/^    rtGiveGuardGoodsSeptCmd()$/;"	f	struct:rtGiveGuardGoodsSeptCmd
rtGiveGuardGoodsSeptCmd	tmpcode/commond.h	/^struct rtGiveGuardGoodsSeptCmd : public stSeptUserCmd$/;"	s
rtGuardGoodsSeptCmd	tmpcode/commond.h	/^    rtGuardGoodsSeptCmd()$/;"	f	struct:rtGuardGoodsSeptCmd
rtGuardGoodsSeptCmd	tmpcode/commond.h	/^struct rtGuardGoodsSeptCmd : public stSeptUserCmd$/;"	s
rtHappyCardBoxUserCmd	tmpcode/commond.h	/^	rtHappyCardBoxUserCmd()$/;"	f	struct:rtHappyCardBoxUserCmd
rtHappyCardBoxUserCmd	tmpcode/commond.h	/^struct rtHappyCardBoxUserCmd: public stWeekBoxUserCmd$/;"	s
rtHorseDataCmd	tmpcode/commond.h	/^        rtHorseDataCmd()$/;"	f	struct:rtHorseDataCmd
rtHorseDataCmd	tmpcode/commond.h	/^struct rtHorseDataCmd : public stPetUserCmd$/;"	s
rtHorseLifeOverUserCmd	tmpcode/commond.h	/^    rtHorseLifeOverUserCmd()$/;"	f	struct:rtHorseLifeOverUserCmd
rtHorseLifeOverUserCmd	tmpcode/commond.h	/^struct rtHorseLifeOverUserCmd : public stPetUserCmd$/;"	s
rtKeyStateShenMiUserCmd	tmpcode/commond.h	/^    rtKeyStateShenMiUserCmd()$/;"	f	struct:rtKeyStateShenMiUserCmd
rtKeyStateShenMiUserCmd	tmpcode/commond.h	/^struct rtKeyStateShenMiUserCmd: public stQuestMapUserCmd$/;"	s
rtMobEscapeCountUserCmd	tmpcode/commond.h	/^    rtMobEscapeCountUserCmd()$/;"	f	struct:rtMobEscapeCountUserCmd
rtMobEscapeCountUserCmd	tmpcode/commond.h	/^struct rtMobEscapeCountUserCmd:public stMapScreenUserCmd$/;"	s
rtNameCardCmd	tmpcode/commond.h	/^        rtNameCardCmd()$/;"	f	struct:rtNameCardCmd
rtNameCardCmd	tmpcode/commond.h	/^struct rtNameCardCmd : public stDataUserCmd$/;"	s
rtNotifyEnterUserCmd	tmpcode/commond.h	/^        rtNotifyEnterUserCmd()$/;"	f	struct:rtNotifyEnterUserCmd
rtNotifyEnterUserCmd	tmpcode/commond.h	/^struct rtNotifyEnterUserCmd:public stMapScreenUserCmd$/;"	s
rtNotifyKillCountUserCmd	tmpcode/commond.h	/^        rtNotifyKillCountUserCmd()$/;"	f	struct:rtNotifyKillCountUserCmd
rtNotifyKillCountUserCmd	tmpcode/commond.h	/^struct rtNotifyKillCountUserCmd:public stMapScreenUserCmd$/;"	s
rtPictureHelpUserCmd	tmpcode/commond.h	/^    rtPictureHelpUserCmd()$/;"	f	struct:rtPictureHelpUserCmd
rtPictureHelpUserCmd	tmpcode/commond.h	/^struct rtPictureHelpUserCmd : public stQuestUserCmd$/;"	s
rtSearchGuardGoodsSeptCmd	tmpcode/commond.h	/^    rtSearchGuardGoodsSeptCmd()$/;"	f	struct:rtSearchGuardGoodsSeptCmd
rtSearchGuardGoodsSeptCmd	tmpcode/commond.h	/^struct rtSearchGuardGoodsSeptCmd : public stSeptUserCmd$/;"	s
rtShenMuStateCountryCmd	tmpcode/commond.h	/^    rtShenMuStateCountryCmd()$/;"	f	struct:rtShenMuStateCountryCmd
rtShenMuStateCountryCmd	tmpcode/commond.h	/^struct rtShenMuStateCountryCmd : public stCountryUserCmd$/;"	s
rtShenYuCardUserCmd	tmpcode/commond.h	/^    rtShenYuCardUserCmd()$/;"	f	struct:rtShenYuCardUserCmd
rtShenYuCardUserCmd	tmpcode/commond.h	/^struct rtShenYuCardUserCmd:public stMapScreenUserCmd$/;"	s
rtShenYuInfoUserCmd	tmpcode/commond.h	/^    rtShenYuInfoUserCmd()$/;"	f	struct:rtShenYuInfoUserCmd
rtShenYuInfoUserCmd	tmpcode/commond.h	/^struct rtShenYuInfoUserCmd:public stMapScreenUserCmd$/;"	s
rtShowLingQiHouseItemCmd	tmpcode/commond.h	/^	rtShowLingQiHouseItemCmd()$/;"	f	struct:rtShowLingQiHouseItemCmd
rtShowLingQiHouseItemCmd	tmpcode/commond.h	/^struct rtShowLingQiHouseItemCmd : public stDataUserCmd$/;"	s
rtTableListMapScreenUserCmd	tmpcode/commond.h	/^        rtTableListMapScreenUserCmd()$/;"	f	struct:rtTableListMapScreenUserCmd
rtTableListMapScreenUserCmd	tmpcode/commond.h	/^struct rtTableListMapScreenUserCmd : public stRecommendUserCmd$/;"	s
rtTempListUserCmd	tmpcode/commond.h	/^    rtTempListUserCmd()$/;"	f	struct:rtTempListUserCmd
rtTempListUserCmd	tmpcode/commond.h	/^struct rtTempListUserCmd : public stDataUserCmd$/;"	s
rtTopKillCountUserCmd	tmpcode/commond.h	/^        rtTopKillCountUserCmd()$/;"	f	struct:rtTopKillCountUserCmd
rtTopKillCountUserCmd	tmpcode/commond.h	/^struct rtTopKillCountUserCmd:public stMapScreenUserCmd$/;"	s
rtTypeAutoHappyCardBoxUserCmd	tmpcode/commond.h	/^	rtTypeAutoHappyCardBoxUserCmd()$/;"	f	struct:rtTypeAutoHappyCardBoxUserCmd
rtTypeAutoHappyCardBoxUserCmd	tmpcode/commond.h	/^struct rtTypeAutoHappyCardBoxUserCmd: public stWeekBoxUserCmd$/;"	s
rtUseTopKillCountUserCmd	tmpcode/commond.h	/^        rtUseTopKillCountUserCmd()$/;"	f	struct:rtUseTopKillCountUserCmd
rtUseTopKillCountUserCmd	tmpcode/commond.h	/^struct rtUseTopKillCountUserCmd:public stMapScreenUserCmd$/;"	s
rt_AddObjectHouseUserCmd	tmpcode/commond.h	/^	rt_AddObjectHouseUserCmd()$/;"	f	struct:rt_AddObjectHouseUserCmd
rt_AddObjectHouseUserCmd	tmpcode/commond.h	/^struct rt_AddObjectHouseUserCmd : public stHouseUserCmd$/;"	s
rt_AllFlowerHouseUserCmd	tmpcode/commond.h	/^    rt_AllFlowerHouseUserCmd()$/;"	f	struct:rt_AllFlowerHouseUserCmd
rt_AllFlowerHouseUserCmd	tmpcode/commond.h	/^struct rt_AllFlowerHouseUserCmd : public stHouseUserCmd$/;"	s
rt_InsertFlowerHouseUserCmd	tmpcode/commond.h	/^    rt_InsertFlowerHouseUserCmd()$/;"	f	struct:rt_InsertFlowerHouseUserCmd
rt_InsertFlowerHouseUserCmd	tmpcode/commond.h	/^struct rt_InsertFlowerHouseUserCmd : public stHouseUserCmd$/;"	s
rt_ObjVisitHouseUserCmd	tmpcode/commond.h	/^	rt_ObjVisitHouseUserCmd()$/;"	f	struct:rt_ObjVisitHouseUserCmd
rt_ObjVisitHouseUserCmd	tmpcode/commond.h	/^struct rt_ObjVisitHouseUserCmd : public stHouseUserCmd$/;"	s
rt_ObjectsHouseUserCmd	tmpcode/commond.h	/^	rt_ObjectsHouseUserCmd()$/;"	f	struct:rt_ObjectsHouseUserCmd
rt_ObjectsHouseUserCmd	tmpcode/commond.h	/^struct rt_ObjectsHouseUserCmd : public stHouseUserCmd$/;"	s
rt_memberListHouseUserCmd	tmpcode/commond.h	/^	rt_memberListHouseUserCmd()$/;"	f	struct:rt_memberListHouseUserCmd
rt_memberListHouseUserCmd	tmpcode/commond.h	/^struct rt_memberListHouseUserCmd : public stHouseUserCmd$/;"	s
rt_stAutoCfgHappyCardBoxUserCmd	tmpcode/commond.h	/^	rt_stAutoCfgHappyCardBoxUserCmd()$/;"	f	struct:rt_stAutoCfgHappyCardBoxUserCmd
rt_stAutoCfgHappyCardBoxUserCmd	tmpcode/commond.h	/^struct rt_stAutoCfgHappyCardBoxUserCmd: public stWeekBoxUserCmd$/;"	s
rt_st_ChatAccelPropertyUserCmd	tmpcode/commond.h	/^    rt_st_ChatAccelPropertyUserCmd()$/;"	f	struct:rt_st_ChatAccelPropertyUserCmd
rt_st_ChatAccelPropertyUserCmd	tmpcode/commond.h	/^struct rt_st_ChatAccelPropertyUserCmd : public stPropertyUserCmd$/;"	s
run	BillServer/TimeTick.cpp	/^void BillTimeTick::run()$/;"	f	class:BillTimeTick
run	FLServer/TimeTick.cpp	/^void FLTimeTick::run()$/;"	f	class:FLTimeTick
run	GatewayServer/BillClient.cpp	/^void BillClient::run()$/;"	f	class:BillClient
run	GatewayServer/MiniClient.cpp	/^void MiniClient::run()$/;"	f	class:MiniClient
run	GatewayServer/RecordClient.cpp	/^void RecordClient::run()$/;"	f	class:RecordClient
run	GatewayServer/SessionClient.cpp	/^void SessionClient::run()$/;"	f	class:SessionClient
run	GatewayServer/TimeTick.cpp	/^void GatewayTimeTick::run()$/;"	f	class:GatewayTimeTick
run	Robot/TimeTick.cpp	/^void ClientTimeTick::run()$/;"	f	class:ClientTimeTick
run	ScenesServer/MiniClient.cpp	/^void MiniClient::run()$/;"	f	class:MiniClient
run	ScenesServer/RecordClient.cpp	/^void RecordClient::run()$/;"	f	class:RecordClient
run	ScenesServer/Recycle.cpp	/^void SceneRecycle::run()$/;"	f	class:SceneRecycle
run	ScenesServer/SessionClient.cpp	/^void SessionClient::run()$/;"	f	class:SessionClient
run	ScenesServer/TimeTick.cpp	/^void SceneTimeTick::run()$/;"	f	class:SceneTimeTick
run	SessionServer/RecordClient.cpp	/^void RecordClient::run()$/;"	f	class:RecordClient
run	SessionServer/TimeTick.cpp	/^void SessionTimeTick::run()$/;"	f	class:SessionTimeTick
run	SuperServer/TimeTick.cpp	/^void SuperTimeTick::run()$/;"	f	class:SuperTimeTick
run	tools/codepg.cpp	/^bool run(int argc, char** argv)$/;"	f
run	tools/xmlpg.cpp	/^bool run(int argc, char** argv)$/;"	f
runCircle_anti_clockwise	ScenesServer/Scene.cpp	/^void Scene::runCircle_anti_clockwise($/;"	f	class:Scene
runCircle_clockwise	ScenesServer/Scene.cpp	/^void Scene::runCircle_clockwise($/;"	f	class:Scene
runCost	tmpcode/commond.h	/^	DWORD runCost; \/\/√øÃÏµƒŒ¨ª§∑—$/;"	m	struct:stUnionBaseInfoCmd
runOffEnemy	ScenesServer/SceneNpcAI.cpp	/^bool SceneNpc::runOffEnemy(SceneEntryPk_vec & enemies)$/;"	f	class:SceneNpc
runStatusElement	ScenesServer/SkillStatusManager.cpp	/^BYTE SkillStatusManager::runStatusElement(SkillStatusElement &element)$/;"	f	class:SkillStatusManager
runeIntensifyLevel	tmpcode/commond.h	/^	DWORD runeIntensifyLevel;       \/\/\/ µ±«∞∑˚Œƒ«øªØø∆ººµƒµ»º∂$/;"	m	struct:stEquipIntensifyInfo
running_state	base/zScene.h	/^	DWORD running_state;$/;"	m	struct:zScene
rushDelay	ScenesServer/SceneDefine.h	/^	DWORD rushDelay;\/\/Ëß¶ÂèëÊîªÂüéÁöÑÂª∂Êó∂$/;"	m	struct:t_NpcDefine
rushID	ScenesServer/SceneDefine.h	/^	DWORD rushID;\/\/Ëß¶ÂèëÊîªÂüéID$/;"	m	struct:t_NpcDefine
rushID	base/SessionCommand.h	/^      DWORD rushID;$/;"	m	struct:Cmd::Session::t_createRush_SceneSession
rushName	base/SessionCommand.h	/^      char rushName[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_cityRush_SceneSession
rushRate	ScenesServer/SceneDefine.h	/^	BYTE rushRate;\/\/Ëß¶ÂèëÊîªÂüéÁöÑÂá†Áéá$/;"	m	struct:t_NpcDefine
rwlock	BillServer/BillClientManager.h	/^    zRWLock rwlock;$/;"	m	class:BillClientManager
rwlock	BillServer/BillTaskManager.h	/^    zRWLock rwlock;$/;"	m	class:BillTaskManager
rwlock	BillServer/BillUserManager.h	/^    zRWLock rwlock;$/;"	m	class:BillUserManager
rwlock	FLServer/UserTask.h	/^	zRWLock rwlock;$/;"	m	class:UserContainer
rwlock	GatewayServer/GateUser.h	/^	zRWLock rwlock;$/;"	m	class:GateUser
rwlock	GatewayServer/GateUserManager.h	/^	zRWLock rwlock;	    \/\/”√ªßÀ˜“˝∂¡–¥À¯$/;"	m	class:GateUserManager
rwlock	GatewayServer/GatewayTaskManager.h	/^	zRWLock rwlock;$/;"	m	class:GatewayTaskManager
rwlock	GatewayServer/SceneClientManager.h	/^	zRWLock rwlock;$/;"	m	class:SceneClientManager
rwlock	Robot/ClientManager.h	/^	zRWLock rwlock;$/;"	m	class:ClientManager
rwlock	ScenesServer/NpcTrade.h	/^    zRWLock rwlock;$/;"	m	class:NpcTrade
rwlock	ScenesServer/Recycle.h	/^	zRWLock rwlock;$/;"	m	class:SceneRecycle
rwlock	ScenesServer/SceneNpcManager.h	/^    zRWLock rwlock;$/;"	m	class:SceneNpcManager
rwlock	ScenesServer/SceneTaskManager.h	/^    zRWLock rwlock;$/;"	m	class:SceneTaskManager
rwlock	ScenesServer/SceneUserManager.h	/^    zRWLock rwlock;$/;"	m	class:SceneRecycleUserManager
rwlock	SessionServer/SessionTaskManager.h	/^    zRWLock rwlock;$/;"	m	class:SessionTaskManager
rwlock	SuperServer/BroadClientManager.h	/^    zRWLock rwlock;$/;"	m	class:BroadClientManager
rwlock	SuperServer/FLClientManager.h	/^    zRWLock rwlock;$/;"	m	class:FLClientManager
rwlock	SuperServer/InfoClientManager.h	/^    zRWLock rwlock;$/;"	m	class:InfoClientManager
rwlock	SuperServer/RolechangeClientManager.h	/^    zRWLock rwlock;$/;"	m	class:RolechangeClientManager
rwlock	SuperServer/RoleregClientManager.h	/^    zRWLock rwlock;$/;"	m	class:RoleregClientManager
rwlock	base/ServerACL.h	/^	zRWLock rwlock;$/;"	m	class:ServerACL
rwlock	base/zDatabaseManager.h	/^	zRWLock rwlock;$/;"	m	class:zDataBM
rwlock	base/zRWLock.h	/^	pthread_rwlock_t rwlock;    \/**< Á≥ªÁªüËØªÂÜôÈîÅ *\/$/;"	m	class:zRWLock
rwlock	base/zRWLock.h	/^	zRWLock &rwlock;$/;"	m	class:zRWLock_scope_rdlock
rwlock	base/zRWLock.h	/^	zRWLock &rwlock;$/;"	m	class:zRWLock_scope_wrlock
rwlock	base/zSceneManager.h	/^	zRWLock rwlock;$/;"	m	class:zSceneManager
rwlock	base/zThread.h	/^	zRWLock rwlock;                \/**< ËØªÂÜôÈîÅ *\/$/;"	m	class:zThreadGroup
rwlock	base/zUserManager.h	/^	zRWLock rwlock;$/;"	m	class:zUserManager
rwlock	roleChangeServer/ChangeTask.h	/^	zRWLock rwlock;$/;"	m	class:RoleContainer
s	ScenesServer/SceneDefine.h	/^  zPos s;        \/\/\/ Â∑¶‰∏äÁÇπ$/;"	m	struct:zRegion
sIndex	tmpcode/commond.h	/^    BYTE  sIndex;   \/\/ΩªªªŒÔ∆∑ ±£¨…ÃµÍŒÔ∆∑À˜“˝$/;"	m	struct:stResultCheckGoodsCmd
sTagLifeSkill	tmpcode/commond.h	/^    OneLifeSkill sTagLifeSkill[8]; $/;"	m	struct:stAddUserLifeSkillPropertyUserCmd
s_funlist	ScenesServer/SkillStatusManager.cpp	/^SkillStatusManager::s_funlist[SkillStatusManager::MAX_SKILL_STATE_NUM];$/;"	m	class:SkillStatusManager
s_funlist	ScenesServer/SkillStatusManager.h	/^  static SkillStatusFunc s_funlist[MAX_SKILL_STATE_NUM];$/;"	m	class:SkillStatusManager
safe_setup	tmpcode/commond.h	/^	BYTE safe_setup;  \/\/ bit∫¨“Âº˚SafeFlagEnum$/;"	m	struct:stNotifySafetyDetailUserCmd
safe_setup	tmpcode/commond.h	/^	BYTE safe_setup;  \/\/ bit∫¨“Âº˚SafeFlagEnum$/;"	m	struct:stSetSafetyDetailUserCmd
safety	ScenesServer/SceneUser.h	/^    BYTE  safety;$/;"	m	struct:SceneUser
safety_setup	ScenesServer/SceneUser.h	/^    BYTE safety_setup;$/;"	m	struct:SceneUser
salary	base/Command.h	/^  DWORD salary;$/;"	m	struct:Cmd::t_MainUserData
salary	tmpcode/commond.h	/^	DWORD salary; \/\/ ÀÆæß±“£®∞Û£© ˝$/;"	m	struct:t_MainUserData
salaryTime	tmpcode/commond.h	/^	DWORD salaryTime;$/;"	m	struct:stNotifySalaryUnionCmd
sampleInterval	GatewayServer/GatewayTask.h	/^	static const DWORD sampleInterval = 20000;$/;"	m	class:GatewayTask
sampleInterval_error_msecs	GatewayServer/GatewayTask.h	/^	static const DWORD sampleInterval_error_msecs = sampleInterval;$/;"	m	class:GatewayTask
sampleInterval_error_sec	GatewayServer/GatewayTask.h	/^	static const DWORD sampleInterval_error_sec = sampleInterval\/1000;$/;"	m	class:GatewayTask
sampleInterval_sec	GatewayServer/GatewayTask.h	/^	static const DWORD sampleInterval_sec = sampleInterval\/1000;$/;"	m	class:GatewayTask
satrating	ScenesServer/ScenePk.h	/^      SWORD satrating;  \/\/ÂºìÁÆ≠Á±ªÊèêÂçáÂëΩ‰∏≠Áéá$/;"	m	struct:SkillState::__anon155::__anon156
save	ScenesServer/CounterManager.cpp	/^int CounterManager::save(unsigned char* dest)$/;"	f	class:CounterManager
save	ScenesServer/Quest.cpp	/^bool UserVar::save() const$/;"	f	class:UserVar
save	ScenesServer/Quest.cpp	/^int Quest::save(SceneUser& user,BYTE* dest)$/;"	f	class:Quest
save	ScenesServer/Quest.cpp	/^int QuestList::save(BYTE* dest) const$/;"	f	class:QuestList
save	ScenesServer/Quest.cpp	/^int UserVar::VAR::save(BYTE* dest) const$/;"	f	class:UserVar::VAR
save	ScenesServer/Quest.cpp	/^int Vars::save(BYTE* dest) const$/;"	f	class:Vars
save	ScenesServer/Quest.cpp	/^int Vars::save(std::vector<unsigned char> &buf, int &len) const$/;"	f	class:Vars
save	ScenesServer/Quest.h	/^  bool save() const$/;"	f	class:GlobalVarImpl
save	ScenesServer/Scene.cpp	/^bool GangScene::save()$/;"	f	class:GangScene
save	ScenesServer/Scene.cpp	/^bool StaticScene::save()$/;"	f	class:StaticScene
save	ScenesServer/SceneUser.cpp	/^bool SceneUser::save(const Cmd::Record::WriteBack_Type writeback_type, DWORD tozone, DWORD secretkey, DWORD type)$/;"	f	class:SceneUser
save	ScenesServer/zObject.cpp	/^int StorePack::save(BYTE* dest)$/;"	f	class:StorePack
saveAdopt	ScenesServer/SceneUser.h	/^    bool saveAdopt;\/\/\/ÊòØÂê¶‰øùÂ≠ò$/;"	m	struct:SceneUser
saveBinaryArchive	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::saveBinaryArchive(BYTE *out,const int maxsize)$/;"	f	class:SceneUser
saveBuf	ScenesServer/Quest.h	/^  mutable std::vector<unsigned char> saveBuf;$/;"	m	class:GlobalVarImpl
saveCardGroupData	ScenesServer/GroupCardManager.cpp	/^unsigned int GroupCardData::saveCardGroupData(unsigned char* dest)$/;"	f	class:GroupCardData
saveCardTujianData	ScenesServer/CardTujianManager.cpp	/^unsigned int CardTujianData::saveCardTujianData(unsigned char* dest)$/;"	f	class:CardTujianData
saveCartoonState	ScenesServer/SceneUser.cpp	/^void SceneUser::saveCartoonState()$/;"	f	class:SceneUser
saveChallengeData	ScenesServer/ChallengeGameManager.cpp	/^unsigned int ChallengeTmpData::saveChallengeData(unsigned char* dest)$/;"	f	class:ChallengeTmpData
saveCharBase	RecordServer/RecordTask.cpp	/^bool RecordTask::saveCharBase(const Cmd::Record::t_WriteUser_SceneRecord *rev)$/;"	f	class:RecordTask
saveGuard	ScenesServer/SceneUser.h	/^    bool saveGuard;\/\/\/ÊòØÂê¶‰øùÂ≠òÈïñËΩ¶ÁöÑ‰∏¥Êó∂Ê°£Ê°à$/;"	m	struct:SceneUser
saveHeroData	ScenesServer/HeroInfoManager.cpp	/^unsigned int AllHeroData::saveHeroData(unsigned char* dest)$/;"	f	class:AllHeroData
savePetState	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::savePetState(BYTE * data)$/;"	f	class:SceneUser
savePkMode	ScenesServer/SceneUser.h	/^        BYTE savePkMode;$/;"	m	struct:SceneUser::__anon185::__anon186
saveSysSetting	ScenesServer/SceneUser.cpp	/^int SceneUser::saveSysSetting(BYTE * buf)$/;"	f	class:SceneUser
saveTempArchive	ScenesServer/SceneUser.cpp	/^void SceneUser::saveTempArchive()$/;"	f	class:SceneUser
saveTempPetState	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::saveTempPetState(BYTE *data,DWORD maxSize)$/;"	f	class:SceneUser
saveTime	SuperServer/TimeTick.cpp	/^bool SuperTimeTick::saveTime()$/;"	f	class:SuperTimeTick
saveType	base/SessionCommand.h	/^    enum saveType$/;"	g	namespace:Cmd::Session
save_timer	ScenesServer/Quest.cpp	/^int Vars::save_timer(BYTE* dest) const$/;"	f	class:Vars
scard	base/xmlparser/herobase.h	/^            xml_prop<DWORD>	scard;$/;"	m	struct:HeroBaseCFG::Init::Item
scene	GatewayServer/GateUser.h	/^	SceneClient *scene;$/;"	m	class:GateUser
scene	ScenesServer/Scene.cpp	/^  Scene *scene;$/;"	m	struct:RemoveSceneObjectCallBack
scene	ScenesServer/Scene.cpp	/^  Scene *scene;$/;"	m	struct:UpdateSceneObjectCallBack
scene	ScenesServer/SceneEntryPk.h	/^    Scene *scene;$/;"	m	struct:SceneEntryPk
scene	SessionServer/Session.h	/^    SceneSession *scene;$/;"	m	class:UserSession
sceneClientPool	GatewayServer/SceneClientManager.h	/^	zTCPClientTaskPool *sceneClientPool;$/;"	m	class:SceneClientManager
sceneExp	ScenesServer/Scene.h	/^    DWORD sceneExp(DWORD exp) const { return (DWORD)(exp * exprate); }$/;"	f	class:Scene
sceneID	GatewayServer/GateUser.h	/^	DWORD sceneID;$/;"	m	class:GateUser
sceneID	base/Command.h	/^  DWORD sceneID;$/;"	m	struct:Cmd::stChatGmTool
sceneID	base/GmToolCommand.h	/^      DWORD sceneID;$/;"	m	struct:Cmd::GmTool::t_Chat_GmTool
sceneID	base/SceneCommand.h	/^      DWORD sceneID;                \/\/ ≥°æ∞ID$/;"	m	struct:Cmd::Scene::t_countryAndScene_GateScene
sceneID	base/SessionCommand.h	/^      DWORD sceneID;$/;"	m	struct:Cmd::Session::t_unionDareNotify_SceneSession
sceneID	tmpcode/commond.h	/^    DWORD sceneID;$/;"	m	struct:stCallPrivateGuardHelpUserCmd
sceneID	tmpcode/commond.h	/^    DWORD sceneID;$/;"	m	struct:stCallSeptGuardHelpUserCmd
sceneID	tmpcode/commond.h	/^    DWORD sceneID;$/;"	m	struct:stResponToGuardHelpUserCmd
sceneServerID	base/MiniCommand.h	/^      WORD sceneServerID;$/;"	m	struct:Cmd::Mini::t_UserLogin_Gateway
sceneTaskList	SessionServer/SessionTaskManager.h	/^    TaskContainer sceneTaskList;$/;"	m	class:SessionTaskManager
sceneTaskSet	ScenesServer/SceneTaskManager.h	/^    SceneTaskHashmap sceneTaskSet;$/;"	m	class:SceneTaskManager
sceneTeamID	ScenesServer/SceneManager.h	/^	zUniqueDWORDID *sceneTeamID;$/;"	m	class:SceneManager
sceneTempID	GatewayServer/GateUser.h	/^	DWORD sceneTempID;$/;"	m	class:GateUser
sceneUniqeID	ScenesServer/SceneManager.h	/^    zUniqueDWORDID *sceneUniqeID;$/;"	m	class:SceneManager
sceneWH	ScenesServer/zSceneEntryIndex.h	/^    zPos sceneWH;$/;"	m	class:zSceneEntryIndex
sceneentrystate	base/zSceneEntry.h	/^	SceneEntryState sceneentrystate;$/;"	m	struct:zSceneEntry
sceneentrytype	base/zSceneEntry.h	/^	const SceneEntryType sceneentrytype;$/;"	m	struct:zSceneEntry
schoolName	base/SessionCommand.h	/^      char  schoolName[MAX_NAMESIZE];  \/\/ Èó®Ê¥æÂêçÁß∞$/;"	m	struct:Cmd::Session::t_SchoolCreateSuccess_SceneSession
schoolName	base/SessionCommand.h	/^      char schoolName[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_createSchool_SceneSession
schoolid	SessionServer/Session.h	/^    DWORD schoolid;$/;"	m	class:UserSession
schoolid	base/CharBase.h	/^  DWORD schoolid;            \/\/\/ Èó®Ê¥æID$/;"	m	struct:CharBase
scm	SessionServer/SessionChat.h	/^    static SessionChannelManager * scm;$/;"	m	class:SessionChannelManager
score	base/Command.h	/^  int  score;  \/\/ ÂæóÂàÜ$/;"	m	struct:Cmd::rank_elem
score	base/SessionCommand.h	/^	  DWORD score;		\/\/’Ω¡¶÷µ$/;"	m	struct:Cmd::Session::t_ReqFightMatch_SceneSession
score	tmpcode/commond.h	/^		DWORD score;$/;"	m	struct:stUpdateScoreSeptPopoUserCmd::stPopoScore
score	tmpcode/commond.h	/^		WORD  score;$/;"	m	struct:stReturnScoreListZhenxuanUserCmd::NameAndScore
score	tmpcode/commond.h	/^		WORD score;$/;"	m	struct:stScoreInfoSCUserCmd::stScoreInfo
score	tmpcode/commond.h	/^		stPopoScore score;$/;"	m	struct:stSendScoreSeptPopoUserCmd::stPopoInfo
score	tmpcode/commond.h	/^	DWORD score;                    \/\/\/ ±æ÷‹ƒø«∞ªÒµ√µ„ ˝$/;"	m	struct:stRetUserPerformInfoCmd
score	tmpcode/commond.h	/^	DWORD score;            \/\/\/ ≥« –∆¿º€$/;"	m	struct:stRetCityGuardInfo
score	tmpcode/commond.h	/^	DWORD score;$/;"	m	struct:stSendUserScoreSeptPopoUserCmd
score	tmpcode/commond.h	/^	WORD score;  \/\/ª˝∑÷  $/;"	m	struct:stRealtimeUpdateScoreZhenXuanUserCmd
score	tmpcode/commond.h	/^	WORD score;$/;"	m	struct:stSeptScoreSCUserCmd
score	tmpcode/commond.h	/^                DWORD   score;          \/\/ ◊Ó∏ﬂŒª1: ≤ª‘⁄œﬂ  0:±Ì æ‘⁄œﬂ$/;"	m	struct:stReturnScoreListLuoRiUserCmd::NameAndScore
score	tmpcode/commond.h	/^        DWORD score;              \/\/ÕÊº“ª˝∑÷$/;"	m	struct:UnionCityDareItem
score	tmpcode/commond.h	/^        DWORD score;$/;"	m	struct:ResultScoreAndExp
score	tmpcode/commond.h	/^        DWORD score;$/;"	m	struct:stShouLieScoreListCmd::stScoreNode
score	tmpcode/commond.h	/^     BYTE score;                     \/\/ªÒµ√◊ ‘¥ ˝$/;"	m	struct:PlayerScoreSortItem
score	tmpcode/commond.h	/^    DWORD		score;\/\/◊‘º∫µƒ∑÷ ˝$/;"	m	struct:stShouLieScoreListCmd
score	tmpcode/commond.h	/^    WORD score;  \/\/ª˝∑÷$/;"	m	struct:stJunXianScoreLuoRiUserCmd
score1	tmpcode/commond.h	/^	WORD score1, score2;\/\/score1 A∂”µƒ score2 B∂”µƒ$/;"	m	struct:stScoreChallengeUserCmd
score1	tmpcode/commond.h	/^	WORD score1;$/;"	m	struct:stInfoChallengeUserCmd
score2	tmpcode/commond.h	/^	WORD score1, score2;\/\/score1 A∂”µƒ score2 B∂”µƒ$/;"	m	struct:stScoreChallengeUserCmd
score2	tmpcode/commond.h	/^	WORD score2;$/;"	m	struct:stInfoChallengeUserCmd
scoreType	tmpcode/commond.h	/^	BYTE scoreType;\/\/∑÷ ˝¿‡–Õ£∫0-Ã”≈‹ ˝£¨1-…±π÷µ√∑÷ ˝, 3-- ÿŒ¿¡˙µ∫∏±±ææ≠—È$/;"	m	struct:stPictureEffectMapUserCmd
score_exp	tmpcode/commond.h	/^	Score_Exp score_exp[0];\/\/µ√∑÷-æ≠—È”≥…‰±Ì$/;"	m	struct:stPictureEffectMapUserCmd
screen	base/SceneCommand.h	/^      DWORD screen;$/;"	m	struct:Cmd::Scene::t_Nine_ExceptMe_ForwardScene
screen	base/SceneCommand.h	/^      DWORD screen;$/;"	m	struct:Cmd::Scene::t_Nine_ForwardScene
screen	base/SceneCommand.h	/^      DWORD screen;$/;"	m	struct:Cmd::Scene::t_Nine_dir_ForwardScene
screen	base/SceneCommand.h	/^      DWORD screen;$/;"	m	struct:Cmd::Scene::t_Nine_rdir_ForwardScene
screenMax	GatewayServer/ScreenIndex.h	/^	const DWORD screenMax;$/;"	m	class:ScreenIndex
screenMax	ScenesServer/zSceneEntryIndex.h	/^    DWORD screenMax;$/;"	m	class:zSceneEntryIndex
screenx	GatewayServer/ScreenIndex.h	/^	const DWORD screenx;$/;"	m	class:ScreenIndex
screenx	ScenesServer/zSceneEntryIndex.h	/^    DWORD screenx;$/;"	m	class:zSceneEntryIndex
screeny	GatewayServer/ScreenIndex.h	/^	const DWORD screeny;$/;"	m	class:ScreenIndex
screeny	ScenesServer/zSceneEntryIndex.h	/^    DWORD screeny;$/;"	m	class:zSceneEntryIndex
scriptID	ScenesServer/SceneDefine.h	/^	int scriptID;\/\/Êô∫ËÉΩËÑöÊú¨ÁöÑid$/;"	m	struct:t_NpcDefine
scriptMessageFilter	ScenesServer/scriptTickTask.h	/^class scriptMessageFilter$/;"	c
scriptTask	ScenesServer/scriptTickTask.cpp	/^scriptTask::scriptTask(const char* _funcName,time_t _elapse,SceneUser *_user):funcName(_funcName)$/;"	f	class:scriptTask
scriptTask	ScenesServer/scriptTickTask.h	/^struct scriptTask$/;"	s
scriptTaskManagement	ScenesServer/scriptTickTask.h	/^	scriptTaskManagement():id(1){ }$/;"	f	class:scriptTaskManagement
scriptTaskManagement	ScenesServer/scriptTickTask.h	/^class scriptTaskManagement : public Singleton<scriptTaskManagement>$/;"	c
scrollThisID	tmpcode/commond.h	/^    DWORD scrollThisID;     \/\/æÌ÷·Œ®“ªID$/;"	m	struct:stHorseEvolveUserCmd
scroll_id	tmpcode/commond.h	/^    DWORD    scroll_id; \/\/…˝–«µ¿æﬂ«øªØæÌ÷·µƒŒÔ∆∑Œ®“ªid $/;"	m	struct:stUseScrollUpPropertyUserCmd
sdwHP	base/Command.h	/^  SDWORD sdwHP;          \/**< Êâ£Ë°Ä *\/$/;"	m	struct:Cmd::stRTMagicUserCmd
sdwHP	tmpcode/commond.h	/^	SDWORD   sdwHP;           \/**<ø€—™*\/$/;"	m	struct:stDefenceListToAtt
sdwHP	tmpcode/commond.h	/^	SDWORD   sdwHP;           \/**<ø€—™*\/$/;"	m	struct:stReturnDefenceList
sealMoons	base/Object.h	/^	BYTE sealMoons;\/\/‘¬¡¡◊‹ ˝(∑‚”°+subupgrade), 0±Ì æŒﬁ∑‚”°$/;"	m	struct:t_Object
sealStars	base/Object.h	/^	BYTE sealStars;\/\/–«–«◊‹ ˝(∑‚”°+upgrade), 0±Ì æŒﬁ∑‚”°$/;"	m	struct:t_Object
sec	base/zTime.h	/^	DWORD sec() const$/;"	f	class:zRTime
sec	base/zTime.h	/^	time_t sec() const$/;"	f	class:zTime
secLeft	tmpcode/commond.h	/^	DWORD secLeft;		\/\/±⁄¬Øø™∆Ùµƒ £”‡ ±º‰$/;"	m	struct:timeOfFireplaceUserCmd
secNum	tmpcode/commond.h	/^	DWORD secNum;                   \/\/\/ ∏¯”Ë∏±◊Â≥§µƒ ˝¡ø(øÕªß∂Àæˆ∂®£¨∑˛ŒÒ∆˜ºÏ≤È)$/;"	m	struct:stReqMasterPerformCmd
secSeptMaster	base/SessionCommand.h	/^      bool secSeptMaster;$/;"	m	struct:Cmd::Session::t_sendUserRelationID
secUnionMaster	base/SessionCommand.h	/^      bool secUnionMaster;$/;"	m	struct:Cmd::Session::t_sendUserRelationID
second	base/zRegex.h	/^	unsigned int second;$/;"	m	class:zRegex
second	tmpcode/commond.h	/^			BYTE second;  \/\/∏± Ù–‘$/;"	m	struct:LingQiData::__anon325::__anon326
second	tmpcode/commond.h	/^			BYTE second;  \/\/∏± Ù–‘$/;"	m	struct:LingQiSimulate::__anon366::__anon367
second	tmpcode/commond.h	/^            BYTE second;  \/\/∏± Ù–‘$/;"	m	struct:LingQiWatchData::__anon339::__anon340
secondEnter	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::secondEnter(SceneUser *pUser)$/;"	f	class:ChallengeGame
secondObjID	tmpcode/commond.h	/^	DWORD secondObjID;      \/\/\/ ∏®÷˙ŒÔ∆∑Œ®“ªID;$/;"	m	struct:stEquipIntensifyStart
secondPercent	tmpcode/commond.h	/^			BYTE secondPercent;	$/;"	m	struct:LingQiData::__anon323::__anon324
secondPercent	tmpcode/commond.h	/^			BYTE secondPercent;     $/;"	m	struct:LingQiMaxCoefData::__anon333::__anon334
secondPercent	tmpcode/commond.h	/^			BYTE secondPercent;     $/;"	m	struct:LingQiSimulate::__anon364::__anon365
secondPercent	tmpcode/commond.h	/^            BYTE secondPercent;     $/;"	m	struct:LingQiWatchData::__anon337::__anon338
secondTargetID	ScenesServer/SceneNpc.h	/^  DWORD secondTargetID;$/;"	m	class:SceneNpc
secondTargetType	ScenesServer/SceneNpc.h	/^  DWORD secondTargetType;$/;"	m	class:SceneNpc
secretTreasureTimes	tmpcode/commond.h	/^	BYTE secretTreasureTimes; \/\/…Ò√ÿ∂¥—®—∞±¶¥Œ ˝$/;"	m	struct:t_DragonData
secretkey	base/BattleUserCmd.h	/^	DWORD secretkey;$/;"	m	struct:Cmd::stChangeZoneVerify
secretkey	base/Command.h	/^  DWORD secretkey;$/;"	m	struct:Cmd::stUserRefrainLoginCmd
secretkey	base/RecordCommand.h	/^      DWORD secretkey;$/;"	m	struct:Cmd::Record::t_WriteUser_SceneRecord
secretkey	base/RolechangeCommand.h	/^	DWORD secretkey;    \/\/—È÷§√ÿ‘ø$/;"	m	struct:Cmd::Rolechange::t_sendUserToZone
secs	base/zTime.h	/^	time_t secs;$/;"	m	class:zTime
select1ID	base/Card.h	/^    DWORD select1ID;	    \/\/æÒ‘Ò1(ø®≈∆ID)$/;"	m	struct:t_CardPK
select1ID	base/zDatabase.h	/^    DWORD select1ID;	    \/\/æÒ‘Ò1(ø®≈∆ID)$/;"	m	struct:CardBase
select1ID	base/zDatabase.h	/^    DWORD select1ID;	    \/\/æÒ‘Ò1(ø®≈∆ID)$/;"	m	struct:zCardB
select2ID	base/Card.h	/^    DWORD select2ID;	    \/\/æÒ‘Ò2(ø®≈∆ID)$/;"	m	struct:t_CardPK
select2ID	base/zDatabase.h	/^    DWORD select2ID;	    \/\/æÒ‘Ò2(ø®≈∆ID)$/;"	m	struct:CardBase
select2ID	base/zDatabase.h	/^    DWORD select2ID;	    \/\/æÒ‘Ò2(ø®≈∆ID)$/;"	m	struct:zCardB
selectByLakh	base/zMisc.h	/^static bool selectByLakh(const DWORD lakh)$/;"	f	class:zMisc
selectByOdds	base/zMisc.h	/^static bool selectByOdds(const DWORD upNum,const DWORD downNum)$/;"	f	class:zMisc
selectByOneHM	base/zMisc.h	/^static bool selectByOneHM(const DWORD lakh)$/;"	f	class:zMisc
selectByPercent	base/zMisc.h	/^static bool selectByPercent(const DWORD percent)$/;"	f	class:zMisc
selectByTenTh	base/zMisc.h	/^static bool selectByTenTh(const DWORD tenth)$/;"	f	class:zMisc
selectByt_Odds	base/zMisc.h	/^static bool selectByt_Odds(const odds_t &odds)$/;"	f	class:zMisc
selectCountryID	base/Command.h	/^    DWORD selectCountryID;$/;"	m	struct:Cmd::stCheckCountryCountSelectUserCmd
selectCountryID	tmpcode/commond.h	/^	DWORD selectCountryID;$/;"	m	struct:stCheckCountryCountSelectUserCmd
selectServerState	GatewayServer/GateUser.h	/^	void selectServerState()$/;"	f	class:GateUser
selectState	GatewayServer/GateUser.h	/^	void selectState()$/;"	f	class:GateUser
selected	ScenesServer/SceneEntryPk.h	/^    SelectedSet selected;$/;"	m	struct:SceneEntryPk
selected	tmpcode/commond.h	/^	BYTE  selected;\/\/ «∑Ò±ª—°÷–$/;"	m	struct:HappyCardInfo
self	base/HeroCardCmd.h	/^	t_MagicPoint self;$/;"	m	struct:Cmd::stRetMagicPointInfoUserCmd
selfNum	base/HeroCardCmd.h	/^	DWORD selfNum;	    \/\/◊‘º∫ £”‡	$/;"	m	struct:Cmd::stRetLeftCardLibNumUserCmd
selfNum	tmpcode/commond.h	/^	DWORD selfNum;                          \/\/◊‘º∫µƒ˜»¡¶÷µ$/;"	m	struct:stReturnDayFlowerListUserCmd
self_t	ScenesServer/Quest.h	/^  typedef GlobalVarImpl<dummy> self_t;$/;"	t	class:GlobalVarImpl
self_t	ScenesServer/QuestEvent.h	/^  typedef EventManager<E> self_t;$/;"	t	class:EventManager
self_t	ScenesServer/QuestMaker.h	/^  typedef ProductFactory<I,C> self_t;$/;"	t	class:ProductFactory
sellAlter	tmpcode/commond.h	/^	sellList sellAlter;             \/\/\/ œ˙ €¡–±Ì∏ƒ±‰$/;"	m	struct:stRetAlterStorageSellList
sellList	tmpcode/commond.h	/^struct sellList$/;"	s
sellProduct	tmpcode/commond.h	/^	sellList sellProduct;$/;"	m	struct:stRetAlterUnionSellPrice
send	ScenesServer/ChallengeGame.cpp	/^	Cmd::stAddBattleCardListPropertyUserCmd *send;$/;"	m	class:sendAllCardListToUser
send	ScenesServer/SceneUser.cpp	/^	Cmd::stAddMobileObjectListPropertyUserCmd *send;$/;"	m	class:sendAllObjectListToUser
send	ScenesServer/SceneUser.cpp	/^	Cmd::stAddObjectListPropertyUserCmd *send;$/;"	m	class:sendAllObjectListToUser
send	ScenesServer/SceneUser.cpp	/^	Cmd::stAddObjectPropertyUserCmd send;$/;"	m	class:sendAllObjectToUser
sendAllBlackListToGateway	SessionServer/CRelationManager.cpp	/^void CRelationManager::sendAllBlackListToGateway()$/;"	f	class:CRelationManager
sendAllCardList	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::sendAllCardList(SceneUser *pUser)$/;"	f	class:ChallengeGame
sendAllCardListToUser	ScenesServer/ChallengeGame.cpp	/^	sendAllCardListToUser(SceneUser *u):pUser(u)$/;"	f	class:sendAllCardListToUser
sendAllCardListToUser	ScenesServer/ChallengeGame.cpp	/^class sendAllCardListToUser:public UserCardExec$/;"	c
sendAllCmd	SessionServer/SessionChat.cpp	/^bool SessionChannel::sendAllCmd(const void *cmd,const DWORD len)$/;"	f	class:SessionChannel
sendAllInfo	ScenesServer/Chat.cpp	/^bool Channel::sendAllInfo(DWORD infoType,const char *pattern,...)$/;"	f	class:Channel
sendAllInfo	SessionServer/SessionChat.cpp	/^bool SessionChannel::sendAllInfo(int type,const char* mess,...)$/;"	f	class:SessionChannel
sendAllMobileObjectList	ScenesServer/SceneUser.cpp	/^void SceneUser::sendAllMobileObjectList()$/;"	f	class:SceneUser
sendAllObjectListToUser	ScenesServer/SceneUser.cpp	/^	sendAllObjectListToUser(SceneUser *u,BYTE act):pUser(u),action(act)$/;"	f	class:sendAllObjectListToUser
sendAllObjectListToUser	ScenesServer/SceneUser.cpp	/^class sendAllObjectListToUser:public UserObjectExec$/;"	c
sendAllObjectToUser	ScenesServer/SceneUser.cpp	/^class sendAllObjectToUser:public UserObjectExec$/;"	c
sendBlackListToGateway	SessionServer/CRelationManager.cpp	/^void CRelationManager::sendBlackListToGateway(const char *name,const BYTE oper)$/;"	f	class:CRelationManager
sendCardStateInfo	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::sendCardStateInfo(zCard* o)$/;"	f	class:ChallengeGame
sendChangedUserData	ScenesServer/ScenePk.cpp	/^bool  ScenePk::sendChangedUserData(SceneUser *pUser)$/;"	f	class:ScenePk
sendChatToMyFriend	SessionServer/CRelationManager.cpp	/^void CRelationManager::sendChatToMyFriend(const Cmd::stKokChatUserCmd *pCmd,const DWORD cmdLen)$/;"	f	class:CRelationManager
sendCmd	BillServer/BillUser.h	/^    bool sendCmd(const void *pstrCmd,const int nCmdLen)$/;"	f	class:BillUser
sendCmd	GatewayServer/GateUser.cpp	/^bool GateUser::sendCmd(const void *pstrCmd,const DWORD nCmdLen,const DWORD type,const char *strName,const bool hasPacked)$/;"	f	class:GateUser
sendCmd	Robot/Client.cpp	/^bool Client::sendCmd(const void *pstrCmd, const int nCmdLen)$/;"	f	class:Client
sendCmd	SessionServer/Session.h	/^    bool sendCmd(const void *pstrCmd,const int nCmdLen) const$/;"	f	class:Session
sendCmd	SessionServer/SessionServer.h	/^  Cmd::t_NullCmd* sendCmd;$/;"	m	struct:OneCountryScene
sendCmd	SessionServer/SessionTask.cpp	/^  Cmd::stNullUserCmd* sendCmd;$/;"	m	struct:OneCountryUserSessionAction
sendCmdByCondition	SessionServer/SessionManager.cpp	/^void UserSessionManager::sendCmdByCondition(const Cmd::stNullUserCmd *pstrCmd,const DWORD nCmdLen,Compare* compare)$/;"	f	class:UserSessionManager
sendCmdByID	ScenesServer/Chat.cpp	/^bool sendCmdByID(DWORD id,const void *cmd,int len)$/;"	f
sendCmdByName	ScenesServer/Chat.cpp	/^bool sendCmdByName(char * name,const void *cmd,int len)$/;"	f
sendCmdByTempID	ScenesServer/Chat.cpp	/^bool sendCmdByTempID(DWORD id,const void *cmd,int len)$/;"	f
sendCmdIM	Robot/Client.cpp	/^bool Client::sendCmdIM(const void *pstrCmd, const int nCmdLen)$/;"	f	class:Client
sendCmdToAll	GatewayServer/ScreenIndex.cpp	/^void ScreenIndex::sendCmdToAll(const void *pstrCmd,const int nCmdLen)$/;"	f	class:ScreenIndex
sendCmdToAll	ScenesServer/Chat.cpp	/^bool Channel::sendCmdToAll(const void *cmd,int len)$/;"	f	class:Channel
sendCmdToAll	SessionServer/SessionChat.cpp	/^bool SessionChannel::sendCmdToAll(const void *cmd,int len)$/;"	f	class:SessionChannel
sendCmdToBill	ScenesServer/SceneUser.cpp	/^void SceneUser::sendCmdToBill(const void *pstrCmd,const DWORD nCmdLen)$/;"	f	class:SceneUser
sendCmdToCountry	GatewayServer/GateUserManager.cpp	/^void GateUserManager::sendCmdToCountry(const DWORD country,const void *pstrCmd,const DWORD nCmdLen)$/;"	f	class:GateUserManager
sendCmdToCountry	SessionServer/SessionTaskManager.cpp	/^bool SessionTaskManager::sendCmdToCountry(DWORD country,const void *pstrCmd,int nCmdLen)$/;"	f	class:SessionTaskManager
sendCmdToDirect	GatewayServer/ScreenIndex.cpp	/^void ScreenIndex::sendCmdToDirect(const zPosI posi,const int direct,const void *pstrCmd,const int nCmdLen,unsigned short dupIndex)$/;"	f	class:ScreenIndex
sendCmdToDirect	ScenesServer/Scene.cpp	/^bool Scene::sendCmdToDirect(const zPosI posi,const int direct,const void *pstrCmd,const int nCmdLen,unsigned short dupIndex)$/;"	f	class:Scene
sendCmdToMap	ScenesServer/Chat.cpp	/^bool Channel::sendCmdToMap(DWORD mapID,const void *cmd,int len)$/;"	f	class:Channel
sendCmdToMap	ScenesServer/Chat.cpp	/^bool Channel::sendCmdToMap(Scene * s,const void *cmd,int len)$/;"	f	class:Channel
sendCmdToMe	BillServer/BillUser.h	/^    bool sendCmdToMe(const void *pstrCmd,const int nCmdLen)$/;"	f	class:BillUser
sendCmdToMe	ScenesServer/SceneUser.cpp	/^void SceneUser::sendCmdToMe(const void *pstrCmd,const DWORD nCmdLen)$/;"	f	class:SceneUser
sendCmdToMe	SessionServer/Session.cpp	/^void UserSession::sendCmdToMe(const void *pstrCmd,const DWORD nCmdLen) const $/;"	f	class:UserSession
sendCmdToMyFriend	SessionServer/CRelationManager.cpp	/^void CRelationManager::sendCmdToMyFriend(const void *pCmd,const DWORD cmdLen,bool sendMe)$/;"	f	class:CRelationManager
sendCmdToMyFriendExcept	SessionServer/CRelationManager.cpp	/^void CRelationManager::sendCmdToMyFriendExcept(const void *pCmd,const DWORD cmdLen,bool sendMe,const char * except)$/;"	f	class:CRelationManager
sendCmdToNine	GatewayServer/ScreenIndex.cpp	/^void ScreenIndex::sendCmdToNine(const DWORD posi,const void *pstrCmd,const int nCmdLen)$/;"	f	class:ScreenIndex
sendCmdToNine	ScenesServer/Scene.cpp	/^bool Scene::sendCmdToNine(const zPosI posi,const void *pstrCmd,const int nCmdLen,unsigned short dupIndex)$/;"	f	class:Scene
sendCmdToNineExceptMe	GatewayServer/ScreenIndex.cpp	/^void ScreenIndex::sendCmdToNineExceptMe(const DWORD posi,const DWORD exceptme_id,const void *pstrCmd,const int nCmdLen)$/;"	f	class:ScreenIndex
sendCmdToNineExceptMe	ScenesServer/Scene.cpp	/^bool Scene::sendCmdToNineExceptMe(zSceneEntry *pEntry,const zPosI posi,const void *pstrCmd,const int nCmdLen)$/;"	f	class:Scene
sendCmdToNineUnWatch	ScenesServer/Scene.cpp	/^bool Scene::sendCmdToNineUnWatch(const zPosI posi,const void *pstrCmd,const int nCmdLen)$/;"	f	class:Scene
sendCmdToReverseDirect	GatewayServer/ScreenIndex.cpp	/^void ScreenIndex::sendCmdToReverseDirect(const zPosI posi,const int direct,const void *pstrCmd,const int nCmdLen,unsigned short dupIndex)$/;"	f	class:ScreenIndex
sendCmdToReverseDirect	ScenesServer/Scene.cpp	/^bool Scene::sendCmdToReverseDirect(const zPosI posi,const int direct,const void *pstrCmd,const int nCmdLen,unsigned short dupIndex)$/;"	f	class:Scene
sendCmdToScene	BillServer/BillTask.cpp	/^bool BillTask::sendCmdToScene(DWORD id,const void *pstrCmd,const DWORD nCmdLen)$/;"	f	class:BillTask
sendCmdToScene	BillServer/BillUser.h	/^    bool sendCmdToScene(const void *pstrCmd,const int nCmdLen)$/;"	f	class:BillUser
sendCmdToScene	ScenesServer/Scene.cpp	/^bool Scene::sendCmdToScene(const void *pstrCmd,const int nCmdLen,unsigned short dupIndex)$/;"	f	class:Scene
sendCmdToSelected	ScenesServer/SceneEntryPk.cpp	/^void SceneEntryPk::sendCmdToSelected(const void *pstrCmd,const DWORD nCmdLen)$/;"	f	class:SceneEntryPk
sendCmdToUser	BillServer/BillTask.cpp	/^bool BillTask::sendCmdToUser(DWORD id,const void *pstrCmd,const DWORD nCmdLen)$/;"	f	class:BillTask
sendCmdToWatchTrap	ScenesServer/Scene.cpp	/^bool Scene::sendCmdToWatchTrap(const zPosI posi,const void *pstrCmd,const int nCmdLen)$/;"	f	class:Scene
sendCmdToWorld	SessionServer/SessionTaskManager.cpp	/^bool SessionTaskManager::sendCmdToWorld(const void *pstrCmd,int nCmdLen)$/;"	f	class:SessionTaskManager
sendCmdToZone	FLServer/UserTask.h	/^	bool sendCmdToZone(const DWORD id, Cmd::t_NullCmd *pCmd, unsigned int nCmdLen)$/;"	f	class:UserContainer
sendCmdToZone	GatewayServer/GatewayServer.cpp	/^bool GatewayService::sendCmdToZone(DWORD zone, const void* cmd, int len)$/;"	f	class:GatewayService
sendCmdToZone	RecordServer/RecordServer.cpp	/^bool RecordService::sendCmdToZone(DWORD zone, const void* cmd, int len)$/;"	f	class:RecordService
sendCmdToZone	SessionServer/SessionChat.cpp	/^bool SessionChannel::sendCmdToZone(DWORD zone, const void* cmd, int len)$/;"	f	class:SessionChannel
sendCmdToZone	roleChangeServer/ChangeTask.h	/^	bool sendCmdToZone(const DWORD id, Cmd::t_NullCmd *pCmd, unsigned int nCmdLen)$/;"	f	class:RoleContainer
sendCountry	ScenesServer/Chat.cpp	/^bool Channel::sendCountry(SceneUser *pUser,const Cmd::stKokChatUserCmd *rev,DWORD cmdLen)$/;"	f	class:Channel
sendCountry	ScenesServer/Chat.cpp	/^bool Channel::sendCountry(SceneUser *pUser,const char *pattern,...)$/;"	f	class:Channel
sendCountry	SessionServer/SessionChat.cpp	/^bool SessionChannel::sendCountry(DWORD countryID,const void *cmd,DWORD len)$/;"	f	class:SessionChannel
sendCountryInfo	ScenesServer/Chat.cpp	/^bool Channel::sendCountryInfo(DWORD countryID,DWORD infoType,const char *pattern,...)$/;"	f	class:Channel
sendCountryInfo	SessionServer/SessionChat.cpp	/^bool SessionChannel::sendCountryInfo(int type,DWORD countryID,const char* mess,...)$/;"	f	class:SessionChannel
sendDataToUser	BillServer/StockConsign.cpp	/^bool ConsignHistoryManager::sendDataToUser(BillUser *pUser,DWORD begintime,DWORD num)$/;"	f	class:ConsignHistoryManager
sendDupChangeCmdToGate	ScenesServer/SceneUser.cpp	/^void SceneUser::sendDupChangeCmdToGate()$/;"	f	class:SceneUser
sendEnemyBaseInfo	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::sendEnemyBaseInfo()$/;"	f	class:ChallengeGame
sendEnemyHandNum	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::sendEnemyHandNum(SceneUser *pUser)$/;"	f	class:ChallengeGame
sendExpToSept	ScenesServer/SceneUser.cpp	/^void SceneUser::sendExpToSept(const WORD &exp)$/;"	f	class:SceneUser
sendExploitSort	SessionServer/SessionManager.cpp	/^void UserSessionManager::sendExploitSort(UserSession* pUser)$/;"	f	class:UserSessionManager
sendFirstFiveToUser	BillServer/StockConsign.cpp	/^bool Consign::sendFirstFiveToUser(BillUser *pUser)$/;"	f	class:Consign
sendFirstHandCard	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::sendFirstHandCard(DWORD upper)$/;"	f	class:ChallengeGame
sendFlagEndOfNotifyUserCmd	tmpcode/commond.h	/^        sendFlagEndOfNotifyUserCmd()$/;"	f	struct:sendFlagEndOfNotifyUserCmd
sendFlagEndOfNotifyUserCmd	tmpcode/commond.h	/^struct sendFlagEndOfNotifyUserCmd : public stQuestUserCmd$/;"	s
sendFriendDegree	SessionServer/Session.cpp	/^void UserSession::sendFriendDegree(Cmd::Session::t_RequestFriendDegree_SceneSession *rev)$/;"	f	class:UserSession
sendGiftEquip	ScenesServer/ScenePk.cpp	/^void SceneUser::sendGiftEquip(WORD level)$/;"	f	class:SceneUser
sendGmChat	SessionServer/Session.cpp	/^void UserSession::sendGmChat(int type,const char *pattern,...) const$/;"	f	class:UserSession
sendGold	ScenesServer/Chat.cpp	/^bool Channel::sendGold(SceneUser *pUser,int type,DWORD gold,const char *pattern,...)$/;"	f	class:Channel
sendGold	base/Command.h	/^  DWORD sendGold;$/;"	m	struct:Cmd::stContentMail
sendGold	base/Command.h	/^  DWORD sendGold;$/;"	m	struct:Cmd::stSendMail
sendGold	base/SessionCommand.h	/^      DWORD sendGold;$/;"	m	struct:Cmd::Session::mailInfo
sendGold	base/SessionCommand.h	/^      DWORD sendGold;$/;"	m	struct:Cmd::Session::t_getMailItemReturn_SceneSession
sendGold	tmpcode/commond.h	/^    DWORD sendGold;$/;"	m	struct:stContentMail
sendGold	tmpcode/commond.h	/^    DWORD sendGold;$/;"	m	struct:stSendMail
sendGoodnessToNine	ScenesServer/SceneUser.cpp	/^void SceneUser::sendGoodnessToNine()$/;"	f	class:SceneUser
sendGraceSort	SessionServer/SessionManager.cpp	/^void UserSessionManager::sendGraceSort(UserSession* pUser)$/;"	f	class:UserSessionManager
sendHandFullInfo	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::sendHandFullInfo(DWORD userID, DWORD id)$/;"	f	class:ChallengeGame
sendHeroInfo	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::sendHeroInfo(zCard* object)$/;"	f	class:ChallengeGame
sendInitHPAndMp	ScenesServer/SceneUser.cpp	/^void SceneUser::sendInitHPAndMp()$/;"	f	class:SceneUser
sendInitToMe	ScenesServer/SceneUser.cpp	/^void SceneUser::sendInitToMe()$/;"	f	class:SceneUser
sendLibNumInfo	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::sendLibNumInfo()$/;"	f	class:ChallengeGame
sendLog	ScenesServer/Chat.cpp	/^void Gm::sendLog(SceneUser *pUser,const char *cmd,const char * content)$/;"	f	class:Gm
sendMail	ScenesServer/SceneUser.cpp	/^void sendMail(char * fromName,DWORD fromID,char * toName,DWORD toID,BYTE type,DWORD money,\/*zObject * o,*\/char * text)$/;"	f
sendMapInfo	ScenesServer/Chat.cpp	/^bool Channel::sendMapInfo(DWORD mapID,DWORD infoType,const char *pattern,...)$/;"	f	class:Channel
sendMapInfo	ScenesServer/Chat.cpp	/^bool Channel::sendMapInfo(Scene * s,DWORD infoType,const char *pattern,...)$/;"	f	class:Channel
sendMeToNine	ScenesServer/SceneNpc.cpp	/^void SceneNpc::sendMeToNine()$/;"	f	class:SceneNpc
sendMeToNine	ScenesServer/SceneUser.cpp	/^void SceneUser::sendMeToNine()$/;"	f	class:SceneUser
sendMeToNineDirect	ScenesServer/SceneNpc.cpp	/^void SceneNpc::sendMeToNineDirect(const int direct)$/;"	f	class:SceneNpc
sendMeToNineDirect	ScenesServer/SceneUser.cpp	/^void SceneUser::sendMeToNineDirect(const int direct)$/;"	f	class:SceneUser
sendMessageToMe	ScenesServer/SceneEntryPk.h	/^    virtual void sendMessageToMe(const char *pattern) {};$/;"	f	struct:SceneEntryPk
sendMessageToMe	ScenesServer/SceneUser.cpp	/^void SceneUser::sendMessageToMe(const char *pattern)$/;"	f	class:SceneUser
sendMoney	ScenesServer/Chat.cpp	/^bool Channel::sendMoney(SceneUser *pUser,int type,DWORD money,const char *pattern,...)$/;"	f	class:Channel
sendMoney	base/Command.h	/^  DWORD sendMoney;$/;"	m	struct:Cmd::stContentMail
sendMoney	base/Command.h	/^  DWORD sendMoney;$/;"	m	struct:Cmd::stSendMail
sendMoney	base/SessionCommand.h	/^      DWORD sendMoney;$/;"	m	struct:Cmd::Session::mailInfo
sendMoney	base/SessionCommand.h	/^      DWORD sendMoney;$/;"	m	struct:Cmd::Session::t_getMailItemReturn_SceneSession
sendMoney	tmpcode/commond.h	/^    DWORD sendMoney;$/;"	m	struct:stContentMail
sendMoney	tmpcode/commond.h	/^    DWORD sendMoney;$/;"	m	struct:stSendMail
sendMpInfo	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::sendMpInfo()$/;"	f	class:ChallengeGame
sendNine	ScenesServer/Chat.cpp	/^bool Channel::sendNine(SceneUser *pUser,const Cmd::stKokChatUserCmd *rev,DWORD cmdLen)$/;"	f	class:Channel
sendNine	ScenesServer/Chat.cpp	/^bool Channel::sendNine(SceneUser *pUser,const char *content)$/;"	f	class:Channel
sendNine	ScenesServer/Chat.cpp	/^bool Channel::sendNine(SceneUser *pUser,const char *pattern,...)$/;"	f	class:Channel
sendNine	ScenesServer/Chat.cpp	/^bool Channel::sendNine(const SceneNpc *pNpc,const char *pattern,...)$/;"	f	class:Channel
sendNineToMe	ScenesServer/SceneUser.cpp	/^void SceneUser::sendNineToMe()$/;"	f	class:SceneUser
sendNineToMeDirect	ScenesServer/SceneUser.cpp	/^void SceneUser::sendNineToMeDirect(const int direct)$/;"	f	class:SceneUser
sendNotifyToScene	SessionServer/CRelationManager.cpp	/^void CRelation::sendNotifyToScene()$/;"	f	class:CRelation
sendOneCardInfo	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::sendOneCardInfo(zCard* object, BYTE actionType, DWORD pAttThisID, DWORD pDefThisID, BYTE attackType)$/;"	f	class:ChallengeGame
sendPrivate	ScenesServer/Chat.cpp	/^bool Channel::sendPrivate(SceneUser *pUser,const Cmd::stKokChatUserCmd *rev,DWORD cmdLen)$/;"	f	class:Channel
sendPrivate	ScenesServer/Chat.cpp	/^bool Channel::sendPrivate(SceneUser *pUser,const char *toName,const char *pattern,...)$/;"	f	class:Channel
sendPrivate	ScenesServer/Chat.cpp	/^bool Channel::sendPrivate(const char * fromName,const char *toName,const char *pattern,...)$/;"	f	class:Channel
sendPrivate	SessionServer/SessionChat.cpp	/^bool SessionChannel::sendPrivate(UserSession * pUser,const char * fromName,const char* mess,...)$/;"	f	class:SessionChannel
sendPrivateChatToFriend	SessionServer/CRelationManager.cpp	/^void CRelationManager::sendPrivateChatToFriend(const Cmd::stChannelChatUserCmd *pCmd,const DWORD cmdLen)$/;"	f	class:CRelationManager
sendRelationList	SessionServer/CRelationManager.cpp	/^void CRelationManager::sendRelationList()$/;"	f	class:CRelationManager
sendSceneCmdToBill	ScenesServer/SceneUser.cpp	/^void SceneUser::sendSceneCmdToBill(const void *pstrCmd,const DWORD nCmdLen)$/;"	f	class:SceneUser
sendSelectStates	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::sendSelectStates(zCard *pThis,DWORD state,WORD value,WORD time)$/;"	f	class:SkillStatusManager
sendSelfDataToUser	BillServer/StockConsign.cpp	/^bool ConsignHistoryManager::sendSelfDataToUser(BillUser *pUser,DWORD begintime,DWORD num)$/;"	f	class:ConsignHistoryManager
sendSevenStateToMe	ScenesServer/SceneEntryPk.h	/^    virtual void sendSevenStateToMe(DWORD state,WORD value,WORD time){}$/;"	f	struct:SceneEntryPk
sendSevenStateToMe	ScenesServer/SceneUser.cpp	/^void SceneUser::sendSevenStateToMe(DWORD state,WORD value,WORD time)$/;"	f	class:SceneUser
sendSkill	ScenesServer/ScenePk.cpp	/^void SceneUser::sendSkill(WORD wdSkillID,BYTE level,DWORD target,BYTE attackType,BYTE action)$/;"	f	class:SceneUser
sendSkillInfo	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::sendSkillInfo(zCard* object)$/;"	f	class:ChallengeGame
sendSortList	SessionServer/CSort.cpp	/^void CSortM::sendSortList(UserSession* lpUser)$/;"	f	class:CSortM
sendState	tmpcode/commond.h	/^    DWORD sendState; \/\/ state=0 Œ¥∑¢≤º, state=1 ∑¢≤º, state=2 ÷ÿµ„∑¢≤º$/;"	m	struct:CityQuestInfo
sendStatusChange	SessionServer/CRelationManager.cpp	/^void CRelationManager::sendStatusChange(const CRelation *relation,const BYTE byState)$/;"	f	class:CRelationManager
sendSys	ScenesServer/Chat.cpp	/^bool Channel::sendSys(DWORD dwUserTempID,int type,const char *pattern,...)$/;"	f	class:Channel
sendSys	ScenesServer/Chat.cpp	/^bool Channel::sendSys(SceneUser *pUser,int type,const char *pattern,...)$/;"	f	class:Channel
sendSysChat	SessionServer/Session.cpp	/^void UserSession::sendSysChat(int type,const char *pattern,...) const$/;"	f	class:UserSession
sendTempID	tmpcode/commond.h	/^	DWORD sendTempID;$/;"	m	struct:stSendFlowerEffectNineCmd
sendTo	GatewayServer/SceneClientManager.cpp	/^bool SceneClientManager::sendTo(const DWORD tempid,const void *pstrCmd,int nCmdLen)$/;"	f	class:SceneClientManager
sendTo	SuperServer/FLClientManager.cpp	/^void FLClientManager::sendTo(const WORD tempid,const void *pstrCmd,int nCmdLen)$/;"	f	class:FLClientManager
sendTo	SuperServer/InfoClientManager.cpp	/^bool InfoClientManager::sendTo(const DWORD tempid,const void *pstrCmd,int nCmdLen)$/;"	f	class:InfoClientManager
sendTo	SuperServer/RolechangeClientManager.cpp	/^bool RolechangeClientManager::sendTo(const DWORD tempid, const void *pstrCmd,int nCmdLen)$/;"	f	class:RolechangeClientManager
sendToAll	ScenesServer/Chat.cpp	/^bool Channel::sendToAll(SceneUser *pUser,const Cmd::stKokChatUserCmd *rev,DWORD cmdLen)$/;"	f	class:Channel
sendToAll	ScenesServer/Chat.cpp	/^bool Channel::sendToAll(SceneUser *pUser,const char *pattern,...)$/;"	f	class:Channel
sendToOthers	SessionServer/SessionChat.cpp	/^bool SessionChannel::sendToOthers(UserSession *pUser,const Cmd::stChannelChatUserCmd *cmd,DWORD len)$/;"	f	class:SessionChannel
sendWaitDataToUser	BillServer/StockConsign.cpp	/^bool Consign::sendWaitDataToUser(BillUser *pUser)$/;"	f	class:Consign
sendtoSelectedHpAndMp	ScenesServer/SceneNpc.cpp	/^void SceneNpc::sendtoSelectedHpAndMp()$/;"	f	class:SceneNpc
sendtoSelectedState	ScenesServer/SceneNpc.cpp	/^void SceneNpc::sendtoSelectedState(DWORD state,WORD value,WORD time)$/;"	f	class:SceneNpc
septCaption	base/SessionCommand.h	/^      char septCaption[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_sendUserRelationID
septExp	SessionServer/Session.h	/^    WORD septExp;$/;"	m	class:UserSession
septID	base/Command.h	/^                DWORD septID;                   \/\/º“◊ÂID$/;"	m	struct:Cmd::t_GetSortList::__anon127
septID	tmpcode/commond.h	/^		DWORD septID; $/;"	m	struct:stSendScoreSeptPopoUserCmd::stPopoInfo
septID	tmpcode/commond.h	/^		DWORD septID; $/;"	m	struct:stUpdateScoreSeptPopoUserCmd::stPopoScore
septID	tmpcode/commond.h	/^	DWORD   septID;                 \/\/º“◊ÂID$/;"	m	struct:TankData
septID	tmpcode/commond.h	/^	DWORD septID[0];\/\/±®√˚º“◊ÂID$/;"	m	struct:stRegInfoDTUserCmd
septID	tmpcode/commond.h	/^                DWORD septID;                   \/\/º“◊ÂID$/;"	m	struct:t_GetSortList::__anon241
septID	tmpcode/commond.h	/^         DWORD septID;                   \/\/º“◊ÂID        $/;"	m	struct:stRetNpcOccupiedBySeptNpcDare
septLevel	tmpcode/commond.h	/^	DWORD septLevel;                \/\/\/ º“◊Âµ»º∂(’π æ ± π”√)$/;"	m	struct:stRetMasterPerformInfoCmd
septMaster	ScenesServer/SceneUser.h	/^    bool  septMaster;  \/\/ ÊòØÂê¶‰∏∫ÊóèÈïø$/;"	m	struct:SceneUser
septName	ScenesServer/SceneUser.h	/^    char  septName[MAX_NAMESIZE];           \/\/ ÂÆ∂ÊóèÂêçÁß∞$/;"	m	struct:SceneUser
septName	base/Command.h	/^	char	septName[MAX_NAMESIZE+1];		\/\/º“◊Â√˚$/;"	m	struct:Cmd::ListData
septName	base/Command.h	/^    char septName[MAX_NAMESIZE];\/\/Âç†È¢ÜÁöÑÂÆ∂ÊóèÂêçÁß∞$/;"	m	struct:Cmd::stRtnNpcOwnerListCmd::__anon116
septName	base/Command.h	/^  char   septName[MAX_NAMESIZE];    \/\/ ÂÆ∂ÊóèÂêçÁß∞$/;"	m	struct:Cmd::stAddMemberToSeptCmd
septName	base/Command.h	/^  char  septName[MAX_NAMESIZE];           \/\/ ÂÆ∂ÊóèÂêçÁß∞$/;"	m	struct:Cmd::stSeptSortInfo
septName	base/Command.h	/^  char  septName[MAX_NAMESIZE];         \/\/ ÂÆ∂ÊóèÂêçÁß∞$/;"	m	struct:Cmd::stSeptBaseInfoCmd
septName	base/Command.h	/^  char  septName[MAX_NAMESIZE];      \/\/ ÊâÄÂ±ûÂÆ∂Êóè$/;"	m	struct:Cmd::stBroadcastMemberInfo
septName	base/Command.h	/^  char  septName[MAX_NAMESIZE];      \/\/ ÊâÄÂ±ûÂÆ∂Êóè$/;"	m	struct:Cmd::stUnionRember
septName	base/Command.h	/^  char septName [MAX_NAMESIZE];$/;"	m	struct:Cmd::stSeptRecord
septName	base/Command.h	/^  char septName [MAX_NAMESIZE];$/;"	m	struct:Cmd::stSeptVoteRecord
septName	base/Command.h	/^  char septName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stVoteListSeptCmd
septName	base/Command.h	/^  char septName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stVoteSeptCmd
septName	tmpcode/commond.h	/^	char	septName[MAX_NAMESIZE+1];		\/\/º“◊Â√˚$/;"	m	struct:ListData
septName	tmpcode/commond.h	/^	char 	septName[MAX_NAMESIZE];    \/\/ º“◊Â√˚≥∆$/;"	m	struct:stAddMemberToSeptCmd
septName	tmpcode/commond.h	/^	char  septName[17];$/;"	m	struct:stSendSeptAdCmd
septName	tmpcode/commond.h	/^	char  septName[MAX_NAMESIZE];           \/\/ º“◊Â√˚≥∆$/;"	m	struct:stSeptSortInfo
septName	tmpcode/commond.h	/^	char septName[17];$/;"	m	struct:SeptNotice
septName	tmpcode/commond.h	/^	char septName[MAX_NAMESIZE];	\/\/º“◊Â’–ƒº∑¢∆»Àµƒº“◊Â√˚$/;"	m	struct:stRecruitSeptMemberCmd
septName	tmpcode/commond.h	/^	char septName[MAX_NAMESIZE];$/;"	m	struct:stCreateSeptBySign
septRank	base/SessionCommand.h	/^      BYTE septRank;$/;"	m	struct:Cmd::Session::t_sendUserRelationID
septTaskNum	base/SessionCommand.h	/^      WORD septTaskNum;$/;"	m	struct:Cmd::Session::t_sendUserRelationID
sept_maxhp	ScenesServer/ScenePk.h	/^      SWORD sept_maxhp;  \/\/ ÊèêÂçáÁîüÂëΩÊúÄÂ§ßÂÄºÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
sept_maxmp	ScenesServer/ScenePk.h	/^      SWORD sept_maxmp;  \/\/ ÊèêÂçáÊ≥ïÊúØÊúÄÂ§ßÂÄºÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
sept_umdamp	ScenesServer/ScenePk.h	/^      SWORD sept_umdamp;  \/\/ ÊèêÂçáÈ≠îÊ≥ïÊîªÂáªÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
sept_umdefp	ScenesServer/ScenePk.h	/^      SWORD sept_umdefp;  \/\/ ÊèêÂçáÊ≥ïÊúØÈò≤Âæ°ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
sept_updamp	ScenesServer/ScenePk.h	/^      SWORD sept_updamp;  \/\/ ÊèêÂçáÁâ©ÁêÜÊîªÂáªÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
sept_updefp	ScenesServer/ScenePk.h	/^      SWORD sept_updefp;  \/\/ ÊèêÂçáÁâ©ÁêÜÈò≤Âæ°ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
septid	SessionServer/Session.h	/^    DWORD septid;$/;"	m	class:UserSession
septid	base/CharBase.h	/^  DWORD septid;            \/\/\/ ÂÆ∂ÊóèID$/;"	m	struct:CharBase
septid	tmpcode/commond.h	/^		DWORD septid;                                   \/\/ À˘ Ùº“◊Âid$/;"	m	struct:stUnionRember
septid	tmpcode/commond.h	/^		DWORD septid; $/;"	m	struct:stScoreInfoSCUserCmd::stScoreInfo
septid	tmpcode/commond.h	/^	DWORD septid;                                   \/\/ º“◊Âid$/;"	m	struct:stBroadcastMemberInfo
septid	tmpcode/commond.h	/^	DWORD septid;                         \/\/∏ƒŒ™ π”√º“◊Âid øÕªß∂À¿¥«Î«Û$/;"	m	struct:stSeptBaseInfoCmd
septid	tmpcode/commond.h	/^	DWORD septid; $/;"	m	struct:stSeptScoreSCUserCmd
septid	tmpcode/commond.h	/^        DWORD septid;   \/\/º“◊Âid$/;"	m	struct:CardMainData
septmaster	base/SessionCommand.h	/^      bool  septmaster;    \/\/\/ ÊòØÂê¶‰∏∫ÊóèÈïø$/;"	m	struct:Cmd::Session::t_sendUserRelationID
septpost	base/SessionCommand.h	/^      BYTE septpost;$/;"	m	struct:Cmd::Session::t_sendUserRelationID
seqKillNum	tmpcode/commond.h	/^	WORD seqKillNum;		\/\/¡¨–¯ª˜…±¿€º∆$/;"	m	struct:stPopoScore
seqKillNums	tmpcode/commond.h	/^	WORD seqKillNums;        $/;"	m	struct:stSeqKillWeekendZhenxuanUserCmd
seqKillScore	tmpcode/commond.h	/^	WORD seqKillScore;		\/\/¡¨–¯ª˜…±¿€º∆$/;"	m	struct:stBaseScore
seqKillScore	tmpcode/commond.h	/^	WORD seqKillScore;		\/\/¡¨–¯ª˜…±¿€º∆∑÷ ˝$/;"	m	struct:stPopoScore
seqRevivalNum	tmpcode/commond.h	/^	WORD seqRevivalNum;		\/\/¡¨–¯æ»‘Æ¿€º∆$/;"	m	struct:stPopoScore
seqRevivalScore	tmpcode/commond.h	/^	WORD seqRevivalScore;	\/\/¡¨–¯æ»‘Æ¿€º∆$/;"	m	struct:stBaseScore
seqRevivalScore	tmpcode/commond.h	/^	WORD seqRevivalScore;	\/\/¡¨–¯æ»‘Æ¿€º∆∑÷ ˝$/;"	m	struct:stPopoScore
seqWinTimes	tmpcode/commond.h	/^	BYTE seqWinTimes;       \/\/µ±«∞¡¨ §¥Œ ˝$/;"	m	struct:t_DragonData
sequenceOK	SuperServer/ServerTask.h	/^    bool sequenceOK;          \/**<  «∑Ò“—æ≠¥¶¿ÌÕÍ≥…¡À∆Ù∂ØÀ≥–Ú *\/$/;"	m	class:ServerTask
serialID	ScenesServer/SceneNpc.cpp	/^DWORD SceneNpc::serialID = SceneNpc::maxUniqueID;$/;"	m	class:SceneNpc
serialID	ScenesServer/SceneNpc.h	/^  static DWORD serialID;$/;"	m	class:SceneNpc
serialNum	tmpcode/commond.h	/^		BYTE serialNum;$/;"	m	struct:stEquipMaskPropertyUserCmd
serialNum	tmpcode/commond.h	/^        WORD  serialNum;        \/\/–˚¥´ƒ⁄»›–Ú∫≈$/;"	m	struct:stReturnBargirlADContent
server	base/GmToolCommand.h	/^      char server[MAX_NAMESIZE];$/;"	m	struct:Cmd::GmTool::t_Chat_GmTool
server	base/GmToolCommand.h	/^      char server[MAX_NAMESIZE];$/;"	m	struct:Cmd::GmTool::t_Punish_GmTool
serverCountryID	ScenesServer/SceneManager.h	/^    WORD serverCountryID;	\/\/≥°æ∞∑˛µƒΩÁ”ÚID$/;"	m	class:SceneManager
serverID	base/MiniCommand.h	/^      WORD serverID;$/;"	m	struct:Cmd::Mini::t_Scene_SetScene
serverList	base/zSubNetService.h	/^	std::deque<Cmd::Super::ServerEntry> serverList;    \/**< ÂÖ≥ËÅîÊúçÂä°Âô®‰ø°ÊÅØÂàóË°®Ôºå‰øùËØÅÊúçÂä°Âô®‰πãÈó¥ÁöÑÈ™åËØÅÂÖ≥Á≥ª *\/$/;"	m	class:zSubNetService
serverSequence	SuperServer/ServerTask.cpp	/^static __gnu_cxx::hash_map<int, std::vector<int> > serverSequence;$/;"	v
serverTaskPool	FLServer/FLServer.h	/^	zTCPTaskPool *serverTaskPool;$/;"	m	class:FLService
serverTime	base/Command.h	/^  time_t serverTime;  \/\/ÊúçÂä°Âô®Êó∂Èó¥$/;"	m	struct:Cmd::stTimeSyncUserCmd
serverTime	tmpcode/commond.h	/^	time_t serverTime;	\/\/∑˛ŒÒ∆˜ ±º‰$/;"	m	struct:stTimeSyncUserCmd
server_id	ScenesServer/Quest.h	/^  static int server_id()$/;"	f	class:GlobalVarImpl
server_id	ScenesServer/Quest.h	/^  static int server_id()$/;"	f	class:UserVar
server_id	ScenesServer/Quest.h	/^  static void server_id(int id) $/;"	f	class:GlobalVarImpl
server_id	ScenesServer/Quest.h	/^  static void server_id(int id) $/;"	f	class:UserVar
serviceCallback	Robot/ClientService.cpp	/^bool ClientService::serviceCallback()$/;"	f	class:ClientService
serviceInst	base/zService.h	/^	static zService *serviceInst;    \/**< ¿‡µƒŒ®“ª µ¿˝÷∏’Î£¨∞¸¿®≈……˙¿‡£¨≥ı ºªØŒ™ø’÷∏’Î *\/$/;"	m	class:zService
serviceInstance	base/zService.h	/^	static zService *serviceInstance()$/;"	f	class:zService
serviceName	base/zMNetService.h	/^	std::string serviceName;      \/**< Õ¯¬Á∑˛ŒÒ∆˜√˚≥∆ *\/$/;"	m	class:zMNetService
serviceName	base/zNetService.h	/^	std::string serviceName;      \/**< Õ¯¬Á∑˛ŒÒ∆˜√˚≥∆ *\/$/;"	m	class:zNetService
service_gold	GatewayServer/GatewayServer.cpp	/^bool GatewayService::service_gold=true;$/;"	m	class:GatewayService
service_gold	GatewayServer/GatewayServer.h	/^	static bool service_gold;$/;"	m	class:GatewayService
service_stock	GatewayServer/GatewayServer.cpp	/^bool GatewayService::service_stock=true;$/;"	m	class:GatewayService
service_stock	GatewayServer/GatewayServer.h	/^	static bool service_stock;$/;"	m	class:GatewayService
ses	SuperServer/ServerTask.h	/^    Container ses;$/;"	m	class:ServerTask
session	FLServer/DBAccessCommand.h	/^      t_NewLoginSession session;$/;"	m	struct:Cmd::DBAccess::t_ChangeServer_SessionCheck
session	FLServer/DBAccessCommand.h	/^      t_NewLoginSession session;$/;"	m	struct:Cmd::DBAccess::t_LoginServer_SessionCheck
session	GatewayServer/LoginSessionManager.h	/^		t_NewLoginSession session;$/;"	m	struct:LoginSessionManager::LoginSession
session	base/BillCommand.h	/^      t_NewLoginSession session;$/;"	m	struct:Cmd::Bill::t_NewSession_Gateway
session	base/FLCommand.h	/^      t_NewLoginSession session;$/;"	m	struct:Cmd::FL::t_NewSession_Session
session	base/SuperCommand.h	/^      t_NewLoginSession session;$/;"	m	struct:Cmd::Super::t_NewSession_Bill
session	base/SuperCommand.h	/^      t_NewLoginSession session;$/;"	m	struct:Cmd::Super::t_NewSession_Gateway
sessionClient	GatewayServer/SessionClient.cpp	/^SessionClient *sessionClient = NULL;$/;"	v
sessionClient	ScenesServer/SessionClient.cpp	/^SessionClient *sessionClient = NULL;$/;"	v
sessionData	GatewayServer/LoginSessionManager.h	/^	LoginSessionHashmap sessionData;$/;"	m	class:LoginSessionManager
sessionMap	BillServer/BillSessionManager.h	/^    BillSessionHashmap sessionMap;$/;"	m	class:BillSessionManager
sessionMap	RecordServer/RecordSessionManager.h	/^    RecordSessionHashmap sessionMap;$/;"	m	class:RecordSessionManager
sessionTaskSet	BillServer/BillTaskManager.h	/^    BillTaskHashmap sessionTaskSet;$/;"	m	class:BillTaskManager
sessionTaskSet	SessionServer/SessionTaskManager.h	/^    SessionTaskHashmap sessionTaskSet;$/;"	m	class:SessionTaskManager
session_timeout_value	BillServer/BillManager.h	/^    static const int session_timeout_value = 10;$/;"	m	class:BillManager
session_timeout_value	BillServer/BillUser.h	/^    static const int session_timeout_value = 10;$/;"	m	class:BillUser
set	GatewayServer/CmdChecker.h	/^	typedef std::set<I> set;$/;"	t	class:CmdChecker
set	ScenesServer/Scene.cpp	/^  typedef std::set<zSceneObject *,std::less<zSceneObject *> > set;$/;"	t	struct:RemoveSceneObjectCallBack
set	ScenesServer/Scene.cpp	/^  typedef std::set<zSceneObject *,std::less<zSceneObject *> > set;$/;"	t	struct:UpdateSceneObjectCallBack
set	base/zDatabase.h	/^    bool set(const char *objects)$/;"	f	struct:NpcCarryObject
set	tmpcode/commond.h	/^        DWORD set[10];$/;"	m	struct:t_client_command
setAI	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::setAI(const t_NpcAIDefine ai,const bool setTime)$/;"	f	class:NpcAIController
setAI	ScenesServer/SceneNpcAI.cpp	/^void SceneNpc::setAI(const t_NpcAIDefine &ai)$/;"	f	class:SceneNpc
setAType	base/zDatabase.h	/^    void setAType(const char *data,int size)$/;"	f	struct:zNpcB
setActRegion	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::setActRegion(zPos pos,int x,int y)$/;"	f	class:NpcAIController
setActive	ScenesServer/HeroInfoManager.h	/^    void setActive()$/;"	f	struct:HeroData
setAll	base/Object.h	/^	void setAll(DWORD loc, DWORD tab, WORD ix, WORD iy)$/;"	f	struct:stObjectLocation
setAppendDamage	ScenesServer/SceneNpc.cpp	/^void SceneNpc::setAppendDamage(WORD mindamage,WORD maxdamage)$/;"	f	class:SceneNpc
setAspeedRate	ScenesServer/SceneNpc.cpp	/^void SceneNpc::setAspeedRate(float rate)$/;"	f	class:SceneNpc
setAttackTime	ScenesServer/SceneNpc.cpp	/^void SceneNpc::setAttackTime(const zRTime &ct)$/;"	f	class:SceneNpc
setAttackTime	ScenesServer/SceneNpc.cpp	/^void SceneNpc::setAttackTime(const zRTime &ct,const int delay)$/;"	f	class:SceneNpc
setAutoIntoTeam	tmpcode/commond.h	/^	setAutoIntoTeam()$/;"	f	struct:setAutoIntoTeam
setAutoIntoTeam	tmpcode/commond.h	/^struct setAutoIntoTeam : public stChatUserCmd$/;"	s
setAvailable	ScenesServer/zObject.cpp	/^void PetPack::setAvailable(WORD s)$/;"	f	class:PetPack
setAwake	ScenesServer/CardPk.cpp	/^bool zCard::setAwake()$/;"	f	class:zCard
setBattleTask	SessionServer/SessionServer.cpp	/^std::set<SessionTask *> setBattleTask;$/;"	v
setBlock	ScenesServer/Scene.h	/^	void setBlock(const zZone &pos) { setBlock(pos,TILE_ENTRY_BLOCK); }$/;"	f	class:Scene
setBlock	ScenesServer/Scene.h	/^	void setBlock(const zZone &zone,const BYTE block)$/;"	f	class:Scene
setBlock	ScenesServer/Scene.h	/^    void setBlock(const zPos &pos) { setBlock(pos,TILE_ENTRY_BLOCK); }$/;"	f	class:Scene
setBlock	ScenesServer/Scene.h	/^    void setBlock(const zPos &pos,const BYTE block)$/;"	f	class:Scene
setCardState	ScenesServer/zCard.h	/^    bool setCardState(const int state)$/;"	f	struct:zCard
setClearState	ScenesServer/SceneNpc.cpp	/^void SceneNpc::setClearState()$/;"	f	class:SceneNpc
setCountryDare	ScenesServer/Scene.h	/^    void setCountryDare(bool flag) { this->isCountryFormalDare = flag; }$/;"	f	class:Scene
setCountryOrder	GatewayServer/CountryInfo.cpp	/^void CountryInfo::setCountryOrder(Cmd::Session::CountrOrder *ptCmd)$/;"	f	class:CountryInfo
setCurTarget	ScenesServer/SceneEntryPk.cpp	/^bool SceneEntryPk::setCurTarget(DWORD tempid,DWORD type,bool force)$/;"	f	class:SceneEntryPk
setCurTarget	ScenesServer/SceneEntryPk.cpp	/^bool SceneEntryPk::setCurTarget(SceneEntryPk * target,bool force)$/;"	f	class:SceneEntryPk
setCurTarget	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::setCurTarget(DWORD id,DWORD type,bool force)$/;"	f	class:SceneNpc
setCurTarget	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::setCurTarget(SceneEntryPk * target,bool force)$/;"	f	class:SceneNpc
setDamage	ScenesServer/CardPk.cpp	/^void zCard::setDamage(DWORD dam)$/;"	f	class:zCard
setData	ScenesServer/script.cpp	/^void LuaScript::setData( const std::string& rData )$/;"	f	class:LuaScript
setDeathBackToMapID	ScenesServer/SceneUser.cpp	/^void SceneUser::setDeathBackToMapID(Scene *s)$/;"	f	class:SceneUser
setDeathState	ScenesServer/ScenePk.cpp	/^void SceneUser::setDeathState()$/;"	f	class:SceneUser
setDecMask	base/EncDec/EncDec.cpp	/^void CEncrypt::setDecMask(unsigned int m)$/;"	f	class:CEncrypt
setDecMask	base/zSocket.h	/^	inline void setDecMask(const DWORD m){enc.setDecMask(m);}$/;"	f	class:zSocket
setDefTarget	ScenesServer/SceneEntryPk.cpp	/^bool SceneEntryPk::setDefTarget(DWORD tempid,DWORD type,bool force)$/;"	f	class:SceneEntryPk
setDefTarget	ScenesServer/SceneEntryPk.cpp	/^bool SceneEntryPk::setDefTarget(SceneEntryPk * target,bool force)$/;"	f	class:SceneEntryPk
setDir	base/zSceneEntry.h	/^	void setDir(const BYTE dir)$/;"	f	struct:zSceneEntry
setEmperorDare	ScenesServer/Scene.h	/^    void setEmperorDare(bool flag,DWORD dwDefCountryID) { this->isEmperorDare = flag; this->dwEmperorDareDef = dwDefCountryID; }$/;"	f	class:Scene
setEmperorDare	ScenesServer/SceneUserManager.cpp	/^void SceneUserManager::setEmperorDare(Scene *scene)$/;"	f	class:SceneUserManager
setEncMask	base/EncDec/EncDec.cpp	/^void CEncrypt::setEncMask(unsigned int m)$/;"	f	class:CEncrypt
setEncMask	base/zSocket.h	/^	inline void setEncMask(const DWORD m){enc.setEncMask(m);}$/;"	f	class:zSocket
setEncMethod	base/EncDec/EncDec.cpp	/^void CEncrypt::setEncMethod(encMethod m)$/;"	f	class:CEncrypt
setEncMethod	base/zSocket.h	/^	inline void setEncMethod(CEncrypt::encMethod m) { enc.setEncMethod(m); }$/;"	f	class:zSocket
setEndBattleTime	ScenesServer/SceneEntryPk.cpp	/^void SceneEntryPk::setEndBattleTime(const zRTime &ct,int delay)$/;"	f	class:SceneEntryPk
setEndDieFlag	ScenesServer/CardPk.cpp	/^bool zCard::setEndDieFlag()$/;"	f	class:zCard
setEnragedFlag	ScenesServer/CardPk.cpp	/^bool zCard::setEnragedFlag()$/;"	f	class:zCard
setFreeze	ScenesServer/CardPk.cpp	/^bool zCard::setFreeze()$/;"	f	class:zCard
setFriendDegree	SessionServer/CRelationManager.cpp	/^void CRelationManager::setFriendDegree(Cmd::Session::t_CountFriendDegree_SceneSession *rev)$/;"	f	class:CRelationManager
setFriendDegree	SessionServer/Session.cpp	/^void UserSession::setFriendDegree(Cmd::Session::t_CountFriendDegree_SceneSession *rev)$/;"	f	class:UserSession
setFriendDegreeByOtherUser	SessionServer/CRelationManager.cpp	/^void CRelationManager::setFriendDegreeByOtherUser(const DWORD dwUserID,const WORD wdDegree,const DWORD currTime)$/;"	f	class:CRelationManager
setGameType	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::setGameType(Cmd::Session::ChallengeGameType type)$/;"	f	class:ChallengeGame
setGold	ScenesServer/HeroInfoManager.h	/^    void setGold()$/;"	f	struct:HeroData
setHairColor	ScenesServer/SceneUser.h	/^    void setHairColor(const DWORD rgb)$/;"	f	struct:SceneUser
setHairType	ScenesServer/SceneUser.h	/^    void setHairType(const BYTE hairtype)$/;"	f	struct:SceneUser
setHeroInUse	ScenesServer/HeroInfoManager.cpp	/^void HeroInfoManager::setHeroInUse(SceneUser& user, const WORD occupation)$/;"	f	class:HeroInfoManager
setHoldCountry	ScenesServer/Scene.h	/^    void setHoldCountry(DWORD dwCountryID) { this->dwHoldCountryID = dwCountryID; }$/;"	f	class:Scene
setHoldUnion	ScenesServer/Scene.h	/^    void setHoldUnion(DWORD dwUnionID) { this->dwHoldUnionID = dwUnionID; }$/;"	f	class:Scene
setHp	ScenesServer/CardPk.cpp	/^bool zCard::setHp(DWORD hp)$/;"	f	class:zCard
setIP	base/zTCPClient.h	/^	void setIP(const char *ip)$/;"	f	class:zTCPClient
setIndexKey	GatewayServer/GateUser.h	/^	void setIndexKey(const DWORD screen)$/;"	f	class:GateUser
setLoc	base/Object.h	/^	void setLoc(DWORD loc)$/;"	f	struct:stObjectLocation
setLockUser	ScenesServer/SceneNpc.cpp	/^void SceneNpc::setLockUser(const DWORD dwID)$/;"	f	class:SceneNpc
setMaster	ScenesServer/SceneNpc.h	/^  virtual void setMaster(SceneEntryPk *){}$/;"	f	class:SceneNpc
setMoveTime	ScenesServer/SceneNpc.cpp	/^void SceneNpc::setMoveTime(const zRTime &ct)$/;"	f	class:SceneNpc
setMoveTime	ScenesServer/SceneNpc.cpp	/^void SceneNpc::setMoveTime(const zRTime &ct,const int delay)$/;"	f	class:SceneNpc
setNewZoneConfig	ScenesServer/SceneManager.cpp	/^void SceneManager::setNewZoneConfig(bool type)$/;"	f	class:SceneManager
setNormalAI	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::setNormalAI()$/;"	f	class:NpcAIController
setNpcHoldData	ScenesServer/SceneUser.cpp	/^void SceneUser::setNpcHoldData(Cmd::Session::t_notifyNpcHoldData *rev)$/;"	f	class:SceneUser
setObjectBlock	ScenesServer/Scene.h	/^    void setObjectBlock(const zPos &pos) { setBlock(pos,TILE_OBJECT_BLOCK); }$/;"	f	class:Scene
setOverDueTime	ScenesServer/zObject.h	/^  void setOverDueTime(zRTime &ct_1)$/;"	f	struct:zSceneObject
setOwner	ScenesServer/zObject.h	/^  void setOwner(DWORD dwID,int protime=10)$/;"	f	struct:zSceneObject
setPetAI	ScenesServer/SceneNpc.h	/^  virtual void setPetAI(Cmd::petAIMode){}$/;"	f	class:SceneNpc
setPetType	ScenesServer/SceneNpc.h	/^  virtual void setPetType(Cmd::petType){}$/;"	f	class:SceneNpc
setPhaseTime	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::setPhaseTime(const int delay)$/;"	f	class:NpcAIController
setPort	base/zTCPClient.h	/^	void setPort(const WORD port)$/;"	f	class:zTCPClient
setPos	base/zSceneEntry.h	/^	bool setPos(const zPos &screenWH,const zPos &newPos)$/;"	f	struct:zSceneEntry
setPriv	ScenesServer/SceneUser.h	/^    void setPriv(BYTE lv)$/;"	f	struct:SceneUser
setPrivilege	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::setPrivilege(DWORD userID)$/;"	f	class:ChallengeGame
setProperty	base/zProperties.h	/^	void setProperty(const std::string &key,const std::string &value)$/;"	f	class:zProperties
setReadTimeout	base/zSocket.h	/^	inline void setReadTimeout(const int msec) { rd_msec = msec; }$/;"	f	class:zSocket
setRecoverTime	ScenesServer/SceneNpc.cpp	/^void SceneNpc::setRecoverTime(const zRTime& ct,int delay)$/;"	f	class:SceneNpc
setRelationData	SessionServer/Session.h	/^    bool setRelationData(const Cmd::Session::t_regUserSuccess_SceneSession *regsuccess)$/;"	f	class:UserSession
setRepeat	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::setRepeat(int re)$/;"	f	class:NpcAIController
setRunningState	base/zScene.h	/^	DWORD setRunningState(DWORD set)$/;"	f	struct:zScene
setScene	SessionServer/Session.cpp	/^void UserSession::setScene(SceneSession* pScene)$/;"	f	class:UserSession
setSceneWH	ScenesServer/zSceneEntryIndex.cpp	/^void zSceneEntryIndex::setSceneWH(const zPos sceneWH,const DWORD screenx,const DWORD screeny,const DWORD screenMax)$/;"	f	class:zSceneEntryIndex
setScript	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::setScript(int id)$/;"	f	class:SceneNpc
setSecondTarget	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::setSecondTarget(DWORD id,DWORD type)$/;"	f	class:SceneNpc
setSecondTarget	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::setSecondTarget(SceneEntryPk * target)$/;"	f	class:SceneNpc
setSelectUserInfo	GatewayServer/GateUser.cpp	/^void GateSelectUserSession::setSelectUserInfo(const Cmd::Record::t_Ret_SelectInfo_GateRecord *ptCmd)$/;"	f	class:GateSelectUserSession
setSpace	ScenesServer/zCard.cpp	/^void CardSlot::setSpace(WORD s)$/;"	f	class:CardSlot
setSpace	ScenesServer/zObject.cpp	/^void Package::setSpace(WORD s)$/;"	f	class:Package
setSpeedRate	ScenesServer/SceneEntryPk.h	/^    virtual void setSpeedRate(float rate){};$/;"	f	struct:SceneEntryPk
setSpeedRate	ScenesServer/SceneNpc.cpp	/^void SceneNpc::setSpeedRate(float rate)$/;"	f	class:SceneNpc
setStandingTime	ScenesServer/SceneNpc.cpp	/^void SceneNpc::setStandingTime(DWORD standTime)$/;"	f	class:SceneNpc
setState	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::setState(ChallengeState s)$/;"	f	class:ChallengeGame
setState	base/zSceneEntry.h	/^	void setState(const SceneEntryState & state)$/;"	f	struct:zSceneEntry
setState	base/zTCPClientTask.h	/^	void setState(const ConnState state)$/;"	f	class:zTCPClientTask
setState	base/zTCPTask.h	/^	void setState(const zTCPTask_State state)$/;"	f	class:zTCPTask
setState	base/zTCPTaskPool.h	/^	void setState(const int state)$/;"	f	class:zTCPTaskPool
setStateToNine	ScenesServer/SceneNpc.cpp	/^void SceneNpc::setStateToNine(WORD state)$/;"	f	class:SceneNpc
setStateToNine	ScenesServer/SceneUser.cpp	/^void SceneUser::setStateToNine(WORD state)$/;"	f	class:SceneUser
setTax	ScenesServer/Scene.h	/^    void setTax(DWORD dwTax) { countryTax = dwTax; }$/;"	f	class:Scene
setTax_person	tmpcode/commond.h	/^		char setTax_person[MAX_NAMESIZE];$/;"	m	struct:stReturnCountryTax::CityInfo
setTick	base/zTCPTask.h	/^	void setTick()$/;"	f	class:zTCPTask
setUState	base/zSceneEntry.h	/^	inline bool setUState(const int state)$/;"	f	struct:zSceneEntry
setUnionDare	ScenesServer/Scene.h	/^    void setUnionDare(bool flag){this->isUnionDare = flag;}$/;"	f	class:Scene
setUnique	base/zTCPTask.h	/^	void setUnique()$/;"	f	class:zTCPTask
setUser	SessionServer/CRelationManager.cpp	/^void CRelationManager::setUser(UserSession *pUser)$/;"	f	class:CRelationManager
setUsleepTime	GatewayServer/SceneClientManager.h	/^	void setUsleepTime(int time)$/;"	f	class:SceneClientManager
setUsleepTime	base/zTCPClient.h	/^	void setUsleepTime(const int utime)$/;"	f	class:zTCPBufferClient
setUsleepTime	base/zTCPClientTaskPool.h	/^	void setUsleepTime(int time)$/;"	f	class:zTCPClientTaskPool
setUsleepTime	base/zTCPTaskPool.h	/^	static void  setUsleepTime(int time)$/;"	f	class:zTCPTaskPool
setValid	base/zMetaData.h	/^	void setValid(bool value)$/;"	f	class:DBVarType
setVip	GatewayServer/GateUser.cpp	/^void GateUser::setVip(bool b)$/;"	f	class:GateUser
setVip	GatewayServer/GatewayTask.h	/^	void setVip(bool vip)$/;"	f	class:GatewayTask
setWriteTimeout	base/zSocket.h	/^	inline void setWriteTimeout(const int msec) { wr_msec = msec; }$/;"	f	class:zSocket
setX	base/Object.h	/^	void setX(DWORD ix)$/;"	f	struct:stObjectLocation
setXY	base/Object.h	/^	void setXY(WORD ix, WORD iy)$/;"	f	struct:stObjectLocation
setY	base/Object.h	/^	void setY(DWORD iy)$/;"	f	struct:stObjectLocation
setZoneID	SuperServer/SuperServer.h	/^    void setZoneID(const GameZone_t &gameZone)$/;"	f	class:SuperService
setZoneName	SuperServer/SuperServer.h	/^    void setZoneName(const char *zoneName)$/;"	f	class:SuperService
set_SeptManteau	tmpcode/commond.h	/^        set_SeptManteau() $/;"	f	struct:set_SeptManteau
set_SeptManteau	tmpcode/commond.h	/^struct set_SeptManteau : public stSeptUserCmd$/;"	s
set_flag	base/zSocket.h	/^	inline void set_flag(DWORD _f) { bitmask |= _f; }$/;"	f	class:zSocket
set_key_des	base/EncDec/EncDec.cpp	/^void CEncrypt::set_key_des(const_DES_cblock *key)$/;"	f	class:CEncrypt
set_key_des	base/zSocket.h	/^	inline void set_key_des(const_DES_cblock *key) { enc.set_key_des(key); }$/;"	f	class:zSocket
set_key_rc5	base/EncDec/EncDec.cpp	/^void CEncrypt::set_key_rc5(const unsigned char *data,int nLen,int rounds)$/;"	f	class:CEncrypt
set_key_rc5	base/zSocket.h	/^	inline void set_key_rc5(const BYTE *data,int nLen,int rounds) { enc.set_key_rc5(data,nLen,rounds); }$/;"	f	class:zSocket
set_manteau	tmpcode/commond.h	/^	set_manteau()$/;"	f	struct:set_manteau
set_manteau	tmpcode/commond.h	/^struct set_manteau : public stUnionUserCmd$/;"	s
set_me	ScenesServer/script_func.cpp	/^void set_me(SceneUser* user)$/;"	f
set_menu	ScenesServer/Quest.cpp	/^bool QuestList::set_menu(const std::string& menu, const Vars* vars)$/;"	f	class:QuestList
set_quest_status	ScenesServer/SceneNpc.cpp	/^void SceneNpc::set_quest_status(SceneUser* user)$/;"	f	class:SceneNpc
set_skillState	base/zDatabase.h	/^    bool set_skillState(const char *data)$/;"	f	struct:zSkillB
set_state	base/Command.h	/^inline void set_state(BYTE *state,const int teststate)$/;"	f	namespace:Cmd
set_state	tmpcode/commond.h	/^inline void set_state(unsigned char *state, const int teststate)$/;"	f
set_sys_state	tmpcode/commond.h	/^inline void set_sys_state(unsigned char *state, const int teststate)$/;"	f
set_timer	ScenesServer/Quest.cpp	/^int Vars::set_timer()$/;"	f	class:Vars
set_timer	ScenesServer/Quest.cpp	/^int Vars::set_timer(int start)$/;"	f	class:Vars
set_value	ScenesServer/Quest.h	/^  int set_value(Operation op,const std::string& name,typename Operation::value_type const & action,int tmp=0,SceneUser *user=NULL)$/;"	f	class:Vars
set_var	ScenesServer/script_func.cpp	/^void set_var(Vars* vars,const char* name,int value)$/;"	f
set_varS	ScenesServer/script_func.cpp	/^void set_varS(Vars* vars,const char* name,const char * value)$/;"	f
setmsecs	base/zTime.h	/^	void setmsecs(QWORD data)$/;"	f	class:zRTime
setpname	tmpcode/commond.h	/^	char	setpname[MAX_NAMESIZE];							\/\/ ∑ø÷˜À˘‘⁄º“◊Âµƒ√˚≥∆$/;"	m	struct:stHomeItem
setpos	base/zDatabase.h	/^    BYTE setpos;$/;"	m	struct:zObjectB
setprotectTime	ScenesServer/zObject.h	/^  void setprotectTime( int i )$/;"	f	struct:zSceneObject
setter	SuperServer/InfoClientManager.h	/^    InfoClient_set setter;$/;"	m	class:InfoClientManager
setter	SuperServer/RolechangeClientManager.h	/^    RolechangeClient_set setter;$/;"	m	class:RolechangeClientManager
setting	ScenesServer/SceneUser.h	/^        BYTE setting[19];$/;"	m	struct:SceneUser::__anon185::__anon186
setting	base/Command.h	/^    DWORD setting;        \/**< Â§ßÈôÜÊ†áÂøó *\/$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
setting	tmpcode/commond.h	/^		DWORD setting;				\/**< ¥Û¬Ω±Í÷æ *\/$/;"	m	struct:stClientNewMap
settings	tmpcode/commond.h	/^	HappyCardBoxAutoCfg settings;$/;"	m	struct:rt_stAutoCfgHappyCardBoxUserCmd
setupBinaryArchive	ScenesServer/SceneUser.cpp	/^DWORD SceneUser::setupBinaryArchive(const char *revData)$/;"	f	class:SceneUser
setupCharBase	ScenesServer/SceneEntryPk.h	/^    virtual void setupCharBase(bool lock=true) {};$/;"	f	struct:SceneEntryPk
setupCharBase	ScenesServer/SceneUser.cpp	/^void SceneUser::setupCharBase(bool lock)$/;"	f	class:SceneUser
setupCharm	ScenesServer/SceneUser.cpp	/^void SceneUser::setupCharm()$/;"	f	class:SceneUser
setupSkillBase	ScenesServer/Skill.cpp	/^bool zSkill::setupSkillBase(SceneEntryPk *pEntry)$/;"	f	class:zSkill
setupTempArchive	ScenesServer/SceneUser.cpp	/^void SceneUser::setupTempArchive(const char *revData,const DWORD dwSize)$/;"	f	class:SceneUser
sevendownp	ScenesServer/ScenePk.h	/^      SWORD sevendownp;  \/\/Èôç‰ΩéÈô∑ÂÖ•‰∏ÉÂ§ßÁä∂ÊÄÅÂá†Áéá82$/;"	m	struct:SkillState::__anon155::__anon156
sex	base/Command.h	/^  BYTE sex;$/;"	m	struct:Cmd::stRelation
sex	base/Command.h	/^  BYTE sex;$/;"	m	struct:Cmd::stRelationStatusCmd
sex	base/zDatabase.h	/^    BYTE sex;$/;"	m	struct:zObjectB
sex	tmpcode/commond.h	/^	BYTE  sex;                                              \/\/ –‘± $/;"	m	struct:stSeptRember
sex	tmpcode/commond.h	/^	BYTE  sex;                           \/\/ –‘± $/;"	m	struct:stBroadcastSeptMemberInfo
sex	tmpcode/commond.h	/^	BYTE sex;	\/\/ –‘±0,±£√‹£¨1ƒ–£¨2≈Æ		\/\/∏ƒŒ™¥ÊÀ˘ Ù °∑›$/;"	m	struct:stPersonalSign
sex	tmpcode/commond.h	/^	BYTE sex;                               \/\/1£∫ƒ–∞Ò£¨ 2£∫≈Æ∞Ò$/;"	m	struct:stReturnFlowerListUserCmd
sex	tmpcode/commond.h	/^	BYTE sex;                       \/\/1: ƒ–∞Ò£¨ 2£∫≈Æ∞Ò$/;"	m	struct:stRequestFlowerListUserCmd
sex	tmpcode/commond.h	/^	BYTE sex;               \/\/»ÀŒÔ–‘±           $/;"	m	struct:stRelationStatusCmd
sex	tmpcode/commond.h	/^	BYTE sex;       \/\/1 ƒ–∞Ò£¨2≈Æ∞Ò$/;"	m	struct:stGetFlowerListAward
sex	tmpcode/commond.h	/^	BYTE sex;$/;"	m	struct:stRelation
shengCountryID	tmpcode/commond.h	/^	DWORD shengCountryID;$/;"	m	struct:stReturnCountryPowerCmd
shiFu	tmpcode/commond.h	/^        ShiTuInfo shiFu;\/\/ ¶∏µ–≈œ¢$/;"	m	struct:rtTableListMapScreenUserCmd
shield	base/Card.h	/^    BYTE shield;	    \/\/ •∂‹$/;"	m	struct:t_CardPK
shield	base/zDatabase.h	/^    BYTE shield;	    \/\/ •∂‹(1,0)$/;"	m	struct:zCardB
shield	base/zDatabase.h	/^    DWORD shield;	    \/\/ •∂‹(1,0)$/;"	m	struct:CardBase
shiftMove	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::shiftMove(const int direct)$/;"	f	class:SceneNpc
shiftMove	base/zAStar.h	/^inline bool zAStar<step,radius>::shiftMove(const int direct)$/;"	f	class:zAStar
shikongMapName	tmpcode/commond.h	/^    char shikongMapName[MAX_NAMESIZE+1];\/\/ ±ø’¥´ÀÕµÿµ„$/;"	m	struct:ShiKongChuanSong
shikongPosX	tmpcode/commond.h	/^    WORD shikongPosX;\/\/ ±ø’¥´ÀÕ◊¯±Í$/;"	m	struct:ShiKongChuanSong
shikongPosY	tmpcode/commond.h	/^    WORD shikongPosY;       $/;"	m	struct:ShiKongChuanSong
shop	tmpcode/commond.h	/^        stUnionShop shop[0];$/;"	m	struct:stUnionShopMeetigInfo
shoutID	base/Card.h	/^    DWORD shoutID;	    \/\/’Ω∫ID(skill)$/;"	m	struct:t_CardPK
shoutID	base/zDatabase.h	/^    DWORD shoutID;	    \/\/’Ω∫ID(skill)$/;"	m	struct:CardBase
shoutID	base/zDatabase.h	/^    DWORD shoutID;	    \/\/’Ω∫ID(skill)$/;"	m	struct:zCardB
show	ScenesServer/Quest.h	/^  std::string show() const$/;"	f	class:GlobalVarImpl
show	ScenesServer/Quest.h	/^  std::string show() const$/;"	f	class:UserVar
showCurrentEffect	ScenesServer/CardPk.cpp	/^void zCard::showCurrentEffect(const DWORD state,bool isShow)$/;"	f	class:zCard
showCurrentEffect	ScenesServer/SceneNpc.cpp	/^void SceneNpc::showCurrentEffect(const WORD &state,bool isShow,bool notify)$/;"	f	class:SceneNpc
showCurrentEffect	ScenesServer/SceneUser.cpp	/^void SceneUser::showCurrentEffect(const WORD &state,bool isShow,bool notify)$/;"	f	class:SceneUser
showGuardPositionUserCmd	tmpcode/commond.h	/^        showGuardPositionUserCmd()$/;"	f	struct:showGuardPositionUserCmd
showGuardPositionUserCmd	tmpcode/commond.h	/^struct showGuardPositionUserCmd : public stQuestUserCmd$/;"	s
showHP	ScenesServer/SceneNpc.cpp	/^void SceneNpc::showHP(SceneUser *pUser,DWORD npchp)$/;"	f	class:SceneNpc
showMagicToAll	ScenesServer/Skill.cpp	/^bool zSkill::showMagicToAll()$/;"	f	class:zSkill
showMe	ScenesServer/Chat.cpp	/^bool Gm::showMe(SceneUser *pUser,const char *para)$/;"	f	class:Gm
showPeronTaskUserCmd	tmpcode/commond.h	/^        showPeronTaskUserCmd()$/;"	f	struct:showPeronTaskUserCmd
showPeronTaskUserCmd	tmpcode/commond.h	/^struct showPeronTaskUserCmd : public stQuestUserCmd$/;"	s
showTime	ScenesServer/SceneNpc.h	/^  zRTime showTime;$/;"	m	class:SceneNpc
shuDu	tmpcode/commond.h	/^	BYTE shuDu[9][9];$/;"	m	struct:stSendShuDuPara
shutdown_time	SessionServer/SessionServer.h	/^    Cmd::Session::t_shutdown_SceneSession shutdown_time;$/;"	m	class:SessionService
sign	tmpcode/commond.h	/^	char sign[110]; \/\/ ∏ˆ–‘«©√˚$/;"	m	struct:stPersonalSign
signal	base/zCond.h	/^	void signal()$/;"	f	class:zCond
signal	base/zSyncEvent.h	/^	void signal()$/;"	f	class:zSyncEvent
silentMe	ScenesServer/CardPk.cpp	/^void zCard::silentMe()$/;"	f	class:zCard
simulateData	tmpcode/commond.h	/^	LingQiSimulate simulateData;$/;"	m	struct:stSimulateLingQiUserCmd
simulateData	tmpcode/commond.h	/^	SimulateHorse simulateData;$/;"	m	struct:stSimulateHorseDataCmd
sindex	GatewayServer/SceneClient.h	/^    SceneIndex sindex;$/;"	m	class:SceneClient
singShowType	tmpcode/commond.h	/^	BYTE singShowType;      \/\/“˜≥™œ‘ æ¿‡–Õ$/;"	m	struct:stShowSingUserCmd
singType	tmpcode/commond.h	/^	WORD singType;          \/\/“˜≥™¿‡–Õ$/;"	m	struct:stShowSingUserCmd
singleton_default	base/zMisc.h	/^struct singleton_default$/;"	s
sitdown	ScenesServer/SceneUser.cpp	/^void SceneUser::sitdown()$/;"	f	class:SceneUser
sitdownRestitute	ScenesServer/SceneUser.h	/^    bool sitdownRestitute;$/;"	m	struct:SceneUser
siteInfo	tmpcode/commond.h	/^    }siteInfo;$/;"	m	struct:stTransCrystalPropertyUserCmd	typeref:struct:stTransCrystalPropertyUserCmd::__anon233
size	ScenesServer/SkillManager.cpp	/^int UserSkillM::size() const$/;"	f	class:UserSkillM
size	ScenesServer/script_func.h	/^    int size;$/;"	m	struct:RecentMsg
size	ScenesServer/zCard.cpp	/^WORD CardSlot::size() const$/;"	f	class:CardSlot
size	ScenesServer/zObject.cpp	/^WORD Package::size() const$/;"	f	class:Package
size	ScenesServer/zObject.cpp	/^WORD PetPack::size() const$/;"	f	class:PetPack
size	base/BillCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Bill::t_Bill_ForwardBill
size	base/BillCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Bill::t_Bill_ForwardBillToScene
size	base/BillCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Bill::t_Bill_ForwardUser
size	base/BillCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Bill::t_Scene_ForwardBill
size	base/CharBase.h	/^  DWORD size;$/;"	m	struct:BinaryArchiveMember
size	base/CharBase.h	/^  DWORD size;$/;"	m	struct:TempArchiveMember
size	base/Command.h	/^	WORD size;$/;"	m	struct:Cmd::MapData_ItemHeader
size	base/Command.h	/^	WORD size;$/;"	m	struct:Cmd::stUpdateShopAdvcmd
size	base/Command.h	/^    DWORD  size;$/;"	m	struct:Cmd::stScrollMapPropertyUserCmd
size	base/Command.h	/^    WORD size;$/;"	m	struct:Cmd::stQuestVarsUserCmd::Var
size	base/Command.h	/^    WORD size;$/;"	m	struct:Cmd::stRequestMapNpcDataMapScreenUserCmd
size	base/Command.h	/^    WORD size;$/;"	m	struct:Cmd::stRequestUserDataMapScreenUserCmd
size	base/Command.h	/^    int size()$/;"	f	struct:Cmd::stAddMapNpcAndPosMapScreenStateUserCmd
size	base/Command.h	/^    int size()$/;"	f	struct:Cmd::stAddMapNpcMapScreenStateUserCmd
size	base/Command.h	/^    int size()$/;"	f	struct:Cmd::stAddMapNpcPetMapScreenStateUserCmd
size	base/Command.h	/^    int size()$/;"	f	struct:Cmd::stAddUserAndPosMapScreenStateUserCmd
size	base/Command.h	/^    int size()$/;"	f	struct:Cmd::stAddUserMapScreenStateUserCmd
size	base/Command.h	/^    int size;$/;"	m	struct:Cmd::stResponseLandMassMoveUserCmd
size	base/Command.h	/^  BYTE size;        \/\/ Áâ©ÂìÅÊï∞Èáè$/;"	m	struct:Cmd::stServerChannelChatUserCmd
size	base/Command.h	/^  BYTE size;$/;"	m	struct:Cmd::stChannelChatUserCmd
size	base/Command.h	/^  BYTE size;$/;"	m	struct:Cmd::stRtnKingListCmd
size	base/Command.h	/^  DWORD size;$/;"	m	struct:Cmd::stConsignGoldListStockUserCmd
size	base/Command.h	/^  DWORD size;$/;"	m	struct:Cmd::stConsignMoneyListStockUserCmd
size	base/Command.h	/^  DWORD size;$/;"	m	struct:Cmd::stFirstFiveListStockUserCmd
size	base/Command.h	/^  DWORD size;$/;"	m	struct:Cmd::stHistoryGoldStockUserCmd
size	base/Command.h	/^  DWORD size;$/;"	m	struct:Cmd::stHistoryMoneyStockUserCmd
size	base/Command.h	/^  DWORD size;$/;"	m	struct:Cmd::stRetValidQuestUserCmd
size	base/Command.h	/^  DWORD size;$/;"	m	struct:Cmd::stReturnTeamMemberPosition
size	base/Command.h	/^  DWORD size;$/;"	m	struct:Cmd::stSelfHistoryGoldStockUserCmd
size	base/Command.h	/^  DWORD size;$/;"	m	struct:Cmd::stSelfHistoryMoneyStockUserCmd
size	base/Command.h	/^  DWORD size;$/;"	m	struct:Cmd::stStampDataUserCmd
size	base/Command.h	/^  DWORD size;\/\/Áä∂ÊÄÅ‰∏™Êï∞$/;"	m	struct:Cmd::stSelectReturnStatesPropertyUserCmd
size	base/Command.h	/^  WORD size;                     \/\/ Êï∞Èáè$/;"	m	struct:Cmd::stAllSeptMemberCmd
size	base/Command.h	/^  WORD size;                     \/\/ Êï∞Èáè$/;"	m	struct:Cmd::stAllUnionMemberCmd
size	base/Command.h	/^  WORD size;$/;"	m	struct:Cmd::stCountryInfoUserCmd
size	base/Command.h	/^  WORD size;$/;"	m	struct:Cmd::stJpegPassportUserCmd
size	base/Command.h	/^  WORD size;$/;"	m	struct:Cmd::stRtnCityOwnerListCmd
size	base/Command.h	/^  WORD size;$/;"	m	struct:Cmd::stRtnNpcOwnerListCmd
size	base/Command.h	/^  WORD size;$/;"	m	struct:Cmd::stSendRelationListCmd
size	base/Command.h	/^  WORD size;$/;"	m	struct:Cmd::stUserInfoUserCmd
size	base/GmToolCommand.h	/^      BYTE size;                              \/\/ Áâ©ÂìÅÊï∞Èáè$/;"	m	struct:Cmd::GmTool::t_Chat_GmTool
size	base/MiniCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Mini::t_Mini_ForwardMiniToScene
size	base/MiniCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Mini::t_Mini_ForwardUser
size	base/MiniCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Mini::t_Mini_UserForwardMini
size	base/MiniCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Mini::t_Scene_ForwardMini
size	base/RecordCommand.h	/^      DWORD size;          \/\/Êï∞Èáè$/;"	m	struct:Cmd::Record::CountrOrder
size	base/RolechangeCommand.h	/^	DWORD size;$/;"	m	struct:Cmd::Rolechange::t_ForwardMsg_CommonCmd
size	base/RolechangeCommand.h	/^	DWORD size;$/;"	m	struct:Cmd::Rolechange::t_OverZone_ChatCmd
size	base/RolechangeCommand.h	/^	DWORD size;$/;"	m	struct:Cmd::Rolechange::t_Rtn_ZoneList
size	base/SceneCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Scene::t_Bill_ForwardScene
size	base/SceneCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Scene::t_ForwardScene_dupChange
size	base/SceneCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Scene::t_Nine_ExceptMe_ForwardScene
size	base/SceneCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Scene::t_Nine_ForwardScene
size	base/SceneCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Scene::t_Nine_dir_ForwardScene
size	base/SceneCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Scene::t_Nine_rdir_ForwardScene
size	base/SceneCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Scene::t_Scene_ForwardScene
size	base/SceneCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Scene::t_Scene_ForwardSceneToBill
size	base/SceneCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Scene::t_Scene_ForwardSceneUserToBill
size	base/SceneCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Scene::t_User_ForwardMap
size	base/SceneCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Scene::t_User_ForwardScene
size	base/SessionCommand.h	/^		WORD size;$/;"	m	struct:Cmd::Session::t_updateOnline_SessionGate
size	base/SessionCommand.h	/^      DWORD size;          \/\/Êï∞Èáè$/;"	m	struct:Cmd::Session::CountrOrder
size	base/SessionCommand.h	/^      WORD    size;        \/\/ Âõ¢ÈòüÂàóË°®ÁöÑÂ§ßÂ∞è$/;"	m	struct:Cmd::Session::t_CountFriendDegree_SceneSession
size	base/SessionCommand.h	/^      WORD  size;        \/\/ Èòü‰ºç‰∫∫Êï∞$/;"	m	struct:Cmd::Session::t_RequestFriendDegree_SceneSession
size	base/SessionCommand.h	/^      WORD  size;        \/\/ Èòü‰ºç‰∫∫Êï∞$/;"	m	struct:Cmd::Session::t_ReturnFriendDegree_SceneSession
size	base/SessionCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Session::t_Session_ForwardCountry
size	base/SessionCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Session::t_Session_ForwardUser
size	base/SessionCommand.h	/^      WORD  size;$/;"	m	struct:Cmd::Session::t_Session_ForwardWorld
size	base/SuperCommand.h	/^	DWORD size;$/;"	m	struct:Cmd::Super::t_ForwardMsg_Scene
size	base/SuperCommand.h	/^      WORD size;$/;"	m	struct:Cmd::Super::t_Startup_ServerEntry_NotifyMe
size	base/zDBConnPool.h	/^	unsigned int size;  \/**<  ˝æ›¥Û–° *\/$/;"	m	struct:__anon153
size	base/zEntryManager.h	/^	inline DWORD size() const$/;"	f	class:LimitHash
size	base/zEntryManager.h	/^	inline DWORD size() const$/;"	f	class:MultiHash
size	base/zEntryManager.h	/^	inline int size() const$/;"	f	class:zEntryManager
size	base/zMetaData.h	/^	DWORD size()$/;"	f	class:DBRecord
size	base/zMisc.h	/^	int size()$/;"	f	class:zCmdCheck
size	base/zThread.h	/^	const Container::size_type size()$/;"	f	class:zThreadGroup
size	tmpcode/commond.h	/^		WORD size;$/;"	m	struct:stQuestVarsUserCmd::Var
size	tmpcode/commond.h	/^	 BYTE size;$/;"	m	struct:stJoin_ChannelUserCmd
size	tmpcode/commond.h	/^	 BYTE size;$/;"	m	struct:stRetTeamInfoCmd
size	tmpcode/commond.h	/^	 BYTE size;$/;"	m	struct:stRetTeamInfo_Client
size	tmpcode/commond.h	/^	BYTE		size;		\/\/Ãÿ’˜¬Î¥Û–°$/;"	m	struct:stStampDataUserCmd
size	tmpcode/commond.h	/^	BYTE size;	\/\/∞Òµ•»À ˝$/;"	m	struct:infoDukeSortLastWeekUserCmd
size	tmpcode/commond.h	/^	BYTE size;	\/\/∞Òµ•»À ˝$/;"	m	struct:infoMarquisSortLastWeekUserCmd
size	tmpcode/commond.h	/^	BYTE size;                             \/\/µÿÕº∏ˆ ˝  $/;"	m	struct:stShowDynamicMapUserCmd
size	tmpcode/commond.h	/^	BYTE size;                      \/\/\/ 0≥§ ˝◊È¥Û–°$/;"	m	struct:stRetMasterPerformInfoCmd
size	tmpcode/commond.h	/^	BYTE size;                      \/\/\/ 0≥§ ˝◊È¥Û–°$/;"	m	struct:stRetUserPerformInfoCmd
size	tmpcode/commond.h	/^	BYTE size;                      \/\/–– ˝$/;"	m	struct:stSendObjNewBoxPropertyUserCmd
size	tmpcode/commond.h	/^	BYTE size;              \/**<∑¿”˘’ﬂ ˝ƒø*\/	$/;"	m	struct:stToAttAttackMagicUserCmd
size	tmpcode/commond.h	/^	BYTE size;              \/**<∑¿”˘’ﬂ ˝ƒø*\/$/;"	m	struct:stToNineAttackMagicUserCmd
size	tmpcode/commond.h	/^	BYTE size;              \/**∑¿”˘’ﬂ ˝ƒø*\/$/;"	m	struct:stToDefAttackMagicUserCmd
size	tmpcode/commond.h	/^	BYTE size;              \/\/±ª—˚«Îµƒ’‚◊ÈÕÊº“µƒ ˝¡ø$/;"	m	struct:stCreateChannelUserCmd
size	tmpcode/commond.h	/^	BYTE size;      \/\/÷∏∂®À¯∂®ƒƒ“ª––$/;"	m	struct:stReqNewBoxLockItemUserCmd
size	tmpcode/commond.h	/^	BYTE size;  \/\/ —˚«Îµƒ∏ˆ ˝$/;"	m	struct:stInviteLTQUserCmd
size	tmpcode/commond.h	/^	BYTE size;$/;"	m	struct:RetMsgUnionInfoCmd
size	tmpcode/commond.h	/^	BYTE size;$/;"	m	struct:RetNoticeUnionInfoCmd
size	tmpcode/commond.h	/^	BYTE size;$/;"	m	struct:deskInfoHouseUserCmd
size	tmpcode/commond.h	/^	BYTE size;$/;"	m	struct:stInitFishUserCmd
size	tmpcode/commond.h	/^	BYTE size;$/;"	m	struct:stRetFarmNoticeUserCmd
size	tmpcode/commond.h	/^	BYTE size;$/;"	m	struct:stRetSeptStoreNoticeSeptCmd
size	tmpcode/commond.h	/^	BYTE size;$/;"	m	struct:stRetTrafficInfoUserCmd
size	tmpcode/commond.h	/^	BYTE size;$/;"	m	struct:stRetUnionAndProInfo
size	tmpcode/commond.h	/^	BYTE size;$/;"	m	struct:stReturnAttGuardNpc
size	tmpcode/commond.h	/^	BYTE size;$/;"	m	struct:stSendAllAchivementAwardInfoUserCmd
size	tmpcode/commond.h	/^	BYTE size;$/;"	m	struct:stSendResultNewBoxPropertyUserCmd
size	tmpcode/commond.h	/^	BYTE size;$/;"	m	struct:st_LevelUpNeedThingHouseUserCmd
size	tmpcode/commond.h	/^	BYTE size;$/;"	m	struct:st_RetRoomerNameHouseUserCmd
size	tmpcode/commond.h	/^	BYTE size;\/\/∏ˆ ˝$/;"	m	struct:stReturnMergeServerTeamUserCmd
size	tmpcode/commond.h	/^	DWORD size;                             \/\/\/ 0≥§ ˝◊È¥Û–°$/;"	m	struct:stRetCityFundUnionHistoryCmd
size	tmpcode/commond.h	/^	DWORD size;             \/\/\/ 0≥§ ˝◊È¥Û–°$/;"	m	struct:stRetCityGuardInfo
size	tmpcode/commond.h	/^	DWORD size;             \/\/\/ 0≥§ ˝◊È¥Û–°$/;"	m	struct:stSetCityGuardCmd
size	tmpcode/commond.h	/^	DWORD size;     \/\/∏Ωº”≤Œ ˝¥Û–°£∫»Áπ˚≤ª–Ë“™∏Ωº”‘ÚŒ™0$/;"	m	struct:rt_ObjVisitHouseUserCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stAddTeamRecruitInfoUserCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stClearFlowerEffectNine
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stConsignGoldListStockUserCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stConsignMoneyListStockUserCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stFirstFiveListStockUserCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stForceRelationDataUserCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stMapBuildMapScreenUserCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stMapDecorationScreenUserCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetCityMinxinRecCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetCityReliveInfo
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetCreateSeptSignInfo
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetCriminalApplyInfo
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetCriminalListInfo
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetFarmInfoUserCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetFinishBuildInfo
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetRecallMasterInfo
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetResidentDareCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetResidentInfoCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetSeptAvatarInfo
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetUnionBusinessInfo
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetUnionInfo
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetUnionSellList
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetUnionSellRecond
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetUnionStorageList
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stRetUnionTechInfo
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stReturnTeamMemberPosition
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stSelfHistoryGoldStockUserCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stSelfHistoryMoneyStockUserCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stSendFlowerEffectNineCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stSendSeptStoreDataCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stShowAllUserCmd
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stUnionMarketDownGood
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:stUnionResidentHireList
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:t_LastPositionTimeListSept
size	tmpcode/commond.h	/^	DWORD size;$/;"	m	struct:t_RetCountrySeptNotice
size	tmpcode/commond.h	/^	DWORD size;\/\/◊¥Ã¨∏ˆ ˝$/;"	m	struct:stDanceTime
size	tmpcode/commond.h	/^	DWORD size;\/\/◊¥Ã¨∏ˆ ˝$/;"	m	struct:stSelectReturnStatesPropertyUserCmd
size	tmpcode/commond.h	/^	WORD size;                     \/\/  ˝¡ø $/;"	m	struct:stSellObjListNpcTradeUserCmd
size	tmpcode/commond.h	/^	WORD size;                     \/\/  ˝¡ø$/;"	m	struct:stAllSeptMemberCmd
size	tmpcode/commond.h	/^	WORD size;                     \/\/  ˝¡ø$/;"	m	struct:stAllUnionMemberCmd
size	tmpcode/commond.h	/^	WORD size;$/;"	m	struct:rt_ObjectsHouseUserCmd
size	tmpcode/commond.h	/^	WORD size;$/;"	m	struct:stCountryInfoUserCmd
size	tmpcode/commond.h	/^	WORD size;$/;"	m	struct:stGetRelationListCmd
size	tmpcode/commond.h	/^	WORD size;$/;"	m	struct:stServerReturnLoginFailedCmd
size	tmpcode/commond.h	/^	WORD size;\/\/  ˝¡ø$/;"	m	struct:MapData_ItemHeader
size	tmpcode/commond.h	/^                WORD size;$/;"	m	struct:showPeronTaskUserCmd::Var
size	tmpcode/commond.h	/^         BYTE size;              \/\/±ª—˚«Îµƒ’‚◊ÈÕÊº“µƒ ˝¡ø$/;"	m	struct:stInviteGroup_ChannelUserCmd
size	tmpcode/commond.h	/^        BYTE size;$/;"	m	struct:stSendResultListLuoRiCmd
size	tmpcode/commond.h	/^        DWORD size; $/;"	m	struct:stUnionShopMeetigInfo
size	tmpcode/commond.h	/^        DWORD size;$/;"	m	struct:rtTopKillCountUserCmd
size	tmpcode/commond.h	/^        DWORD size;$/;"	m	struct:stNewUnionMerchListInfo
size	tmpcode/commond.h	/^        DWORD size;$/;"	m	struct:stUnionMerchListInfo
size	tmpcode/commond.h	/^        WORD  size;            \/\/≈‰∑Ωµƒ ˝¡ø$/;"	m	struct:stRetShowSkillStoreInfo
size	tmpcode/commond.h	/^        WORD  size;            \/\/◊∞±∏≈‰∑Ωµƒ ˝¡ø$/;"	m	struct:stNotifyPatternUserCmd
size	tmpcode/commond.h	/^        WORD size; \/\/∫Û√Ê…Ë÷√µƒ∏ˆ ˝$/;"	m	struct:stClientKOKOption
size	tmpcode/commond.h	/^     BYTE size;                              \/\/±ª—˚«Îµƒ’‚◊ÈÕÊº“µƒ ˝¡ø$/;"	m	struct:stInvite_ChannelUserCmd
size	tmpcode/commond.h	/^    BYTE size;      \/\/∞Òµ•»À ˝$/;"	m	struct:infoDukeSortThisWeekUserCmd
size	tmpcode/commond.h	/^    BYTE size;      \/\/∞Òµ•»À ˝$/;"	m	struct:infoMarquisSortThisWeekUserCmd
size	tmpcode/commond.h	/^    BYTE size;$/;"	m	struct:rt_AllFlowerHouseUserCmd
size	tmpcode/commond.h	/^    DWORD   size;$/;"	m	struct:stAccekKeyPropertyUserCmd
size	tmpcode/commond.h	/^    DWORD size; \/\/∏ˆ ˝,ƒø«∞≤ª≥¨π˝10∏ˆ$/;"	m	struct:stNotifyShenLongReward
size	tmpcode/commond.h	/^    DWORD size;$/;"	m	struct:stBindUserToOther
size	tmpcode/commond.h	/^    WORD  size;       \/\/≤ƒ¡œ¡–±Ìµƒ¥Û–°$/;"	m	struct:stStartEmployGatherCmd
size	tmpcode/commond.h	/^    WORD size;$/;"	m	struct:rtShenYuInfoUserCmd
size	tmpcode/commond.h	/^   DWORD   size;$/;"	m	struct:stUserInfoUserCmd
size_	base/zMisc.h	/^	DWORD size_;$/;"	m	class:CheckedBuf
size_type	BillServer/BillClientManager.h	/^    typedef BillClientContainer::size_type size_type;$/;"	t	class:BillClientManager
skill	ScenesServer/SceneSkill.cpp	/^  zSkill *skill;$/;"	m	struct:TeamSkillExec
skill	ScenesServer/zObject.h	/^  SKILL skill;  \/\/Âçï‰∏™ÊäÄËÉΩÂä†Êàê$/;"	m	class:Equips
skill	base/Object.h	/^	} skill[10]; \/\/ººƒ‹º”≥…$/;"	m	struct:t_Object	typeref:struct:t_Object::skillbonus
skill	base/zDatabase.h	/^    DWORD  skill;        \/\/ ººƒ‹$/;"	m	struct:zNpcB
skill1	ScenesServer/zCard.h	/^    SkillSlot skill1;	\/\/ººƒ‹≤€$/;"	m	class:CardSlots
skill2	ScenesServer/zCard.h	/^    SkillSlot skill2;	$/;"	m	class:CardSlots
skillAction	ScenesServer/SceneEntryPk.h	/^    bool skillAction;   \/\/\/ ÊäÄËÉΩÊîªÂáªËÆ∏ÂèØ$/;"	m	struct:SceneEntryPk
skillCheckReduceObject	ScenesServer/zObject.cpp	/^bool EquipPack::skillCheckReduceObject(SceneUser* pThis,DWORD kind,WORD num)$/;"	f	class:EquipPack
skillData	tmpcode/commond.h	/^    HorseSkill skillData[5];\/\/◊Ó∂‡5∏ˆººƒ‹$/;"	m	struct:t_HorseData
skillID	tmpcode/commond.h	/^	DWORD skillID;                          \/\/ººƒ‹ID$/;"	m	struct:stSendSkillIdTwilightCityUserCmd
skillID	tmpcode/commond.h	/^	DWORD skillID;          \/\/ººƒ‹ID$/;"	m	struct:stShowSingUserCmd
skillID	tmpcode/commond.h	/^	DWORD skillID; $/;"	m	struct:stDropObjSeptPopoUserCmd
skillID	tmpcode/commond.h	/^	DWORD skillID;$/;"	m	struct:stPickObjSeptPopoUserCmd
skillID	tmpcode/commond.h	/^    DWORD skillID[0];\/\/ººƒ‹ID¡–±Ì$/;"	m	struct:stShowMaterialHorsesAndSkillsUserCmd
skillID	tmpcode/commond.h	/^    WORD  skillID;          \/\/ººƒ‹ID$/;"	m	struct:HorseSkill
skillLevel	tmpcode/commond.h	/^		DWORD skillLevel;$/;"	m	struct:t_RTPositionSkillInfoSept::__anon264
skillList	tmpcode/commond.h	/^	} skillList[0];$/;"	m	struct:stSeptSkillList	typeref:struct:stSeptSkillList::__anon303
skillMap	base/zDatabase.h	/^    std::map<int,std::vector<npcSkill> > skillMap;$/;"	m	struct:zNpcB
skillNum	tmpcode/commond.h	/^    BYTE  skillNum;\/\/ººƒ‹∏ˆ ˝$/;"	m	struct:stShowMaterialHorsesAndSkillsUserCmd
skillPKType	base/zDatabase.h	/^    DWORD skillPKType;$/;"	m	struct:zNpcB
skillPoint	base/Command.h	/^  WORD  skillPoint;                   \/\/\/ ÊäÄËÉΩÁÇπÊï∞$/;"	m	struct:Cmd::t_MainUserData
skillPoint	tmpcode/commond.h	/^	WORD  skillPoint;                   \/\/\/ ººƒ‹µ„ ˝$/;"	m	struct:t_MainUserData
skillPoints	tmpcode/commond.h	/^	WORD skillPoints;\/\/ººƒ‹µ„ ˝$/;"	m	struct:LingQiData
skillReduceObject	ScenesServer/zCard.cpp	/^bool BattleSlot::skillReduceObject(SceneUser* pThis,DWORD id,DWORD num)$/;"	f	class:BattleSlot
skillReduceObject	ScenesServer/zCard.cpp	/^bool EquipSlot::skillReduceObject(SceneUser* pThis,DWORD id,DWORD num)$/;"	f	class:EquipSlot
skillReduceObject	ScenesServer/zCard.cpp	/^bool HandSlot::skillReduceObject(SceneUser* pThis,DWORD id,DWORD num)$/;"	f	class:HandSlot
skillReduceObject	ScenesServer/zCard.cpp	/^bool HeroSlot::skillReduceObject(SceneUser* pThis,DWORD id,DWORD num)$/;"	f	class:HeroSlot
skillReduceObject	ScenesServer/zCard.cpp	/^bool SkillSlot::skillReduceObject(SceneUser* pThis,DWORD id,DWORD num)$/;"	f	class:SkillSlot
skillReduceObject	ScenesServer/zCard.cpp	/^bool TombSlot::skillReduceObject(SceneUser* pThis,DWORD id,DWORD num)$/;"	f	class:TombSlot
skillReduceObject	ScenesServer/zObject.cpp	/^bool EquipPack::skillReduceObject(SceneUser* pThis,DWORD kind,WORD num)$/;"	f	class:EquipPack
skillReduceObject	ScenesServer/zObject.cpp	/^bool MainPack::skillReduceObject(SceneUser* pThis,DWORD id,DWORD num)$/;"	f	class:MainPack
skillStatus	base/zDatabase.h	/^    std::vector<SkillStatus> skillStatus;  \/\/–ßπ˚$/;"	m	struct:zSkillB
skillStatusM	ScenesServer/zCard.h	/^    SkillStatusManager skillStatusM;$/;"	m	struct:zCard
skillStoreData	tmpcode/commond.h	/^		BYTE skillStoreData[0];  \/\/¥Ú‘Ï∞⁄ÃØ ˝æ›$/;"	m	union:stMapDataMapScreenUserCmd::__anon225
skillType	tmpcode/commond.h	/^	BYTE  skillType;        \/\/ººƒ‹¿‡–Õ£¨1±ª∂Ø£¨2÷˜∂Ø$/;"	m	struct:HorseSkill
skillUpLevel	ScenesServer/SceneEntryPk.h	/^    virtual WORD skillUpLevel(WORD skilltype,WORD skillkind){return 0;}$/;"	f	struct:SceneEntryPk
skillUpLevel	ScenesServer/SceneUser.cpp	/^WORD SceneUser::skillUpLevel(WORD skilltype,WORD skillkind)$/;"	f	class:SceneUser
skill_id	tmpcode/commond.h	/^        DWORD skill_id;  \/\/∞⁄ÃØµƒººƒ‹id$/;"	m	struct:stBuildSkillStoreCmd
skill_id	tmpcode/commond.h	/^        DWORD skill_id;$/;"	m	struct:stConfirmFeeSkillStore
skill_id	tmpcode/commond.h	/^        DWORD skill_id;$/;"	m	struct:stReqChangeSkillStoreType
skill_id	tmpcode/commond.h	/^        DWORD skill_id;$/;"	m	struct:t_SkillStoreData
skill_info	tmpcode/commond.h	/^        OneLifeSkill skill_info;   \/\/∞⁄ÃØººƒ‹–≈œ¢$/;"	m	struct:stRetShowSkillStoreInfo
skillbase	ScenesServer/SkillStatusManager.h	/^    const zSkillB *skillbase;$/;"	m	struct:SkillStatusCarrier
skillbonus	base/Object.h	/^	struct skillbonus {$/;"	s	struct:t_Object
skillexp	tmpcode/commond.h	/^    DWORD skillexp; \/\/ººƒ‹ Ï¡∑∂»$/;"	m	struct:stSetLingliLingQiUserCmd
skillid	base/zDatabase.h	/^    DWORD   skillid;            \/\/ººƒ‹ID$/;"	m	struct:zSkillB
skillid	tmpcode/commond.h	/^		DWORD  skillid;         \/\/ººƒ‹ID$/;"	m	struct:stMergeLingQiUserCmd::lingQiSkillsMerge
skillid	tmpcode/commond.h	/^		WORD  skillid; \/\/ººƒ‹ID$/;"	m	struct:stSendCanLearnFakeSkillLingQiUserCmd::lingQiSkillsCanLearn
skillid	tmpcode/commond.h	/^	DWORD skillid;$/;"	m	struct:stRemoveSeptSkill
skillid	tmpcode/commond.h	/^	DWORD skillid;$/;"	m	struct:stUpgradeFlySkillMagicUserCmd
skillid	tmpcode/commond.h	/^	WORD skillid;\/\/ººƒ‹ID$/;"	m	struct:UserSkillsShow
skillid	tmpcode/commond.h	/^        DWORD  skillid;         \/\/ººƒ‹ID$/;"	m	struct:stDataDecayedLingQiUserCmd::lingQiSkills
skillid	tmpcode/commond.h	/^        DWORD  skillid;         \/\/ººƒ‹ID$/;"	m	struct:stSendAllLingQiSkillsUserCmd::lingQiSkills
skillid	tmpcode/commond.h	/^        DWORD skillid;                                                                  $/;"	m	struct:stNotifyClearSkill
skillid	tmpcode/commond.h	/^        WORD  skillid;          \/\/ººƒ‹ID$/;"	m	struct:stRemoveHorseSkillUserCmd
skillid	tmpcode/commond.h	/^        WORD  skillid;          \/\/ººƒ‹ID$/;"	m	struct:stShowHorseSkillUserCmd
skillid	tmpcode/commond.h	/^    DWORD  skillid;         \/\/ººƒ‹ID$/;"	m	struct:lingQiSkillsWatch
skillid	tmpcode/commond.h	/^    DWORD  skillid;         \/\/ººƒ‹ID$/;"	m	struct:stLingQiSkillUserCmd
skillid	tmpcode/commond.h	/^    DWORD skillid;$/;"	m	struct:stClearLingQiSkillUserCmd
skillid	tmpcode/commond.h	/^    DWORD skillid;$/;"	m	struct:stLearnFakeSkillLingQiUserCmd
skillid	tmpcode/commond.h	/^    DWORD skillid;$/;"	m	struct:stStudyLingQiSkillUserCmd
skillid	tmpcode/commond.h	/^    DWORD skillid;\/\/ººƒ‹ID$/;"	m	struct:stSetLingliLingQiUserCmd
skillid	tmpcode/commond.h	/^    DWORD skillid;\/\/œ¥µƒººƒ‹$/;"	m	struct:stRemoveLingQiSkillUserCmd
skilllevel	tmpcode/commond.h	/^	WORD  skilllevel;\/\/ººƒ‹µ»º∂$/;"	m	struct:UserSkillsShow
skilllevel	tmpcode/commond.h	/^        DWORD  skilllevel;      \/\/ººƒ‹µ»º∂$/;"	m	struct:stDataDecayedLingQiUserCmd::lingQiSkills
skilllevel	tmpcode/commond.h	/^        DWORD  skilllevel;      \/\/ººƒ‹µ»º∂$/;"	m	struct:stSendAllLingQiSkillsUserCmd::lingQiSkills
skilllevel	tmpcode/commond.h	/^    DWORD  skilllevel;      \/\/ººƒ‹µ»º∂$/;"	m	struct:lingQiSkillsWatch
skilllevel	tmpcode/commond.h	/^    DWORD  skilllevel;      \/\/ººƒ‹µ»º∂$/;"	m	struct:stLingQiSkillUserCmd
skillnum	tmpcode/commond.h	/^	WORD skillnum;\/\/ººƒ‹∏ˆ ˝$/;"	m	struct:stMergeLingQiUserCmd
skillnum	tmpcode/commond.h	/^    WORD skillnum;   \/\/ººƒ‹∏ˆ ˝$/;"	m	struct:stDataDecayedLingQiUserCmd
skillnum	tmpcode/commond.h	/^    WORD skillnum;  \/\/ººƒ‹∏ˆ ˝$/;"	m	struct:stReturnQuestionLingQi
skillnum	tmpcode/commond.h	/^    WORD skillnum;  \/\/ººƒ‹∏ˆ ˝$/;"	m	struct:stSendAllLingQiSkillsUserCmd
skillnum	tmpcode/commond.h	/^    WORD skillnum;  \/\/ººƒ‹∏ˆ ˝$/;"	m	struct:stWatchLingQiUserCmd
skillnum	tmpcode/commond.h	/^    WORD skillnum;\/\/ººƒ‹∏ˆ ˝$/;"	m	struct:stSendCanLearnFakeSkillLingQiUserCmd
skillpoint	base/CharBase.h	/^  WORD  skillpoint;          \/\/\/ ÊäÄËÉΩÁÇπÊï∞$/;"	m	struct:CharBase
skillpoints	tmpcode/commond.h	/^	WORD skillpoints;\/\/ººƒ‹µ„ ˝$/;"	m	struct:stShowAllSkillUserPropertyUserCmd
skills	ScenesServer/zObject.h	/^  SKILL skills; \/\/ÂÖ®Á≥ªÊäÄËÉΩÂä†Êàê $/;"	m	class:Equips
skills	base/Command.h	/^	DWORD skills[4];        \/\/ÊäÄËÉΩ$/;"	m	struct:Cmd::t_PetData
skills	base/Object.h	/^	} skills;	\/\/»´œµººƒ‹º”≥…$/;"	m	struct:t_Object	typeref:struct:t_Object::skillsbonus
skills	base/zDatabase.h	/^    char  skills[1024];    \/\/  π”√ººƒ‹$/;"	m	struct:zNpcB
skills	base/zDatabase.h	/^    struct skills$/;"	s	struct:zObjectB
skills	tmpcode/commond.h	/^	DWORD skills[4];        \/\/ººƒ‹$/;"	m	struct:t_PetData
skills	tmpcode/commond.h	/^	UserSkillsShow skills[0];$/;"	m	struct:stShowAllSkillUserPropertyUserCmd
skills	tmpcode/commond.h	/^        }skills[0];$/;"	m	struct:stRetPotentialSkillBuildUserCmd	typeref:struct:stRetPotentialSkillBuildUserCmd::SkillItem
skills	tmpcode/commond.h	/^    lingQiSkillsWatch skills[0];$/;"	m	struct:stReturnQuestionLingQi
skills	tmpcode/commond.h	/^    lingQiSkillsWatch skills[0];$/;"	m	struct:stWatchLingQiUserCmd
skills	tmpcode/commond.h	/^    }skills[0];         $/;"	m	struct:stSendAllLingQiSkillsUserCmd	typeref:struct:stSendAllLingQiSkillsUserCmd::lingQiSkills
skills	tmpcode/commond.h	/^    }skills[0];$/;"	m	struct:stDataDecayedLingQiUserCmd	typeref:struct:stDataDecayedLingQiUserCmd::lingQiSkills
skillsbonus	base/Object.h	/^	struct skillsbonus {$/;"	s	struct:t_Object
sleep	base/zThread.h	/^	static void sleep(const long sec)$/;"	f	class:zThread
slot	base/HeroCardCmd.h	/^	BYTE slot;	    \/\/ƒƒ∏ˆ≤€$/;"	m	struct:Cmd::stAddBattleCardPropertyUserCmd
slotType2Name	ScenesServer/ChallengeGame.cpp	/^char* ChallengeGame::slotType2Name(DWORD slot)$/;"	f	class:ChallengeGame
slots	ScenesServer/ChallengeGame.h	/^	CardSlots slots;$/;"	m	class:ChallengeGame
slow	ScenesServer/zObject.h	/^  WORD slow; \/\/ÂáèÈÄüÂ¢ûÂä†$/;"	m	class:Equips
slow	base/Object.h	/^	WORD slow; \/\/ºıÀŸ‘ˆº”$/;"	m	struct:t_Object
slowRes	base/Command.h	/^  WORD slowRes;    \/\/ÊäóÂáèÈÄü$/;"	m	struct:Cmd::t_HorseData
slowdef	ScenesServer/zObject.h	/^  WORD slowdef; \/\/ÊäóÂáèÈÄüÂ¢ûÂä†$/;"	m	class:Equips
slowdef	base/Object.h	/^	WORD slowdef; \/\/øπºıÀŸ‘ˆº”$/;"	m	struct:t_Object
sm	ScenesServer/SceneManager.h	/^    static SceneManager * sm;$/;"	m	class:SceneManager
sm	SessionServer/SessionManager.h	/^    static SceneSessionManager *sm;$/;"	m	class:SceneSessionManager
sm	SessionServer/SessionManager.h	/^    static UserSessionManager *sm;$/;"	m	class:UserSessionManager
sm	base/RecordCommand.h	/^      Cmd::stSendMail sm;$/;"	m	struct:Cmd::Record::t_userExist_SceneRecord
sm	tmpcode/commond.h	/^		stShopMeetInfo	sm[MAX_MEETING_NUM];$/;"	m	struct:stUnionMerchRoadInfo
smatch	base/zRegex.h	/^	std::string smatch;$/;"	m	class:zRegex
snd_queue_size	base/zSocket.h	/^	inline DWORD snd_queue_size() { return _snd_queue.rd_size() + _enc_queue.rd_size(); }$/;"	f	class:zSocket
sneak	base/Card.h	/^    BYTE sneak;		    \/\/«±––$/;"	m	struct:t_CardPK
sneak	base/zDatabase.h	/^    BYTE sneak;		    \/\/«±––(1,0)$/;"	m	struct:zCardB
sneak	base/zDatabase.h	/^    DWORD sneak;	    \/\/«±––(1,0)$/;"	m	struct:CardBase
snm	ScenesServer/SceneNpcManager.h	/^    static SceneNpcManager *snm;$/;"	m	class:SceneNpcManager
sock	base/zSocket.h	/^	int sock;                  \/**< Ã◊Ω”ø⁄ *\/$/;"	m	class:zSocket
sock	base/zTCPServer.h	/^	int sock;$/;"	m	class:zTCPServer
socket	base/Object.h	/^	DWORD socket[6]; \/\/ø◊Changed for kok ∏ƒŒ™ø◊$/;"	m	struct:t_Object
socket	base/zDatabase.h	/^    struct socket$/;"	s	struct:zObjectB
sockettype	tmpcode/commond.h	/^	}sockettype[6];$/;"	m	struct:EquipSimulate	typeref:struct:EquipSimulate::SocketType
soil	tmpcode/commond.h	/^	SoilInfo soil[0];$/;"	m	struct:stResSoilInfoHouseUserCmd
soilID	tmpcode/commond.h	/^	BYTE soilID;	\/\/Õ¡µÿ±‡∫≈	∏ﬂÀƒŒª∑øº‰∫≈ µÕÀƒŒªµÿøÈ∫≈$/;"	m	struct:SoilInfo
soilID	tmpcode/commond.h	/^	BYTE soilID;	\/\/Õ¡µÿ±‡∫≈$/;"	m	struct:stPlantSoilHouseUserCmd
soilID	tmpcode/commond.h	/^	BYTE soilID;	\/\/Õ¡µÿ±‡∫≈(1-6)$/;"	m	struct:stReqSoilHouseUserCmd
soilID	tmpcode/commond.h	/^	BYTE soilID;	\/\/Õ¡µÿ±‡∫≈£®1-6£©$/;"	m	struct:stStealSoilHouseUserCmd
soilID	tmpcode/commond.h	/^	BYTE soilID;$/;"	m	struct:stCleanBugSoilHouseUserCmd
soilID	tmpcode/commond.h	/^	BYTE soilID;$/;"	m	struct:stCleanGrassSoilHouseUserCmd
soilID	tmpcode/commond.h	/^	BYTE soilID;$/;"	m	struct:stHarvestSoilHouseUserCmd
soilID	tmpcode/commond.h	/^	BYTE soilID;$/;"	m	struct:stUpgradeSoilHouseUserCmd
soilID	tmpcode/commond.h	/^	BYTE soilID;$/;"	m	struct:stWaterSoilHouseUserCmd
sorce	tmpcode/commond.h	/^        DWORD sorce;$/;"	m	struct:stSendAllScoreCmd::allSorce
sort	ScenesServer/script.cpp	/^void ScriptQuest::sort()$/;"	f	class:ScriptQuest
sort	ScenesServer/zCard.cpp	/^bool CardSlot::sort()$/;"	f	class:CardSlot
sort	ScenesServer/zObject.cpp	/^bool Package::sort(SceneUser* pUser, DWORD flag)$/;"	f	class:Package
sort_type	tmpcode/commond.h	/^	BYTE sort_type; \/\/»ŒŒÒµƒ∑÷¿‡∫≈,Œ™¡ÀøÕªß∂À∑÷¿‡œ‘ æ$/;"	m	struct:stQuestInfoUserCmd
soul	tmpcode/commond.h	/^		BYTE soul;                      \/\/¡ÈªÍ Ù–‘,Ã◊◊∞$/;"	m	struct:stQueryAuction
soulThisID	tmpcode/commond.h	/^    DWORD soulThisID;       \/\/¿‡–ÕŒ™1 ±£¨ÃÓ–ƒªÍµ¿æﬂµƒŒ®“ªID$/;"	m	struct:stBreakHorseSoulUserCmd
source	BillServer/BillClientManager.cpp	/^int    BillClientManager::source = -1;$/;"	m	class:BillClientManager
source	BillServer/BillClientManager.h	/^    static int  source;$/;"	m	class:BillClientManager
source	base/UserCommand.h	/^      int       source;                      \/\/Êù•Ê∫ê$/;"	m	struct:Cmd::UserServer::t_cmd_fillin
source	base/UserCommand.h	/^      int       source;                      \/\/Êù•Ê∫ê$/;"	m	struct:Cmd::UserServer::t_cmd_mcard
source	base/UserCommand.h	/^      int       source;                    \/\/Êù•Ê∫ê$/;"	m	struct:Cmd::UserServer::t_cmd_consume
source	base/UserCommand.h	/^      int       source;                    \/\/Êù•Ê∫ê$/;"	m	struct:Cmd::UserServer::t_cmd_pcard
source	base/zDatabase.h	/^    DWORD source;	    \/\/¿¥‘¥$/;"	m	struct:CardBase
source	base/zDatabase.h	/^    DWORD source;	    \/\/¿¥‘¥$/;"	m	struct:zCardB
source_id	base/CharBase.h	/^  DWORD source_id;	\/\/‘¥«¯µƒcharid$/;"	m	struct:CharBase
source_zone	base/CharBase.h	/^  DWORD source_zone;	\/\/‘¥«¯ID$/;"	m	struct:CharBase
sp	base/CharBase.h	/^  DWORD sp;              \/\/\/ ÂΩìÂâç‰ΩìÂäõÂÄº$/;"	m	struct:CharBase
sp	base/Command.h	/^  DWORD sp;            \/\/\/ ÂΩìÂâç‰ΩìÂäõÂÄº$/;"	m	struct:Cmd::t_MainUserData
sp	base/Command.h	/^  DWORD sp;      \/\/Á≤æÊ∞îÂÄº$/;"	m	struct:Cmd::t_CartoonData
sp	base/Command.h	/^  DWORD sp;$/;"	m	struct:Cmd::stHpExpCartoonCmd
sp	tmpcode/commond.h	/^	DWORD sp;						\/\/\/ µ±«∞ÃÂ¡¶÷µ$/;"	m	struct:t_MainUserData
sp_leechdom	base/CharBase.h	/^  DWORD sp_leechdom;\/\/‰ΩøÁî®‰ΩìÂäõÂÄºËçØÂìÅ‰∏™Êï∞$/;"	m	struct:CharTest
space	ScenesServer/CardManager.cpp	/^int GameCardM::space(const SceneUser* user) const$/;"	f	class:GameCardM
space	ScenesServer/ObjectManager.cpp	/^int UserObjectM::space(const SceneUser* user) const$/;"	f	class:UserObjectM
space	ScenesServer/script_func.cpp	/^int  space(SceneUser* user)$/;"	f
space	ScenesServer/zCard.cpp	/^WORD CardSlot::space() const$/;"	f	class:CardSlot
space	ScenesServer/zObject.cpp	/^WORD Package::space() const$/;"	f	class:Package
space	base/SessionCommand.h	/^      WORD space;$/;"	m	struct:Cmd::Session::t_getMailItem_SceneSession
space	base/xml/xml_utility.h	/^	int space;$/;"	m	struct:detail::indent
spaceDot	tmpcode/commond.h	/^	DWORD	spaceDot;                      \/\/ø’º‰µ„ ˝$/;"	m	struct:HomeMapData
spaceDot	tmpcode/commond.h	/^	DWORD spaceDot;$/;"	m	struct:stModifyHomeDataUserCmd
spcialObjId	tmpcode/commond.h	/^        DWORD spcialObjId;$/;"	m	struct:stNotifySpecialFeedDragonUserCmd
spcost	ScenesServer/ScenePk.h	/^      DWORD  spcost;            \/\/\/ Ê∂àËÄó‰ΩìÂäõÂÄº$/;"	m	struct:PkValue::__anon159::__anon160
specialFeedObj	tmpcode/commond.h	/^    DWORD specialFeedObj;   \/\/…œ¥ŒÃÿ ‚Œπ—¯µƒŒÔ∆∑$/;"	m	struct:t_DragonData
specialNpc	ScenesServer/SceneNpcManager.h	/^    MonkeyNpcs specialNpc;$/;"	m	class:SceneNpcManager
specialNpcCallBack	ScenesServer/SceneNpcManager.h	/^struct specialNpcCallBack$/;"	s
speed	base/Command.h	/^  WORD speed;    \/\/ÈÄüÂ∫¶$/;"	m	struct:Cmd::t_HorseData
speed	tmpcode/commond.h	/^    WORD speed;             \/\/ÀŸ∂»%$/;"	m	struct:t_HorseData
speedOutM	ScenesServer/ScenePk.cpp	/^bool ScenePkState::speedOutM(WORD speed,DWORD dwTime)$/;"	f	class:ScenePkState
speedOutMove	ScenesServer/SceneUser.cpp	/^bool SceneUser::speedOutMove(DWORD time,WORD speed,int len)$/;"	f	class:SceneUser
speedOutP	ScenesServer/ScenePk.cpp	/^bool ScenePkState::speedOutP(WORD speed,DWORD dwTime)$/;"	f	class:ScenePkState
speedRate	ScenesServer/SceneNpc.h	/^  float speedRate;$/;"	m	class:SceneNpc
speedUpUnder20	ScenesServer/SceneNpc.h	/^  bool speedUpUnder20;$/;"	m	class:SceneNpc
spi	ScenesServer/zObject.h	/^  WORD spi;  \/\/ Á≤æÁ•û$/;"	m	class:Equips
spi	base/Object.h	/^	WORD spi;  \/\/ æ´…Ò                               \/\/ ∂‘”¶¬Ì∆• æ´…Ò$/;"	m	struct:t_Object
spi	tmpcode/commond.h	/^	WORD spi;$/;"	m	struct:SimulateHorse
spi_Attribute	ScenesServer/zObject.h	/^	  WORD spi_Attribute;		\/\/ Á≤æÁ•ûÂ∑≤ÁªèÂä†ËøáÁöÑËá™Áî±ÁÇπ$/;"	m	struct:Equips::Freedom_Attribute
spiritRePerHour	tmpcode/commond.h	/^	DWORD	spiritRePerHour;               \/\/√ø–° ±µƒ¡È∆¯ª÷∏¥÷µ£®ª˘±æ÷µ£©$/;"	m	struct:HomeMapData
spiritValue	tmpcode/commond.h	/^	DWORD	spiritValue;                   \/\/¡È∆¯÷µ$/;"	m	struct:HomeMapData
splock	ScenesServer/SceneEntryPk.h	/^    bool splock;  \/\/\/ÂØπspËøõË°åÈîÅÂÆö$/;"	m	struct:SceneEntryPk
spr	ScenesServer/zObject.h	/^  WORD spr;  \/\/ ‰ΩìÂäõÂÄºÊÅ¢Â§ç$/;"	m	class:Equips
spspeedup	ScenesServer/ScenePk.h	/^      SWORD spspeedup;  \/\/‰ΩìÂäõÂÄºÊÅ¢Â§çÈÄüÂ∫¶Â¢ûÂä†36$/;"	m	struct:SkillState::__anon155::__anon156
spupdam	ScenesServer/ScenePk.h	/^      SWORD spupdam;    \/\/ÂºìÁÆ≠Á±ªÂ¢ûÂä†Áâ©ÁêÜÊîªÂáªÂäõÂõ∫ÂÆöÂÄº(Ë¢´Âä®)$/;"	m	struct:SkillState::__anon155::__anon156
spupdamp	ScenesServer/ScenePk.h	/^      SWORD spupdamp;    \/\/ÂºìÁÆ≠Á±ªÂ¢ûÂä†Áâ©ÁêÜÊîªÂáªÂäõÁôæÂàÜÊØî(Ë¢´Âä®)$/;"	m	struct:SkillState::__anon155::__anon156
srcID	base/BroadCommand.h	/^      WORD srcID;$/;"	m	struct:Cmd::BroadServer::t_restart_ServerEntry_NotifyOther
srcID	base/SuperCommand.h	/^      WORD srcID;$/;"	m	struct:Cmd::Super::t_Startup_ServerEntry_NotifyOther
srcID	base/SuperCommand.h	/^      WORD srcID;$/;"	m	struct:Cmd::Super::t_restart_ServerEntry_NotifyOther
srcIndex	tmpcode/commond.h	/^    BYTE srcIndex;\/\/Ωªªªø®∆¨  ªÚ’ﬂ  ∂™∆˙ƒ≥“ª’≈ø®∆¨$/;"	m	struct:st_rtShenYuCardOptionUserCmd
srcZone	base/BroadCastCommand.h	/^      GameZone_t srcZone;$/;"	m	struct:Cmd::BroadCast::t_BroadcastMessage
src_name	base/SessionCommand.h	/^      BYTE src_name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_gmCommand_SceneSession
src_name	base/SessionCommand.h	/^      BYTE src_name[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_privateChat_SceneSession
src_priv	base/SessionCommand.h	/^      BYTE src_priv;\/\/‰ΩøÁî®Êåá‰ª§ËÄÖÊùÉÈôê$/;"	m	struct:Cmd::Session::t_gmCommand_SceneSession
ss	SessionServer/SessionServer.cpp	/^struct ss$/;"	s
stAbandonLingQiUserCmd	tmpcode/commond.h	/^	stAbandonLingQiUserCmd()$/;"	f	struct:stAbandonLingQiUserCmd
stAbandonLingQiUserCmd	tmpcode/commond.h	/^struct stAbandonLingQiUserCmd : public stLingQiUserCmd$/;"	s
stAbandonQuestUserCmd	base/Command.h	/^  stAbandonQuestUserCmd()$/;"	f	struct:Cmd::stAbandonQuestUserCmd
stAbandonQuestUserCmd	base/Command.h	/^struct stAbandonQuestUserCmd : public stQuestUserCmd$/;"	s	namespace:Cmd
stAbandonQuestUserCmd	tmpcode/commond.h	/^	stAbandonQuestUserCmd()$/;"	f	struct:stAbandonQuestUserCmd
stAbandonQuestUserCmd	tmpcode/commond.h	/^struct stAbandonQuestUserCmd : public stQuestUserCmd$/;"	s
stAbdicateUnionBusiness	tmpcode/commond.h	/^	stAbdicateUnionBusiness () : stBusinessUserCmd(ABDICATE_UNION_BUSINESSMEN_USERCMD) {};$/;"	f	struct:stAbdicateUnionBusiness
stAbdicateUnionBusiness	tmpcode/commond.h	/^struct stAbdicateUnionBusiness : public stBusinessUserCmd $/;"	s
stAbstractChuanchengPropertyUserCmd	tmpcode/commond.h	/^	stAbstractChuanchengPropertyUserCmd()$/;"	f	struct:stAbstractChuanchengPropertyUserCmd
stAbstractChuanchengPropertyUserCmd	tmpcode/commond.h	/^struct stAbstractChuanchengPropertyUserCmd:public stPropertyUserCmd$/;"	s
stAccekKeyPropertyUserCmd	base/Command.h	/^    stAccekKeyPropertyUserCmd()$/;"	f	struct:Cmd::stAccekKeyPropertyUserCmd
stAccekKeyPropertyUserCmd	base/Command.h	/^  struct stAccekKeyPropertyUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stAccekKeyPropertyUserCmd	tmpcode/commond.h	/^    stAccekKeyPropertyUserCmd()$/;"	f	struct:stAccekKeyPropertyUserCmd
stAccekKeyPropertyUserCmd	tmpcode/commond.h	/^struct stAccekKeyPropertyUserCmd : public stPropertyUserCmd$/;"	s
stAccountLogonUserCmd	base/Command.h	/^  stAccountLogonUserCmd()$/;"	f	struct:Cmd::stAccountLogonUserCmd
stAccountLogonUserCmd	base/Command.h	/^struct stAccountLogonUserCmd : public stLogonUserCmd $/;"	s	namespace:Cmd
stActionFishUserCmd	tmpcode/commond.h	/^	stActionFishUserCmd()$/;"	f	struct:stActionFishUserCmd
stActionFishUserCmd	tmpcode/commond.h	/^struct stActionFishUserCmd : stFishUserCmd$/;"	s
stActionTimeoutFishUserCmd	tmpcode/commond.h	/^	stActionTimeoutFishUserCmd()$/;"	f	struct:stActionTimeoutFishUserCmd
stActionTimeoutFishUserCmd	tmpcode/commond.h	/^struct stActionTimeoutFishUserCmd : stFishUserCmd$/;"	s
stActiveDareCmd	base/Command.h	/^    stActiveDareCmd()$/;"	f	struct:Cmd::stActiveDareCmd
stActiveDareCmd	base/Command.h	/^struct stActiveDareCmd : public stDareUserCmd$/;"	s	namespace:Cmd
stActiveShenLongReward	tmpcode/commond.h	/^    stActiveShenLongReward()$/;"	f	struct:stActiveShenLongReward
stActiveShenLongReward	tmpcode/commond.h	/^struct stActiveShenLongReward : public stChatUserCmd$/;"	s
stActiveUnionCityDare	base/Command.h	/^  stActiveUnionCityDare()$/;"	f	struct:Cmd::stActiveUnionCityDare
stActiveUnionCityDare	base/Command.h	/^struct stActiveUnionCityDare : public stDareUserCmd$/;"	s	namespace:Cmd
stActiveUnionCityDare	tmpcode/commond.h	/^	stActiveUnionCityDare()$/;"	f	struct:stActiveUnionCityDare
stActiveUnionCityDare	tmpcode/commond.h	/^struct stActiveUnionCityDare : public stDareUserCmd$/;"	s
stActivityDataUserCmd	tmpcode/commond.h	/^    stActivityDataUserCmd()$/;"	f	struct:stActivityDataUserCmd
stActivityDataUserCmd	tmpcode/commond.h	/^struct stActivityDataUserCmd : public stDataUserCmd{$/;"	s
stAdBroadcastUserCmd	tmpcode/commond.h	/^	stAdBroadcastUserCmd()$/;"	f	struct:stAdBroadcastUserCmd
stAdBroadcastUserCmd	tmpcode/commond.h	/^struct stAdBroadcastUserCmd : public stBarUserCmd$/;"	s
stAddArmyCaptainUserCmd	base/Command.h	/^  stAddArmyCaptainUserCmd()$/;"	f	struct:Cmd::stAddArmyCaptainUserCmd
stAddArmyCaptainUserCmd	base/Command.h	/^struct stAddArmyCaptainUserCmd : public stArmyUserCmd$/;"	s	namespace:Cmd
stAddBattleCardListPropertyUserCmd	base/HeroCardCmd.h	/^	stAddBattleCardListPropertyUserCmd()$/;"	f	struct:Cmd::stAddBattleCardListPropertyUserCmd
stAddBattleCardListPropertyUserCmd	base/HeroCardCmd.h	/^    struct stAddBattleCardListPropertyUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stAddBattleCardPropertyUserCmd	base/HeroCardCmd.h	/^	stAddBattleCardPropertyUserCmd()$/;"	f	struct:Cmd::stAddBattleCardPropertyUserCmd
stAddBattleCardPropertyUserCmd	base/HeroCardCmd.h	/^    struct stAddBattleCardPropertyUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stAddBetObjectChallengeUserCmd	tmpcode/commond.h	/^	stAddBetObjectChallengeUserCmd()$/;"	f	struct:stAddBetObjectChallengeUserCmd
stAddBetObjectChallengeUserCmd	tmpcode/commond.h	/^struct stAddBetObjectChallengeUserCmd:public stChallengeGameUserCmd$/;"	s
stAddCartoonCmd	base/Command.h	/^  stAddCartoonCmd()$/;"	f	struct:Cmd::stAddCartoonCmd
stAddCartoonCmd	base/Command.h	/^struct stAddCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stAddDecorationCmd	tmpcode/commond.h	/^	stAddDecorationCmd()$/;"	f	struct:stAddDecorationCmd
stAddDecorationCmd	tmpcode/commond.h	/^struct stAddDecorationCmd : public stDecorationUserCmd$/;"	s
stAddEnemyHandCardPropertyUserCmd	base/HeroCardCmd.h	/^	stAddEnemyHandCardPropertyUserCmd()$/;"	f	struct:Cmd::stAddEnemyHandCardPropertyUserCmd
stAddEnemyHandCardPropertyUserCmd	base/HeroCardCmd.h	/^    struct stAddEnemyHandCardPropertyUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stAddHonorZhanGong	tmpcode/commond.h	/^	stAddHonorZhanGong()$/;"	f	struct:stAddHonorZhanGong
stAddHonorZhanGong	tmpcode/commond.h	/^struct stAddHonorZhanGong : public stChatUserCmd$/;"	s
stAddHorseSoulEnergyUserCmd	tmpcode/commond.h	/^        stAddHorseSoulEnergyUserCmd()$/;"	f	struct:stAddHorseSoulEnergyUserCmd
stAddHorseSoulEnergyUserCmd	tmpcode/commond.h	/^struct stAddHorseSoulEnergyUserCmd : public stPetUserCmd$/;"	s
stAddHorseSoulPetCmd	tmpcode/commond.h	/^    stAddHorseSoulPetCmd()$/;"	f	struct:stAddHorseSoulPetCmd
stAddHorseSoulPetCmd	tmpcode/commond.h	/^struct stAddHorseSoulPetCmd : public stPetUserCmd$/;"	s
stAddIssueQuestUserCmd	tmpcode/commond.h	/^        stAddIssueQuestUserCmd()$/;"	f	struct:stAddIssueQuestUserCmd
stAddIssueQuestUserCmd	tmpcode/commond.h	/^struct stAddIssueQuestUserCmd : public stQuestUserCmd$/;"	s
stAddItemStall	tmpcode/commond.h	/^	stAddItemStall()$/;"	f	struct:stAddItemStall
stAddItemStall	tmpcode/commond.h	/^struct stAddItemStall:public stTradeUserCmd  \/\/∑µªÿ‘ˆº”¬Ù∆∑ «∑Ò≥…π¶µƒœ˚œ¢$/;"	s
stAddListAuction	base/Command.h	/^  stAddListAuction()$/;"	f	struct:Cmd::stAddListAuction
stAddListAuction	base/Command.h	/^struct stAddListAuction : public stAuctionUserCmd$/;"	s	namespace:Cmd
stAddListAuction	tmpcode/commond.h	/^        stAddListAuction()$/;"	f	struct:stAddListAuction
stAddListAuction	tmpcode/commond.h	/^struct stAddListAuction : public stAuctionUserCmd$/;"	s
stAddListMail	base/Command.h	/^  stAddListMail()$/;"	f	struct:Cmd::stAddListMail
stAddListMail	base/Command.h	/^struct stAddListMail : public stMailUserCmd$/;"	s	namespace:Cmd
stAddListMail	tmpcode/commond.h	/^    stAddListMail()$/;"	f	struct:stAddListMail
stAddListMail	tmpcode/commond.h	/^struct stAddListMail : public stMailUserCmd$/;"	s
stAddListPurchase	tmpcode/commond.h	/^    stAddListPurchase()$/;"	f	struct:stAddListPurchase
stAddListPurchase	tmpcode/commond.h	/^struct stAddListPurchase : public stTradeUserCmd$/;"	s
stAddMapBuildAndPosMapScreenUserCmd	tmpcode/commond.h	/^	stAddMapBuildAndPosMapScreenUserCmd()$/;"	f	struct:stAddMapBuildAndPosMapScreenUserCmd
stAddMapBuildAndPosMapScreenUserCmd	tmpcode/commond.h	/^struct stAddMapBuildAndPosMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stAddMapBuildingMapScreenUserCmd	base/Command.h	/^    stAddMapBuildingMapScreenUserCmd()$/;"	f	struct:Cmd::stAddMapBuildingMapScreenUserCmd
stAddMapBuildingMapScreenUserCmd	base/Command.h	/^  struct stAddMapBuildingMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stAddMapNpcAndPosMapScreenStateUserCmd	base/Command.h	/^    stAddMapNpcAndPosMapScreenStateUserCmd()$/;"	f	struct:Cmd::stAddMapNpcAndPosMapScreenStateUserCmd
stAddMapNpcAndPosMapScreenStateUserCmd	base/Command.h	/^  struct stAddMapNpcAndPosMapScreenStateUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stAddMapNpcAndPosMapScreenStateUserCmd	tmpcode/commond.h	/^	stAddMapNpcAndPosMapScreenStateUserCmd()$/;"	f	struct:stAddMapNpcAndPosMapScreenStateUserCmd
stAddMapNpcAndPosMapScreenStateUserCmd	tmpcode/commond.h	/^struct stAddMapNpcAndPosMapScreenStateUserCmd: public stMapScreenUserCmd$/;"	s
stAddMapNpcAndPosMapScreenUserCmd	base/Command.h	/^	stAddMapNpcAndPosMapScreenUserCmd()$/;"	f	struct:Cmd::stAddMapNpcAndPosMapScreenUserCmd
stAddMapNpcAndPosMapScreenUserCmd	base/Command.h	/^struct stAddMapNpcAndPosMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stAddMapNpcAndPosMapScreenUserCmd	tmpcode/commond.h	/^	stAddMapNpcAndPosMapScreenUserCmd()$/;"	f	struct:stAddMapNpcAndPosMapScreenUserCmd
stAddMapNpcAndPosMapScreenUserCmd	tmpcode/commond.h	/^struct stAddMapNpcAndPosMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stAddMapNpcMapScreenStateUserCmd	base/Command.h	/^    stAddMapNpcMapScreenStateUserCmd()$/;"	f	struct:Cmd::stAddMapNpcMapScreenStateUserCmd
stAddMapNpcMapScreenStateUserCmd	base/Command.h	/^  struct stAddMapNpcMapScreenStateUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stAddMapNpcMapScreenUserCmd	base/Command.h	/^    stAddMapNpcMapScreenUserCmd()$/;"	f	struct:Cmd::stAddMapNpcMapScreenUserCmd
stAddMapNpcMapScreenUserCmd	base/Command.h	/^  struct stAddMapNpcMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stAddMapNpcPetMapScreenStateUserCmd	base/Command.h	/^    stAddMapNpcPetMapScreenStateUserCmd()$/;"	f	struct:Cmd::stAddMapNpcPetMapScreenStateUserCmd
stAddMapNpcPetMapScreenStateUserCmd	base/Command.h	/^  struct stAddMapNpcPetMapScreenStateUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stAddMapNpcPetMapScreenUserCmd	base/Command.h	/^    stAddMapNpcPetMapScreenUserCmd()$/;"	f	struct:Cmd::stAddMapNpcPetMapScreenUserCmd
stAddMapNpcPetMapScreenUserCmd	base/Command.h	/^  struct stAddMapNpcPetMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stAddMapNpcPetMapScreenUserCmd	tmpcode/commond.h	/^    stAddMapNpcPetMapScreenUserCmd()$/;"	f	struct:stAddMapNpcPetMapScreenUserCmd
stAddMapNpcPetMapScreenUserCmd	tmpcode/commond.h	/^struct stAddMapNpcPetMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stAddMapObjectMapScreenUserCmd	base/Command.h	/^    stAddMapObjectMapScreenUserCmd()$/;"	f	struct:Cmd::stAddMapObjectMapScreenUserCmd
stAddMapObjectMapScreenUserCmd	base/Command.h	/^  struct stAddMapObjectMapScreenUserCmd  : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stAddMapObjectMapScreenUserCmd	tmpcode/commond.h	/^	stAddMapObjectMapScreenUserCmd()$/;"	f	struct:stAddMapObjectMapScreenUserCmd
stAddMapObjectMapScreenUserCmd	tmpcode/commond.h	/^struct stAddMapObjectMapScreenUserCmd  : public stMapScreenUserCmd$/;"	s
stAddMapPetMapScreenUserCmd	base/Command.h	/^    stAddMapPetMapScreenUserCmd()$/;"	f	struct:Cmd::stAddMapPetMapScreenUserCmd
stAddMapPetMapScreenUserCmd	base/Command.h	/^  struct stAddMapPetMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stAddMapPetMapScreenUserCmd	tmpcode/commond.h	/^	stAddMapPetMapScreenUserCmd()$/;"	f	struct:stAddMapPetMapScreenUserCmd
stAddMapPetMapScreenUserCmd	tmpcode/commond.h	/^struct stAddMapPetMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stAddMemberToSeptCmd	base/Command.h	/^  stAddMemberToSeptCmd()$/;"	f	struct:Cmd::stAddMemberToSeptCmd
stAddMemberToSeptCmd	base/Command.h	/^struct stAddMemberToSeptCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stAddMemberToSeptCmd	tmpcode/commond.h	/^	stAddMemberToSeptCmd()$/;"	f	struct:stAddMemberToSeptCmd
stAddMemberToSeptCmd	tmpcode/commond.h	/^struct stAddMemberToSeptCmd : public stSeptUserCmd$/;"	s
stAddMemberToUnionCmd	base/Command.h	/^  stAddMemberToUnionCmd()$/;"	f	struct:Cmd::stAddMemberToUnionCmd
stAddMemberToUnionCmd	base/Command.h	/^struct stAddMemberToUnionCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stAddMemberToUnionCmd	tmpcode/commond.h	/^	stAddMemberToUnionCmd()$/;"	f	struct:stAddMemberToUnionCmd
stAddMemberToUnionCmd	tmpcode/commond.h	/^struct stAddMemberToUnionCmd : public stUnionUserCmd$/;"	s
stAddMerchNoticePrice	tmpcode/commond.h	/^	stAddMerchNoticePrice()$/;"	f	struct:stAddMerchNoticePrice
stAddMerchNoticePrice	tmpcode/commond.h	/^struct stAddMerchNoticePrice : public stUnionUserCmd$/;"	s
stAddMobileObjectListPropertyUserCmd	base/Command.h	/^    stAddMobileObjectListPropertyUserCmd()$/;"	f	struct:Cmd::stAddMobileObjectListPropertyUserCmd
stAddMobileObjectListPropertyUserCmd	base/Command.h	/^  struct stAddMobileObjectListPropertyUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stAddMobileObjectPropertyUserCmd	base/Command.h	/^    stAddMobileObjectPropertyUserCmd()$/;"	f	struct:Cmd::stAddMobileObjectPropertyUserCmd
stAddMobileObjectPropertyUserCmd	base/Command.h	/^  struct stAddMobileObjectPropertyUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stAddObjectDaTaoShaUserCmd	tmpcode/commond.h	/^	stAddObjectDaTaoShaUserCmd()$/;"	f	struct:stAddObjectDaTaoShaUserCmd
stAddObjectDaTaoShaUserCmd	tmpcode/commond.h	/^struct stAddObjectDaTaoShaUserCmd : public stDaTaoShaUserCmd$/;"	s
stAddObjectListPropertyUserCmd	base/Command.h	/^    stAddObjectListPropertyUserCmd()$/;"	f	struct:Cmd::stAddObjectListPropertyUserCmd
stAddObjectListPropertyUserCmd	base/Command.h	/^  struct stAddObjectListPropertyUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stAddObjectListPropertyUserCmd	tmpcode/commond.h	/^		stAddObjectListPropertyUserCmd()$/;"	f	struct:stAddObjectListPropertyUserCmd
stAddObjectListPropertyUserCmd	tmpcode/commond.h	/^	struct stAddObjectListPropertyUserCmd : public stPropertyUserCmd{$/;"	s
stAddObjectPropertyUserCmd	base/Command.h	/^    stAddObjectPropertyUserCmd()$/;"	f	struct:Cmd::stAddObjectPropertyUserCmd
stAddObjectPropertyUserCmd	base/Command.h	/^  struct stAddObjectPropertyUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stAddObjectPropertyUserCmd	tmpcode/commond.h	/^		stAddObjectPropertyUserCmd()$/;"	f	struct:stAddObjectPropertyUserCmd
stAddObjectPropertyUserCmd	tmpcode/commond.h	/^	struct stAddObjectPropertyUserCmd : public stPropertyUserCmd{$/;"	s
stAddObjectSellListUserCmd	base/Command.h	/^  stAddObjectSellListUserCmd()$/;"	f	struct:Cmd::stAddObjectSellListUserCmd
stAddObjectSellListUserCmd	base/Command.h	/^struct stAddObjectSellListUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stAddObjectSellListUserCmd	tmpcode/commond.h	/^	stAddObjectSellListUserCmd()$/;"	f	struct:stAddObjectSellListUserCmd
stAddObjectSellListUserCmd	tmpcode/commond.h	/^struct stAddObjectSellListUserCmd:public stTradeUserCmd$/;"	s
stAddObjectSellUserCmd	base/Command.h	/^  stAddObjectSellUserCmd()$/;"	f	struct:Cmd::stAddObjectSellUserCmd
stAddObjectSellUserCmd	base/Command.h	/^struct stAddObjectSellUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stAddObjectSellUserCmd	tmpcode/commond.h	/^	stAddObjectSellUserCmd()$/;"	f	struct:stAddObjectSellUserCmd
stAddObjectSellUserCmd	tmpcode/commond.h	/^struct stAddObjectSellUserCmd:public stTradeUserCmd$/;"	s
stAddObjectSeptStoreCmd	tmpcode/commond.h	/^	stAddObjectSeptStoreCmd()$/;"	f	struct:stAddObjectSeptStoreCmd
stAddObjectSeptStoreCmd	tmpcode/commond.h	/^struct stAddObjectSeptStoreCmd : public stSeptUserCmd$/;"	s
stAddObjectTradeUserCmd	base/Command.h	/^  stAddObjectTradeUserCmd()$/;"	f	struct:Cmd::stAddObjectTradeUserCmd
stAddObjectTradeUserCmd	base/Command.h	/^struct stAddObjectTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stAddObjectTradeUserCmd	tmpcode/commond.h	/^	stAddObjectTradeUserCmd(DWORD userid,BYTE _y,BYTE _x,DWORD goid,DWORD thisid)$/;"	f	struct:stAddObjectTradeUserCmd
stAddObjectTradeUserCmd	tmpcode/commond.h	/^	stAddObjectTradeUserCmd(DWORD userid,BYTE _y,BYTE _x,t_Object _object)$/;"	f	struct:stAddObjectTradeUserCmd
stAddObjectTradeUserCmd	tmpcode/commond.h	/^struct stAddObjectTradeUserCmd:public stTradeUserCmd$/;"	s
stAddPetPetCmd	base/Command.h	/^  stAddPetPetCmd()$/;"	f	struct:Cmd::stAddPetPetCmd
stAddPetPetCmd	base/Command.h	/^struct stAddPetPetCmd : public stPetUserCmd$/;"	s	namespace:Cmd
stAddRentStoreTime	tmpcode/commond.h	/^	stAddRentStoreTime()$/;"	f	struct:stAddRentStoreTime
stAddRentStoreTime	tmpcode/commond.h	/^struct stAddRentStoreTime : public stSeptUserCmd$/;"	s
stAddSkillPointPropertyUserCmd	base/Command.h	/^  stAddSkillPointPropertyUserCmd()$/;"	f	struct:Cmd::stAddSkillPointPropertyUserCmd
stAddSkillPointPropertyUserCmd	base/Command.h	/^struct stAddSkillPointPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stAddSkillPointPropertyUserCmd	tmpcode/commond.h	/^	stAddSkillPointPropertyUserCmd()$/;"	f	struct:stAddSkillPointPropertyUserCmd
stAddSkillPointPropertyUserCmd	tmpcode/commond.h	/^struct stAddSkillPointPropertyUserCmd : public stPropertyUserCmd$/;"	s
stAddTeamMemberUserCmd	base/Command.h	/^  stAddTeamMemberUserCmd()$/;"	f	struct:Cmd::stAddTeamMemberUserCmd
stAddTeamMemberUserCmd	base/Command.h	/^struct stAddTeamMemberUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stAddTeamMemberUserCmd	tmpcode/commond.h	/^	stAddTeamMemberUserCmd()$/;"	f	struct:stAddTeamMemberUserCmd
stAddTeamMemberUserCmd	tmpcode/commond.h	/^struct stAddTeamMemberUserCmd: public stChatUserCmd$/;"	s
stAddTeamRecruitInfoUserCmd	tmpcode/commond.h	/^	stAddTeamRecruitInfoUserCmd()$/;"	f	struct:stAddTeamRecruitInfoUserCmd
stAddTeamRecruitInfoUserCmd	tmpcode/commond.h	/^struct stAddTeamRecruitInfoUserCmd : public stTeamRecruitUserCmd$/;"	s
stAddTimeEffectHorseDataCmd	tmpcode/commond.h	/^	stAddTimeEffectHorseDataCmd()$/;"	f	struct:stAddTimeEffectHorseDataCmd
stAddTimeEffectHorseDataCmd	tmpcode/commond.h	/^struct stAddTimeEffectHorseDataCmd : public stPetUserCmd$/;"	s
stAddUnionMemberRank	tmpcode/commond.h	/^	stAddUnionMemberRank()$/;"	f	struct:stAddUnionMemberRank
stAddUnionMemberRank	tmpcode/commond.h	/^struct stAddUnionMemberRank : public stUnionUserCmd$/;"	s
stAddUnsafeRegionDTSUserCmd	tmpcode/commond.h	/^         stAddUnsafeRegionDTSUserCmd()$/;"	f	struct:stAddUnsafeRegionDTSUserCmd
stAddUnsafeRegionDTSUserCmd	tmpcode/commond.h	/^ struct stAddUnsafeRegionDTSUserCmd : public stDaTaoShaUserCmd$/;"	s
stAddUserAndPosMapScreenStateUserCmd	base/Command.h	/^    stAddUserAndPosMapScreenStateUserCmd()$/;"	f	struct:Cmd::stAddUserAndPosMapScreenStateUserCmd
stAddUserAndPosMapScreenStateUserCmd	base/Command.h	/^  struct stAddUserAndPosMapScreenStateUserCmd : public stMapScreenUserCmd {$/;"	s	namespace:Cmd
stAddUserAndPosMapScreenStateUserCmd	tmpcode/commond.h	/^		stAddUserAndPosMapScreenStateUserCmd()$/;"	f	struct:stAddUserAndPosMapScreenStateUserCmd
stAddUserAndPosMapScreenStateUserCmd	tmpcode/commond.h	/^struct stAddUserAndPosMapScreenStateUserCmd : public stMapScreenUserCmd $/;"	s
stAddUserAndPosMapScreenUserCmd	base/Command.h	/^    stAddUserAndPosMapScreenUserCmd()$/;"	f	struct:Cmd::stAddUserAndPosMapScreenUserCmd
stAddUserAndPosMapScreenUserCmd	base/Command.h	/^  struct stAddUserAndPosMapScreenUserCmd : public stMapScreenUserCmd {$/;"	s	namespace:Cmd
stAddUserLifeSkillPropertyUserCmd	tmpcode/commond.h	/^    stAddUserLifeSkillPropertyUserCmd()$/;"	f	struct:stAddUserLifeSkillPropertyUserCmd
stAddUserLifeSkillPropertyUserCmd	tmpcode/commond.h	/^struct stAddUserLifeSkillPropertyUserCmd : public stPropertyUserCmd$/;"	s
stAddUserMapScreenStateUserCmd	base/Command.h	/^    stAddUserMapScreenStateUserCmd()$/;"	f	struct:Cmd::stAddUserMapScreenStateUserCmd
stAddUserMapScreenStateUserCmd	base/Command.h	/^  struct stAddUserMapScreenStateUserCmd : public stMapScreenUserCmd {$/;"	s	namespace:Cmd
stAddUserMapScreenUserCmd	base/Command.h	/^    stAddUserMapScreenUserCmd()$/;"	f	struct:Cmd::stAddUserMapScreenUserCmd
stAddUserMapScreenUserCmd	base/Command.h	/^  struct stAddUserMapScreenUserCmd : public stMapScreenUserCmd {$/;"	s	namespace:Cmd
stAddUserSkillPropertyUserCmd	base/Command.h	/^  stAddUserSkillPropertyUserCmd()$/;"	f	struct:Cmd::stAddUserSkillPropertyUserCmd
stAddUserSkillPropertyUserCmd	base/Command.h	/^struct stAddUserSkillPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stAddUserSkillPropertyUserCmd	tmpcode/commond.h	/^	stAddUserSkillPropertyUserCmd()$/;"	f	struct:stAddUserSkillPropertyUserCmd
stAddUserSkillPropertyUserCmd	tmpcode/commond.h	/^struct stAddUserSkillPropertyUserCmd : public stPropertyUserCmd$/;"	s
stAddWaitingCartoonCmd	base/Command.h	/^  stAddWaitingCartoonCmd()$/;"	f	struct:Cmd::stAddWaitingCartoonCmd
stAddWaitingCartoonCmd	base/Command.h	/^struct stAddWaitingCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stAdoptCartoonCmd	base/Command.h	/^  stAdoptCartoonCmd()$/;"	f	struct:Cmd::stAdoptCartoonCmd
stAdoptCartoonCmd	base/Command.h	/^struct stAdoptCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stAdv	base/Command.h	/^	struct stAdv$/;"	s	struct:Cmd::stUpdateShopAdvcmd
stAdvertCriminalUserCmd	tmpcode/commond.h	/^	stAdvertCriminalUserCmd()$/;"	f	struct:stAdvertCriminalUserCmd
stAdvertCriminalUserCmd	tmpcode/commond.h	/^struct stAdvertCriminalUserCmd : public stUnionUserCmd$/;"	s
stAgreeReplayMerencryCountryCmd	tmpcode/commond.h	/^        stAgreeReplayMerencryCountryCmd()$/;"	f	struct:stAgreeReplayMerencryCountryCmd
stAgreeReplayMerencryCountryCmd	tmpcode/commond.h	/^struct stAgreeReplayMerencryCountryCmd:public stCountryUserCmd$/;"	s
stAllMapScreenUserCmd	base/Command.h	/^    stAllMapScreenUserCmd()$/;"	f	struct:Cmd::stAllMapScreenUserCmd
stAllMapScreenUserCmd	base/Command.h	/^  struct stAllMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stAllRoomQuestRoomUserCmd	tmpcode/commond.h	/^	stAllRoomQuestRoomUserCmd(): questID(0), page(0)$/;"	f	struct:stAllRoomQuestRoomUserCmd
stAllRoomQuestRoomUserCmd	tmpcode/commond.h	/^struct stAllRoomQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stAllSeptMemberCmd	base/Command.h	/^  stAllSeptMemberCmd()$/;"	f	struct:Cmd::stAllSeptMemberCmd
stAllSeptMemberCmd	base/Command.h	/^struct stAllSeptMemberCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stAllSeptMemberCmd	tmpcode/commond.h	/^	stAllSeptMemberCmd()$/;"	f	struct:stAllSeptMemberCmd
stAllSeptMemberCmd	tmpcode/commond.h	/^struct stAllSeptMemberCmd : public stSeptUserCmd$/;"	s
stAllUnionMember	tmpcode/commond.h	/^	stAllUnionMember()$/;"	f	struct:stAllUnionMember
stAllUnionMember	tmpcode/commond.h	/^struct stAllUnionMember $/;"	s
stAllUnionMemberCmd	base/Command.h	/^  stAllUnionMemberCmd()$/;"	f	struct:Cmd::stAllUnionMemberCmd
stAllUnionMemberCmd	base/Command.h	/^struct stAllUnionMemberCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stAllUnionMemberCmd	tmpcode/commond.h	/^	stAllUnionMemberCmd()$/;"	f	struct:stAllUnionMemberCmd
stAllUnionMemberCmd	tmpcode/commond.h	/^struct stAllUnionMemberCmd : public stUnionUserCmd$/;"	s
stAllUserList	tmpcode/commond.h	/^	stAllUserList()$/;"	f	struct:stAllUserList
stAllUserList	tmpcode/commond.h	/^struct stAllUserList$/;"	s
stAllyUserCmd	base/Command.h	/^  stAllyUserCmd()$/;"	f	struct:Cmd::stAllyUserCmd
stAllyUserCmd	base/Command.h	/^struct stAllyUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stAllyUserCmd	tmpcode/commond.h	/^	stAllyUserCmd()$/;"	f	struct:stAllyUserCmd
stAllyUserCmd	tmpcode/commond.h	/^struct stAllyUserCmd : public stNullUserCmd$/;"	s
stAnsTakeBackAllFurnitureUserCmd	tmpcode/commond.h	/^	stAnsTakeBackAllFurnitureUserCmd()$/;"	f	struct:stAnsTakeBackAllFurnitureUserCmd
stAnsTakeBackAllFurnitureUserCmd	tmpcode/commond.h	/^struct stAnsTakeBackAllFurnitureUserCmd : public stHomeUserCmd$/;"	s
stAnswerBeTradeImageUserCmd	tmpcode/commond.h	/^	stAnswerBeTradeImageUserCmd(const DWORD answerID, const DWORD askerID, const int _x1, const int _y1) $/;"	f	struct:stAnswerBeTradeImageUserCmd
stAnswerBeTradeImageUserCmd	tmpcode/commond.h	/^struct stAnswerBeTradeImageUserCmd : public stTradeUserCmd $/;"	s
stAnswerCallBackUserCmd	tmpcode/commond.h	/^	stAnswerCallBackUserCmd()$/;"	f	struct:stAnswerCallBackUserCmd
stAnswerCallBackUserCmd	tmpcode/commond.h	/^struct stAnswerCallBackUserCmd : public stCallBackUserCmd$/;"	s
stAnswerCountryDareUserCmd	base/Command.h	/^  stAnswerCountryDareUserCmd()$/;"	f	struct:Cmd::stAnswerCountryDareUserCmd
stAnswerCountryDareUserCmd	base/Command.h	/^struct stAnswerCountryDareUserCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stAnswerDance	tmpcode/commond.h	/^        stAnswerDance() $/;"	f	struct:stAnswerDance
stAnswerDance	tmpcode/commond.h	/^struct stAnswerDance : public stDanceUserCmd$/;"	s
stAnswerDecayLingQiCmd	tmpcode/commond.h	/^	stAnswerDecayLingQiCmd()$/;"	f	struct:stAnswerDecayLingQiCmd
stAnswerDecayLingQiCmd	tmpcode/commond.h	/^struct stAnswerDecayLingQiCmd : public stLingQiDecayUserCmd$/;"	s
stAnswerNameTeamUserCmd	base/Command.h	/^  stAnswerNameTeamUserCmd()$/;"	f	struct:Cmd::stAnswerNameTeamUserCmd
stAnswerNameTeamUserCmd	base/Command.h	/^struct stAnswerNameTeamUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stAnswerNameTeamUserCmd	tmpcode/commond.h	/^	stAnswerNameTeamUserCmd()$/;"	f	struct:stAnswerNameTeamUserCmd
stAnswerNameTeamUserCmd	tmpcode/commond.h	/^struct stAnswerNameTeamUserCmd: public stChatUserCmd$/;"	s
stAnswerNineScreenSeptMemberCmd	tmpcode/commond.h	/^	stAnswerNineScreenSeptMemberCmd()$/;"	f	struct:stAnswerNineScreenSeptMemberCmd
stAnswerNineScreenSeptMemberCmd	tmpcode/commond.h	/^struct stAnswerNineScreenSeptMemberCmd: public stTankUserCmd$/;"	s
stAnswerNineScreenUnionMemberCmd	tmpcode/commond.h	/^	stAnswerNineScreenUnionMemberCmd()$/;"	f	struct:stAnswerNineScreenUnionMemberCmd
stAnswerNineScreenUnionMemberCmd	tmpcode/commond.h	/^struct stAnswerNineScreenUnionMemberCmd: public stTankUserCmd$/;"	s
stAnswerQuiz	base/Command.h	/^  stAnswerQuiz()$/;"	f	struct:Cmd::stAnswerQuiz
stAnswerQuiz	base/Command.h	/^struct stAnswerQuiz : public stQuizUserCmd$/;"	s	namespace:Cmd
stAnswerRecommendUserCmd	tmpcode/commond.h	/^	stAnswerRecommendUserCmd()$/;"	f	struct:stAnswerRecommendUserCmd
stAnswerRecommendUserCmd	tmpcode/commond.h	/^struct stAnswerRecommendUserCmd : public stRecommendUserCmd$/;"	s
stAnswerReturnQuiz	base/Command.h	/^  stAnswerReturnQuiz()$/;"	f	struct:Cmd::stAnswerReturnQuiz
stAnswerReturnQuiz	base/Command.h	/^struct stAnswerReturnQuiz : public stQuizUserCmd$/;"	s	namespace:Cmd
stAnswerRideJoinUserCmd	tmpcode/commond.h	/^    stAnswerRideJoinUserCmd()$/;"	f	struct:stAnswerRideJoinUserCmd
stAnswerRideJoinUserCmd	tmpcode/commond.h	/^struct stAnswerRideJoinUserCmd:public stMapScreenUserCmd$/;"	s
stAnswerTeamUserCmd	base/Command.h	/^  stAnswerTeamUserCmd()$/;"	f	struct:Cmd::stAnswerTeamUserCmd
stAnswerTeamUserCmd	base/Command.h	/^struct stAnswerTeamUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stAnswerTradeUserCmd	base/Command.h	/^  stAnswerTradeUserCmd()$/;"	f	struct:Cmd::stAnswerTradeUserCmd
stAnswerTradeUserCmd	base/Command.h	/^struct stAnswerTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stAnswerTradeUserCmd	tmpcode/commond.h	/^	stAnswerTradeUserCmd(const BYTE Agree,const DWORD AnswerTempID,const DWORD AskerTempID)$/;"	f	struct:stAnswerTradeUserCmd
stAnswerTradeUserCmd	tmpcode/commond.h	/^struct stAnswerTradeUserCmd:public stTradeUserCmd$/;"	s
stAntiDareCountryFormalCmd	base/Command.h	/^  stAntiDareCountryFormalCmd()$/;"	f	struct:Cmd::stAntiDareCountryFormalCmd
stAntiDareCountryFormalCmd	base/Command.h	/^struct stAntiDareCountryFormalCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stAppearOfflineLTQUserCmd	tmpcode/commond.h	/^	stAppearOfflineLTQUserCmd()$/;"	f	struct:stAppearOfflineLTQUserCmd
stAppearOfflineLTQUserCmd	tmpcode/commond.h	/^struct stAppearOfflineLTQUserCmd : public stLTQUserCmd$/;"	s
stApplyCountryCmd	base/Command.h	/^    stApplyCountryCmd()$/;"	f	struct:Cmd::stApplyCountryCmd
stApplyCountryCmd	base/Command.h	/^struct stApplyCountryCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stApplySeptAvatar	tmpcode/commond.h	/^	stApplySeptAvatar()$/;"	f	struct:stApplySeptAvatar
stApplySeptAvatar	tmpcode/commond.h	/^struct stApplySeptAvatar : public stSeptUserCmd$/;"	s
stApplyUnionBusinessmen	tmpcode/commond.h	/^	stApplyUnionBusinessmen() : stBusinessUserCmd(APPLY_UNION_BUSINESSMEN_USERCMD) {};$/;"	f	struct:stApplyUnionBusinessmen
stApplyUnionBusinessmen	tmpcode/commond.h	/^struct stApplyUnionBusinessmen : public stBusinessUserCmd $/;"	s
stAppointCatcherCmd	base/Command.h	/^  stAppointCatcherCmd()$/;"	f	struct:Cmd::stAppointCatcherCmd
stAppointCatcherCmd	base/Command.h	/^struct stAppointCatcherCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stAppointCityCatcherCmd	base/Command.h	/^  stAppointCityCatcherCmd()$/;"	f	struct:Cmd::stAppointCityCatcherCmd
stAppointCityCatcherCmd	base/Command.h	/^struct stAppointCityCatcherCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stAppointDiplomatCmd	base/Command.h	/^  stAppointDiplomatCmd()$/;"	f	struct:Cmd::stAppointDiplomatCmd
stAppointDiplomatCmd	base/Command.h	/^struct stAppointDiplomatCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stArmyBaseInfo	base/Command.h	/^struct stArmyBaseInfo$/;"	s	namespace:Cmd
stArmyUserCmd	base/Command.h	/^    stArmyUserCmd()$/;"	f	struct:Cmd::stArmyUserCmd
stArmyUserCmd	base/Command.h	/^struct stArmyUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stAskBeginCallBackUserCmd	tmpcode/commond.h	/^	stAskBeginCallBackUserCmd()$/;"	f	struct:stAskBeginCallBackUserCmd
stAskBeginCallBackUserCmd	tmpcode/commond.h	/^struct stAskBeginCallBackUserCmd :  public stCallBackUserCmd$/;"	s
stAskBeginRecommendUserCmd	tmpcode/commond.h	/^	stAskBeginRecommendUserCmd()$/;"	f	struct:stAskBeginRecommendUserCmd
stAskBeginRecommendUserCmd	tmpcode/commond.h	/^struct stAskBeginRecommendUserCmd :  public stRecommendUserCmd$/;"	s
stAskDance	tmpcode/commond.h	/^        stAskDance() $/;"	f	struct:stAskDance
stAskDance	tmpcode/commond.h	/^struct stAskDance : public stDanceUserCmd$/;"	s
stAskJoinChallengeUserCmd	tmpcode/commond.h	/^	stAskJoinChallengeUserCmd()$/;"	f	struct:stAskJoinChallengeUserCmd
stAskJoinChallengeUserCmd	tmpcode/commond.h	/^struct stAskJoinChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stAskRegSeptPopoUserCmd	tmpcode/commond.h	/^	stAskRegSeptPopoUserCmd()$/;"	f	struct:stAskRegSeptPopoUserCmd
stAskRegSeptPopoUserCmd	tmpcode/commond.h	/^struct stAskRegSeptPopoUserCmd : public stSeptPopoUserCmd$/;"	s
stAskUserEnterMaxLevelLimitCmd	tmpcode/commond.h	/^	stAskUserEnterMaxLevelLimitCmd()$/;"	f	struct:stAskUserEnterMaxLevelLimitCmd
stAskUserEnterMaxLevelLimitCmd	tmpcode/commond.h	/^struct stAskUserEnterMaxLevelLimitCmd : public stMaxLevelLimitUserCmd$/;"	s
stAskUserEnterUserCmd	tmpcode/commond.h	/^        stAskUserEnterUserCmd()$/;"	f	struct:stAskUserEnterUserCmd
stAskUserEnterUserCmd	tmpcode/commond.h	/^struct stAskUserEnterUserCmd : public stLuoRiXiaGuUserCmd$/;"	s
stAskUserEnterWeekZhenxuanUserCmd	tmpcode/commond.h	/^	stAskUserEnterWeekZhenxuanUserCmd()$/;"	f	struct:stAskUserEnterWeekZhenxuanUserCmd
stAskUserEnterWeekZhenxuanUserCmd	tmpcode/commond.h	/^struct stAskUserEnterWeekZhenxuanUserCmd : public stZhenxuanJingjiUserCmd$/;"	s
stAskUserEnterZhenxuanUserCmd	tmpcode/commond.h	/^	stAskUserEnterZhenxuanUserCmd()$/;"	f	struct:stAskUserEnterZhenxuanUserCmd
stAskUserEnterZhenxuanUserCmd	tmpcode/commond.h	/^struct stAskUserEnterZhenxuanUserCmd : public stZhenxuanJingjiUserCmd$/;"	s
stAsrShenLongThanks	tmpcode/commond.h	/^    stAsrShenLongThanks()$/;"	f	struct:stAsrShenLongThanks
stAsrShenLongThanks	tmpcode/commond.h	/^struct stAsrShenLongThanks : public stChatUserCmd$/;"	s
stAssignLifeguardCmd	tmpcode/commond.h	/^	stAssignLifeguardCmd() $/;"	f	struct:stAssignLifeguardCmd
stAssignLifeguardCmd	tmpcode/commond.h	/^struct stAssignLifeguardCmd : public stMagicUserCmd $/;"	s
stAtBattDurabilityUserCmd	tmpcode/commond.h	/^        stAtBattDurabilityUserCmd()$/;"	f	struct:stAtBattDurabilityUserCmd
stAtBattDurabilityUserCmd	tmpcode/commond.h	/^struct stAtBattDurabilityUserCmd : public stPropertyUserCmd$/;"	s
stAttackMagicUserCmd	base/Command.h	/^  stAttackMagicUserCmd()$/;"	f	struct:Cmd::stAttackMagicUserCmd
stAttackMagicUserCmd	base/Command.h	/^struct stAttackMagicUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stAttackMagicUserCmd	tmpcode/commond.h	/^	stAttackMagicUserCmd()$/;"	f	struct:stAttackMagicUserCmd
stAttackMagicUserCmd	tmpcode/commond.h	/^struct stAttackMagicUserCmd : public stMagicUserCmd$/;"	s
stAuctionUserCmd	base/Command.h	/^  stAuctionUserCmd()$/;"	f	struct:Cmd::stAuctionUserCmd
stAuctionUserCmd	base/Command.h	/^struct stAuctionUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stAuctionUserCmd	tmpcode/commond.h	/^        stAuctionUserCmd()              $/;"	f	struct:stAuctionUserCmd
stAuctionUserCmd	tmpcode/commond.h	/^struct stAuctionUserCmd : public stNullUserCmd  $/;"	s
stAutoBattMapScreenUserCmd	tmpcode/commond.h	/^        stAutoBattMapScreenUserCmd()$/;"	f	struct:stAutoBattMapScreenUserCmd
stAutoBattMapScreenUserCmd	tmpcode/commond.h	/^struct stAutoBattMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stAutoHpMpLingQiUserCmd	tmpcode/commond.h	/^	stAutoHpMpLingQiUserCmd()$/;"	f	struct:stAutoHpMpLingQiUserCmd
stAutoHpMpLingQiUserCmd	tmpcode/commond.h	/^struct stAutoHpMpLingQiUserCmd : public stLingQiUserCmd$/;"	s
stAutoRepairObjectUserCmd	tmpcode/commond.h	/^    stAutoRepairObjectUserCmd()$/;"	f	struct:stAutoRepairObjectUserCmd
stAutoRepairObjectUserCmd	tmpcode/commond.h	/^struct stAutoRepairObjectUserCmd : public stTradeUserCmd$/;"	s
stAutoReplyUserCmd	base/Command.h	/^        stAutoReplyUserCmd()$/;"	f	struct:Cmd::stAutoReplyUserCmd
stAutoReplyUserCmd	base/Command.h	/^struct stAutoReplyUserCmd : public stChatUserCmd$/;"	s	namespace:Cmd
stAutoSignUpDragonUserCmd	tmpcode/commond.h	/^        stAutoSignUpDragonUserCmd()$/;"	f	struct:stAutoSignUpDragonUserCmd
stAutoSignUpDragonUserCmd	tmpcode/commond.h	/^struct stAutoSignUpDragonUserCmd : public stDragonUserCmd$/;"	s
stAvatarInfo	tmpcode/commond.h	/^	struct stAvatarInfo$/;"	s	struct:stRetSeptAvatarInfo
stBackOffMagicUserCmd	base/Command.h	/^    stBackOffMagicUserCmd()$/;"	f	struct:Cmd::stBackOffMagicUserCmd
stBackOffMagicUserCmd	base/Command.h	/^  struct stBackOffMagicUserCmd : public stMagicUserCmd {$/;"	s	namespace:Cmd
stBackOffMagicUserCmd	tmpcode/commond.h	/^	stBackOffMagicUserCmd()$/;"	f	struct:stBackOffMagicUserCmd
stBackOffMagicUserCmd	tmpcode/commond.h	/^struct stBackOffMagicUserCmd : public stMagicUserCmd $/;"	s
stBackSelectUserCmd	base/Command.h	/^  stBackSelectUserCmd()$/;"	f	struct:Cmd::stBackSelectUserCmd
stBackSelectUserCmd	base/Command.h	/^struct stBackSelectUserCmd : public stLogonUserCmd$/;"	s	namespace:Cmd
stBackSelectUserCmd	tmpcode/commond.h	/^	  stBackSelectUserCmd()$/;"	f	struct:stBackSelectUserCmd
stBackSelectUserCmd	tmpcode/commond.h	/^struct stBackSelectUserCmd : public stLogonUserCmd$/;"	s
stBackToTransPropertyUserCmd	tmpcode/commond.h	/^	stBackToTransPropertyUserCmd()$/;"	f	struct:stBackToTransPropertyUserCmd
stBackToTransPropertyUserCmd	tmpcode/commond.h	/^struct stBackToTransPropertyUserCmd : public stPropertyUserCmd $/;"	s
stBailPrison	base/Command.h	/^  stBailPrison()$/;"	f	struct:Cmd::stBailPrison
stBailPrison	base/Command.h	/^struct stBailPrison : public stPrisonUserCmd$/;"	s	namespace:Cmd
stBarCardReturnCmd	tmpcode/commond.h	/^	stBarCardReturnCmd()$/;"	f	struct:stBarCardReturnCmd
stBarCardReturnCmd	tmpcode/commond.h	/^struct stBarCardReturnCmd : public stBarUserCmd$/;"	s
stBarPeotCanCmd	tmpcode/commond.h	/^	stBarPeotCanCmd()$/;"	f	struct:stBarPeotCanCmd
stBarPeotCanCmd	tmpcode/commond.h	/^struct stBarPeotCanCmd : public stBarUserCmd$/;"	s
stBarPeotCardCmd	tmpcode/commond.h	/^	stBarPeotCardCmd()$/;"	f	struct:stBarPeotCardCmd
stBarPeotCardCmd	tmpcode/commond.h	/^struct stBarPeotCardCmd : public stBarUserCmd$/;"	s
stBarPeotCmd	tmpcode/commond.h	/^	stBarPeotCmd()$/;"	f	struct:stBarPeotCmd
stBarPeotCmd	tmpcode/commond.h	/^struct stBarPeotCmd : public stBarUserCmd$/;"	s
stBarUserCmd	tmpcode/commond.h	/^	 stBarUserCmd()$/;"	f	struct:stBarUserCmd
stBarUserCmd	tmpcode/commond.h	/^ struct stBarUserCmd : public stNullUserCmd$/;"	s
stBargirlFavourDialog	tmpcode/commond.h	/^        stBargirlFavourDialog()$/;"	f	struct:stBargirlFavourDialog
stBargirlFavourDialog	tmpcode/commond.h	/^struct stBargirlFavourDialog : public stBarUserCmd$/;"	s
stBaseExpUserCmd	tmpcode/commond.h	/^	stBaseExpUserCmd()$/;"	f	struct:stBaseExpUserCmd
stBaseExpUserCmd	tmpcode/commond.h	/^struct stBaseExpUserCmd : public stPropertyUserCmd$/;"	s
stBaseScore	tmpcode/commond.h	/^	stBaseScore()$/;"	f	struct:stBaseScore
stBaseScore	tmpcode/commond.h	/^struct stBaseScore$/;"	s
stBatchRemoveNpcMapScreenUserCmd	base/Command.h	/^    stBatchRemoveNpcMapScreenUserCmd()$/;"	f	struct:Cmd::stBatchRemoveNpcMapScreenUserCmd
stBatchRemoveNpcMapScreenUserCmd	base/Command.h	/^  struct stBatchRemoveNpcMapScreenUserCmd : public stMapScreenUserCmd {$/;"	s	namespace:Cmd
stBatchRemoveNpcMapScreenUserCmd	tmpcode/commond.h	/^stBatchRemoveNpcMapScreenUserCmd()$/;"	f	struct:stBatchRemoveNpcMapScreenUserCmd
stBatchRemoveNpcMapScreenUserCmd	tmpcode/commond.h	/^struct stBatchRemoveNpcMapScreenUserCmd : public stMapScreenUserCmd {$/;"	s
stBatchRemoveUserMapScreenUserCmd	base/Command.h	/^    stBatchRemoveUserMapScreenUserCmd()$/;"	f	struct:Cmd::stBatchRemoveUserMapScreenUserCmd
stBatchRemoveUserMapScreenUserCmd	base/Command.h	/^  struct stBatchRemoveUserMapScreenUserCmd : public stMapScreenUserCmd {$/;"	s	namespace:Cmd
stBatchRemoveUserMapScreenUserCmd	tmpcode/commond.h	/^	stBatchRemoveUserMapScreenUserCmd()$/;"	f	struct:stBatchRemoveUserMapScreenUserCmd
stBatchRemoveUserMapScreenUserCmd	tmpcode/commond.h	/^struct stBatchRemoveUserMapScreenUserCmd : public stMapScreenUserCmd $/;"	s
stBattleStateUserCmd	base/BattleUserCmd.h	/^	stBattleStateUserCmd()$/;"	f	struct:Cmd::stBattleStateUserCmd
stBattleStateUserCmd	base/BattleUserCmd.h	/^    struct stBattleStateUserCmd : public stBattleUserCmd$/;"	s	namespace:Cmd
stBattleUserCmd	base/BattleUserCmd.h	/^	stBattleUserCmd()$/;"	f	struct:Cmd::stBattleUserCmd
stBattleUserCmd	base/BattleUserCmd.h	/^    struct stBattleUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stBecomeLifeguardCmd	tmpcode/commond.h	/^	stBecomeLifeguardCmd() $/;"	f	struct:stBecomeLifeguardCmd
stBecomeLifeguardCmd	tmpcode/commond.h	/^struct stBecomeLifeguardCmd : public stMagicUserCmd $/;"	s
stBeginBetChallengeUserCmd	tmpcode/commond.h	/^	stBeginBetChallengeUserCmd()$/;"	f	struct:stBeginBetChallengeUserCmd
stBeginBetChallengeUserCmd	tmpcode/commond.h	/^struct stBeginBetChallengeUserCmd:public stChallengeGameUserCmd$/;"	s
stBeginDecayLingQiCmd	tmpcode/commond.h	/^	stBeginDecayLingQiCmd()$/;"	f	struct:stBeginDecayLingQiCmd
stBeginDecayLingQiCmd	tmpcode/commond.h	/^struct stBeginDecayLingQiCmd : public stLingQiDecayUserCmd$/;"	s
stBeginDisplayCartoonUserCmd	tmpcode/commond.h	/^        stBeginDisplayCartoonUserCmd()$/;"	f	struct:stBeginDisplayCartoonUserCmd
stBeginDisplayCartoonUserCmd	tmpcode/commond.h	/^struct stBeginDisplayCartoonUserCmd : public stQuestUserCmd$/;"	s
stBeginFoundSkillStore	tmpcode/commond.h	/^        stBeginFoundSkillStore()$/;"	f	struct:stBeginFoundSkillStore
stBeginFoundSkillStore	tmpcode/commond.h	/^struct stBeginFoundSkillStore:stTradeUserCmd$/;"	s
stBeginPunishingSpecialCmd	tmpcode/commond.h	/^	stBeginPunishingSpecialCmd()$/;"	f	struct:stBeginPunishingSpecialCmd
stBeginPunishingSpecialCmd	tmpcode/commond.h	/^struct stBeginPunishingSpecialCmd : public stSpecialUserCmd$/;"	s
stBeginTradeUserCmd	base/Command.h	/^  stBeginTradeUserCmd()$/;"	f	struct:Cmd::stBeginTradeUserCmd
stBeginTradeUserCmd	base/Command.h	/^struct stBeginTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stBeginTradeUserCmd	tmpcode/commond.h	/^	stBeginTradeUserCmd()$/;"	f	struct:stBeginTradeUserCmd
stBeginTradeUserCmd	tmpcode/commond.h	/^struct stBeginTradeUserCmd:public stTradeUserCmd$/;"	s
stBidAuction	base/Command.h	/^  stBidAuction()$/;"	f	struct:Cmd::stBidAuction
stBidAuction	base/Command.h	/^struct stBidAuction : public stAuctionUserCmd$/;"	s	namespace:Cmd
stBidAuction	tmpcode/commond.h	/^        stBidAuction()$/;"	f	struct:stBidAuction
stBidAuction	tmpcode/commond.h	/^struct stBidAuction : public stAuctionUserCmd$/;"	s
stBigEventUserCmd	tmpcode/commond.h	/^	stBigEventUserCmd()$/;"	f	struct:stBigEventUserCmd
stBigEventUserCmd	tmpcode/commond.h	/^struct stBigEventUserCmd : public stRelationUserCmd$/;"	s
stBindUserToOther	tmpcode/commond.h	/^	stBindUserToOther()$/;"	f	struct:stBindUserToOther
stBindUserToOther	tmpcode/commond.h	/^struct stBindUserToOther : public stMapScreenUserCmd$/;"	s
stBodyColorPropertyUserCmd	base/Command.h	/^  stBodyColorPropertyUserCmd()$/;"	f	struct:Cmd::stBodyColorPropertyUserCmd
stBodyColorPropertyUserCmd	base/Command.h	/^struct stBodyColorPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stBookExpUserCmd	tmpcode/commond.h	/^	stBookExpUserCmd()$/;"	f	struct:stBookExpUserCmd
stBookExpUserCmd	tmpcode/commond.h	/^struct stBookExpUserCmd : public stPropertyUserCmd{$/;"	s
stBreakFlagPickSCUserCmd	tmpcode/commond.h	/^	stBreakFlagPickSCUserCmd()$/;"	f	struct:stBreakFlagPickSCUserCmd
stBreakFlagPickSCUserCmd	tmpcode/commond.h	/^struct stBreakFlagPickSCUserCmd : public stSeptCompeteUserCmd$/;"	s
stBreakHorseSoulUserCmd	tmpcode/commond.h	/^    stBreakHorseSoulUserCmd()$/;"	f	struct:stBreakHorseSoulUserCmd
stBreakHorseSoulUserCmd	tmpcode/commond.h	/^struct stBreakHorseSoulUserCmd : public stPetUserCmd$/;"	s
stBribePrison	base/Command.h	/^  stBribePrison()$/;"	f	struct:Cmd::stBribePrison
stBribePrison	base/Command.h	/^struct stBribePrison : public stPrisonUserCmd$/;"	s	namespace:Cmd
stBriefLand	tmpcode/commond.h	/^	struct stBriefLand$/;"	s	struct:stRetFarmInfoUserCmd
stBroadcastMemberInfo	base/Command.h	/^  stBroadcastMemberInfo()$/;"	f	struct:Cmd::stBroadcastMemberInfo
stBroadcastMemberInfo	base/Command.h	/^struct stBroadcastMemberInfo : public stUnionUserCmd$/;"	s	namespace:Cmd
stBroadcastMemberInfo	tmpcode/commond.h	/^	stBroadcastMemberInfo()$/;"	f	struct:stBroadcastMemberInfo
stBroadcastMemberInfo	tmpcode/commond.h	/^struct stBroadcastMemberInfo : public stUnionUserCmd$/;"	s
stBroadcastSeptMemberInfo	base/Command.h	/^  stBroadcastSeptMemberInfo()$/;"	f	struct:Cmd::stBroadcastSeptMemberInfo
stBroadcastSeptMemberInfo	base/Command.h	/^struct stBroadcastSeptMemberInfo : public stSeptUserCmd$/;"	s	namespace:Cmd
stBroadcastSeptMemberInfo	tmpcode/commond.h	/^	stBroadcastSeptMemberInfo()$/;"	f	struct:stBroadcastSeptMemberInfo
stBroadcastSeptMemberInfo	tmpcode/commond.h	/^struct stBroadcastSeptMemberInfo : public stSeptUserCmd$/;"	s
stBuildData	tmpcode/commond.h	/^	struct stBuildData$/;"	s	struct:stMapBuildMapScreenUserCmd
stBuildDecayHouseUserCmd	tmpcode/commond.h	/^	stBuildDecayHouseUserCmd()$/;"	f	struct:stBuildDecayHouseUserCmd
stBuildDecayHouseUserCmd	tmpcode/commond.h	/^struct stBuildDecayHouseUserCmd : public stLingQiDecayUserCmd$/;"	s
stBuildResidentTower	tmpcode/commond.h	/^	stBuildResidentTower()$/;"	f	struct:stBuildResidentTower
stBuildResidentTower	tmpcode/commond.h	/^struct stBuildResidentTower : public stUnionUserCmd$/;"	s
stBuildSkillStoreCmd	tmpcode/commond.h	/^        stBuildSkillStoreCmd()$/;"	f	struct:stBuildSkillStoreCmd
stBuildSkillStoreCmd	tmpcode/commond.h	/^struct stBuildSkillStoreCmd:stTradeUserCmd$/;"	s
stBusinessUserCmd	tmpcode/commond.h	/^	stBusinessUserCmd(const BYTE param) {$/;"	f	struct:stBusinessUserCmd
stBusinessUserCmd	tmpcode/commond.h	/^struct stBusinessUserCmd : public stNullUserCmd $/;"	s
stBuyBusinessGoods	tmpcode/commond.h	/^	stBuyBusinessGoods() : stBusinessUserCmd(BUY_BUSINESS_GOODS_USERCMD)$/;"	f	struct:stBuyBusinessGoods
stBuyBusinessGoods	tmpcode/commond.h	/^struct stBuyBusinessGoods : public stBusinessUserCmd $/;"	s
stBuyCartoonCmd	base/Command.h	/^  stBuyCartoonCmd()$/;"	f	struct:Cmd::stBuyCartoonCmd
stBuyCartoonCmd	base/Command.h	/^struct stBuyCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stBuyDancerUserCmd	tmpcode/commond.h	/^	stBuyDancerUserCmd()$/;"	f	struct:stBuyDancerUserCmd
stBuyDancerUserCmd	tmpcode/commond.h	/^struct stBuyDancerUserCmd : public stBarUserCmd$/;"	s
stBuyItemStall	tmpcode/commond.h	/^	stBuyItemStall()$/;"	f	struct:stBuyItemStall
stBuyItemStall	tmpcode/commond.h	/^struct stBuyItemStall:public stTradeUserCmd  \/\/¬Ú÷˜π∫¬ÚŒÔ∆∑ «∑Òsuccess$/;"	s
stBuyObjectNpcTradeUserCmd	tmpcode/commond.h	/^        stBuyObjectNpcTradeUserCmd()$/;"	f	struct:stBuyObjectNpcTradeUserCmd
stBuyObjectNpcTradeUserCmd	tmpcode/commond.h	/^struct stBuyObjectNpcTradeUserCmd:public stTradeUserCmd$/;"	s
stBuySuitTradeUserCmd	tmpcode/commond.h	/^    stBuySuitTradeUserCmd()$/;"	f	struct:stBuySuitTradeUserCmd
stBuySuitTradeUserCmd	tmpcode/commond.h	/^struct stBuySuitTradeUserCmd:public stTradeUserCmd$/;"	s
stBuyUnionMacketObject	tmpcode/commond.h	/^	stBuyUnionMacketObject()$/;"	f	struct:stBuyUnionMacketObject
stBuyUnionMacketObject	tmpcode/commond.h	/^struct stBuyUnionMacketObject : public stUnionUserCmd$/;"	s
stBuyWeekAssurance	tmpcode/commond.h	/^	stBuyWeekAssurance()$/;"	f	struct:stBuyWeekAssurance
stBuyWeekAssurance	tmpcode/commond.h	/^struct stBuyWeekAssurance : public stGoldUserCmd$/;"	s
stBuyWeekAssuranceResult	tmpcode/commond.h	/^	stBuyWeekAssuranceResult()$/;"	f	struct:stBuyWeekAssuranceResult
stBuyWeekAssuranceResult	tmpcode/commond.h	/^struct stBuyWeekAssuranceResult : public stGoldUserCmd$/;"	s
stBuyWineState	tmpcode/commond.h	/^	stBuyWineState()$/;"	f	struct:stBuyWineState
stBuyWineState	tmpcode/commond.h	/^struct stBuyWineState : public stBarUserCmd$/;"	s
stCallBackUserCmd	tmpcode/commond.h	/^	stCallBackUserCmd()$/;"	f	struct:stCallBackUserCmd
stCallBackUserCmd	tmpcode/commond.h	/^struct stCallBackUserCmd : public stNullUserCmd$/;"	s
stCallBoardDataUserCmd	tmpcode/commond.h	/^        stCallBoardDataUserCmd()$/;"	f	struct:stCallBoardDataUserCmd
stCallBoardDataUserCmd	tmpcode/commond.h	/^struct stCallBoardDataUserCmd : public stDataUserCmd{$/;"	s
stCallHorsePetCmd	base/Command.h	/^  stCallHorsePetCmd()$/;"	f	struct:Cmd::stCallHorsePetCmd
stCallHorsePetCmd	base/Command.h	/^struct stCallHorsePetCmd : public stPetUserCmd$/;"	s	namespace:Cmd
stCallHorsePetCmd	tmpcode/commond.h	/^    stCallHorsePetCmd()$/;"	f	struct:stCallHorsePetCmd
stCallHorsePetCmd	tmpcode/commond.h	/^struct stCallHorsePetCmd : public stPetUserCmd$/;"	s
stCallPrivateGuardHelpUserCmd	tmpcode/commond.h	/^    stCallPrivateGuardHelpUserCmd()$/;"	f	struct:stCallPrivateGuardHelpUserCmd
stCallPrivateGuardHelpUserCmd	tmpcode/commond.h	/^struct stCallPrivateGuardHelpUserCmd: public stSeptUserCmd$/;"	s
stCallSeptGuardHelpUserCmd	tmpcode/commond.h	/^    stCallSeptGuardHelpUserCmd()$/;"	f	struct:stCallSeptGuardHelpUserCmd
stCallSeptGuardHelpUserCmd	tmpcode/commond.h	/^struct stCallSeptGuardHelpUserCmd: public stSeptUserCmd$/;"	s
stCallServantUserCmd	tmpcode/commond.h	/^	stCallServantUserCmd()$/;"	f	struct:stCallServantUserCmd
stCallServantUserCmd	tmpcode/commond.h	/^struct stCallServantUserCmd : public stHomeUserCmd$/;"	s
stCanSellTradeUserCmd	base/Command.h	/^  stCanSellTradeUserCmd()$/;"	f	struct:Cmd::stCanSellTradeUserCmd
stCanSellTradeUserCmd	base/Command.h	/^struct stCanSellTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stCanSellTradeUserCmd	tmpcode/commond.h	/^	stCanSellTradeUserCmd()$/;"	f	struct:stCanSellTradeUserCmd
stCanSellTradeUserCmd	tmpcode/commond.h	/^struct stCanSellTradeUserCmd:public stTradeUserCmd$/;"	s
stCanSetUnionCityTax	tmpcode/commond.h	/^	stCanSetUnionCityTax()$/;"	f	struct:stCanSetUnionCityTax
stCanSetUnionCityTax	tmpcode/commond.h	/^struct stCanSetUnionCityTax : public stUnionUserCmd$/;"	s
stCancelAtBattMapScreenUserCmd	tmpcode/commond.h	/^        stCancelAtBattMapScreenUserCmd()$/;"	f	struct:stCancelAtBattMapScreenUserCmd
stCancelAtBattMapScreenUserCmd	tmpcode/commond.h	/^struct stCancelAtBattMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stCancelBetChallengeUserCmd	tmpcode/commond.h	/^	stCancelBetChallengeUserCmd()$/;"	f	struct:stCancelBetChallengeUserCmd
stCancelBetChallengeUserCmd	tmpcode/commond.h	/^struct stCancelBetChallengeUserCmd:public stChallengeGameUserCmd$/;"	s
stCancelCatcherCmd	base/Command.h	/^  stCancelCatcherCmd()$/;"	f	struct:Cmd::stCancelCatcherCmd
stCancelCatcherCmd	base/Command.h	/^struct stCancelCatcherCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stCancelCityCatcherCmd	base/Command.h	/^  stCancelCityCatcherCmd()$/;"	f	struct:Cmd::stCancelCityCatcherCmd
stCancelCityCatcherCmd	base/Command.h	/^struct stCancelCityCatcherCmd : public stUnionUserCmd $/;"	s	namespace:Cmd
stCancelCountryAlly	base/Command.h	/^  stCancelCountryAlly()$/;"	f	struct:Cmd::stCancelCountryAlly
stCancelCountryAlly	base/Command.h	/^struct stCancelCountryAlly : public stAllyUserCmd$/;"	s	namespace:Cmd
stCancelCountryCmd	base/Command.h	/^    stCancelCountryCmd()$/;"	f	struct:Cmd::stCancelCountryCmd
stCancelCountryCmd	base/Command.h	/^struct stCancelCountryCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stCancelCountryTransUserCmd	tmpcode/commond.h	/^        stCancelCountryTransUserCmd()$/;"	f	struct:stCancelCountryTransUserCmd
stCancelCountryTransUserCmd	tmpcode/commond.h	/^struct stCancelCountryTransUserCmd : public stQuestUserCmd$/;"	s
stCancelDecayLingQiCmd	tmpcode/commond.h	/^	stCancelDecayLingQiCmd()$/;"	f	struct:stCancelDecayLingQiCmd
stCancelDecayLingQiCmd	tmpcode/commond.h	/^struct stCancelDecayLingQiCmd : public stLingQiDecayUserCmd$/;"	s
stCancelDiplomatCmd	base/Command.h	/^  stCancelDiplomatCmd()$/;"	f	struct:Cmd::stCancelDiplomatCmd
stCancelDiplomatCmd	base/Command.h	/^struct stCancelDiplomatCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stCancelIssuedQuestUserCmd	tmpcode/commond.h	/^        stCancelIssuedQuestUserCmd()$/;"	f	struct:stCancelIssuedQuestUserCmd
stCancelIssuedQuestUserCmd	tmpcode/commond.h	/^struct stCancelIssuedQuestUserCmd : public stQuestUserCmd$/;"	s
stCancelLifeguardCmd	tmpcode/commond.h	/^	stCancelLifeguardCmd() $/;"	f	struct:stCancelLifeguardCmd
stCancelLifeguardCmd	tmpcode/commond.h	/^struct stCancelLifeguardCmd : public stMagicUserCmd $/;"	s
stCancelNumPasswdCancelCmd	tmpcode/commond.h	/^	stCancelNumPasswdCancelCmd()$/;"	f	struct:stCancelNumPasswdCancelCmd
stCancelNumPasswdCancelCmd	tmpcode/commond.h	/^struct stCancelNumPasswdCancelCmd : public stSafetyUserCmd$/;"	s
stCancelPlaceSet	tmpcode/commond.h	/^	stCancelPlaceSet()$/;"	f	struct:stCancelPlaceSet
stCancelPlaceSet	tmpcode/commond.h	/^struct stCancelPlaceSet : public stSeptUserCmd$/;"	s
stCancelPositionSet	tmpcode/commond.h	/^	stCancelPositionSet()$/;"	f	struct:stCancelPositionSet
stCancelPositionSet	tmpcode/commond.h	/^struct stCancelPositionSet : public stSeptUserCmd$/;"	s
stCancelRandomQuestUserCmd	tmpcode/commond.h	/^	stCancelRandomQuestUserCmd()$/;"	f	struct:stCancelRandomQuestUserCmd
stCancelRandomQuestUserCmd	tmpcode/commond.h	/^struct stCancelRandomQuestUserCmd : public stRandomQuestUserCmd$/;"	s
stCancelRegSeptPopoUserCmd	tmpcode/commond.h	/^	stCancelRegSeptPopoUserCmd()$/;"	f	struct:stCancelRegSeptPopoUserCmd
stCancelRegSeptPopoUserCmd	tmpcode/commond.h	/^struct stCancelRegSeptPopoUserCmd : public stSeptPopoUserCmd$/;"	s
stCancelRenMaHeYiMagicUserCmd	tmpcode/commond.h	/^    stCancelRenMaHeYiMagicUserCmd() $/;"	f	struct:stCancelRenMaHeYiMagicUserCmd
stCancelRenMaHeYiMagicUserCmd	tmpcode/commond.h	/^struct stCancelRenMaHeYiMagicUserCmd : public stMagicUserCmd$/;"	s
stCancelSaleAuction	base/Command.h	/^  stCancelSaleAuction()$/;"	f	struct:Cmd::stCancelSaleAuction
stCancelSaleAuction	base/Command.h	/^struct stCancelSaleAuction : public stAuctionUserCmd$/;"	s	namespace:Cmd
stCancelSaleAuction	tmpcode/commond.h	/^        stCancelSaleAuction()$/;"	f	struct:stCancelSaleAuction
stCancelSaleAuction	tmpcode/commond.h	/^struct stCancelSaleAuction : public stAuctionUserCmd$/;"	s
stCancelTechSearchUserCmd	base/Command.h	/^  stCancelTechSearchUserCmd()$/;"	f	struct:Cmd::stCancelTechSearchUserCmd
stCancelTechSearchUserCmd	base/Command.h	/^struct stCancelTechSearchUserCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stCancelTradeUserCmd	base/Command.h	/^  stCancelTradeUserCmd()$/;"	f	struct:Cmd::stCancelTradeUserCmd
stCancelTradeUserCmd	base/Command.h	/^struct stCancelTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stCancelTradeUserCmd	tmpcode/commond.h	/^	stCancelTradeUserCmd(DWORD TempID)$/;"	f	struct:stCancelTradeUserCmd
stCancelTradeUserCmd	tmpcode/commond.h	/^struct stCancelTradeUserCmd:public stTradeUserCmd$/;"	s
stCancelUnionAlly	tmpcode/commond.h	/^	stCancelUnionAlly ()$/;"	f	struct:stCancelUnionAlly
stCancelUnionAlly	tmpcode/commond.h	/^struct stCancelUnionAlly : public stUnionAllyUserCmd$/;"	s
stCancelUpUnionBuild	tmpcode/commond.h	/^	stCancelUpUnionBuild()  $/;"	f	struct:stCancelUpUnionBuild
stCancelUpUnionBuild	tmpcode/commond.h	/^struct stCancelUpUnionBuild : public stUnionUserCmd$/;"	s
stCannonCoolTimeCmd	tmpcode/commond.h	/^	stCannonCoolTimeCmd()$/;"	f	struct:stCannonCoolTimeCmd
stCannonCoolTimeCmd	tmpcode/commond.h	/^struct stCannonCoolTimeCmd : public stTankUserCmd$/;"	s
stCaptainBase	base/Command.h	/^struct stCaptainBase$/;"	s	namespace:Cmd
stCardAttackMagicUserCmd	base/HeroCardCmd.h	/^	stCardAttackMagicUserCmd()$/;"	f	struct:Cmd::stCardAttackMagicUserCmd
stCardAttackMagicUserCmd	base/HeroCardCmd.h	/^    struct stCardAttackMagicUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stCartControlQuestUserCmd	base/Command.h	/^  stCartControlQuestUserCmd()$/;"	f	struct:Cmd::stCartControlQuestUserCmd
stCartControlQuestUserCmd	base/Command.h	/^struct stCartControlQuestUserCmd : public stQuestUserCmd$/;"	s	namespace:Cmd
stCartoonUserCmd	base/Command.h	/^  stCartoonUserCmd()$/;"	f	struct:Cmd::stCartoonUserCmd
stCartoonUserCmd	base/Command.h	/^struct stCartoonUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stCatchEggUserCmd	tmpcode/commond.h	/^	stCatchEggUserCmd()$/;"	f	struct:stCatchEggUserCmd
stCatchEggUserCmd	tmpcode/commond.h	/^struct stCatchEggUserCmd : public stNullUserCmd$/;"	s
stCationFishUserCmd	tmpcode/commond.h	/^	stCationFishUserCmd()$/;"	f	struct:stCationFishUserCmd
stCationFishUserCmd	tmpcode/commond.h	/^struct stCationFishUserCmd : stFishUserCmd$/;"	s
stCationInfoFishUserCmd	tmpcode/commond.h	/^	stCationInfoFishUserCmd()$/;"	f	struct:stCationInfoFishUserCmd
stCationInfoFishUserCmd	tmpcode/commond.h	/^struct stCationInfoFishUserCmd : stFishUserCmd$/;"	s
stChallengeGameUserCmd	tmpcode/commond.h	/^	stChallengeGameUserCmd()$/;"	f	struct:stChallengeGameUserCmd
stChallengeGameUserCmd	tmpcode/commond.h	/^struct stChallengeGameUserCmd : public stNullUserCmd$/;"	s
stChallengeInfo	SessionServer/HeroCardManager.h	/^    stChallengeInfo()$/;"	f	struct:stChallengeInfo
stChallengeInfo	SessionServer/HeroCardManager.h	/^struct stChallengeInfo$/;"	s
stChallengeResultDragonUserCmd	tmpcode/commond.h	/^	stChallengeResultDragonUserCmd()$/;"	f	struct:stChallengeResultDragonUserCmd
stChallengeResultDragonUserCmd	tmpcode/commond.h	/^struct stChallengeResultDragonUserCmd : public stDragonUserCmd$/;"	s
stChangeArmyNameUserCmd	base/Command.h	/^  stChangeArmyNameUserCmd()$/;"	f	struct:Cmd::stChangeArmyNameUserCmd
stChangeArmyNameUserCmd	base/Command.h	/^struct stChangeArmyNameUserCmd : public stArmyUserCmd$/;"	s	namespace:Cmd
stChangeChuanchengUserCmd	tmpcode/commond.h	/^	stChangeChuanchengUserCmd()$/;"	f	struct:stChangeChuanchengUserCmd
stChangeChuanchengUserCmd	tmpcode/commond.h	/^struct stChangeChuanchengUserCmd : public stPropertyUserCmd{$/;"	s
stChangeColorLTQUserCmd	tmpcode/commond.h	/^	stChangeColorLTQUserCmd()$/;"	f	struct:stChangeColorLTQUserCmd
stChangeColorLTQUserCmd	tmpcode/commond.h	/^struct stChangeColorLTQUserCmd : public stLTQUserCmd$/;"	s
stChangeCountryCmd	base/Command.h	/^    stChangeCountryCmd()$/;"	f	struct:Cmd::stChangeCountryCmd
stChangeCountryCmd	base/Command.h	/^struct stChangeCountryCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stChangeCountryCmd	tmpcode/commond.h	/^	stChangeCountryCmd()$/;"	f	struct:stChangeCountryCmd
stChangeCountryCmd	tmpcode/commond.h	/^struct stChangeCountryCmd : public stCountryUserCmd$/;"	s
stChangeCountryStar	base/Command.h	/^  stChangeCountryStar()$/;"	f	struct:Cmd::stChangeCountryStar
stChangeCountryStar	base/Command.h	/^struct stChangeCountryStar : public stDareUserCmd$/;"	s	namespace:Cmd
stChangeElecColorUserCmd	tmpcode/commond.h	/^    stChangeElecColorUserCmd()$/;"	f	struct:stChangeElecColorUserCmd
stChangeElecColorUserCmd	tmpcode/commond.h	/^struct stChangeElecColorUserCmd : public stPropertyUserCmd$/;"	s
stChangeFaceLTQUserCmd	tmpcode/commond.h	/^	stChangeFaceLTQUserCmd()$/;"	f	struct:stChangeFaceLTQUserCmd
stChangeFaceLTQUserCmd	tmpcode/commond.h	/^struct stChangeFaceLTQUserCmd : public stLTQUserCmd$/;"	s
stChangeFaceMapScreenUserCmd	base/Command.h	/^    stChangeFaceMapScreenUserCmd()$/;"	f	struct:Cmd::stChangeFaceMapScreenUserCmd
stChangeFaceMapScreenUserCmd	base/Command.h	/^  struct stChangeFaceMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stChangeHairFacePropertyUserCmd	tmpcode/commond.h	/^    stChangeHairFacePropertyUserCmd()$/;"	f	struct:stChangeHairFacePropertyUserCmd
stChangeHairFacePropertyUserCmd	tmpcode/commond.h	/^struct stChangeHairFacePropertyUserCmd : public stPropertyUserCmd$/;"	s
stChangeHorseNameCmd	tmpcode/commond.h	/^        stChangeHorseNameCmd()$/;"	f	struct:stChangeHorseNameCmd
stChangeHorseNameCmd	tmpcode/commond.h	/^struct stChangeHorseNameCmd : public stPetUserCmd$/;"	s
stChangeLingQiToObjLingQiUserCmd	tmpcode/commond.h	/^	stChangeLingQiToObjLingQiUserCmd()$/;"	f	struct:stChangeLingQiToObjLingQiUserCmd
stChangeLingQiToObjLingQiUserCmd	tmpcode/commond.h	/^struct stChangeLingQiToObjLingQiUserCmd : public stLingQiUserCmd$/;"	s
stChangeMasterQuestRoomUserCmd	tmpcode/commond.h	/^	stChangeMasterQuestRoomUserCmd(): \/*questID(0), levelMark(0), *\/roomID(0)$/;"	f	struct:stChangeMasterQuestRoomUserCmd
stChangeMasterQuestRoomUserCmd	tmpcode/commond.h	/^struct stChangeMasterQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stChangeMemQuestRoomUserCmd	tmpcode/commond.h	/^	stChangeMemQuestRoomUserCmd(): questID(0), levelMark(0), roomID(0), bAddMem(0), profession(0)$/;"	f	struct:stChangeMemQuestRoomUserCmd
stChangeMemQuestRoomUserCmd	tmpcode/commond.h	/^struct stChangeMemQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stChangeNameCartoonCmd	base/Command.h	/^  stChangeNameCartoonCmd()$/;"	f	struct:Cmd::stChangeNameCartoonCmd
stChangeNameCartoonCmd	base/Command.h	/^struct stChangeNameCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stChangeNameDragonUserCmd	tmpcode/commond.h	/^        stChangeNameDragonUserCmd()$/;"	f	struct:stChangeNameDragonUserCmd
stChangeNameDragonUserCmd	tmpcode/commond.h	/^struct stChangeNameDragonUserCmd : public stDragonUserCmd$/;"	s
stChangeNameLingQiUserCmd	tmpcode/commond.h	/^	stChangeNameLingQiUserCmd()$/;"	f	struct:stChangeNameLingQiUserCmd
stChangeNameLingQiUserCmd	tmpcode/commond.h	/^struct stChangeNameLingQiUserCmd : public stLingQiUserCmd$/;"	s
stChangeNamePetCmd	base/Command.h	/^  stChangeNamePetCmd()$/;"	f	struct:Cmd::stChangeNamePetCmd
stChangeNamePetCmd	base/Command.h	/^struct stChangeNamePetCmd : public stPetUserCmd$/;"	s	namespace:Cmd
stChangeSeptMasterCmd	tmpcode/commond.h	/^	stChangeSeptMasterCmd()$/;"	f	struct:stChangeSeptMasterCmd
stChangeSeptMasterCmd	tmpcode/commond.h	/^struct stChangeSeptMasterCmd : public stSeptUserCmd$/;"	s
stChangeSeptMemberAliasName	base/Command.h	/^  stChangeSeptMemberAliasName()$/;"	f	struct:Cmd::stChangeSeptMemberAliasName
stChangeSeptMemberAliasName	base/Command.h	/^struct stChangeSeptMemberAliasName : public stSeptUserCmd$/;"	s	namespace:Cmd
stChangeSeptStoreModeCmd	tmpcode/commond.h	/^	stChangeSeptStoreModeCmd()$/;"	f	struct:stChangeSeptStoreModeCmd
stChangeSeptStoreModeCmd	tmpcode/commond.h	/^struct stChangeSeptStoreModeCmd : public stSeptUserCmd$/;"	s
stChangeSkillBookUserCmd	tmpcode/commond.h	/^	stChangeSkillBookUserCmd()$/;"	f	struct:stChangeSkillBookUserCmd
stChangeSkillBookUserCmd	tmpcode/commond.h	/^struct stChangeSkillBookUserCmd : public stPropertyUserCmd$/;"	s
stChangeSuitPropertyUserCmd	tmpcode/commond.h	/^    stChangeSuitPropertyUserCmd()$/;"	f	struct:stChangeSuitPropertyUserCmd
stChangeSuitPropertyUserCmd	tmpcode/commond.h	/^struct stChangeSuitPropertyUserCmd : public stPropertyUserCmd$/;"	s
stChangeTitleCmd	tmpcode/commond.h	/^	stChangeTitleCmd()$/;"	f	struct:stChangeTitleCmd
stChangeTitleCmd	tmpcode/commond.h	/^struct stChangeTitleCmd : public stTitleUserCmd$/;"	s
stChangeToSingleAttackSummonUserCmd	tmpcode/commond.h	/^	stChangeToSingleAttackSummonUserCmd()$/;"	f	struct:stChangeToSingleAttackSummonUserCmd
stChangeToSingleAttackSummonUserCmd	tmpcode/commond.h	/^struct stChangeToSingleAttackSummonUserCmd : public stMagicUserCmd$/;"	s
stChangeUnionMemberAliasName	base/Command.h	/^  stChangeUnionMemberAliasName()$/;"	f	struct:Cmd::stChangeUnionMemberAliasName
stChangeUnionMemberAliasName	base/Command.h	/^struct stChangeUnionMemberAliasName : public stUnionUserCmd$/;"	s	namespace:Cmd
stChangeUnionResourceType	tmpcode/commond.h	/^	stChangeUnionResourceType()$/;"	f	struct:stChangeUnionResourceType
stChangeUnionResourceType	tmpcode/commond.h	/^struct stChangeUnionResourceType : public stUnionUserCmd$/;"	s
stChangeUserJobPropertyUserCmd	tmpcode/commond.h	/^    stChangeUserJobPropertyUserCmd()$/;"	f	struct:stChangeUserJobPropertyUserCmd
stChangeUserJobPropertyUserCmd	tmpcode/commond.h	/^struct stChangeUserJobPropertyUserCmd : public stPropertyUserCmd$/;"	s
stChangeZoneVerify	base/BattleUserCmd.h	/^	stChangeZoneVerify()$/;"	f	struct:Cmd::stChangeZoneVerify
stChangeZoneVerify	base/BattleUserCmd.h	/^    struct stChangeZoneVerify : public stBattleUserCmd$/;"	s	namespace:Cmd
stChannelChatUserCmd	base/Command.h	/^  stChannelChatUserCmd()$/;"	f	struct:Cmd::stChannelChatUserCmd
stChannelChatUserCmd	base/Command.h	/^struct  stChannelChatUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stChargeAccelcmdPropUserCmd	tmpcode/commond.h	/^        stChargeAccelcmdPropUserCmd()$/;"	f	struct:stChargeAccelcmdPropUserCmd
stChargeAccelcmdPropUserCmd	tmpcode/commond.h	/^struct stChargeAccelcmdPropUserCmd : public stPropertyUserCmd$/;"	s
stChargeCartoonCmd	base/Command.h	/^  stChargeCartoonCmd()$/;"	f	struct:Cmd::stChargeCartoonCmd
stChargeCartoonCmd	base/Command.h	/^struct stChargeCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stChatGm	tmpcode/commond.h	/^	stChatGm()$/;"	f	struct:stChatGm
stChatGm	tmpcode/commond.h	/^struct stChatGm : public stChatUserCmd$/;"	s
stChatGmCancel	tmpcode/commond.h	/^	stChatGmCancel()$/;"	f	struct:stChatGmCancel
stChatGmCancel	tmpcode/commond.h	/^struct stChatGmCancel : public stChatUserCmd$/;"	s
stChatGmTool	base/Command.h	/^  stChatGmTool() $/;"	f	struct:Cmd::stChatGmTool
stChatGmTool	base/Command.h	/^struct stChatGmTool : public stGmToolUserCmd$/;"	s	namespace:Cmd
stChatUserCmd	base/Command.h	/^  stChatUserCmd()$/;"	f	struct:Cmd::stChatUserCmd
stChatUserCmd	base/Command.h	/^struct stChatUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stChatUserCmd	tmpcode/commond.h	/^        stChatUserCmd()$/;"	f	struct:stChatUserCmd
stChatUserCmd	tmpcode/commond.h	/^struct stChatUserCmd : public stNullUserCmd$/;"	s
stCheckCountryCountSelectUserCmd	base/Command.h	/^    stCheckCountryCountSelectUserCmd()$/;"	f	struct:Cmd::stCheckCountryCountSelectUserCmd
stCheckCountryCountSelectUserCmd	base/Command.h	/^struct stCheckCountryCountSelectUserCmd : public stSelectUserCmd$/;"	s	namespace:Cmd
stCheckCountryCountSelectUserCmd	tmpcode/commond.h	/^	stCheckCountryCountSelectUserCmd()$/;"	f	struct:stCheckCountryCountSelectUserCmd
stCheckCountryCountSelectUserCmd	tmpcode/commond.h	/^struct stCheckCountryCountSelectUserCmd : public stSelectUserCmd$/;"	s
stCheckExchangeRateTradeUserCmd	tmpcode/commond.h	/^    stCheckExchangeRateTradeUserCmd()$/;"	f	struct:stCheckExchangeRateTradeUserCmd
stCheckExchangeRateTradeUserCmd	tmpcode/commond.h	/^struct stCheckExchangeRateTradeUserCmd:public stTradeUserCmd$/;"	s
stCheckGmTool	tmpcode/commond.h	/^	stCheckGmTool()$/;"	f	struct:stCheckGmTool
stCheckGmTool	tmpcode/commond.h	/^struct stCheckGmTool : public stGmToolUserCmd$/;"	s
stCheckMasterNpcUserCmd	tmpcode/commond.h	/^	stCheckMasterNpcUserCmd(): npcTempID(0)$/;"	f	struct:stCheckMasterNpcUserCmd
stCheckMasterNpcUserCmd	tmpcode/commond.h	/^struct stCheckMasterNpcUserCmd: public stZYZUserCmd$/;"	s
stCheckNameSelectUserCmd	base/Command.h	/^  stCheckNameSelectUserCmd()$/;"	f	struct:Cmd::stCheckNameSelectUserCmd
stCheckNameSelectUserCmd	base/Command.h	/^struct stCheckNameSelectUserCmd : public stSelectUserCmd$/;"	s	namespace:Cmd
stCheckNameSelectUserCmd	tmpcode/commond.h	/^	stCheckNameSelectUserCmd()$/;"	f	struct:stCheckNameSelectUserCmd
stCheckNameSelectUserCmd	tmpcode/commond.h	/^struct stCheckNameSelectUserCmd : public stSelectUserCmd$/;"	s
stCheckRebuildTankCmd	tmpcode/commond.h	/^	stCheckRebuildTankCmd()$/;"	f	struct:stCheckRebuildTankCmd
stCheckRebuildTankCmd	tmpcode/commond.h	/^struct stCheckRebuildTankCmd : public stTankUserCmd$/;"	s
stCheckRebuildUnionTankCmd	tmpcode/commond.h	/^	stCheckRebuildUnionTankCmd()$/;"	f	struct:stCheckRebuildUnionTankCmd
stCheckRebuildUnionTankCmd	tmpcode/commond.h	/^struct stCheckRebuildUnionTankCmd : public stTankUserCmd$/;"	s
stCheckRegUserCmd	tmpcode/commond.h	/^	stCheckRegUserCmd(): npcID(0)$/;"	f	struct:stCheckRegUserCmd
stCheckRegUserCmd	tmpcode/commond.h	/^struct stCheckRegUserCmd: public stDragonTotemUserCmd$/;"	s
stCheckUpLingQiUserCmd	tmpcode/commond.h	/^	stCheckUpLingQiUserCmd()$/;"	f	struct:stCheckUpLingQiUserCmd
stCheckUpLingQiUserCmd	tmpcode/commond.h	/^struct stCheckUpLingQiUserCmd : public stLingQiUserCmd$/;"	s
stCheckValidQuestUserCmd	base/Command.h	/^  stCheckValidQuestUserCmd()$/;"	f	struct:Cmd::stCheckValidQuestUserCmd
stCheckValidQuestUserCmd	base/Command.h	/^struct stCheckValidQuestUserCmd : public stQuestUserCmd$/;"	s	namespace:Cmd
stCheckValidQuestUserCmd	tmpcode/commond.h	/^        stCheckValidQuestUserCmd()$/;"	f	struct:stCheckValidQuestUserCmd
stCheckValidQuestUserCmd	tmpcode/commond.h	/^struct stCheckValidQuestUserCmd : public stQuestUserCmd$/;"	s
stChuanchengUsednumPropertyUserCmd	tmpcode/commond.h	/^	stChuanchengUsednumPropertyUserCmd()$/;"	f	struct:stChuanchengUsednumPropertyUserCmd
stChuanchengUsednumPropertyUserCmd	tmpcode/commond.h	/^struct stChuanchengUsednumPropertyUserCmd:public stPropertyUserCmd$/;"	s
stCityFundUnionCmd	tmpcode/commond.h	/^	stCityFundUnionCmd()$/;"	f	struct:stCityFundUnionCmd
stCityFundUnionCmd	tmpcode/commond.h	/^struct stCityFundUnionCmd : public stUnionUserCmd$/;"	s
stCityInfoS	tmpcode/commond.h	/^} stCityInfoS;$/;"	t	typeref:struct:CityInfo
stCityQuestAutoInfo	tmpcode/commond.h	/^struct stCityQuestAutoInfo$/;"	s
stCityQuestAutoList	tmpcode/commond.h	/^	stCityQuestAutoList()$/;"	f	struct:stCityQuestAutoList
stCityQuestAutoList	tmpcode/commond.h	/^struct stCityQuestAutoList : public stMapScreenUserCmd$/;"	s
stCityQuestEarnInfo	tmpcode/commond.h	/^    stCityQuestEarnInfo()$/;"	f	struct:stCityQuestEarnInfo
stCityQuestEarnInfo	tmpcode/commond.h	/^struct stCityQuestEarnInfo$/;"	s
stCityQuestEarnList	tmpcode/commond.h	/^    stCityQuestEarnList()$/;"	f	struct:stCityQuestEarnList
stCityQuestEarnList	tmpcode/commond.h	/^struct stCityQuestEarnList : public stMapScreenUserCmd$/;"	s
stCityQuestGetInfo	tmpcode/commond.h	/^    stCityQuestGetInfo()$/;"	f	struct:stCityQuestGetInfo
stCityQuestGetInfo	tmpcode/commond.h	/^struct stCityQuestGetInfo$/;"	s
stCityQuestInfo	tmpcode/commond.h	/^}stCityQuestInfo;$/;"	t	typeref:struct:CityQuestInfo
stCityUserCmd	tmpcode/commond.h	/^	stCityUserCmd()$/;"	f	struct:stCityUserCmd
stCityUserCmd	tmpcode/commond.h	/^struct stCityUserCmd : public stNullUserCmd$/;"	s
stCleanBugSoilHouseUserCmd	tmpcode/commond.h	/^	stCleanBugSoilHouseUserCmd()$/;"	f	struct:stCleanBugSoilHouseUserCmd
stCleanBugSoilHouseUserCmd	tmpcode/commond.h	/^struct stCleanBugSoilHouseUserCmd: public stHouseUserCmd$/;"	s
stCleanGrassSoilHouseUserCmd	tmpcode/commond.h	/^	stCleanGrassSoilHouseUserCmd()$/;"	f	struct:stCleanGrassSoilHouseUserCmd
stCleanGrassSoilHouseUserCmd	tmpcode/commond.h	/^struct stCleanGrassSoilHouseUserCmd: public stHouseUserCmd$/;"	s
stClearAfterLeaveQuestRoomUserCmd	tmpcode/commond.h	/^	stClearAfterLeaveQuestRoomUserCmd()$/;"	f	struct:stClearAfterLeaveQuestRoomUserCmd
stClearAfterLeaveQuestRoomUserCmd	tmpcode/commond.h	/^struct stClearAfterLeaveQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stClearChangeModelCmd	tmpcode/commond.h	/^	stClearChangeModelCmd()$/;"	f	struct:stClearChangeModelCmd
stClearChangeModelCmd	tmpcode/commond.h	/^struct stClearChangeModelCmd : public stDataUserCmd$/;"	s
stClearCureCityNpcCmd	tmpcode/commond.h	/^	stClearCureCityNpcCmd()$/;"	f	struct:stClearCureCityNpcCmd
stClearCureCityNpcCmd	tmpcode/commond.h	/^struct stClearCureCityNpcCmd : public stCityUserCmd$/;"	s
stClearElecGemUserCmd	tmpcode/commond.h	/^        stClearElecGemUserCmd()$/;"	f	struct:stClearElecGemUserCmd
stClearElecGemUserCmd	tmpcode/commond.h	/^struct stClearElecGemUserCmd : public stPropertyUserCmd$/;"	s
stClearFlowerEffectNine	tmpcode/commond.h	/^	stClearFlowerEffectNine()$/;"	f	struct:stClearFlowerEffectNine
stClearFlowerEffectNine	tmpcode/commond.h	/^struct stClearFlowerEffectNine : public stDataUserCmd$/;"	s
stClearJobTokenPropertyUserCmd	tmpcode/commond.h	/^	stClearJobTokenPropertyUserCmd()$/;"	f	struct:stClearJobTokenPropertyUserCmd
stClearJobTokenPropertyUserCmd	tmpcode/commond.h	/^struct stClearJobTokenPropertyUserCmd: public stPropertyUserCmd$/;"	s
stClearLeechdomColdDownPropertyUserCmd	tmpcode/commond.h	/^    stClearLeechdomColdDownPropertyUserCmd()$/;"	f	struct:stClearLeechdomColdDownPropertyUserCmd
stClearLeechdomColdDownPropertyUserCmd	tmpcode/commond.h	/^struct stClearLeechdomColdDownPropertyUserCmd : public stPropertyUserCmd$/;"	s
stClearLingQiSkillUserCmd	tmpcode/commond.h	/^    stClearLingQiSkillUserCmd()$/;"	f	struct:stClearLingQiSkillUserCmd
stClearLingQiSkillUserCmd	tmpcode/commond.h	/^struct stClearLingQiSkillUserCmd : public stLingQiUserCmd$/;"	s
stClearObjectOwnerMapScreenUserCmd	base/Command.h	/^	stClearObjectOwnerMapScreenUserCmd()$/;"	f	struct:Cmd::stClearObjectOwnerMapScreenUserCmd
stClearObjectOwnerMapScreenUserCmd	base/Command.h	/^struct stClearObjectOwnerMapScreenUserCmd  : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stClearObjectOwnerMapScreenUserCmd	tmpcode/commond.h	/^	stClearObjectOwnerMapScreenUserCmd()$/;"	f	struct:stClearObjectOwnerMapScreenUserCmd
stClearObjectOwnerMapScreenUserCmd	tmpcode/commond.h	/^struct stClearObjectOwnerMapScreenUserCmd  : public stMapScreenUserCmd$/;"	s
stClearPointLimitPropertyUserCmd	base/Command.h	/^  stClearPointLimitPropertyUserCmd()$/;"	f	struct:Cmd::stClearPointLimitPropertyUserCmd
stClearPointLimitPropertyUserCmd	base/Command.h	/^struct stClearPointLimitPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stClearPointPropertyUserCmd	base/Command.h	/^  stClearPointPropertyUserCmd()$/;"	f	struct:Cmd::stClearPointPropertyUserCmd
stClearPointPropertyUserCmd	base/Command.h	/^struct stClearPointPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stClearPointPropertyUserCmd	tmpcode/commond.h	/^	stClearPointPropertyUserCmd()           $/;"	f	struct:stClearPointPropertyUserCmd
stClearPointPropertyUserCmd	tmpcode/commond.h	/^struct stClearPointPropertyUserCmd : public stPropertyUserCmd$/;"	s
stClearReplayMerceneryListCountryCmd	tmpcode/commond.h	/^        stClearReplayMerceneryListCountryCmd()$/;"	f	struct:stClearReplayMerceneryListCountryCmd
stClearReplayMerceneryListCountryCmd	tmpcode/commond.h	/^struct stClearReplayMerceneryListCountryCmd:public stCountryUserCmd$/;"	s
stClearSeptSkill	tmpcode/commond.h	/^	stClearSeptSkill(const DWORD _id) : stUnionSkillUserCmd(CLEAR_SEPTSKILL_USERCMD) {$/;"	f	struct:stClearSeptSkill
stClearSeptSkill	tmpcode/commond.h	/^struct stClearSeptSkill : public stUnionSkillUserCmd {$/;"	s
stClearShequStateMapScreenUserCmd	tmpcode/commond.h	/^	stClearShequStateMapScreenUserCmd()$/;"	f	struct:stClearShequStateMapScreenUserCmd
stClearShequStateMapScreenUserCmd	tmpcode/commond.h	/^struct stClearShequStateMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s
stClearSkillUserCmd	base/Command.h	/^    stClearSkillUserCmd()$/;"	f	struct:Cmd::stClearSkillUserCmd
stClearSkillUserCmd	base/Command.h	/^  struct stClearSkillUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stClearSkillUserCmd	tmpcode/commond.h	/^	stClearSkillUserCmd()$/;"	f	struct:stClearSkillUserCmd
stClearSkillUserCmd	tmpcode/commond.h	/^struct stClearSkillUserCmd : public stPropertyUserCmd{$/;"	s
stClearStateMapScreenUserCmd	base/Command.h	/^  stClearStateMapScreenUserCmd()$/;"	f	struct:Cmd::stClearStateMapScreenUserCmd
stClearStateMapScreenUserCmd	base/Command.h	/^struct stClearStateMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stClearStateMapScreenUserCmd	tmpcode/commond.h	/^	stClearStateMapScreenUserCmd()$/;"	f	struct:stClearStateMapScreenUserCmd
stClearStateMapScreenUserCmd	tmpcode/commond.h	/^struct stClearStateMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stClearTeamMemberMapPos	tmpcode/commond.h	/^	stClearTeamMemberMapPos()$/;"	f	struct:stClearTeamMemberMapPos
stClearTeamMemberMapPos	tmpcode/commond.h	/^struct stClearTeamMemberMapPos : public stChatUserCmd$/;"	s
stClearUserSkillPointPropertyUserCmd	base/Command.h	/^  stClearUserSkillPointPropertyUserCmd()$/;"	f	struct:Cmd::stClearUserSkillPointPropertyUserCmd
stClearUserSkillPointPropertyUserCmd	base/Command.h	/^struct stClearUserSkillPointPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stClearUserSkillPointPropertyUserCmd	tmpcode/commond.h	/^	stClearUserSkillPointPropertyUserCmd()                                                            $/;"	f	struct:stClearUserSkillPointPropertyUserCmd
stClearUserSkillPointPropertyUserCmd	tmpcode/commond.h	/^struct stClearUserSkillPointPropertyUserCmd : public stPropertyUserCmd$/;"	s
stClickIssueQuestUserCmd	tmpcode/commond.h	/^        stClickIssueQuestUserCmd()$/;"	f	struct:stClickIssueQuestUserCmd
stClickIssueQuestUserCmd	tmpcode/commond.h	/^struct stClickIssueQuestUserCmd : public stQuestUserCmd$/;"	s
stClientKOKOption	tmpcode/commond.h	/^        stClientKOKOption()$/;"	f	struct:stClientKOKOption
stClientKOKOption	tmpcode/commond.h	/^struct stClientKOKOption:public stDataUserCmd$/;"	s
stClientNewMap	tmpcode/commond.h	/^	stClientNewMap()$/;"	f	struct:stClientNewMap
stClientNewMap	tmpcode/commond.h	/^struct stClientNewMap : public stDataUserCmd$/;"	s
stCloseChallengeUserCmd	tmpcode/commond.h	/^	stCloseChallengeUserCmd()$/;"	f	struct:stCloseChallengeUserCmd
stCloseChallengeUserCmd	tmpcode/commond.h	/^struct stCloseChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stCloseHelpUnionCmd	tmpcode/commond.h	/^	stCloseHelpUnionCmd()$/;"	f	struct:stCloseHelpUnionCmd
stCloseHelpUnionCmd	tmpcode/commond.h	/^struct stCloseHelpUnionCmd : public stUnionUserCmd$/;"	s
stCloseMarryIconCmd	tmpcode/commond.h	/^	stCloseMarryIconCmd()$/;"	f	struct:stCloseMarryIconCmd
stCloseMarryIconCmd	tmpcode/commond.h	/^struct stCloseMarryIconCmd : public stRelationUserCmd$/;"	s
stCloseWindowEvolveHorseUserCmd	tmpcode/commond.h	/^    stCloseWindowEvolveHorseUserCmd()$/;"	f	struct:stCloseWindowEvolveHorseUserCmd
stCloseWindowEvolveHorseUserCmd	tmpcode/commond.h	/^struct stCloseWindowEvolveHorseUserCmd : public stPetUserCmd$/;"	s
stCommitBetChallengeUserCmd	tmpcode/commond.h	/^	stCommitBetChallengeUserCmd()$/;"	f	struct:stCommitBetChallengeUserCmd
stCommitBetChallengeUserCmd	tmpcode/commond.h	/^struct stCommitBetChallengeUserCmd:public stChallengeGameUserCmd$/;"	s
stCommitDecayLingQiCmd	tmpcode/commond.h	/^	stCommitDecayLingQiCmd()$/;"	f	struct:stCommitDecayLingQiCmd
stCommitDecayLingQiCmd	tmpcode/commond.h	/^struct stCommitDecayLingQiCmd : public stLingQiDecayUserCmd$/;"	s
stCommitTradeUserCmd	base/Command.h	/^  stCommitTradeUserCmd()$/;"	f	struct:Cmd::stCommitTradeUserCmd
stCommitTradeUserCmd	base/Command.h	/^struct stCommitTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stCommitTradeUserCmd	tmpcode/commond.h	/^	stCommitTradeUserCmd(DWORD TempID)$/;"	f	struct:stCommitTradeUserCmd
stCommitTradeUserCmd	tmpcode/commond.h	/^struct stCommitTradeUserCmd:public stTradeUserCmd$/;"	s
stCommitVoteUserCmd	base/Command.h	/^  stCommitVoteUserCmd()$/;"	f	struct:Cmd::stCommitVoteUserCmd
stCommitVoteUserCmd	base/Command.h	/^struct stCommitVoteUserCmd : public stVoteUserCmd$/;"	s	namespace:Cmd
stCompareUserDataInFlowerSortUserCmd	tmpcode/commond.h	/^	stCompareUserDataInFlowerSortUserCmd()$/;"	f	struct:stCompareUserDataInFlowerSortUserCmd
stCompareUserDataInFlowerSortUserCmd	tmpcode/commond.h	/^struct stCompareUserDataInFlowerSortUserCmd : public stDataUserCmd$/;"	s
stComposeElecGemUserCmd	tmpcode/commond.h	/^        stComposeElecGemUserCmd()$/;"	f	struct:stComposeElecGemUserCmd
stComposeElecGemUserCmd	tmpcode/commond.h	/^struct stComposeElecGemUserCmd : public stPropertyUserCmd$/;"	s
stComposeItemPropertyUserCmd	base/Command.h	/^    stComposeItemPropertyUserCmd()$/;"	f	struct:Cmd::stComposeItemPropertyUserCmd
stComposeItemPropertyUserCmd	base/Command.h	/^  struct stComposeItemPropertyUserCmd : public stPropertyUserCmd {$/;"	s	namespace:Cmd
stComposeItemPropertyUserCmd	tmpcode/commond.h	/^    stComposeItemPropertyUserCmd()$/;"	f	struct:stComposeItemPropertyUserCmd
stComposeItemPropertyUserCmd	tmpcode/commond.h	/^struct stComposeItemPropertyUserCmd : public stPropertyUserCmd $/;"	s
stComposeSoulStonePropertyUserCmd	base/Command.h	/^  stComposeSoulStonePropertyUserCmd()$/;"	f	struct:Cmd::stComposeSoulStonePropertyUserCmd
stComposeSoulStonePropertyUserCmd	base/Command.h	/^struct stComposeSoulStonePropertyUserCmd : public stPropertyUserCmd {$/;"	s	namespace:Cmd
stComposeStarStoneUserCmd	tmpcode/commond.h	/^    stComposeStarStoneUserCmd() {$/;"	f	struct:stComposeStarStoneUserCmd
stComposeStarStoneUserCmd	tmpcode/commond.h	/^struct stComposeStarStoneUserCmd : public stPropertyUserCmd {$/;"	s
stConSumeCardCard	base/Command.h	/^  stConSumeCardCard()$/;"	f	struct:Cmd::stConSumeCardCard
stConSumeCardCard	base/Command.h	/^struct stConSumeCardCard : public stGoldUserCmd$/;"	s	namespace:Cmd
stConSumeCardCard	tmpcode/commond.h	/^	stConSumeCardCard()$/;"	f	struct:stConSumeCardCard
stConSumeCardCard	tmpcode/commond.h	/^struct stConSumeCardCard : public stGoldUserCmd$/;"	s
stConSumeCardCard_Gateway	base/BillCommand.h	/^      stConSumeCardCard_Gateway()$/;"	f	struct:Cmd::Bill::stConSumeCardCard_Gateway
stConSumeCardCard_Gateway	base/BillCommand.h	/^    struct stConSumeCardCard_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Bill
stConfirmCityTax	tmpcode/commond.h	/^	stConfirmCityTax()$/;"	f	struct:stConfirmCityTax
stConfirmCityTax	tmpcode/commond.h	/^struct stConfirmCityTax: public stUnionUserCmd$/;"	s
stConfirmFeeSkillStore	tmpcode/commond.h	/^        stConfirmFeeSkillStore()$/;"	f	struct:stConfirmFeeSkillStore
stConfirmFeeSkillStore	tmpcode/commond.h	/^struct stConfirmFeeSkillStore:stTradeUserCmd$/;"	s
stConfirmFeedLingQiUserCmd	tmpcode/commond.h	/^	stConfirmFeedLingQiUserCmd()$/;"	f	struct:stConfirmFeedLingQiUserCmd
stConfirmFeedLingQiUserCmd	tmpcode/commond.h	/^struct stConfirmFeedLingQiUserCmd : public stLingQiUserCmd$/;"	s
stConfirmIssuedQuestUserCmd	tmpcode/commond.h	/^        stConfirmIssuedQuestUserCmd()$/;"	f	struct:stConfirmIssuedQuestUserCmd
stConfirmIssuedQuestUserCmd	tmpcode/commond.h	/^struct stConfirmIssuedQuestUserCmd : public stQuestUserCmd$/;"	s
stConfirmMergeResultLingQiUserCmd	tmpcode/commond.h	/^        stConfirmMergeResultLingQiUserCmd()$/;"	f	struct:stConfirmMergeResultLingQiUserCmd
stConfirmMergeResultLingQiUserCmd	tmpcode/commond.h	/^struct stConfirmMergeResultLingQiUserCmd : public stLingQiUserCmd$/;"	s
stConfirmSearcherUserCmd	base/Command.h	/^  stConfirmSearcherUserCmd()$/;"	f	struct:Cmd::stConfirmSearcherUserCmd
stConfirmSearcherUserCmd	base/Command.h	/^struct stConfirmSearcherUserCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stConsequentFishUserCmd	tmpcode/commond.h	/^	stConsequentFishUserCmd()$/;"	f	struct:stConsequentFishUserCmd
stConsequentFishUserCmd	tmpcode/commond.h	/^struct stConsequentFishUserCmd : stFishUserCmd$/;"	s
stConsignCancelGoldStockUserCmd	base/Command.h	/^  stConsignCancelGoldStockUserCmd() $/;"	f	struct:Cmd::stConsignCancelGoldStockUserCmd
stConsignCancelGoldStockUserCmd	base/Command.h	/^struct stConsignCancelGoldStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stConsignCancelGoldStockUserCmd	tmpcode/commond.h	/^	stConsignCancelGoldStockUserCmd() $/;"	f	struct:stConsignCancelGoldStockUserCmd
stConsignCancelGoldStockUserCmd	tmpcode/commond.h	/^struct stConsignCancelGoldStockUserCmd : public stStockBillUserCmd$/;"	s
stConsignCancelMoneyStockUserCmd	base/Command.h	/^  stConsignCancelMoneyStockUserCmd() $/;"	f	struct:Cmd::stConsignCancelMoneyStockUserCmd
stConsignCancelMoneyStockUserCmd	base/Command.h	/^struct stConsignCancelMoneyStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stConsignCancelMoneyStockUserCmd	tmpcode/commond.h	/^	stConsignCancelMoneyStockUserCmd() $/;"	f	struct:stConsignCancelMoneyStockUserCmd
stConsignCancelMoneyStockUserCmd	tmpcode/commond.h	/^struct stConsignCancelMoneyStockUserCmd : public stStockBillUserCmd$/;"	s
stConsignCartoonCmd	base/Command.h	/^  stConsignCartoonCmd()$/;"	f	struct:Cmd::stConsignCartoonCmd
stConsignCartoonCmd	base/Command.h	/^struct stConsignCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stConsignCleanListStockUserCmd	base/Command.h	/^  stConsignCleanListStockUserCmd() $/;"	f	struct:Cmd::stConsignCleanListStockUserCmd
stConsignCleanListStockUserCmd	base/Command.h	/^struct stConsignCleanListStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stConsignCleanListStockUserCmd	tmpcode/commond.h	/^	stConsignCleanListStockUserCmd() $/;"	f	struct:stConsignCleanListStockUserCmd
stConsignCleanListStockUserCmd	tmpcode/commond.h	/^struct stConsignCleanListStockUserCmd : public stStockBillUserCmd$/;"	s
stConsignGoldListStockUserCmd	base/Command.h	/^  stConsignGoldListStockUserCmd() $/;"	f	struct:Cmd::stConsignGoldListStockUserCmd
stConsignGoldListStockUserCmd	base/Command.h	/^struct stConsignGoldListStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stConsignGoldListStockUserCmd	tmpcode/commond.h	/^	stConsignGoldListStockUserCmd()$/;"	f	struct:stConsignGoldListStockUserCmd
stConsignGoldListStockUserCmd	tmpcode/commond.h	/^struct stConsignGoldListStockUserCmd : public stStockBillUserCmd$/;"	s
stConsignGoldStockUserCmd	base/Command.h	/^  stConsignGoldStockUserCmd() $/;"	f	struct:Cmd::stConsignGoldStockUserCmd
stConsignGoldStockUserCmd	base/Command.h	/^struct stConsignGoldStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stConsignMoneyListStockUserCmd	base/Command.h	/^  stConsignMoneyListStockUserCmd() $/;"	f	struct:Cmd::stConsignMoneyListStockUserCmd
stConsignMoneyListStockUserCmd	base/Command.h	/^struct stConsignMoneyListStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stConsignMoneyListStockUserCmd	tmpcode/commond.h	/^	stConsignMoneyListStockUserCmd()$/;"	f	struct:stConsignMoneyListStockUserCmd
stConsignMoneyListStockUserCmd	tmpcode/commond.h	/^struct stConsignMoneyListStockUserCmd : public stStockBillUserCmd$/;"	s
stConsignMoneyStockUserCmd	base/Command.h	/^  stConsignMoneyStockUserCmd() $/;"	f	struct:Cmd::stConsignMoneyStockUserCmd
stConsignMoneyStockUserCmd	base/Command.h	/^struct stConsignMoneyStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stConsignRetCartoonCmd	base/Command.h	/^  stConsignRetCartoonCmd()$/;"	f	struct:Cmd::stConsignRetCartoonCmd
stConsignRetCartoonCmd	base/Command.h	/^struct stConsignRetCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stContentMail	base/Command.h	/^  stContentMail()$/;"	f	struct:Cmd::stContentMail
stContentMail	base/Command.h	/^struct stContentMail : public stMailUserCmd$/;"	s	namespace:Cmd
stContentMail	tmpcode/commond.h	/^    stContentMail()$/;"	f	struct:stContentMail
stContentMail	tmpcode/commond.h	/^struct stContentMail : public stMailUserCmd$/;"	s
stContinueSaleAuction	tmpcode/commond.h	/^        stContinueSaleAuction()$/;"	f	struct:stContinueSaleAuction
stContinueSaleAuction	tmpcode/commond.h	/^struct stContinueSaleAuction : public stAuctionUserCmd$/;"	s
stContributeCountryMaterialCmd	base/Command.h	/^  stContributeCountryMaterialCmd()$/;"	f	struct:Cmd::stContributeCountryMaterialCmd
stContributeCountryMaterialCmd	base/Command.h	/^struct stContributeCountryMaterialCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stContributeMoneyUnionCmd	tmpcode/commond.h	/^        stContributeMoneyUnionCmd()$/;"	f	struct:stContributeMoneyUnionCmd
stContributeMoneyUnionCmd	tmpcode/commond.h	/^struct stContributeMoneyUnionCmd : public stUnionUserCmd$/;"	s
stContributeResurceUnionCmd	tmpcode/commond.h	/^	stContributeResurceUnionCmd()$/;"	f	struct:stContributeResurceUnionCmd
stContributeResurceUnionCmd	tmpcode/commond.h	/^struct stContributeResurceUnionCmd : public stUnionUserCmd$/;"	s
stContributeTankCmd	tmpcode/commond.h	/^	stContributeTankCmd()$/;"	f	struct:stContributeTankCmd
stContributeTankCmd	tmpcode/commond.h	/^struct stContributeTankCmd : public stTankUserCmd$/;"	s
stContributeUnion	base/Command.h	/^  stContributeUnion()$/;"	f	struct:Cmd::stContributeUnion
stContributeUnion	base/Command.h	/^struct stContributeUnion : public stUnionUserCmd$/;"	s	namespace:Cmd
stContributeUnionTankCmd	tmpcode/commond.h	/^	stContributeUnionTankCmd()$/;"	f	struct:stContributeUnionTankCmd
stContributeUnionTankCmd	tmpcode/commond.h	/^struct stContributeUnionTankCmd : public stTankUserCmd$/;"	s
stControlGoodsColumeCmd	tmpcode/commond.h	/^    stControlGoodsColumeCmd()$/;"	f	struct:stControlGoodsColumeCmd
stControlGoodsColumeCmd	tmpcode/commond.h	/^struct stControlGoodsColumeCmd: public stPetUserCmd$/;"	s
stConvertMagicPhysicsUserCmd	tmpcode/commond.h	/^        stConvertMagicPhysicsUserCmd()  $/;"	f	struct:stConvertMagicPhysicsUserCmd
stConvertMagicPhysicsUserCmd	tmpcode/commond.h	/^struct stConvertMagicPhysicsUserCmd : public stPropertyUserCmd$/;"	s
stCostForcePropertyUserCmd	tmpcode/commond.h	/^    stCostForcePropertyUserCmd( )$/;"	f	struct:stCostForcePropertyUserCmd
stCostForcePropertyUserCmd	tmpcode/commond.h	/^struct stCostForcePropertyUserCmd : public stPropertyUserCmd$/;"	s
stCountMember	base/SessionCommand.h	/^    struct stCountMember$/;"	s	namespace:Cmd::Session
stCountdownQuestMapUserCmd	tmpcode/commond.h	/^	stCountdownQuestMapUserCmd()$/;"	f	struct:stCountdownQuestMapUserCmd
stCountdownQuestMapUserCmd	tmpcode/commond.h	/^struct stCountdownQuestMapUserCmd : public stQuestMapUserCmd$/;"	s
stCountdownReliveUserCmd	tmpcode/commond.h	/^	stCountdownReliveUserCmd()$/;"	f	struct:stCountdownReliveUserCmd
stCountdownReliveUserCmd	tmpcode/commond.h	/^struct stCountdownReliveUserCmd : public stReliveUserCmd$/;"	s
stCountryAlly	tmpcode/commond.h	/^	stCountryAlly()$/;"	f	struct:stCountryAlly
stCountryAlly	tmpcode/commond.h	/^struct stCountryAlly : public stAllyUserCmd$/;"	s
stCountryInfo	base/Command.h	/^struct stCountryInfo$/;"	s	namespace:Cmd
stCountryInfoUserCmd	base/Command.h	/^  stCountryInfoUserCmd()$/;"	f	struct:Cmd::stCountryInfoUserCmd
stCountryInfoUserCmd	base/Command.h	/^struct stCountryInfoUserCmd : public stLogonUserCmd$/;"	s	namespace:Cmd
stCountryInfoUserCmd	tmpcode/commond.h	/^	stCountryInfoUserCmd()$/;"	f	struct:stCountryInfoUserCmd
stCountryInfoUserCmd	tmpcode/commond.h	/^struct stCountryInfoUserCmd : public stLogonUserCmd$/;"	s
stCountryInviteGrecommendUserCmd	tmpcode/commond.h	/^	stCountryInviteGrecommendUserCmd()$/;"	f	struct:stCountryInviteGrecommendUserCmd
stCountryInviteGrecommendUserCmd	tmpcode/commond.h	/^struct stCountryInviteGrecommendUserCmd : public stRecommendUserCmd$/;"	s
stCountryNoteCmd	base/Command.h	/^  stCountryNoteCmd()$/;"	f	struct:Cmd::stCountryNoteCmd
stCountryNoteCmd	base/Command.h	/^struct stCountryNoteCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stCountryNoteCmd	tmpcode/commond.h	/^	stCountryNoteCmd()$/;"	f	struct:stCountryNoteCmd
stCountryNoteCmd	tmpcode/commond.h	/^struct stCountryNoteCmd : public stCountryUserCmd$/;"	s
stCountryStar	base/Command.h	/^struct stCountryStar$/;"	s	namespace:Cmd
stCountryUserCmd	base/Command.h	/^  stCountryUserCmd()$/;"	f	struct:Cmd::stCountryUserCmd
stCountryUserCmd	base/Command.h	/^struct stCountryUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stCountryUserCmd	tmpcode/commond.h	/^	stCountryUserCmd()$/;"	f	struct:stCountryUserCmd
stCountryUserCmd	tmpcode/commond.h	/^struct stCountryUserCmd : public stNullUserCmd$/;"	s
stCreateArmyUserCmd	base/Command.h	/^  stCreateArmyUserCmd()$/;"	f	struct:Cmd::stCreateArmyUserCmd
stCreateArmyUserCmd	base/Command.h	/^struct stCreateArmyUserCmd : public stArmyUserCmd$/;"	s	namespace:Cmd
stCreateChannelUserCmd	base/Command.h	/^  stCreateChannelUserCmd()$/;"	f	struct:Cmd::stCreateChannelUserCmd
stCreateChannelUserCmd	base/Command.h	/^struct  stCreateChannelUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stCreateChannelUserCmd	tmpcode/commond.h	/^	stCreateChannelUserCmd()$/;"	f	struct:stCreateChannelUserCmd
stCreateChannelUserCmd	tmpcode/commond.h	/^struct  stCreateChannelUserCmd: public stChatUserCmd$/;"	s
stCreateLTQUserCmd	tmpcode/commond.h	/^	stCreateLTQUserCmd()$/;"	f	struct:stCreateLTQUserCmd
stCreateLTQUserCmd	tmpcode/commond.h	/^struct stCreateLTQUserCmd : public stLTQUserCmd$/;"	s
stCreateOrChangeTeamRecruitUserCmd	tmpcode/commond.h	/^	stCreateOrChangeTeamRecruitUserCmd()$/;"	f	struct:stCreateOrChangeTeamRecruitUserCmd
stCreateOrChangeTeamRecruitUserCmd	tmpcode/commond.h	/^struct stCreateOrChangeTeamRecruitUserCmd : public stTeamRecruitUserCmd$/;"	s
stCreateQuestRoomUserCmd	tmpcode/commond.h	/^    stCreateQuestRoomUserCmd(): questID(0), levelMark(0), memCountTip(0), memCountOfAutoStart(0)$/;"	f	struct:stCreateQuestRoomUserCmd
stCreateQuestRoomUserCmd	tmpcode/commond.h	/^struct stCreateQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stCreateQuiz	base/Command.h	/^  stCreateQuiz() $/;"	f	struct:Cmd::stCreateQuiz
stCreateQuiz	base/Command.h	/^struct stCreateQuiz : public stQuizUserCmd$/;"	s	namespace:Cmd
stCreateSelectUserCmd	base/Command.h	/^  stCreateSelectUserCmd()$/;"	f	struct:Cmd::stCreateSelectUserCmd
stCreateSelectUserCmd	base/Command.h	/^struct stCreateSelectUserCmd : public stSelectUserCmd$/;"	s	namespace:Cmd
stCreateSelectUserCmd	tmpcode/commond.h	/^         stCreateSelectUserCmd()$/;"	f	struct:stCreateSelectUserCmd
stCreateSelectUserCmd	tmpcode/commond.h	/^struct stCreateSelectUserCmd :public stSelectUserCmd$/;"	s
stCreateSeptBySign	tmpcode/commond.h	/^	stCreateSeptBySign()$/;"	f	struct:stCreateSeptBySign
stCreateSeptBySign	tmpcode/commond.h	/^struct stCreateSeptBySign : public stSeptUserCmd$/;"	s
stCreateSeptCmd	base/Command.h	/^  stCreateSeptCmd()$/;"	f	struct:Cmd::stCreateSeptCmd
stCreateSeptCmd	base/Command.h	/^struct stCreateSeptCmd: public stSeptUserCmd$/;"	s	namespace:Cmd
stCreateSeptCmd	tmpcode/commond.h	/^	stCreateSeptCmd()$/;"	f	struct:stCreateSeptCmd
stCreateSeptCmd	tmpcode/commond.h	/^struct stCreateSeptCmd: public stSeptUserCmd$/;"	s
stCreateSeptSignBroad	tmpcode/commond.h	/^	stCreateSeptSignBroad()$/;"	f	struct:stCreateSeptSignBroad
stCreateSeptSignBroad	tmpcode/commond.h	/^struct stCreateSeptSignBroad : public stSeptUserCmd$/;"	s
stCreateUnionCmd	base/Command.h	/^  stCreateUnionCmd()$/;"	f	struct:Cmd::stCreateUnionCmd
stCreateUnionCmd	base/Command.h	/^struct stCreateUnionCmd: public stUnionUserCmd$/;"	s	namespace:Cmd
stCreateUnionCmd	tmpcode/commond.h	/^	stCreateUnionCmd()$/;"	f	struct:stCreateUnionCmd
stCreateUnionCmd	tmpcode/commond.h	/^struct stCreateUnionCmd: public stUnionUserCmd$/;"	s
stCreateUnionNameCmd	tmpcode/commond.h	/^	stCreateUnionNameCmd()$/;"	f	struct:stCreateUnionNameCmd
stCreateUnionNameCmd	tmpcode/commond.h	/^struct stCreateUnionNameCmd: public stUnionUserCmd$/;"	s
stCrusadeCastlePoint	tmpcode/commond.h	/^	stCrusadeCastlePoint()$/;"	f	struct:stCrusadeCastlePoint
stCrusadeCastlePoint	tmpcode/commond.h	/^struct stCrusadeCastlePoint : public stSpecialUserCmd$/;"	s
stCrusadeCastlePointTitle	tmpcode/commond.h	/^	stCrusadeCastlePointTitle()$/;"	f	struct:stCrusadeCastlePointTitle
stCrusadeCastlePointTitle	tmpcode/commond.h	/^struct stCrusadeCastlePointTitle : public stSpecialUserCmd$/;"	s
stCrusadeCastleUserEndTime	tmpcode/commond.h	/^	stCrusadeCastleUserEndTime()$/;"	f	struct:stCrusadeCastleUserEndTime
stCrusadeCastleUserEndTime	tmpcode/commond.h	/^struct stCrusadeCastleUserEndTime : public stSpecialUserCmd$/;"	s
stCrystalAllInfoDataUserCmd	tmpcode/commond.h	/^        stCrystalAllInfoDataUserCmd()$/;"	f	struct:stCrystalAllInfoDataUserCmd
stCrystalAllInfoDataUserCmd	tmpcode/commond.h	/^struct stCrystalAllInfoDataUserCmd : public stDataUserCmd$/;"	s
stCrystalCheckDataUserCmd	tmpcode/commond.h	/^        stCrystalCheckDataUserCmd()$/;"	f	struct:stCrystalCheckDataUserCmd
stCrystalCheckDataUserCmd	tmpcode/commond.h	/^struct stCrystalCheckDataUserCmd : public stDataUserCmd$/;"	s
stCrystalEffectDataUserCmd	tmpcode/commond.h	/^        stCrystalEffectDataUserCmd()$/;"	f	struct:stCrystalEffectDataUserCmd
stCrystalEffectDataUserCmd	tmpcode/commond.h	/^struct stCrystalEffectDataUserCmd : public stDataUserCmd$/;"	s
stCrystalIntoCarryDataUserCmd	tmpcode/commond.h	/^        stCrystalIntoCarryDataUserCmd()$/;"	f	struct:stCrystalIntoCarryDataUserCmd
stCrystalIntoCarryDataUserCmd	tmpcode/commond.h	/^struct stCrystalIntoCarryDataUserCmd : public stDataUserCmd$/;"	s
stCrystalPunishTimeDataUserCmd	tmpcode/commond.h	/^        stCrystalPunishTimeDataUserCmd()$/;"	f	struct:stCrystalPunishTimeDataUserCmd
stCrystalPunishTimeDataUserCmd	tmpcode/commond.h	/^struct stCrystalPunishTimeDataUserCmd : public stDataUserCmd$/;"	s
stCrystalThrowUserCmd	tmpcode/commond.h	/^    stCrystalThrowUserCmd()$/;"	f	struct:stCrystalThrowUserCmd
stCrystalThrowUserCmd	tmpcode/commond.h	/^struct stCrystalThrowUserCmd : public stDataUserCmd$/;"	s
stDaTaoShaUserCmd	tmpcode/commond.h	/^	stDaTaoShaUserCmd()$/;"	f	struct:stDaTaoShaUserCmd
stDaTaoShaUserCmd	tmpcode/commond.h	/^struct stDaTaoShaUserCmd : public stNullUserCmd$/;"	s
stDaiBiBuyTradeUserCmd	tmpcode/commond.h	/^    stDaiBiBuyTradeUserCmd()$/;"	f	struct:stDaiBiBuyTradeUserCmd
stDaiBiBuyTradeUserCmd	tmpcode/commond.h	/^struct stDaiBiBuyTradeUserCmd:public stTradeUserCmd$/;"	s
stDanceGameChallenge	tmpcode/commond.h	/^	stDanceGameChallenge()$/;"	f	struct:stDanceGameChallenge
stDanceGameChallenge	tmpcode/commond.h	/^struct stDanceGameChallenge : public stDanceUserCmd                  $/;"	s
stDanceGameReturn	tmpcode/commond.h	/^	stDanceGameReturn()$/;"	f	struct:stDanceGameReturn
stDanceGameReturn	tmpcode/commond.h	/^struct stDanceGameReturn : public stDanceUserCmd                     $/;"	s
stDanceGameScore	tmpcode/commond.h	/^	stDanceGameScore()                                           $/;"	f	struct:stDanceGameScore
stDanceGameScore	tmpcode/commond.h	/^struct stDanceGameScore : public stDanceUserCmd                      $/;"	s
stDanceTime	tmpcode/commond.h	/^struct stDanceTime$/;"	s
stDanceUserCmd	tmpcode/commond.h	/^        stDanceUserCmd()$/;"	f	struct:stDanceUserCmd
stDanceUserCmd	tmpcode/commond.h	/^struct stDanceUserCmd : public stNullUserCmd$/;"	s
stDancerStateUserCmd	tmpcode/commond.h	/^	stDancerStateUserCmd()$/;"	f	struct:stDancerStateUserCmd
stDancerStateUserCmd	tmpcode/commond.h	/^struct stDancerStateUserCmd : public stBarUserCmd$/;"	s
stDare	tmpcode/commond.h	/^	stDare()$/;"	f	struct:stDare
stDare	tmpcode/commond.h	/^struct stDare$/;"	s
stDareCallDuty	base/Command.h	/^  stDareCallDuty()$/;"	f	struct:Cmd::stDareCallDuty
stDareCallDuty	base/Command.h	/^struct stDareCallDuty : public stDareUserCmd$/;"	s	namespace:Cmd
stDareCallDuty	tmpcode/commond.h	/^	stDareCallDuty()$/;"	f	struct:stDareCallDuty
stDareCallDuty	tmpcode/commond.h	/^struct stDareCallDuty : public stDareUserCmd$/;"	s
stDareCountryFormalCmd	base/Command.h	/^  stDareCountryFormalCmd()$/;"	f	struct:Cmd::stDareCountryFormalCmd
stDareCountryFormalCmd	base/Command.h	/^struct stDareCountryFormalCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stDareList	base/Command.h	/^struct stDareList$/;"	s	namespace:Cmd
stDareNpcDare	base/Command.h	/^  stDareNpcDare() $/;"	f	struct:Cmd::stDareNpcDare
stDareNpcDare	base/Command.h	/^struct stDareNpcDare : public stNpcDareUserCmd$/;"	s	namespace:Cmd
stDareNpcGetGold	base/Command.h	/^  stDareNpcGetGold() $/;"	f	struct:Cmd::stDareNpcGetGold
stDareNpcGetGold	base/Command.h	/^struct stDareNpcGetGold : public stNpcDareUserCmd$/;"	s	namespace:Cmd
stDarePlan	base/Command.h	/^struct stDarePlan$/;"	s	namespace:Cmd
stDareResult	base/Command.h	/^struct stDareResult$/;"	s	namespace:Cmd
stDareStat	base/Command.h	/^struct stDareStat$/;"	s	namespace:Cmd
stDareUserCmd	base/Command.h	/^    stDareUserCmd()$/;"	f	struct:Cmd::stDareUserCmd
stDareUserCmd	base/Command.h	/^struct stDareUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stDareUserCmd	tmpcode/commond.h	/^	stDareUserCmd()$/;"	f	struct:stDareUserCmd
stDareUserCmd	tmpcode/commond.h	/^struct stDareUserCmd : public stNullUserCmd$/;"	s
stDataDecayHouseUserCmd	tmpcode/commond.h	/^	stDataDecayHouseUserCmd()$/;"	f	struct:stDataDecayHouseUserCmd
stDataDecayHouseUserCmd	tmpcode/commond.h	/^struct stDataDecayHouseUserCmd : public stLingQiDecayUserCmd$/;"	s
stDataDecayedLingQiUserCmd	tmpcode/commond.h	/^    stDataDecayedLingQiUserCmd()$/;"	f	struct:stDataDecayedLingQiUserCmd
stDataDecayedLingQiUserCmd	tmpcode/commond.h	/^struct stDataDecayedLingQiUserCmd : public stLingQiDecayUserCmd$/;"	s
stDataLingQiUserCmd	tmpcode/commond.h	/^	stDataLingQiUserCmd()$/;"	f	struct:stDataLingQiUserCmd
stDataLingQiUserCmd	tmpcode/commond.h	/^struct stDataLingQiUserCmd : public stLingQiUserCmd$/;"	s
stDataUserCmd	base/Command.h	/^  stDataUserCmd()$/;"	f	struct:Cmd::stDataUserCmd
stDataUserCmd	base/Command.h	/^struct stDataUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stDataUserCmd	tmpcode/commond.h	/^	stDataUserCmd()$/;"	f	struct:stDataUserCmd
stDataUserCmd	tmpcode/commond.h	/^struct stDataUserCmd : public stNullUserCmd$/;"	s
stDecayFinishTimeLingQiUserCmd	tmpcode/commond.h	/^	stDecayFinishTimeLingQiUserCmd()$/;"	f	struct:stDecayFinishTimeLingQiUserCmd
stDecayFinishTimeLingQiUserCmd	tmpcode/commond.h	/^struct stDecayFinishTimeLingQiUserCmd : public stLingQiDecayUserCmd$/;"	s
stDecomposePropertyUserCmd	base/Command.h	/^  stDecomposePropertyUserCmd()$/;"	f	struct:Cmd::stDecomposePropertyUserCmd
stDecomposePropertyUserCmd	base/Command.h	/^struct stDecomposePropertyUserCmd : public stPropertyUserCmd {$/;"	s	namespace:Cmd
stDecomposePropertyUserCmd	tmpcode/commond.h	/^    stDecomposePropertyUserCmd()$/;"	f	struct:stDecomposePropertyUserCmd
stDecomposePropertyUserCmd	tmpcode/commond.h	/^struct stDecomposePropertyUserCmd : public stPropertyUserCmd $/;"	s
stDecorationUserCmd	tmpcode/commond.h	/^	stDecorationUserCmd()$/;"	f	struct:stDecorationUserCmd
stDecorationUserCmd	tmpcode/commond.h	/^struct stDecorationUserCmd : public stNullUserCmd$/;"	s
stDefenceList	tmpcode/commond.h	/^struct stDefenceList$/;"	s
stDefenceListToAtt	tmpcode/commond.h	/^struct stDefenceListToAtt$/;"	s
stDelDecorationCmd	tmpcode/commond.h	/^	stDelDecorationCmd()$/;"	f	struct:stDelDecorationCmd
stDelDecorationCmd	tmpcode/commond.h	/^struct stDelDecorationCmd: public stDecorationUserCmd$/;"	s
stDelEnemyHandCardPropertyUserCmd	base/HeroCardCmd.h	/^	stDelEnemyHandCardPropertyUserCmd()$/;"	f	struct:Cmd::stDelEnemyHandCardPropertyUserCmd
stDelEnemyHandCardPropertyUserCmd	base/HeroCardCmd.h	/^    struct stDelEnemyHandCardPropertyUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stDelItemStall	tmpcode/commond.h	/^	stDelItemStall()$/;"	f	struct:stDelItemStall
stDelItemStall	tmpcode/commond.h	/^struct stDelItemStall:public stTradeUserCmd  \/\/¬Ù÷˜¥”¬ÙÃØŒª…œ“∆≥˝≥˝ŒÔ∆∑ «∑Òsuccess$/;"	s
stDelMail	base/Command.h	/^  stDelMail()$/;"	f	struct:Cmd::stDelMail
stDelMail	base/Command.h	/^struct stDelMail : public stMailUserCmd$/;"	s	namespace:Cmd
stDelMail	tmpcode/commond.h	/^        stDelMail()$/;"	f	struct:stDelMail
stDelMail	tmpcode/commond.h	/^struct stDelMail : public stMailUserCmd$/;"	s
stDelMapObjectMapScreenUserCmd	tmpcode/commond.h	/^	stDelMapObjectMapScreenUserCmd()$/;"	f	struct:stDelMapObjectMapScreenUserCmd
stDelMapObjectMapScreenUserCmd	tmpcode/commond.h	/^struct stDelMapObjectMapScreenUserCmd  : public stMapScreenUserCmd$/;"	s
stDelPetPetCmd	base/Command.h	/^  stDelPetPetCmd()$/;"	f	struct:Cmd::stDelPetPetCmd
stDelPetPetCmd	base/Command.h	/^struct stDelPetPetCmd : public stPetUserCmd$/;"	s	namespace:Cmd
stDelPetPetCmd	tmpcode/commond.h	/^	stDelPetPetCmd()$/;"	f	struct:stDelPetPetCmd
stDelPetPetCmd	tmpcode/commond.h	/^struct stDelPetPetCmd : public stPetUserCmd$/;"	s
stDelSkillPetCmd	base/Command.h	/^  stDelSkillPetCmd()$/;"	f	struct:Cmd::stDelSkillPetCmd
stDelSkillPetCmd	base/Command.h	/^struct stDelSkillPetCmd : public stPetUserCmd$/;"	s	namespace:Cmd
stDelSomeMail	tmpcode/commond.h	/^	stDelSomeMail()$/;"	f	struct:stDelSomeMail
stDelSomeMail	tmpcode/commond.h	/^struct stDelSomeMail : public stMailUserCmd$/;"	s
stDelTeamRecruitUserCmd	tmpcode/commond.h	/^	stDelTeamRecruitUserCmd()$/;"	f	struct:stDelTeamRecruitUserCmd
stDelTeamRecruitUserCmd	tmpcode/commond.h	/^struct stDelTeamRecruitUserCmd : public stTeamRecruitUserCmd$/;"	s
stDeleteErrorSelectUserCmd	base/Command.h	/^  stDeleteErrorSelectUserCmd()$/;"	f	struct:Cmd::stDeleteErrorSelectUserCmd
stDeleteErrorSelectUserCmd	base/Command.h	/^struct stDeleteErrorSelectUserCmd : public stSelectUserCmd$/;"	s	namespace:Cmd
stDeleteErrorSelectUserCmd	tmpcode/commond.h	/^	stDeleteErrorSelectUserCmd()$/;"	f	struct:stDeleteErrorSelectUserCmd
stDeleteErrorSelectUserCmd	tmpcode/commond.h	/^struct stDeleteErrorSelectUserCmd : public stSelectUserCmd$/;"	s
stDeleteSelectUserCmd	base/Command.h	/^  stDeleteSelectUserCmd()$/;"	f	struct:Cmd::stDeleteSelectUserCmd
stDeleteSelectUserCmd	base/Command.h	/^struct stDeleteSelectUserCmd : public stSelectUserCmd$/;"	s	namespace:Cmd
stDeleteSelectUserCmd	tmpcode/commond.h	/^	stDeleteSelectUserCmd()$/;"	f	struct:stDeleteSelectUserCmd
stDeleteSelectUserCmd	tmpcode/commond.h	/^struct stDeleteSelectUserCmd : public stSelectUserCmd$/;"	s
stDestroyTankCmd	tmpcode/commond.h	/^	stDestroyTankCmd( )$/;"	f	struct:stDestroyTankCmd
stDestroyTankCmd	tmpcode/commond.h	/^struct stDestroyTankCmd : public stTankUserCmd$/;"	s
stDetailFightContentUserCmd	tmpcode/commond.h	/^	stDetailFightContentUserCmd()$/;"	f	struct:stDetailFightContentUserCmd
stDetailFightContentUserCmd	tmpcode/commond.h	/^struct stDetailFightContentUserCmd : public stDragonUserCmd$/;"	s
stDetailGift	base/Command.h	/^  stDetailGift()$/;"	f	struct:Cmd::stDetailGift
stDetailGift	base/Command.h	/^struct stDetailGift : public stGiftUserCmd$/;"	s	namespace:Cmd
stDetailGift	tmpcode/commond.h	/^        stDetailGift()$/;"	f	struct:stDetailGift
stDetailGift	tmpcode/commond.h	/^struct stDetailGift : public stGiftUserCmd$/;"	s
stDevelopSeptSkill	tmpcode/commond.h	/^	stDevelopSeptSkill(const unsigned int _id) : stUnionSkillUserCmd(DEVELOP_SEPTSKILL_USERCMD) {$/;"	f	struct:stDevelopSeptSkill
stDevelopSeptSkill	tmpcode/commond.h	/^struct stDevelopSeptSkill : public stUnionSkillUserCmd {$/;"	s
stDevoteEquipPropertyUserCmd	tmpcode/commond.h	/^	stDevoteEquipPropertyUserCmd()$/;"	f	struct:stDevoteEquipPropertyUserCmd
stDevoteEquipPropertyUserCmd	tmpcode/commond.h	/^struct stDevoteEquipPropertyUserCmd : public stPropertyUserCmd $/;"	s
stDevoteUserLevelPropertyUserCmd	tmpcode/commond.h	/^	stDevoteUserLevelPropertyUserCmd()$/;"	f	struct:stDevoteUserLevelPropertyUserCmd
stDevoteUserLevelPropertyUserCmd	tmpcode/commond.h	/^struct stDevoteUserLevelPropertyUserCmd : public stPropertyUserCmd $/;"	s
stDigTreasureInterruptedUserCmd	tmpcode/commond.h	/^	stDigTreasureInterruptedUserCmd()$/;"	f	struct:stDigTreasureInterruptedUserCmd
stDigTreasureInterruptedUserCmd	tmpcode/commond.h	/^struct stDigTreasureInterruptedUserCmd : public stDigTreasureUserCmd$/;"	s
stDigTreasureUserCmd	tmpcode/commond.h	/^	stDigTreasureUserCmd()$/;"	f	struct:stDigTreasureUserCmd
stDigTreasureUserCmd	tmpcode/commond.h	/^struct stDigTreasureUserCmd : public stNullUserCmd$/;"	s
stDineBarCmd	tmpcode/commond.h	/^	 stDineBarCmd()$/;"	f	struct:stDineBarCmd
stDineBarCmd	tmpcode/commond.h	/^ struct stDineBarCmd : public stBarUserCmd$/;"	s
stDirtyUserUserCmd	base/Command.h	/^    stDirtyUserUserCmd()$/;"	f	struct:Cmd::stDirtyUserUserCmd
stDirtyUserUserCmd	base/Command.h	/^struct stDirtyUserUserCmd : public stChatUserCmd$/;"	s	namespace:Cmd
stDisBurdenEquipDragonUserCmd	tmpcode/commond.h	/^        stDisBurdenEquipDragonUserCmd()$/;"	f	struct:stDisBurdenEquipDragonUserCmd
stDisBurdenEquipDragonUserCmd	tmpcode/commond.h	/^struct stDisBurdenEquipDragonUserCmd : public stDragonUserCmd$/;"	s
stDisMerceneryCountryCmd	tmpcode/commond.h	/^        stDisMerceneryCountryCmd()$/;"	f	struct:stDisMerceneryCountryCmd
stDisMerceneryCountryCmd	tmpcode/commond.h	/^struct stDisMerceneryCountryCmd:public stCountryUserCmd$/;"	s
stDisableLoginCountryCmd	base/Command.h	/^  stDisableLoginCountryCmd()$/;"	f	struct:Cmd::stDisableLoginCountryCmd
stDisableLoginCountryCmd	base/Command.h	/^struct stDisableLoginCountryCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stDisableLoginCountryCmd	tmpcode/commond.h	/^	stDisableLoginCountryCmd()$/;"	f	struct:stDisableLoginCountryCmd
stDisableLoginCountryCmd	tmpcode/commond.h	/^struct stDisableLoginCountryCmd : public stCountryUserCmd$/;"	s
stDisplayHealthyGameUserCmd	tmpcode/commond.h	/^	stDisplayHealthyGameUserCmd()$/;"	f	struct:stDisplayHealthyGameUserCmd
stDisplayHealthyGameUserCmd	tmpcode/commond.h	/^struct stDisplayHealthyGameUserCmd : public stDataUserCmd$/;"	s
stDistributePointPropertyUserCmd	base/Command.h	/^  stDistributePointPropertyUserCmd()$/;"	f	struct:Cmd::stDistributePointPropertyUserCmd
stDistributePointPropertyUserCmd	base/Command.h	/^struct stDistributePointPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stDistributePointPropertyUserCmd	tmpcode/commond.h	/^	stDistributePointPropertyUserCmd()$/;"	f	struct:stDistributePointPropertyUserCmd
stDistributePointPropertyUserCmd	tmpcode/commond.h	/^struct stDistributePointPropertyUserCmd : public stPropertyUserCmd$/;"	s
stDoPlantActionUserCmd	tmpcode/commond.h	/^	stDoPlantActionUserCmd()$/;"	f	struct:stDoPlantActionUserCmd
stDoPlantActionUserCmd	tmpcode/commond.h	/^struct stDoPlantActionUserCmd : public stUnionPlantUserCmd$/;"	s
stDonateHonor	base/Command.h	/^  stDonateHonor()$/;"	f	struct:Cmd::stDonateHonor
stDonateHonor	base/Command.h	/^struct stDonateHonor : public stSeptUserCmd$/;"	s	namespace:Cmd
stDragonChatInChallengeDragonUserCmd	tmpcode/commond.h	/^	stDragonChatInChallengeDragonUserCmd()$/;"	f	struct:stDragonChatInChallengeDragonUserCmd
stDragonChatInChallengeDragonUserCmd	tmpcode/commond.h	/^struct stDragonChatInChallengeDragonUserCmd : public stDragonUserCmd$/;"	s
stDragonDataUserCmd	tmpcode/commond.h	/^        stDragonDataUserCmd()$/;"	f	struct:stDragonDataUserCmd
stDragonDataUserCmd	tmpcode/commond.h	/^struct stDragonDataUserCmd : public stDragonUserCmd$/;"	s
stDragonFeilongRideCmd	tmpcode/commond.h	/^    stDragonFeilongRideCmd()$/;"	f	struct:stDragonFeilongRideCmd
stDragonFeilongRideCmd	tmpcode/commond.h	/^struct stDragonFeilongRideCmd : public stPetUserCmd$/;"	s
stDragonIslandMazeBossState	tmpcode/commond.h	/^	stDragonIslandMazeBossState()$/;"	f	struct:stDragonIslandMazeBossState
stDragonIslandMazeBossState	tmpcode/commond.h	/^struct stDragonIslandMazeBossState : public stSpecialUserCmd$/;"	s
stDragonIslandMazeTreasureBoxPos	tmpcode/commond.h	/^	stDragonIslandMazeTreasureBoxPos()$/;"	f	struct:stDragonIslandMazeTreasureBoxPos
stDragonIslandMazeTreasureBoxPos	tmpcode/commond.h	/^struct stDragonIslandMazeTreasureBoxPos : public stSpecialUserCmd$/;"	s
stDragonIslandMazeUserEndTime	tmpcode/commond.h	/^	stDragonIslandMazeUserEndTime()$/;"	f	struct:stDragonIslandMazeUserEndTime
stDragonIslandMazeUserEndTime	tmpcode/commond.h	/^struct stDragonIslandMazeUserEndTime : public stSpecialUserCmd$/;"	s
stDragonRideCmd	tmpcode/commond.h	/^    stDragonRideCmd()$/;"	f	struct:stDragonRideCmd
stDragonRideCmd	tmpcode/commond.h	/^struct stDragonRideCmd : public stPetUserCmd$/;"	s
stDragonTotemUserCmd	tmpcode/commond.h	/^	stDragonTotemUserCmd()$/;"	f	struct:stDragonTotemUserCmd
stDragonTotemUserCmd	tmpcode/commond.h	/^struct stDragonTotemUserCmd : public stNullUserCmd$/;"	s
stDragonUserCmd	tmpcode/commond.h	/^	stDragonUserCmd()$/;"	f	struct:stDragonUserCmd
stDragonUserCmd	tmpcode/commond.h	/^struct stDragonUserCmd : public stNullUserCmd$/;"	s
stDrawDailyBoxAwardUserCmd	tmpcode/commond.h	/^	stDrawDailyBoxAwardUserCmd()$/;"	f	struct:stDrawDailyBoxAwardUserCmd
stDrawDailyBoxAwardUserCmd	tmpcode/commond.h	/^struct stDrawDailyBoxAwardUserCmd : public stDataUserCmd$/;"	s
stDrawExpCartoonCmd	base/Command.h	/^  stDrawExpCartoonCmd()$/;"	f	struct:Cmd::stDrawExpCartoonCmd
stDrawExpCartoonCmd	base/Command.h	/^struct stDrawExpCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stDrawLevelUpBoxAwardUserCmd	tmpcode/commond.h	/^	stDrawLevelUpBoxAwardUserCmd()$/;"	f	struct:stDrawLevelUpBoxAwardUserCmd
stDrawLevelUpBoxAwardUserCmd	tmpcode/commond.h	/^struct stDrawLevelUpBoxAwardUserCmd : public stDataUserCmd$/;"	s
stDrawOverdueCrystalWeekAssurance	tmpcode/commond.h	/^	stDrawOverdueCrystalWeekAssurance()$/;"	f	struct:stDrawOverdueCrystalWeekAssurance
stDrawOverdueCrystalWeekAssurance	tmpcode/commond.h	/^struct stDrawOverdueCrystalWeekAssurance : public stGoldUserCmd$/;"	s
stDrawWeekAssurance	tmpcode/commond.h	/^	stDrawWeekAssurance()$/;"	f	struct:stDrawWeekAssurance
stDrawWeekAssurance	tmpcode/commond.h	/^struct stDrawWeekAssurance : public stGoldUserCmd$/;"	s
stDrinkOtherBarCmd	tmpcode/commond.h	/^	 stDrinkOtherBarCmd()$/;"	f	struct:stDrinkOtherBarCmd
stDrinkOtherBarCmd	tmpcode/commond.h	/^ struct stDrinkOtherBarCmd: public stBarUserCmd$/;"	s
stDropCityDefItemUnionCmd	tmpcode/commond.h	/^	stDropCityDefItemUnionCmd()$/;"	f	struct:stDropCityDefItemUnionCmd
stDropCityDefItemUnionCmd	tmpcode/commond.h	/^struct stDropCityDefItemUnionCmd : public stUnionUserCmd$/;"	s
stDropGuardGoodsSeptCmd	tmpcode/commond.h	/^    stDropGuardGoodsSeptCmd()$/;"	f	struct:stDropGuardGoodsSeptCmd
stDropGuardGoodsSeptCmd	tmpcode/commond.h	/^struct stDropGuardGoodsSeptCmd : public stSeptUserCmd$/;"	s
stDropObjSeptPopoUserCmd	tmpcode/commond.h	/^	stDropObjSeptPopoUserCmd()$/;"	f	struct:stDropObjSeptPopoUserCmd
stDropObjSeptPopoUserCmd	tmpcode/commond.h	/^struct stDropObjSeptPopoUserCmd : public stSeptPopoUserCmd$/;"	s
stDropZhanlingZhenxuanUserCmd	tmpcode/commond.h	/^	stDropZhanlingZhenxuanUserCmd()$/;"	f	struct:stDropZhanlingZhenxuanUserCmd
stDropZhanlingZhenxuanUserCmd	tmpcode/commond.h	/^struct stDropZhanlingZhenxuanUserCmd: public stZhenxuanJingjiUserCmd$/;"	s
stDurabilityUserCmd	base/Command.h	/^    stDurabilityUserCmd()$/;"	f	struct:Cmd::stDurabilityUserCmd
stDurabilityUserCmd	base/Command.h	/^  struct stDurabilityUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stDurabilityUserCmd	tmpcode/commond.h	/^	stDurabilityUserCmd()$/;"	f	struct:stDurabilityUserCmd
stDurabilityUserCmd	tmpcode/commond.h	/^struct stDurabilityUserCmd : public stPropertyUserCmd$/;"	s
stEarthQuakeUserCmd	tmpcode/commond.h	/^    stEarthQuakeUserCmd()$/;"	f	struct:stEarthQuakeUserCmd
stEarthQuakeUserCmd	tmpcode/commond.h	/^struct stEarthQuakeUserCmd : public stNullUserCmd$/;"	s
stEmoteQuestUserCmd	tmpcode/commond.h	/^        stEmoteQuestUserCmd()$/;"	f	struct:stEmoteQuestUserCmd
stEmoteQuestUserCmd	tmpcode/commond.h	/^struct stEmoteQuestUserCmd : public stQuestUserCmd$/;"	s
stEmperorPunishCountryCmd	base/Command.h	/^  stEmperorPunishCountryCmd()$/;"	f	struct:Cmd::stEmperorPunishCountryCmd
stEmperorPunishCountryCmd	base/Command.h	/^struct stEmperorPunishCountryCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stEmployNpcAdUserCmd	tmpcode/commond.h	/^	stEmployNpcAdUserCmd()$/;"	f	struct:stEmployNpcAdUserCmd
stEmployNpcAdUserCmd	tmpcode/commond.h	/^struct stEmployNpcAdUserCmd : public stBarUserCmd$/;"	s
stEmptyFishUserCmd	tmpcode/commond.h	/^	stEmptyFishUserCmd()$/;"	f	struct:stEmptyFishUserCmd
stEmptyFishUserCmd	tmpcode/commond.h	/^struct stEmptyFishUserCmd : stFishUserCmd$/;"	s
stEnchasePropertyUserCmd	base/Command.h	/^  stEnchasePropertyUserCmd()$/;"	f	struct:Cmd::stEnchasePropertyUserCmd
stEnchasePropertyUserCmd	base/Command.h	/^struct stEnchasePropertyUserCmd : public stPropertyUserCmd {$/;"	s	namespace:Cmd
stEnchasePropertyUserCmd	tmpcode/commond.h	/^        stEnchasePropertyUserCmd()$/;"	f	struct:stEnchasePropertyUserCmd
stEnchasePropertyUserCmd	tmpcode/commond.h	/^struct stEnchasePropertyUserCmd : public stPropertyUserCmd {$/;"	s
stEndChatGm	tmpcode/commond.h	/^	stEndChatGm()$/;"	f	struct:stEndChatGm
stEndChatGm	tmpcode/commond.h	/^struct stEndChatGm : stChatUserCmd$/;"	s
stEndCollect	tmpcode/commond.h	/^    stEndCollect()$/;"	f	struct:stEndCollect
stEndCollect	tmpcode/commond.h	/^struct stEndCollect : public stSeptUserCmd$/;"	s
stEndDarePrayCmd	tmpcode/commond.h	/^	stEndDarePrayCmd()$/;"	f	struct:stEndDarePrayCmd
stEndDarePrayCmd	tmpcode/commond.h	/^struct stEndDarePrayCmd : public stUnionCityDareUserCmd$/;"	s
stEndDigTreasureUserCmd	tmpcode/commond.h	/^	stEndDigTreasureUserCmd()$/;"	f	struct:stEndDigTreasureUserCmd
stEndDigTreasureUserCmd	tmpcode/commond.h	/^struct stEndDigTreasureUserCmd : public stDigTreasureUserCmd$/;"	s
stEndOfInitDataDataUserCmd	base/Command.h	/^    stEndOfInitDataDataUserCmd()$/;"	f	struct:Cmd::stEndOfInitDataDataUserCmd
stEndOfInitDataDataUserCmd	base/Command.h	/^  struct stEndOfInitDataDataUserCmd : public stDataUserCmd{$/;"	s	namespace:Cmd
stEndPlaySoundQuestUserCmd	tmpcode/commond.h	/^        stEndPlaySoundQuestUserCmd()$/;"	f	struct:stEndPlaySoundQuestUserCmd
stEndPlaySoundQuestUserCmd	tmpcode/commond.h	/^struct stEndPlaySoundQuestUserCmd : public stQuestUserCmd$/;"	s
stEndPunishingSpecialCmd	tmpcode/commond.h	/^	stEndPunishingSpecialCmd()$/;"	f	struct:stEndPunishingSpecialCmd
stEndPunishingSpecialCmd	tmpcode/commond.h	/^struct stEndPunishingSpecialCmd : public stSpecialUserCmd$/;"	s
stEndReadFlagHeroIslandUserCmd	tmpcode/commond.h	/^	stEndReadFlagHeroIslandUserCmd()$/;"	f	struct:stEndReadFlagHeroIslandUserCmd
stEndReadFlagHeroIslandUserCmd	tmpcode/commond.h	/^struct stEndReadFlagHeroIslandUserCmd: public stHeroIslandUserCmd$/;"	s
stEndRecallSeptCmd	tmpcode/commond.h	/^	stEndRecallSeptCmd()$/;"	f	struct:stEndRecallSeptCmd
stEndRecallSeptCmd	tmpcode/commond.h	/^struct stEndRecallSeptCmd : public stSeptUserCmd$/;"	s
stEndStoveDataUserCmd	tmpcode/commond.h	/^        stEndStoveDataUserCmd()$/;"	f	struct:stEndStoveDataUserCmd
stEndStoveDataUserCmd	tmpcode/commond.h	/^struct stEndStoveDataUserCmd : public stPropertyUserCmd$/;"	s
stEnemyListCmd	tmpcode/commond.h	/^	stEnemyListCmd()$/;"	f	struct:stEnemyListCmd
stEnemyListCmd	tmpcode/commond.h	/^struct stEnemyListCmd : public stRelationUserCmd$/;"	s
stEnergyTransformPropertyUserCmd	tmpcode/commond.h	/^    stEnergyTransformPropertyUserCmd()$/;"	f	struct:stEnergyTransformPropertyUserCmd
stEnergyTransformPropertyUserCmd	tmpcode/commond.h	/^struct stEnergyTransformPropertyUserCmd : public stPropertyUserCmd$/;"	s
stEnterDTUserCmd	tmpcode/commond.h	/^	stEnterDTUserCmd(): npcID(0), leftSec(0)\/*, fireType(0)*\/$/;"	f	struct:stEnterDTUserCmd
stEnterDTUserCmd	tmpcode/commond.h	/^struct stEnterDTUserCmd: public stDragonTotemUserCmd$/;"	s
stEnterEmperorDareActive	base/Command.h	/^  stEnterEmperorDareActive()$/;"	f	struct:Cmd::stEnterEmperorDareActive
stEnterEmperorDareActive	base/Command.h	/^struct stEnterEmperorDareActive : public stDareUserCmd$/;"	s	namespace:Cmd
stEnterEmperorDareZone	base/Command.h	/^  stEnterEmperorDareZone()$/;"	f	struct:Cmd::stEnterEmperorDareZone
stEnterEmperorDareZone	base/Command.h	/^struct stEnterEmperorDareZone : public stDareUserCmd$/;"	s	namespace:Cmd
stEnterMaxLevelLimitUserCmd	tmpcode/commond.h	/^	stEnterMaxLevelLimitUserCmd()$/;"	f	struct:stEnterMaxLevelLimitUserCmd
stEnterMaxLevelLimitUserCmd	tmpcode/commond.h	/^struct stEnterMaxLevelLimitUserCmd : public stMaxLevelLimitUserCmd$/;"	s
stEnterResidentBattle	tmpcode/commond.h	/^	stEnterResidentBattle()$/;"	f	struct:stEnterResidentBattle
stEnterResidentBattle	tmpcode/commond.h	/^struct stEnterResidentBattle : public stResidentBattleCmd$/;"	s
stEnterTransPropertyUserCmd	tmpcode/commond.h	/^	stEnterTransPropertyUserCmd()$/;"	f	struct:stEnterTransPropertyUserCmd
stEnterTransPropertyUserCmd	tmpcode/commond.h	/^struct stEnterTransPropertyUserCmd : public stPropertyUserCmd$/;"	s
stEnterUnionCityArea	base/Command.h	/^  stEnterUnionCityArea()$/;"	f	struct:Cmd::stEnterUnionCityArea
stEnterUnionCityArea	base/Command.h	/^struct stEnterUnionCityArea : public stUnionUserCmd$/;"	s	namespace:Cmd
stEnterUnionCityArea	tmpcode/commond.h	/^	 stEnterUnionCityArea()$/;"	f	struct:stEnterUnionCityArea
stEnterUnionCityArea	tmpcode/commond.h	/^ struct stEnterUnionCityArea : public stUnionUserCmd$/;"	s
stEquipDowngradePropertyUserCmd	tmpcode/commond.h	/^    stEquipDowngradePropertyUserCmd()$/;"	f	struct:stEquipDowngradePropertyUserCmd
stEquipDowngradePropertyUserCmd	tmpcode/commond.h	/^struct stEquipDowngradePropertyUserCmd : public stPropertyUserCmd$/;"	s
stEquipIntensifyConsumeInfo	tmpcode/commond.h	/^	stEquipIntensifyConsumeInfo()$/;"	f	struct:stEquipIntensifyConsumeInfo
stEquipIntensifyConsumeInfo	tmpcode/commond.h	/^struct stEquipIntensifyConsumeInfo : public stUnionUserCmd$/;"	s
stEquipIntensifyInfo	tmpcode/commond.h	/^	stEquipIntensifyInfo()$/;"	f	struct:stEquipIntensifyInfo
stEquipIntensifyInfo	tmpcode/commond.h	/^struct stEquipIntensifyInfo : public stUnionUserCmd$/;"	s
stEquipIntensifyStart	tmpcode/commond.h	/^	stEquipIntensifyStart()$/;"	f	struct:stEquipIntensifyStart
stEquipIntensifyStart	tmpcode/commond.h	/^struct stEquipIntensifyStart : public stUnionUserCmd$/;"	s
stEquipIntnedsifyResult	tmpcode/commond.h	/^	stEquipIntnedsifyResult()$/;"	f	struct:stEquipIntnedsifyResult
stEquipIntnedsifyResult	tmpcode/commond.h	/^struct stEquipIntnedsifyResult : public stUnionUserCmd$/;"	s
stEquipMaskPropertyUserCmd	tmpcode/commond.h	/^		stEquipMaskPropertyUserCmd()$/;"	f	struct:stEquipMaskPropertyUserCmd
stEquipMaskPropertyUserCmd	tmpcode/commond.h	/^	struct stEquipMaskPropertyUserCmd : public stPropertyUserCmd$/;"	s
stEquipSimulatePropertyUserCmd	tmpcode/commond.h	/^	stEquipSimulatePropertyUserCmd()$/;"	f	struct:stEquipSimulatePropertyUserCmd
stEquipSimulatePropertyUserCmd	tmpcode/commond.h	/^struct stEquipSimulatePropertyUserCmd : public stPropertyUserCmd $/;"	s
stEquipUpgrade2PropertyUserCmd	tmpcode/commond.h	/^	stEquipUpgrade2PropertyUserCmd()$/;"	f	struct:stEquipUpgrade2PropertyUserCmd
stEquipUpgrade2PropertyUserCmd	tmpcode/commond.h	/^struct stEquipUpgrade2PropertyUserCmd : public stPropertyUserCmd$/;"	s
stEquipUpgrade2ResultPropertyUserCmd	tmpcode/commond.h	/^	stEquipUpgrade2ResultPropertyUserCmd()$/;"	f	struct:stEquipUpgrade2ResultPropertyUserCmd
stEquipUpgrade2ResultPropertyUserCmd	tmpcode/commond.h	/^struct stEquipUpgrade2ResultPropertyUserCmd : public stPropertyUserCmd$/;"	s
stEquipUpgradePropertyUserCmd	tmpcode/commond.h	/^	stEquipUpgradePropertyUserCmd()$/;"	f	struct:stEquipUpgradePropertyUserCmd
stEquipUpgradePropertyUserCmd	tmpcode/commond.h	/^struct stEquipUpgradePropertyUserCmd : public stPropertyUserCmd$/;"	s
stEquipUpgradeResultPropertyUserCmd	tmpcode/commond.h	/^	stEquipUpgradeResultPropertyUserCmd()$/;"	f	struct:stEquipUpgradeResultPropertyUserCmd
stEquipUpgradeResultPropertyUserCmd	tmpcode/commond.h	/^struct stEquipUpgradeResultPropertyUserCmd : public stPropertyUserCmd$/;"	s
stEvolveHorseResultUserCmd	tmpcode/commond.h	/^    stEvolveHorseResultUserCmd()$/;"	f	struct:stEvolveHorseResultUserCmd
stEvolveHorseResultUserCmd	tmpcode/commond.h	/^struct stEvolveHorseResultUserCmd :public stPetUserCmd$/;"	s
stEvolveHorseSoulUserCmd	tmpcode/commond.h	/^        stEvolveHorseSoulUserCmd()$/;"	f	struct:stEvolveHorseSoulUserCmd
stEvolveHorseSoulUserCmd	tmpcode/commond.h	/^struct stEvolveHorseSoulUserCmd : public stPetUserCmd$/;"	s
stEvolveLingQiUserCmd	tmpcode/commond.h	/^	stEvolveLingQiUserCmd()$/;"	f	struct:stEvolveLingQiUserCmd
stEvolveLingQiUserCmd	tmpcode/commond.h	/^struct stEvolveLingQiUserCmd : public stLingQiUserCmd$/;"	s
stEvolveUseLingYuanZhuLingQiUserCmd	tmpcode/commond.h	/^	stEvolveUseLingYuanZhuLingQiUserCmd()$/;"	f	struct:stEvolveUseLingYuanZhuLingQiUserCmd
stEvolveUseLingYuanZhuLingQiUserCmd	tmpcode/commond.h	/^struct stEvolveUseLingYuanZhuLingQiUserCmd : public stLingQiUserCmd$/;"	s
stExchanceEssenceUserCmd	tmpcode/commond.h	/^    stExchanceEssenceUserCmd()$/;"	f	struct:stExchanceEssenceUserCmd
stExchanceEssenceUserCmd	tmpcode/commond.h	/^struct stExchanceEssenceUserCmd : public stTradeUserCmd$/;"	s
stExchangeGoldCardUserCmd	tmpcode/commond.h	/^        stExchangeGoldCardUserCmd()$/;"	f	struct:stExchangeGoldCardUserCmd
stExchangeGoldCardUserCmd	tmpcode/commond.h	/^struct stExchangeGoldCardUserCmd : public stPropertyUserCmd$/;"	s
stExchangeHorsePetCmd	tmpcode/commond.h	/^	stExchangeHorsePetCmd()$/;"	f	struct:stExchangeHorsePetCmd
stExchangeHorsePetCmd	tmpcode/commond.h	/^struct stExchangeHorsePetCmd : public stPetUserCmd$/;"	s
stExitArmyUserCmd	base/Command.h	/^  stExitArmyUserCmd()$/;"	f	struct:Cmd::stExitArmyUserCmd
stExitArmyUserCmd	base/Command.h	/^struct stExitArmyUserCmd : public stArmyUserCmd$/;"	s	namespace:Cmd
stExpModeTeamMemberUserCmd	base/Command.h	/^  stExpModeTeamMemberUserCmd()$/;"	f	struct:Cmd::stExpModeTeamMemberUserCmd
stExpModeTeamMemberUserCmd	base/Command.h	/^struct stExpModeTeamMemberUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stExpModeTeamMemberUserCmd	tmpcode/commond.h	/^	stExpModeTeamMemberUserCmd()$/;"	f	struct:stExpModeTeamMemberUserCmd
stExpModeTeamMemberUserCmd	tmpcode/commond.h	/^struct stExpModeTeamMemberUserCmd: public stChatUserCmd$/;"	s
stFacePropertyUserCmd	base/Command.h	/^  stFacePropertyUserCmd()$/;"	f	struct:Cmd::stFacePropertyUserCmd
stFacePropertyUserCmd	base/Command.h	/^struct stFacePropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stFeedDragonUserCmd	tmpcode/commond.h	/^        stFeedDragonUserCmd()$/;"	f	struct:stFeedDragonUserCmd
stFeedDragonUserCmd	tmpcode/commond.h	/^struct stFeedDragonUserCmd : public stDragonUserCmd$/;"	s
stFeedEquipLingQiUserCmd	tmpcode/commond.h	/^	stFeedEquipLingQiUserCmd()$/;"	f	struct:stFeedEquipLingQiUserCmd
stFeedEquipLingQiUserCmd	tmpcode/commond.h	/^struct stFeedEquipLingQiUserCmd : public stLingQiUserCmd$/;"	s
stFetchUnionWeekSalary	tmpcode/commond.h	/^        stFetchUnionWeekSalary()$/;"	f	struct:stFetchUnionWeekSalary
stFetchUnionWeekSalary	tmpcode/commond.h	/^struct stFetchUnionWeekSalary : public stUnionUserCmd$/;"	s
stFetchWeekSalaryUnionCmd	tmpcode/commond.h	/^        stFetchWeekSalaryUnionCmd()$/;"	f	struct:stFetchWeekSalaryUnionCmd
stFetchWeekSalaryUnionCmd	tmpcode/commond.h	/^struct stFetchWeekSalaryUnionCmd : public stUnionUserCmd$/;"	s
stFindTreasureDragonUserCmd	tmpcode/commond.h	/^	stFindTreasureDragonUserCmd()$/;"	f	struct:stFindTreasureDragonUserCmd
stFindTreasureDragonUserCmd	tmpcode/commond.h	/^struct stFindTreasureDragonUserCmd : public stDragonUserCmd$/;"	s
stFinishBetChallengeUserCmd	tmpcode/commond.h	/^	stFinishBetChallengeUserCmd()$/;"	f	struct:stFinishBetChallengeUserCmd
stFinishBetChallengeUserCmd	tmpcode/commond.h	/^struct stFinishBetChallengeUserCmd:public stChallengeGameUserCmd$/;"	s
stFinishDecayLingCmd	tmpcode/commond.h	/^	stFinishDecayLingCmd()$/;"	f	struct:stFinishDecayLingCmd
stFinishDecayLingCmd	tmpcode/commond.h	/^struct stFinishDecayLingCmd : public stLingQiDecayUserCmd$/;"	s
stFinishQuestLifeSkillPropertyUserCmd	tmpcode/commond.h	/^        stFinishQuestLifeSkillPropertyUserCmd(bool f = false)$/;"	f	struct:stFinishQuestLifeSkillPropertyUserCmd
stFinishQuestLifeSkillPropertyUserCmd	tmpcode/commond.h	/^struct stFinishQuestLifeSkillPropertyUserCmd : public stPropertyUserCmd$/;"	s
stFinishSellUserCmd	base/Command.h	/^  stFinishSellUserCmd()$/;"	f	struct:Cmd::stFinishSellUserCmd
stFinishSellUserCmd	base/Command.h	/^struct stFinishSellUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stFinishSellUserCmd	tmpcode/commond.h	/^	stFinishSellUserCmd()$/;"	f	struct:stFinishSellUserCmd
stFinishSellUserCmd	tmpcode/commond.h	/^struct stFinishSellUserCmd:public stTradeUserCmd$/;"	s
stFinishTradeUserCmd	base/Command.h	/^  stFinishTradeUserCmd()$/;"	f	struct:Cmd::stFinishTradeUserCmd
stFinishTradeUserCmd	base/Command.h	/^struct stFinishTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stFinishTradeUserCmd	tmpcode/commond.h	/^	stFinishTradeUserCmd()$/;"	f	struct:stFinishTradeUserCmd
stFinishTradeUserCmd	tmpcode/commond.h	/^struct stFinishTradeUserCmd:public stTradeUserCmd$/;"	s
stFireArmyCaptainUserCmd	base/Command.h	/^  stFireArmyCaptainUserCmd()$/;"	f	struct:Cmd::stFireArmyCaptainUserCmd
stFireArmyCaptainUserCmd	base/Command.h	/^struct stFireArmyCaptainUserCmd : public stArmyUserCmd$/;"	s	namespace:Cmd
stFireMemberFromSeptCmd	base/Command.h	/^  stFireMemberFromSeptCmd()$/;"	f	struct:Cmd::stFireMemberFromSeptCmd
stFireMemberFromSeptCmd	base/Command.h	/^struct stFireMemberFromSeptCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stFireMemberFromSeptCmd	tmpcode/commond.h	/^	stFireMemberFromSeptCmd()$/;"	f	struct:stFireMemberFromSeptCmd
stFireMemberFromSeptCmd	tmpcode/commond.h	/^struct stFireMemberFromSeptCmd : public stSeptUserCmd$/;"	s
stFireMemberFromUnionCmd	base/Command.h	/^  stFireMemberFromUnionCmd()$/;"	f	struct:Cmd::stFireMemberFromUnionCmd
stFireMemberFromUnionCmd	base/Command.h	/^struct stFireMemberFromUnionCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stFireMemberFromUnionCmd	tmpcode/commond.h	/^	stFireMemberFromUnionCmd()$/;"	f	struct:stFireMemberFromUnionCmd
stFireMemberFromUnionCmd	tmpcode/commond.h	/^struct stFireMemberFromUnionCmd : public stUnionUserCmd$/;"	s
stFireWorkUserCmd	base/Command.h	/^  stFireWorkUserCmd()$/;"	f	struct:Cmd::stFireWorkUserCmd
stFireWorkUserCmd	base/Command.h	/^struct stFireWorkUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stFirstFiveListStockUserCmd	base/Command.h	/^  stFirstFiveListStockUserCmd() $/;"	f	struct:Cmd::stFirstFiveListStockUserCmd
stFirstFiveListStockUserCmd	base/Command.h	/^struct stFirstFiveListStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stFirstFiveListStockUserCmd	tmpcode/commond.h	/^	stFirstFiveListStockUserCmd()$/;"	f	struct:stFirstFiveListStockUserCmd
stFirstFiveListStockUserCmd	tmpcode/commond.h	/^struct stFirstFiveListStockUserCmd : public stStockBillUserCmd$/;"	s
stFishUserCmd	tmpcode/commond.h	/^	stFishUserCmd()$/;"	f	struct:stFishUserCmd
stFishUserCmd	tmpcode/commond.h	/^struct stFishUserCmd : public stNullUserCmd$/;"	s
stFiskCountryUserCmd	base/Command.h	/^  stFiskCountryUserCmd()$/;"	f	struct:Cmd::stFiskCountryUserCmd
stFiskCountryUserCmd	base/Command.h	/^struct stFiskCountryUserCmd:public stCountryUserCmd$/;"	s	namespace:Cmd
stFlagMoveSCUserCmd	tmpcode/commond.h	/^	stFlagMoveSCUserCmd()$/;"	f	struct:stFlagMoveSCUserCmd
stFlagMoveSCUserCmd	tmpcode/commond.h	/^struct stFlagMoveSCUserCmd : public stSeptCompeteUserCmd$/;"	s
stFlagRelegationLuoRiCmd	tmpcode/commond.h	/^    stFlagRelegationLuoRiCmd()$/;"	f	struct:stFlagRelegationLuoRiCmd
stFlagRelegationLuoRiCmd	tmpcode/commond.h	/^struct stFlagRelegationLuoRiCmd : public stLuoRiXiaGuUserCmd$/;"	s
stFollowCartoonCmd	base/Command.h	/^  stFollowCartoonCmd()$/;"	f	struct:Cmd::stFollowCartoonCmd
stFollowCartoonCmd	base/Command.h	/^struct stFollowCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stForbidSameIpUserCmd	tmpcode/commond.h	/^	stForbidSameIpUserCmd()$/;"	f	struct:stForbidSameIpUserCmd
stForbidSameIpUserCmd	tmpcode/commond.h	/^struct stForbidSameIpUserCmd : public stDataUserCmd$/;"	s
stForbidTalkCountryUserCmd	base/Command.h	/^  stForbidTalkCountryUserCmd()$/;"	f	struct:Cmd::stForbidTalkCountryUserCmd
stForbidTalkCountryUserCmd	base/Command.h	/^struct stForbidTalkCountryUserCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stForbidTalkCountryUserCmd	tmpcode/commond.h	/^	stForbidTalkCountryUserCmd(const char *_name)$/;"	f	struct:stForbidTalkCountryUserCmd
stForbidTalkCountryUserCmd	tmpcode/commond.h	/^struct stForbidTalkCountryUserCmd : public stCountryUserCmd$/;"	s
stForceInfo	tmpcode/commond.h	/^	struct stForceInfo$/;"	s	struct:stForceRelationDataUserCmd
stForceRelationDataUserCmd	tmpcode/commond.h	/^	stForceRelationDataUserCmd()$/;"	f	struct:stForceRelationDataUserCmd
stForceRelationDataUserCmd	tmpcode/commond.h	/^struct stForceRelationDataUserCmd : public stQuestUserCmd$/;"	s
stForceSetupDataUserCmd	tmpcode/commond.h	/^        stForceSetupDataUserCmd()$/;"	f	struct:stForceSetupDataUserCmd
stForceSetupDataUserCmd	tmpcode/commond.h	/^struct stForceSetupDataUserCmd : public stDataUserCmd$/;"	s
stForgetUserLifeSkillPropertyUserCmd	tmpcode/commond.h	/^        stForgetUserLifeSkillPropertyUserCmd()$/;"	f	struct:stForgetUserLifeSkillPropertyUserCmd
stForgetUserLifeSkillPropertyUserCmd	tmpcode/commond.h	/^struct stForgetUserLifeSkillPropertyUserCmd : public stPropertyUserCmd$/;"	s
stFoundFashionPropertyUserCmd	tmpcode/commond.h	/^	stFoundFashionPropertyUserCmd()$/;"	f	struct:stFoundFashionPropertyUserCmd
stFoundFashionPropertyUserCmd	tmpcode/commond.h	/^struct stFoundFashionPropertyUserCmd : public stPropertyUserCmd {$/;"	s
stFoundFashionSkillStore	tmpcode/commond.h	/^        stFoundFashionSkillStore()$/;"	f	struct:stFoundFashionSkillStore
stFoundFashionSkillStore	tmpcode/commond.h	/^struct stFoundFashionSkillStore : stTradeUserCmd$/;"	s
stFoundItemPropertyUserCmd	base/Command.h	/^    stFoundItemPropertyUserCmd()$/;"	f	struct:Cmd::stFoundItemPropertyUserCmd
stFoundItemPropertyUserCmd	base/Command.h	/^  struct stFoundItemPropertyUserCmd : public stPropertyUserCmd {$/;"	s	namespace:Cmd
stFoundItemPropertyUserCmd	tmpcode/commond.h	/^	stFoundItemPropertyUserCmd()$/;"	f	struct:stFoundItemPropertyUserCmd
stFoundItemPropertyUserCmd	tmpcode/commond.h	/^struct stFoundItemPropertyUserCmd : public stPropertyUserCmd {$/;"	s
stFoundItemSkillStore	tmpcode/commond.h	/^        stFoundItemSkillStore()$/;"	f	struct:stFoundItemSkillStore
stFoundItemSkillStore	tmpcode/commond.h	/^struct stFoundItemSkillStore:stTradeUserCmd$/;"	s
stFoundLeechdomPropertyUserCmd	tmpcode/commond.h	/^        stFoundLeechdomPropertyUserCmd()$/;"	f	struct:stFoundLeechdomPropertyUserCmd
stFoundLeechdomPropertyUserCmd	tmpcode/commond.h	/^struct stFoundLeechdomPropertyUserCmd : public stPropertyUserCmd {$/;"	s
stFoundLeechdomSkillStore	tmpcode/commond.h	/^    stFoundLeechdomSkillStore() $/;"	f	struct:stFoundLeechdomSkillStore
stFoundLeechdomSkillStore	tmpcode/commond.h	/^struct stFoundLeechdomSkillStore : stTradeUserCmd$/;"	s
stFoundSpecialItemPropertyUserCmd	tmpcode/commond.h	/^	stFoundSpecialItemPropertyUserCmd()$/;"	f	struct:stFoundSpecialItemPropertyUserCmd
stFoundSpecialItemPropertyUserCmd	tmpcode/commond.h	/^struct stFoundSpecialItemPropertyUserCmd : public stPropertyUserCmd {$/;"	s
stFreeCaptureDragonUserCmd	tmpcode/commond.h	/^        stFreeCaptureDragonUserCmd()$/;"	f	struct:stFreeCaptureDragonUserCmd
stFreeCaptureDragonUserCmd	tmpcode/commond.h	/^struct stFreeCaptureDragonUserCmd : public stDragonUserCmd$/;"	s
stFreeCurHorsePetCmd	tmpcode/commond.h	/^    stFreeCurHorsePetCmd()$/;"	f	struct:stFreeCurHorsePetCmd
stFreeCurHorsePetCmd	tmpcode/commond.h	/^struct stFreeCurHorsePetCmd : public stPetUserCmd$/;"	s
stFreeHorsePetCmd	tmpcode/commond.h	/^	stFreeHorsePetCmd()$/;"	f	struct:stFreeHorsePetCmd
stFreeHorsePetCmd	tmpcode/commond.h	/^struct stFreeHorsePetCmd : public stPetUserCmd$/;"	s
stFreeOfficialUserCmd	tmpcode/commond.h	/^        stFreeOfficialUserCmd()$/;"	f	struct:stFreeOfficialUserCmd
stFreeOfficialUserCmd	tmpcode/commond.h	/^struct stFreeOfficialUserCmd : public stOfficialUserCmd$/;"	s
stFreshShenLongReward	tmpcode/commond.h	/^    stFreshShenLongReward()$/;"	f	struct:stFreshShenLongReward
stFreshShenLongReward	tmpcode/commond.h	/^struct stFreshShenLongReward : public stChatUserCmd$/;"	s
stFreshTeamMemberUserCmd	base/Command.h	/^  stFreshTeamMemberUserCmd()$/;"	f	struct:Cmd::stFreshTeamMemberUserCmd
stFreshTeamMemberUserCmd	base/Command.h	/^struct stFreshTeamMemberUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stFreshTeamMemberUserCmd	tmpcode/commond.h	/^	stFreshTeamMemberUserCmd()$/;"	f	struct:stFreshTeamMemberUserCmd
stFreshTeamMemberUserCmd	tmpcode/commond.h	/^struct stFreshTeamMemberUserCmd: public stChatUserCmd$/;"	s
stFriendHelpUserCmd	tmpcode/commond.h	/^        stFriendHelpUserCmd()$/;"	f	struct:stFriendHelpUserCmd
stFriendHelpUserCmd	tmpcode/commond.h	/^struct stFriendHelpUserCmd : public stPropertyUserCmd$/;"	s
stFuwenMozhuPropertyUserCmd	tmpcode/commond.h	/^	stFuwenMozhuPropertyUserCmd()$/;"	f	struct:stFuwenMozhuPropertyUserCmd
stFuwenMozhuPropertyUserCmd	tmpcode/commond.h	/^struct stFuwenMozhuPropertyUserCmd:public stPropertyUserCmd$/;"	s
stGRecommendAward	tmpcode/commond.h	/^	stGRecommendAward()$/;"	f	struct:stGRecommendAward
stGRecommendAward	tmpcode/commond.h	/^struct stGRecommendAward$/;"	s
stGRecommendItem	tmpcode/commond.h	/^	stGRecommendItem()$/;"	f	struct:stGRecommendItem
stGRecommendItem	tmpcode/commond.h	/^struct stGRecommendItem$/;"	s
stGameAccelKey	base/Command.h	/^  stGameAccelKey()$/;"	f	struct:Cmd::stGameAccelKey
stGameAccelKey	base/Command.h	/^struct stGameAccelKey {$/;"	s	namespace:Cmd
stGameAccelKey	tmpcode/commond.h	/^	stGameAccelKey()$/;"	f	struct:stGameAccelKey
stGameAccelKey	tmpcode/commond.h	/^struct stGameAccelKey $/;"	s
stGameTimeTimerUserCmd	base/Command.h	/^  stGameTimeTimerUserCmd()$/;"	f	struct:Cmd::stGameTimeTimerUserCmd
stGameTimeTimerUserCmd	base/Command.h	/^struct stGameTimeTimerUserCmd : public stTimerUserCmd $/;"	s	namespace:Cmd
stGameTimeTimerUserCmd	tmpcode/commond.h	/^	stGameTimeTimerUserCmd()$/;"	f	struct:stGameTimeTimerUserCmd
stGameTimeTimerUserCmd	tmpcode/commond.h	/^struct stGameTimeTimerUserCmd : public stTimerUserCmd $/;"	s
stGemToPiecePropertyUserCmd	tmpcode/commond.h	/^    stGemToPiecePropertyUserCmd()$/;"	f	struct:stGemToPiecePropertyUserCmd
stGemToPiecePropertyUserCmd	tmpcode/commond.h	/^struct stGemToPiecePropertyUserCmd : public stPropertyUserCmd$/;"	s
stGemUserCmd	base/Command.h	/^    stGemUserCmd()$/;"	f	struct:Cmd::stGemUserCmd
stGemUserCmd	base/Command.h	/^struct stGemUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stGetAwardZhenxuanUserCmd	tmpcode/commond.h	/^	stGetAwardZhenxuanUserCmd()$/;"	f	struct:stGetAwardZhenxuanUserCmd
stGetAwardZhenxuanUserCmd	tmpcode/commond.h	/^struct stGetAwardZhenxuanUserCmd: public stZhenxuanJingjiUserCmd$/;"	s
stGetBackCartoonCmd	base/Command.h	/^  stGetBackCartoonCmd()$/;"	f	struct:Cmd::stGetBackCartoonCmd
stGetBackCartoonCmd	base/Command.h	/^struct stGetBackCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stGetBackTankCmd	tmpcode/commond.h	/^	stGetBackTankCmd()$/;"	f	struct:stGetBackTankCmd
stGetBackTankCmd	tmpcode/commond.h	/^struct stGetBackTankCmd : public stTankUserCmd$/;"	s
stGetBeTradeImageUserCmd	tmpcode/commond.h	/^	stGetBeTradeImageUserCmd() {$/;"	f	struct:stGetBeTradeImageUserCmd
stGetBeTradeImageUserCmd	tmpcode/commond.h	/^struct stGetBeTradeImageUserCmd: public stTradeUserCmd$/;"	s
stGetCityDefItemUnionCmd	tmpcode/commond.h	/^	stGetCityDefItemUnionCmd()$/;"	f	struct:stGetCityDefItemUnionCmd
stGetCityDefItemUnionCmd	tmpcode/commond.h	/^struct stGetCityDefItemUnionCmd : public stUnionUserCmd$/;"	s
stGetDailyRandomQuestUserCmd	tmpcode/commond.h	/^	stGetDailyRandomQuestUserCmd()$/;"	f	struct:stGetDailyRandomQuestUserCmd
stGetDailyRandomQuestUserCmd	tmpcode/commond.h	/^struct stGetDailyRandomQuestUserCmd : public stRandomQuestUserCmd$/;"	s
stGetDayFlowerListAward	tmpcode/commond.h	/^	stGetDayFlowerListAward()        $/;"	f	struct:stGetDayFlowerListAward
stGetDayFlowerListAward	tmpcode/commond.h	/^struct stGetDayFlowerListAward : public stDataUserCmd$/;"	s
stGetDecayedLingQiUserCmd	tmpcode/commond.h	/^	stGetDecayedLingQiUserCmd()$/;"	f	struct:stGetDecayedLingQiUserCmd
stGetDecayedLingQiUserCmd	tmpcode/commond.h	/^struct stGetDecayedLingQiUserCmd : public stLingQiDecayUserCmd$/;"	s
stGetDetailGift	base/Command.h	/^  stGetDetailGift()$/;"	f	struct:Cmd::stGetDetailGift
stGetDetailGift	base/Command.h	/^struct stGetDetailGift : public stGiftUserCmd$/;"	s	namespace:Cmd
stGetDetailGift	tmpcode/commond.h	/^        stGetDetailGift()$/;"	f	struct:stGetDetailGift
stGetDetailGift	tmpcode/commond.h	/^struct stGetDetailGift : public stGiftUserCmd$/;"	s
stGetEarningInfoUnionCmd	tmpcode/commond.h	/^        stGetEarningInfoUnionCmd()$/;"	f	struct:stGetEarningInfoUnionCmd
stGetEarningInfoUnionCmd	tmpcode/commond.h	/^struct stGetEarningInfoUnionCmd : public stUnionUserCmd$/;"	s
stGetEmployGatherCmd	tmpcode/commond.h	/^    stGetEmployGatherCmd()$/;"	f	struct:stGetEmployGatherCmd
stGetEmployGatherCmd	tmpcode/commond.h	/^struct stGetEmployGatherCmd : public stTradeUserCmd$/;"	s
stGetExchange2Gift	tmpcode/commond.h	/^	stGetExchange2Gift()$/;"	f	struct:stGetExchange2Gift
stGetExchange2Gift	tmpcode/commond.h	/^struct stGetExchange2Gift : public stGoldUserCmd$/;"	s
stGetExchange3Gift	tmpcode/commond.h	/^	stGetExchange3Gift()$/;"	f	struct:stGetExchange3Gift
stGetExchange3Gift	tmpcode/commond.h	/^struct stGetExchange3Gift : public stGoldUserCmd$/;"	s
stGetExchange4Gift	tmpcode/commond.h	/^	stGetExchange4Gift()$/;"	f	struct:stGetExchange4Gift
stGetExchange4Gift	tmpcode/commond.h	/^struct stGetExchange4Gift : public stGoldUserCmd$/;"	s
stGetExchange5Gift	tmpcode/commond.h	/^	stGetExchange5Gift()$/;"	f	struct:stGetExchange5Gift
stGetExchange5Gift	tmpcode/commond.h	/^struct stGetExchange5Gift : public stGoldUserCmd$/;"	s
stGetExchangeGift	tmpcode/commond.h	/^	stGetExchangeGift()$/;"	f	struct:stGetExchangeGift
stGetExchangeGift	tmpcode/commond.h	/^struct stGetExchangeGift : public stGoldUserCmd$/;"	s
stGetFlowerListAward	tmpcode/commond.h	/^	stGetFlowerListAward()$/;"	f	struct:stGetFlowerListAward
stGetFlowerListAward	tmpcode/commond.h	/^struct stGetFlowerListAward : public stDataUserCmd$/;"	s
stGetForLifeAwardPromoterUserCmd	tmpcode/commond.h	/^	stGetForLifeAwardPromoterUserCmd()$/;"	f	struct:stGetForLifeAwardPromoterUserCmd
stGetForLifeAwardPromoterUserCmd	tmpcode/commond.h	/^struct stGetForLifeAwardPromoterUserCmd : public stQuestUserCmd$/;"	s
stGetHardWareInfo	tmpcode/commond.h	/^	stGetHardWareInfo()$/;"	f	struct:stGetHardWareInfo
stGetHardWareInfo	tmpcode/commond.h	/^struct stGetHardWareInfo : public stDataUserCmd $/;"	s
stGetItemFromNpcProgressBar	tmpcode/commond.h	/^	stGetItemFromNpcProgressBar()$/;"	f	struct:stGetItemFromNpcProgressBar
stGetItemFromNpcProgressBar	tmpcode/commond.h	/^struct stGetItemFromNpcProgressBar : public stTradeUserCmd$/;"	s
stGetItemGift	base/Command.h	/^  stGetItemGift()$/;"	f	struct:Cmd::stGetItemGift
stGetItemGift	base/Command.h	/^struct stGetItemGift : public stGiftUserCmd$/;"	s	namespace:Cmd
stGetItemGift	tmpcode/commond.h	/^        stGetItemGift()$/;"	f	struct:stGetItemGift
stGetItemGift	tmpcode/commond.h	/^struct stGetItemGift : public stGiftUserCmd$/;"	s
stGetItemMail	base/Command.h	/^  stGetItemMail()$/;"	f	struct:Cmd::stGetItemMail
stGetItemMail	base/Command.h	/^struct stGetItemMail : public stMailUserCmd$/;"	s	namespace:Cmd
stGetItemMail	tmpcode/commond.h	/^        stGetItemMail()$/;"	f	struct:stGetItemMail
stGetItemMail	tmpcode/commond.h	/^struct stGetItemMail : public stMailUserCmd$/;"	s
stGetItemProgressBarSecond	tmpcode/commond.h	/^        stGetItemProgressBarSecond()$/;"	f	struct:stGetItemProgressBarSecond
stGetItemProgressBarSecond	tmpcode/commond.h	/^struct stGetItemProgressBarSecond : public stTradeUserCmd$/;"	s
stGetItemProgressBarThird	tmpcode/commond.h	/^        stGetItemProgressBarThird()$/;"	f	struct:stGetItemProgressBarThird
stGetItemProgressBarThird	tmpcode/commond.h	/^struct stGetItemProgressBarThird : public stTradeUserCmd$/;"	s
stGetItemPurchase	tmpcode/commond.h	/^        stGetItemPurchase()$/;"	f	struct:stGetItemPurchase
stGetItemPurchase	tmpcode/commond.h	/^struct stGetItemPurchase : public stTradeUserCmd$/;"	s
stGetKingPurseListCmd	tmpcode/commond.h	/^	stGetKingPurseListCmd() $/;"	f	struct:stGetKingPurseListCmd
stGetKingPurseListCmd	tmpcode/commond.h	/^struct stGetKingPurseListCmd : public stCountryUserCmd {$/;"	s
stGetLingQiEggPropertyUserCmd	tmpcode/commond.h	/^    stGetLingQiEggPropertyUserCmd()$/;"	f	struct:stGetLingQiEggPropertyUserCmd
stGetLingQiEggPropertyUserCmd	tmpcode/commond.h	/^struct stGetLingQiEggPropertyUserCmd : public stPropertyUserCmd$/;"	s
stGetListAuction	base/Command.h	/^  stGetListAuction()$/;"	f	struct:Cmd::stGetListAuction
stGetListAuction	base/Command.h	/^struct stGetListAuction : public stAuctionUserCmd$/;"	s	namespace:Cmd
stGetListAuction	tmpcode/commond.h	/^        stGetListAuction()$/;"	f	struct:stGetListAuction
stGetListAuction	tmpcode/commond.h	/^struct stGetListAuction : public stAuctionUserCmd$/;"	s
stGetListGift	base/Command.h	/^  stGetListGift()$/;"	f	struct:Cmd::stGetListGift
stGetListGift	base/Command.h	/^struct stGetListGift : public stGiftUserCmd$/;"	s	namespace:Cmd
stGetListGift	tmpcode/commond.h	/^        stGetListGift()$/;"	f	struct:stGetListGift
stGetListGift	tmpcode/commond.h	/^struct stGetListGift : public stGiftUserCmd$/;"	s
stGetListMail	base/Command.h	/^  stGetListMail()$/;"	f	struct:Cmd::stGetListMail
stGetListMail	base/Command.h	/^struct stGetListMail : public stMailUserCmd$/;"	s	namespace:Cmd
stGetListMail	tmpcode/commond.h	/^	stGetListMail()$/;"	f	struct:stGetListMail
stGetListMail	tmpcode/commond.h	/^struct stGetListMail : public stMailUserCmd$/;"	s
stGetMagicUserCmd	tmpcode/commond.h	/^        stGetMagicUserCmd()$/;"	f	struct:stGetMagicUserCmd
stGetMagicUserCmd	tmpcode/commond.h	/^struct stGetMagicUserCmd : public stPropertyUserCmd$/;"	s
stGetMemberListSeptGuardCmd	tmpcode/commond.h	/^	stGetMemberListSeptGuardCmd()$/;"	f	struct:stGetMemberListSeptGuardCmd
stGetMemberListSeptGuardCmd	tmpcode/commond.h	/^struct stGetMemberListSeptGuardCmd : public stSeptUserCmd$/;"	s
stGetNewbieGiftUserCmd	tmpcode/commond.h	/^	stGetNewbieGiftUserCmd()$/;"	f	struct:stGetNewbieGiftUserCmd
stGetNewbieGiftUserCmd	tmpcode/commond.h	/^struct stGetNewbieGiftUserCmd : public stPropertyUserCmd$/;"	s
stGetOffTankCmd	tmpcode/commond.h	/^	stGetOffTankCmd()$/;"	f	struct:stGetOffTankCmd
stGetOffTankCmd	tmpcode/commond.h	/^struct stGetOffTankCmd : public stTankUserCmd$/;"	s
stGetOffTowerTankCmd	tmpcode/commond.h	/^    stGetOffTowerTankCmd()$/;"	f	struct:stGetOffTowerTankCmd
stGetOffTowerTankCmd	tmpcode/commond.h	/^struct stGetOffTowerTankCmd : public stTankUserCmd$/;"	s
stGetOnTankCmd	tmpcode/commond.h	/^	stGetOnTankCmd()$/;"	f	struct:stGetOnTankCmd
stGetOnTankCmd	tmpcode/commond.h	/^struct stGetOnTankCmd : public stTankUserCmd$/;"	s
stGetOnTowerTankCmd	tmpcode/commond.h	/^    stGetOnTowerTankCmd()$/;"	f	struct:stGetOnTowerTankCmd
stGetOnTowerTankCmd	tmpcode/commond.h	/^struct stGetOnTowerTankCmd : public stTankUserCmd$/;"	s
stGetPackBusiness	tmpcode/commond.h	/^	stGetPackBusiness() : stBusinessUserCmd(GET_PACK_BUSINESS_USERCMD) $/;"	f	struct:stGetPackBusiness
stGetPackBusiness	tmpcode/commond.h	/^struct stGetPackBusiness : public stBusinessUserCmd $/;"	s
stGetRelationListCmd	tmpcode/commond.h	/^	stGetRelationListCmd()$/;"	f	struct:stGetRelationListCmd
stGetRelationListCmd	tmpcode/commond.h	/^struct stGetRelationListCmd : public stRelationUserCmd$/;"	s
stGetSuitPropertyUserCmd	tmpcode/commond.h	/^    stGetSuitPropertyUserCmd()$/;"	f	struct:stGetSuitPropertyUserCmd
stGetSuitPropertyUserCmd	tmpcode/commond.h	/^struct stGetSuitPropertyUserCmd : public stPropertyUserCmd$/;"	s
stGetTankCmd	tmpcode/commond.h	/^	stGetTankCmd()$/;"	f	struct:stGetTankCmd
stGetTankCmd	tmpcode/commond.h	/^struct stGetTankCmd : public stTankUserCmd$/;"	s
stGetTmPowerValueList	tmpcode/commond.h	/^	stGetTmPowerValueList() $/;"	f	struct:stGetTmPowerValueList
stGetTmPowerValueList	tmpcode/commond.h	/^struct stGetTmPowerValueList : public stCountryUserCmd$/;"	s
stGetUnionBusinessmen	tmpcode/commond.h	/^	stGetUnionBusinessmen() $/;"	f	struct:stGetUnionBusinessmen
stGetUnionBusinessmen	tmpcode/commond.h	/^struct stGetUnionBusinessmen : public stBusinessUserCmd $/;"	s
stGetUnionCityTax	base/Command.h	/^  stGetUnionCityTax()$/;"	f	struct:Cmd::stGetUnionCityTax
stGetUnionCityTax	base/Command.h	/^struct stGetUnionCityTax : public stDareUserCmd$/;"	s	namespace:Cmd
stGetWinnerGift	base/Command.h	/^  stGetWinnerGift()$/;"	f	struct:Cmd::stGetWinnerGift
stGetWinnerGift	base/Command.h	/^struct stGetWinnerGift : public stGiftUserCmd$/;"	s	namespace:Cmd
stGetWinnerGift	tmpcode/commond.h	/^        stGetWinnerGift()$/;"	f	struct:stGetWinnerGift
stGetWinnerGift	tmpcode/commond.h	/^struct stGetWinnerGift : public stGiftUserCmd$/;"	s
stGiftBagResultUserCmd	tmpcode/commond.h	/^    stGiftBagResultUserCmd()$/;"	f	struct:stGiftBagResultUserCmd
stGiftBagResultUserCmd	tmpcode/commond.h	/^struct stGiftBagResultUserCmd : public stPropertyUserCmd$/;"	s
stGiftUserCmd	base/Command.h	/^  stGiftUserCmd()$/;"	f	struct:Cmd::stGiftUserCmd
stGiftUserCmd	base/Command.h	/^struct stGiftUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stGiftUserCmd	tmpcode/commond.h	/^        stGiftUserCmd()$/;"	f	struct:stGiftUserCmd
stGiftUserCmd	tmpcode/commond.h	/^struct stGiftUserCmd : public stNullUserCmd$/;"	s
stGiveBusinessStateCmd	tmpcode/commond.h	/^	stGiveBusinessStateCmd() : stBusinessUserCmd(GIVE_BUSINESS_STATE)$/;"	f	struct:stGiveBusinessStateCmd
stGiveBusinessStateCmd	tmpcode/commond.h	/^struct stGiveBusinessStateCmd : public stBusinessUserCmd$/;"	s
stGiveRightUserCmd	tmpcode/commond.h	/^         stGiveRightUserCmd()$/;"	f	struct:stGiveRightUserCmd
stGiveRightUserCmd	tmpcode/commond.h	/^struct stGiveRightUserCmd: public stChatUserCmd$/;"	s
stGiveupFishUserCmd	tmpcode/commond.h	/^	stGiveupFishUserCmd()$/;"	f	struct:stGiveupFishUserCmd
stGiveupFishUserCmd	tmpcode/commond.h	/^struct stGiveupFishUserCmd : stFishUserCmd$/;"	s
stGmToolUserCmd	base/Command.h	/^  stGmToolUserCmd()$/;"	f	struct:Cmd::stGmToolUserCmd
stGmToolUserCmd	base/Command.h	/^struct stGmToolUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stGmToolUserCmd	tmpcode/commond.h	/^	stGmToolUserCmd()$/;"	f	struct:stGmToolUserCmd
stGmToolUserCmd	tmpcode/commond.h	/^struct stGmToolUserCmd : public stNullUserCmd$/;"	s
stGoToAttGuardNpc	tmpcode/commond.h	/^	stGoToAttGuardNpc():stUnionSkillUserCmd(GOTO_ATT_GUARDNPC_USERCMD),destX(0),destY(0)$/;"	f	struct:stGoToAttGuardNpc
stGoToAttGuardNpc	tmpcode/commond.h	/^struct stGoToAttGuardNpc : public stUnionSkillUserCmd$/;"	s
stGoTrainPropertyUserCmd	base/Command.h	/^  stGoTrainPropertyUserCmd()$/;"	f	struct:Cmd::stGoTrainPropertyUserCmd
stGoTrainPropertyUserCmd	base/Command.h	/^struct stGoTrainPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stGoldGiveTradeUserCmd	base/Command.h	/^  stGoldGiveTradeUserCmd()$/;"	f	struct:Cmd::stGoldGiveTradeUserCmd
stGoldGiveTradeUserCmd	base/Command.h	/^struct stGoldGiveTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stGoldUserCmd	base/Command.h	/^  stGoldUserCmd()$/;"	f	struct:Cmd::stGoldUserCmd
stGoldUserCmd	base/Command.h	/^struct stGoldUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stGoldUserCmd	tmpcode/commond.h	/^	stGoldUserCmd()$/;"	f	struct:stGoldUserCmd
stGoldUserCmd	tmpcode/commond.h	/^struct stGoldUserCmd : public stNullUserCmd$/;"	s
stGoodnessStateMapScreenUserCmd	base/Command.h	/^  stGoodnessStateMapScreenUserCmd()$/;"	f	struct:Cmd::stGoodnessStateMapScreenUserCmd
stGoodnessStateMapScreenUserCmd	base/Command.h	/^struct stGoodnessStateMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stGoodnessStateMapScreenUserCmd	tmpcode/commond.h	/^	stGoodnessStateMapScreenUserCmd()$/;"	f	struct:stGoodnessStateMapScreenUserCmd
stGoodnessStateMapScreenUserCmd	tmpcode/commond.h	/^struct stGoodnessStateMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s
stGotRewardUserCmd	tmpcode/commond.h	/^	stGotRewardUserCmd()$/;"	f	struct:stGotRewardUserCmd
stGotRewardUserCmd	tmpcode/commond.h	/^struct stGotRewardUserCmd:public stLuoRiXiaGuUserCmd$/;"	s
stGotoCitizenUserCmd	tmpcode/commond.h	/^	stGotoCitizenUserCmd(const char *_name)$/;"	f	struct:stGotoCitizenUserCmd
stGotoCitizenUserCmd	tmpcode/commond.h	/^struct stGotoCitizenUserCmd :public stCountryUserCmd$/;"	s
stGotoHomeUserCmd	tmpcode/commond.h	/^	stGotoHomeUserCmd()$/;"	f	struct:stGotoHomeUserCmd
stGotoHomeUserCmd	tmpcode/commond.h	/^struct stGotoHomeUserCmd : public stHomeUserCmd$/;"	s
stGotoMySpouseCmd	tmpcode/commond.h	/^	stGotoMySpouseCmd()$/;"	f	struct:stGotoMySpouseCmd
stGotoMySpouseCmd	tmpcode/commond.h	/^struct stGotoMySpouseCmd : public stRelationUserCmd$/;"	s
stGotoPlayerZhenxuanUserCmd	tmpcode/commond.h	/^	stGotoPlayerZhenxuanUserCmd()$/;"	f	struct:stGotoPlayerZhenxuanUserCmd
stGotoPlayerZhenxuanUserCmd	tmpcode/commond.h	/^struct stGotoPlayerZhenxuanUserCmd: public stZhenxuanJingjiUserCmd$/;"	s
stGouhuoUserCmd	tmpcode/commond.h	/^	stGouhuoUserCmd()$/;"	f	struct:stGouhuoUserCmd
stGouhuoUserCmd	tmpcode/commond.h	/^struct stGouhuoUserCmd: public stNullUserCmd$/;"	s
stGuessBarkeeperState	tmpcode/commond.h	/^	stGuessBarkeeperState()$/;"	f	struct:stGuessBarkeeperState
stGuessBarkeeperState	tmpcode/commond.h	/^struct stGuessBarkeeperState : public stBarUserCmd$/;"	s
stGuyDeadDaTaoShaUserCmd	tmpcode/commond.h	/^         stGuyDeadDaTaoShaUserCmd()$/;"	f	struct:stGuyDeadDaTaoShaUserCmd
stGuyDeadDaTaoShaUserCmd	tmpcode/commond.h	/^ struct stGuyDeadDaTaoShaUserCmd : public stDaTaoShaUserCmd$/;"	s
stHairPropertyUserCmd	base/Command.h	/^  stHairPropertyUserCmd()$/;"	f	struct:Cmd::stHairPropertyUserCmd
stHairPropertyUserCmd	base/Command.h	/^struct stHairPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stHarvestSoilHouseUserCmd	tmpcode/commond.h	/^	stHarvestSoilHouseUserCmd()$/;"	f	struct:stHarvestSoilHouseUserCmd
stHarvestSoilHouseUserCmd	tmpcode/commond.h	/^struct stHarvestSoilHouseUserCmd: public stHouseUserCmd$/;"	s
stHasExpressTimesWeekendZhenxuanUserCmd	tmpcode/commond.h	/^	stHasExpressTimesWeekendZhenxuanUserCmd()$/;"	f	struct:stHasExpressTimesWeekendZhenxuanUserCmd
stHasExpressTimesWeekendZhenxuanUserCmd	tmpcode/commond.h	/^struct stHasExpressTimesWeekendZhenxuanUserCmd: public stZhenxuanJingjiUserCmd$/;"	s
stHeadTopTipsUserCmd	tmpcode/commond.h	/^        stHeadTopTipsUserCmd()$/;"	f	struct:stHeadTopTipsUserCmd
stHeadTopTipsUserCmd	tmpcode/commond.h	/^struct stHeadTopTipsUserCmd: public stChatUserCmd$/;"	s
stHeroCardCmd	base/HeroCardCmd.h	/^	stHeroCardCmd()$/;"	f	struct:Cmd::stHeroCardCmd
stHeroCardCmd	base/HeroCardCmd.h	/^    struct stHeroCardCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stHeroIslandUserCmd	tmpcode/commond.h	/^	stHeroIslandUserCmd()$/;"	f	struct:stHeroIslandUserCmd
stHeroIslandUserCmd	tmpcode/commond.h	/^struct stHeroIslandUserCmd: public stNullUserCmd$/;"	s
stHistoryGoldStockUserCmd	base/Command.h	/^  stHistoryGoldStockUserCmd() $/;"	f	struct:Cmd::stHistoryGoldStockUserCmd
stHistoryGoldStockUserCmd	base/Command.h	/^struct stHistoryGoldStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stHistoryMoneyStockUserCmd	base/Command.h	/^  stHistoryMoneyStockUserCmd() $/;"	f	struct:Cmd::stHistoryMoneyStockUserCmd
stHistoryMoneyStockUserCmd	base/Command.h	/^struct stHistoryMoneyStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stHistoryTalkLTQUserCmd	tmpcode/commond.h	/^	stHistoryTalkLTQUserCmd()$/;"	f	struct:stHistoryTalkLTQUserCmd
stHistoryTalkLTQUserCmd	tmpcode/commond.h	/^struct stHistoryTalkLTQUserCmd : public stLTQUserCmd$/;"	s
stHolePropertyUserCmd	base/Command.h	/^  stHolePropertyUserCmd()$/;"	f	struct:Cmd::stHolePropertyUserCmd
stHolePropertyUserCmd	base/Command.h	/^struct stHolePropertyUserCmd : public stPropertyUserCmd {$/;"	s	namespace:Cmd
stHolePropertyUserCmd	tmpcode/commond.h	/^		stHolePropertyUserCmd()$/;"	f	struct:stHolePropertyUserCmd
stHolePropertyUserCmd	tmpcode/commond.h	/^struct stHolePropertyUserCmd : public stPropertyUserCmd {$/;"	s
stHomeItem	tmpcode/commond.h	/^struct stHomeItem$/;"	s
stHomeNameHomeUserCmd	tmpcode/commond.h	/^	stHomeNameHomeUserCmd()$/;"	f	struct:stHomeNameHomeUserCmd
stHomeNameHomeUserCmd	tmpcode/commond.h	/^struct stHomeNameHomeUserCmd : public stHomeUserCmd$/;"	s
stHomeUserCmd	tmpcode/commond.h	/^	stHomeUserCmd()$/;"	f	struct:stHomeUserCmd
stHomeUserCmd	tmpcode/commond.h	/^struct stHomeUserCmd : public stNullUserCmd        $/;"	s
stHonorToPkValuePropertyUserCmd	base/Command.h	/^  stHonorToPkValuePropertyUserCmd()$/;"	f	struct:Cmd::stHonorToPkValuePropertyUserCmd
stHonorToPkValuePropertyUserCmd	base/Command.h	/^struct stHonorToPkValuePropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stHorseDataPetCmd	base/Command.h	/^  stHorseDataPetCmd()$/;"	f	struct:Cmd::stHorseDataPetCmd
stHorseDataPetCmd	base/Command.h	/^struct stHorseDataPetCmd : public stPetUserCmd$/;"	s	namespace:Cmd
stHorseDataPetCmd	tmpcode/commond.h	/^    stHorseDataPetCmd()$/;"	f	struct:stHorseDataPetCmd
stHorseDataPetCmd	tmpcode/commond.h	/^struct stHorseDataPetCmd : public stPetUserCmd$/;"	s
stHorseEvolveUserCmd	tmpcode/commond.h	/^    stHorseEvolveUserCmd()$/;"	f	struct:stHorseEvolveUserCmd
stHorseEvolveUserCmd	tmpcode/commond.h	/^struct stHorseEvolveUserCmd : public stPetUserCmd$/;"	s
stHorseMaterialEvolveResultUserCmd	tmpcode/commond.h	/^    stHorseMaterialEvolveResultUserCmd()$/;"	f	struct:stHorseMaterialEvolveResultUserCmd
stHorseMaterialEvolveResultUserCmd	tmpcode/commond.h	/^struct stHorseMaterialEvolveResultUserCmd : public stPetUserCmd$/;"	s
stHorseSoulEvolveResultUserCmd	tmpcode/commond.h	/^        stHorseSoulEvolveResultUserCmd()$/;"	f	struct:stHorseSoulEvolveResultUserCmd
stHorseSoulEvolveResultUserCmd	tmpcode/commond.h	/^struct stHorseSoulEvolveResultUserCmd : public stPetUserCmd$/;"	s
stHorseSoulItemPropertyUserCmd	tmpcode/commond.h	/^    stHorseSoulItemPropertyUserCmd()$/;"	f	struct:stHorseSoulItemPropertyUserCmd
stHorseSoulItemPropertyUserCmd	tmpcode/commond.h	/^struct stHorseSoulItemPropertyUserCmd : public stPropertyUserCmd $/;"	s
stHouseFurnitureItemPropertyUserCmd	tmpcode/commond.h	/^	stHouseFurnitureItemPropertyUserCmd()$/;"	f	struct:stHouseFurnitureItemPropertyUserCmd
stHouseFurnitureItemPropertyUserCmd	tmpcode/commond.h	/^struct stHouseFurnitureItemPropertyUserCmd : public stPropertyUserCmd $/;"	s
stHouseRoomDeskItemPropertyUserCmd	tmpcode/commond.h	/^	stHouseRoomDeskItemPropertyUserCmd()$/;"	f	struct:stHouseRoomDeskItemPropertyUserCmd
stHouseRoomDeskItemPropertyUserCmd	tmpcode/commond.h	/^struct stHouseRoomDeskItemPropertyUserCmd : public stPropertyUserCmd $/;"	s
stHouseUserCmd	tmpcode/commond.h	/^	stHouseUserCmd()         $/;"	f	struct:stHouseUserCmd
stHouseUserCmd	tmpcode/commond.h	/^struct stHouseUserCmd : public stNullUserCmd$/;"	s
stHpExpCartoonCmd	base/Command.h	/^  stHpExpCartoonCmd()$/;"	f	struct:Cmd::stHpExpCartoonCmd
stHpExpCartoonCmd	base/Command.h	/^struct stHpExpCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stHpExpPetCmd	base/Command.h	/^  stHpExpPetCmd()$/;"	f	struct:Cmd::stHpExpPetCmd
stHpExpPetCmd	base/Command.h	/^struct stHpExpPetCmd : public stPetUserCmd$/;"	s	namespace:Cmd
stHpExpPetCmd	tmpcode/commond.h	/^	stHpExpPetCmd()$/;"	f	struct:stHpExpPetCmd
stHpExpPetCmd	tmpcode/commond.h	/^struct stHpExpPetCmd : public stPetUserCmd$/;"	s
stHuoDuiLevelUserCmd	tmpcode/commond.h	/^	stHuoDuiLevelUserCmd()$/;"	f	struct:stHuoDuiLevelUserCmd
stHuoDuiLevelUserCmd	tmpcode/commond.h	/^struct stHuoDuiLevelUserCmd : public stNewYearActionUserCmd$/;"	s
stIdentifierAndNameUserCmd	tmpcode/commond.h	/^	stIdentifierAndNameUserCmd()$/;"	f	struct:stIdentifierAndNameUserCmd
stIdentifierAndNameUserCmd	tmpcode/commond.h	/^struct stIdentifierAndNameUserCmd : public stDataUserCmd$/;"	s
stImageTradeWithNpcCmd	tmpcode/commond.h	/^	stImageTradeWithNpcCmd()$/;"	f	struct:stImageTradeWithNpcCmd
stImageTradeWithNpcCmd	tmpcode/commond.h	/^struct stImageTradeWithNpcCmd:stTradeUserCmd$/;"	s
stImageVerifyCancelUsreCmd	tmpcode/commond.h	/^	stImageVerifyCancelUsreCmd()$/;"	f	struct:stImageVerifyCancelUsreCmd
stImageVerifyCancelUsreCmd	tmpcode/commond.h	/^struct stImageVerifyCancelUsreCmd : stImageVerifyUserCmd$/;"	s
stImageVerifyImageDataUserCmd	tmpcode/commond.h	/^	stImageVerifyImageDataUserCmd()$/;"	f	struct:stImageVerifyImageDataUserCmd
stImageVerifyImageDataUserCmd	tmpcode/commond.h	/^struct stImageVerifyImageDataUserCmd : stImageVerifyUserCmd$/;"	s
stImageVerifyRefreshUserCmd	tmpcode/commond.h	/^	stImageVerifyRefreshUserCmd()$/;"	f	struct:stImageVerifyRefreshUserCmd
stImageVerifyRefreshUserCmd	tmpcode/commond.h	/^struct stImageVerifyRefreshUserCmd : stImageVerifyUserCmd$/;"	s
stImageVerifyRetryUserCmd	tmpcode/commond.h	/^	stImageVerifyRetryUserCmd()$/;"	f	struct:stImageVerifyRetryUserCmd
stImageVerifyRetryUserCmd	tmpcode/commond.h	/^struct stImageVerifyRetryUserCmd : stImageVerifyUserCmd$/;"	s
stImageVerifyReturnCharsUserCmd	tmpcode/commond.h	/^	stImageVerifyReturnCharsUserCmd()$/;"	f	struct:stImageVerifyReturnCharsUserCmd
stImageVerifyReturnCharsUserCmd	tmpcode/commond.h	/^struct stImageVerifyReturnCharsUserCmd : stImageVerifyUserCmd$/;"	s
stImageVerifyThreeERRUserCmd	tmpcode/commond.h	/^	stImageVerifyThreeERRUserCmd()$/;"	f	struct:stImageVerifyThreeERRUserCmd
stImageVerifyThreeERRUserCmd	tmpcode/commond.h	/^struct stImageVerifyThreeERRUserCmd: stImageVerifyUserCmd$/;"	s
stImageVerifyUserCmd	tmpcode/commond.h	/^	stImageVerifyUserCmd()$/;"	f	struct:stImageVerifyUserCmd
stImageVerifyUserCmd	tmpcode/commond.h	/^struct stImageVerifyUserCmd : stNullUserCmd$/;"	s
stInRecallSeptCmd	tmpcode/commond.h	/^	stInRecallSeptCmd()$/;"	f	struct:stInRecallSeptCmd
stInRecallSeptCmd	tmpcode/commond.h	/^struct stInRecallSeptCmd : public stSeptUserCmd$/;"	s
stInfoChallengeUserCmd	tmpcode/commond.h	/^	stInfoChallengeUserCmd()$/;"	f	struct:stInfoChallengeUserCmd
stInfoChallengeUserCmd	tmpcode/commond.h	/^struct stInfoChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stInfoGouhuoUserCmd	tmpcode/commond.h	/^	stInfoGouhuoUserCmd(): gouhuoTempID(0), gouhuoLeftTime(0), drunkLeftTime(0), count(0)$/;"	f	struct:stInfoGouhuoUserCmd
stInfoGouhuoUserCmd	tmpcode/commond.h	/^struct stInfoGouhuoUserCmd: public stGouhuoUserCmd$/;"	s
stInfoSeptTeamChallengeUserCmd	tmpcode/commond.h	/^	stInfoSeptTeamChallengeUserCmd()$/;"	f	struct:stInfoSeptTeamChallengeUserCmd
stInfoSeptTeamChallengeUserCmd	tmpcode/commond.h	/^struct stInfoSeptTeamChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stInitFishUserCmd	tmpcode/commond.h	/^	stInitFishUserCmd()$/;"	f	struct:stInitFishUserCmd
stInitFishUserCmd	tmpcode/commond.h	/^struct stInitFishUserCmd : stFishUserCmd$/;"	s
stInstateUnionBusinessman	tmpcode/commond.h	/^	stInstateUnionBusinessman() :$/;"	f	struct:stInstateUnionBusinessman
stInstateUnionBusinessman	tmpcode/commond.h	/^struct stInstateUnionBusinessman : public stBusinessUserCmd $/;"	s
stInviteChallengeUserCmd	tmpcode/commond.h	/^	stInviteChallengeUserCmd()$/;"	f	struct:stInviteChallengeUserCmd
stInviteChallengeUserCmd	tmpcode/commond.h	/^struct stInviteChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stInviteDaTaoShaUserCmd	tmpcode/commond.h	/^        stInviteDaTaoShaUserCmd()$/;"	f	struct:stInviteDaTaoShaUserCmd
stInviteDaTaoShaUserCmd	tmpcode/commond.h	/^struct stInviteDaTaoShaUserCmd : public stDaTaoShaUserCmd$/;"	s
stInviteDanceUserCmd	tmpcode/commond.h	/^	stInviteDanceUserCmd()$/;"	f	struct:stInviteDanceUserCmd
stInviteDanceUserCmd	tmpcode/commond.h	/^struct stInviteDanceUserCmd : public stBarUserCmd$/;"	s
stInviteDragonChallengeUserCmd	tmpcode/commond.h	/^        stInviteDragonChallengeUserCmd()$/;"	f	struct:stInviteDragonChallengeUserCmd
stInviteDragonChallengeUserCmd	tmpcode/commond.h	/^struct stInviteDragonChallengeUserCmd : public stDragonUserCmd$/;"	s
stInviteGroup_ChannelUserCmd	tmpcode/commond.h	/^         stInviteGroup_ChannelUserCmd()$/;"	f	struct:stInviteGroup_ChannelUserCmd
stInviteGroup_ChannelUserCmd	tmpcode/commond.h	/^ struct stInviteGroup_ChannelUserCmd: public stChatUserCmd$/;"	s
stInviteIntoTankCmd	tmpcode/commond.h	/^	stInviteIntoTankCmd()$/;"	f	struct:stInviteIntoTankCmd
stInviteIntoTankCmd	tmpcode/commond.h	/^struct stInviteIntoTankCmd : public stTankUserCmd$/;"	s
stInviteLTQUserCmd	tmpcode/commond.h	/^	stInviteLTQUserCmd()$/;"	f	struct:stInviteLTQUserCmd
stInviteLTQUserCmd	tmpcode/commond.h	/^struct stInviteLTQUserCmd : public stLTQUserCmd$/;"	s
stInviteQuestRoomUserCmd	tmpcode/commond.h	/^    stInviteQuestRoomUserCmd(): roomID(0), questID(0), minLevel(0), maxLevel(0), type(0$/;"	f	struct:stInviteQuestRoomUserCmd
stInviteQuestRoomUserCmd	tmpcode/commond.h	/^struct stInviteQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stInviteRetTankCmd	tmpcode/commond.h	/^	stInviteRetTankCmd()$/;"	f	struct:stInviteRetTankCmd
stInviteRetTankCmd	tmpcode/commond.h	/^struct stInviteRetTankCmd : public stTankUserCmd$/;"	s
stInviteSCUserCmd	tmpcode/commond.h	/^	stInviteSCUserCmd()$/;"	f	struct:stInviteSCUserCmd
stInviteSCUserCmd	tmpcode/commond.h	/^struct stInviteSCUserCmd : public stSeptCompeteUserCmd$/;"	s
stInviteTankCmd	tmpcode/commond.h	/^	stInviteTankCmd()$/;"	f	struct:stInviteTankCmd
stInviteTankCmd	tmpcode/commond.h	/^struct stInviteTankCmd : public stTankUserCmd$/;"	s
stInvite_ChannelUserCmd	base/Command.h	/^  stInvite_ChannelUserCmd()$/;"	f	struct:Cmd::stInvite_ChannelUserCmd
stInvite_ChannelUserCmd	base/Command.h	/^struct  stInvite_ChannelUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stInvite_ChannelUserCmd	tmpcode/commond.h	/^	 stInvite_ChannelUserCmd()$/;"	f	struct:stInvite_ChannelUserCmd
stInvite_ChannelUserCmd	tmpcode/commond.h	/^ struct  stInvite_ChannelUserCmd: public stChatUserCmd$/;"	s
stJieZhanAwardIconInfo	tmpcode/commond.h	/^    stJieZhanAwardIconInfo()$/;"	f	struct:stJieZhanAwardIconInfo
stJieZhanAwardIconInfo	tmpcode/commond.h	/^struct stJieZhanAwardIconInfo : public stMapScreenUserCmd$/;"	s
stJieZhanHisList	tmpcode/commond.h	/^    stJieZhanHisList()$/;"	f	struct:stJieZhanHisList
stJieZhanHisList	tmpcode/commond.h	/^struct stJieZhanHisList : public stMapScreenUserCmd$/;"	s
stJieZhanIconInfo	tmpcode/commond.h	/^    stJieZhanIconInfo()$/;"	f	struct:stJieZhanIconInfo
stJieZhanIconInfo	tmpcode/commond.h	/^struct stJieZhanIconInfo : public stMapScreenUserCmd$/;"	s
stJieZhanJiShiInfo	tmpcode/commond.h	/^    stJieZhanJiShiInfo()$/;"	f	struct:stJieZhanJiShiInfo
stJieZhanJiShiInfo	tmpcode/commond.h	/^struct stJieZhanJiShiInfo : public stMapScreenUserCmd$/;"	s
stJieZhanLive	tmpcode/commond.h	/^    stJieZhanLive()$/;"	f	struct:stJieZhanLive
stJieZhanLive	tmpcode/commond.h	/^struct stJieZhanLive : public stMapScreenUserCmd$/;"	s
stJieZhanState	tmpcode/commond.h	/^    stJieZhanState()$/;"	f	struct:stJieZhanState
stJieZhanState	tmpcode/commond.h	/^struct stJieZhanState$/;"	s
stJieZhanXuanZhan	tmpcode/commond.h	/^struct stJieZhanXuanZhan$/;"	s
stJoinChallengeUserCmd	tmpcode/commond.h	/^	stJoinChallengeUserCmd()$/;"	f	struct:stJoinChallengeUserCmd
stJoinChallengeUserCmd	tmpcode/commond.h	/^struct stJoinChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stJoinModeTeamMemberUserCmd	tmpcode/commond.h	/^	stJoinModeTeamMemberUserCmd()$/;"	f	struct:stJoinModeTeamMemberUserCmd
stJoinModeTeamMemberUserCmd	tmpcode/commond.h	/^struct stJoinModeTeamMemberUserCmd: public stChatUserCmd$/;"	s
stJoinQuestRoomUserCmd	tmpcode/commond.h	/^    stJoinQuestRoomUserCmd(): questID(0),\/* levelMark(0),*\/ roomID(0)$/;"	f	struct:stJoinQuestRoomUserCmd
stJoinQuestRoomUserCmd	tmpcode/commond.h	/^struct stJoinQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stJoinQuicklyQuestRoomUserCmd	tmpcode/commond.h	/^    stJoinQuicklyQuestRoomUserCmd(): questID(0),levelMark(0)$/;"	f	struct:stJoinQuicklyQuestRoomUserCmd
stJoinQuicklyQuestRoomUserCmd	tmpcode/commond.h	/^struct stJoinQuicklyQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stJoin_ChannelUserCmd	base/Command.h	/^  stJoin_ChannelUserCmd()$/;"	f	struct:Cmd::stJoin_ChannelUserCmd
stJoin_ChannelUserCmd	base/Command.h	/^struct  stJoin_ChannelUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stJoin_ChannelUserCmd	tmpcode/commond.h	/^	 stJoin_ChannelUserCmd()$/;"	f	struct:stJoin_ChannelUserCmd
stJoin_ChannelUserCmd	tmpcode/commond.h	/^ struct  stJoin_ChannelUserCmd: public stChatUserCmd$/;"	s
stJpegPassportUserCmd	base/Command.h	/^  stJpegPassportUserCmd()$/;"	f	struct:Cmd::stJpegPassportUserCmd
stJpegPassportUserCmd	base/Command.h	/^struct stJpegPassportUserCmd : public stLogonUserCmd$/;"	s	namespace:Cmd
stJumpMoveUserCmd	tmpcode/commond.h	/^	stJumpMoveUserCmd()$/;"	f	struct:stJumpMoveUserCmd
stJumpMoveUserCmd	tmpcode/commond.h	/^struct stJumpMoveUserCmd : public stMoveUserCmd$/;"	s
stJunXianScoreLuoRiUserCmd	tmpcode/commond.h	/^    stJunXianScoreLuoRiUserCmd()$/;"	f	struct:stJunXianScoreLuoRiUserCmd
stJunXianScoreLuoRiUserCmd	tmpcode/commond.h	/^struct stJunXianScoreLuoRiUserCmd:public stLuoRiXiaGuUserCmd$/;"	s
stKOKOption	tmpcode/commond.h	/^     stKOKOption()$/;"	f	struct:stKOKOption
stKOKOption	tmpcode/commond.h	/^struct stKOKOption:public stDataUserCmd$/;"	s
stKeepKillCountHeroIslandUserCmd	tmpcode/commond.h	/^	stKeepKillCountHeroIslandUserCmd()$/;"	f	struct:stKeepKillCountHeroIslandUserCmd
stKeepKillCountHeroIslandUserCmd	tmpcode/commond.h	/^struct stKeepKillCountHeroIslandUserCmd: public stHeroIslandUserCmd$/;"	s
stKeyUseAccelcmdPropUserCmd	tmpcode/commond.h	/^        stKeyUseAccelcmdPropUserCmd()$/;"	f	struct:stKeyUseAccelcmdPropUserCmd
stKeyUseAccelcmdPropUserCmd	tmpcode/commond.h	/^struct stKeyUseAccelcmdPropUserCmd : public stPropertyUserCmd$/;"	s
stKickMemQuestRoomUserCmd	tmpcode/commond.h	/^	stKickMemQuestRoomUserCmd(): roomID(0)$/;"	f	struct:stKickMemQuestRoomUserCmd
stKickMemQuestRoomUserCmd	tmpcode/commond.h	/^struct stKickMemQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stKillBossUserCmd	base/Command.h	/^  stKillBossUserCmd()$/;"	f	struct:Cmd::stKillBossUserCmd
stKillBossUserCmd	base/Command.h	/^ struct stKillBossUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stKillForeignerUserCmd	base/Command.h	/^  stKillForeignerUserCmd()$/;"	f	struct:Cmd::stKillForeignerUserCmd
stKillForeignerUserCmd	base/Command.h	/^ struct stKillForeignerUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stKillForeignerUserCmd	tmpcode/commond.h	/^	stKillForeignerUserCmd()$/;"	f	struct:stKillForeignerUserCmd
stKillForeignerUserCmd	tmpcode/commond.h	/^struct stKillForeignerUserCmd: public stChatUserCmd$/;"	s
stKingCallCountryCmd	tmpcode/commond.h	/^	stKingCallCountryCmd()$/;"	f	struct:stKingCallCountryCmd
stKingCallCountryCmd	tmpcode/commond.h	/^struct stKingCallCountryCmd : public stCountryUserCmd$/;"	s
stKingCloseBorderUserCmd	tmpcode/commond.h	/^	stKingCloseBorderUserCmd()$/;"	f	struct:stKingCloseBorderUserCmd
stKingCloseBorderUserCmd	tmpcode/commond.h	/^struct stKingCloseBorderUserCmd : public stCountryUserCmd$/;"	s
stKingPunishCountryCmd	base/Command.h	/^  stKingPunishCountryCmd()$/;"	f	struct:Cmd::stKingPunishCountryCmd
stKingPunishCountryCmd	base/Command.h	/^struct stKingPunishCountryCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stKingPunishCountryCmd	tmpcode/commond.h	/^	stKingPunishCountryCmd(const char *_name)$/;"	f	struct:stKingPunishCountryCmd
stKingPunishCountryCmd	tmpcode/commond.h	/^struct stKingPunishCountryCmd : public stCountryUserCmd$/;"	s
stKokChatUserCmd	base/Command.h	/^    stKokChatUserCmd()$/;"	f	struct:Cmd::stKokChatUserCmd
stKokChatUserCmd	base/Command.h	/^struct stKokChatUserCmd : public stChatUserCmd$/;"	s	namespace:Cmd
stKokChatUserCmd	tmpcode/commond.h	/^       stKokChatUserCmd()$/;"	f	struct:stKokChatUserCmd
stKokChatUserCmd	tmpcode/commond.h	/^ struct  stKokChatUserCmd: public stChatUserCmd$/;"	s
stKuangBaoSwitchMagicUserCmd	tmpcode/commond.h	/^	stKuangBaoSwitchMagicUserCmd()$/;"	f	struct:stKuangBaoSwitchMagicUserCmd
stKuangBaoSwitchMagicUserCmd	tmpcode/commond.h	/^struct stKuangBaoSwitchMagicUserCmd : public stMagicUserCmd$/;"	s
stLTQDataLTQUserCmd	tmpcode/commond.h	/^	stLTQDataLTQUserCmd()$/;"	f	struct:stLTQDataLTQUserCmd
stLTQDataLTQUserCmd	tmpcode/commond.h	/^struct stLTQDataLTQUserCmd : public stLTQUserCmd$/;"	s
stLTQUserCmd	tmpcode/commond.h	/^	stLTQUserCmd()$/;"	f	struct:stLTQUserCmd
stLTQUserCmd	tmpcode/commond.h	/^struct stLTQUserCmd : public stNullUserCmd$/;"	s
stLandItem	tmpcode/commond.h	/^	stLandItem()$/;"	f	struct:stLandItem
stLandItem	tmpcode/commond.h	/^struct stLandItem$/;"	s
stLandMassJumpMoveUserCmd	base/Command.h	/^    stLandMassJumpMoveUserCmd()$/;"	f	struct:Cmd::stLandMassJumpMoveUserCmd
stLandMassJumpMoveUserCmd	base/Command.h	/^  struct stLandMassJumpMoveUserCmd : public stMoveUserCmd{$/;"	s	namespace:Cmd
stLastLoginInfoSelectUserCmd	tmpcode/commond.h	/^	stLastLoginInfoSelectUserCmd()$/;"	f	struct:stLastLoginInfoSelectUserCmd
stLastLoginInfoSelectUserCmd	tmpcode/commond.h	/^struct stLastLoginInfoSelectUserCmd : public stSelectUserCmd$/;"	s
stLearnFakeSkillLingQiUserCmd	tmpcode/commond.h	/^    stLearnFakeSkillLingQiUserCmd()$/;"	f	struct:stLearnFakeSkillLingQiUserCmd
stLearnFakeSkillLingQiUserCmd	tmpcode/commond.h	/^struct stLearnFakeSkillLingQiUserCmd : public stLingQiUserCmd$/;"	s
stLeaveDTUserCmd	tmpcode/commond.h	/^	stLeaveDTUserCmd()$/;"	f	struct:stLeaveDTUserCmd
stLeaveDTUserCmd	tmpcode/commond.h	/^struct stLeaveDTUserCmd: public stDragonTotemUserCmd$/;"	s
stLeaveDaTaoShaUserCmd	tmpcode/commond.h	/^         stLeaveDaTaoShaUserCmd()$/;"	f	struct:stLeaveDaTaoShaUserCmd
stLeaveDaTaoShaUserCmd	tmpcode/commond.h	/^ struct stLeaveDaTaoShaUserCmd : public stDaTaoShaUserCmd$/;"	s
stLeaveHeroIslandUserCmd	tmpcode/commond.h	/^	stLeaveHeroIslandUserCmd()$/;"	f	struct:stLeaveHeroIslandUserCmd
stLeaveHeroIslandUserCmd	tmpcode/commond.h	/^struct stLeaveHeroIslandUserCmd: public stHeroIslandUserCmd$/;"	s
stLeaveMsgUnionCmd	tmpcode/commond.h	/^	stLeaveMsgUnionCmd()$/;"	f	struct:stLeaveMsgUnionCmd
stLeaveMsgUnionCmd	tmpcode/commond.h	/^struct stLeaveMsgUnionCmd : public stUnionUserCmd$/;"	s
stLeavePrison	base/Command.h	/^  stLeavePrison()$/;"	f	struct:Cmd::stLeavePrison
stLeavePrison	base/Command.h	/^struct stLeavePrison : public stPrisonUserCmd$/;"	s	namespace:Cmd
stLeaveQuestMapUserCmd	tmpcode/commond.h	/^    stLeaveQuestMapUserCmd()$/;"	f	struct:stLeaveQuestMapUserCmd
stLeaveQuestMapUserCmd	tmpcode/commond.h	/^struct stLeaveQuestMapUserCmd : public stQuestMapUserCmd$/;"	s
stLeaveRoomQuestRoomUserCmd	tmpcode/commond.h	/^	stLeaveRoomQuestRoomUserCmd(): \/*questID(0), levelMark(0), *\/roomID(0)$/;"	f	struct:stLeaveRoomQuestRoomUserCmd
stLeaveRoomQuestRoomUserCmd	tmpcode/commond.h	/^struct stLeaveRoomQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stLeaveSeptBattleUserCmd	tmpcode/commond.h	/^	stLeaveSeptBattleUserCmd()$/;"	f	struct:stLeaveSeptBattleUserCmd
stLeaveSeptBattleUserCmd	tmpcode/commond.h	/^struct stLeaveSeptBattleUserCmd : public stSeptBattleUserCmd$/;"	s
stLeaveSeptPopoUserCmd	tmpcode/commond.h	/^	stLeaveSeptPopoUserCmd()$/;"	f	struct:stLeaveSeptPopoUserCmd
stLeaveSeptPopoUserCmd	tmpcode/commond.h	/^struct stLeaveSeptPopoUserCmd : public stSeptPopoUserCmd$/;"	s
stLeave_ChannelUserCmd	base/Command.h	/^  stLeave_ChannelUserCmd()$/;"	f	struct:Cmd::stLeave_ChannelUserCmd
stLeave_ChannelUserCmd	base/Command.h	/^struct  stLeave_ChannelUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stLeave_ChannelUserCmd	tmpcode/commond.h	/^	stLeave_ChannelUserCmd()$/;"	f	struct:stLeave_ChannelUserCmd
stLeave_ChannelUserCmd	tmpcode/commond.h	/^struct  stLeave_ChannelUserCmd: public stChatUserCmd$/;"	s
stLeftTimeMaxLevelLimitUserCmd	tmpcode/commond.h	/^	stLeftTimeMaxLevelLimitUserCmd()$/;"	f	struct:stLeftTimeMaxLevelLimitUserCmd
stLeftTimeMaxLevelLimitUserCmd	tmpcode/commond.h	/^struct stLeftTimeMaxLevelLimitUserCmd :public stMaxLevelLimitUserCmd$/;"	s
stLeftTimePrison	tmpcode/commond.h	/^    stLeftTimePrison()$/;"	f	struct:stLeftTimePrison
stLeftTimePrison	tmpcode/commond.h	/^struct stLeftTimePrison : public stPrisonUserCmd$/;"	s
stLetOffTankCmd	tmpcode/commond.h	/^	stLetOffTankCmd()$/;"	f	struct:stLetOffTankCmd
stLetOffTankCmd	tmpcode/commond.h	/^struct stLetOffTankCmd : public stTankUserCmd$/;"	s
stLetOutCartoonCmd	base/Command.h	/^  stLetOutCartoonCmd()$/;"	f	struct:Cmd::stLetOutCartoonCmd
stLetOutCartoonCmd	base/Command.h	/^struct stLetOutCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stLevelDecayHouseUserCmd	tmpcode/commond.h	/^	stLevelDecayHouseUserCmd()$/;"	f	struct:stLevelDecayHouseUserCmd
stLevelDecayHouseUserCmd	tmpcode/commond.h	/^struct stLevelDecayHouseUserCmd : public stLingQiDecayUserCmd$/;"	s
stLevelDegreeDataUserCmd	base/Command.h	/^    stLevelDegreeDataUserCmd()$/;"	f	struct:Cmd::stLevelDegreeDataUserCmd
stLevelDegreeDataUserCmd	base/Command.h	/^  struct stLevelDegreeDataUserCmd : public stDataUserCmd{$/;"	s	namespace:Cmd
stLevelDegreeDataUserCmd	tmpcode/commond.h	/^	stLevelDegreeDataUserCmd()$/;"	f	struct:stLevelDegreeDataUserCmd
stLevelDegreeDataUserCmd	tmpcode/commond.h	/^struct stLevelDegreeDataUserCmd : public stDataUserCmd$/;"	s
stLevelUpLingQiUserCmd	tmpcode/commond.h	/^    stLevelUpLingQiUserCmd()$/;"	f	struct:stLevelUpLingQiUserCmd
stLevelUpLingQiUserCmd	tmpcode/commond.h	/^struct stLevelUpLingQiUserCmd : public stLingQiUserCmd$/;"	s
stLevelUpLivingRoomUserCmd	tmpcode/commond.h	/^	stLevelUpLivingRoomUserCmd()$/;"	f	struct:stLevelUpLivingRoomUserCmd
stLevelUpLivingRoomUserCmd	tmpcode/commond.h	/^struct stLevelUpLivingRoomUserCmd : public stHomeUserCmd$/;"	s
stLevelUpRoomUserCmd	tmpcode/commond.h	/^	stLevelUpRoomUserCmd()$/;"	f	struct:stLevelUpRoomUserCmd
stLevelUpRoomUserCmd	tmpcode/commond.h	/^struct stLevelUpRoomUserCmd : public stHomeUserCmd$/;"	s
stLevelUpUserCmd	base/Command.h	/^    stLevelUpUserCmd()$/;"	f	struct:Cmd::stLevelUpUserCmd
stLevelUpUserCmd	base/Command.h	/^  struct stLevelUpUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stLevelUpUserCmd	tmpcode/commond.h	/^        stLevelUpUserCmd()$/;"	f	struct:stLevelUpUserCmd
stLevelUpUserCmd	tmpcode/commond.h	/^struct stLevelUpUserCmd : public stMagicUserCmd$/;"	s
stLevelUpYardUserCmd	tmpcode/commond.h	/^	stLevelUpYardUserCmd()$/;"	f	struct:stLevelUpYardUserCmd
stLevelUpYardUserCmd	tmpcode/commond.h	/^struct stLevelUpYardUserCmd : public stHomeUserCmd$/;"	s
stLingQiDecayUserCmd	tmpcode/commond.h	/^	stLingQiDecayUserCmd()$/;"	f	struct:stLingQiDecayUserCmd
stLingQiDecayUserCmd	tmpcode/commond.h	/^struct stLingQiDecayUserCmd : public stNullUserCmd$/;"	s
stLingQiSkillUserCmd	tmpcode/commond.h	/^    stLingQiSkillUserCmd()$/;"	f	struct:stLingQiSkillUserCmd
stLingQiSkillUserCmd	tmpcode/commond.h	/^struct stLingQiSkillUserCmd :public stLingQiUserCmd$/;"	s
stLingQiUserCmd	tmpcode/commond.h	/^	stLingQiUserCmd()$/;"	f	struct:stLingQiUserCmd
stLingQiUserCmd	tmpcode/commond.h	/^struct stLingQiUserCmd : public stNullUserCmd$/;"	s
stListGift	base/Command.h	/^  stListGift()$/;"	f	struct:Cmd::stListGift
stListGift	base/Command.h	/^struct stListGift : public stGiftUserCmd$/;"	s	namespace:Cmd
stListGift	tmpcode/commond.h	/^        stListGift()$/;"	f	struct:stListGift
stListGift	tmpcode/commond.h	/^struct stListGift : public stGiftUserCmd$/;"	s
stListLingQiUserCmd	tmpcode/commond.h	/^	stListLingQiUserCmd()$/;"	f	struct:stListLingQiUserCmd
stListLingQiUserCmd	tmpcode/commond.h	/^struct stListLingQiUserCmd : public stLingQiUserCmd$/;"	s
stListQuestTradeUserCmd	tmpcode/commond.h	/^	stListQuestTradeUserCmd()$/;"	f	struct:stListQuestTradeUserCmd
stListQuestTradeUserCmd	tmpcode/commond.h	/^struct stListQuestTradeUserCmd:public stTradeUserCmd$/;"	s
stListSeptCmd	base/Command.h	/^  stListSeptCmd()$/;"	f	struct:Cmd::stListSeptCmd
stListSeptCmd	base/Command.h	/^struct stListSeptCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stListUnionCmd	base/Command.h	/^  stListUnionCmd()$/;"	f	struct:Cmd::stListUnionCmd
stListUnionCmd	base/Command.h	/^struct stListUnionCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stLiuXingHuoYuMagicUserCmd	tmpcode/commond.h	/^	stLiuXingHuoYuMagicUserCmd()$/;"	f	struct:stLiuXingHuoYuMagicUserCmd
stLiuXingHuoYuMagicUserCmd	tmpcode/commond.h	/^struct stLiuXingHuoYuMagicUserCmd : public stMagicUserCmd$/;"	s
stLoadMapOKDataUserCmd	base/Command.h	/^    stLoadMapOKDataUserCmd()$/;"	f	struct:Cmd::stLoadMapOKDataUserCmd
stLoadMapOKDataUserCmd	base/Command.h	/^  struct stLoadMapOKDataUserCmd : public stDataUserCmd{$/;"	s	namespace:Cmd
stLockBetChallengeUserCmd	tmpcode/commond.h	/^	stLockBetChallengeUserCmd()$/;"	f	struct:stLockBetChallengeUserCmd
stLockBetChallengeUserCmd	tmpcode/commond.h	/^struct stLockBetChallengeUserCmd:public stChallengeGameUserCmd$/;"	s
stLockTradeUserCmd	tmpcode/commond.h	/^        stLockTradeUserCmd()$/;"	f	struct:stLockTradeUserCmd
stLockTradeUserCmd	tmpcode/commond.h	/^struct stLockTradeUserCmd:public stTradeUserCmd$/;"	s
stLogOffBusinessTask	tmpcode/commond.h	/^	stLogOffBusinessTask() : stBusinessUserCmd(LOGOFF_BUSINESS_TASK_USERCMD) {};$/;"	f	struct:stLogOffBusinessTask
stLogOffBusinessTask	tmpcode/commond.h	/^struct stLogOffBusinessTask : public stBusinessUserCmd $/;"	s
stLoginPing	base/Command.h	/^  stLoginPing() $/;"	f	struct:Cmd::stLoginPing
stLoginPing	base/Command.h	/^struct stLoginPing : public stPingUserCmd$/;"	s	namespace:Cmd
stLoginSelectSuccessUserCmd	base/Command.h	/^    stLoginSelectSuccessUserCmd()$/;"	f	struct:Cmd::stLoginSelectSuccessUserCmd
stLoginSelectSuccessUserCmd	base/Command.h	/^struct stLoginSelectSuccessUserCmd : public stSelectUserCmd$/;"	s	namespace:Cmd
stLoginSelectSuccessUserCmd	tmpcode/commond.h	/^	stLoginSelectSuccessUserCmd()$/;"	f	struct:stLoginSelectSuccessUserCmd
stLoginSelectSuccessUserCmd	tmpcode/commond.h	/^struct stLoginSelectSuccessUserCmd : public stSelectUserCmd$/;"	s
stLoginSelectUserCmd	base/Command.h	/^  stLoginSelectUserCmd()$/;"	f	struct:Cmd::stLoginSelectUserCmd
stLoginSelectUserCmd	base/Command.h	/^struct stLoginSelectUserCmd : public stSelectUserCmd$/;"	s	namespace:Cmd
stLoginSelectUserCmd	tmpcode/commond.h	/^	stLoginSelectUserCmd(const DWORD _charNo\/*, const int _x1, const int _y1*\/)$/;"	f	struct:stLoginSelectUserCmd
stLoginSelectUserCmd	tmpcode/commond.h	/^struct stLoginSelectUserCmd : public stSelectUserCmd$/;"	s
stLogonUserCmd	base/Command.h	/^	stLogonUserCmd()$/;"	f	struct:Cmd::stLogonUserCmd
stLogonUserCmd	base/Command.h	/^    struct stLogonUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stLogonUserCmd	tmpcode/commond.h	/^	stLogonUserCmd()$/;"	f	struct:stLogonUserCmd
stLogonUserCmd	tmpcode/commond.h	/^struct stLogonUserCmd : public stNullUserCmd$/;"	s
stLoseAimMagicUserCmd	tmpcode/commond.h	/^	stLoseAimMagicUserCmd()       $/;"	f	struct:stLoseAimMagicUserCmd
stLoseAimMagicUserCmd	tmpcode/commond.h	/^struct stLoseAimMagicUserCmd : public stMagicUserCmd$/;"	s
stLuoRiXiaGuUserCmd	tmpcode/commond.h	/^        stLuoRiXiaGuUserCmd()$/;"	f	struct:stLuoRiXiaGuUserCmd
stLuoRiXiaGuUserCmd	tmpcode/commond.h	/^struct stLuoRiXiaGuUserCmd : public stNullUserCmd$/;"	s
stMagicEffectUserCmd	tmpcode/commond.h	/^    stMagicEffectUserCmd()$/;"	f	struct:stMagicEffectUserCmd
stMagicEffectUserCmd	tmpcode/commond.h	/^struct stMagicEffectUserCmd : public stMapScreenUserCmd$/;"	s
stMagicHorseLastTimeCmd	tmpcode/commond.h	/^    stMagicHorseLastTimeCmd()$/;"	f	struct:stMagicHorseLastTimeCmd
stMagicHorseLastTimeCmd	tmpcode/commond.h	/^struct stMagicHorseLastTimeCmd :public stMapScreenUserCmd$/;"	s
stMagicUserCmd	base/Command.h	/^    stMagicUserCmd()$/;"	f	struct:Cmd::stMagicUserCmd
stMagicUserCmd	base/Command.h	/^  struct stMagicUserCmd : public stNullUserCmd{$/;"	s	namespace:Cmd
stMagicUserCmd	tmpcode/commond.h	/^	stMagicUserCmd()$/;"	f	struct:stMagicUserCmd
stMagicUserCmd	tmpcode/commond.h	/^struct stMagicUserCmd : public stNullUserCmd$/;"	s
stMailUserCmd	base/Command.h	/^  stMailUserCmd()$/;"	f	struct:Cmd::stMailUserCmd
stMailUserCmd	base/Command.h	/^struct stMailUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stMailUserCmd	tmpcode/commond.h	/^        stMailUserCmd()$/;"	f	struct:stMailUserCmd
stMailUserCmd	tmpcode/commond.h	/^struct stMailUserCmd : public stNullUserCmd$/;"	s
stMainUserDataUserCmd	base/Command.h	/^    stMainUserDataUserCmd()$/;"	f	struct:Cmd::stMainUserDataUserCmd
stMainUserDataUserCmd	base/Command.h	/^  struct stMainUserDataUserCmd : public stDataUserCmd {$/;"	s	namespace:Cmd
stMainUserDataUserCmd	tmpcode/commond.h	/^	stMainUserDataUserCmd()$/;"	f	struct:stMainUserDataUserCmd
stMainUserDataUserCmd	tmpcode/commond.h	/^struct stMainUserDataUserCmd : public stDataUserCmd {$/;"	s
stMainUserDeathReliveUserCmd	base/Command.h	/^    stMainUserDeathReliveUserCmd()$/;"	f	struct:Cmd::stMainUserDeathReliveUserCmd
stMainUserDeathReliveUserCmd	base/Command.h	/^  struct stMainUserDeathReliveUserCmd : public stReliveUserCmd{$/;"	s	namespace:Cmd
stMainUserDeathReliveUserCmd	tmpcode/commond.h	/^	stMainUserDeathReliveUserCmd()$/;"	f	struct:stMainUserDeathReliveUserCmd
stMainUserDeathReliveUserCmd	tmpcode/commond.h	/^struct stMainUserDeathReliveUserCmd : public stReliveUserCmd$/;"	s
stMainUserReliveReliveUserCmd	base/Command.h	/^    stMainUserReliveReliveUserCmd()$/;"	f	struct:Cmd::stMainUserReliveReliveUserCmd
stMainUserReliveReliveUserCmd	base/Command.h	/^  struct stMainUserReliveReliveUserCmd : public stReliveUserCmd{$/;"	s	namespace:Cmd
stMainUserReliveReliveUserCmd	tmpcode/commond.h	/^	stMainUserReliveReliveUserCmd()$/;"	f	struct:stMainUserReliveReliveUserCmd
stMainUserReliveReliveUserCmd	tmpcode/commond.h	/^struct stMainUserReliveReliveUserCmd : public stReliveUserCmd$/;"	s
stMapBuildMapScreenUserCmd	tmpcode/commond.h	/^	stMapBuildMapScreenUserCmd()$/;"	f	struct:stMapBuildMapScreenUserCmd
stMapBuildMapScreenUserCmd	tmpcode/commond.h	/^struct stMapBuildMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s
stMapDataHomeUserCmd	tmpcode/commond.h	/^	stMapDataHomeUserCmd()$/;"	f	struct:stMapDataHomeUserCmd
stMapDataHomeUserCmd	tmpcode/commond.h	/^struct stMapDataHomeUserCmd : public stHomeUserCmd$/;"	s
stMapDataMapScreenStateUserCmd	base/Command.h	/^    stMapDataMapScreenStateUserCmd()$/;"	f	struct:Cmd::stMapDataMapScreenStateUserCmd
stMapDataMapScreenStateUserCmd	base/Command.h	/^  struct stMapDataMapScreenStateUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stMapDataMapScreenUserCmd	base/Command.h	/^    stMapDataMapScreenUserCmd()$/;"	f	struct:Cmd::stMapDataMapScreenUserCmd
stMapDataMapScreenUserCmd	base/Command.h	/^  struct stMapDataMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stMapDataMapScreenUserCmd	tmpcode/commond.h	/^	stMapDataMapScreenUserCmd()$/;"	f	struct:stMapDataMapScreenUserCmd
stMapDataMapScreenUserCmd	tmpcode/commond.h	/^struct stMapDataMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stMapDecorationScreenUserCmd	tmpcode/commond.h	/^	stMapDecorationScreenUserCmd()$/;"	f	struct:stMapDecorationScreenUserCmd
stMapDecorationScreenUserCmd	tmpcode/commond.h	/^struct stMapDecorationScreenUserCmd : public stMapScreenUserCmd$/;"	s
stMapFileHeader	Robot/LoadMap.h	/^struct stMapFileHeader$/;"	s
stMapFileHeader	ScenesServer/LoadMap.h	/^struct stMapFileHeader$/;"	s
stMapMagicEffectUserCmd	tmpcode/commond.h	/^    stMapMagicEffectUserCmd()$/;"	f	struct:stMapMagicEffectUserCmd
stMapMagicEffectUserCmd	tmpcode/commond.h	/^struct stMapMagicEffectUserCmd : public stMapScreenUserCmd$/;"	s
stMapName	ScenesServer/Scene.h	/^      stMapName()$/;"	f	struct:Scene::stMapName
stMapName	ScenesServer/Scene.h	/^    struct stMapName$/;"	s	class:Scene
stMapScreenSizeDataUserCmd	base/Command.h	/^    stMapScreenSizeDataUserCmd()$/;"	f	struct:Cmd::stMapScreenSizeDataUserCmd
stMapScreenSizeDataUserCmd	base/Command.h	/^  struct stMapScreenSizeDataUserCmd : public stDataUserCmd{$/;"	s	namespace:Cmd
stMapScreenUserCmd	base/Command.h	/^    stMapScreenUserCmd()$/;"	f	struct:Cmd::stMapScreenUserCmd
stMapScreenUserCmd	base/Command.h	/^  struct stMapScreenUserCmd : public stNullUserCmd{$/;"	s	namespace:Cmd
stMapScreenUserCmd	tmpcode/commond.h	/^	stMapScreenUserCmd()$/;"	f	struct:stMapScreenUserCmd
stMapScreenUserCmd	tmpcode/commond.h	/^struct stMapScreenUserCmd : public stNullUserCmd$/;"	s
stMarriagePresentBlessCmd	tmpcode/commond.h	/^	stMarriagePresentBlessCmd()$/;"	f	struct:stMarriagePresentBlessCmd
stMarriagePresentBlessCmd	tmpcode/commond.h	/^struct stMarriagePresentBlessCmd : stRelationUserCmd$/;"	s
stMarriagePresentFlowerCmd	tmpcode/commond.h	/^	stMarriagePresentFlowerCmd()$/;"	f	struct:stMarriagePresentFlowerCmd
stMarriagePresentFlowerCmd	tmpcode/commond.h	/^struct stMarriagePresentFlowerCmd : stRelationUserCmd$/;"	s
stMarriageSpreadFlowerCmd	tmpcode/commond.h	/^	stMarriageSpreadFlowerCmd()$/;"	f	struct:stMarriageSpreadFlowerCmd
stMarriageSpreadFlowerCmd	tmpcode/commond.h	/^struct stMarriageSpreadFlowerCmd : public stRelationUserCmd$/;"	s
stMarryPrayCmd	tmpcode/commond.h	/^	stMarryPrayCmd()$/;"	f	struct:stMarryPrayCmd
stMarryPrayCmd	tmpcode/commond.h	/^struct stMarryPrayCmd : public stRelationUserCmd$/;"	s
stMarryStatusCheckCmd	base/Command.h	/^  stMarryStatusCheckCmd()$/;"	f	struct:Cmd::stMarryStatusCheckCmd
stMarryStatusCheckCmd	base/Command.h	/^struct stMarryStatusCheckCmd  : public stRelationUserCmd$/;"	s	namespace:Cmd
stMarryStatusCheckCmd	tmpcode/commond.h	/^	stMarryStatusCheckCmd()$/;"	f	struct:stMarryStatusCheckCmd
stMarryStatusCheckCmd	tmpcode/commond.h	/^struct stMarryStatusCheckCmd  : public stRelationUserCmd$/;"	s
stMatchedInfo	SessionServer/HeroCardManager.h	/^    stMatchedInfo()$/;"	f	struct:stMatchedInfo
stMatchedInfo	SessionServer/HeroCardManager.h	/^struct stMatchedInfo$/;"	s
stMaterialDecayHouseUserCmd	tmpcode/commond.h	/^	stMaterialDecayHouseUserCmd()$/;"	f	struct:stMaterialDecayHouseUserCmd
stMaterialDecayHouseUserCmd	tmpcode/commond.h	/^struct stMaterialDecayHouseUserCmd : public stLingQiDecayUserCmd$/;"	s
stMaxLevelLimitUserCmd	tmpcode/commond.h	/^	stMaxLevelLimitUserCmd()$/;"	f	struct:stMaxLevelLimitUserCmd
stMaxLevelLimitUserCmd	tmpcode/commond.h	/^struct stMaxLevelLimitUserCmd : public stNullUserCmd$/;"	s
stMember	base/SessionCommand.h	/^		stMember()$/;"	f	struct:Cmd::Session::stMember
stMember	base/SessionCommand.h	/^	struct stMember$/;"	s	namespace:Cmd::Session
stMercenaryCallDuty	tmpcode/commond.h	/^        stMercenaryCallDuty()$/;"	f	struct:stMercenaryCallDuty
stMercenaryCallDuty	tmpcode/commond.h	/^struct stMercenaryCallDuty : public stDareUserCmd$/;"	s
stMercenaryCountryAlly	tmpcode/commond.h	/^        stMercenaryCountryAlly()$/;"	f	struct:stMercenaryCountryAlly
stMercenaryCountryAlly	tmpcode/commond.h	/^struct stMercenaryCountryAlly : public stAllyUserCmd$/;"	s
stMercenaryCountryHelpUserCmd	tmpcode/commond.h	/^        stMercenaryCountryHelpUserCmd()$/;"	f	struct:stMercenaryCountryHelpUserCmd
stMercenaryCountryHelpUserCmd	tmpcode/commond.h	/^struct stMercenaryCountryHelpUserCmd: public stChatUserCmd$/;"	s
stMerchInfo	tmpcode/commond.h	/^	stMerchInfo()$/;"	f	struct:stMerchInfo
stMerchInfo	tmpcode/commond.h	/^struct stMerchInfo$/;"	s
stMergeLingQiUserCmd	tmpcode/commond.h	/^	stMergeLingQiUserCmd()$/;"	f	struct:stMergeLingQiUserCmd
stMergeLingQiUserCmd	tmpcode/commond.h	/^struct stMergeLingQiUserCmd : public stLingQiUserCmd$/;"	s
stMergeVersionCheckUserCmd	base/Command.h	/^  stMergeVersionCheckUserCmd()$/;"	f	struct:Cmd::stMergeVersionCheckUserCmd
stMergeVersionCheckUserCmd	base/Command.h	/^struct stMergeVersionCheckUserCmd : public stDataUserCmd$/;"	s	namespace:Cmd
stMidJoinQuestMapUserCmd	tmpcode/commond.h	/^	stMidJoinQuestMapUserCmd()$/;"	f	struct:stMidJoinQuestMapUserCmd
stMidJoinQuestMapUserCmd	tmpcode/commond.h	/^struct stMidJoinQuestMapUserCmd : public stQuestMapUserCmd$/;"	s
stModifyHomeDataUserCmd	tmpcode/commond.h	/^	stModifyHomeDataUserCmd()$/;"	f	struct:stModifyHomeDataUserCmd
stModifyHomeDataUserCmd	tmpcode/commond.h	/^struct stModifyHomeDataUserCmd : public stHomeUserCmd$/;"	s
stMoveDecorationCmd	tmpcode/commond.h	/^	stMoveDecorationCmd()$/;"	f	struct:stMoveDecorationCmd
stMoveDecorationCmd	tmpcode/commond.h	/^struct stMoveDecorationCmd: public stDecorationUserCmd$/;"	s
stMoveFurnitureHomeUserCmd	tmpcode/commond.h	/^	stMoveFurnitureHomeUserCmd()$/;"	f	struct:stMoveFurnitureHomeUserCmd
stMoveFurnitureHomeUserCmd	tmpcode/commond.h	/^struct stMoveFurnitureHomeUserCmd : public stHomeUserCmd$/;"	s
stMoveFurnitureInStorageUserCmd	tmpcode/commond.h	/^	stMoveFurnitureInStorageUserCmd()$/;"	f	struct:stMoveFurnitureInStorageUserCmd
stMoveFurnitureInStorageUserCmd	tmpcode/commond.h	/^struct stMoveFurnitureInStorageUserCmd : public stHomeUserCmd$/;"	s
stMoveGameCardUserCmd	base/HeroCardCmd.h	/^	stMoveGameCardUserCmd()$/;"	f	struct:Cmd::stMoveGameCardUserCmd
stMoveGameCardUserCmd	base/HeroCardCmd.h	/^    struct stMoveGameCardUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stMoveGoodsToGuardSeptCmd	tmpcode/commond.h	/^    stMoveGoodsToGuardSeptCmd()$/;"	f	struct:stMoveGoodsToGuardSeptCmd
stMoveGoodsToGuardSeptCmd	tmpcode/commond.h	/^struct stMoveGoodsToGuardSeptCmd : public stSeptUserCmd$/;"	s
stMoveHorseToStableCmd	tmpcode/commond.h	/^    stMoveHorseToStableCmd()$/;"	f	struct:stMoveHorseToStableCmd
stMoveHorseToStableCmd	tmpcode/commond.h	/^struct stMoveHorseToStableCmd : public stPetUserCmd$/;"	s
stMoveUserCmd	base/Command.h	/^    stMoveUserCmd()$/;"	f	struct:Cmd::stMoveUserCmd
stMoveUserCmd	base/Command.h	/^  struct stMoveUserCmd : public stNullUserCmd{$/;"	s	namespace:Cmd
stMoveUserCmd	tmpcode/commond.h	/^	stMoveUserCmd()$/;"	f	struct:stMoveUserCmd
stMoveUserCmd	tmpcode/commond.h	/^struct stMoveUserCmd : public stNullUserCmd$/;"	s
stMsgGmTool	base/Command.h	/^  stMsgGmTool()$/;"	f	struct:Cmd::stMsgGmTool
stMsgGmTool	base/Command.h	/^struct stMsgGmTool : public stGmToolUserCmd$/;"	s	namespace:Cmd
stMyContributeSeptCmd	tmpcode/commond.h	/^	stMyContributeSeptCmd(const DWORD value) {$/;"	f	struct:stMyContributeSeptCmd
stMyContributeSeptCmd	tmpcode/commond.h	/^struct stMyContributeSeptCmd : public stSeptUserCmd {$/;"	s
stNPCHPMapScreenUserCmd	base/Command.h	/^    stNPCHPMapScreenUserCmd()$/;"	f	struct:Cmd::stNPCHPMapScreenUserCmd
stNPCHPMapScreenUserCmd	base/Command.h	/^  struct stNPCHPMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stNSUserCmd	tmpcode/commond.h	/^	stNSUserCmd()$/;"	f	struct:stNSUserCmd
stNSUserCmd	tmpcode/commond.h	/^struct stNSUserCmd: public stNullUserCmd$/;"	s
stNameCard	tmpcode/commond.h	/^        stNameCard()$/;"	f	struct:stNameCard
stNameCard	tmpcode/commond.h	/^struct stNameCard$/;"	s
stNameCardPropertyUserCmd	tmpcode/commond.h	/^        stNameCardPropertyUserCmd()$/;"	f	struct:stNameCardPropertyUserCmd
stNameCardPropertyUserCmd	tmpcode/commond.h	/^struct stNameCardPropertyUserCmd : public stPropertyUserCmd$/;"	s
stNeedMoneyAndBaseSuccessRateUserCmd	tmpcode/commond.h	/^    stNeedMoneyAndBaseSuccessRateUserCmd()$/;"	f	struct:stNeedMoneyAndBaseSuccessRateUserCmd
stNeedMoneyAndBaseSuccessRateUserCmd	tmpcode/commond.h	/^struct stNeedMoneyAndBaseSuccessRateUserCmd : public stPetUserCmd$/;"	s
stNewHistoryStockUserCmd	base/Command.h	/^  stNewHistoryStockUserCmd() $/;"	f	struct:Cmd::stNewHistoryStockUserCmd
stNewHistoryStockUserCmd	base/Command.h	/^struct stNewHistoryStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stNewMasterQuestRoomUserCmd	tmpcode/commond.h	/^    stNewMasterQuestRoomUserCmd(): questID(0), levelMark(0), roomID(0), newMasterJob(0)$/;"	f	struct:stNewMasterQuestRoomUserCmd
stNewMasterQuestRoomUserCmd	tmpcode/commond.h	/^struct stNewMasterQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stNewUnionMerchListInfo	tmpcode/commond.h	/^        stNewUnionMerchListInfo()$/;"	f	struct:stNewUnionMerchListInfo
stNewUnionMerchListInfo	tmpcode/commond.h	/^struct stNewUnionMerchListInfo : public stUnionUserCmd$/;"	s
stNewYearActionUserCmd	tmpcode/commond.h	/^	stNewYearActionUserCmd()$/;"	f	struct:stNewYearActionUserCmd
stNewYearActionUserCmd	tmpcode/commond.h	/^struct stNewYearActionUserCmd : public stNullUserCmd$/;"	s
stNewbieGiftUserCmd	tmpcode/commond.h	/^	stNewbieGiftUserCmd()$/;"	f	struct:stNewbieGiftUserCmd
stNewbieGiftUserCmd	tmpcode/commond.h	/^struct stNewbieGiftUserCmd : public stPropertyUserCmd$/;"	s
stNobilityUserCmd	tmpcode/commond.h	/^	stNobilityUserCmd()$/;"	f	struct:stNobilityUserCmd
stNobilityUserCmd	tmpcode/commond.h	/^struct stNobilityUserCmd : public stNullUserCmd$/;"	s
stNofityBetResultInChallengeDragonUserCmd	tmpcode/commond.h	/^    stNofityBetResultInChallengeDragonUserCmd()$/;"	f	struct:stNofityBetResultInChallengeDragonUserCmd
stNofityBetResultInChallengeDragonUserCmd	tmpcode/commond.h	/^struct stNofityBetResultInChallengeDragonUserCmd : public stDragonUserCmd$/;"	s
stNominateOfficialUserCmd	tmpcode/commond.h	/^        stNominateOfficialUserCmd()$/;"	f	struct:stNominateOfficialUserCmd
stNominateOfficialUserCmd	tmpcode/commond.h	/^struct stNominateOfficialUserCmd : public stOfficialUserCmd$/;"	s
stNotAcceptSurveyUserCmd	tmpcode/commond.h	/^	stNotAcceptSurveyUserCmd()$/;"	f	struct:stNotAcceptSurveyUserCmd
stNotAcceptSurveyUserCmd	tmpcode/commond.h	/^struct stNotAcceptSurveyUserCmd : public stSurveyUserCmd$/;"	s
stNotAgreeReplayMerencryCountryCmd	tmpcode/commond.h	/^        stNotAgreeReplayMerencryCountryCmd()$/;"	f	struct:stNotAgreeReplayMerencryCountryCmd
stNotAgreeReplayMerencryCountryCmd	tmpcode/commond.h	/^struct stNotAgreeReplayMerencryCountryCmd:public stCountryUserCmd$/;"	s
stNoteSeptCmd	base/Command.h	/^  stNoteSeptCmd()$/;"	f	struct:Cmd::stNoteSeptCmd
stNoteSeptCmd	base/Command.h	/^struct stNoteSeptCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stNoteSeptCmd	tmpcode/commond.h	/^	stNoteSeptCmd()$/;"	f	struct:stNoteSeptCmd
stNoteSeptCmd	tmpcode/commond.h	/^struct stNoteSeptCmd: public stSeptUserCmd$/;"	s
stNoteUnionCmd	base/Command.h	/^  stNoteUnionCmd()$/;"	f	struct:Cmd::stNoteUnionCmd
stNoteUnionCmd	base/Command.h	/^struct stNoteUnionCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stNoteUnionCmd	tmpcode/commond.h	/^	stNoteUnionCmd()$/;"	f	struct:stNoteUnionCmd
stNoteUnionCmd	tmpcode/commond.h	/^struct stNoteUnionCmd: public stUnionUserCmd$/;"	s
stNoticeMasterPerformFlagCmd	tmpcode/commond.h	/^	stNoticeMasterPerformFlagCmd()$/;"	f	struct:stNoticeMasterPerformFlagCmd
stNoticeMasterPerformFlagCmd	tmpcode/commond.h	/^struct stNoticeMasterPerformFlagCmd : public stSeptUserCmd$/;"	s
stNoticeStopSeptFlag	tmpcode/commond.h	/^	stNoticeStopSeptFlag()$/;"	f	struct:stNoticeStopSeptFlag
stNoticeStopSeptFlag	tmpcode/commond.h	/^struct stNoticeStopSeptFlag : public stSeptUserCmd$/;"	s
stNoticeUserPerformFlagCmd	tmpcode/commond.h	/^	stNoticeUserPerformFlagCmd()$/;"	f	struct:stNoticeUserPerformFlagCmd
stNoticeUserPerformFlagCmd	tmpcode/commond.h	/^struct stNoticeUserPerformFlagCmd : public stChatUserCmd$/;"	s
stNotifyAddExpLingQiUserCmd	tmpcode/commond.h	/^	stNotifyAddExpLingQiUserCmd()$/;"	f	struct:stNotifyAddExpLingQiUserCmd
stNotifyAddExpLingQiUserCmd	tmpcode/commond.h	/^struct stNotifyAddExpLingQiUserCmd : public stLingQiUserCmd$/;"	s
stNotifyAddFurnitureHomeUserCmd	tmpcode/commond.h	/^	stNotifyAddFurnitureHomeUserCmd()$/;"	f	struct:stNotifyAddFurnitureHomeUserCmd
stNotifyAddFurnitureHomeUserCmd	tmpcode/commond.h	/^struct stNotifyAddFurnitureHomeUserCmd : public stHomeUserCmd$/;"	s
stNotifyAllCardTujianInfoCmd	base/HeroCardCmd.h	/^	stNotifyAllCardTujianInfoCmd()$/;"	f	struct:Cmd::stNotifyAllCardTujianInfoCmd
stNotifyAllCardTujianInfoCmd	base/HeroCardCmd.h	/^    struct stNotifyAllCardTujianInfoCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stNotifyBetDragonFightUserCmd	tmpcode/commond.h	/^	stNotifyBetDragonFightUserCmd()$/;"	f	struct:stNotifyBetDragonFightUserCmd
stNotifyBetDragonFightUserCmd	tmpcode/commond.h	/^struct stNotifyBetDragonFightUserCmd : public stDragonUserCmd$/;"	s
stNotifyBetObjectChallengeUserCmd	tmpcode/commond.h	/^	stNotifyBetObjectChallengeUserCmd()$/;"	f	struct:stNotifyBetObjectChallengeUserCmd
stNotifyBetObjectChallengeUserCmd	tmpcode/commond.h	/^struct stNotifyBetObjectChallengeUserCmd:public stChallengeGameUserCmd$/;"	s
stNotifyCancelTimeCmd	tmpcode/commond.h	/^	stNotifyCancelTimeCmd(DWORD dwTime)$/;"	f	struct:stNotifyCancelTimeCmd
stNotifyCancelTimeCmd	tmpcode/commond.h	/^struct stNotifyCancelTimeCmd : public stSafetyUserCmd$/;"	s
stNotifyCatchBeginUserCmd	tmpcode/commond.h	/^	stNotifyCatchBeginUserCmd()$/;"	f	struct:stNotifyCatchBeginUserCmd
stNotifyCatchBeginUserCmd	tmpcode/commond.h	/^struct stNotifyCatchBeginUserCmd : public stCatchEggUserCmd$/;"	s
stNotifyCatchLingQiBeginUserCmd	tmpcode/commond.h	/^    stNotifyCatchLingQiBeginUserCmd()$/;"	f	struct:stNotifyCatchLingQiBeginUserCmd
stNotifyCatchLingQiBeginUserCmd	tmpcode/commond.h	/^struct stNotifyCatchLingQiBeginUserCmd : public stCatchEggUserCmd$/;"	s
stNotifyChallengeStateDragonUserCmd	tmpcode/commond.h	/^	stNotifyChallengeStateDragonUserCmd()$/;"	f	struct:stNotifyChallengeStateDragonUserCmd
stNotifyChallengeStateDragonUserCmd	tmpcode/commond.h	/^struct stNotifyChallengeStateDragonUserCmd : public stDragonUserCmd$/;"	s
stNotifyChangeJobDataUserCmd	tmpcode/commond.h	/^	stNotifyChangeJobDataUserCmd()$/;"	f	struct:stNotifyChangeJobDataUserCmd
stNotifyChangeJobDataUserCmd	tmpcode/commond.h	/^struct stNotifyChangeJobDataUserCmd : public stDataUserCmd{$/;"	s
stNotifyChangeJobOrZhuanzhiCmd	tmpcode/commond.h	/^    stNotifyChangeJobOrZhuanzhiCmd()$/;"	f	struct:stNotifyChangeJobOrZhuanzhiCmd
stNotifyChangeJobOrZhuanzhiCmd	tmpcode/commond.h	/^struct stNotifyChangeJobOrZhuanzhiCmd : public stRelationUserCmd$/;"	s
stNotifyCityDareLadderUserCmd	tmpcode/commond.h	/^	stNotifyCityDareLadderUserCmd()$/;"	f	struct:stNotifyCityDareLadderUserCmd
stNotifyCityDareLadderUserCmd	tmpcode/commond.h	/^struct stNotifyCityDareLadderUserCmd : public stUnionCityDareUserCmd$/;"	s
stNotifyCityDareSceneUserCmd	tmpcode/commond.h	/^         stNotifyCityDareSceneUserCmd()$/;"	f	struct:stNotifyCityDareSceneUserCmd
stNotifyCityDareSceneUserCmd	tmpcode/commond.h	/^ struct stNotifyCityDareSceneUserCmd : public stUnionCityDareUserCmd$/;"	s
stNotifyClearSealMagicUserCmd	tmpcode/commond.h	/^	stNotifyClearSealMagicUserCmd()$/;"	f	struct:stNotifyClearSealMagicUserCmd
stNotifyClearSealMagicUserCmd	tmpcode/commond.h	/^struct stNotifyClearSealMagicUserCmd : public stMagicUserCmd$/;"	s
stNotifyClearSkill	tmpcode/commond.h	/^        stNotifyClearSkill(const DWORD id) : stUnionSkillUserCmd(NOTIFY_CLEARSKILL_USERCMD) {$/;"	f	struct:stNotifyClearSkill
stNotifyClearSkill	tmpcode/commond.h	/^struct stNotifyClearSkill : public stUnionSkillUserCmd {$/;"	s
stNotifyCountDownUserCmd	tmpcode/commond.h	/^    stNotifyCountDownUserCmd()$/;"	f	struct:stNotifyCountDownUserCmd
stNotifyCountDownUserCmd	tmpcode/commond.h	/^struct stNotifyCountDownUserCmd:public stMapScreenUserCmd $/;"	s
stNotifyDaoJiShiUserCmd	tmpcode/commond.h	/^	 stNotifyDaoJiShiUserCmd()$/;"	f	struct:stNotifyDaoJiShiUserCmd
stNotifyDaoJiShiUserCmd	tmpcode/commond.h	/^struct stNotifyDaoJiShiUserCmd:public stDareUserCmd$/;"	s
stNotifyDare	base/Command.h	/^    stNotifyDare()$/;"	f	struct:Cmd::stNotifyDare
stNotifyDare	base/Command.h	/^struct stNotifyDare : public stDareUserCmd$/;"	s	namespace:Cmd
stNotifyDataChangeDragonUserCmd	tmpcode/commond.h	/^        stNotifyDataChangeDragonUserCmd()$/;"	f	struct:stNotifyDataChangeDragonUserCmd
stNotifyDataChangeDragonUserCmd	tmpcode/commond.h	/^struct stNotifyDataChangeDragonUserCmd : public stDragonUserCmd$/;"	s
stNotifyDecorationUnionID	tmpcode/commond.h	/^	stNotifyDecorationUnionID()$/;"	f	struct:stNotifyDecorationUnionID
stNotifyDecorationUnionID	tmpcode/commond.h	/^struct stNotifyDecorationUnionID : public stDecorationUserCmd$/;"	s
stNotifyEditDance	tmpcode/commond.h	/^        stNotifyEditDance()$/;"	f	struct:stNotifyEditDance
stNotifyEditDance	tmpcode/commond.h	/^struct stNotifyEditDance : public stDanceUserCmd$/;"	s
stNotifyEnterDTUserCmd	tmpcode/commond.h	/^	stNotifyEnterDTUserCmd(): npcID(0), leftSec(0)$/;"	f	struct:stNotifyEnterDTUserCmd
stNotifyEnterDTUserCmd	tmpcode/commond.h	/^struct stNotifyEnterDTUserCmd: public stDragonTotemUserCmd$/;"	s
stNotifyEquipLingliLingQiUserCmd	tmpcode/commond.h	/^	stNotifyEquipLingliLingQiUserCmd()$/;"	f	struct:stNotifyEquipLingliLingQiUserCmd
stNotifyEquipLingliLingQiUserCmd	tmpcode/commond.h	/^struct stNotifyEquipLingliLingQiUserCmd : public stLingQiUserCmd$/;"	s
stNotifyFightEnemyInfoUserCmd	base/HeroCardCmd.h	/^	stNotifyFightEnemyInfoUserCmd()$/;"	f	struct:Cmd::stNotifyFightEnemyInfoUserCmd
stNotifyFightEnemyInfoUserCmd	base/HeroCardCmd.h	/^    struct stNotifyFightEnemyInfoUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stNotifyFinishDecayHouseUserCmd	tmpcode/commond.h	/^	stNotifyFinishDecayHouseUserCmd()$/;"	f	struct:stNotifyFinishDecayHouseUserCmd
stNotifyFinishDecayHouseUserCmd	tmpcode/commond.h	/^struct stNotifyFinishDecayHouseUserCmd : public stLingQiDecayUserCmd$/;"	s
stNotifyFinishedIssueQuestUserCmd	tmpcode/commond.h	/^        stNotifyFinishedIssueQuestUserCmd()$/;"	f	struct:stNotifyFinishedIssueQuestUserCmd
stNotifyFinishedIssueQuestUserCmd	tmpcode/commond.h	/^struct stNotifyFinishedIssueQuestUserCmd : public stQuestUserCmd$/;"	s
stNotifyGetDragonUserCmd	tmpcode/commond.h	/^        stNotifyGetDragonUserCmd()$/;"	f	struct:stNotifyGetDragonUserCmd
stNotifyGetDragonUserCmd	tmpcode/commond.h	/^struct stNotifyGetDragonUserCmd : public stDragonUserCmd$/;"	s
stNotifyGetOffTankCmd	tmpcode/commond.h	/^	stNotifyGetOffTankCmd()$/;"	f	struct:stNotifyGetOffTankCmd
stNotifyGetOffTankCmd	tmpcode/commond.h	/^struct stNotifyGetOffTankCmd : public stTankUserCmd$/;"	s
stNotifyGetOnTankCmd	tmpcode/commond.h	/^	stNotifyGetOnTankCmd()$/;"	f	struct:stNotifyGetOnTankCmd
stNotifyGetOnTankCmd	tmpcode/commond.h	/^struct stNotifyGetOnTankCmd : public stTankUserCmd$/;"	s
stNotifyGetServerPosUserCmd	tmpcode/commond.h	/^	stNotifyGetServerPosUserCmd()$/;"	f	struct:stNotifyGetServerPosUserCmd
stNotifyGetServerPosUserCmd	tmpcode/commond.h	/^struct stNotifyGetServerPosUserCmd : public stQuestUserCmd$/;"	s
stNotifyGetTreasureDragonUserCmd	tmpcode/commond.h	/^	stNotifyGetTreasureDragonUserCmd()$/;"	f	struct:stNotifyGetTreasureDragonUserCmd
stNotifyGetTreasureDragonUserCmd	tmpcode/commond.h	/^struct stNotifyGetTreasureDragonUserCmd : public stDragonUserCmd$/;"	s
stNotifyGottenLifeAwardPromoterUserCmd	tmpcode/commond.h	/^	stNotifyGottenLifeAwardPromoterUserCmd()$/;"	f	struct:stNotifyGottenLifeAwardPromoterUserCmd
stNotifyGottenLifeAwardPromoterUserCmd	tmpcode/commond.h	/^struct stNotifyGottenLifeAwardPromoterUserCmd : public stQuestUserCmd$/;"	s
stNotifyHodeGatherPoint	tmpcode/commond.h	/^        stNotifyHodeGatherPoint()$/;"	f	struct:stNotifyHodeGatherPoint
stNotifyHodeGatherPoint	tmpcode/commond.h	/^struct stNotifyHodeGatherPoint : public stDataUserCmd$/;"	s
stNotifyHongbaoIssueQuestUserCmd	tmpcode/commond.h	/^        stNotifyHongbaoIssueQuestUserCmd()$/;"	f	struct:stNotifyHongbaoIssueQuestUserCmd
stNotifyHongbaoIssueQuestUserCmd	tmpcode/commond.h	/^struct stNotifyHongbaoIssueQuestUserCmd : public stQuestUserCmd$/;"	s
stNotifyJoinLTQUserCmd	tmpcode/commond.h	/^	stNotifyJoinLTQUserCmd()$/;"	f	struct:stNotifyJoinLTQUserCmd
stNotifyJoinLTQUserCmd	tmpcode/commond.h	/^struct stNotifyJoinLTQUserCmd : public stLTQUserCmd$/;"	s
stNotifyKaiQuOver30DayUserCmd	tmpcode/commond.h	/^        stNotifyKaiQuOver30DayUserCmd()$/;"	f	struct:stNotifyKaiQuOver30DayUserCmd
stNotifyKaiQuOver30DayUserCmd	tmpcode/commond.h	/^struct stNotifyKaiQuOver30DayUserCmd : public stDataUserCmd$/;"	s
stNotifyLastBetWinDragonUserCmd	tmpcode/commond.h	/^	stNotifyLastBetWinDragonUserCmd()$/;"	f	struct:stNotifyLastBetWinDragonUserCmd
stNotifyLastBetWinDragonUserCmd	tmpcode/commond.h	/^struct stNotifyLastBetWinDragonUserCmd : public stDragonUserCmd$/;"	s
stNotifyLeaveLTQUserCmd	tmpcode/commond.h	/^	stNotifyLeaveLTQUserCmd()$/;"	f	struct:stNotifyLeaveLTQUserCmd
stNotifyLeaveLTQUserCmd	tmpcode/commond.h	/^struct stNotifyLeaveLTQUserCmd : public stLTQUserCmd$/;"	s
stNotifyLevelFormQuestRoomUserCmd	tmpcode/commond.h	/^    stNotifyLevelFormQuestRoomUserCmd(): questID(0),minMemCount(0), maxMemCount(0), len$/;"	f	struct:stNotifyLevelFormQuestRoomUserCmd
stNotifyLevelFormQuestRoomUserCmd	tmpcode/commond.h	/^struct stNotifyLevelFormQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stNotifyLingliLingQiUserCmd	tmpcode/commond.h	/^	stNotifyLingliLingQiUserCmd()$/;"	f	struct:stNotifyLingliLingQiUserCmd
stNotifyLingliLingQiUserCmd	tmpcode/commond.h	/^struct stNotifyLingliLingQiUserCmd : public stLingQiUserCmd$/;"	s
stNotifyMarketAllObjectPropertyUserCmd	base/Command.h	/^    stNotifyMarketAllObjectPropertyUserCmd()$/;"	f	struct:Cmd::stNotifyMarketAllObjectPropertyUserCmd
stNotifyMarketAllObjectPropertyUserCmd	base/Command.h	/^struct stNotifyMarketAllObjectPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stNotifyMinusExpLingQiUserCmd	tmpcode/commond.h	/^	stNotifyMinusExpLingQiUserCmd()$/;"	f	struct:stNotifyMinusExpLingQiUserCmd
stNotifyMinusExpLingQiUserCmd	tmpcode/commond.h	/^struct stNotifyMinusExpLingQiUserCmd : public stLingQiUserCmd$/;"	s
stNotifyNameCardChangeUserCmd	tmpcode/commond.h	/^        stNotifyNameCardChangeUserCmd()$/;"	f	struct:stNotifyNameCardChangeUserCmd
stNotifyNameCardChangeUserCmd	tmpcode/commond.h	/^struct stNotifyNameCardChangeUserCmd : public stPropertyUserCmd$/;"	s
stNotifyNewMail	base/Command.h	/^  stNotifyNewMail()$/;"	f	struct:Cmd::stNotifyNewMail
stNotifyNewMail	base/Command.h	/^struct stNotifyNewMail : public stMailUserCmd$/;"	s	namespace:Cmd
stNotifyNewMail	tmpcode/commond.h	/^        stNotifyNewMail()$/;"	f	struct:stNotifyNewMail
stNotifyNewMail	tmpcode/commond.h	/^struct stNotifyNewMail : public stMailUserCmd$/;"	s
stNotifyOneCardTujianInfoCmd	base/HeroCardCmd.h	/^	stNotifyOneCardTujianInfoCmd()$/;"	f	struct:Cmd::stNotifyOneCardTujianInfoCmd
stNotifyOneCardTujianInfoCmd	base/HeroCardCmd.h	/^    struct stNotifyOneCardTujianInfoCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stNotifyOnlineInfoGrecommendUserCmd	tmpcode/commond.h	/^	stNotifyOnlineInfoGrecommendUserCmd()$/;"	f	struct:stNotifyOnlineInfoGrecommendUserCmd
stNotifyOnlineInfoGrecommendUserCmd	tmpcode/commond.h	/^struct stNotifyOnlineInfoGrecommendUserCmd : public stRecommendUserCmd$/;"	s
stNotifyOpenManteauWindow	tmpcode/commond.h	/^	stNotifyOpenManteauWindow()$/;"	f	struct:stNotifyOpenManteauWindow
stNotifyOpenManteauWindow	tmpcode/commond.h	/^struct stNotifyOpenManteauWindow : public stUnionUserCmd$/;"	s
stNotifyPatternUserCmd	tmpcode/commond.h	/^        stNotifyPatternUserCmd()        $/;"	f	struct:stNotifyPatternUserCmd
stNotifyPatternUserCmd	tmpcode/commond.h	/^struct stNotifyPatternUserCmd : public stPropertyUserCmd$/;"	s
stNotifyRentPackInfoUserCmd	tmpcode/commond.h	/^	stNotifyRentPackInfoUserCmd()$/;"	f	struct:stNotifyRentPackInfoUserCmd
stNotifyRentPackInfoUserCmd	tmpcode/commond.h	/^struct stNotifyRentPackInfoUserCmd : public stDataUserCmd$/;"	s
stNotifyReqJoinLTQUserCmd	tmpcode/commond.h	/^	stNotifyReqJoinLTQUserCmd()$/;"	f	struct:stNotifyReqJoinLTQUserCmd
stNotifyReqJoinLTQUserCmd	tmpcode/commond.h	/^struct stNotifyReqJoinLTQUserCmd : public stLTQUserCmd$/;"	s
stNotifySafetyDetailUserCmd	tmpcode/commond.h	/^	stNotifySafetyDetailUserCmd()$/;"	f	struct:stNotifySafetyDetailUserCmd
stNotifySafetyDetailUserCmd	tmpcode/commond.h	/^struct stNotifySafetyDetailUserCmd : public stSafetyUserCmd$/;"	s
stNotifySafetyUserCmd	tmpcode/commond.h	/^	stNotifySafetyUserCmd()$/;"	f	struct:stNotifySafetyUserCmd
stNotifySafetyUserCmd	tmpcode/commond.h	/^struct stNotifySafetyUserCmd : public stSafetyUserCmd$/;"	s
stNotifySalaryUnionCmd	tmpcode/commond.h	/^	stNotifySalaryUnionCmd()$/;"	f	struct:stNotifySalaryUnionCmd
stNotifySalaryUnionCmd	tmpcode/commond.h	/^struct stNotifySalaryUnionCmd : public stUnionUserCmd$/;"	s
stNotifySealValueMagicUserCmd	tmpcode/commond.h	/^	stNotifySealValueMagicUserCmd()$/;"	f	struct:stNotifySealValueMagicUserCmd
stNotifySealValueMagicUserCmd	tmpcode/commond.h	/^struct stNotifySealValueMagicUserCmd : public stMagicUserCmd$/;"	s
stNotifySeptLeave	tmpcode/commond.h	/^	stNotifySeptLeave()$/;"	f	struct:stNotifySeptLeave
stNotifySeptLeave	tmpcode/commond.h	/^struct stNotifySeptLeave : public stUnionUserCmd$/;"	s
stNotifyShenLongReward	tmpcode/commond.h	/^    stNotifyShenLongReward()$/;"	f	struct:stNotifyShenLongReward
stNotifyShenLongReward	tmpcode/commond.h	/^struct stNotifyShenLongReward : public stChatUserCmd$/;"	s
stNotifySpecialFeedDragonUserCmd	tmpcode/commond.h	/^        stNotifySpecialFeedDragonUserCmd()$/;"	f	struct:stNotifySpecialFeedDragonUserCmd
stNotifySpecialFeedDragonUserCmd	tmpcode/commond.h	/^struct stNotifySpecialFeedDragonUserCmd : public stDragonUserCmd$/;"	s
stNotifyStateAndTimeZhenXuanUserCmd	tmpcode/commond.h	/^	stNotifyStateAndTimeZhenXuanUserCmd()$/;"	f	struct:stNotifyStateAndTimeZhenXuanUserCmd
stNotifyStateAndTimeZhenXuanUserCmd	tmpcode/commond.h	/^struct stNotifyStateAndTimeZhenXuanUserCmd : public stZhenxuanJingjiUserCmd$/;"	s
stNotifySuccessPutCityQuest	tmpcode/commond.h	/^    stNotifySuccessPutCityQuest()$/;"	f	struct:stNotifySuccessPutCityQuest
stNotifySuccessPutCityQuest	tmpcode/commond.h	/^struct stNotifySuccessPutCityQuest : public stMapScreenUserCmd$/;"	s
stNotifyTop2DragonUserCmd	tmpcode/commond.h	/^	stNotifyTop2DragonUserCmd()$/;"	f	struct:stNotifyTop2DragonUserCmd
stNotifyTop2DragonUserCmd	tmpcode/commond.h	/^struct stNotifyTop2DragonUserCmd : public stDragonUserCmd$/;"	s
stNotifyTransPropertyUserCmd	tmpcode/commond.h	/^	stNotifyTransPropertyUserCmd()$/;"	f	struct:stNotifyTransPropertyUserCmd
stNotifyTransPropertyUserCmd	tmpcode/commond.h	/^struct stNotifyTransPropertyUserCmd : public stPropertyUserCmd$/;"	s
stNotifyUserBodyPowerUserCmd	tmpcode/commond.h	/^	stNotifyUserBodyPowerUserCmd()$/;"	f	struct:stNotifyUserBodyPowerUserCmd
stNotifyUserBodyPowerUserCmd	tmpcode/commond.h	/^struct stNotifyUserBodyPowerUserCmd : public stDataUserCmd$/;"	s
stNotifyUserPrayCmd	tmpcode/commond.h	/^	stNotifyUserPrayCmd()$/;"	f	struct:stNotifyUserPrayCmd
stNotifyUserPrayCmd	tmpcode/commond.h	/^struct stNotifyUserPrayCmd : public stUnionCityDareUserCmd$/;"	s
stNotifyWenMingInfoUserCmd	tmpcode/commond.h	/^	stNotifyWenMingInfoUserCmd(): topLevel(0), worldLevel(0), maxLevel(0)$/;"	f	struct:stNotifyWenMingInfoUserCmd
stNotifyWenMingInfoUserCmd	tmpcode/commond.h	/^struct stNotifyWenMingInfoUserCmd: public stWenMingNCUserCmd$/;"	s
stNpcChatUserCmd	tmpcode/commond.h	/^	stNpcChatUserCmd()$/;"	f	struct:stNpcChatUserCmd
stNpcChatUserCmd	tmpcode/commond.h	/^struct stNpcChatUserCmd : public stChatUserCmd$/;"	s
stNpcComposeItemPropertyUserCmd	tmpcode/commond.h	/^    stNpcComposeItemPropertyUserCmd()$/;"	f	struct:stNpcComposeItemPropertyUserCmd
stNpcComposeItemPropertyUserCmd	tmpcode/commond.h	/^struct stNpcComposeItemPropertyUserCmd : public stPropertyUserCmd {$/;"	s
stNpcDareStopTimerCmd	tmpcode/commond.h	/^         stNpcDareStopTimerCmd()$/;"	f	struct:stNpcDareStopTimerCmd
stNpcDareStopTimerCmd	tmpcode/commond.h	/^ struct stNpcDareStopTimerCmd : public stNpcDareUserCmd$/;"	s
stNpcDareTimeCmd	tmpcode/commond.h	/^	stNpcDareTimeCmd()$/;"	f	struct:stNpcDareTimeCmd
stNpcDareTimeCmd	tmpcode/commond.h	/^struct stNpcDareTimeCmd : public stNpcDareUserCmd$/;"	s
stNpcDareUserCmd	base/Command.h	/^  stNpcDareUserCmd()$/;"	f	struct:Cmd::stNpcDareUserCmd
stNpcDareUserCmd	base/Command.h	/^struct stNpcDareUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stNpcDareUserCmd	tmpcode/commond.h	/^	stNpcDareUserCmd()$/;"	f	struct:stNpcDareUserCmd
stNpcDareUserCmd	tmpcode/commond.h	/^struct stNpcDareUserCmd : public stNullUserCmd$/;"	s
stNpcDeathUserCmd	base/Command.h	/^    stNpcDeathUserCmd()$/;"	f	struct:Cmd::stNpcDeathUserCmd
stNpcDeathUserCmd	base/Command.h	/^  struct stNpcDeathUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stNpcDeathUserCmd	tmpcode/commond.h	/^    stNpcDeathUserCmd()$/;"	f	struct:stNpcDeathUserCmd
stNpcDeathUserCmd	tmpcode/commond.h	/^struct stNpcDeathUserCmd : public stMagicUserCmd$/;"	s
stNpcDoActionUserCmd	tmpcode/commond.h	/^    stNpcDoActionUserCmd()$/;"	f	struct:stNpcDoActionUserCmd
stNpcDoActionUserCmd	tmpcode/commond.h	/^struct stNpcDoActionUserCmd : public stMapScreenUserCmd$/;"	s
stNpcEmoteUserCmd	tmpcode/commond.h	/^    stNpcEmoteUserCmd()$/;"	f	struct:stNpcEmoteUserCmd
stNpcEmoteUserCmd	tmpcode/commond.h	/^struct stNpcEmoteUserCmd : public stMapScreenUserCmd$/;"	s
stNpcLifeTimeCountUserCmd	tmpcode/commond.h	/^	stNpcLifeTimeCountUserCmd()$/;"	f	struct:stNpcLifeTimeCountUserCmd
stNpcLifeTimeCountUserCmd	tmpcode/commond.h	/^struct stNpcLifeTimeCountUserCmd : public stMapScreenUserCmd$/;"	s
stNpcLimitMagicUserCmd	tmpcode/commond.h	/^	stNpcLimitMagicUserCmd()$/;"	f	struct:stNpcLimitMagicUserCmd
stNpcLimitMagicUserCmd	tmpcode/commond.h	/^struct stNpcLimitMagicUserCmd : public stMagicUserCmd$/;"	s
stNpcMoveMoveUserCmd	base/Command.h	/^    stNpcMoveMoveUserCmd()$/;"	f	struct:Cmd::stNpcMoveMoveUserCmd
stNpcMoveMoveUserCmd	base/Command.h	/^  struct stNpcMoveMoveUserCmd : public stMoveUserCmd{$/;"	s	namespace:Cmd
stNpcMoveMoveUserCmd	tmpcode/commond.h	/^	stNpcMoveMoveUserCmd()$/;"	f	struct:stNpcMoveMoveUserCmd
stNpcMoveMoveUserCmd	tmpcode/commond.h	/^struct stNpcMoveMoveUserCmd : public stMoveUserCmd{$/;"	s
stNpcPosition	base/Command.h	/^struct stNpcPosition{$/;"	s	namespace:Cmd
stNpcTempID	base/Command.h	/^struct stNpcTempID{$/;"	s	namespace:Cmd
stNpcUpgradePropertyUserCmd	tmpcode/commond.h	/^        stNpcUpgradePropertyUserCmd()$/;"	f	struct:stNpcUpgradePropertyUserCmd
stNpcUpgradePropertyUserCmd	tmpcode/commond.h	/^struct stNpcUpgradePropertyUserCmd : public stPropertyUserCmd$/;"	s
stNullUserCmd	base/NullUserCmd.h	/^  stNullUserCmd()$/;"	f	struct:Cmd::stNullUserCmd
stNullUserCmd	base/NullUserCmd.h	/^struct stNullUserCmd{$/;"	s	namespace:Cmd
stNullUserCmd	tmpcode/commond.h	/^struct stNullUserCmd{$/;"	s
stOKReliveUserCmd	base/Command.h	/^    stOKReliveUserCmd()$/;"	f	struct:Cmd::stOKReliveUserCmd
stOKReliveUserCmd	base/Command.h	/^  struct stOKReliveUserCmd : public stReliveUserCmd{$/;"	s	namespace:Cmd
stOKReliveUserCmd	tmpcode/commond.h	/^	stOKReliveUserCmd()$/;"	f	struct:stOKReliveUserCmd
stOKReliveUserCmd	tmpcode/commond.h	/^struct stOKReliveUserCmd : public stReliveUserCmd$/;"	s
stObjModeTeamMemberUserCmd	base/Command.h	/^  stObjModeTeamMemberUserCmd()$/;"	f	struct:Cmd::stObjModeTeamMemberUserCmd
stObjModeTeamMemberUserCmd	base/Command.h	/^struct stObjModeTeamMemberUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stObjModeTeamMemberUserCmd	tmpcode/commond.h	/^	stObjModeTeamMemberUserCmd()$/;"	f	struct:stObjModeTeamMemberUserCmd
stObjModeTeamMemberUserCmd	tmpcode/commond.h	/^struct stObjModeTeamMemberUserCmd: public stChatUserCmd$/;"	s
stObjectExchangeUserCmd	tmpcode/commond.h	/^	stObjectExchangeUserCmd()$/;"	f	struct:stObjectExchangeUserCmd
stObjectExchangeUserCmd	tmpcode/commond.h	/^struct stObjectExchangeUserCmd : public stPropertyUserCmd$/;"	s
stObjectExpUserCmd	base/Command.h	/^    stObjectExpUserCmd()$/;"	f	struct:Cmd::stObjectExpUserCmd
stObjectExpUserCmd	base/Command.h	/^  struct stObjectExpUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stObjectExpUserCmd	tmpcode/commond.h	/^        stObjectExpUserCmd()$/;"	f	struct:stObjectExpUserCmd
stObjectExpUserCmd	tmpcode/commond.h	/^struct stObjectExpUserCmd : public stMagicUserCmd{$/;"	s
stObjectHpMpPopUserCmd	base/Command.h	/^  stObjectHpMpPopUserCmd()$/;"	f	struct:Cmd::stObjectHpMpPopUserCmd
stObjectHpMpPopUserCmd	base/Command.h	/^struct stObjectHpMpPopUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stObjectHpMpPopUserCmd	tmpcode/commond.h	/^    stObjectHpMpPopUserCmd()$/;"	f	struct:stObjectHpMpPopUserCmd
stObjectHpMpPopUserCmd	tmpcode/commond.h	/^struct stObjectHpMpPopUserCmd : public stMagicUserCmd\/\/±∏”√$/;"	s
stObjectLocation	base/Object.h	/^	stObjectLocation()$/;"	f	struct:stObjectLocation
stObjectLocation	base/Object.h	/^	stObjectLocation(DWORD loc, DWORD tab, WORD _x, WORD _y)$/;"	f	struct:stObjectLocation
stObjectLocation	base/Object.h	/^	stObjectLocation(const stObjectLocation& loc)$/;"	f	struct:stObjectLocation
stObjectLocation	base/Object.h	/^struct	stObjectLocation$/;"	s
stObserveQuestRoomUserCmd	tmpcode/commond.h	/^	stObserveQuestRoomUserCmd(): questID(0), levelMark(0), page(0)$/;"	f	struct:stObserveQuestRoomUserCmd
stObserveQuestRoomUserCmd	tmpcode/commond.h	/^struct stObserveQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stObtainExpUserCmd	base/Command.h	/^    stObtainExpUserCmd()$/;"	f	struct:Cmd::stObtainExpUserCmd
stObtainExpUserCmd	base/Command.h	/^  struct stObtainExpUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stObtainExpUserCmd	tmpcode/commond.h	/^	stObtainExpUserCmd()$/;"	f	struct:stObtainExpUserCmd
stObtainExpUserCmd	tmpcode/commond.h	/^struct stObtainExpUserCmd : public stMagicUserCmd$/;"	s
stOfficialUserCmd	tmpcode/commond.h	/^        stOfficialUserCmd()$/;"	f	struct:stOfficialUserCmd
stOfficialUserCmd	tmpcode/commond.h	/^struct stOfficialUserCmd : public stNullUserCmd$/;"	s
stOfflineLTQUserCmd	tmpcode/commond.h	/^	stOfflineLTQUserCmd()$/;"	f	struct:stOfflineLTQUserCmd
stOfflineLTQUserCmd	tmpcode/commond.h	/^struct stOfflineLTQUserCmd : public stLTQUserCmd$/;"	s
stOneRoomAllInfoQuestRoomUserCmd	tmpcode/commond.h	/^    stOneRoomAllInfoQuestRoomUserCmd(): questID(0), levelMark(0), roomID(0), bPassword($/;"	f	struct:stOneRoomAllInfoQuestRoomUserCmd
stOneRoomAllInfoQuestRoomUserCmd	tmpcode/commond.h	/^struct stOneRoomAllInfoQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stOnlineLTQUserCmd	tmpcode/commond.h	/^	stOnlineLTQUserCmd()$/;"	f	struct:stOnlineLTQUserCmd
stOnlineLTQUserCmd	tmpcode/commond.h	/^struct stOnlineLTQUserCmd : public stLTQUserCmd$/;"	s
stOnoffReceiveLTQUserCmd	tmpcode/commond.h	/^	stOnoffReceiveLTQUserCmd()$/;"	f	struct:stOnoffReceiveLTQUserCmd
stOnoffReceiveLTQUserCmd	tmpcode/commond.h	/^struct stOnoffReceiveLTQUserCmd : public stLTQUserCmd$/;"	s
stOpenFarmUserCmd	tmpcode/commond.h	/^	stOpenFarmUserCmd()$/;"	f	struct:stOpenFarmUserCmd
stOpenFarmUserCmd	tmpcode/commond.h	/^struct stOpenFarmUserCmd : public stUnionPlantUserCmd$/;"	s
stOpenHelpGm	tmpcode/commond.h	/^    stOpenHelpGm()      $/;"	f	struct:stOpenHelpGm
stOpenHelpGm	tmpcode/commond.h	/^struct stOpenHelpGm : public stGmToolUserCmd$/;"	s
stOpenMagicForgeObject	tmpcode/commond.h	/^	stOpenMagicForgeObject()$/;"	f	struct:stOpenMagicForgeObject
stOpenMagicForgeObject	tmpcode/commond.h	/^struct stOpenMagicForgeObject : public stUnionUserCmd$/;"	s
stOpenMail	base/Command.h	/^  stOpenMail()$/;"	f	struct:Cmd::stOpenMail
stOpenMail	base/Command.h	/^struct stOpenMail : public stMailUserCmd$/;"	s	namespace:Cmd
stOpenMail	tmpcode/commond.h	/^        stOpenMail()$/;"	f	struct:stOpenMail
stOpenMail	tmpcode/commond.h	/^struct stOpenMail : public stMailUserCmd$/;"	s
stOpenMarriagePressCmd	tmpcode/commond.h	/^	stOpenMarriagePressCmd()$/;"	f	struct:stOpenMarriagePressCmd
stOpenMarriagePressCmd	tmpcode/commond.h	/^struct stOpenMarriagePressCmd : stRelationUserCmd$/;"	s
stOpenMarrySetCmd	tmpcode/commond.h	/^	stOpenMarrySetCmd()$/;"	f	struct:stOpenMarrySetCmd
stOpenMarrySetCmd	tmpcode/commond.h	/^struct stOpenMarrySetCmd  : public stRelationUserCmd$/;"	s
stOpenMarryStateCmd	tmpcode/commond.h	/^	stOpenMarryStateCmd()$/;"	f	struct:stOpenMarryStateCmd
stOpenMarryStateCmd	tmpcode/commond.h	/^struct stOpenMarryStateCmd : public stRelationUserCmd$/;"	s
stOpenPrivateChatForce	tmpcode/commond.h	/^        stOpenPrivateChatForce()$/;"	f	struct:stOpenPrivateChatForce
stOpenPrivateChatForce	tmpcode/commond.h	/^struct stOpenPrivateChatForce : public stChatUserCmd$/;"	s
stOpenStoreTradeUserCmd	tmpcode/commond.h	/^	stOpenStoreTradeUserCmd()$/;"	f	struct:stOpenStoreTradeUserCmd
stOpenStoreTradeUserCmd	tmpcode/commond.h	/^struct stOpenStoreTradeUserCmd : public stTradeUserCmd$/;"	s
stOpenTrasureUserCmd	tmpcode/commond.h	/^	stOpenTrasureUserCmd()$/;"	f	struct:stOpenTrasureUserCmd
stOpenTrasureUserCmd	tmpcode/commond.h	/^struct stOpenTrasureUserCmd : public stMagicUserCmd$/;"	s
stOpenWindowEvolveHorseUserCmd	tmpcode/commond.h	/^    stOpenWindowEvolveHorseUserCmd()$/;"	f	struct:stOpenWindowEvolveHorseUserCmd
stOpenWindowEvolveHorseUserCmd	tmpcode/commond.h	/^struct stOpenWindowEvolveHorseUserCmd : public stPetUserCmd$/;"	s
stOpenWindow_ChannelUserCmd	tmpcode/commond.h	/^	 stOpenWindow_ChannelUserCmd()$/;"	f	struct:stOpenWindow_ChannelUserCmd
stOpenWindow_ChannelUserCmd	tmpcode/commond.h	/^ struct stOpenWindow_ChannelUserCmd: public stChatUserCmd$/;"	s
stOptGmTool	tmpcode/commond.h	/^        stOptGmTool()$/;"	f	struct:stOptGmTool
stOptGmTool	tmpcode/commond.h	/^struct stOptGmTool : public stGmToolUserCmd$/;"	s
stOtherDrinkBarCmd	tmpcode/commond.h	/^	 stOtherDrinkBarCmd()$/;"	f	struct:stOtherDrinkBarCmd
stOtherDrinkBarCmd	tmpcode/commond.h	/^ struct stOtherDrinkBarCmd: public stBarUserCmd$/;"	s
stOtherUserMoveMoveUserCmd	tmpcode/commond.h	/^	stOtherUserMoveMoveUserCmd()$/;"	f	struct:stOtherUserMoveMoveUserCmd
stOtherUserMoveMoveUserCmd	tmpcode/commond.h	/^struct stOtherUserMoveMoveUserCmd : public stMoveUserCmd $/;"	s
stOutPrison	base/Command.h	/^  stOutPrison()$/;"	f	struct:Cmd::stOutPrison
stOutPrison	base/Command.h	/^struct stOutPrison : public stPrisonUserCmd$/;"	s	namespace:Cmd
stOverOneHourIssueQuestUserCmd	tmpcode/commond.h	/^        stOverOneHourIssueQuestUserCmd()$/;"	f	struct:stOverOneHourIssueQuestUserCmd
stOverOneHourIssueQuestUserCmd	tmpcode/commond.h	/^struct stOverOneHourIssueQuestUserCmd : public stQuestUserCmd$/;"	s
stOvertopMoneyUnionBusinessCmd	tmpcode/commond.h	/^	stOvertopMoneyUnionBusinessCmd() : stBusinessUserCmd(OVERTOPMONEY_UNION_BUSINESS_USERCMD) {};$/;"	f	struct:stOvertopMoneyUnionBusinessCmd
stOvertopMoneyUnionBusinessCmd	tmpcode/commond.h	/^struct stOvertopMoneyUnionBusinessCmd : public stBusinessUserCmd $/;"	s
stPKModeUserCmd	base/Command.h	/^    stPKModeUserCmd()$/;"	f	struct:Cmd::stPKModeUserCmd
stPKModeUserCmd	base/Command.h	/^  struct stPKModeUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stPKModeUserCmd	tmpcode/commond.h	/^    stPKModeUserCmd()$/;"	f	struct:stPKModeUserCmd
stPKModeUserCmd	tmpcode/commond.h	/^struct stPKModeUserCmd : public stMagicUserCmd$/;"	s
stPassowrdStockUserCmd	base/Command.h	/^  stPassowrdStockUserCmd()$/;"	f	struct:Cmd::stPassowrdStockUserCmd
stPassowrdStockUserCmd	base/Command.h	/^struct stPassowrdStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stPassowrdStockUserCmd	tmpcode/commond.h	/^	stPassowrdStockUserCmd()$/;"	f	struct:stPassowrdStockUserCmd
stPassowrdStockUserCmd	tmpcode/commond.h	/^struct stPassowrdStockUserCmd : public stStockBillUserCmd$/;"	s
stPasswdLogonUserCmd	base/Command.h	/^  stPasswdLogonUserCmd()$/;"	f	struct:Cmd::stPasswdLogonUserCmd
stPasswdLogonUserCmd	base/Command.h	/^struct stPasswdLogonUserCmd : public stLogonUserCmd$/;"	s	namespace:Cmd
stPasswdLogonUserCmd	tmpcode/commond.h	/^	stPasswdLogonUserCmd()$/;"	f	struct:stPasswdLogonUserCmd
stPasswdLogonUserCmd	tmpcode/commond.h	/^struct stPasswdLogonUserCmd : public stLogonUserCmd$/;"	s
stPasswordLogonUserCmd	base/Command.h	/^    stPasswordLogonUserCmd()$/;"	f	struct:Cmd::stPasswordLogonUserCmd
stPasswordLogonUserCmd	base/Command.h	/^  struct stPasswordLogonUserCmd : public stLogonUserCmd {$/;"	s	namespace:Cmd
stPattern	tmpcode/commond.h	/^        struct stPattern{$/;"	s	struct:stNotifyPatternUserCmd
stPattern	tmpcode/commond.h	/^        struct stPattern{$/;"	s	struct:stRetShowSkillStoreInfo
stPersonResultChallengeUserCmd	tmpcode/commond.h	/^	stPersonResultChallengeUserCmd()$/;"	f	struct:stPersonResultChallengeUserCmd
stPersonResultChallengeUserCmd	tmpcode/commond.h	/^struct stPersonResultChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stPersonalSign	tmpcode/commond.h	/^struct stPersonalSign$/;"	s
stPetUserCmd	base/Command.h	/^  stPetUserCmd()$/;"	f	struct:Cmd::stPetUserCmd
stPetUserCmd	base/Command.h	/^struct stPetUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stPetUserCmd	tmpcode/commond.h	/^    stPetUserCmd()$/;"	f	struct:stPetUserCmd
stPetUserCmd	tmpcode/commond.h	/^struct stPetUserCmd : public stNullUserCmd$/;"	s
stPickObjSeptPopoUserCmd	tmpcode/commond.h	/^	stPickObjSeptPopoUserCmd()$/;"	f	struct:stPickObjSeptPopoUserCmd
stPickObjSeptPopoUserCmd	tmpcode/commond.h	/^struct stPickObjSeptPopoUserCmd : public stSeptPopoUserCmd$/;"	s
stPickUpItemPropertyUserCmd	base/Command.h	/^    stPickUpItemPropertyUserCmd()$/;"	f	struct:Cmd::stPickUpItemPropertyUserCmd
stPickUpItemPropertyUserCmd	base/Command.h	/^  struct stPickUpItemPropertyUserCmd : public stPropertyUserCmd {$/;"	s	namespace:Cmd
stPickUpItemPropertyUserCmd	tmpcode/commond.h	/^	stPickUpItemPropertyUserCmd()$/;"	f	struct:stPickUpItemPropertyUserCmd
stPickUpItemPropertyUserCmd	tmpcode/commond.h	/^struct stPickUpItemPropertyUserCmd : public stPropertyUserCmd$/;"	s
stPictureEffectMapUserCmd	tmpcode/commond.h	/^	stPictureEffectMapUserCmd()$/;"	f	struct:stPictureEffectMapUserCmd
stPictureEffectMapUserCmd	tmpcode/commond.h	/^struct stPictureEffectMapUserCmd : public stMapScreenUserCmd$/;"	s
stPingList	base/Command.h	/^  stPingList()$/;"	f	struct:Cmd::stPingList
stPingList	base/Command.h	/^struct stPingList : public stPingUserCmd$/;"	s	namespace:Cmd
stPingTimeTimerUserCmd	base/Command.h	/^  stPingTimeTimerUserCmd()$/;"	f	struct:Cmd::stPingTimeTimerUserCmd
stPingTimeTimerUserCmd	base/Command.h	/^struct stPingTimeTimerUserCmd : public stTimerUserCmd$/;"	s	namespace:Cmd
stPingTimeTimerUserCmd	tmpcode/commond.h	/^	stPingTimeTimerUserCmd()$/;"	f	struct:stPingTimeTimerUserCmd
stPingTimeTimerUserCmd	tmpcode/commond.h	/^struct stPingTimeTimerUserCmd : public stTimerUserCmd$/;"	s
stPingUserCmd	base/Command.h	/^  stPingUserCmd()$/;"	f	struct:Cmd::stPingUserCmd
stPingUserCmd	base/Command.h	/^struct stPingUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stPkDataPropertyUserCmd	tmpcode/commond.h	/^        stPkDataPropertyUserCmd()$/;"	f	struct:stPkDataPropertyUserCmd
stPkDataPropertyUserCmd	tmpcode/commond.h	/^struct stPkDataPropertyUserCmd: public stPropertyUserCmd$/;"	s
stPlantSoilHouseUserCmd	tmpcode/commond.h	/^	stPlantSoilHouseUserCmd()$/;"	f	struct:stPlantSoilHouseUserCmd
stPlantSoilHouseUserCmd	tmpcode/commond.h	/^struct stPlantSoilHouseUserCmd: public stHouseUserCmd$/;"	s
stPlaySoundQuestUserCmd	tmpcode/commond.h	/^        stPlaySoundQuestUserCmd()$/;"	f	struct:stPlaySoundQuestUserCmd
stPlaySoundQuestUserCmd	tmpcode/commond.h	/^struct stPlaySoundQuestUserCmd : public stQuestUserCmd$/;"	s
stPointCard	tmpcode/commond.h	/^	stPointCard()$/;"	f	struct:stPointCard
stPointCard	tmpcode/commond.h	/^struct stPointCard: public stGoldUserCmd$/;"	s
stPopUpDailDailyQuestUserCmd	tmpcode/commond.h	/^        stPopUpDailDailyQuestUserCmd()$/;"	f	struct:stPopUpDailDailyQuestUserCmd
stPopUpDailDailyQuestUserCmd	tmpcode/commond.h	/^struct stPopUpDailDailyQuestUserCmd : public stRandomQuestUserCmd$/;"	s
stPopoInfo	tmpcode/commond.h	/^	struct stPopoInfo$/;"	s	struct:stSendScoreSeptPopoUserCmd
stPopoScore	tmpcode/commond.h	/^	stPopoScore()$/;"	f	struct:stPopoScore
stPopoScore	tmpcode/commond.h	/^	struct stPopoScore$/;"	s	struct:stUpdateScoreSeptPopoUserCmd
stPopoScore	tmpcode/commond.h	/^struct stPopoScore$/;"	s
stPopupUI	tmpcode/commond.h	/^struct stPopupUI$/;"	s
stPositionNameListCmd	tmpcode/commond.h	/^	stPositionNameListCmd()$/;"	f	struct:stPositionNameListCmd
stPositionNameListCmd	tmpcode/commond.h	/^struct stPositionNameListCmd : public stSeptUserCmd$/;"	s
stPotentialSkillLevelSwapUserCmd	tmpcode/commond.h	/^	stPotentialSkillLevelSwapUserCmd()$/;"	f	struct:stPotentialSkillLevelSwapUserCmd
stPotentialSkillLevelSwapUserCmd	tmpcode/commond.h	/^struct stPotentialSkillLevelSwapUserCmd : public stPropertyUserCmd$/;"	s
stPreRegSeptPopoUserCmd	tmpcode/commond.h	/^	stPreRegSeptPopoUserCmd()$/;"	f	struct:stPreRegSeptPopoUserCmd
stPreRegSeptPopoUserCmd	tmpcode/commond.h	/^struct stPreRegSeptPopoUserCmd : public stSeptPopoUserCmd$/;"	s
stPresentBarGirlUserCmd	tmpcode/commond.h	/^        stPresentBarGirlUserCmd()$/;"	f	struct:stPresentBarGirlUserCmd
stPresentBarGirlUserCmd	tmpcode/commond.h	/^struct stPresentBarGirlUserCmd: public stBarUserCmd$/;"	s
stPresetCityGuardCmd	tmpcode/commond.h	/^	stPresetCityGuardCmd()$/;"	f	struct:stPresetCityGuardCmd
stPresetCityGuardCmd	tmpcode/commond.h	/^struct stPresetCityGuardCmd : public stCityUserCmd$/;"	s
stPrisonUserCmd	base/Command.h	/^  stPrisonUserCmd()$/;"	f	struct:Cmd::stPrisonUserCmd
stPrisonUserCmd	base/Command.h	/^struct stPrisonUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stPrisonUserCmd	tmpcode/commond.h	/^    stPrisonUserCmd()$/;"	f	struct:stPrisonUserCmd
stPrisonUserCmd	tmpcode/commond.h	/^struct stPrisonUserCmd : public stNullUserCmd$/;"	s
stPrivateStoreNameUserCmd	tmpcode/commond.h	/^	stPrivateStoreNameUserCmd()$/;"	f	struct:stPrivateStoreNameUserCmd
stPrivateStoreNameUserCmd	tmpcode/commond.h	/^struct stPrivateStoreNameUserCmd:public stTradeUserCmd$/;"	s
stPropertyUserCmd	base/Command.h	/^    stPropertyUserCmd()$/;"	f	struct:Cmd::stPropertyUserCmd
stPropertyUserCmd	base/Command.h	/^  struct stPropertyUserCmd : public stNullUserCmd{$/;"	s	namespace:Cmd
stPropertyUserCmd	tmpcode/commond.h	/^		stPropertyUserCmd()$/;"	f	struct:stPropertyUserCmd
stPropertyUserCmd	tmpcode/commond.h	/^struct stPropertyUserCmd : public stNullUserCmd{$/;"	s
stProtectSeptGuardCmd	tmpcode/commond.h	/^        stProtectSeptGuardCmd()$/;"	f	struct:stProtectSeptGuardCmd
stProtectSeptGuardCmd	tmpcode/commond.h	/^struct stProtectSeptGuardCmd : public stSeptUserCmd$/;"	s
stPublishApplyUserCmd	tmpcode/commond.h	/^	stPublishApplyUserCmd()$/;"	f	struct:stPublishApplyUserCmd
stPublishApplyUserCmd	tmpcode/commond.h	/^struct stPublishApplyUserCmd : public stReliveUserCmd{$/;"	s
stPurplePropertyUserCmd	tmpcode/commond.h	/^    stPurplePropertyUserCmd()$/;"	f	struct:stPurplePropertyUserCmd
stPurplePropertyUserCmd	tmpcode/commond.h	/^struct stPurplePropertyUserCmd : public stPropertyUserCmd$/;"	s
stPurpleRemovePropertyUserCmd	tmpcode/commond.h	/^    stPurpleRemovePropertyUserCmd()$/;"	f	struct:stPurpleRemovePropertyUserCmd
stPurpleRemovePropertyUserCmd	tmpcode/commond.h	/^struct stPurpleRemovePropertyUserCmd : public stPropertyUserCmd $/;"	s
stPushHorseIntoEvolveMaterialUserCmd	tmpcode/commond.h	/^    stPushHorseIntoEvolveMaterialUserCmd()$/;"	f	struct:stPushHorseIntoEvolveMaterialUserCmd
stPushHorseIntoEvolveMaterialUserCmd	tmpcode/commond.h	/^struct stPushHorseIntoEvolveMaterialUserCmd : public stPetUserCmd$/;"	s
stPushMagicStoveUserCmd	tmpcode/commond.h	/^        stPushMagicStoveUserCmd()$/;"	f	struct:stPushMagicStoveUserCmd
stPushMagicStoveUserCmd	tmpcode/commond.h	/^struct stPushMagicStoveUserCmd : public stPropertyUserCmd$/;"	s
stPushPurpleStoveUserCmd	tmpcode/commond.h	/^        stPushPurpleStoveUserCmd()$/;"	f	struct:stPushPurpleStoveUserCmd
stPushPurpleStoveUserCmd	tmpcode/commond.h	/^struct stPushPurpleStoveUserCmd : public stPropertyUserCmd$/;"	s
stPutFlagSCUserCmd	tmpcode/commond.h	/^	stPutFlagSCUserCmd()$/;"	f	struct:stPutFlagSCUserCmd
stPutFlagSCUserCmd	tmpcode/commond.h	/^struct stPutFlagSCUserCmd : public stSeptCompeteUserCmd$/;"	s
stPutHorsePetCmd	base/Command.h	/^  stPutHorsePetCmd()$/;"	f	struct:Cmd::stPutHorsePetCmd
stPutHorsePetCmd	base/Command.h	/^struct stPutHorsePetCmd : public stPetUserCmd$/;"	s	namespace:Cmd
stPutHorsePetCmd	tmpcode/commond.h	/^    stPutHorsePetCmd()$/;"	f	struct:stPutHorsePetCmd
stPutHorsePetCmd	tmpcode/commond.h	/^struct stPutHorsePetCmd : public stPetUserCmd$/;"	s
stPutJieZhanAsk	tmpcode/commond.h	/^    stPutJieZhanAsk()$/;"	f	struct:stPutJieZhanAsk
stPutJieZhanAsk	tmpcode/commond.h	/^struct stPutJieZhanAsk : public stMapScreenUserCmd$/;"	s
stPutJieZhanSure	tmpcode/commond.h	/^    stPutJieZhanSure()$/;"	f	struct:stPutJieZhanSure
stPutJieZhanSure	tmpcode/commond.h	/^struct stPutJieZhanSure : public stMapScreenUserCmd$/;"	s
stPutListStockUserCmd	base/Command.h	/^  stPutListStockUserCmd() $/;"	f	struct:Cmd::stPutListStockUserCmd
stPutListStockUserCmd	base/Command.h	/^struct stPutListStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stPutListStockUserCmd	tmpcode/commond.h	/^	stPutListStockUserCmd()$/;"	f	struct:stPutListStockUserCmd
stPutListStockUserCmd	tmpcode/commond.h	/^struct stPutListStockUserCmd : public stStockBillUserCmd$/;"	s
stQueryAuction	base/Command.h	/^  stQueryAuction()$/;"	f	struct:Cmd::stQueryAuction
stQueryAuction	base/Command.h	/^struct stQueryAuction : public stAuctionUserCmd$/;"	s	namespace:Cmd
stQueryAuction	tmpcode/commond.h	/^        stQueryAuction()$/;"	f	struct:stQueryAuction
stQueryAuction	tmpcode/commond.h	/^struct stQueryAuction : public stAuctionUserCmd$/;"	s
stQueryBarkeeperState	tmpcode/commond.h	/^        stQueryBarkeeperState()$/;"	f	struct:stQueryBarkeeperState
stQueryBarkeeperState	tmpcode/commond.h	/^struct stQueryBarkeeperState : public stBarUserCmd$/;"	s
stQueryBoughtWeekAssurance	tmpcode/commond.h	/^	stQueryBoughtWeekAssurance()$/;"	f	struct:stQueryBoughtWeekAssurance
stQueryBoughtWeekAssurance	tmpcode/commond.h	/^struct stQueryBoughtWeekAssurance : public stGoldUserCmd$/;"	s
stQueryDareList	base/Command.h	/^  stQueryDareList()$/;"	f	struct:Cmd::stQueryDareList
stQueryDareList	base/Command.h	/^struct stQueryDareList : public stDareUserCmd$/;"	s	namespace:Cmd
stQueryElementShiftUserCmd	tmpcode/commond.h	/^	stQueryElementShiftUserCmd()$/;"	f	struct:stQueryElementShiftUserCmd
stQueryElementShiftUserCmd	tmpcode/commond.h	/^struct stQueryElementShiftUserCmd : public stMagicUserCmd$/;"	s
stQueryExchange2Gifts	tmpcode/commond.h	/^	stQueryExchange2Gifts()$/;"	f	struct:stQueryExchange2Gifts
stQueryExchange2Gifts	tmpcode/commond.h	/^struct stQueryExchange2Gifts : public stGoldUserCmd$/;"	s
stQueryExchange2State	tmpcode/commond.h	/^	stQueryExchange2State()$/;"	f	struct:stQueryExchange2State
stQueryExchange2State	tmpcode/commond.h	/^struct stQueryExchange2State : public stGoldUserCmd$/;"	s
stQueryExchange2Time	tmpcode/commond.h	/^	stQueryExchange2Time()$/;"	f	struct:stQueryExchange2Time
stQueryExchange2Time	tmpcode/commond.h	/^struct stQueryExchange2Time : public stGoldUserCmd$/;"	s
stQueryExchange3Gifts	tmpcode/commond.h	/^	stQueryExchange3Gifts()$/;"	f	struct:stQueryExchange3Gifts
stQueryExchange3Gifts	tmpcode/commond.h	/^struct stQueryExchange3Gifts : public stGoldUserCmd$/;"	s
stQueryExchange3State	tmpcode/commond.h	/^	stQueryExchange3State()$/;"	f	struct:stQueryExchange3State
stQueryExchange3State	tmpcode/commond.h	/^struct stQueryExchange3State : public stGoldUserCmd$/;"	s
stQueryExchange3Time	tmpcode/commond.h	/^	stQueryExchange3Time()$/;"	f	struct:stQueryExchange3Time
stQueryExchange3Time	tmpcode/commond.h	/^struct stQueryExchange3Time : public stGoldUserCmd$/;"	s
stQueryExchange4Config	tmpcode/commond.h	/^	stQueryExchange4Config()$/;"	f	struct:stQueryExchange4Config
stQueryExchange4Config	tmpcode/commond.h	/^struct stQueryExchange4Config : public stGoldUserCmd$/;"	s
stQueryExchange4State	tmpcode/commond.h	/^	stQueryExchange4State()$/;"	f	struct:stQueryExchange4State
stQueryExchange4State	tmpcode/commond.h	/^struct stQueryExchange4State : public stGoldUserCmd$/;"	s
stQueryExchange5Config	tmpcode/commond.h	/^	stQueryExchange5Config()$/;"	f	struct:stQueryExchange5Config
stQueryExchange5Config	tmpcode/commond.h	/^struct stQueryExchange5Config : public stGoldUserCmd$/;"	s
stQueryExchange5State	tmpcode/commond.h	/^	stQueryExchange5State()$/;"	f	struct:stQueryExchange5State
stQueryExchange5State	tmpcode/commond.h	/^struct stQueryExchange5State : public stGoldUserCmd$/;"	s
stQueryExchangeGiftState	tmpcode/commond.h	/^	stQueryExchangeGiftState()$/;"	f	struct:stQueryExchangeGiftState
stQueryExchangeGiftState	tmpcode/commond.h	/^struct stQueryExchangeGiftState : public stGoldUserCmd$/;"	s
stQueryFlowerLeftCountUserCmd	tmpcode/commond.h	/^	stQueryFlowerLeftCountUserCmd()$/;"	f	struct:stQueryFlowerLeftCountUserCmd
stQueryFlowerLeftCountUserCmd	tmpcode/commond.h	/^struct stQueryFlowerLeftCountUserCmd : public stPropertyUserCmd$/;"	s
stQueryFriendDecayHouseUserCmd	tmpcode/commond.h	/^	stQueryFriendDecayHouseUserCmd()$/;"	f	struct:stQueryFriendDecayHouseUserCmd
stQueryFriendDecayHouseUserCmd	tmpcode/commond.h	/^struct stQueryFriendDecayHouseUserCmd : public stLingQiDecayUserCmd$/;"	s
stQueryFundStockUserCmd	base/Command.h	/^  stQueryFundStockUserCmd() $/;"	f	struct:Cmd::stQueryFundStockUserCmd
stQueryFundStockUserCmd	base/Command.h	/^struct stQueryFundStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stQueryFundStockUserCmd	tmpcode/commond.h	/^	stQueryFundStockUserCmd()$/;"	f	struct:stQueryFundStockUserCmd
stQueryFundStockUserCmd	tmpcode/commond.h	/^struct stQueryFundStockUserCmd : public stStockBillUserCmd$/;"	s
stQueryGold	base/Command.h	/^  stQueryGold() $/;"	f	struct:Cmd::stQueryGold
stQueryGold	base/Command.h	/^struct stQueryGold : public stGoldUserCmd$/;"	s	namespace:Cmd
stQueryGold	tmpcode/commond.h	/^	stQueryGold()$/;"	f	struct:stQueryGold
stQueryGold	tmpcode/commond.h	/^struct stQueryGold : public stGoldUserCmd$/;"	s
stQueryLTQUserCmd	tmpcode/commond.h	/^	stQueryLTQUserCmd()$/;"	f	struct:stQueryLTQUserCmd
stQueryLTQUserCmd	tmpcode/commond.h	/^struct stQueryLTQUserCmd : public stLTQUserCmd$/;"	s
stQueryPrevSealMagicUserCmd	tmpcode/commond.h	/^	stQueryPrevSealMagicUserCmd()$/;"	f	struct:stQueryPrevSealMagicUserCmd
stQueryPrevSealMagicUserCmd	tmpcode/commond.h	/^struct stQueryPrevSealMagicUserCmd : public stMagicUserCmd$/;"	s
stQueryPurchase	tmpcode/commond.h	/^        stQueryPurchase()$/;"	f	struct:stQueryPurchase
stQueryPurchase	tmpcode/commond.h	/^struct stQueryPurchase : public stTradeUserCmd$/;"	s
stQueryQuiz	base/Command.h	/^  stQueryQuiz() $/;"	f	struct:Cmd::stQueryQuiz
stQueryQuiz	base/Command.h	/^struct stQueryQuiz : public stQuizUserCmd$/;"	s	namespace:Cmd
stQueryRetLTQUserCmd	tmpcode/commond.h	/^	stQueryRetLTQUserCmd()$/;"	f	struct:stQueryRetLTQUserCmd
stQueryRetLTQUserCmd	tmpcode/commond.h	/^struct stQueryRetLTQUserCmd : public stLTQUserCmd$/;"	s
stQueryWeekAssuranceConfig	tmpcode/commond.h	/^	stQueryWeekAssuranceConfig()$/;"	f	struct:stQueryWeekAssuranceConfig
stQueryWeekAssuranceConfig	tmpcode/commond.h	/^struct stQueryWeekAssuranceConfig : public stGoldUserCmd$/;"	s
stQueryWeekAssuranceDrawState	tmpcode/commond.h	/^	stQueryWeekAssuranceDrawState()$/;"	f	struct:stQueryWeekAssuranceDrawState
stQueryWeekAssuranceDrawState	tmpcode/commond.h	/^struct stQueryWeekAssuranceDrawState : public stGoldUserCmd$/;"	s
stQuestDrinkWineUserCmd	tmpcode/commond.h	/^	stQuestDrinkWineUserCmd()$/;"	f	struct:stQuestDrinkWineUserCmd
stQuestDrinkWineUserCmd	tmpcode/commond.h	/^struct stQuestDrinkWineUserCmd : public stQuestUserCmd$/;"	s
stQuestInfoUserCmd	base/Command.h	/^  stQuestInfoUserCmd()$/;"	f	struct:Cmd::stQuestInfoUserCmd
stQuestInfoUserCmd	base/Command.h	/^struct stQuestInfoUserCmd : public stQuestUserCmd$/;"	s	namespace:Cmd
stQuestInfoUserCmd	tmpcode/commond.h	/^	stQuestInfoUserCmd()$/;"	f	struct:stQuestInfoUserCmd
stQuestInfoUserCmd	tmpcode/commond.h	/^struct stQuestInfoUserCmd : public stQuestUserCmd$/;"	s
stQuestMapUserCmd	tmpcode/commond.h	/^	stQuestMapUserCmd()$/;"	f	struct:stQuestMapUserCmd
stQuestMapUserCmd	tmpcode/commond.h	/^struct stQuestMapUserCmd : public stNullUserCmd$/;"	s
stQuestNumNow	tmpcode/commond.h	/^	stQuestNumNow()$/;"	f	struct:stQuestNumNow
stQuestNumNow	tmpcode/commond.h	/^struct stQuestNumNow : public stChatUserCmd$/;"	s
stQuestTipsUserCmd	tmpcode/commond.h	/^        stQuestTipsUserCmd()$/;"	f	struct:stQuestTipsUserCmd
stQuestTipsUserCmd	tmpcode/commond.h	/^struct stQuestTipsUserCmd : public stQuestUserCmd$/;"	s
stQuestUserCmd	base/Command.h	/^  stQuestUserCmd()$/;"	f	struct:Cmd::stQuestUserCmd
stQuestUserCmd	base/Command.h	/^struct stQuestUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stQuestUserCmd	tmpcode/commond.h	/^	stQuestUserCmd()$/;"	f	struct:stQuestUserCmd
stQuestUserCmd	tmpcode/commond.h	/^struct stQuestUserCmd : public stNullUserCmd$/;"	s
stQuestVarsUserCmd	base/Command.h	/^  stQuestVarsUserCmd()$/;"	f	struct:Cmd::stQuestVarsUserCmd
stQuestVarsUserCmd	base/Command.h	/^struct stQuestVarsUserCmd : public stQuestUserCmd$/;"	s	namespace:Cmd
stQuestVarsUserCmd	tmpcode/commond.h	/^	stQuestVarsUserCmd()$/;"	f	struct:stQuestVarsUserCmd
stQuestVarsUserCmd	tmpcode/commond.h	/^struct stQuestVarsUserCmd : public stQuestUserCmd$/;"	s
stQuestionNpcDareInfo	base/Command.h	/^  stQuestionNpcDareInfo()$/;"	f	struct:Cmd::stQuestionNpcDareInfo
stQuestionNpcDareInfo	base/Command.h	/^struct stQuestionNpcDareInfo : public stNpcDareUserCmd$/;"	s	namespace:Cmd
stQuestionObject	base/Command.h	/^  stQuestionObject()$/;"	f	struct:Cmd::stQuestionObject
stQuestionObject	base/Command.h	/^struct stQuestionObject : public stChatUserCmd$/;"	s	namespace:Cmd
stQuestionObject	tmpcode/commond.h	/^    stQuestionObject()$/;"	f	struct:stQuestionObject
stQuestionObject	tmpcode/commond.h	/^struct stQuestionObject : public stChatUserCmd$/;"	s
stQuestionQuiz	base/Command.h	/^  stQuestionQuiz()$/;"	f	struct:Cmd::stQuestionQuiz
stQuestionQuiz	base/Command.h	/^struct stQuestionQuiz : public stQuizUserCmd$/;"	s	namespace:Cmd
stQuestionUnionCityInfo	base/Command.h	/^  stQuestionUnionCityInfo()$/;"	f	struct:Cmd::stQuestionUnionCityInfo
stQuestionUnionCityInfo	base/Command.h	/^struct stQuestionUnionCityInfo : public stUnionUserCmd$/;"	s	namespace:Cmd
stQuitHomeMapUserCmd	tmpcode/commond.h	/^	stQuitHomeMapUserCmd()$/;"	f	struct:stQuitHomeMapUserCmd
stQuitHomeMapUserCmd	tmpcode/commond.h	/^struct stQuitHomeMapUserCmd : public stHomeUserCmd$/;"	s
stQuitLuoRiUserCmd	tmpcode/commond.h	/^    stQuitLuoRiUserCmd()$/;"	f	struct:stQuitLuoRiUserCmd
stQuitLuoRiUserCmd	tmpcode/commond.h	/^struct stQuitLuoRiUserCmd:public stLuoRiXiaGuUserCmd$/;"	s
stQuitZhenXuanUserCmd	tmpcode/commond.h	/^	stQuitZhenXuanUserCmd()$/;"	f	struct:stQuitZhenXuanUserCmd
stQuitZhenXuanUserCmd	tmpcode/commond.h	/^struct stQuitZhenXuanUserCmd : public stZhenxuanJingjiUserCmd$/;"	s
stQuizCurScore	base/Command.h	/^  stQuizCurScore()$/;"	f	struct:Cmd::stQuizCurScore
stQuizCurScore	base/Command.h	/^struct stQuizCurScore : public stQuizUserCmd$/;"	s	namespace:Cmd
stQuizExit	base/Command.h	/^  stQuizExit()$/;"	f	struct:Cmd::stQuizExit
stQuizExit	base/Command.h	/^struct stQuizExit : public stQuizUserCmd$/;"	s	namespace:Cmd
stQuizParam	base/Command.h	/^  stQuizParam() $/;"	f	struct:Cmd::stQuizParam
stQuizParam	base/Command.h	/^struct stQuizParam : public stQuizUserCmd$/;"	s	namespace:Cmd
stQuizPosList	base/Command.h	/^  stQuizPosList()$/;"	f	struct:Cmd::stQuizPosList
stQuizPosList	base/Command.h	/^struct stQuizPosList : public stQuizUserCmd$/;"	s	namespace:Cmd
stQuizUserCmd	base/Command.h	/^  stQuizUserCmd()$/;"	f	struct:Cmd::stQuizUserCmd
stQuizUserCmd	base/Command.h	/^struct stQuizUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stRPointCard	tmpcode/commond.h	/^	stRPointCard()$/;"	f	struct:stRPointCard
stRPointCard	tmpcode/commond.h	/^struct stRPointCard: public stGoldUserCmd$/;"	s
stRTMagicPosUserCmd	base/Command.h	/^  stRTMagicPosUserCmd()$/;"	f	struct:Cmd::stRTMagicPosUserCmd
stRTMagicPosUserCmd	base/Command.h	/^struct stRTMagicPosUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stRTMagicUserCmd	base/Command.h	/^  stRTMagicUserCmd()$/;"	f	struct:Cmd::stRTMagicUserCmd
stRTMagicUserCmd	base/Command.h	/^struct stRTMagicUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stRTOtherMagicUserCmd	base/Command.h	/^  stRTOtherMagicUserCmd()$/;"	f	struct:Cmd::stRTOtherMagicUserCmd
stRTOtherMagicUserCmd	base/Command.h	/^struct stRTOtherMagicUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stRTPresentBarGirlUserCmd	tmpcode/commond.h	/^        stRTPresentBarGirlUserCmd()$/;"	f	struct:stRTPresentBarGirlUserCmd
stRTPresentBarGirlUserCmd	tmpcode/commond.h	/^struct stRTPresentBarGirlUserCmd: public stBarUserCmd$/;"	s
stRTSelectedHpMpPropertyUserCmd	base/Command.h	/^  stRTSelectedHpMpPropertyUserCmd()$/;"	f	struct:Cmd::stRTSelectedHpMpPropertyUserCmd
stRTSelectedHpMpPropertyUserCmd	base/Command.h	/^struct stRTSelectedHpMpPropertyUserCmd : public stMapScreenUserCmd$/;"	s	namespace:Cmd
stRTSelectedHpMpPropertyUserCmd	tmpcode/commond.h	/^        stRTSelectedHpMpPropertyUserCmd()$/;"	f	struct:stRTSelectedHpMpPropertyUserCmd
stRTSelectedHpMpPropertyUserCmd	tmpcode/commond.h	/^struct stRTSelectedHpMpPropertyUserCmd : public stMapScreenUserCmd \/\/Õ®÷™—°‘Ò◊‘º∫µƒÕÊº“hp∫Õmpµƒ±‰ªØ$/;"	s
stRTTreasureUserCmd	tmpcode/commond.h	/^	stRTTreasureUserCmd()$/;"	f	struct:stRTTreasureUserCmd
stRTTreasureUserCmd	tmpcode/commond.h	/^struct stRTTreasureUserCmd : public stMagicUserCmd$/;"	s
stRandomQuestUserCmd	tmpcode/commond.h	/^	stRandomQuestUserCmd()$/;"	f	struct:stRandomQuestUserCmd
stRandomQuestUserCmd	tmpcode/commond.h	/^struct stRandomQuestUserCmd : public stNullUserCmd$/;"	s
stReQueueNum	tmpcode/commond.h	/^	stReQueueNum()$/;"	f	struct:stReQueueNum
stReQueueNum	tmpcode/commond.h	/^struct stReQueueNum : public stChatUserCmd$/;"	s
stReadFlagHeroIslandUserCmd	tmpcode/commond.h	/^	stReadFlagHeroIslandUserCmd()$/;"	f	struct:stReadFlagHeroIslandUserCmd
stReadFlagHeroIslandUserCmd	tmpcode/commond.h	/^struct stReadFlagHeroIslandUserCmd: public stHeroIslandUserCmd$/;"	s
stRealtimeUpdateScoreZhenXuanUserCmd	tmpcode/commond.h	/^	stRealtimeUpdateScoreZhenXuanUserCmd()$/;"	f	struct:stRealtimeUpdateScoreZhenXuanUserCmd
stRealtimeUpdateScoreZhenXuanUserCmd	tmpcode/commond.h	/^struct stRealtimeUpdateScoreZhenXuanUserCmd : public stZhenxuanJingjiUserCmd$/;"	s
stRebuildTankCmd	tmpcode/commond.h	/^	stRebuildTankCmd()$/;"	f	struct:stRebuildTankCmd
stRebuildTankCmd	tmpcode/commond.h	/^struct stRebuildTankCmd : public stTankUserCmd$/;"	s
stRecallMasterVoteSeptCmd	tmpcode/commond.h	/^	stRecallMasterVoteSeptCmd()$/;"	f	struct:stRecallMasterVoteSeptCmd
stRecallMasterVoteSeptCmd	tmpcode/commond.h	/^struct stRecallMasterVoteSeptCmd : public stSeptUserCmd$/;"	s
stRecallVoteSeptCmd	tmpcode/commond.h	/^	stRecallVoteSeptCmd()$/;"	f	struct:stRecallVoteSeptCmd
stRecallVoteSeptCmd	tmpcode/commond.h	/^struct stRecallVoteSeptCmd : public stSeptUserCmd$/;"	s
stReceiveIssuedQuestUserCmd	tmpcode/commond.h	/^        stReceiveIssuedQuestUserCmd()$/;"	f	struct:stReceiveIssuedQuestUserCmd
stReceiveIssuedQuestUserCmd	tmpcode/commond.h	/^struct stReceiveIssuedQuestUserCmd : public stQuestUserCmd$/;"	s
stRecommendItem	base/Command.h	/^struct stRecommendItem$/;"	s	namespace:Cmd
stRecommendUserCmd	base/Command.h	/^  stRecommendUserCmd()$/;"	f	struct:Cmd::stRecommendUserCmd
stRecommendUserCmd	base/Command.h	/^struct stRecommendUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stRecommendUserCmd	tmpcode/commond.h	/^	stRecommendUserCmd()            $/;"	f	struct:stRecommendUserCmd
stRecommendUserCmd	tmpcode/commond.h	/^struct stRecommendUserCmd : public stNullUserCmd$/;"	s
stRecoverNewGiftBag	tmpcode/commond.h	/^	stRecoverNewGiftBag()$/;"	f	struct:stRecoverNewGiftBag
stRecoverNewGiftBag	tmpcode/commond.h	/^struct stRecoverNewGiftBag : public stPropertyUserCmd$/;"	s
stRecruitSeptMemberCmd	tmpcode/commond.h	/^	stRecruitSeptMemberCmd()$/;"	f	struct:stRecruitSeptMemberCmd
stRecruitSeptMemberCmd	tmpcode/commond.h	/^struct stRecruitSeptMemberCmd : public stSeptUserCmd$/;"	s
stRedeemGold	base/Command.h	/^  stRedeemGold()$/;"	f	struct:Cmd::stRedeemGold
stRedeemGold	base/Command.h	/^struct stRedeemGold : public stGoldUserCmd$/;"	s	namespace:Cmd
stRedeemGold	tmpcode/commond.h	/^	stRedeemGold()$/;"	f	struct:stRedeemGold
stRedeemGold	tmpcode/commond.h	/^struct stRedeemGold : public stGoldUserCmd$/;"	s
stRedeemMonthCard	base/Command.h	/^  stRedeemMonthCard()$/;"	f	struct:Cmd::stRedeemMonthCard
stRedeemMonthCard	base/Command.h	/^struct stRedeemMonthCard : public stGoldUserCmd$/;"	s	namespace:Cmd
stReduceCityNpcReliveTime	tmpcode/commond.h	/^	stReduceCityNpcReliveTime()$/;"	f	struct:stReduceCityNpcReliveTime
stReduceCityNpcReliveTime	tmpcode/commond.h	/^struct stReduceCityNpcReliveTime : public stCityUserCmd$/;"	s
stReduceMPLingQiUserCmd	tmpcode/commond.h	/^	stReduceMPLingQiUserCmd()$/;"	f	struct:stReduceMPLingQiUserCmd
stReduceMPLingQiUserCmd	tmpcode/commond.h	/^struct stReduceMPLingQiUserCmd : public stLingQiUserCmd$/;"	s
stRefCountObjectPropertyUserCmd	base/Command.h	/^    stRefCountObjectPropertyUserCmd()$/;"	f	struct:Cmd::stRefCountObjectPropertyUserCmd
stRefCountObjectPropertyUserCmd	base/Command.h	/^  struct stRefCountObjectPropertyUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stRefCountObjectPropertyUserCmd	tmpcode/commond.h	/^		stRefCountObjectPropertyUserCmd()$/;"	f	struct:stRefCountObjectPropertyUserCmd
stRefCountObjectPropertyUserCmd	tmpcode/commond.h	/^	struct stRefCountObjectPropertyUserCmd : public stPropertyUserCmd{$/;"	s
stRefreshBossUserCmd	base/Command.h	/^  stRefreshBossUserCmd()$/;"	f	struct:Cmd::stRefreshBossUserCmd
stRefreshBossUserCmd	base/Command.h	/^ struct stRefreshBossUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stRefreshCanLearnFakeSkillLingQiUserCmd	tmpcode/commond.h	/^    stRefreshCanLearnFakeSkillLingQiUserCmd()$/;"	f	struct:stRefreshCanLearnFakeSkillLingQiUserCmd
stRefreshCanLearnFakeSkillLingQiUserCmd	tmpcode/commond.h	/^struct stRefreshCanLearnFakeSkillLingQiUserCmd:public stLingQiUserCmd$/;"	s
stRefreshChangeBackTitleCmd	tmpcode/commond.h	/^	stRefreshChangeBackTitleCmd()           $/;"	f	struct:stRefreshChangeBackTitleCmd
stRefreshChangeBackTitleCmd	tmpcode/commond.h	/^struct stRefreshChangeBackTitleCmd : public stTitleUserCmd$/;"	s
stRefreshCityMoneyCmd	tmpcode/commond.h	/^	stRefreshCityMoneyCmd()$/;"	f	struct:stRefreshCityMoneyCmd
stRefreshCityMoneyCmd	tmpcode/commond.h	/^struct stRefreshCityMoneyCmd : public stCityUserCmd$/;"	s
stRefreshCommonInfoWeekendZhenxuanUserCmd	tmpcode/commond.h	/^	stRefreshCommonInfoWeekendZhenxuanUserCmd()$/;"	f	struct:stRefreshCommonInfoWeekendZhenxuanUserCmd
stRefreshCommonInfoWeekendZhenxuanUserCmd	tmpcode/commond.h	/^struct stRefreshCommonInfoWeekendZhenxuanUserCmd : public stZhenxuanJingjiUserCmd$/;"	s
stRefreshDataPetCmd	base/Command.h	/^  stRefreshDataPetCmd()$/;"	f	struct:Cmd::stRefreshDataPetCmd
stRefreshDataPetCmd	base/Command.h	/^struct stRefreshDataPetCmd : public stPetUserCmd$/;"	s	namespace:Cmd
stRefreshDataPetCmd	tmpcode/commond.h	/^	stRefreshDataPetCmd()$/;"	f	struct:stRefreshDataPetCmd
stRefreshDataPetCmd	tmpcode/commond.h	/^struct stRefreshDataPetCmd : public stPetUserCmd$/;"	s
stRefreshGRecommendRelationUserCmd	tmpcode/commond.h	/^	stRefreshGRecommendRelationUserCmd()$/;"	f	struct:stRefreshGRecommendRelationUserCmd
stRefreshGRecommendRelationUserCmd	tmpcode/commond.h	/^struct stRefreshGRecommendRelationUserCmd : public stRecommendUserCmd$/;"	s
stRefreshImageVerifySceneUserCmd	tmpcode/commond.h	/^	stRefreshImageVerifySceneUserCmd()$/;"	f	struct:stRefreshImageVerifySceneUserCmd
stRefreshImageVerifySceneUserCmd	tmpcode/commond.h	/^struct stRefreshImageVerifySceneUserCmd : public stPropertyUserCmd$/;"	s
stRefreshJieZhanInfo	tmpcode/commond.h	/^    stRefreshJieZhanInfo()$/;"	f	struct:stRefreshJieZhanInfo
stRefreshJieZhanInfo	tmpcode/commond.h	/^struct stRefreshJieZhanInfo : public stMapScreenUserCmd$/;"	s
stRefreshJieZhanStateList	tmpcode/commond.h	/^    stRefreshJieZhanStateList()$/;"	f	struct:stRefreshJieZhanStateList
stRefreshJieZhanStateList	tmpcode/commond.h	/^struct stRefreshJieZhanStateList : public stMapScreenUserCmd$/;"	s
stRefreshJieZhanTitleActive	tmpcode/commond.h	/^    stRefreshJieZhanTitleActive()$/;"	f	struct:stRefreshJieZhanTitleActive
stRefreshJieZhanTitleActive	tmpcode/commond.h	/^struct stRefreshJieZhanTitleActive : public stMapScreenUserCmd$/;"	s
stRefreshNpcStateMapScreenUserCmd	tmpcode/commond.h	/^	stRefreshNpcStateMapScreenUserCmd()$/;"	f	struct:stRefreshNpcStateMapScreenUserCmd
stRefreshNpcStateMapScreenUserCmd	tmpcode/commond.h	/^struct stRefreshNpcStateMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s
stRefreshRelativeNumZhenxuanUserCmd	tmpcode/commond.h	/^	stRefreshRelativeNumZhenxuanUserCmd()$/;"	f	struct:stRefreshRelativeNumZhenxuanUserCmd
stRefreshRelativeNumZhenxuanUserCmd	tmpcode/commond.h	/^struct stRefreshRelativeNumZhenxuanUserCmd: public stZhenxuanJingjiUserCmd$/;"	s
stRefreshSayHelloRecordUserCmd	tmpcode/commond.h	/^	stRefreshSayHelloRecordUserCmd()$/;"	f	struct:stRefreshSayHelloRecordUserCmd
stRefreshSayHelloRecordUserCmd	tmpcode/commond.h	/^struct stRefreshSayHelloRecordUserCmd : public stRecommendUserCmd$/;"	s
stRefreshScoreTwilightCityUserCmd	tmpcode/commond.h	/^	stRefreshScoreTwilightCityUserCmd(): allScore(0)$/;"	f	struct:stRefreshScoreTwilightCityUserCmd
stRefreshScoreTwilightCityUserCmd	tmpcode/commond.h	/^struct stRefreshScoreTwilightCityUserCmd: public stQuestMapUserCmd$/;"	s
stRefreshSoundTokenCmd	tmpcode/commond.h	/^	stRefreshSoundTokenCmd()$/;"	f	struct:stRefreshSoundTokenCmd
stRefreshSoundTokenCmd	tmpcode/commond.h	/^struct stRefreshSoundTokenCmd : public stSoundUserCmd$/;"	s
stRefreshStateMapScreenUserCmd	base/Command.h	/^  stRefreshStateMapScreenUserCmd()$/;"	f	struct:Cmd::stRefreshStateMapScreenUserCmd
stRefreshStateMapScreenUserCmd	base/Command.h	/^struct stRefreshStateMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stRefreshTuanCaiJiCmd	tmpcode/commond.h	/^    stRefreshTuanCaiJiCmd()$/;"	f	struct:stRefreshTuanCaiJiCmd
stRefreshTuanCaiJiCmd	tmpcode/commond.h	/^struct stRefreshTuanCaiJiCmd : public stUnionUserCmd$/;"	s
stRefreshUserInfoWeekendZhenxuanUserCmd	tmpcode/commond.h	/^	stRefreshUserInfoWeekendZhenxuanUserCmd()$/;"	f	struct:stRefreshUserInfoWeekendZhenxuanUserCmd
stRefreshUserInfoWeekendZhenxuanUserCmd	tmpcode/commond.h	/^struct stRefreshUserInfoWeekendZhenxuanUserCmd : public stZhenxuanJingjiUserCmd$/;"	s
stRefreshVarLingQiUserCmd	tmpcode/commond.h	/^	stRefreshVarLingQiUserCmd()$/;"	f	struct:stRefreshVarLingQiUserCmd
stRefreshVarLingQiUserCmd	tmpcode/commond.h	/^struct stRefreshVarLingQiUserCmd : public stLingQiUserCmd$/;"	s
stRefuseReqAddTeamUserCmd	tmpcode/commond.h	/^	stRefuseReqAddTeamUserCmd()$/;"	f	struct:stRefuseReqAddTeamUserCmd
stRefuseReqAddTeamUserCmd	tmpcode/commond.h	/^struct stRefuseReqAddTeamUserCmd : public stTeamRecruitUserCmd$/;"	s
stRegInfoDTUserCmd	tmpcode/commond.h	/^	stRegInfoDTUserCmd(): npcID(0), full(0), num(0)$/;"	f	struct:stRegInfoDTUserCmd
stRegInfoDTUserCmd	tmpcode/commond.h	/^struct stRegInfoDTUserCmd: public stDragonTotemUserCmd$/;"	s
stRegNotifyUserCmd	tmpcode/commond.h	/^	stRegNotifyUserCmd(): npcID(0)$/;"	f	struct:stRegNotifyUserCmd
stRegNotifyUserCmd	tmpcode/commond.h	/^struct stRegNotifyUserCmd: public stDragonTotemUserCmd$/;"	s
stRegSeptPopoUserCmd	tmpcode/commond.h	/^	stRegSeptPopoUserCmd()$/;"	f	struct:stRegSeptPopoUserCmd
stRegSeptPopoUserCmd	tmpcode/commond.h	/^struct stRegSeptPopoUserCmd : public stSeptPopoUserCmd$/;"	s
stRelation	base/Command.h	/^struct stRelation$/;"	s	namespace:Cmd
stRelation	tmpcode/commond.h	/^struct stRelation$/;"	s
stRelationStatusCmd	base/Command.h	/^  stRelationStatusCmd()$/;"	f	struct:Cmd::stRelationStatusCmd
stRelationStatusCmd	base/Command.h	/^struct stRelationStatusCmd : public stRelationUserCmd$/;"	s	namespace:Cmd
stRelationStatusCmd	tmpcode/commond.h	/^	stRelationStatusCmd()$/;"	f	struct:stRelationStatusCmd
stRelationStatusCmd	tmpcode/commond.h	/^struct stRelationStatusCmd : public stRelationUserCmd$/;"	s
stRelationUserCmd	base/Command.h	/^  stRelationUserCmd()$/;"	f	struct:Cmd::stRelationUserCmd
stRelationUserCmd	base/Command.h	/^struct stRelationUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stRelationUserCmd	tmpcode/commond.h	/^	stRelationUserCmd()$/;"	f	struct:stRelationUserCmd
stRelationUserCmd	tmpcode/commond.h	/^struct stRelationUserCmd : public stNullUserCmd$/;"	s
stReliveUserCmd	base/Command.h	/^    stReliveUserCmd()$/;"	f	struct:Cmd::stReliveUserCmd
stReliveUserCmd	base/Command.h	/^  struct stReliveUserCmd : public stNullUserCmd{$/;"	s	namespace:Cmd
stReliveUserCmd	tmpcode/commond.h	/^	stReliveUserCmd()$/;"	f	struct:stReliveUserCmd
stReliveUserCmd	tmpcode/commond.h	/^struct stReliveUserCmd : public stNullUserCmd$/;"	s
stRemainLevelUpTimeDecayHouseUserCmd	tmpcode/commond.h	/^	stRemainLevelUpTimeDecayHouseUserCmd()$/;"	f	struct:stRemainLevelUpTimeDecayHouseUserCmd
stRemainLevelUpTimeDecayHouseUserCmd	tmpcode/commond.h	/^struct stRemainLevelUpTimeDecayHouseUserCmd : public stLingQiDecayUserCmd$/;"	s
stRemakePropertyUserCmd	tmpcode/commond.h	/^    stRemakePropertyUserCmd()$/;"	f	struct:stRemakePropertyUserCmd
stRemakePropertyUserCmd	tmpcode/commond.h	/^struct stRemakePropertyUserCmd: public stPropertyUserCmd$/;"	s
stRemoveArmyUserCmd	base/Command.h	/^  stRemoveArmyUserCmd()$/;"	f	struct:Cmd::stRemoveArmyUserCmd
stRemoveArmyUserCmd	base/Command.h	/^struct stRemoveArmyUserCmd : public stArmyUserCmd$/;"	s	namespace:Cmd
stRemoveBetObjectChallengeUserCmd	tmpcode/commond.h	/^	stRemoveBetObjectChallengeUserCmd()$/;"	f	struct:stRemoveBetObjectChallengeUserCmd
stRemoveBetObjectChallengeUserCmd	tmpcode/commond.h	/^struct stRemoveBetObjectChallengeUserCmd:public stChallengeGameUserCmd$/;"	s
stRemoveCartoonCmd	base/Command.h	/^  stRemoveCartoonCmd()$/;"	f	struct:Cmd::stRemoveCartoonCmd
stRemoveCartoonCmd	base/Command.h	/^struct stRemoveCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stRemoveDailyQuestUserCmd	tmpcode/commond.h	/^	stRemoveDailyQuestUserCmd()$/;"	f	struct:stRemoveDailyQuestUserCmd
stRemoveDailyQuestUserCmd	tmpcode/commond.h	/^struct stRemoveDailyQuestUserCmd : public stRandomQuestUserCmd$/;"	s
stRemoveFurnitureHomeUserCmd	tmpcode/commond.h	/^	stRemoveFurnitureHomeUserCmd()$/;"	f	struct:stRemoveFurnitureHomeUserCmd
stRemoveFurnitureHomeUserCmd	tmpcode/commond.h	/^struct stRemoveFurnitureHomeUserCmd : public stHomeUserCmd$/;"	s
stRemoveHorseSkillUserCmd	tmpcode/commond.h	/^        stRemoveHorseSkillUserCmd()$/;"	f	struct:stRemoveHorseSkillUserCmd
stRemoveHorseSkillUserCmd	tmpcode/commond.h	/^struct stRemoveHorseSkillUserCmd : public stPetUserCmd$/;"	s
stRemoveItemMail	base/Command.h	/^  stRemoveItemMail()$/;"	f	struct:Cmd::stRemoveItemMail
stRemoveItemMail	base/Command.h	/^struct stRemoveItemMail : public stMailUserCmd$/;"	s	namespace:Cmd
stRemoveItemMail	tmpcode/commond.h	/^        stRemoveItemMail()$/;"	f	struct:stRemoveItemMail
stRemoveItemMail	tmpcode/commond.h	/^struct stRemoveItemMail : public stMailUserCmd$/;"	s
stRemoveLingQiSkillUserCmd	tmpcode/commond.h	/^    stRemoveLingQiSkillUserCmd()$/;"	f	struct:stRemoveLingQiSkillUserCmd
stRemoveLingQiSkillUserCmd	tmpcode/commond.h	/^struct stRemoveLingQiSkillUserCmd : public stLingQiUserCmd$/;"	s
stRemoveListAuction	base/Command.h	/^  stRemoveListAuction()$/;"	f	struct:Cmd::stRemoveListAuction
stRemoveListAuction	base/Command.h	/^struct stRemoveListAuction : public stAuctionUserCmd$/;"	s	namespace:Cmd
stRemoveListAuction	tmpcode/commond.h	/^        stRemoveListAuction()$/;"	f	struct:stRemoveListAuction
stRemoveListAuction	tmpcode/commond.h	/^struct stRemoveListAuction : public stAuctionUserCmd$/;"	s
stRemoveMapBuildAndPosMapScreenUserCmd	tmpcode/commond.h	/^	stRemoveMapBuildAndPosMapScreenUserCmd()$/;"	f	struct:stRemoveMapBuildAndPosMapScreenUserCmd
stRemoveMapBuildAndPosMapScreenUserCmd	tmpcode/commond.h	/^struct stRemoveMapBuildAndPosMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stRemoveMapBuildingMapScreenUserCmd	base/Command.h	/^    stRemoveMapBuildingMapScreenUserCmd()$/;"	f	struct:Cmd::stRemoveMapBuildingMapScreenUserCmd
stRemoveMapBuildingMapScreenUserCmd	base/Command.h	/^  struct stRemoveMapBuildingMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stRemoveMapNpcMapScreenUserCmd	base/Command.h	/^    stRemoveMapNpcMapScreenUserCmd()$/;"	f	struct:Cmd::stRemoveMapNpcMapScreenUserCmd
stRemoveMapNpcMapScreenUserCmd	base/Command.h	/^  struct stRemoveMapNpcMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stRemoveMapNpcMapScreenUserCmd	tmpcode/commond.h	/^    stRemoveMapNpcMapScreenUserCmd()$/;"	f	struct:stRemoveMapNpcMapScreenUserCmd
stRemoveMapNpcMapScreenUserCmd	tmpcode/commond.h	/^struct stRemoveMapNpcMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stRemoveMapObjectMapScreenUserCmd	base/Command.h	/^    stRemoveMapObjectMapScreenUserCmd()$/;"	f	struct:Cmd::stRemoveMapObjectMapScreenUserCmd
stRemoveMapObjectMapScreenUserCmd	base/Command.h	/^  struct stRemoveMapObjectMapScreenUserCmd  : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stRemoveNameSeptGuardCmd	tmpcode/commond.h	/^	stRemoveNameSeptGuardCmd()$/;"	f	struct:stRemoveNameSeptGuardCmd
stRemoveNameSeptGuardCmd	tmpcode/commond.h	/^struct stRemoveNameSeptGuardCmd: public stSeptUserCmd$/;"	s
stRemoveObjectPropertyUserCmd	base/Command.h	/^    stRemoveObjectPropertyUserCmd()$/;"	f	struct:Cmd::stRemoveObjectPropertyUserCmd
stRemoveObjectPropertyUserCmd	base/Command.h	/^  struct stRemoveObjectPropertyUserCmd : public stPropertyUserCmd {$/;"	s	namespace:Cmd
stRemoveObjectPropertyUserCmd	tmpcode/commond.h	/^	stRemoveObjectPropertyUserCmd()$/;"	f	struct:stRemoveObjectPropertyUserCmd
stRemoveObjectPropertyUserCmd	tmpcode/commond.h	/^struct stRemoveObjectPropertyUserCmd : public stPropertyUserCmd $/;"	s
stRemoveObjectSellUserCmd	base/Command.h	/^  stRemoveObjectSellUserCmd()$/;"	f	struct:Cmd::stRemoveObjectSellUserCmd
stRemoveObjectSellUserCmd	base/Command.h	/^struct stRemoveObjectSellUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stRemoveObjectSellUserCmd	tmpcode/commond.h	/^	stRemoveObjectSellUserCmd()$/;"	f	struct:stRemoveObjectSellUserCmd
stRemoveObjectSellUserCmd	tmpcode/commond.h	/^struct stRemoveObjectSellUserCmd:public stTradeUserCmd$/;"	s
stRemoveObjectSeptStore	tmpcode/commond.h	/^	stRemoveObjectSeptStore()$/;"	f	struct:stRemoveObjectSeptStore
stRemoveObjectSeptStore	tmpcode/commond.h	/^struct stRemoveObjectSeptStore : public stSeptUserCmd$/;"	s
stRemoveObjectTradeUserCmd	base/Command.h	/^  stRemoveObjectTradeUserCmd()$/;"	f	struct:Cmd::stRemoveObjectTradeUserCmd
stRemoveObjectTradeUserCmd	base/Command.h	/^struct stRemoveObjectTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stRemoveObjectTradeUserCmd	tmpcode/commond.h	/^	stRemoveObjectTradeUserCmd(DWORD userid,DWORD objectid)$/;"	f	struct:stRemoveObjectTradeUserCmd
stRemoveObjectTradeUserCmd	tmpcode/commond.h	/^struct stRemoveObjectTradeUserCmd:public stTradeUserCmd$/;"	s
stRemoveSeptSkill	tmpcode/commond.h	/^	stRemoveSeptSkill(const DWORD id) : stUnionSkillUserCmd(REMOVE_SEPTSKILL_USERCMD) {$/;"	f	struct:stRemoveSeptSkill
stRemoveSeptSkill	tmpcode/commond.h	/^struct stRemoveSeptSkill : public stUnionSkillUserCmd {$/;"	s
stRemoveTankMapScreenStateUserCmd	tmpcode/commond.h	/^	stRemoveTankMapScreenStateUserCmd()$/;"	f	struct:stRemoveTankMapScreenStateUserCmd
stRemoveTankMapScreenStateUserCmd	tmpcode/commond.h	/^struct stRemoveTankMapScreenStateUserCmd : public stMapScreenUserCmd$/;"	s
stRemoveTeamChangeLeaderUserCmd	base/Command.h	/^	 stRemoveTeamChangeLeaderUserCmd()$/;"	f	struct:Cmd::stRemoveTeamChangeLeaderUserCmd
stRemoveTeamChangeLeaderUserCmd	base/Command.h	/^ struct stRemoveTeamChangeLeaderUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stRemoveTeamMemberUserCmd	base/Command.h	/^  stRemoveTeamMemberUserCmd()$/;"	f	struct:Cmd::stRemoveTeamMemberUserCmd
stRemoveTeamMemberUserCmd	base/Command.h	/^struct stRemoveTeamMemberUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stRemoveTeamMemberUserCmd	tmpcode/commond.h	/^	stRemoveTeamMemberUserCmd()$/;"	f	struct:stRemoveTeamMemberUserCmd
stRemoveTeamMemberUserCmd	tmpcode/commond.h	/^struct stRemoveTeamMemberUserCmd: public stChatUserCmd$/;"	s
stRemoveTeamUserCmd	base/Command.h	/^  stRemoveTeamUserCmd()$/;"	f	struct:Cmd::stRemoveTeamUserCmd
stRemoveTeamUserCmd	base/Command.h	/^struct stRemoveTeamUserCmd : public stChatUserCmd$/;"	s	namespace:Cmd
stRemoveTeamUserCmd	tmpcode/commond.h	/^	stRemoveTeamUserCmd()$/;"	f	struct:stRemoveTeamUserCmd
stRemoveTeamUserCmd	tmpcode/commond.h	/^struct stRemoveTeamUserCmd : public stChatUserCmd$/;"	s
stRemoveUserMapScreenUserCmd	base/Command.h	/^    stRemoveUserMapScreenUserCmd()$/;"	f	struct:Cmd::stRemoveUserMapScreenUserCmd
stRemoveUserMapScreenUserCmd	base/Command.h	/^  struct stRemoveUserMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stRemoveUserMapScreenUserCmd	tmpcode/commond.h	/^	stRemoveUserMapScreenUserCmd()$/;"	f	struct:stRemoveUserMapScreenUserCmd
stRemoveUserMapScreenUserCmd	tmpcode/commond.h	/^struct stRemoveUserMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stRemoveUserSkillPropertyUserCmd	base/Command.h	/^  stRemoveUserSkillPropertyUserCmd()$/;"	f	struct:Cmd::stRemoveUserSkillPropertyUserCmd
stRemoveUserSkillPropertyUserCmd	base/Command.h	/^struct stRemoveUserSkillPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stRemoveWaitingCartoonCmd	base/Command.h	/^  stRemoveWaitingCartoonCmd()$/;"	f	struct:Cmd::stRemoveWaitingCartoonCmd
stRemoveWaitingCartoonCmd	base/Command.h	/^struct stRemoveWaitingCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stRepairCartoonCmd	base/Command.h	/^  stRepairCartoonCmd()$/;"	f	struct:Cmd::stRepairCartoonCmd
stRepairCartoonCmd	base/Command.h	/^struct stRepairCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stRepairObjectGoldNpcTradeUserCmd	base/Command.h	/^  stRepairObjectGoldNpcTradeUserCmd()$/;"	f	struct:Cmd::stRepairObjectGoldNpcTradeUserCmd
stRepairObjectGoldNpcTradeUserCmd	base/Command.h	/^struct stRepairObjectGoldNpcTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stRepairObjectMoneyNpcTradeUserCmd	tmpcode/commond.h	/^    stRepairObjectMoneyNpcTradeUserCmd()$/;"	f	struct:stRepairObjectMoneyNpcTradeUserCmd
stRepairObjectMoneyNpcTradeUserCmd	tmpcode/commond.h	/^struct stRepairObjectMoneyNpcTradeUserCmd:public stTradeUserCmd$/;"	s
stRepairObjectNpcTradeUserCmd	base/Command.h	/^  stRepairObjectNpcTradeUserCmd()$/;"	f	struct:Cmd::stRepairObjectNpcTradeUserCmd
stRepairObjectNpcTradeUserCmd	base/Command.h	/^struct stRepairObjectNpcTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stRepairObjectNpcTradeUserCmd	tmpcode/commond.h	/^    stRepairObjectNpcTradeUserCmd()$/;"	f	struct:stRepairObjectNpcTradeUserCmd
stRepairObjectNpcTradeUserCmd	tmpcode/commond.h	/^struct stRepairObjectNpcTradeUserCmd:public stTradeUserCmd$/;"	s
stRepairUnionTower	tmpcode/commond.h	/^	stRepairUnionTower()$/;"	f	struct:stRepairUnionTower
stRepairUnionTower	tmpcode/commond.h	/^struct stRepairUnionTower: public stUnionUserCmd$/;"	s
stReplayMercenaryCountryCmd	tmpcode/commond.h	/^        stReplayMercenaryCountryCmd()$/;"	f	struct:stReplayMercenaryCountryCmd
stReplayMercenaryCountryCmd	tmpcode/commond.h	/^struct stReplayMercenaryCountryCmd:public stCountryUserCmd$/;"	s
stReplyChunYunCmd	tmpcode/commond.h	/^        stReplyChunYunCmd()$/;"	f	struct:stReplyChunYunCmd
stReplyChunYunCmd	tmpcode/commond.h	/^struct stReplyChunYunCmd : public stChatUserCmd$/;"	s
stReplyRequestGetOnTank	tmpcode/commond.h	/^	stReplyRequestGetOnTank()$/;"	f	struct:stReplyRequestGetOnTank
stReplyRequestGetOnTank	tmpcode/commond.h	/^struct stReplyRequestGetOnTank : public stTankUserCmd$/;"	s
stReportChatCmd	tmpcode/commond.h	/^	stReportChatCmd()$/;"	f	struct:stReportChatCmd
stReportChatCmd	tmpcode/commond.h	/^struct stReportChatCmd : public stChatUserCmd$/;"	s
stReq32NameListUserCmd	tmpcode/commond.h	/^	stReq32NameListUserCmd()$/;"	f	struct:stReq32NameListUserCmd
stReq32NameListUserCmd	tmpcode/commond.h	/^struct stReq32NameListUserCmd : public stDragonUserCmd$/;"	s
stReqAccelcmdPropUserCmd	tmpcode/commond.h	/^        stReqAccelcmdPropUserCmd()$/;"	f	struct:stReqAccelcmdPropUserCmd
stReqAccelcmdPropUserCmd	tmpcode/commond.h	/^struct stReqAccelcmdPropUserCmd : public stPropertyUserCmd$/;"	s
stReqAccelkKeyPropertyUserCmd	tmpcode/commond.h	/^    stReqAccelkKeyPropertyUserCmd()$/;"	f	struct:stReqAccelkKeyPropertyUserCmd
stReqAccelkKeyPropertyUserCmd	tmpcode/commond.h	/^struct stReqAccelkKeyPropertyUserCmd: public stPropertyUserCmd$/;"	s
stReqAchivementAwardUserCmd	tmpcode/commond.h	/^	stReqAchivementAwardUserCmd()$/;"	f	struct:stReqAchivementAwardUserCmd
stReqAchivementAwardUserCmd	tmpcode/commond.h	/^struct stReqAchivementAwardUserCmd : public stDataUserCmd$/;"	s
stReqAddTeamCmd	tmpcode/commond.h	/^	 stReqAddTeamCmd()$/;"	f	struct:stReqAddTeamCmd
stReqAddTeamCmd	tmpcode/commond.h	/^ struct stReqAddTeamCmd : public stChatUserCmd$/;"	s
stReqAddTeamUserCmd	tmpcode/commond.h	/^	stReqAddTeamUserCmd()$/;"	f	struct:stReqAddTeamUserCmd
stReqAddTeamUserCmd	tmpcode/commond.h	/^struct stReqAddTeamUserCmd : public stTeamRecruitUserCmd$/;"	s
stReqAgreementUnmarryCmd	tmpcode/commond.h	/^	stReqAgreementUnmarryCmd()$/;"	f	struct:stReqAgreementUnmarryCmd
stReqAgreementUnmarryCmd	tmpcode/commond.h	/^struct stReqAgreementUnmarryCmd  : public stRelationUserCmd$/;"	s
stReqAllCardTujianDataUserCmd	base/HeroCardCmd.h	/^	stReqAllCardTujianDataUserCmd()$/;"	f	struct:Cmd::stReqAllCardTujianDataUserCmd
stReqAllCardTujianDataUserCmd	base/HeroCardCmd.h	/^    struct stReqAllCardTujianDataUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stReqAllCityHeartCmd	tmpcode/commond.h	/^	stReqAllCityHeartCmd()$/;"	f	struct:stReqAllCityHeartCmd
stReqAllCityHeartCmd	tmpcode/commond.h	/^struct stReqAllCityHeartCmd : public stCountryUserCmd$/;"	s
stReqAllHeroInfoUserCmd	base/HeroCardCmd.h	/^	stReqAllHeroInfoUserCmd()$/;"	f	struct:Cmd::stReqAllHeroInfoUserCmd
stReqAllHeroInfoUserCmd	base/HeroCardCmd.h	/^    struct stReqAllHeroInfoUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stReqAlterUnionSellPrice	tmpcode/commond.h	/^	stReqAlterUnionSellPrice()$/;"	f	struct:stReqAlterUnionSellPrice
stReqAlterUnionSellPrice	tmpcode/commond.h	/^struct stReqAlterUnionSellPrice : public stUnionUserCmd$/;"	s
stReqArmyGenUserCmd	base/Command.h	/^  stReqArmyGenUserCmd()$/;"	f	struct:Cmd::stReqArmyGenUserCmd
stReqArmyGenUserCmd	base/Command.h	/^struct stReqArmyGenUserCmd : public stArmyUserCmd$/;"	s	namespace:Cmd
stReqArmyListUserCmd	base/Command.h	/^  stReqArmyListUserCmd()$/;"	f	struct:Cmd::stReqArmyListUserCmd
stReqArmyListUserCmd	base/Command.h	/^struct stReqArmyListUserCmd : public stArmyUserCmd$/;"	s	namespace:Cmd
stReqArmySpecUserCmd	base/Command.h	/^  stReqArmySpecUserCmd()$/;"	f	struct:Cmd::stReqArmySpecUserCmd
stReqArmySpecUserCmd	base/Command.h	/^struct stReqArmySpecUserCmd : public stArmyUserCmd$/;"	s	namespace:Cmd
stReqAvatarInfo	tmpcode/commond.h	/^	stReqAvatarInfo()$/;"	f	struct:stReqAvatarInfo
stReqAvatarInfo	tmpcode/commond.h	/^struct stReqAvatarInfo : public stSeptUserCmd$/;"	s
stReqAwardDailyQuestUserCmd	tmpcode/commond.h	/^        stReqAwardDailyQuestUserCmd()$/;"	f	struct:stReqAwardDailyQuestUserCmd
stReqAwardDailyQuestUserCmd	tmpcode/commond.h	/^struct stReqAwardDailyQuestUserCmd : public stRandomQuestUserCmd$/;"	s
stReqBackUserCmd	tmpcode/commond.h	/^    stReqBackUserCmd()$/;"	f	struct:stReqBackUserCmd
stReqBackUserCmd	tmpcode/commond.h	/^struct stReqBackUserCmd: public stDareUserCmd$/;"	s
stReqBattleInfoCmd	tmpcode/commond.h	/^	stReqBattleInfoCmd()$/;"	f	struct:stReqBattleInfoCmd
stReqBattleInfoCmd	tmpcode/commond.h	/^struct stReqBattleInfoCmd : public stResidentBattleCmd$/;"	s
stReqBeKingCmd	tmpcode/commond.h	/^	stReqBeKingCmd()$/;"	f	struct:stReqBeKingCmd
stReqBeKingCmd	tmpcode/commond.h	/^struct stReqBeKingCmd : public stCityUserCmd$/;"	s
stReqBetInChallengeDragonUserCmd	tmpcode/commond.h	/^	stReqBetInChallengeDragonUserCmd()$/;"	f	struct:stReqBetInChallengeDragonUserCmd
stReqBetInChallengeDragonUserCmd	tmpcode/commond.h	/^struct stReqBetInChallengeDragonUserCmd : public stDragonUserCmd$/;"	s
stReqBossListUserCmd	tmpcode/commond.h	/^	stReqBossListUserCmd()$/;"	f	struct:stReqBossListUserCmd
stReqBossListUserCmd	tmpcode/commond.h	/^struct stReqBossListUserCmd : public stDataUserCmd$/;"	s
stReqBuildMagicForgeObject	tmpcode/commond.h	/^	stReqBuildMagicForgeObject()$/;"	f	struct:stReqBuildMagicForgeObject
stReqBuildMagicForgeObject	tmpcode/commond.h	/^struct stReqBuildMagicForgeObject : public stUnionUserCmd$/;"	s
stReqBuildPotentialSkillUserCmd	tmpcode/commond.h	/^        stReqBuildPotentialSkillUserCmd()$/;"	f	struct:stReqBuildPotentialSkillUserCmd
stReqBuildPotentialSkillUserCmd	tmpcode/commond.h	/^struct stReqBuildPotentialSkillUserCmd : public stPropertyUserCmd$/;"	s
stReqBuyMobileObjectPropertyUserCmd	base/Command.h	/^    stReqBuyMobileObjectPropertyUserCmd()$/;"	f	struct:Cmd::stReqBuyMobileObjectPropertyUserCmd
stReqBuyMobileObjectPropertyUserCmd	base/Command.h	/^  struct stReqBuyMobileObjectPropertyUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stReqBuySeptAdCmd	tmpcode/commond.h	/^	stReqBuySeptAdCmd()$/;"	f	struct:stReqBuySeptAdCmd
stReqBuySeptAdCmd	tmpcode/commond.h	/^struct stReqBuySeptAdCmd : public stCountryUserCmd$/;"	s
stReqCardGroupListInfoUserCmd	base/HeroCardCmd.h	/^	stReqCardGroupListInfoUserCmd()$/;"	f	struct:Cmd::stReqCardGroupListInfoUserCmd
stReqCardGroupListInfoUserCmd	base/HeroCardCmd.h	/^    struct stReqCardGroupListInfoUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stReqCatchGameBeginUserCmd	tmpcode/commond.h	/^	stReqCatchGameBeginUserCmd()$/;"	f	struct:stReqCatchGameBeginUserCmd
stReqCatchGameBeginUserCmd	tmpcode/commond.h	/^struct stReqCatchGameBeginUserCmd : public stCatchEggUserCmd$/;"	s
stReqCatchLingQiBeginUserCmd	tmpcode/commond.h	/^    stReqCatchLingQiBeginUserCmd()$/;"	f	struct:stReqCatchLingQiBeginUserCmd
stReqCatchLingQiBeginUserCmd	tmpcode/commond.h	/^struct stReqCatchLingQiBeginUserCmd : public stCatchEggUserCmd$/;"	s
stReqChallengeUserCmd	tmpcode/commond.h	/^	stReqChallengeUserCmd()$/;"	f	struct:stReqChallengeUserCmd
stReqChallengeUserCmd	tmpcode/commond.h	/^struct stReqChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stReqChangeBackTitleCmd	tmpcode/commond.h	/^	stReqChangeBackTitleCmd()$/;"	f	struct:stReqChangeBackTitleCmd
stReqChangeBackTitleCmd	tmpcode/commond.h	/^struct stReqChangeBackTitleCmd : public stTitleUserCmd$/;"	s
stReqChangeSkillStoreType	tmpcode/commond.h	/^        stReqChangeSkillStoreType()$/;"	f	struct:stReqChangeSkillStoreType
stReqChangeSkillStoreType	tmpcode/commond.h	/^struct stReqChangeSkillStoreType:stTradeUserCmd$/;"	s
stReqChangeZoneUserCmd	base/BattleUserCmd.h	/^	stReqChangeZoneUserCmd()$/;"	f	struct:Cmd::stReqChangeZoneUserCmd
stReqChangeZoneUserCmd	base/BattleUserCmd.h	/^    struct stReqChangeZoneUserCmd : public stBattleUserCmd$/;"	s	namespace:Cmd
stReqCityDareInfoUserCmd	tmpcode/commond.h	/^	stReqCityDareInfoUserCmd()$/;"	f	struct:stReqCityDareInfoUserCmd
stReqCityDareInfoUserCmd	tmpcode/commond.h	/^struct stReqCityDareInfoUserCmd : public stUnionCityDareUserCmd$/;"	s
stReqCityDareIntoUserCmd	tmpcode/commond.h	/^	stReqCityDareIntoUserCmd()$/;"	f	struct:stReqCityDareIntoUserCmd
stReqCityDareIntoUserCmd	tmpcode/commond.h	/^struct stReqCityDareIntoUserCmd : public stUnionCityDareUserCmd$/;"	s
stReqCityDareMapUserCmd	tmpcode/commond.h	/^	stReqCityDareMapUserCmd()$/;"	f	struct:stReqCityDareMapUserCmd
stReqCityDareMapUserCmd	tmpcode/commond.h	/^struct stReqCityDareMapUserCmd : public stUnionCityDareUserCmd$/;"	s
stReqCityDareMpUserCmd	tmpcode/commond.h	/^	stReqCityDareMpUserCmd()$/;"	f	struct:stReqCityDareMpUserCmd
stReqCityDareMpUserCmd	tmpcode/commond.h	/^struct stReqCityDareMpUserCmd : public stUnionCityDareUserCmd$/;"	s
stReqCityDarePrayUserCmd	tmpcode/commond.h	/^	stReqCityDarePrayUserCmd()$/;"	f	struct:stReqCityDarePrayUserCmd
stReqCityDarePrayUserCmd	tmpcode/commond.h	/^struct stReqCityDarePrayUserCmd : public stUnionCityDareUserCmd$/;"	s
stReqCityDareQuitUserCmd	tmpcode/commond.h	/^	stReqCityDareQuitUserCmd()$/;"	f	struct:stReqCityDareQuitUserCmd
stReqCityDareQuitUserCmd	tmpcode/commond.h	/^struct stReqCityDareQuitUserCmd : public stUnionCityDareUserCmd$/;"	s
stReqCityDareSortUserCmd	tmpcode/commond.h	/^	stReqCityDareSortUserCmd()$/;"	f	struct:stReqCityDareSortUserCmd
stReqCityDareSortUserCmd	tmpcode/commond.h	/^struct stReqCityDareSortUserCmd : public stUnionCityDareUserCmd$/;"	s
stReqCityFundUnionHistoryCmd	tmpcode/commond.h	/^	stReqCityFundUnionHistoryCmd()$/;"	f	struct:stReqCityFundUnionHistoryCmd
stReqCityFundUnionHistoryCmd	tmpcode/commond.h	/^struct stReqCityFundUnionHistoryCmd : public stUnionUserCmd$/;"	s
stReqCityGuardInfo	tmpcode/commond.h	/^	stReqCityGuardInfo()$/;"	f	struct:stReqCityGuardInfo
stReqCityGuardInfo	tmpcode/commond.h	/^struct stReqCityGuardInfo : public stCityUserCmd$/;"	s
stReqCityGuardSortUserCmd	tmpcode/commond.h	/^	stReqCityGuardSortUserCmd()$/;"	f	struct:stReqCityGuardSortUserCmd
stReqCityGuardSortUserCmd	tmpcode/commond.h	/^struct stReqCityGuardSortUserCmd : public stCityUserCmd$/;"	s
stReqCityMinxinRecCmd	tmpcode/commond.h	/^	stReqCityMinxinRecCmd()$/;"	f	struct:stReqCityMinxinRecCmd
stReqCityMinxinRecCmd	tmpcode/commond.h	/^struct stReqCityMinxinRecCmd : public stCityUserCmd$/;"	s
stReqCityOwnerListCmd	base/Command.h	/^  stReqCityOwnerListCmd()$/;"	f	struct:Cmd::stReqCityOwnerListCmd
stReqCityOwnerListCmd	base/Command.h	/^struct stReqCityOwnerListCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stReqCityQuestGetList	tmpcode/commond.h	/^    stReqCityQuestGetList()$/;"	f	struct:stReqCityQuestGetList
stReqCityQuestGetList	tmpcode/commond.h	/^struct stReqCityQuestGetList : public stMapScreenUserCmd$/;"	s
stReqCityQuestList	tmpcode/commond.h	/^    stReqCityQuestList()$/;"	f	struct:stReqCityQuestList
stReqCityQuestList	tmpcode/commond.h	/^struct stReqCityQuestList : public stMapScreenUserCmd$/;"	s
stReqCityReliveNpcInfo	tmpcode/commond.h	/^	stReqCityReliveNpcInfo()$/;"	f	struct:stReqCityReliveNpcInfo
stReqCityReliveNpcInfo	tmpcode/commond.h	/^struct stReqCityReliveNpcInfo : public stCityUserCmd$/;"	s
stReqConsignIssuedQuestUserCmd	tmpcode/commond.h	/^        stReqConsignIssuedQuestUserCmd()$/;"	f	struct:stReqConsignIssuedQuestUserCmd
stReqConsignIssuedQuestUserCmd	tmpcode/commond.h	/^struct stReqConsignIssuedQuestUserCmd : public stQuestUserCmd$/;"	s
stReqContinueUserCmd	tmpcode/commond.h	/^	stReqContinueUserCmd(): objTempID(0)$/;"	f	struct:stReqContinueUserCmd
stReqContinueUserCmd	tmpcode/commond.h	/^struct stReqContinueUserCmd: public stYueMoUserCmd$/;"	s
stReqContributeChangeUnionCoupon	tmpcode/commond.h	/^	stReqContributeChangeUnionCoupon()$/;"	f	struct:stReqContributeChangeUnionCoupon
stReqContributeChangeUnionCoupon	tmpcode/commond.h	/^struct stReqContributeChangeUnionCoupon : public stUnionUserCmd$/;"	s
stReqCountryAlly	base/Command.h	/^  stReqCountryAlly()$/;"	f	struct:Cmd::stReqCountryAlly
stReqCountryAlly	base/Command.h	/^struct stReqCountryAlly : public stAllyUserCmd$/;"	s	namespace:Cmd
stReqCountryAllyInfo	base/Command.h	/^  stReqCountryAllyInfo()$/;"	f	struct:Cmd::stReqCountryAllyInfo
stReqCountryAllyInfo	base/Command.h	/^struct stReqCountryAllyInfo : public stAllyUserCmd$/;"	s	namespace:Cmd
stReqCountryInviteQuestMapUserCmd	tmpcode/commond.h	/^    stReqCountryInviteQuestMapUserCmd(): roomID(0)$/;"	f	struct:stReqCountryInviteQuestMapUserCmd
stReqCountryInviteQuestMapUserCmd	tmpcode/commond.h	/^struct stReqCountryInviteQuestMapUserCmd: public stQuestMapUserCmd$/;"	s
stReqCountryNoteCmd	base/Command.h	/^  stReqCountryNoteCmd()$/;"	f	struct:Cmd::stReqCountryNoteCmd
stReqCountryNoteCmd	base/Command.h	/^struct stReqCountryNoteCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stReqCountryNoteCmd	tmpcode/commond.h	/^	stReqCountryNoteCmd()$/;"	f	struct:stReqCountryNoteCmd
stReqCountryNoteCmd	tmpcode/commond.h	/^struct stReqCountryNoteCmd : public stCountryUserCmd$/;"	s
stReqCourseOfKingCmd	tmpcode/commond.h	/^	stReqCourseOfKingCmd()$/;"	f	struct:stReqCourseOfKingCmd
stReqCourseOfKingCmd	tmpcode/commond.h	/^struct stReqCourseOfKingCmd : public stDataUserCmd$/;"	s
stReqCreateOneCardGroupUserCmd	base/HeroCardCmd.h	/^	stReqCreateOneCardGroupUserCmd()$/;"	f	struct:Cmd::stReqCreateOneCardGroupUserCmd
stReqCreateOneCardGroupUserCmd	base/HeroCardCmd.h	/^    struct stReqCreateOneCardGroupUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stReqCreateSeptSign	tmpcode/commond.h	/^	stReqCreateSeptSign()$/;"	f	struct:stReqCreateSeptSign
stReqCreateSeptSign	tmpcode/commond.h	/^struct stReqCreateSeptSign : public stSeptUserCmd$/;"	s
stReqCreateSeptSignInfo	tmpcode/commond.h	/^	stReqCreateSeptSignInfo()$/;"	f	struct:stReqCreateSeptSignInfo
stReqCreateSeptSignInfo	tmpcode/commond.h	/^struct stReqCreateSeptSignInfo : public stSeptUserCmd$/;"	s
stReqCriminalApplyInfo	tmpcode/commond.h	/^	stReqCriminalApplyInfo()$/;"	f	struct:stReqCriminalApplyInfo
stReqCriminalApplyInfo	tmpcode/commond.h	/^struct stReqCriminalApplyInfo : public stUnionUserCmd$/;"	s
stReqCriminalListInfo	tmpcode/commond.h	/^	stReqCriminalListInfo()$/;"	f	struct:stReqCriminalListInfo
stReqCriminalListInfo	tmpcode/commond.h	/^struct stReqCriminalListInfo : public stUnionUserCmd$/;"	s
stReqCurrentCityTax	tmpcode/commond.h	/^	stReqCurrentCityTax()$/;"	f	struct:stReqCurrentCityTax
stReqCurrentCityTax	tmpcode/commond.h	/^struct stReqCurrentCityTax : public stUnionUserCmd$/;"	s
stReqDailyAchievementInfoUserCmd	tmpcode/commond.h	/^	stReqDailyAchievementInfoUserCmd()$/;"	f	struct:stReqDailyAchievementInfoUserCmd
stReqDailyAchievementInfoUserCmd	tmpcode/commond.h	/^struct stReqDailyAchievementInfoUserCmd : public stDataUserCmd$/;"	s
stReqDailyEmperorMoneyCmd	base/Command.h	/^  stReqDailyEmperorMoneyCmd()$/;"	f	struct:Cmd::stReqDailyEmperorMoneyCmd
stReqDailyEmperorMoneyCmd	base/Command.h	/^struct stReqDailyEmperorMoneyCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stReqDailyWarningQuestUserCmd	tmpcode/commond.h	/^    stReqDailyWarningQuestUserCmd(const BYTE f) $/;"	f	struct:stReqDailyWarningQuestUserCmd
stReqDailyWarningQuestUserCmd	tmpcode/commond.h	/^struct stReqDailyWarningQuestUserCmd : public stQuestUserCmd$/;"	s
stReqDangerAreaUserCmd	tmpcode/commond.h	/^	stReqDangerAreaUserCmd()$/;"	f	struct:stReqDangerAreaUserCmd
stReqDangerAreaUserCmd	tmpcode/commond.h	/^struct stReqDangerAreaUserCmd : public stCountryUserCmd$/;"	s
stReqDecayToOtherLingQiCmd	tmpcode/commond.h	/^	stReqDecayToOtherLingQiCmd()$/;"	f	struct:stReqDecayToOtherLingQiCmd
stReqDecayToOtherLingQiCmd	tmpcode/commond.h	/^struct stReqDecayToOtherLingQiCmd : public stLingQiDecayUserCmd$/;"	s
stReqDeleteOneCardGroupUserCmd	base/HeroCardCmd.h	/^	stReqDeleteOneCardGroupUserCmd()$/;"	f	struct:Cmd::stReqDeleteOneCardGroupUserCmd
stReqDeleteOneCardGroupUserCmd	base/HeroCardCmd.h	/^    struct stReqDeleteOneCardGroupUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stReqDragonIslandMazeContinue	tmpcode/commond.h	/^	stReqDragonIslandMazeContinue()$/;"	f	struct:stReqDragonIslandMazeContinue
stReqDragonIslandMazeContinue	tmpcode/commond.h	/^struct stReqDragonIslandMazeContinue : public stSpecialUserCmd$/;"	s
stReqDragonUserCmd	base/Command.h	/^  stReqDragonUserCmd()$/;"	f	struct:Cmd::stReqDragonUserCmd
stReqDragonUserCmd	base/Command.h	/^struct stReqDragonUserCmd : public stGemUserCmd$/;"	s	namespace:Cmd
stReqDrinkBigfireUserCmd	tmpcode/commond.h	/^	stReqDrinkBigfireUserCmd(): fireTempID(0)$/;"	f	struct:stReqDrinkBigfireUserCmd
stReqDrinkBigfireUserCmd	tmpcode/commond.h	/^struct stReqDrinkBigfireUserCmd: public stGouhuoUserCmd$/;"	s
stReqDrinkGouhuoUserCmd	tmpcode/commond.h	/^	stReqDrinkGouhuoUserCmd(): gouhuoTempID(0), drinkThisID(0)$/;"	f	struct:stReqDrinkGouhuoUserCmd
stReqDrinkGouhuoUserCmd	tmpcode/commond.h	/^struct stReqDrinkGouhuoUserCmd: public stGouhuoUserCmd$/;"	s
stReqEmployNpcAdUserCmd	tmpcode/commond.h	/^	stReqEmployNpcAdUserCmd()$/;"	f	struct:stReqEmployNpcAdUserCmd
stReqEmployNpcAdUserCmd	tmpcode/commond.h	/^struct stReqEmployNpcAdUserCmd : public stBarUserCmd$/;"	s
stReqEndMyRoundUserCmd	base/HeroCardCmd.h	/^	stReqEndMyRoundUserCmd()$/;"	f	struct:Cmd::stReqEndMyRoundUserCmd
stReqEndMyRoundUserCmd	base/HeroCardCmd.h	/^    struct stReqEndMyRoundUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stReqEnemyListCmd	tmpcode/commond.h	/^	stReqEnemyListCmd()$/;"	f	struct:stReqEnemyListCmd
stReqEnemyListCmd	tmpcode/commond.h	/^struct stReqEnemyListCmd : public stRelationUserCmd$/;"	s
stReqEnterBattleUserCmd	base/BattleUserCmd.h	/^	stReqEnterBattleUserCmd()$/;"	f	struct:Cmd::stReqEnterBattleUserCmd
stReqEnterBattleUserCmd	base/BattleUserCmd.h	/^    struct stReqEnterBattleUserCmd : public stBattleUserCmd$/;"	s	namespace:Cmd
stReqEnterDTUserCmd	tmpcode/commond.h	/^	stReqEnterDTUserCmd(): npcID(0)$/;"	f	struct:stReqEnterDTUserCmd
stReqEnterDTUserCmd	tmpcode/commond.h	/^struct stReqEnterDTUserCmd: public stDragonTotemUserCmd$/;"	s
stReqEnterFarm	tmpcode/commond.h	/^	stReqEnterFarm()$/;"	f	struct:stReqEnterFarm
stReqEnterFarm	tmpcode/commond.h	/^struct stReqEnterFarm: public stCatchEggUserCmd$/;"	s
stReqEnterUnfinishedGameUserCmd	base/HeroCardCmd.h	/^	stReqEnterUnfinishedGameUserCmd()$/;"	f	struct:Cmd::stReqEnterUnfinishedGameUserCmd
stReqEnterUnfinishedGameUserCmd	base/HeroCardCmd.h	/^    struct stReqEnterUnfinishedGameUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stReqEnterUnionShop	tmpcode/commond.h	/^        stReqEnterUnionShop()$/;"	f	struct:stReqEnterUnionShop
stReqEnterUnionShop	tmpcode/commond.h	/^struct stReqEnterUnionShop : public stUnionUserCmd$/;"	s
stReqEquipAwardUserCmd	tmpcode/commond.h	/^	stReqEquipAwardUserCmd()$/;"	f	struct:stReqEquipAwardUserCmd
stReqEquipAwardUserCmd	tmpcode/commond.h	/^struct stReqEquipAwardUserCmd : public stDataUserCmd$/;"	s
stReqEquipIntensifyInfo	tmpcode/commond.h	/^	stReqEquipIntensifyInfo()$/;"	f	struct:stReqEquipIntensifyInfo
stReqEquipIntensifyInfo	tmpcode/commond.h	/^struct stReqEquipIntensifyInfo : public stUnionUserCmd$/;"	s
stReqExploitToExpUserCmd	tmpcode/commond.h	/^	stReqExploitToExpUserCmd()$/;"	f	struct:stReqExploitToExpUserCmd
stReqExploitToExpUserCmd	tmpcode/commond.h	/^struct stReqExploitToExpUserCmd : public stNobilityUserCmd$/;"	s
stReqExploitToMoneyUserCmd	tmpcode/commond.h	/^	stReqExploitToMoneyUserCmd()$/;"	f	struct:stReqExploitToMoneyUserCmd
stReqExploitToMoneyUserCmd	tmpcode/commond.h	/^struct stReqExploitToMoneyUserCmd : public stNobilityUserCmd$/;"	s
stReqExploitToNobilityUserCmd	tmpcode/commond.h	/^	stReqExploitToNobilityUserCmd()$/;"	f	struct:stReqExploitToNobilityUserCmd
stReqExploitToNobilityUserCmd	tmpcode/commond.h	/^struct stReqExploitToNobilityUserCmd : public stNobilityUserCmd$/;"	s
stReqFarmInfoUserCmd	tmpcode/commond.h	/^	stReqFarmInfoUserCmd()$/;"	f	struct:stReqFarmInfoUserCmd
stReqFarmInfoUserCmd	tmpcode/commond.h	/^struct stReqFarmInfoUserCmd : public stUnionPlantUserCmd$/;"	s
stReqFetchSeptStoreCmd	tmpcode/commond.h	/^	stReqFetchSeptStoreCmd()$/;"	f	struct:stReqFetchSeptStoreCmd
stReqFetchSeptStoreCmd	tmpcode/commond.h	/^struct stReqFetchSeptStoreCmd : public stSeptUserCmd$/;"	s
stReqFightPrepareOverUserCmd	base/HeroCardCmd.h	/^	stReqFightPrepareOverUserCmd()$/;"	f	struct:Cmd::stReqFightPrepareOverUserCmd
stReqFightPrepareOverUserCmd	base/HeroCardCmd.h	/^    struct stReqFightPrepareOverUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stReqFindoutAwardPromoterUserCmd	tmpcode/commond.h	/^	stReqFindoutAwardPromoterUserCmd()$/;"	f	struct:stReqFindoutAwardPromoterUserCmd
stReqFindoutAwardPromoterUserCmd	tmpcode/commond.h	/^struct stReqFindoutAwardPromoterUserCmd : public stQuestUserCmd$/;"	s
stReqFinishSkillStore	tmpcode/commond.h	/^        stReqFinishSkillStore()$/;"	f	struct:stReqFinishSkillStore
stReqFinishSkillStore	tmpcode/commond.h	/^struct stReqFinishSkillStore:stTradeUserCmd$/;"	s
stReqFlagInfoUserCmd	tmpcode/commond.h	/^	stReqFlagInfoUserCmd(): npcTempID(0)$/;"	f	struct:stReqFlagInfoUserCmd
stReqFlagInfoUserCmd	tmpcode/commond.h	/^struct stReqFlagInfoUserCmd: public stZYZUserCmd$/;"	s
stReqForceRelationDataUserCmd	tmpcode/commond.h	/^	stReqForceRelationDataUserCmd()$/;"	f	struct:stReqForceRelationDataUserCmd
stReqForceRelationDataUserCmd	tmpcode/commond.h	/^struct stReqForceRelationDataUserCmd : public stQuestUserCmd$/;"	s
stReqGenCountryCmd	base/Command.h	/^  stReqGenCountryCmd()$/;"	f	struct:Cmd::stReqGenCountryCmd
stReqGenCountryCmd	base/Command.h	/^struct stReqGenCountryCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stReqGetEquipAwardInfoUserCmd	tmpcode/commond.h	/^	stReqGetEquipAwardInfoUserCmd()$/;"	f	struct:stReqGetEquipAwardInfoUserCmd
stReqGetEquipAwardInfoUserCmd	tmpcode/commond.h	/^struct stReqGetEquipAwardInfoUserCmd : public stDataUserCmd$/;"	s
stReqGetPromoterRewardUserCmd	tmpcode/commond.h	/^	stReqGetPromoterRewardUserCmd()$/;"	f	struct:stReqGetPromoterRewardUserCmd
stReqGetPromoterRewardUserCmd	tmpcode/commond.h	/^struct stReqGetPromoterRewardUserCmd : public stQuestUserCmd$/;"	s
stReqGetUnionInfo	tmpcode/commond.h	/^	stReqGetUnionInfo()$/;"	f	struct:stReqGetUnionInfo
stReqGetUnionInfo	tmpcode/commond.h	/^struct stReqGetUnionInfo: public  stUnionUserCmd$/;"	s
stReqGiveUpOneBattleUserCmd	base/HeroCardCmd.h	/^	stReqGiveUpOneBattleUserCmd()$/;"	f	struct:Cmd::stReqGiveUpOneBattleUserCmd
stReqGiveUpOneBattleUserCmd	base/HeroCardCmd.h	/^    struct stReqGiveUpOneBattleUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stReqGouhuoUserCmd	tmpcode/commond.h	/^	stReqGouhuoUserCmd(): tempID(0)$/;"	f	struct:stReqGouhuoUserCmd
stReqGouhuoUserCmd	tmpcode/commond.h	/^struct stReqGouhuoUserCmd: public stGouhuoUserCmd$/;"	s
stReqHWInfoDataUserCmd	tmpcode/commond.h	/^	stReqHWInfoDataUserCmd()$/;"	f	struct:stReqHWInfoDataUserCmd
stReqHWInfoDataUserCmd	tmpcode/commond.h	/^struct stReqHWInfoDataUserCmd : public stDataUserCmd$/;"	s
stReqHeroFightMatchUserCmd	base/HeroCardCmd.h	/^	stReqHeroFightMatchUserCmd()$/;"	f	struct:Cmd::stReqHeroFightMatchUserCmd
stReqHeroFightMatchUserCmd	base/HeroCardCmd.h	/^    struct stReqHeroFightMatchUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stReqInfoIssuedQuestUserCmd	tmpcode/commond.h	/^        stReqInfoIssuedQuestUserCmd()$/;"	f	struct:stReqInfoIssuedQuestUserCmd
stReqInfoIssuedQuestUserCmd	tmpcode/commond.h	/^struct stReqInfoIssuedQuestUserCmd : public stQuestUserCmd$/;"	s
stReqIsPromoterUserCmd	tmpcode/commond.h	/^	stReqIsPromoterUserCmd()$/;"	f	struct:stReqIsPromoterUserCmd
stReqIsPromoterUserCmd	tmpcode/commond.h	/^struct stReqIsPromoterUserCmd : public stQuestUserCmd$/;"	s
stReqJieZhanStateList	tmpcode/commond.h	/^    stReqJieZhanStateList()$/;"	f	struct:stReqJieZhanStateList
stReqJieZhanStateList	tmpcode/commond.h	/^struct stReqJieZhanStateList : public stMapScreenUserCmd$/;"	s
stReqJoinChannelCmd	tmpcode/commond.h	/^	 stReqJoinChannelCmd()$/;"	f	struct:stReqJoinChannelCmd
stReqJoinChannelCmd	tmpcode/commond.h	/^ struct stReqJoinChannelCmd : public stChatUserCmd$/;"	s
stReqJoinLTQUserCmd	tmpcode/commond.h	/^	stReqJoinLTQUserCmd()$/;"	f	struct:stReqJoinLTQUserCmd
stReqJoinLTQUserCmd	tmpcode/commond.h	/^struct stReqJoinLTQUserCmd : public stLTQUserCmd$/;"	s
stReqJoinQuestMapUserCmd	tmpcode/commond.h	/^	stReqJoinQuestMapUserCmd()$/;"	f	struct:stReqJoinQuestMapUserCmd
stReqJoinQuestMapUserCmd	tmpcode/commond.h	/^struct stReqJoinQuestMapUserCmd : public stQuestMapUserCmd$/;"	s
stReqJoinSeptBattleUserCmd	tmpcode/commond.h	/^	stReqJoinSeptBattleUserCmd()$/;"	f	struct:stReqJoinSeptBattleUserCmd
stReqJoinSeptBattleUserCmd	tmpcode/commond.h	/^struct stReqJoinSeptBattleUserCmd : public stSeptBattleUserCmd$/;"	s
stReqJoinSeptPopoUserCmd	tmpcode/commond.h	/^	stReqJoinSeptPopoUserCmd()$/;"	f	struct:stReqJoinSeptPopoUserCmd
stReqJoinSeptPopoUserCmd	tmpcode/commond.h	/^struct stReqJoinSeptPopoUserCmd : public stSeptPopoUserCmd$/;"	s
stReqJoinTeamCmd	tmpcode/commond.h	/^	stReqJoinTeamCmd()$/;"	f	struct:stReqJoinTeamCmd
stReqJoinTeamCmd	tmpcode/commond.h	/^struct stReqJoinTeamCmd : public stChatUserCmd$/;"	s
stReqKingListCmd	base/Command.h	/^  stReqKingListCmd()$/;"	f	struct:Cmd::stReqKingListCmd
stReqKingListCmd	base/Command.h	/^struct stReqKingListCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stReqLandItemUserCmd	tmpcode/commond.h	/^	stReqLandItemUserCmd()$/;"	f	struct:stReqLandItemUserCmd
stReqLandItemUserCmd	tmpcode/commond.h	/^struct stReqLandItemUserCmd : public stUnionPlantUserCmd$/;"	s
stReqLastPrivateStoreInfoCmd	tmpcode/commond.h	/^	stReqLastPrivateStoreInfoCmd()$/;"	f	struct:stReqLastPrivateStoreInfoCmd
stReqLastPrivateStoreInfoCmd	tmpcode/commond.h	/^struct stReqLastPrivateStoreInfoCmd:stTradeUserCmd$/;"	s
stReqLeaveDTUserCmd	tmpcode/commond.h	/^	stReqLeaveDTUserCmd(): type(0)$/;"	f	struct:stReqLeaveDTUserCmd
stReqLeaveDTUserCmd	tmpcode/commond.h	/^struct stReqLeaveDTUserCmd: public stDragonTotemUserCmd$/;"	s
stReqListPotentialSkillBuildUserCmd	tmpcode/commond.h	/^        stReqListPotentialSkillBuildUserCmd()$/;"	f	struct:stReqListPotentialSkillBuildUserCmd
stReqListPotentialSkillBuildUserCmd	tmpcode/commond.h	/^struct stReqListPotentialSkillBuildUserCmd : public stPropertyUserCmd$/;"	s
stReqListRandomQuestCmd	tmpcode/commond.h	/^	stReqListRandomQuestCmd()$/;"	f	struct:stReqListRandomQuestCmd
stReqListRandomQuestCmd	tmpcode/commond.h	/^struct stReqListRandomQuestCmd : public stRandomQuestUserCmd$/;"	s
stReqMagicForgeInfo	tmpcode/commond.h	/^	stReqMagicForgeInfo()$/;"	f	struct:stReqMagicForgeInfo
stReqMagicForgeInfo	tmpcode/commond.h	/^struct stReqMagicForgeInfo : public stUnionUserCmd$/;"	s
stReqMapTreasureUserCmd	tmpcode/commond.h	/^        stReqMapTreasureUserCmd()$/;"	f	struct:stReqMapTreasureUserCmd
stReqMapTreasureUserCmd	tmpcode/commond.h	/^struct stReqMapTreasureUserCmd : public stDigTreasureUserCmd {$/;"	s
stReqMarketObjectInfoPropertyUserCmd	base/Command.h	/^    stReqMarketObjectInfoPropertyUserCmd()$/;"	f	struct:Cmd::stReqMarketObjectInfoPropertyUserCmd
stReqMarketObjectInfoPropertyUserCmd	base/Command.h	/^struct stReqMarketObjectInfoPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stReqMarriageHoldCmd	tmpcode/commond.h	/^	stReqMarriageHoldCmd()$/;"	f	struct:stReqMarriageHoldCmd
stReqMarriageHoldCmd	tmpcode/commond.h	/^struct stReqMarriageHoldCmd : stRelationUserCmd$/;"	s
stReqMarriageInteractionCmd	tmpcode/commond.h	/^	stReqMarriageInteractionCmd()$/;"	f	struct:stReqMarriageInteractionCmd
stReqMarriageInteractionCmd	tmpcode/commond.h	/^struct stReqMarriageInteractionCmd : public stRelationUserCmd$/;"	s
stReqMarriagePressCmd	tmpcode/commond.h	/^	stReqMarriagePressCmd()$/;"	f	struct:stReqMarriagePressCmd
stReqMarriagePressCmd	tmpcode/commond.h	/^struct stReqMarriagePressCmd : stRelationUserCmd$/;"	s
stReqMasterPerformCmd	tmpcode/commond.h	/^	stReqMasterPerformCmd()$/;"	f	struct:stReqMasterPerformCmd
stReqMasterPerformCmd	tmpcode/commond.h	/^struct stReqMasterPerformCmd : public stSeptUserCmd$/;"	s
stReqMasterPerformStateCmd	tmpcode/commond.h	/^	stReqMasterPerformStateCmd()$/;"	f	struct:stReqMasterPerformStateCmd
stReqMasterPerformStateCmd	tmpcode/commond.h	/^struct stReqMasterPerformStateCmd : public stSeptUserCmd$/;"	s
stReqMaxLevelIconDataUserCmd	tmpcode/commond.h	/^	stReqMaxLevelIconDataUserCmd()$/;"	f	struct:stReqMaxLevelIconDataUserCmd
stReqMaxLevelIconDataUserCmd	tmpcode/commond.h	/^struct stReqMaxLevelIconDataUserCmd : public stMaxLevelLimitUserCmd$/;"	s
stReqMerchListInfo	tmpcode/commond.h	/^        stReqMerchListInfo()$/;"	f	struct:stReqMerchListInfo
stReqMerchListInfo	tmpcode/commond.h	/^struct stReqMerchListInfo : public stUnionUserCmd$/;"	s
stReqMerchMeetingInfo	tmpcode/commond.h	/^        stReqMerchMeetingInfo()$/;"	f	struct:stReqMerchMeetingInfo
stReqMerchMeetingInfo	tmpcode/commond.h	/^struct stReqMerchMeetingInfo : public stUnionUserCmd$/;"	s
stReqMerchNoticePrice	tmpcode/commond.h	/^	stReqMerchNoticePrice()$/;"	f	struct:stReqMerchNoticePrice
stReqMerchNoticePrice	tmpcode/commond.h	/^struct stReqMerchNoticePrice : public stUnionUserCmd$/;"	s
stReqMerchRoadInfo	tmpcode/commond.h	/^        stReqMerchRoadInfo()$/;"	f	struct:stReqMerchRoadInfo
stReqMerchRoadInfo	tmpcode/commond.h	/^struct stReqMerchRoadInfo : public stUnionUserCmd$/;"	s
stReqMoneyUserCmd	tmpcode/commond.h	/^	stReqMoneyUserCmd(): npcTempID(0)$/;"	f	struct:stReqMoneyUserCmd
stReqMoneyUserCmd	tmpcode/commond.h	/^struct stReqMoneyUserCmd: public stZYZUserCmd$/;"	s
stReqMyRanksChatCmd	tmpcode/commond.h	/^	stReqMyRanksChatCmd() $/;"	f	struct:stReqMyRanksChatCmd
stReqMyRanksChatCmd	tmpcode/commond.h	/^struct stReqMyRanksChatCmd : public stChatUserCmd$/;"	s
stReqNewBoxLockItemUserCmd	tmpcode/commond.h	/^	stReqNewBoxLockItemUserCmd()$/;"	f	struct:stReqNewBoxLockItemUserCmd
stReqNewBoxLockItemUserCmd	tmpcode/commond.h	/^struct stReqNewBoxLockItemUserCmd : public stPropertyUserCmd$/;"	s
stReqNextStateMarryCmd	tmpcode/commond.h	/^	stReqNextStateMarryCmd()$/;"	f	struct:stReqNextStateMarryCmd
stReqNextStateMarryCmd	tmpcode/commond.h	/^struct stReqNextStateMarryCmd : public stRelationUserCmd$/;"	s
stReqNowSeptAdPrice	tmpcode/commond.h	/^	stReqNowSeptAdPrice()$/;"	f	struct:stReqNowSeptAdPrice
stReqNowSeptAdPrice	tmpcode/commond.h	/^struct stReqNowSeptAdPrice : public stCountryUserCmd$/;"	s
stReqNpcOwnerListCmd	base/Command.h	/^  stReqNpcOwnerListCmd()$/;"	f	struct:Cmd::stReqNpcOwnerListCmd
stReqNpcOwnerListCmd	base/Command.h	/^struct stReqNpcOwnerListCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stReqOccupiedNpcNpcDare	tmpcode/commond.h	/^	stReqOccupiedNpcNpcDare()$/;"	f	struct:stReqOccupiedNpcNpcDare
stReqOccupiedNpcNpcDare	tmpcode/commond.h	/^struct stReqOccupiedNpcNpcDare : public stNpcDareUserCmd$/;"	s
stReqOfficialUserCmd	tmpcode/commond.h	/^        stReqOfficialUserCmd()$/;"	f	struct:stReqOfficialUserCmd
stReqOfficialUserCmd	tmpcode/commond.h	/^struct stReqOfficialUserCmd : public stOfficialUserCmd$/;"	s
stReqOneCardGroupInfoUserCmd	base/HeroCardCmd.h	/^	stReqOneCardGroupInfoUserCmd()$/;"	f	struct:Cmd::stReqOneCardGroupInfoUserCmd
stReqOneCardGroupInfoUserCmd	base/HeroCardCmd.h	/^    struct stReqOneCardGroupInfoUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stReqOpenBoxUserCmd	tmpcode/commond.h	/^    stReqOpenBoxUserCmd(): npcTempID(0)$/;"	f	struct:stReqOpenBoxUserCmd
stReqOpenBoxUserCmd	tmpcode/commond.h	/^struct stReqOpenBoxUserCmd: public stWeekBoxUserCmd$/;"	s
stReqOpenHappyCardBoxUserCmd	tmpcode/commond.h	/^	stReqOpenHappyCardBoxUserCmd()$/;"	f	struct:stReqOpenHappyCardBoxUserCmd
stReqOpenHappyCardBoxUserCmd	tmpcode/commond.h	/^struct stReqOpenHappyCardBoxUserCmd: public stWeekBoxUserCmd$/;"	s
stReqOpenSeptStoreCmd	tmpcode/commond.h	/^	stReqOpenSeptStoreCmd()$/;"	f	struct:stReqOpenSeptStoreCmd
stReqOpenSeptStoreCmd	tmpcode/commond.h	/^struct stReqOpenSeptStoreCmd : public stSeptUserCmd$/;"	s
stReqPlantUserCmd	tmpcode/commond.h	/^	stReqPlantUserCmd()$/;"	f	struct:stReqPlantUserCmd
stReqPlantUserCmd	tmpcode/commond.h	/^struct stReqPlantUserCmd : public stUnionPlantUserCmd$/;"	s
stReqPollInfoUserCmd	tmpcode/commond.h	/^	stReqPollInfoUserCmd()$/;"	f	struct:stReqPollInfoUserCmd
stReqPollInfoUserCmd	tmpcode/commond.h	/^struct stReqPollInfoUserCmd : public stUnionPlantUserCmd$/;"	s
stReqPollUserCmd	tmpcode/commond.h	/^	stReqPollUserCmd()$/;"	f	struct:stReqPollUserCmd
stReqPollUserCmd	tmpcode/commond.h	/^struct stReqPollUserCmd : public stUnionPlantUserCmd$/;"	s
stReqProcessResourceUnionCmd	tmpcode/commond.h	/^	stReqProcessResourceUnionCmd()$/;"	f	struct:stReqProcessResourceUnionCmd
stReqProcessResourceUnionCmd	tmpcode/commond.h	/^struct stReqProcessResourceUnionCmd : public stUnionUserCmd$/;"	s
stReqProducingUnionProCmd	tmpcode/commond.h	/^	stReqProducingUnionProCmd()$/;"	f	struct:stReqProducingUnionProCmd
stReqProducingUnionProCmd	tmpcode/commond.h	/^struct stReqProducingUnionProCmd : public stUnionUserCmd$/;"	s
stReqPutCityQuest	tmpcode/commond.h	/^    stReqPutCityQuest()$/;"	f	struct:stReqPutCityQuest
stReqPutCityQuest	tmpcode/commond.h	/^struct stReqPutCityQuest : public  stMapScreenUserCmd$/;"	s
stReqPutSeptStoreCmd	tmpcode/commond.h	/^	stReqPutSeptStoreCmd()$/;"	f	struct:stReqPutSeptStoreCmd
stReqPutSeptStoreCmd	tmpcode/commond.h	/^struct stReqPutSeptStoreCmd : public stSeptUserCmd$/;"	s
stReqRankZhenxuanUserCmd	tmpcode/commond.h	/^	stReqRankZhenxuanUserCmd()$/;"	f	struct:stReqRankZhenxuanUserCmd
stReqRankZhenxuanUserCmd	tmpcode/commond.h	/^struct stReqRankZhenxuanUserCmd: public stZhenxuanJingjiUserCmd$/;"	s
stReqRapidSelectQuestUserCmd	tmpcode/commond.h	/^	stReqRapidSelectQuestUserCmd()  $/;"	f	struct:stReqRapidSelectQuestUserCmd
stReqRapidSelectQuestUserCmd	tmpcode/commond.h	/^struct stReqRapidSelectQuestUserCmd : public stRandomQuestUserCmd$/;"	s
stReqRecallMasterInfo	tmpcode/commond.h	/^	stReqRecallMasterInfo()$/;"	f	struct:stReqRecallMasterInfo
stReqRecallMasterInfo	tmpcode/commond.h	/^struct stReqRecallMasterInfo : public stSeptUserCmd$/;"	s
stReqRecommendBountyUserCmd	base/Command.h	/^  stReqRecommendBountyUserCmd()$/;"	f	struct:Cmd::stReqRecommendBountyUserCmd
stReqRecommendBountyUserCmd	base/Command.h	/^struct stReqRecommendBountyUserCmd : public stRecommendUserCmd$/;"	s	namespace:Cmd
stReqRecommendedBountyUserCmd	base/Command.h	/^  stReqRecommendedBountyUserCmd()$/;"	f	struct:Cmd::stReqRecommendedBountyUserCmd
stReqRecommendedBountyUserCmd	base/Command.h	/^struct stReqRecommendedBountyUserCmd : public stRecommendUserCmd$/;"	s	namespace:Cmd
stReqRentPackUserCmd	tmpcode/commond.h	/^	stReqRentPackUserCmd()$/;"	f	struct:stReqRentPackUserCmd
stReqRentPackUserCmd	tmpcode/commond.h	/^struct stReqRentPackUserCmd : public stDataUserCmd$/;"	s
stReqResourceInfoCmd	tmpcode/commond.h	/^	stReqResourceInfoCmd()$/;"	f	struct:stReqResourceInfoCmd
stReqResourceInfoCmd	tmpcode/commond.h	/^struct stReqResourceInfoCmd : public stResidentBattleCmd$/;"	s
stReqResourceProcessUnionCmd	tmpcode/commond.h	/^	stReqResourceProcessUnionCmd()$/;"	f	struct:stReqResourceProcessUnionCmd
stReqResourceProcessUnionCmd	tmpcode/commond.h	/^struct stReqResourceProcessUnionCmd : public stUnionUserCmd$/;"	s
stReqRestExploitToSalaryUserCmd	tmpcode/commond.h	/^	stReqRestExploitToSalaryUserCmd()$/;"	f	struct:stReqRestExploitToSalaryUserCmd
stReqRestExploitToSalaryUserCmd	tmpcode/commond.h	/^struct stReqRestExploitToSalaryUserCmd : public stNobilityUserCmd$/;"	s
stReqRetTransPropertyUserCmd	tmpcode/commond.h	/^	stReqRetTransPropertyUserCmd()$/;"	f	struct:stReqRetTransPropertyUserCmd
stReqRetTransPropertyUserCmd	tmpcode/commond.h	/^struct stReqRetTransPropertyUserCmd : public stPropertyUserCmd $/;"	s
stReqReturnSourceUserCmd	base/BattleUserCmd.h	/^	stReqReturnSourceUserCmd()$/;"	f	struct:Cmd::stReqReturnSourceUserCmd
stReqReturnSourceUserCmd	base/BattleUserCmd.h	/^    struct stReqReturnSourceUserCmd : public stBattleUserCmd$/;"	s	namespace:Cmd
stReqSaveOneCardGroupUserCmd	base/HeroCardCmd.h	/^	stReqSaveOneCardGroupUserCmd()$/;"	f	struct:Cmd::stReqSaveOneCardGroupUserCmd
stReqSaveOneCardGroupUserCmd	base/HeroCardCmd.h	/^    struct stReqSaveOneCardGroupUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stReqScoreSCUserCmd	tmpcode/commond.h	/^	stReqScoreSCUserCmd()$/;"	f	struct:stReqScoreSCUserCmd
stReqScoreSCUserCmd	tmpcode/commond.h	/^struct stReqScoreSCUserCmd : public stSeptCompeteUserCmd$/;"	s
stReqSecPasswordSelectUserCmd	tmpcode/commond.h	/^    stReqSecPasswordSelectUserCmd()$/;"	f	struct:stReqSecPasswordSelectUserCmd
stReqSecPasswordSelectUserCmd	tmpcode/commond.h	/^struct stReqSecPasswordSelectUserCmd : public stSelectUserCmd$/;"	s
stReqSellToStorage	tmpcode/commond.h	/^	stReqSellToStorage()$/;"	f	struct:stReqSellToStorage
stReqSellToStorage	tmpcode/commond.h	/^struct stReqSellToStorage : public stUnionUserCmd$/;"	s
stReqSeptAvatar	tmpcode/commond.h	/^	stReqSeptAvatar()$/;"	f	struct:stReqSeptAvatar
stReqSeptAvatar	tmpcode/commond.h	/^struct stReqSeptAvatar : public stSeptUserCmd$/;"	s
stReqSeptAvatarInfo	tmpcode/commond.h	/^	stReqSeptAvatarInfo()$/;"	f	struct:stReqSeptAvatarInfo
stReqSeptAvatarInfo	tmpcode/commond.h	/^struct stReqSeptAvatarInfo : public stSeptUserCmd$/;"	s
stReqSeptNameCmd	base/Command.h	/^  stReqSeptNameCmd()$/;"	f	struct:Cmd::stReqSeptNameCmd
stReqSeptNameCmd	base/Command.h	/^struct stReqSeptNameCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stReqSeptNameCmd	tmpcode/commond.h	/^	 stReqSeptNameCmd()$/;"	f	struct:stReqSeptNameCmd
stReqSeptNameCmd	tmpcode/commond.h	/^ struct stReqSeptNameCmd : public stSeptUserCmd$/;"	s
stReqSeptNameListCmd	base/Command.h	/^  stReqSeptNameListCmd()$/;"	f	struct:Cmd::stReqSeptNameListCmd
stReqSeptNameListCmd	base/Command.h	/^struct stReqSeptNameListCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stReqSeptPrepareTimeChallengeUserCmd	tmpcode/commond.h	/^	stReqSeptPrepareTimeChallengeUserCmd()$/;"	f	struct:stReqSeptPrepareTimeChallengeUserCmd
stReqSeptPrepareTimeChallengeUserCmd	tmpcode/commond.h	/^struct stReqSeptPrepareTimeChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stReqSeptSort	base/Command.h	/^  stReqSeptSort()$/;"	f	struct:Cmd::stReqSeptSort
stReqSeptSort	base/Command.h	/^struct stReqSeptSort : public stSeptUserCmd$/;"	s	namespace:Cmd
stReqSeptSort	tmpcode/commond.h	/^	stReqSeptSort()$/;"	f	struct:stReqSeptSort
stReqSeptSort	tmpcode/commond.h	/^struct stReqSeptSort : public stSeptUserCmd$/;"	s
stReqSeptStoreNoticeSeptCmd	tmpcode/commond.h	/^	stReqSeptStoreNoticeSeptCmd()$/;"	f	struct:stReqSeptStoreNoticeSeptCmd
stReqSeptStoreNoticeSeptCmd	tmpcode/commond.h	/^struct stReqSeptStoreNoticeSeptCmd : public stSeptUserCmd$/;"	s
stReqSetTrafficTax	tmpcode/commond.h	/^	stReqSetTrafficTax()$/;"	f	struct:stReqSetTrafficTax
stReqSetTrafficTax	tmpcode/commond.h	/^struct stReqSetTrafficTax : public stUnionUserCmd$/;"	s
stReqShenLongReward	tmpcode/commond.h	/^    stReqShenLongReward()$/;"	f	struct:stReqShenLongReward
stReqShenLongReward	tmpcode/commond.h	/^struct stReqShenLongReward : public stChatUserCmd$/;"	s
stReqShenLongThanks	tmpcode/commond.h	/^    stReqShenLongThanks()$/;"	f	struct:stReqShenLongThanks
stReqShenLongThanks	tmpcode/commond.h	/^struct stReqShenLongThanks : public stChatUserCmd$/;"	s
stReqShowMyRankChatCmd	tmpcode/commond.h	/^	stReqShowMyRankChatCmd()$/;"	f	struct:stReqShowMyRankChatCmd
stReqShowMyRankChatCmd	tmpcode/commond.h	/^struct stReqShowMyRankChatCmd : public stChatUserCmd$/;"	s
stReqShowSkillStoreAds	tmpcode/commond.h	/^        stReqShowSkillStoreAds()$/;"	f	struct:stReqShowSkillStoreAds
stReqShowSkillStoreAds	tmpcode/commond.h	/^struct stReqShowSkillStoreAds:stTradeUserCmd$/;"	s
stReqSoilHouseUserCmd	tmpcode/commond.h	/^	stReqSoilHouseUserCmd()$/;"	f	struct:stReqSoilHouseUserCmd
stReqSoilHouseUserCmd	tmpcode/commond.h	/^struct stReqSoilHouseUserCmd : public stHouseUserCmd$/;"	s
stReqSortListWeekendZhenxuanUserCmd	tmpcode/commond.h	/^	stReqSortListWeekendZhenxuanUserCmd()$/;"	f	struct:stReqSortListWeekendZhenxuanUserCmd
stReqSortListWeekendZhenxuanUserCmd	tmpcode/commond.h	/^struct stReqSortListWeekendZhenxuanUserCmd: public stZhenxuanJingjiUserCmd$/;"	s
stReqSoundTokenCmd	tmpcode/commond.h	/^	stReqSoundTokenCmd()$/;"	f	struct:stReqSoundTokenCmd
stReqSoundTokenCmd	tmpcode/commond.h	/^struct stReqSoundTokenCmd : public stSoundUserCmd$/;"	s
stReqStartCollect	tmpcode/commond.h	/^        stReqStartCollect()$/;"	f	struct:stReqStartCollect
stReqStartCollect	tmpcode/commond.h	/^struct stReqStartCollect : public stSeptUserCmd$/;"	s
stReqStorageToSell	tmpcode/commond.h	/^	stReqStorageToSell()$/;"	f	struct:stReqStorageToSell
stReqStorageToSell	tmpcode/commond.h	/^struct stReqStorageToSell : public stUnionUserCmd$/;"	s
stReqSurePutCityQuest	tmpcode/commond.h	/^    stReqSurePutCityQuest()$/;"	f	struct:stReqSurePutCityQuest
stReqSurePutCityQuest	tmpcode/commond.h	/^struct stReqSurePutCityQuest : public  stMapScreenUserCmd$/;"	s
stReqSurveyContentUserCmd	tmpcode/commond.h	/^	stReqSurveyContentUserCmd()$/;"	f	struct:stReqSurveyContentUserCmd
stReqSurveyContentUserCmd	tmpcode/commond.h	/^struct stReqSurveyContentUserCmd : public stSurveyUserCmd$/;"	s
stReqTankListCmd	tmpcode/commond.h	/^	stReqTankListCmd()$/;"	f	struct:stReqTankListCmd
stReqTankListCmd	tmpcode/commond.h	/^struct stReqTankListCmd : public stTankUserCmd$/;"	s
stReqTeamInfoCmd	tmpcode/commond.h	/^	 stReqTeamInfoCmd()$/;"	f	struct:stReqTeamInfoCmd
stReqTeamInfoCmd	tmpcode/commond.h	/^ struct stReqTeamInfoCmd : public stChatUserCmd$/;"	s
stReqTeamInfoListUserCmd	tmpcode/commond.h	/^	stReqTeamInfoListUserCmd()$/;"	f	struct:stReqTeamInfoListUserCmd
stReqTeamInfoListUserCmd	tmpcode/commond.h	/^struct stReqTeamInfoListUserCmd : public stTeamRecruitUserCmd$/;"	s
stReqTechUserCmd	base/Command.h	/^  stReqTechUserCmd()$/;"	f	struct:Cmd::stReqTechUserCmd
stReqTechUserCmd	base/Command.h	/^struct stReqTechUserCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stReqTigerUserCmd	base/Command.h	/^  stReqTigerUserCmd()$/;"	f	struct:Cmd::stReqTigerUserCmd
stReqTigerUserCmd	base/Command.h	/^struct stReqTigerUserCmd : public stGemUserCmd$/;"	s	namespace:Cmd
stReqTitleInfoCmd	tmpcode/commond.h	/^	stReqTitleInfoCmd()$/;"	f	struct:stReqTitleInfoCmd
stReqTitleInfoCmd	tmpcode/commond.h	/^struct stReqTitleInfoCmd : public stTitleUserCmd$/;"	s
stReqTotmeEndCmd	tmpcode/commond.h	/^	stReqTotmeEndCmd()$/;"	f	struct:stReqTotmeEndCmd
stReqTotmeEndCmd	tmpcode/commond.h	/^struct stReqTotmeEndCmd : public stResidentBattleCmd$/;"	s
stReqTotmeStartCmd	tmpcode/commond.h	/^	stReqTotmeStartCmd()$/;"	f	struct:stReqTotmeStartCmd
stReqTotmeStartCmd	tmpcode/commond.h	/^struct stReqTotmeStartCmd : public stResidentBattleCmd$/;"	s
stReqTransportUserCmd	tmpcode/commond.h	/^	stReqTransportUserCmd()$/;"	f	struct:stReqTransportUserCmd
stReqTransportUserCmd	tmpcode/commond.h	/^struct stReqTransportUserCmd : public stPropertyUserCmd$/;"	s
stReqUnionAlly	tmpcode/commond.h	/^	stReqUnionAlly ()$/;"	f	struct:stReqUnionAlly
stReqUnionAlly	tmpcode/commond.h	/^struct stReqUnionAlly : public stUnionAllyUserCmd$/;"	s
stReqUnionAllyInfo	tmpcode/commond.h	/^	stReqUnionAllyInfo()$/;"	f	struct:stReqUnionAllyInfo
stReqUnionAllyInfo	tmpcode/commond.h	/^struct stReqUnionAllyInfo: public stUnionAllyUserCmd$/;"	s
stReqUnionBuild	tmpcode/commond.h	/^	stReqUnionBuild()       $/;"	f	struct:stReqUnionBuild
stReqUnionBuild	tmpcode/commond.h	/^struct stReqUnionBuild : public stUnionUserCmd$/;"	s
stReqUnionDelResidentReserve	tmpcode/commond.h	/^	stReqUnionDelResidentReserve()$/;"	f	struct:stReqUnionDelResidentReserve
stReqUnionDelResidentReserve	tmpcode/commond.h	/^struct stReqUnionDelResidentReserve: public stUnionUserCmd$/;"	s
stReqUnionHireResidentResource	tmpcode/commond.h	/^	stReqUnionHireResidentResource()$/;"	f	struct:stReqUnionHireResidentResource
stReqUnionHireResidentResource	tmpcode/commond.h	/^struct stReqUnionHireResidentResource: public stUnionUserCmd$/;"	s
stReqUnionMacketInfo	tmpcode/commond.h	/^	stReqUnionMacketInfo()$/;"	f	struct:stReqUnionMacketInfo
stReqUnionMacketInfo	tmpcode/commond.h	/^struct stReqUnionMacketInfo : public stUnionUserCmd$/;"	s
stReqUnionMapBuild	tmpcode/commond.h	/^	stReqUnionMapBuild()                            $/;"	f	struct:stReqUnionMapBuild
stReqUnionMapBuild	tmpcode/commond.h	/^struct stReqUnionMapBuild : public stUnionUserCmd       $/;"	s
stReqUnionMoney	base/Command.h	/^  stReqUnionMoney()$/;"	f	struct:Cmd::stReqUnionMoney
stReqUnionMoney	base/Command.h	/^struct stReqUnionMoney : public stUnionUserCmd$/;"	s	namespace:Cmd
stReqUnionNameCmd	base/Command.h	/^  stReqUnionNameCmd()$/;"	f	struct:Cmd::stReqUnionNameCmd
stReqUnionNameCmd	base/Command.h	/^struct stReqUnionNameCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stReqUnionNameCmd	tmpcode/commond.h	/^	 stReqUnionNameCmd()$/;"	f	struct:stReqUnionNameCmd
stReqUnionNameCmd	tmpcode/commond.h	/^ struct stReqUnionNameCmd : public stUnionUserCmd$/;"	s
stReqUnionNameLlistCmd	base/Command.h	/^  stReqUnionNameLlistCmd()$/;"	f	struct:Cmd::stReqUnionNameLlistCmd
stReqUnionNameLlistCmd	base/Command.h	/^struct stReqUnionNameLlistCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stReqUnionResouceInfo	tmpcode/commond.h	/^	stReqUnionResouceInfo()$/;"	f	struct:stReqUnionResouceInfo
stReqUnionResouceInfo	tmpcode/commond.h	/^struct stReqUnionResouceInfo : public stUnionUserCmd$/;"	s
stReqUnionSellRecond	tmpcode/commond.h	/^	stReqUnionSellRecond()$/;"	f	struct:stReqUnionSellRecond
stReqUnionSellRecond	tmpcode/commond.h	/^struct stReqUnionSellRecond : public stUnionUserCmd$/;"	s
stReqUnionSort	base/Command.h	/^  stReqUnionSort()$/;"	f	struct:Cmd::stReqUnionSort
stReqUnionSort	base/Command.h	/^struct stReqUnionSort : public stUnionUserCmd$/;"	s	namespace:Cmd
stReqUnionSort	tmpcode/commond.h	/^	stReqUnionSort()$/;"	f	struct:stReqUnionSort
stReqUnionSort	tmpcode/commond.h	/^struct stReqUnionSort : public stUnionUserCmd$/;"	s
stReqUnionStorageSellList	tmpcode/commond.h	/^	stReqUnionStorageSellList()$/;"	f	struct:stReqUnionStorageSellList
stReqUnionStorageSellList	tmpcode/commond.h	/^struct stReqUnionStorageSellList : public stUnionUserCmd$/;"	s
stReqUnionTechInfo	tmpcode/commond.h	/^	stReqUnionTechInfo()$/;"	f	struct:stReqUnionTechInfo
stReqUnionTechInfo	tmpcode/commond.h	/^struct stReqUnionTechInfo : public stUnionUserCmd$/;"	s
stReqUnlockChangeZone	base/Command.h	/^    stReqUnlockChangeZone()$/;"	f	struct:Cmd::stReqUnlockChangeZone
stReqUnlockChangeZone	base/Command.h	/^struct stReqUnlockChangeZone : public stLogonUserCmd$/;"	s	namespace:Cmd
stReqUserBaseDataInfoPropertyUserCmd	base/Command.h	/^    stReqUserBaseDataInfoPropertyUserCmd()$/;"	f	struct:Cmd::stReqUserBaseDataInfoPropertyUserCmd
stReqUserBaseDataInfoPropertyUserCmd	base/Command.h	/^struct stReqUserBaseDataInfoPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stReqUserPerformAwardCmd	tmpcode/commond.h	/^	stReqUserPerformAwardCmd()$/;"	f	struct:stReqUserPerformAwardCmd
stReqUserPerformAwardCmd	tmpcode/commond.h	/^struct stReqUserPerformAwardCmd : public stChatUserCmd$/;"	s
stReqUserPerformCmd	tmpcode/commond.h	/^	stReqUserPerformCmd()$/;"	f	struct:stReqUserPerformCmd
stReqUserPerformCmd	tmpcode/commond.h	/^struct stReqUserPerformCmd : public stChatUserCmd$/;"	s
stReqUserPerformState	tmpcode/commond.h	/^	stReqUserPerformState()$/;"	f	struct:stReqUserPerformState
stReqUserPerformState	tmpcode/commond.h	/^struct stReqUserPerformState : public stChatUserCmd$/;"	s
stReqValidQuestUserCmd	base/Command.h	/^  stReqValidQuestUserCmd()$/;"	f	struct:Cmd::stReqValidQuestUserCmd
stReqValidQuestUserCmd	base/Command.h	/^struct stReqValidQuestUserCmd : public stQuestUserCmd$/;"	s	namespace:Cmd
stReqValidQuestUserCmd	tmpcode/commond.h	/^	stReqValidQuestUserCmd()$/;"	f	struct:stReqValidQuestUserCmd
stReqValidQuestUserCmd	tmpcode/commond.h	/^struct stReqValidQuestUserCmd : public stQuestUserCmd$/;"	s
stReqWaitGenUserCmd	base/Command.h	/^  stReqWaitGenUserCmd()$/;"	f	struct:Cmd::stReqWaitGenUserCmd
stReqWaitGenUserCmd	base/Command.h	/^struct stReqWaitGenUserCmd : public stArmyUserCmd$/;"	s	namespace:Cmd
stReqWaitOfficialUserCmd	base/Command.h	/^  stReqWaitOfficialUserCmd()$/;"	f	struct:Cmd::stReqWaitOfficialUserCmd
stReqWaitOfficialUserCmd	base/Command.h	/^struct stReqWaitOfficialUserCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stReqWenMingNCContinueUserCmd	tmpcode/commond.h	/^	stReqWenMingNCContinueUserCmd(): objTempID(0)$/;"	f	struct:stReqWenMingNCContinueUserCmd
stReqWenMingNCContinueUserCmd	tmpcode/commond.h	/^struct stReqWenMingNCContinueUserCmd: public stWenMingNCUserCmd$/;"	s
stReqZoneList	base/BattleUserCmd.h	/^	stReqZoneList()$/;"	f	struct:Cmd::stReqZoneList
stReqZoneList	base/BattleUserCmd.h	/^    struct stReqZoneList : public stBattleUserCmd$/;"	s	namespace:Cmd
stReqestUserEmotionSort	tmpcode/commond.h	/^	stReqestUserEmotionSort()$/;"	f	struct:stReqestUserEmotionSort
stReqestUserEmotionSort	tmpcode/commond.h	/^struct stReqestUserEmotionSort : public stSpecialUserCmd$/;"	s
stRequestAbjurationCitynCmd	base/Command.h	/^  stRequestAbjurationCitynCmd()$/;"	f	struct:Cmd::stRequestAbjurationCitynCmd
stRequestAbjurationCitynCmd	base/Command.h	/^struct stRequestAbjurationCitynCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stRequestAbjurationCitynCmd	tmpcode/commond.h	/^	stRequestAbjurationCitynCmd()$/;"	f	struct:stRequestAbjurationCitynCmd
stRequestAbjurationCitynCmd	tmpcode/commond.h	/^struct stRequestAbjurationCitynCmd : public stUnionUserCmd$/;"	s
stRequestAbjurationSeptNpcSeptCmd	base/Command.h	/^  stRequestAbjurationSeptNpcSeptCmd()$/;"	f	struct:Cmd::stRequestAbjurationSeptNpcSeptCmd
stRequestAbjurationSeptNpcSeptCmd	base/Command.h	/^struct stRequestAbjurationSeptNpcSeptCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stRequestAddObjectSellUserCmd	base/Command.h	/^  stRequestAddObjectSellUserCmd()$/;"	f	struct:Cmd::stRequestAddObjectSellUserCmd
stRequestAddObjectSellUserCmd	base/Command.h	/^struct stRequestAddObjectSellUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stRequestAddObjectSellUserCmd	tmpcode/commond.h	/^	stRequestAddObjectSellUserCmd()$/;"	f	struct:stRequestAddObjectSellUserCmd
stRequestAddObjectSellUserCmd	tmpcode/commond.h	/^struct stRequestAddObjectSellUserCmd:public stTradeUserCmd$/;"	s
stRequestAdvertiseAuction	tmpcode/commond.h	/^	stRequestAdvertiseAuction()$/;"	f	struct:stRequestAdvertiseAuction
stRequestAdvertiseAuction	tmpcode/commond.h	/^struct stRequestAdvertiseAuction: public stAuctionUserCmd$/;"	s
stRequestBeWatcherWeekendZhenxuanUserCmd	tmpcode/commond.h	/^	stRequestBeWatcherWeekendZhenxuanUserCmd()$/;"	f	struct:stRequestBeWatcherWeekendZhenxuanUserCmd
stRequestBeWatcherWeekendZhenxuanUserCmd	tmpcode/commond.h	/^struct stRequestBeWatcherWeekendZhenxuanUserCmd: public stZhenxuanJingjiUserCmd$/;"	s
stRequestBusinessTask	tmpcode/commond.h	/^	stRequestBusinessTask(const bool submit):stBusinessUserCmd(REQUEST_BUSINESS_TASK_USERCMD) $/;"	f	struct:stRequestBusinessTask
stRequestBusinessTask	tmpcode/commond.h	/^struct stRequestBusinessTask : public stBusinessUserCmd $/;"	s
stRequestCancelListStockUserCmd	base/Command.h	/^  stRequestCancelListStockUserCmd() $/;"	f	struct:Cmd::stRequestCancelListStockUserCmd
stRequestCancelListStockUserCmd	base/Command.h	/^struct stRequestCancelListStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stRequestCancelUnionAllyInfo	tmpcode/commond.h	/^	stRequestCancelUnionAllyInfo ()$/;"	f	struct:stRequestCancelUnionAllyInfo
stRequestCancelUnionAllyInfo	tmpcode/commond.h	/^struct stRequestCancelUnionAllyInfo: public stUnionAllyUserCmd$/;"	s
stRequestCardAndGold	base/Command.h	/^  stRequestCardAndGold()$/;"	f	struct:Cmd::stRequestCardAndGold
stRequestCardAndGold	base/Command.h	/^struct stRequestCardAndGold :  public stGoldUserCmd$/;"	s	namespace:Cmd
stRequestChangeTeamleader	tmpcode/commond.h	/^	stRequestChangeTeamleader()$/;"	f	struct:stRequestChangeTeamleader
stRequestChangeTeamleader	tmpcode/commond.h	/^struct stRequestChangeTeamleader :public stChatUserCmd$/;"	s
stRequestCityTax	tmpcode/commond.h	/^	stRequestCityTax()$/;"	f	struct:stRequestCityTax
stRequestCityTax	tmpcode/commond.h	/^struct stRequestCityTax : public stUnionUserCmd$/;"	s
stRequestCleanTaskUserCmd	tmpcode/commond.h	/^	stRequestCleanTaskUserCmd()$/;"	f	struct:stRequestCleanTaskUserCmd
stRequestCleanTaskUserCmd	tmpcode/commond.h	/^struct stRequestCleanTaskUserCmd : public stHomeUserCmd$/;"	s
stRequestClientIP	base/Command.h	/^    stRequestClientIP()$/;"	f	struct:Cmd::stRequestClientIP
stRequestClientIP	base/Command.h	/^struct stRequestClientIP : public stLogonUserCmd$/;"	s	namespace:Cmd
stRequestClientIP	tmpcode/commond.h	/^	stRequestClientIP()$/;"	f	struct:stRequestClientIP
stRequestClientIP	tmpcode/commond.h	/^struct stRequestClientIP : public stLogonUserCmd$/;"	s
stRequestConsignListStockUserCmd	base/Command.h	/^  stRequestConsignListStockUserCmd() $/;"	f	struct:Cmd::stRequestConsignListStockUserCmd
stRequestConsignListStockUserCmd	base/Command.h	/^struct stRequestConsignListStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stRequestConsignListStockUserCmd	tmpcode/commond.h	/^	stRequestConsignListStockUserCmd()$/;"	f	struct:stRequestConsignListStockUserCmd
stRequestConsignListStockUserCmd	tmpcode/commond.h	/^struct stRequestConsignListStockUserCmd : public stStockBillUserCmd$/;"	s
stRequestCountryEventDataUserCmd	tmpcode/commond.h	/^	stRequestCountryEventDataUserCmd()$/;"	f	struct:stRequestCountryEventDataUserCmd
stRequestCountryEventDataUserCmd	tmpcode/commond.h	/^struct stRequestCountryEventDataUserCmd : public stCountryUserCmd $/;"	s
stRequestCountryHelpUserCmd	base/Command.h	/^  stRequestCountryHelpUserCmd()$/;"	f	struct:Cmd::stRequestCountryHelpUserCmd
stRequestCountryHelpUserCmd	base/Command.h	/^ struct stRequestCountryHelpUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stRequestCountryHelpUserCmd	tmpcode/commond.h	/^	stRequestCountryHelpUserCmd()$/;"	f	struct:stRequestCountryHelpUserCmd
stRequestCountryHelpUserCmd	tmpcode/commond.h	/^struct stRequestCountryHelpUserCmd: public stChatUserCmd$/;"	s
stRequestCountryListMercenaryCountryCmd	tmpcode/commond.h	/^        stRequestCountryListMercenaryCountryCmd()$/;"	f	struct:stRequestCountryListMercenaryCountryCmd
stRequestCountryListMercenaryCountryCmd	tmpcode/commond.h	/^struct stRequestCountryListMercenaryCountryCmd:public stCountryUserCmd$/;"	s
stRequestCountryPowerCmd	base/Command.h	/^  stRequestCountryPowerCmd()$/;"	f	struct:Cmd::stRequestCountryPowerCmd
stRequestCountryPowerCmd	base/Command.h	/^struct stRequestCountryPowerCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stRequestCountryPowerCmd	tmpcode/commond.h	/^	stRequestCountryPowerCmd()$/;"	f	struct:stRequestCountryPowerCmd
stRequestCountryPowerCmd	tmpcode/commond.h	/^struct stRequestCountryPowerCmd : public stCountryUserCmd$/;"	s
stRequestCountrySortListUserCmd	tmpcode/commond.h	/^	stRequestCountrySortListUserCmd()$/;"	f	struct:stRequestCountrySortListUserCmd
stRequestCountrySortListUserCmd	tmpcode/commond.h	/^struct stRequestCountrySortListUserCmd : public stCountryUserCmd$/;"	s
stRequestCountryStrengthUserCmd	tmpcode/commond.h	/^	stRequestCountryStrengthUserCmd()$/;"	f	struct:stRequestCountryStrengthUserCmd
stRequestCountryStrengthUserCmd	tmpcode/commond.h	/^struct stRequestCountryStrengthUserCmd : public stCountryUserCmd$/;"	s
stRequestCountryTax	tmpcode/commond.h	/^	stRequestCountryTax()$/;"	f	struct:stRequestCountryTax
stRequestCountryTax	tmpcode/commond.h	/^struct stRequestCountryTax : public stUnionUserCmd$/;"	s
stRequestCountryTransportLimitUserCmd	tmpcode/commond.h	/^	stRequestCountryTransportLimitUserCmd()$/;"	f	struct:stRequestCountryTransportLimitUserCmd
stRequestCountryTransportLimitUserCmd	tmpcode/commond.h	/^struct stRequestCountryTransportLimitUserCmd : public stQuestUserCmd$/;"	s
stRequestDareCountryCmd	base/Command.h	/^  stRequestDareCountryCmd()$/;"	f	struct:Cmd::stRequestDareCountryCmd
stRequestDareCountryCmd	base/Command.h	/^struct stRequestDareCountryCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stRequestDareRecordCmd	base/Command.h	/^  stRequestDareRecordCmd()$/;"	f	struct:Cmd::stRequestDareRecordCmd
stRequestDareRecordCmd	base/Command.h	/^struct stRequestDareRecordCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stRequestDataPetCmd	base/Command.h	/^  stRequestDataPetCmd()$/;"	f	struct:Cmd::stRequestDataPetCmd
stRequestDataPetCmd	base/Command.h	/^struct stRequestDataPetCmd : public stPetUserCmd$/;"	s	namespace:Cmd
stRequestDayFlowerListUserCmd	tmpcode/commond.h	/^	stRequestDayFlowerListUserCmd()$/;"	f	struct:stRequestDayFlowerListUserCmd
stRequestDayFlowerListUserCmd	tmpcode/commond.h	/^struct stRequestDayFlowerListUserCmd : public stDataUserCmd$/;"	s
stRequestDecayLingQiCmd	tmpcode/commond.h	/^	stRequestDecayLingQiCmd()$/;"	f	struct:stRequestDecayLingQiCmd
stRequestDecayLingQiCmd	tmpcode/commond.h	/^struct stRequestDecayLingQiCmd : public stLingQiDecayUserCmd$/;"	s
stRequestExchangeCardIDTradeUserCmd	tmpcode/commond.h	/^        stRequestExchangeCardIDTradeUserCmd()$/;"	f	struct:stRequestExchangeCardIDTradeUserCmd
stRequestExchangeCardIDTradeUserCmd	tmpcode/commond.h	/^struct stRequestExchangeCardIDTradeUserCmd: public stTradeUserCmd$/;"	s
stRequestFirstTenListStockUserCmd	base/Command.h	/^  stRequestFirstTenListStockUserCmd() $/;"	f	struct:Cmd::stRequestFirstTenListStockUserCmd
stRequestFirstTenListStockUserCmd	base/Command.h	/^struct stRequestFirstTenListStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stRequestFirstTenListStockUserCmd	tmpcode/commond.h	/^	stRequestFirstTenListStockUserCmd()$/;"	f	struct:stRequestFirstTenListStockUserCmd
stRequestFirstTenListStockUserCmd	tmpcode/commond.h	/^struct stRequestFirstTenListStockUserCmd : public stStockBillUserCmd$/;"	s
stRequestFlowerListUserCmd	tmpcode/commond.h	/^	stRequestFlowerListUserCmd()    $/;"	f	struct:stRequestFlowerListUserCmd
stRequestFlowerListUserCmd	tmpcode/commond.h	/^struct stRequestFlowerListUserCmd : public stDataUserCmd$/;"	s
stRequestFriendHomeUserCmd	tmpcode/commond.h	/^	stRequestFriendHomeUserCmd()$/;"	f	struct:stRequestFriendHomeUserCmd
stRequestFriendHomeUserCmd	tmpcode/commond.h	/^struct stRequestFriendHomeUserCmd : public stHomeUserCmd$/;"	s
stRequestGetOnTank	tmpcode/commond.h	/^	stRequestGetOnTank()$/;"	f	struct:stRequestGetOnTank
stRequestGetOnTank	tmpcode/commond.h	/^struct stRequestGetOnTank : public stTankUserCmd$/;"	s
stRequestGoldGiveTradeUserCmd	base/Command.h	/^  stRequestGoldGiveTradeUserCmd()$/;"	f	struct:Cmd::stRequestGoldGiveTradeUserCmd
stRequestGoldGiveTradeUserCmd	base/Command.h	/^struct stRequestGoldGiveTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stRequestGoodsBonusInfoCmd	tmpcode/commond.h	/^	stRequestGoodsBonusInfoCmd()$/;"	f	struct:stRequestGoodsBonusInfoCmd
stRequestGoodsBonusInfoCmd	tmpcode/commond.h	/^struct stRequestGoodsBonusInfoCmd : public stTradeUserCmd$/;"	s
stRequestGoodsWithBonusCmd	tmpcode/commond.h	/^	stRequestGoodsWithBonusCmd()$/;"	f	struct:stRequestGoodsWithBonusCmd
stRequestGoodsWithBonusCmd	tmpcode/commond.h	/^struct stRequestGoodsWithBonusCmd : public stTradeUserCmd$/;"	s
stRequestHealthyGameUserCmd	tmpcode/commond.h	/^	stRequestHealthyGameUserCmd()$/;"	f	struct:stRequestHealthyGameUserCmd
stRequestHealthyGameUserCmd	tmpcode/commond.h	/^struct stRequestHealthyGameUserCmd : public stDataUserCmd$/;"	s
stRequestHomeListUserCmd	tmpcode/commond.h	/^	stRequestHomeListUserCmd()$/;"	f	struct:stRequestHomeListUserCmd
stRequestHomeListUserCmd	tmpcode/commond.h	/^struct stRequestHomeListUserCmd : public stHomeUserCmd$/;"	s
stRequestIncMapPropertyUserCmd	base/Command.h	/^    stRequestIncMapPropertyUserCmd()$/;"	f	struct:Cmd::stRequestIncMapPropertyUserCmd
stRequestIncMapPropertyUserCmd	base/Command.h	/^  struct stRequestIncMapPropertyUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stRequestJoinRideUserCmd	tmpcode/commond.h	/^    stRequestJoinRideUserCmd()$/;"	f	struct:stRequestJoinRideUserCmd
stRequestJoinRideUserCmd	tmpcode/commond.h	/^struct stRequestJoinRideUserCmd :public stMapScreenUserCmd$/;"	s
stRequestJoinSeptCmd	base/Command.h	/^  stRequestJoinSeptCmd()$/;"	f	struct:Cmd::stRequestJoinSeptCmd
stRequestJoinSeptCmd	base/Command.h	/^struct stRequestJoinSeptCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stRequestJoinUnionCmd	base/Command.h	/^  stRequestJoinUnionCmd()$/;"	f	struct:Cmd::stRequestJoinUnionCmd
stRequestJoinUnionCmd	base/Command.h	/^struct stRequestJoinUnionCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stRequestKingPurseListCmd	tmpcode/commond.h	/^	stRequestKingPurseListCmd() $/;"	f	struct:stRequestKingPurseListCmd
stRequestKingPurseListCmd	tmpcode/commond.h	/^struct stRequestKingPurseListCmd : public stCountryUserCmd $/;"	s
stRequestLandMassMoveUserCmd	base/Command.h	/^    stRequestLandMassMoveUserCmd()$/;"	f	struct:Cmd::stRequestLandMassMoveUserCmd
stRequestLandMassMoveUserCmd	base/Command.h	/^  struct stRequestLandMassMoveUserCmd : public stMoveUserCmd{$/;"	s	namespace:Cmd
stRequestListCartoonCmd	base/Command.h	/^  stRequestListCartoonCmd()$/;"	f	struct:Cmd::stRequestListCartoonCmd
stRequestListCartoonCmd	base/Command.h	/^struct stRequestListCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stRequestMacUserCmd	tmpcode/commond.h	/^	stRequestMacUserCmd()$/;"	f	struct:stRequestMacUserCmd
stRequestMacUserCmd	tmpcode/commond.h	/^struct stRequestMacUserCmd : public stDataUserCmd$/;"	s
stRequestMapNpcDataMapScreenUserCmd	base/Command.h	/^    stRequestMapNpcDataMapScreenUserCmd()$/;"	f	struct:Cmd::stRequestMapNpcDataMapScreenUserCmd
stRequestMapNpcDataMapScreenUserCmd	base/Command.h	/^  struct stRequestMapNpcDataMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stRequestMember	base/SessionCommand.h	/^    struct stRequestMember$/;"	s	namespace:Cmd::Session
stRequestMercenaryListCountryCmd	tmpcode/commond.h	/^        stRequestMercenaryListCountryCmd()$/;"	f	struct:stRequestMercenaryListCountryCmd
stRequestMercenaryListCountryCmd	tmpcode/commond.h	/^struct stRequestMercenaryListCountryCmd:public stCountryUserCmd$/;"	s
stRequestMergeServerUserCmd	tmpcode/commond.h	/^	stRequestMergeServerUserCmd()$/;"	f	struct:stRequestMergeServerUserCmd
stRequestMergeServerUserCmd	tmpcode/commond.h	/^struct stRequestMergeServerUserCmd :public stPropertyUserCmd$/;"	s
stRequestNameTeamUserCmd	base/Command.h	/^  stRequestNameTeamUserCmd()$/;"	f	struct:Cmd::stRequestNameTeamUserCmd
stRequestNameTeamUserCmd	base/Command.h	/^ struct stRequestNameTeamUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stRequestNameTeamUserCmd	tmpcode/commond.h	/^	stRequestNameTeamUserCmd()$/;"	f	struct:stRequestNameTeamUserCmd
stRequestNameTeamUserCmd	tmpcode/commond.h	/^struct stRequestNameTeamUserCmd: public stChatUserCmd$/;"	s
stRequestNineScreenSeptMemberCmd	tmpcode/commond.h	/^	stRequestNineScreenSeptMemberCmd()$/;"	f	struct:stRequestNineScreenSeptMemberCmd
stRequestNineScreenSeptMemberCmd	tmpcode/commond.h	/^struct stRequestNineScreenSeptMemberCmd: public stTankUserCmd$/;"	s
stRequestNineScreenUnionMemberCmd	tmpcode/commond.h	/^	stRequestNineScreenUnionMemberCmd()$/;"	f	struct:stRequestNineScreenUnionMemberCmd
stRequestNineScreenUnionMemberCmd	tmpcode/commond.h	/^struct stRequestNineScreenUnionMemberCmd: public stTankUserCmd$/;"	s
stRequestNpcGoodsCmd	tmpcode/commond.h	/^    stRequestNpcGoodsCmd()$/;"	f	struct:stRequestNpcGoodsCmd
stRequestNpcGoodsCmd	tmpcode/commond.h	/^struct stRequestNpcGoodsCmd: public stPetUserCmd$/;"	s
stRequestNpcInfoSeptCmd	base/Command.h	/^  stRequestNpcInfoSeptCmd()$/;"	f	struct:Cmd::stRequestNpcInfoSeptCmd
stRequestNpcInfoSeptCmd	base/Command.h	/^struct stRequestNpcInfoSeptCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stRequestPackBusiness	tmpcode/commond.h	/^	stRequestPackBusiness() : stBusinessUserCmd(REQUEST_PACK_BUSINESS_USERCMD) { }$/;"	f	struct:stRequestPackBusiness
stRequestPackBusiness	tmpcode/commond.h	/^struct stRequestPackBusiness : public stBusinessUserCmd $/;"	s
stRequestPetChangeFaceMagicUserCmd	tmpcode/commond.h	/^	stRequestPetChangeFaceMagicUserCmd()$/;"	f	struct:stRequestPetChangeFaceMagicUserCmd
stRequestPetChangeFaceMagicUserCmd	tmpcode/commond.h	/^struct stRequestPetChangeFaceMagicUserCmd:public stMagicUserCmd$/;"	s
stRequestPingList	base/Command.h	/^  stRequestPingList() $/;"	f	struct:Cmd::stRequestPingList
stRequestPingList	base/Command.h	/^struct stRequestPingList : public stPingUserCmd$/;"	s	namespace:Cmd
stRequestPkDataPropertyUserCmd	tmpcode/commond.h	/^        stRequestPkDataPropertyUserCmd()$/;"	f	struct:stRequestPkDataPropertyUserCmd
stRequestPkDataPropertyUserCmd	tmpcode/commond.h	/^struct stRequestPkDataPropertyUserCmd : public stPropertyUserCmd$/;"	s
stRequestPoint	base/Command.h	/^  stRequestPoint()$/;"	f	struct:Cmd::stRequestPoint
stRequestPoint	base/Command.h	/^struct stRequestPoint :  public stGoldUserCmd$/;"	s	namespace:Cmd
stRequestPoint	tmpcode/commond.h	/^	stRequestPoint()$/;"	f	struct:stRequestPoint
stRequestPoint	tmpcode/commond.h	/^struct stRequestPoint :  public stGoldUserCmd$/;"	s
stRequestQuestUserCmd	base/Command.h	/^  stRequestQuestUserCmd()$/;"	f	struct:Cmd::stRequestQuestUserCmd
stRequestQuestUserCmd	base/Command.h	/^struct stRequestQuestUserCmd : public stQuestUserCmd$/;"	s	namespace:Cmd
stRequestQuestUserCmd	tmpcode/commond.h	/^	stRequestQuestUserCmd()$/;"	f	struct:stRequestQuestUserCmd
stRequestQuestUserCmd	tmpcode/commond.h	/^struct stRequestQuestUserCmd : public stQuestUserCmd$/;"	s
stRequestRecommendRewardUserCmd	tmpcode/commond.h	/^    stRequestRecommendRewardUserCmd()$/;"	f	struct:stRequestRecommendRewardUserCmd
stRequestRecommendRewardUserCmd	tmpcode/commond.h	/^struct stRequestRecommendRewardUserCmd : public stTradeUserCmd$/;"	s
stRequestRedeemGold	base/Command.h	/^  stRequestRedeemGold()$/;"	f	struct:Cmd::stRequestRedeemGold
stRequestRedeemGold	base/Command.h	/^struct stRequestRedeemGold : public stGoldUserCmd$/;"	s	namespace:Cmd
stRequestRedeemGold	tmpcode/commond.h	/^	stRequestRedeemGold()$/;"	f	struct:stRequestRedeemGold
stRequestRedeemGold	tmpcode/commond.h	/^struct stRequestRedeemGold : public stGoldUserCmd$/;"	s
stRequestRedeemMonthCard	base/Command.h	/^  stRequestRedeemMonthCard()$/;"	f	struct:Cmd::stRequestRedeemMonthCard
stRequestRedeemMonthCard	base/Command.h	/^struct stRequestRedeemMonthCard : public stGoldUserCmd$/;"	s	namespace:Cmd
stRequestReplaceBoss	tmpcode/commond.h	/^	stRequestReplaceBoss()$/;"	f	struct:stRequestReplaceBoss
stRequestReplaceBoss	tmpcode/commond.h	/^struct stRequestReplaceBoss: public stCatchEggUserCmd$/;"	s
stRequestReturnMember	base/SessionCommand.h	/^    struct stRequestReturnMember$/;"	s	namespace:Cmd::Session
stRequestRoomMemDetailQuestRoomUserCmd	tmpcode/commond.h	/^	stRequestRoomMemDetailQuestRoomUserCmd(): \/*questID(0), levelMark(0), *\/roomID(0)$/;"	f	struct:stRequestRoomMemDetailQuestRoomUserCmd
stRequestRoomMemDetailQuestRoomUserCmd	tmpcode/commond.h	/^struct stRequestRoomMemDetailQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stRequestScoreListLuoRiUserCmd	tmpcode/commond.h	/^        stRequestScoreListLuoRiUserCmd()$/;"	f	struct:stRequestScoreListLuoRiUserCmd
stRequestScoreListLuoRiUserCmd	tmpcode/commond.h	/^struct stRequestScoreListLuoRiUserCmd: public stLuoRiXiaGuUserCmd$/;"	s
stRequestScoreListWeekendZhenxuanUserCmd	tmpcode/commond.h	/^	stRequestScoreListWeekendZhenxuanUserCmd()$/;"	f	struct:stRequestScoreListWeekendZhenxuanUserCmd
stRequestScoreListWeekendZhenxuanUserCmd	tmpcode/commond.h	/^struct stRequestScoreListWeekendZhenxuanUserCmd: public stZhenxuanJingjiUserCmd$/;"	s
stRequestScoreListZhenXuanUserCmd	tmpcode/commond.h	/^	stRequestScoreListZhenXuanUserCmd()$/;"	f	struct:stRequestScoreListZhenXuanUserCmd
stRequestScoreListZhenXuanUserCmd	tmpcode/commond.h	/^struct stRequestScoreListZhenXuanUserCmd : public stZhenxuanJingjiUserCmd$/;"	s
stRequestSelectUserCmd	base/Command.h	/^  stRequestSelectUserCmd()$/;"	f	struct:Cmd::stRequestSelectUserCmd
stRequestSelectUserCmd	base/Command.h	/^struct stRequestSelectUserCmd : public stSelectUserCmd$/;"	s	namespace:Cmd
stRequestSelectUserCmd	tmpcode/commond.h	/^	stRequestSelectUserCmd()$/;"	f	struct:stRequestSelectUserCmd
stRequestSelectUserCmd	tmpcode/commond.h	/^struct stRequestSelectUserCmd : public stSelectUserCmd$/;"	s
stRequestSellBuyUserCmd	base/Command.h	/^  stRequestSellBuyUserCmd()$/;"	f	struct:Cmd::stRequestSellBuyUserCmd
stRequestSellBuyUserCmd	base/Command.h	/^struct stRequestSellBuyUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stRequestSellBuyUserCmd	tmpcode/commond.h	/^	stRequestSellBuyUserCmd()$/;"	f	struct:stRequestSellBuyUserCmd
stRequestSellBuyUserCmd	tmpcode/commond.h	/^struct stRequestSellBuyUserCmd:public stTradeUserCmd$/;"	s
stRequestSellInfoUserCmd	base/Command.h	/^  stRequestSellInfoUserCmd()$/;"	f	struct:Cmd::stRequestSellInfoUserCmd
stRequestSellInfoUserCmd	base/Command.h	/^struct stRequestSellInfoUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stRequestSellInfoUserCmd	tmpcode/commond.h	/^	stRequestSellInfoUserCmd()$/;"	f	struct:stRequestSellInfoUserCmd
stRequestSellInfoUserCmd	tmpcode/commond.h	/^struct stRequestSellInfoUserCmd:public stTradeUserCmd$/;"	s
stRequestSeptExpCmd	base/Command.h	/^  stRequestSeptExpCmd()$/;"	f	struct:Cmd::stRequestSeptExpCmd
stRequestSeptExpCmd	base/Command.h	/^struct stRequestSeptExpCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stRequestSeptNormalExpCmd	base/Command.h	/^  stRequestSeptNormalExpCmd()$/;"	f	struct:Cmd::stRequestSeptNormalExpCmd
stRequestSeptNormalExpCmd	base/Command.h	/^struct stRequestSeptNormalExpCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stRequestSeptShopUserCmd	tmpcode/commond.h	/^	stRequestSeptShopUserCmd()$/;"	f	struct:stRequestSeptShopUserCmd
stRequestSeptShopUserCmd	tmpcode/commond.h	/^struct stRequestSeptShopUserCmd : public stTradeUserCmd$/;"	s
stRequestSeptSkillList	tmpcode/commond.h	/^	stRequestSeptSkillList() : stUnionSkillUserCmd(REQUEST_SEPTSKILL_LIST_USERCMD) {};$/;"	f	struct:stRequestSeptSkillList
stRequestSeptSkillList	tmpcode/commond.h	/^struct stRequestSeptSkillList : public stUnionSkillUserCmd {$/;"	s
stRequestShuDuPara	tmpcode/commond.h	/^	stRequestShuDuPara()$/;"	f	struct:stRequestShuDuPara
stRequestShuDuPara	tmpcode/commond.h	/^struct stRequestShuDuPara :public stShuDuUserCmd \/\/add_for_kok_xutao_08.12.13$/;"	s
stRequestSignMaxLevelUserCmd	tmpcode/commond.h	/^	stRequestSignMaxLevelUserCmd()$/;"	f	struct:stRequestSignMaxLevelUserCmd
stRequestSignMaxLevelUserCmd	tmpcode/commond.h	/^struct stRequestSignMaxLevelUserCmd : public stMaxLevelLimitUserCmd$/;"	s
stRequestStartChallengeUserCmd	tmpcode/commond.h	/^	stRequestStartChallengeUserCmd()$/;"	f	struct:stRequestStartChallengeUserCmd
stRequestStartChallengeUserCmd	tmpcode/commond.h	/^struct stRequestStartChallengeUserCmd:public stChallengeGameUserCmd$/;"	s
stRequestStateStockUserCmd	base/Command.h	/^  stRequestStateStockUserCmd() $/;"	f	struct:Cmd::stRequestStateStockUserCmd
stRequestStateStockUserCmd	base/Command.h	/^struct stRequestStateStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stRequestStateStockUserCmd	tmpcode/commond.h	/^	stRequestStateStockUserCmd() $/;"	f	struct:stRequestStateStockUserCmd
stRequestStateStockUserCmd	tmpcode/commond.h	/^struct stRequestStateStockUserCmd : public stStockBillUserCmd$/;"	s
stRequestStrongWeakCountriesUserCmd	tmpcode/commond.h	/^    stRequestStrongWeakCountriesUserCmd()$/;"	f	struct:stRequestStrongWeakCountriesUserCmd
stRequestStrongWeakCountriesUserCmd	tmpcode/commond.h	/^struct stRequestStrongWeakCountriesUserCmd : public stCountryUserCmd$/;"	s
stRequestTankDataCmd	tmpcode/commond.h	/^	stRequestTankDataCmd()$/;"	f	struct:stRequestTankDataCmd
stRequestTankDataCmd	tmpcode/commond.h	/^struct stRequestTankDataCmd : public stTankUserCmd$/;"	s
stRequestTankSeatListCmd	tmpcode/commond.h	/^	stRequestTankSeatListCmd()$/;"	f	struct:stRequestTankSeatListCmd
stRequestTankSeatListCmd	tmpcode/commond.h	/^struct stRequestTankSeatListCmd : public stTankUserCmd$/;"	s
stRequestTaxHistory	tmpcode/commond.h	/^	stRequestTaxHistory()$/;"	f	struct:stRequestTaxHistory
stRequestTaxHistory	tmpcode/commond.h	/^struct stRequestTaxHistory : public stUnionUserCmd$/;"	s
stRequestTeamMemberPosition	base/Command.h	/^  stRequestTeamMemberPosition()$/;"	f	struct:Cmd::stRequestTeamMemberPosition
stRequestTeamMemberPosition	base/Command.h	/^struct stRequestTeamMemberPosition : public stChatUserCmd$/;"	s	namespace:Cmd
stRequestTeamMemberPosition	tmpcode/commond.h	/^	stRequestTeamMemberPosition()$/;"	f	struct:stRequestTeamMemberPosition
stRequestTeamMemberPosition	tmpcode/commond.h	/^struct stRequestTeamMemberPosition : public stChatUserCmd$/;"	s
stRequestTeamUserCmd	base/Command.h	/^  stRequestTeamUserCmd()$/;"	f	struct:Cmd::stRequestTeamUserCmd
stRequestTeamUserCmd	base/Command.h	/^ struct stRequestTeamUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stRequestTradeNewUserCmd	tmpcode/commond.h	/^	stRequestTradeNewUserCmd(const DWORD id, const int _x1, const int _y1)$/;"	f	struct:stRequestTradeNewUserCmd
stRequestTradeNewUserCmd	tmpcode/commond.h	/^struct stRequestTradeNewUserCmd :public stTradeUserCmd$/;"	s
stRequestTradeUserCmd	base/Command.h	/^  stRequestTradeUserCmd()$/;"	f	struct:Cmd::stRequestTradeUserCmd
stRequestTradeUserCmd	base/Command.h	/^struct stRequestTradeUserCmd :public stTradeUserCmd$/;"	s	namespace:Cmd
stRequestTradeUserCmd	tmpcode/commond.h	/^	stRequestTradeUserCmd()$/;"	f	struct:stRequestTradeUserCmd
stRequestTradeUserCmd	tmpcode/commond.h	/^struct stRequestTradeUserCmd :public stTradeUserCmd$/;"	s
stRequestTrafficTaxHistory	tmpcode/commond.h	/^	stRequestTrafficTaxHistory()$/;"	f	struct:stRequestTrafficTaxHistory
stRequestTrafficTaxHistory	tmpcode/commond.h	/^struct stRequestTrafficTaxHistory : public stUnionUserCmd$/;"	s
stRequestUnionBusinessmen	tmpcode/commond.h	/^	stRequestUnionBusinessmen() : stBusinessUserCmd(REQUEST_UNION_BUSINESSMEN_USERCMD) {};$/;"	f	struct:stRequestUnionBusinessmen
stRequestUnionBusinessmen	tmpcode/commond.h	/^struct stRequestUnionBusinessmen : public stBusinessUserCmd $/;"	s
stRequestUnionProStateCmd	tmpcode/commond.h	/^	stRequestUnionProStateCmd()$/;"	f	struct:stRequestUnionProStateCmd
stRequestUnionProStateCmd	tmpcode/commond.h	/^struct stRequestUnionProStateCmd : public stUnionUserCmd$/;"	s
stRequestUserDataMapScreenUserCmd	base/Command.h	/^    stRequestUserDataMapScreenUserCmd()$/;"	f	struct:Cmd::stRequestUserDataMapScreenUserCmd
stRequestUserDataMapScreenUserCmd	base/Command.h	/^  struct stRequestUserDataMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stRequestUserGameTimeTimerUserCmd	base/Command.h	/^  stRequestUserGameTimeTimerUserCmd()$/;"	f	struct:Cmd::stRequestUserGameTimeTimerUserCmd
stRequestUserGameTimeTimerUserCmd	base/Command.h	/^struct stRequestUserGameTimeTimerUserCmd : public stTimerUserCmd$/;"	s	namespace:Cmd
stRequestUserGameTimeTimerUserCmd	tmpcode/commond.h	/^	stRequestUserGameTimeTimerUserCmd()$/;"	f	struct:stRequestUserGameTimeTimerUserCmd
stRequestUserGameTimeTimerUserCmd	tmpcode/commond.h	/^struct stRequestUserGameTimeTimerUserCmd : public stTimerUserCmd$/;"	s
stRequestVoteListUserCmd	base/Command.h	/^  stRequestVoteListUserCmd()$/;"	f	struct:Cmd::stRequestVoteListUserCmd
stRequestVoteListUserCmd	base/Command.h	/^struct stRequestVoteListUserCmd : public stVoteUserCmd$/;"	s	namespace:Cmd
stRequestYingZhanUserCmd	tmpcode/commond.h	/^     stRequestYingZhanUserCmd()$/;"	f	struct:stRequestYingZhanUserCmd
stRequestYingZhanUserCmd	tmpcode/commond.h	/^struct stRequestYingZhanUserCmd:public stDareUserCmd$/;"	s
stRequestYuYinChannelCmd	tmpcode/commond.h	/^	stRequestYuYinChannelCmd()$/;"	f	struct:stRequestYuYinChannelCmd
stRequestYuYinChannelCmd	tmpcode/commond.h	/^struct stRequestYuYinChannelCmd : public stSoundUserCmd$/;"	s
stRequstHistoryStockUserCmd	base/Command.h	/^  stRequstHistoryStockUserCmd() $/;"	f	struct:Cmd::stRequstHistoryStockUserCmd
stRequstHistoryStockUserCmd	base/Command.h	/^struct stRequstHistoryStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stRequstSelfHistoryStockUserCmd	base/Command.h	/^  stRequstSelfHistoryStockUserCmd() $/;"	f	struct:Cmd::stRequstSelfHistoryStockUserCmd
stRequstSelfHistoryStockUserCmd	base/Command.h	/^struct stRequstSelfHistoryStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stRequstSelfHistoryStockUserCmd	tmpcode/commond.h	/^	stRequstSelfHistoryStockUserCmd()$/;"	f	struct:stRequstSelfHistoryStockUserCmd
stRequstSelfHistoryStockUserCmd	tmpcode/commond.h	/^struct stRequstSelfHistoryStockUserCmd : public stStockBillUserCmd$/;"	s
stResGatherFailedUserCmd	tmpcode/commond.h	/^       stResGatherFailedUserCmd()$/;"	f	struct:stResGatherFailedUserCmd
stResGatherFailedUserCmd	tmpcode/commond.h	/^struct stResGatherFailedUserCmd : public stMagicUserCmd$/;"	s
stResSoilInfoHouseUserCmd	tmpcode/commond.h	/^	stResSoilInfoHouseUserCmd()$/;"	f	struct:stResSoilInfoHouseUserCmd
stResSoilInfoHouseUserCmd	tmpcode/commond.h	/^struct stResSoilInfoHouseUserCmd: public stHouseUserCmd$/;"	s
stResetFeedTimesLingQiUserCmd	tmpcode/commond.h	/^	stResetFeedTimesLingQiUserCmd()$/;"	f	struct:stResetFeedTimesLingQiUserCmd
stResetFeedTimesLingQiUserCmd	tmpcode/commond.h	/^struct stResetFeedTimesLingQiUserCmd : public stLingQiUserCmd$/;"	s
stResetSayHelloRecordUserCmd	tmpcode/commond.h	/^	stResetSayHelloRecordUserCmd()$/;"	f	struct:stResetSayHelloRecordUserCmd
stResetSayHelloRecordUserCmd	tmpcode/commond.h	/^struct stResetSayHelloRecordUserCmd : public stRecommendUserCmd$/;"	s
stResetTimeUserCmd	tmpcode/commond.h	/^        stResetTimeUserCmd()    $/;"	f	struct:stResetTimeUserCmd
stResetTimeUserCmd	tmpcode/commond.h	/^struct stResetTimeUserCmd : public stPropertyUserCmd$/;"	s
stResetUserExpPropertyUserCmd	tmpcode/commond.h	/^    stResetUserExpPropertyUserCmd()$/;"	f	struct:stResetUserExpPropertyUserCmd
stResetUserExpPropertyUserCmd	tmpcode/commond.h	/^struct stResetUserExpPropertyUserCmd : public stPropertyUserCmd$/;"	s
stResidentBattleCmd	tmpcode/commond.h	/^	stResidentBattleCmd()$/;"	f	struct:stResidentBattleCmd
stResidentBattleCmd	tmpcode/commond.h	/^struct stResidentBattleCmd : public stNullUserCmd$/;"	s
stResidentDare	tmpcode/commond.h	/^	stResidentDare()$/;"	f	struct:stResidentDare
stResidentDare	tmpcode/commond.h	/^struct stResidentDare $/;"	s
stResidentData	tmpcode/commond.h	/^	stResidentData()$/;"	f	struct:stResidentData
stResidentData	tmpcode/commond.h	/^struct stResidentData$/;"	s
stResidentInfo	tmpcode/commond.h	/^	stResidentInfo()$/;"	f	struct:stResidentInfo
stResidentInfo	tmpcode/commond.h	/^struct stResidentInfo $/;"	s
stResourceListUnionCmd	tmpcode/commond.h	/^	stResourceListUnionCmd()$/;"	f	struct:stResourceListUnionCmd
stResourceListUnionCmd	tmpcode/commond.h	/^struct stResourceListUnionCmd : public stUnionUserCmd$/;"	s
stResponToGuardHelpUserCmd	tmpcode/commond.h	/^    stResponToGuardHelpUserCmd()$/;"	f	struct:stResponToGuardHelpUserCmd
stResponToGuardHelpUserCmd	tmpcode/commond.h	/^struct stResponToGuardHelpUserCmd: public stDareUserCmd$/;"	s
stRespondDaTaoShaUserCmd	tmpcode/commond.h	/^         stRespondDaTaoShaUserCmd()$/;"	f	struct:stRespondDaTaoShaUserCmd
stRespondDaTaoShaUserCmd	tmpcode/commond.h	/^ struct stRespondDaTaoShaUserCmd : public stDaTaoShaUserCmd$/;"	s
stRespondSCUserCmd	tmpcode/commond.h	/^	stRespondSCUserCmd()$/;"	f	struct:stRespondSCUserCmd
stRespondSCUserCmd	tmpcode/commond.h	/^struct stRespondSCUserCmd : public stSeptCompeteUserCmd$/;"	s
stResponseLandMassMoveUserCmd	base/Command.h	/^    stResponseLandMassMoveUserCmd()$/;"	f	struct:Cmd::stResponseLandMassMoveUserCmd
stResponseLandMassMoveUserCmd	base/Command.h	/^  struct stResponseLandMassMoveUserCmd : public stMoveUserCmd{$/;"	s	namespace:Cmd
stResponsePropertyUserCmd	base/Command.h	/^  stResponsePropertyUserCmd()$/;"	f	struct:Cmd::stResponsePropertyUserCmd
stResponsePropertyUserCmd	base/Command.h	/^struct stResponsePropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stResponsePropertyUserCmd	tmpcode/commond.h	/^    stResponsePropertyUserCmd()$/;"	f	struct:stResponsePropertyUserCmd
stResponsePropertyUserCmd	tmpcode/commond.h	/^struct stResponsePropertyUserCmd : public stPropertyUserCmd$/;"	s
stResultCheckGoodsCmd	tmpcode/commond.h	/^    stResultCheckGoodsCmd() $/;"	f	struct:stResultCheckGoodsCmd
stResultCheckGoodsCmd	tmpcode/commond.h	/^struct stResultCheckGoodsCmd: public stPetUserCmd$/;"	s
stRet32AttentionDragonUserCmd	tmpcode/commond.h	/^	stRet32AttentionDragonUserCmd()$/;"	f	struct:stRet32AttentionDragonUserCmd
stRet32AttentionDragonUserCmd	tmpcode/commond.h	/^struct stRet32AttentionDragonUserCmd : public stDragonUserCmd$/;"	s
stRet32NameListUserCmd	tmpcode/commond.h	/^	stRet32NameListUserCmd()$/;"	f	struct:stRet32NameListUserCmd
stRet32NameListUserCmd	tmpcode/commond.h	/^struct stRet32NameListUserCmd : public stDragonUserCmd$/;"	s
stRetAcceptedDailyQuestUserCmd	tmpcode/commond.h	/^	stRetAcceptedDailyQuestUserCmd()  $/;"	f	struct:stRetAcceptedDailyQuestUserCmd
stRetAcceptedDailyQuestUserCmd	tmpcode/commond.h	/^struct stRetAcceptedDailyQuestUserCmd : public stRandomQuestUserCmd$/;"	s
stRetAgreementUnmarryCmd	tmpcode/commond.h	/^	stRetAgreementUnmarryCmd()$/;"	f	struct:stRetAgreementUnmarryCmd
stRetAgreementUnmarryCmd	tmpcode/commond.h	/^struct stRetAgreementUnmarryCmd  : public stRelationUserCmd$/;"	s
stRetAllHeroInfoUserCmd	base/HeroCardCmd.h	/^	stRetAllHeroInfoUserCmd()$/;"	f	struct:Cmd::stRetAllHeroInfoUserCmd
stRetAllHeroInfoUserCmd	base/HeroCardCmd.h	/^    struct stRetAllHeroInfoUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetAllIssuedQuestUserCmd	tmpcode/commond.h	/^        stRetAllIssuedQuestUserCmd()$/;"	f	struct:stRetAllIssuedQuestUserCmd
stRetAllIssuedQuestUserCmd	tmpcode/commond.h	/^struct stRetAllIssuedQuestUserCmd : public stQuestUserCmd	$/;"	s
stRetAllValidQuestUserCmd	tmpcode/commond.h	/^        stRetAllValidQuestUserCmd()$/;"	f	struct:stRetAllValidQuestUserCmd
stRetAllValidQuestUserCmd	tmpcode/commond.h	/^struct stRetAllValidQuestUserCmd : public stQuestUserCmd$/;"	s
stRetAlterStorageSellList	tmpcode/commond.h	/^	stRetAlterStorageSellList()$/;"	f	struct:stRetAlterStorageSellList
stRetAlterStorageSellList	tmpcode/commond.h	/^struct stRetAlterStorageSellList : public stUnionUserCmd$/;"	s
stRetAlterUnionSellPrice	tmpcode/commond.h	/^	stRetAlterUnionSellPrice()$/;"	f	struct:stRetAlterUnionSellPrice
stRetAlterUnionSellPrice	tmpcode/commond.h	/^struct stRetAlterUnionSellPrice : public stUnionUserCmd$/;"	s
stRetAssignLifeguardCmd	tmpcode/commond.h	/^	stRetAssignLifeguardCmd() $/;"	f	struct:stRetAssignLifeguardCmd
stRetAssignLifeguardCmd	tmpcode/commond.h	/^struct stRetAssignLifeguardCmd : public stMagicUserCmd $/;"	s
stRetAvatarInfo	tmpcode/commond.h	/^	stRetAvatarInfo()$/;"	f	struct:stRetAvatarInfo
stRetAvatarInfo	tmpcode/commond.h	/^struct stRetAvatarInfo : public stSeptUserCmd$/;"	s
stRetAwardDailyQuestUserCmd	tmpcode/commond.h	/^        stRetAwardDailyQuestUserCmd()$/;"	f	struct:stRetAwardDailyQuestUserCmd
stRetAwardDailyQuestUserCmd	tmpcode/commond.h	/^struct stRetAwardDailyQuestUserCmd : public stRandomQuestUserCmd$/;"	s
stRetBattleGameResultUserCmd	base/HeroCardCmd.h	/^	stRetBattleGameResultUserCmd()$/;"	f	struct:Cmd::stRetBattleGameResultUserCmd
stRetBattleGameResultUserCmd	base/HeroCardCmd.h	/^    struct stRetBattleGameResultUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetBetInChallengeDragonUserCmd	tmpcode/commond.h	/^	stRetBetInChallengeDragonUserCmd()$/;"	f	struct:stRetBetInChallengeDragonUserCmd
stRetBetInChallengeDragonUserCmd	tmpcode/commond.h	/^struct stRetBetInChallengeDragonUserCmd : public stDragonUserCmd$/;"	s
stRetBetInCountryDragonUserCmd	tmpcode/commond.h	/^	stRetBetInCountryDragonUserCmd()$/;"	f	struct:stRetBetInCountryDragonUserCmd
stRetBetInCountryDragonUserCmd	tmpcode/commond.h	/^struct stRetBetInCountryDragonUserCmd : public stDragonUserCmd$/;"	s
stRetBossListUserCmd	tmpcode/commond.h	/^	stRetBossListUserCmd()$/;"	f	struct:stRetBossListUserCmd
stRetBossListUserCmd	tmpcode/commond.h	/^struct stRetBossListUserCmd : public stDataUserCmd$/;"	s
stRetBuyGoodsListBusiness	tmpcode/commond.h	/^	stRetBuyGoodsListBusiness() : stBusinessUserCmd(RET_BUYGOODS_LIST_BUSINESS_USERCMD) $/;"	f	struct:stRetBuyGoodsListBusiness
stRetBuyGoodsListBusiness	tmpcode/commond.h	/^struct stRetBuyGoodsListBusiness : public stBusinessUserCmd $/;"	s
stRetCanSetfree	tmpcode/commond.h	/^	stRetCanSetfree()$/;"	f	struct:stRetCanSetfree
stRetCanSetfree	tmpcode/commond.h	/^struct stRetCanSetfree: public stCatchEggUserCmd$/;"	s
stRetCardAttackFailUserCmd	base/HeroCardCmd.h	/^	stRetCardAttackFailUserCmd()$/;"	f	struct:Cmd::stRetCardAttackFailUserCmd
stRetCardAttackFailUserCmd	base/HeroCardCmd.h	/^    struct stRetCardAttackFailUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetCardGroupListInfoUserCmd	base/HeroCardCmd.h	/^	stRetCardGroupListInfoUserCmd()$/;"	f	struct:Cmd::stRetCardGroupListInfoUserCmd
stRetCardGroupListInfoUserCmd	base/HeroCardCmd.h	/^    struct stRetCardGroupListInfoUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetCatchEndUserCmd	tmpcode/commond.h	/^	stRetCatchEndUserCmd()$/;"	f	struct:stRetCatchEndUserCmd
stRetCatchEndUserCmd	tmpcode/commond.h	/^struct stRetCatchEndUserCmd : public stCatchEggUserCmd$/;"	s
stRetCatchLingQiEndUserCmd	tmpcode/commond.h	/^    stRetCatchLingQiEndUserCmd()$/;"	f	struct:stRetCatchLingQiEndUserCmd
stRetCatchLingQiEndUserCmd	tmpcode/commond.h	/^struct stRetCatchLingQiEndUserCmd : public stCatchEggUserCmd$/;"	s
stRetChallengeUserCmd	tmpcode/commond.h	/^	stRetChallengeUserCmd()$/;"	f	struct:stRetChallengeUserCmd
stRetChallengeUserCmd	tmpcode/commond.h	/^struct stRetChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stRetCheckCountryUserCmd	base/Command.h	/^    stRetCheckCountryUserCmd()$/;"	f	struct:Cmd::stRetCheckCountryUserCmd
stRetCheckCountryUserCmd	base/Command.h	/^struct stRetCheckCountryUserCmd : public stSelectUserCmd$/;"	s	namespace:Cmd
stRetCheckCountryUserCmd	tmpcode/commond.h	/^	stRetCheckCountryUserCmd()              $/;"	f	struct:stRetCheckCountryUserCmd
stRetCheckCountryUserCmd	tmpcode/commond.h	/^struct stRetCheckCountryUserCmd : public stSelectUserCmd$/;"	s
stRetCityDareInfoUserCmd	tmpcode/commond.h	/^	stRetCityDareInfoUserCmd()$/;"	f	struct:stRetCityDareInfoUserCmd
stRetCityDareInfoUserCmd	tmpcode/commond.h	/^struct stRetCityDareInfoUserCmd : public stUnionCityDareUserCmd$/;"	s
stRetCityDareInfoUserCmd_buf	tmpcode/commond.h	/^	stRetCityDareInfoUserCmd_buf()$/;"	f	struct:stRetCityDareInfoUserCmd_buf
stRetCityDareInfoUserCmd_buf	tmpcode/commond.h	/^struct stRetCityDareInfoUserCmd_buf : public stUnionCityDareUserCmd$/;"	s
stRetCityDareMpUserCmd	tmpcode/commond.h	/^	stRetCityDareMpUserCmd()$/;"	f	struct:stRetCityDareMpUserCmd
stRetCityDareMpUserCmd	tmpcode/commond.h	/^struct stRetCityDareMpUserCmd : public stUnionCityDareUserCmd$/;"	s
stRetCityDareSortUserCmd	tmpcode/commond.h	/^	stRetCityDareSortUserCmd()$/;"	f	struct:stRetCityDareSortUserCmd
stRetCityDareSortUserCmd	tmpcode/commond.h	/^struct stRetCityDareSortUserCmd : public stUnionCityDareUserCmd$/;"	s
stRetCityDareSuccessUserCmd	tmpcode/commond.h	/^	stRetCityDareSuccessUserCmd()$/;"	f	struct:stRetCityDareSuccessUserCmd
stRetCityDareSuccessUserCmd	tmpcode/commond.h	/^struct stRetCityDareSuccessUserCmd : public stUnionCityDareUserCmd$/;"	s
stRetCityFundUnionHistoryCmd	tmpcode/commond.h	/^	stRetCityFundUnionHistoryCmd()$/;"	f	struct:stRetCityFundUnionHistoryCmd
stRetCityFundUnionHistoryCmd	tmpcode/commond.h	/^struct stRetCityFundUnionHistoryCmd : public stUnionUserCmd$/;"	s
stRetCityGuardInfo	tmpcode/commond.h	/^	stRetCityGuardInfo()$/;"	f	struct:stRetCityGuardInfo
stRetCityGuardInfo	tmpcode/commond.h	/^struct stRetCityGuardInfo : public stCityUserCmd$/;"	s
stRetCityHeartContribution	tmpcode/commond.h	/^	stRetCityHeartContribution()$/;"	f	struct:stRetCityHeartContribution
stRetCityHeartContribution	tmpcode/commond.h	/^struct stRetCityHeartContribution : public stCountryUserCmd$/;"	s
stRetCityHeartState	tmpcode/commond.h	/^	stRetCityHeartState()$/;"	f	struct:stRetCityHeartState
stRetCityHeartState	tmpcode/commond.h	/^struct stRetCityHeartState : public stCountryUserCmd$/;"	s
stRetCityInfoList	tmpcode/commond.h	/^    stRetCityInfoList()$/;"	f	struct:stRetCityInfoList
stRetCityInfoList	tmpcode/commond.h	/^struct stRetCityInfoList : public  stMapScreenUserCmd$/;"	s
stRetCityMinxinRecCmd	tmpcode/commond.h	/^	stRetCityMinxinRecCmd()$/;"	f	struct:stRetCityMinxinRecCmd
stRetCityMinxinRecCmd	tmpcode/commond.h	/^struct stRetCityMinxinRecCmd : public stCityUserCmd$/;"	s
stRetCityQuestGetList	tmpcode/commond.h	/^    stRetCityQuestGetList()$/;"	f	struct:stRetCityQuestGetList
stRetCityQuestGetList	tmpcode/commond.h	/^struct stRetCityQuestGetList : public stMapScreenUserCmd$/;"	s
stRetCityQuestList	tmpcode/commond.h	/^    stRetCityQuestList()$/;"	f	struct:stRetCityQuestList
stRetCityQuestList	tmpcode/commond.h	/^struct stRetCityQuestList : public stMapScreenUserCmd$/;"	s
stRetCityReliveInfo	tmpcode/commond.h	/^	stRetCityReliveInfo()$/;"	f	struct:stRetCityReliveInfo
stRetCityReliveInfo	tmpcode/commond.h	/^struct stRetCityReliveInfo : public stCityUserCmd$/;"	s
stRetClearCardOneStateUserCmd	base/HeroCardCmd.h	/^	stRetClearCardOneStateUserCmd()$/;"	f	struct:Cmd::stRetClearCardOneStateUserCmd
stRetClearCardOneStateUserCmd	base/HeroCardCmd.h	/^    struct stRetClearCardOneStateUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetCollectListBusiness	tmpcode/commond.h	/^	stRetCollectListBusiness() : stBusinessUserCmd(RET_COLLECT_LIST_BUSINESS_USERCMD) $/;"	f	struct:stRetCollectListBusiness
stRetCollectListBusiness	tmpcode/commond.h	/^struct stRetCollectListBusiness : public stBusinessUserCmd $/;"	s
stRetConsignIssuedQuestUserCmd	tmpcode/commond.h	/^        stRetConsignIssuedQuestUserCmd()$/;"	f	struct:stRetConsignIssuedQuestUserCmd
stRetConsignIssuedQuestUserCmd	tmpcode/commond.h	/^struct stRetConsignIssuedQuestUserCmd : public stQuestUserCmd$/;"	s
stRetCountryEventDataUserCmd	tmpcode/commond.h	/^	stRetCountryEventDataUserCmd()$/;"	f	struct:stRetCountryEventDataUserCmd
stRetCountryEventDataUserCmd	tmpcode/commond.h	/^struct stRetCountryEventDataUserCmd : public stCountryUserCmd$/;"	s
stRetCountryPastKingUserCmd	tmpcode/commond.h	/^	stRetCountryPastKingUserCmd()$/;"	f	struct:stRetCountryPastKingUserCmd
stRetCountryPastKingUserCmd	tmpcode/commond.h	/^struct stRetCountryPastKingUserCmd : public stCountryUserCmd$/;"	s
stRetCourseOfKingCmd	tmpcode/commond.h	/^	stRetCourseOfKingCmd()$/;"	f	struct:stRetCourseOfKingCmd
stRetCourseOfKingCmd	tmpcode/commond.h	/^struct stRetCourseOfKingCmd : public stDataUserCmd$/;"	s
stRetCreateOneCardGroupUserCmd	base/HeroCardCmd.h	/^	stRetCreateOneCardGroupUserCmd()$/;"	f	struct:Cmd::stRetCreateOneCardGroupUserCmd
stRetCreateOneCardGroupUserCmd	base/HeroCardCmd.h	/^    struct stRetCreateOneCardGroupUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetCreateSeptSign	tmpcode/commond.h	/^	stRetCreateSeptSign()$/;"	f	struct:stRetCreateSeptSign
stRetCreateSeptSign	tmpcode/commond.h	/^struct stRetCreateSeptSign : public stSeptUserCmd$/;"	s
stRetCreateSeptSignInfo	tmpcode/commond.h	/^	stRetCreateSeptSignInfo()$/;"	f	struct:stRetCreateSeptSignInfo
stRetCreateSeptSignInfo	tmpcode/commond.h	/^struct stRetCreateSeptSignInfo : public stSeptUserCmd$/;"	s
stRetCriminalApplyInfo	tmpcode/commond.h	/^	stRetCriminalApplyInfo()$/;"	f	struct:stRetCriminalApplyInfo
stRetCriminalApplyInfo	tmpcode/commond.h	/^struct stRetCriminalApplyInfo : public stUnionUserCmd$/;"	s
stRetCriminalListInfo	tmpcode/commond.h	/^	stRetCriminalListInfo()$/;"	f	struct:stRetCriminalListInfo
stRetCriminalListInfo	tmpcode/commond.h	/^struct stRetCriminalListInfo : public stUnionUserCmd$/;"	s
stRetCurrentCityTax	tmpcode/commond.h	/^	stRetCurrentCityTax()$/;"	f	struct:stRetCurrentCityTax
stRetCurrentCityTax	tmpcode/commond.h	/^struct stRetCurrentCityTax : public stUnionUserCmd$/;"	s
stRetDailyRandomQuestUserCmd	tmpcode/commond.h	/^	stRetDailyRandomQuestUserCmd()  $/;"	f	struct:stRetDailyRandomQuestUserCmd
stRetDailyRandomQuestUserCmd	tmpcode/commond.h	/^struct stRetDailyRandomQuestUserCmd : public stRandomQuestUserCmd$/;"	s
stRetDailyWarningQuestUserCmd	tmpcode/commond.h	/^    stRetDailyWarningQuestUserCmd()$/;"	f	struct:stRetDailyWarningQuestUserCmd
stRetDailyWarningQuestUserCmd	tmpcode/commond.h	/^struct stRetDailyWarningQuestUserCmd : public stDataUserCmd $/;"	s
stRetDangerAreaUserCmd	tmpcode/commond.h	/^	stRetDangerAreaUserCmd()$/;"	f	struct:stRetDangerAreaUserCmd
stRetDangerAreaUserCmd	tmpcode/commond.h	/^struct stRetDangerAreaUserCmd : public stCountryUserCmd$/;"	s
stRetDeleteOneCardGroupUserCmd	base/HeroCardCmd.h	/^	stRetDeleteOneCardGroupUserCmd()$/;"	f	struct:Cmd::stRetDeleteOneCardGroupUserCmd
stRetDeleteOneCardGroupUserCmd	base/HeroCardCmd.h	/^    struct stRetDeleteOneCardGroupUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetEndDigTreasureUserCmd	tmpcode/commond.h	/^	stRetEndDigTreasureUserCmd()$/;"	f	struct:stRetEndDigTreasureUserCmd
stRetEndDigTreasureUserCmd	tmpcode/commond.h	/^struct stRetEndDigTreasureUserCmd : public stDigTreasureUserCmd$/;"	s
stRetEnemyHandCardNumUserCmd	base/HeroCardCmd.h	/^	stRetEnemyHandCardNumUserCmd()$/;"	f	struct:Cmd::stRetEnemyHandCardNumUserCmd
stRetEnemyHandCardNumUserCmd	base/HeroCardCmd.h	/^    struct stRetEnemyHandCardNumUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetFarmInfoUserCmd	tmpcode/commond.h	/^	stRetFarmInfoUserCmd()$/;"	f	struct:stRetFarmInfoUserCmd
stRetFarmInfoUserCmd	tmpcode/commond.h	/^struct stRetFarmInfoUserCmd : public stUnionPlantUserCmd$/;"	s
stRetFarmNoticeUserCmd	tmpcode/commond.h	/^	stRetFarmNoticeUserCmd()$/;"	f	struct:stRetFarmNoticeUserCmd
stRetFarmNoticeUserCmd	tmpcode/commond.h	/^struct stRetFarmNoticeUserCmd : public stUnionPlantUserCmd$/;"	s
stRetFinishBuildInfo	tmpcode/commond.h	/^	stRetFinishBuildInfo()$/;"	f	struct:stRetFinishBuildInfo
stRetFinishBuildInfo	tmpcode/commond.h	/^struct stRetFinishBuildInfo : public stUnionUserCmd$/;"	s
stRetFirstHandCardUserCmd	base/HeroCardCmd.h	/^	stRetFirstHandCardUserCmd()$/;"	f	struct:Cmd::stRetFirstHandCardUserCmd
stRetFirstHandCardUserCmd	base/HeroCardCmd.h	/^    struct stRetFirstHandCardUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetFriendDecayHouseUserCmd	tmpcode/commond.h	/^	stRetFriendDecayHouseUserCmd()$/;"	f	struct:stRetFriendDecayHouseUserCmd
stRetFriendDecayHouseUserCmd	tmpcode/commond.h	/^struct stRetFriendDecayHouseUserCmd : public stLingQiDecayUserCmd$/;"	s
stRetGenCountryCmd	base/Command.h	/^  stRetGenCountryCmd()$/;"	f	struct:Cmd::stRetGenCountryCmd
stRetGenCountryCmd	base/Command.h	/^struct stRetGenCountryCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stRetGiftBagCardsDataUserCmd	base/HeroCardCmd.h	/^	stRetGiftBagCardsDataUserCmd()$/;"	f	struct:Cmd::stRetGiftBagCardsDataUserCmd
stRetGiftBagCardsDataUserCmd	base/HeroCardCmd.h	/^    struct stRetGiftBagCardsDataUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetHeroFightMatchUserCmd	base/HeroCardCmd.h	/^	stRetHeroFightMatchUserCmd()$/;"	f	struct:Cmd::stRetHeroFightMatchUserCmd
stRetHeroFightMatchUserCmd	base/HeroCardCmd.h	/^    struct stRetHeroFightMatchUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetHeroIntoBattleSceneUserCmd	base/HeroCardCmd.h	/^	stRetHeroIntoBattleSceneUserCmd()$/;"	f	struct:Cmd::stRetHeroIntoBattleSceneUserCmd
stRetHeroIntoBattleSceneUserCmd	base/HeroCardCmd.h	/^    struct stRetHeroIntoBattleSceneUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetImageSelectionResultCmd	tmpcode/commond.h	/^	stRetImageSelectionResultCmd()$/;"	f	struct:stRetImageSelectionResultCmd
stRetImageSelectionResultCmd	tmpcode/commond.h	/^struct stRetImageSelectionResultCmd:stTradeUserCmd$/;"	s
stRetInfoIssuedQuestUserCmd	tmpcode/commond.h	/^        stRetInfoIssuedQuestUserCmd()$/;"	f	struct:stRetInfoIssuedQuestUserCmd
stRetInfoIssuedQuestUserCmd	tmpcode/commond.h	/^struct stRetInfoIssuedQuestUserCmd : public stQuestUserCmd$/;"	s
stRetJoinLTQUserCmd	tmpcode/commond.h	/^	stRetJoinLTQUserCmd()$/;"	f	struct:stRetJoinLTQUserCmd
stRetJoinLTQUserCmd	tmpcode/commond.h	/^struct stRetJoinLTQUserCmd : public stLTQUserCmd$/;"	s
stRetJoinQuestMapUserCmd	tmpcode/commond.h	/^	stRetJoinQuestMapUserCmd()$/;"	f	struct:stRetJoinQuestMapUserCmd
stRetJoinQuestMapUserCmd	tmpcode/commond.h	/^struct stRetJoinQuestMapUserCmd : public stQuestMapUserCmd$/;"	s
stRetJoinSeptBattleUserCmd	tmpcode/commond.h	/^	stRetJoinSeptBattleUserCmd()$/;"	f	struct:stRetJoinSeptBattleUserCmd
stRetJoinSeptBattleUserCmd	tmpcode/commond.h	/^struct stRetJoinSeptBattleUserCmd : public stSeptBattleUserCmd$/;"	s
stRetJoinSeptPopoUserCmd	tmpcode/commond.h	/^	stRetJoinSeptPopoUserCmd()$/;"	f	struct:stRetJoinSeptPopoUserCmd
stRetJoinSeptPopoUserCmd	tmpcode/commond.h	/^struct stRetJoinSeptPopoUserCmd : public stSeptPopoUserCmd$/;"	s
stRetKillNumsListZhenxuanUserCmd	tmpcode/commond.h	/^	stRetKillNumsListZhenxuanUserCmd()$/;"	f	struct:stRetKillNumsListZhenxuanUserCmd
stRetKillNumsListZhenxuanUserCmd	tmpcode/commond.h	/^struct stRetKillNumsListZhenxuanUserCmd : public stZhenxuanJingjiUserCmd$/;"	s
stRetLandItemUserCmd	tmpcode/commond.h	/^	stRetLandItemUserCmd()$/;"	f	struct:stRetLandItemUserCmd
stRetLandItemUserCmd	tmpcode/commond.h	/^struct stRetLandItemUserCmd : public stUnionPlantUserCmd$/;"	s
stRetLeftCardLibNumUserCmd	base/HeroCardCmd.h	/^	stRetLeftCardLibNumUserCmd()$/;"	f	struct:Cmd::stRetLeftCardLibNumUserCmd
stRetLeftCardLibNumUserCmd	base/HeroCardCmd.h	/^    struct stRetLeftCardLibNumUserCmd : public stHeroCardCmd $/;"	s	namespace:Cmd
stRetMagicForgeInfo	tmpcode/commond.h	/^	stRetMagicForgeInfo()$/;"	f	struct:stRetMagicForgeInfo
stRetMagicForgeInfo	tmpcode/commond.h	/^struct stRetMagicForgeInfo : public stUnionUserCmd$/;"	s
stRetMagicForgeSolideInfo	tmpcode/commond.h	/^	stRetMagicForgeSolideInfo()$/;"	f	struct:stRetMagicForgeSolideInfo
stRetMagicForgeSolideInfo	tmpcode/commond.h	/^struct stRetMagicForgeSolideInfo : public stUnionUserCmd$/;"	s
stRetMagicPointInfoUserCmd	base/HeroCardCmd.h	/^	stRetMagicPointInfoUserCmd()$/;"	f	struct:Cmd::stRetMagicPointInfoUserCmd
stRetMagicPointInfoUserCmd	base/HeroCardCmd.h	/^    struct stRetMagicPointInfoUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetMarriageHoldCmd	tmpcode/commond.h	/^	stRetMarriageHoldCmd()$/;"	f	struct:stRetMarriageHoldCmd
stRetMarriageHoldCmd	tmpcode/commond.h	/^struct stRetMarriageHoldCmd : stRelationUserCmd$/;"	s
stRetMasterPerformInfoCmd	tmpcode/commond.h	/^	stRetMasterPerformInfoCmd()$/;"	f	struct:stRetMasterPerformInfoCmd
stRetMasterPerformInfoCmd	tmpcode/commond.h	/^struct stRetMasterPerformInfoCmd : public stSeptUserCmd$/;"	s
stRetMaxLevelIconDataUserCmd	tmpcode/commond.h	/^	stRetMaxLevelIconDataUserCmd()$/;"	f	struct:stRetMaxLevelIconDataUserCmd
stRetMaxLevelIconDataUserCmd	tmpcode/commond.h	/^struct stRetMaxLevelIconDataUserCmd : public stMaxLevelLimitUserCmd$/;"	s
stRetMeetMaxGold	tmpcode/commond.h	/^        stRetMeetMaxGold()$/;"	f	struct:stRetMeetMaxGold
stRetMeetMaxGold	tmpcode/commond.h	/^struct stRetMeetMaxGold:stTradeUserCmd$/;"	s
stRetMerchNoticePrice	tmpcode/commond.h	/^	stRetMerchNoticePrice()$/;"	f	struct:stRetMerchNoticePrice
stRetMerchNoticePrice	tmpcode/commond.h	/^struct stRetMerchNoticePrice : public stUnionUserCmd$/;"	s
stRetMoveGameCardUserCmd	base/HeroCardCmd.h	/^	stRetMoveGameCardUserCmd()$/;"	f	struct:Cmd::stRetMoveGameCardUserCmd
stRetMoveGameCardUserCmd	base/HeroCardCmd.h	/^    struct stRetMoveGameCardUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetNextStateMarryCmd	tmpcode/commond.h	/^	stRetNextStateMarryCmd()$/;"	f	struct:stRetNextStateMarryCmd
stRetNextStateMarryCmd	tmpcode/commond.h	/^struct stRetNextStateMarryCmd : public stRelationUserCmd$/;"	s
stRetNotifyHandIsFullUserCmd	base/HeroCardCmd.h	/^	stRetNotifyHandIsFullUserCmd()$/;"	f	struct:Cmd::stRetNotifyHandIsFullUserCmd
stRetNotifyHandIsFullUserCmd	base/HeroCardCmd.h	/^    struct stRetNotifyHandIsFullUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetNotifyUnfinishedGameUserCmd	base/HeroCardCmd.h	/^	stRetNotifyUnfinishedGameUserCmd()$/;"	f	struct:Cmd::stRetNotifyUnfinishedGameUserCmd
stRetNotifyUnfinishedGameUserCmd	base/HeroCardCmd.h	/^    struct stRetNotifyUnfinishedGameUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetNpcOccupiedBySeptNpcDare	tmpcode/commond.h	/^      stRetNpcOccupiedBySeptNpcDare()$/;"	f	struct:stRetNpcOccupiedBySeptNpcDare
stRetNpcOccupiedBySeptNpcDare	tmpcode/commond.h	/^ struct stRetNpcOccupiedBySeptNpcDare : public stNpcDareUserCmd$/;"	s
stRetOccupiedNpcNpcDare	tmpcode/commond.h	/^	stRetOccupiedNpcNpcDare()$/;"	f	struct:stRetOccupiedNpcNpcDare
stRetOccupiedNpcNpcDare	tmpcode/commond.h	/^struct stRetOccupiedNpcNpcDare : public stNpcDareUserCmd$/;"	s
stRetOfficialUserCmd	tmpcode/commond.h	/^        stRetOfficialUserCmd()$/;"	f	struct:stRetOfficialUserCmd
stRetOfficialUserCmd	tmpcode/commond.h	/^struct stRetOfficialUserCmd : public stOfficialUserCmd$/;"	s
stRetOneCardGroupInfoUserCmd	base/HeroCardCmd.h	/^	stRetOneCardGroupInfoUserCmd()$/;"	f	struct:Cmd::stRetOneCardGroupInfoUserCmd
stRetOneCardGroupInfoUserCmd	base/HeroCardCmd.h	/^    struct stRetOneCardGroupInfoUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetOneHeroInfoUserCmd	base/HeroCardCmd.h	/^	stRetOneHeroInfoUserCmd()$/;"	f	struct:Cmd::stRetOneHeroInfoUserCmd
stRetOneHeroInfoUserCmd	base/HeroCardCmd.h	/^    struct stRetOneHeroInfoUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetOneTankCmd	tmpcode/commond.h	/^	stRetOneTankCmd()$/;"	f	struct:stRetOneTankCmd
stRetOneTankCmd	tmpcode/commond.h	/^struct stRetOneTankCmd : public stTankUserCmd$/;"	s
stRetPerformState	tmpcode/commond.h	/^	stRetPerformState()$/;"	f	struct:stRetPerformState
stRetPerformState	tmpcode/commond.h	/^struct stRetPerformState : public stChatUserCmd$/;"	s
stRetPlayerListZhenxuanUserCmd	tmpcode/commond.h	/^	stRetPlayerListZhenxuanUserCmd()$/;"	f	struct:stRetPlayerListZhenxuanUserCmd
stRetPlayerListZhenxuanUserCmd	tmpcode/commond.h	/^struct stRetPlayerListZhenxuanUserCmd: public stZhenxuanJingjiUserCmd$/;"	s
stRetPointListZhenxuanUserCmd	tmpcode/commond.h	/^	stRetPointListZhenxuanUserCmd() $/;"	f	struct:stRetPointListZhenxuanUserCmd
stRetPointListZhenxuanUserCmd	tmpcode/commond.h	/^struct stRetPointListZhenxuanUserCmd : public stZhenxuanJingjiUserCmd $/;"	s
stRetPollInfoUserCmd	tmpcode/commond.h	/^	stRetPollInfoUserCmd()$/;"	f	struct:stRetPollInfoUserCmd
stRetPollInfoUserCmd	tmpcode/commond.h	/^struct stRetPollInfoUserCmd : public stUnionPlantUserCmd$/;"	s
stRetPotentialSkillBuildUserCmd	tmpcode/commond.h	/^        stRetPotentialSkillBuildUserCmd()$/;"	f	struct:stRetPotentialSkillBuildUserCmd
stRetPotentialSkillBuildUserCmd	tmpcode/commond.h	/^struct stRetPotentialSkillBuildUserCmd : public stPropertyUserCmd$/;"	s
stRetPromoterAddressUserCmd	tmpcode/commond.h	/^	stRetPromoterAddressUserCmd()$/;"	f	struct:stRetPromoterAddressUserCmd
stRetPromoterAddressUserCmd	tmpcode/commond.h	/^struct stRetPromoterAddressUserCmd : public stQuestUserCmd$/;"	s
stRetPutCityQuest	tmpcode/commond.h	/^    stRetPutCityQuest()$/;"	f	struct:stRetPutCityQuest
stRetPutCityQuest	tmpcode/commond.h	/^struct stRetPutCityQuest : public stMapScreenUserCmd$/;"	s
stRetRanksChatCmd	tmpcode/commond.h	/^	stRetRanksChatCmd()$/;"	f	struct:stRetRanksChatCmd
stRetRanksChatCmd	tmpcode/commond.h	/^struct stRetRanksChatCmd : public stChatUserCmd$/;"	s
stRetRapidSelectQuestUserCmd	tmpcode/commond.h	/^	stRetRapidSelectQuestUserCmd()  $/;"	f	struct:stRetRapidSelectQuestUserCmd
stRetRapidSelectQuestUserCmd	tmpcode/commond.h	/^struct stRetRapidSelectQuestUserCmd : public stRandomQuestUserCmd$/;"	s
stRetRecallMasterInfo	tmpcode/commond.h	/^	stRetRecallMasterInfo()$/;"	f	struct:stRetRecallMasterInfo
stRetRecallMasterInfo	tmpcode/commond.h	/^struct stRetRecallMasterInfo : public stSeptUserCmd$/;"	s
stRetRefreshBattlePrivilegeUserCmd	base/HeroCardCmd.h	/^	stRetRefreshBattlePrivilegeUserCmd()$/;"	f	struct:Cmd::stRetRefreshBattlePrivilegeUserCmd
stRetRefreshBattlePrivilegeUserCmd	base/HeroCardCmd.h	/^    struct stRetRefreshBattlePrivilegeUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetRefreshBattleStateUserCmd	base/HeroCardCmd.h	/^	stRetRefreshBattleStateUserCmd()$/;"	f	struct:Cmd::stRetRefreshBattleStateUserCmd
stRetRefreshBattleStateUserCmd	base/HeroCardCmd.h	/^    struct stRetRefreshBattleStateUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetRefreshCardAllStateUserCmd	base/HeroCardCmd.h	/^	stRetRefreshCardAllStateUserCmd()$/;"	f	struct:Cmd::stRetRefreshCardAllStateUserCmd
stRetRefreshCardAllStateUserCmd	base/HeroCardCmd.h	/^    struct stRetRefreshCardAllStateUserCmd: public stHeroCardCmd$/;"	s	namespace:Cmd
stRetRemoveBattleCardUserCmd	base/HeroCardCmd.h	/^	stRetRemoveBattleCardUserCmd()$/;"	f	struct:Cmd::stRetRemoveBattleCardUserCmd
stRetRemoveBattleCardUserCmd	base/HeroCardCmd.h	/^    struct stRetRemoveBattleCardUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetResidentDareCmd	tmpcode/commond.h	/^	stRetResidentDareCmd()$/;"	f	struct:stRetResidentDareCmd
stRetResidentDareCmd	tmpcode/commond.h	/^struct stRetResidentDareCmd : public stResidentBattleCmd $/;"	s
stRetResidentInfoCmd	tmpcode/commond.h	/^	stRetResidentInfoCmd()$/;"	f	struct:stRetResidentInfoCmd
stRetResidentInfoCmd	tmpcode/commond.h	/^struct stRetResidentInfoCmd : public stResidentBattleCmd $/;"	s
stRetResourceProcessUnionCmd	tmpcode/commond.h	/^	stRetResourceProcessUnionCmd()$/;"	f	struct:stRetResourceProcessUnionCmd
stRetResourceProcessUnionCmd	tmpcode/commond.h	/^struct stRetResourceProcessUnionCmd : public stUnionUserCmd$/;"	s
stRetSaleGoodsListBusiness	tmpcode/commond.h	/^	stRetSaleGoodsListBusiness() : stBusinessUserCmd(RET_SALEGOODS_LIST_BUSINESS_USERCMD) $/;"	f	struct:stRetSaleGoodsListBusiness
stRetSaleGoodsListBusiness	tmpcode/commond.h	/^struct stRetSaleGoodsListBusiness : public stBusinessUserCmd $/;"	s
stRetSaveOneCardGroupUserCmd	base/HeroCardCmd.h	/^	stRetSaveOneCardGroupUserCmd()$/;"	f	struct:Cmd::stRetSaveOneCardGroupUserCmd
stRetSaveOneCardGroupUserCmd	base/HeroCardCmd.h	/^    struct stRetSaveOneCardGroupUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetScore32WinnerUserCmd	tmpcode/commond.h	/^	stRetScore32WinnerUserCmd()$/;"	f	struct:stRetScore32WinnerUserCmd
stRetScore32WinnerUserCmd	tmpcode/commond.h	/^struct stRetScore32WinnerUserCmd : public stDragonUserCmd$/;"	s
stRetSecPasswordSelectUserCmd	tmpcode/commond.h	/^    stRetSecPasswordSelectUserCmd()$/;"	f	struct:stRetSecPasswordSelectUserCmd
stRetSecPasswordSelectUserCmd	tmpcode/commond.h	/^struct stRetSecPasswordSelectUserCmd : public stSelectUserCmd$/;"	s
stRetSeptAvatar	tmpcode/commond.h	/^	stRetSeptAvatar()$/;"	f	struct:stRetSeptAvatar
stRetSeptAvatar	tmpcode/commond.h	/^struct stRetSeptAvatar : public stSeptUserCmd$/;"	s
stRetSeptAvatarInfo	tmpcode/commond.h	/^	stRetSeptAvatarInfo()$/;"	f	struct:stRetSeptAvatarInfo
stRetSeptAvatarInfo	tmpcode/commond.h	/^struct stRetSeptAvatarInfo : public stSeptUserCmd$/;"	s
stRetSeptAvatarSucess	tmpcode/commond.h	/^	stRetSeptAvatarSucess()$/;"	f	struct:stRetSeptAvatarSucess
stRetSeptAvatarSucess	tmpcode/commond.h	/^struct stRetSeptAvatarSucess : public stSeptUserCmd$/;"	s
stRetSeptRentStoreCmd	tmpcode/commond.h	/^	stRetSeptRentStoreCmd()$/;"	f	struct:stRetSeptRentStoreCmd
stRetSeptRentStoreCmd	tmpcode/commond.h	/^struct stRetSeptRentStoreCmd : public stSeptUserCmd$/;"	s
stRetSeptStoreNoticeSeptCmd	tmpcode/commond.h	/^	stRetSeptStoreNoticeSeptCmd()$/;"	f	struct:stRetSeptStoreNoticeSeptCmd
stRetSeptStoreNoticeSeptCmd	tmpcode/commond.h	/^struct stRetSeptStoreNoticeSeptCmd : public stSeptUserCmd$/;"	s
stRetSeptTeamChallengeUserCmd	tmpcode/commond.h	/^	stRetSeptTeamChallengeUserCmd()$/;"	f	struct:stRetSeptTeamChallengeUserCmd
stRetSeptTeamChallengeUserCmd	tmpcode/commond.h	/^struct stRetSeptTeamChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stRetSeptTeamDeathChallengeUserCmd	tmpcode/commond.h	/^	stRetSeptTeamDeathChallengeUserCmd()$/;"	f	struct:stRetSeptTeamDeathChallengeUserCmd
stRetSeptTeamDeathChallengeUserCmd	tmpcode/commond.h	/^struct stRetSeptTeamDeathChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stRetSeqKillListZhenxuanUserCmd	tmpcode/commond.h	/^	stRetSeqKillListZhenxuanUserCmd() $/;"	f	struct:stRetSeqKillListZhenxuanUserCmd
stRetSeqKillListZhenxuanUserCmd	tmpcode/commond.h	/^struct stRetSeqKillListZhenxuanUserCmd : public stZhenxuanJingjiUserCmd $/;"	s
stRetSetCardOneStateUserCmd	base/HeroCardCmd.h	/^	stRetSetCardOneStateUserCmd()$/;"	f	struct:Cmd::stRetSetCardOneStateUserCmd
stRetSetCardOneStateUserCmd	base/HeroCardCmd.h	/^    struct stRetSetCardOneStateUserCmd : public stHeroCardCmd$/;"	s	namespace:Cmd
stRetSetNewNumPasswdCmd	tmpcode/commond.h	/^	stRetSetNewNumPasswdCmd()$/;"	f	struct:stRetSetNewNumPasswdCmd
stRetSetNewNumPasswdCmd	tmpcode/commond.h	/^struct stRetSetNewNumPasswdCmd : public stSafetyUserCmd$/;"	s
stRetSetSafetyDetailUserCmd	tmpcode/commond.h	/^	stRetSetSafetyDetailUserCmd(BYTE isSuccess)$/;"	f	struct:stRetSetSafetyDetailUserCmd
stRetSetSafetyDetailUserCmd	tmpcode/commond.h	/^struct stRetSetSafetyDetailUserCmd : public stSafetyUserCmd$/;"	s
stRetSetTempUnsafetyUserCmd	tmpcode/commond.h	/^	stRetSetTempUnsafetyUserCmd()$/;"	f	struct:stRetSetTempUnsafetyUserCmd
stRetSetTempUnsafetyUserCmd	tmpcode/commond.h	/^struct stRetSetTempUnsafetyUserCmd : public stSafetyUserCmd$/;"	s
stRetShowSkillStoreInfo	tmpcode/commond.h	/^        stRetShowSkillStoreInfo()$/;"	f	struct:stRetShowSkillStoreInfo
stRetShowSkillStoreInfo	tmpcode/commond.h	/^struct stRetShowSkillStoreInfo:stTradeUserCmd$/;"	s
stRetStartDigTreasureUserCmd	tmpcode/commond.h	/^	stRetStartDigTreasureUserCmd()$/;"	f	struct:stRetStartDigTreasureUserCmd
stRetStartDigTreasureUserCmd	tmpcode/commond.h	/^struct stRetStartDigTreasureUserCmd : public stDigTreasureUserCmd$/;"	s
stRetSurveyContentUserCmd	tmpcode/commond.h	/^	stRetSurveyContentUserCmd()$/;"	f	struct:stRetSurveyContentUserCmd
stRetSurveyContentUserCmd	tmpcode/commond.h	/^struct stRetSurveyContentUserCmd : public stSurveyUserCmd$/;"	s
stRetTankListCmd	tmpcode/commond.h	/^	stRetTankListCmd()$/;"	f	struct:stRetTankListCmd
stRetTankListCmd	tmpcode/commond.h	/^struct stRetTankListCmd : public stTankUserCmd$/;"	s
stRetTeamInfoCmd	tmpcode/commond.h	/^	 stRetTeamInfoCmd()$/;"	f	struct:stRetTeamInfoCmd
stRetTeamInfoCmd	tmpcode/commond.h	/^ struct stRetTeamInfoCmd : public stChatUserCmd$/;"	s
stRetTeamInfo_Client	tmpcode/commond.h	/^	 stRetTeamInfo_Client()$/;"	f	struct:stRetTeamInfo_Client
stRetTeamInfo_Client	tmpcode/commond.h	/^ struct stRetTeamInfo_Client : public stChatUserCmd$/;"	s
stRetTitleInfoCmd	tmpcode/commond.h	/^	stRetTitleInfoCmd()$/;"	f	struct:stRetTitleInfoCmd
stRetTitleInfoCmd	tmpcode/commond.h	/^struct stRetTitleInfoCmd : public stTitleUserCmd$/;"	s
stRetTrafficInfoUserCmd	tmpcode/commond.h	/^	stRetTrafficInfoUserCmd()$/;"	f	struct:stRetTrafficInfoUserCmd
stRetTrafficInfoUserCmd	tmpcode/commond.h	/^struct stRetTrafficInfoUserCmd : public stPropertyUserCmd$/;"	s
stRetUnionAndProInfo	tmpcode/commond.h	/^	stRetUnionAndProInfo()$/;"	f	struct:stRetUnionAndProInfo
stRetUnionAndProInfo	tmpcode/commond.h	/^struct stRetUnionAndProInfo : public stUnionUserCmd$/;"	s
stRetUnionBuildInfo	tmpcode/commond.h	/^	stRetUnionBuildInfo()$/;"	f	struct:stRetUnionBuildInfo
stRetUnionBuildInfo	tmpcode/commond.h	/^struct stRetUnionBuildInfo : public stUnionUserCmd$/;"	s
stRetUnionBusinessInfo	tmpcode/commond.h	/^	stRetUnionBusinessInfo()$/;"	f	struct:stRetUnionBusinessInfo
stRetUnionBusinessInfo	tmpcode/commond.h	/^struct stRetUnionBusinessInfo : public stUnionUserCmd$/;"	s
stRetUnionInfo	tmpcode/commond.h	/^	stRetUnionInfo()$/;"	f	struct:stRetUnionInfo
stRetUnionInfo	tmpcode/commond.h	/^struct stRetUnionInfo : public stUnionUserCmd$/;"	s
stRetUnionNeedBuildProCmd	tmpcode/commond.h	/^	stRetUnionNeedBuildProCmd()$/;"	f	struct:stRetUnionNeedBuildProCmd
stRetUnionNeedBuildProCmd	tmpcode/commond.h	/^struct stRetUnionNeedBuildProCmd : public stUnionUserCmd$/;"	s
stRetUnionProStateCmd	tmpcode/commond.h	/^	stRetUnionProStateCmd()$/;"	f	struct:stRetUnionProStateCmd
stRetUnionProStateCmd	tmpcode/commond.h	/^struct stRetUnionProStateCmd : public stUnionUserCmd$/;"	s
stRetUnionResidentHireMoneyFail	tmpcode/commond.h	/^	stRetUnionResidentHireMoneyFail()$/;"	f	struct:stRetUnionResidentHireMoneyFail
stRetUnionResidentHireMoneyFail	tmpcode/commond.h	/^struct stRetUnionResidentHireMoneyFail : public stUnionUserCmd$/;"	s
stRetUnionSellList	tmpcode/commond.h	/^	stRetUnionSellList()$/;"	f	struct:stRetUnionSellList
stRetUnionSellList	tmpcode/commond.h	/^struct stRetUnionSellList : public stUnionUserCmd$/;"	s
stRetUnionSellRecond	tmpcode/commond.h	/^	stRetUnionSellRecond()$/;"	f	struct:stRetUnionSellRecond
stRetUnionSellRecond	tmpcode/commond.h	/^struct stRetUnionSellRecond : public stUnionUserCmd$/;"	s
stRetUnionStorageList	tmpcode/commond.h	/^	stRetUnionStorageList()$/;"	f	struct:stRetUnionStorageList
stRetUnionStorageList	tmpcode/commond.h	/^struct stRetUnionStorageList : public stUnionUserCmd$/;"	s
stRetUnionTechInfo	tmpcode/commond.h	/^	stRetUnionTechInfo()$/;"	f	struct:stRetUnionTechInfo
stRetUnionTechInfo	tmpcode/commond.h	/^struct stRetUnionTechInfo : public stUnionUserCmd$/;"	s
stRetUnlockChangeZone	base/Command.h	/^    stRetUnlockChangeZone()$/;"	f	struct:Cmd::stRetUnlockChangeZone
stRetUnlockChangeZone	base/Command.h	/^struct stRetUnlockChangeZone : public stLogonUserCmd$/;"	s	namespace:Cmd
stRetUserPerformInfoCmd	tmpcode/commond.h	/^	stRetUserPerformInfoCmd()$/;"	f	struct:stRetUserPerformInfoCmd
stRetUserPerformInfoCmd	tmpcode/commond.h	/^struct stRetUserPerformInfoCmd : public stChatUserCmd$/;"	s
stRetValidQuestUserCmd	base/Command.h	/^  stRetValidQuestUserCmd()$/;"	f	struct:Cmd::stRetValidQuestUserCmd
stRetValidQuestUserCmd	base/Command.h	/^struct stRetValidQuestUserCmd : public stQuestUserCmd$/;"	s	namespace:Cmd
stRetValidQuestUserCmd	tmpcode/commond.h	/^	stRetValidQuestUserCmd()$/;"	f	struct:stRetValidQuestUserCmd
stRetValidQuestUserCmd	tmpcode/commond.h	/^struct stRetValidQuestUserCmd : public stQuestUserCmd$/;"	s
stRetVisitResidentTower	tmpcode/commond.h	/^	stRetVisitResidentTower()$/;"	f	struct:stRetVisitResidentTower
stRetVisitResidentTower	tmpcode/commond.h	/^struct stRetVisitResidentTower : public stUnionUserCmd$/;"	s
stRetVoteInChallengeDragonUserCmd	tmpcode/commond.h	/^	stRetVoteInChallengeDragonUserCmd()$/;"	f	struct:stRetVoteInChallengeDragonUserCmd
stRetVoteInChallengeDragonUserCmd	tmpcode/commond.h	/^struct stRetVoteInChallengeDragonUserCmd : public stDragonUserCmd$/;"	s
stRetVoteRecordDragonUserCmd	tmpcode/commond.h	/^	stRetVoteRecordDragonUserCmd()$/;"	f	struct:stRetVoteRecordDragonUserCmd
stRetVoteRecordDragonUserCmd	tmpcode/commond.h	/^struct stRetVoteRecordDragonUserCmd : public stDragonUserCmd$/;"	s
stRetWatchDragonDataUserCmd	tmpcode/commond.h	/^        stRetWatchDragonDataUserCmd()$/;"	f	struct:stRetWatchDragonDataUserCmd
stRetWatchDragonDataUserCmd	tmpcode/commond.h	/^struct stRetWatchDragonDataUserCmd : public stDragonUserCmd$/;"	s
stRet_PromoterRelationUserCmd	tmpcode/commond.h	/^	stRet_PromoterRelationUserCmd()$/;"	f	struct:stRet_PromoterRelationUserCmd
stRet_PromoterRelationUserCmd	tmpcode/commond.h	/^struct stRet_PromoterRelationUserCmd : public stQuestUserCmd$/;"	s
stRet_PromoterRewardUserCmd	tmpcode/commond.h	/^	stRet_PromoterRewardUserCmd()$/;"	f	struct:stRet_PromoterRewardUserCmd
stRet_PromoterRewardUserCmd	tmpcode/commond.h	/^struct stRet_PromoterRewardUserCmd : public stQuestUserCmd$/;"	s
stRetireOfficialUserCmd	tmpcode/commond.h	/^        stRetireOfficialUserCmd()$/;"	f	struct:stRetireOfficialUserCmd
stRetireOfficialUserCmd	tmpcode/commond.h	/^struct stRetireOfficialUserCmd : public stOfficialUserCmd$/;"	s
stReturnAttGuardNpc	tmpcode/commond.h	/^	stReturnAttGuardNpc():stUnionSkillUserCmd(RETURN_ATT_GUARDNPC_USERCMD),userID(0),size(0)$/;"	f	struct:stReturnAttGuardNpc
stReturnAttGuardNpc	tmpcode/commond.h	/^struct stReturnAttGuardNpc : public stUnionSkillUserCmd$/;"	s
stReturnBargirlADContent	tmpcode/commond.h	/^        stReturnBargirlADContent()$/;"	f	struct:stReturnBargirlADContent
stReturnBargirlADContent	tmpcode/commond.h	/^struct stReturnBargirlADContent : public stBarUserCmd$/;"	s
stReturnBoughtWeekAssurance	tmpcode/commond.h	/^	stReturnBoughtWeekAssurance()$/;"	f	struct:stReturnBoughtWeekAssurance
stReturnBoughtWeekAssurance	tmpcode/commond.h	/^struct stReturnBoughtWeekAssurance : public stGoldUserCmd$/;"	s
stReturnCancelListStockUserCmd	base/Command.h	/^  stReturnCancelListStockUserCmd() $/;"	f	struct:Cmd::stReturnCancelListStockUserCmd
stReturnCancelListStockUserCmd	base/Command.h	/^struct stReturnCancelListStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stReturnCancelListStockUserCmd	tmpcode/commond.h	/^	stReturnCancelListStockUserCmd()$/;"	f	struct:stReturnCancelListStockUserCmd
stReturnCancelListStockUserCmd	tmpcode/commond.h	/^struct stReturnCancelListStockUserCmd : public stStockBillUserCmd$/;"	s
stReturnCardAndGold	base/Command.h	/^  stReturnCardAndGold()$/;"	f	struct:Cmd::stReturnCardAndGold
stReturnCardAndGold	base/Command.h	/^struct stReturnCardAndGold :  public stGoldUserCmd$/;"	s	namespace:Cmd
stReturnCartoonCmd	base/Command.h	/^  stReturnCartoonCmd()$/;"	f	struct:Cmd::stReturnCartoonCmd
stReturnCartoonCmd	base/Command.h	/^struct stReturnCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stReturnCityGuardSortUserCmd	tmpcode/commond.h	/^	stReturnCityGuardSortUserCmd()$/;"	f	struct:stReturnCityGuardSortUserCmd
stReturnCityGuardSortUserCmd	tmpcode/commond.h	/^struct stReturnCityGuardSortUserCmd : public stCityUserCmd$/;"	s
stReturnCityTax	tmpcode/commond.h	/^	stReturnCityTax()$/;"	f	struct:stReturnCityTax
stReturnCityTax	tmpcode/commond.h	/^struct stReturnCityTax : public stUnionUserCmd$/;"	s
stReturnClientIP	base/Command.h	/^    stReturnClientIP()$/;"	f	struct:Cmd::stReturnClientIP
stReturnClientIP	base/Command.h	/^struct stReturnClientIP : public stLogonUserCmd$/;"	s	namespace:Cmd
stReturnClientIP	tmpcode/commond.h	/^	stReturnClientIP()$/;"	f	struct:stReturnClientIP
stReturnClientIP	tmpcode/commond.h	/^struct stReturnClientIP : public stLogonUserCmd$/;"	s
stReturnConSumeCardCard	base/Command.h	/^  stReturnConSumeCardCard()$/;"	f	struct:Cmd::stReturnConSumeCardCard
stReturnConSumeCardCard	base/Command.h	/^struct stReturnConSumeCardCard : public stGoldUserCmd$/;"	s	namespace:Cmd
stReturnConSumeCardCard	tmpcode/commond.h	/^	stReturnConSumeCardCard()$/;"	f	struct:stReturnConSumeCardCard
stReturnConSumeCardCard	tmpcode/commond.h	/^struct stReturnConSumeCardCard : public stGoldUserCmd$/;"	s
stReturnCountryPowerCmd	base/Command.h	/^  stReturnCountryPowerCmd()$/;"	f	struct:Cmd::stReturnCountryPowerCmd
stReturnCountryPowerCmd	base/Command.h	/^struct stReturnCountryPowerCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stReturnCountryPowerCmd	tmpcode/commond.h	/^	stReturnCountryPowerCmd()$/;"	f	struct:stReturnCountryPowerCmd
stReturnCountryPowerCmd	tmpcode/commond.h	/^struct stReturnCountryPowerCmd : public stCountryUserCmd$/;"	s
stReturnCountrySortListUserCmd	tmpcode/commond.h	/^	stReturnCountrySortListUserCmd()$/;"	f	struct:stReturnCountrySortListUserCmd
stReturnCountrySortListUserCmd	tmpcode/commond.h	/^struct stReturnCountrySortListUserCmd : public stCountryUserCmd$/;"	s
stReturnCountryStrengthUserCmd	tmpcode/commond.h	/^	stReturnCountryStrengthUserCmd()$/;"	f	struct:stReturnCountryStrengthUserCmd
stReturnCountryStrengthUserCmd	tmpcode/commond.h	/^struct stReturnCountryStrengthUserCmd : public stCountryUserCmd$/;"	s
stReturnCountryTax	tmpcode/commond.h	/^	stReturnCountryTax()$/;"	f	struct:stReturnCountryTax
stReturnCountryTax	tmpcode/commond.h	/^struct stReturnCountryTax : public stUnionUserCmd$/;"	s
stReturnCountryTransportLimitUserCmd	tmpcode/commond.h	/^	stReturnCountryTransportLimitUserCmd()$/;"	f	struct:stReturnCountryTransportLimitUserCmd
stReturnCountryTransportLimitUserCmd	tmpcode/commond.h	/^struct stReturnCountryTransportLimitUserCmd : public stQuestUserCmd$/;"	s
stReturnDareCountryCmd	base/Command.h	/^  stReturnDareCountryCmd()$/;"	f	struct:Cmd::stReturnDareCountryCmd
stReturnDareCountryCmd	base/Command.h	/^struct stReturnDareCountryCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stReturnDareRecordPlanCmd	base/Command.h	/^  stReturnDareRecordPlanCmd()$/;"	f	struct:Cmd::stReturnDareRecordPlanCmd
stReturnDareRecordPlanCmd	base/Command.h	/^struct stReturnDareRecordPlanCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stReturnDareRecordResultCmd	base/Command.h	/^  stReturnDareRecordResultCmd()$/;"	f	struct:Cmd::stReturnDareRecordResultCmd
stReturnDareRecordResultCmd	base/Command.h	/^struct stReturnDareRecordResultCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stReturnDareRecordStatCmd	base/Command.h	/^  stReturnDareRecordStatCmd()$/;"	f	struct:Cmd::stReturnDareRecordStatCmd
stReturnDareRecordStatCmd	base/Command.h	/^struct stReturnDareRecordStatCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stReturnDayFlowerListUserCmd	tmpcode/commond.h	/^	stReturnDayFlowerListUserCmd()$/;"	f	struct:stReturnDayFlowerListUserCmd
stReturnDayFlowerListUserCmd	tmpcode/commond.h	/^struct stReturnDayFlowerListUserCmd : public stDataUserCmd$/;"	s
stReturnDefenceList	tmpcode/commond.h	/^struct stReturnDefenceList$/;"	s
stReturnDeleteSelectUserCmd	base/Command.h	/^  stReturnDeleteSelectUserCmd()$/;"	f	struct:Cmd::stReturnDeleteSelectUserCmd
stReturnDeleteSelectUserCmd	base/Command.h	/^struct stReturnDeleteSelectUserCmd : public stSelectUserCmd$/;"	s	namespace:Cmd
stReturnDeleteSelectUserCmd	tmpcode/commond.h	/^	stReturnDeleteSelectUserCmd()$/;"	f	struct:stReturnDeleteSelectUserCmd
stReturnDeleteSelectUserCmd	tmpcode/commond.h	/^struct stReturnDeleteSelectUserCmd : public stSelectUserCmd$/;"	s
stReturnElementShiftUserCmd	tmpcode/commond.h	/^	stReturnElementShiftUserCmd()$/;"	f	struct:stReturnElementShiftUserCmd
stReturnElementShiftUserCmd	tmpcode/commond.h	/^struct stReturnElementShiftUserCmd : public stMagicUserCmd$/;"	s
stReturnExchange2Gifts	tmpcode/commond.h	/^	stReturnExchange2Gifts()$/;"	f	struct:stReturnExchange2Gifts
stReturnExchange2Gifts	tmpcode/commond.h	/^struct stReturnExchange2Gifts : public stGoldUserCmd$/;"	s
stReturnExchange2State	tmpcode/commond.h	/^	stReturnExchange2State()$/;"	f	struct:stReturnExchange2State
stReturnExchange2State	tmpcode/commond.h	/^struct stReturnExchange2State : public stGoldUserCmd$/;"	s
stReturnExchange2Time	tmpcode/commond.h	/^	stReturnExchange2Time()$/;"	f	struct:stReturnExchange2Time
stReturnExchange2Time	tmpcode/commond.h	/^struct stReturnExchange2Time : public stGoldUserCmd$/;"	s
stReturnExchange3Gifts	tmpcode/commond.h	/^	stReturnExchange3Gifts()$/;"	f	struct:stReturnExchange3Gifts
stReturnExchange3Gifts	tmpcode/commond.h	/^struct stReturnExchange3Gifts : public stGoldUserCmd$/;"	s
stReturnExchange3State	tmpcode/commond.h	/^	stReturnExchange3State()$/;"	f	struct:stReturnExchange3State
stReturnExchange3State	tmpcode/commond.h	/^struct stReturnExchange3State : public stGoldUserCmd$/;"	s
stReturnExchange3Time	tmpcode/commond.h	/^	stReturnExchange3Time()$/;"	f	struct:stReturnExchange3Time
stReturnExchange3Time	tmpcode/commond.h	/^struct stReturnExchange3Time : public stGoldUserCmd$/;"	s
stReturnExchange4Config	tmpcode/commond.h	/^	stReturnExchange4Config()$/;"	f	struct:stReturnExchange4Config
stReturnExchange4Config	tmpcode/commond.h	/^struct stReturnExchange4Config : public stGoldUserCmd$/;"	s
stReturnExchange4State	tmpcode/commond.h	/^	stReturnExchange4State()$/;"	f	struct:stReturnExchange4State
stReturnExchange4State	tmpcode/commond.h	/^struct stReturnExchange4State : public stGoldUserCmd$/;"	s
stReturnExchange5Config	tmpcode/commond.h	/^	stReturnExchange5Config()$/;"	f	struct:stReturnExchange5Config
stReturnExchange5Config	tmpcode/commond.h	/^struct stReturnExchange5Config : public stGoldUserCmd$/;"	s
stReturnExchange5State	tmpcode/commond.h	/^	stReturnExchange5State()$/;"	f	struct:stReturnExchange5State
stReturnExchange5State	tmpcode/commond.h	/^struct stReturnExchange5State : public stGoldUserCmd$/;"	s
stReturnExchangeCardIDTradeUserCmd	tmpcode/commond.h	/^        stReturnExchangeCardIDTradeUserCmd()$/;"	f	struct:stReturnExchangeCardIDTradeUserCmd
stReturnExchangeCardIDTradeUserCmd	tmpcode/commond.h	/^struct stReturnExchangeCardIDTradeUserCmd:public stTradeUserCmd$/;"	s
stReturnExchangeGiftState	tmpcode/commond.h	/^	stReturnExchangeGiftState()$/;"	f	struct:stReturnExchangeGiftState
stReturnExchangeGiftState	tmpcode/commond.h	/^struct stReturnExchangeGiftState : public stGoldUserCmd$/;"	s
stReturnExchangeGoldCardUserCmd	tmpcode/commond.h	/^        stReturnExchangeGoldCardUserCmd()$/;"	f	struct:stReturnExchangeGoldCardUserCmd
stReturnExchangeGoldCardUserCmd	tmpcode/commond.h	/^struct stReturnExchangeGoldCardUserCmd : public stPropertyUserCmd$/;"	s
stReturnFarmIntroduce	tmpcode/commond.h	/^	stReturnFarmIntroduce()$/;"	f	struct:stReturnFarmIntroduce
stReturnFarmIntroduce	tmpcode/commond.h	/^struct stReturnFarmIntroduce: public stCatchEggUserCmd$/;"	s
stReturnFlowerListUserCmd	tmpcode/commond.h	/^	stReturnFlowerListUserCmd()$/;"	f	struct:stReturnFlowerListUserCmd
stReturnFlowerListUserCmd	tmpcode/commond.h	/^struct stReturnFlowerListUserCmd : public stDataUserCmd$/;"	s
stReturnFriendHomeUserCmd	tmpcode/commond.h	/^	stReturnFriendHomeUserCmd()$/;"	f	struct:stReturnFriendHomeUserCmd
stReturnFriendHomeUserCmd	tmpcode/commond.h	/^struct stReturnFriendHomeUserCmd : public stHomeUserCmd$/;"	s
stReturnFromServerUserCmd	tmpcode/commond.h	/^	stReturnFromServerUserCmd()$/;"	f	struct:stReturnFromServerUserCmd
stReturnFromServerUserCmd	tmpcode/commond.h	/^struct stReturnFromServerUserCmd : public stBarUserCmd$/;"	s
stReturnFundStockUserCmd	base/Command.h	/^  stReturnFundStockUserCmd() $/;"	f	struct:Cmd::stReturnFundStockUserCmd
stReturnFundStockUserCmd	base/Command.h	/^struct stReturnFundStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stReturnFundStockUserCmd	tmpcode/commond.h	/^	stReturnFundStockUserCmd()$/;"	f	struct:stReturnFundStockUserCmd
stReturnFundStockUserCmd	tmpcode/commond.h	/^struct stReturnFundStockUserCmd : public stStockBillUserCmd$/;"	s
stReturnGoldGiveTradeUserCmd	base/Command.h	/^  stReturnGoldGiveTradeUserCmd()$/;"	f	struct:Cmd::stReturnGoldGiveTradeUserCmd
stReturnGoldGiveTradeUserCmd	base/Command.h	/^struct stReturnGoldGiveTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stReturnGoodsBonusInfoCmd	tmpcode/commond.h	/^	stReturnGoodsBonusInfoCmd()$/;"	f	struct:stReturnGoodsBonusInfoCmd
stReturnGoodsBonusInfoCmd	tmpcode/commond.h	/^struct stReturnGoodsBonusInfoCmd : public stTradeUserCmd$/;"	s
stReturnGoodsWithBonusCmd	tmpcode/commond.h	/^	stReturnGoodsWithBonusCmd()$/;"	f	struct:stReturnGoodsWithBonusCmd
stReturnGoodsWithBonusCmd	tmpcode/commond.h	/^struct stReturnGoodsWithBonusCmd : public stTradeUserCmd$/;"	s
stReturnHealthyGameUserCmd	tmpcode/commond.h	/^	stReturnHealthyGameUserCmd()$/;"	f	struct:stReturnHealthyGameUserCmd
stReturnHealthyGameUserCmd	tmpcode/commond.h	/^struct stReturnHealthyGameUserCmd : public stDataUserCmd$/;"	s
stReturnMacUserCmd	tmpcode/commond.h	/^	stReturnMacUserCmd()$/;"	f	struct:stReturnMacUserCmd
stReturnMacUserCmd	tmpcode/commond.h	/^struct stReturnMacUserCmd : public stDataUserCmd$/;"	s
stReturnMercenaryCountryIDCountryCmd	tmpcode/commond.h	/^        stReturnMercenaryCountryIDCountryCmd()$/;"	f	struct:stReturnMercenaryCountryIDCountryCmd
stReturnMercenaryCountryIDCountryCmd	tmpcode/commond.h	/^struct stReturnMercenaryCountryIDCountryCmd:public stCountryUserCmd$/;"	s
stReturnMerceryManagerCountryCmd	tmpcode/commond.h	/^        stReturnMerceryManagerCountryCmd()$/;"	f	struct:stReturnMerceryManagerCountryCmd
stReturnMerceryManagerCountryCmd	tmpcode/commond.h	/^struct stReturnMerceryManagerCountryCmd:public stCountryUserCmd$/;"	s
stReturnMergeServerTeamUserCmd	tmpcode/commond.h	/^	stReturnMergeServerTeamUserCmd()$/;"	f	struct:stReturnMergeServerTeamUserCmd
stReturnMergeServerTeamUserCmd	tmpcode/commond.h	/^struct stReturnMergeServerTeamUserCmd :public stPropertyUserCmd$/;"	s
stReturnPasswordStockIserCmd	base/Command.h	/^  stReturnPasswordStockIserCmd()$/;"	f	struct:Cmd::stReturnPasswordStockIserCmd
stReturnPasswordStockIserCmd	base/Command.h	/^struct stReturnPasswordStockIserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stReturnPasswordStockIserCmd	tmpcode/commond.h	/^	stReturnPasswordStockIserCmd()$/;"	f	struct:stReturnPasswordStockIserCmd
stReturnPasswordStockIserCmd	tmpcode/commond.h	/^struct stReturnPasswordStockIserCmd : public stStockBillUserCmd$/;"	s
stReturnPointOpenGiftBag	tmpcode/commond.h	/^    stReturnPointOpenGiftBag()$/;"	f	struct:stReturnPointOpenGiftBag
stReturnPointOpenGiftBag	tmpcode/commond.h	/^struct stReturnPointOpenGiftBag : public stGoldUserCmd$/;"	s
stReturnPrevSealMagicUserCmd	tmpcode/commond.h	/^	stReturnPrevSealMagicUserCmd()$/;"	f	struct:stReturnPrevSealMagicUserCmd
stReturnPrevSealMagicUserCmd	tmpcode/commond.h	/^struct stReturnPrevSealMagicUserCmd : public stMagicUserCmd$/;"	s
stReturnPutListStockUserCmd	base/Command.h	/^  stReturnPutListStockUserCmd() $/;"	f	struct:Cmd::stReturnPutListStockUserCmd
stReturnPutListStockUserCmd	base/Command.h	/^struct stReturnPutListStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stReturnPutListStockUserCmd	tmpcode/commond.h	/^	stReturnPutListStockUserCmd()$/;"	f	struct:stReturnPutListStockUserCmd
stReturnPutListStockUserCmd	tmpcode/commond.h	/^struct stReturnPutListStockUserCmd : public stStockBillUserCmd$/;"	s
stReturnQuestionJinglingZhige	tmpcode/commond.h	/^	stReturnQuestionJinglingZhige()$/;"	f	struct:stReturnQuestionJinglingZhige
stReturnQuestionJinglingZhige	tmpcode/commond.h	/^struct stReturnQuestionJinglingZhige : public stChatUserCmd$/;"	s
stReturnQuestionLingQi	tmpcode/commond.h	/^    stReturnQuestionLingQi()$/;"	f	struct:stReturnQuestionLingQi
stReturnQuestionLingQi	tmpcode/commond.h	/^struct stReturnQuestionLingQi : public stChatUserCmd$/;"	s
stReturnQuestionObject	base/Command.h	/^  stReturnQuestionObject()$/;"	f	struct:Cmd::stReturnQuestionObject
stReturnQuestionObject	base/Command.h	/^struct stReturnQuestionObject : public stChatUserCmd$/;"	s	namespace:Cmd
stReturnQuestionObject	tmpcode/commond.h	/^        stReturnQuestionObject()$/;"	f	struct:stReturnQuestionObject
stReturnQuestionObject	tmpcode/commond.h	/^struct stReturnQuestionObject : public stChatUserCmd$/;"	s
stReturnRequestFlySkill	tmpcode/commond.h	/^        stReturnRequestFlySkill()$/;"	f	struct:stReturnRequestFlySkill
stReturnRequestFlySkill	tmpcode/commond.h	/^struct stReturnRequestFlySkill : public stChatUserCmd$/;"	s
stReturnRequestPoint	base/Command.h	/^  stReturnRequestPoint()$/;"	f	struct:Cmd::stReturnRequestPoint
stReturnRequestPoint	base/Command.h	/^struct stReturnRequestPoint :  public stGoldUserCmd$/;"	s	namespace:Cmd
stReturnRequestPoint	tmpcode/commond.h	/^	stReturnRequestPoint()$/;"	f	struct:stReturnRequestPoint
stReturnRequestPoint	tmpcode/commond.h	/^struct stReturnRequestPoint :  public stGoldUserCmd$/;"	s
stReturnScoreListLuoRiUserCmd	tmpcode/commond.h	/^        stReturnScoreListLuoRiUserCmd()$/;"	f	struct:stReturnScoreListLuoRiUserCmd
stReturnScoreListLuoRiUserCmd	tmpcode/commond.h	/^struct stReturnScoreListLuoRiUserCmd: public stLuoRiXiaGuUserCmd$/;"	s
stReturnScoreListWeekendZhenxuanUserCmd	tmpcode/commond.h	/^	stReturnScoreListWeekendZhenxuanUserCmd()$/;"	f	struct:stReturnScoreListWeekendZhenxuanUserCmd
stReturnScoreListWeekendZhenxuanUserCmd	tmpcode/commond.h	/^struct stReturnScoreListWeekendZhenxuanUserCmd: public stZhenxuanJingjiUserCmd$/;"	s
stReturnScoreListZhenxuanUserCmd	tmpcode/commond.h	/^	stReturnScoreListZhenxuanUserCmd()$/;"	f	struct:stReturnScoreListZhenxuanUserCmd
stReturnScoreListZhenxuanUserCmd	tmpcode/commond.h	/^struct stReturnScoreListZhenxuanUserCmd : public stZhenxuanJingjiUserCmd$/;"	s
stReturnStrongWeakCountriesUserCmd	tmpcode/commond.h	/^    stReturnStrongWeakCountriesUserCmd()$/;"	f	struct:stReturnStrongWeakCountriesUserCmd
stReturnStrongWeakCountriesUserCmd	tmpcode/commond.h	/^struct stReturnStrongWeakCountriesUserCmd : public stCountryUserCmd$/;"	s
stReturnTankCmd	tmpcode/commond.h	/^	stReturnTankCmd()$/;"	f	struct:stReturnTankCmd
stReturnTankCmd	tmpcode/commond.h	/^struct stReturnTankCmd : public stTankUserCmd$/;"	s
stReturnTaxHistory	tmpcode/commond.h	/^	stReturnTaxHistory()$/;"	f	struct:stReturnTaxHistory
stReturnTaxHistory	tmpcode/commond.h	/^struct stReturnTaxHistory : public stUnionUserCmd$/;"	s
stReturnTeamMemberPosition	base/Command.h	/^  stReturnTeamMemberPosition()$/;"	f	struct:Cmd::stReturnTeamMemberPosition
stReturnTeamMemberPosition	base/Command.h	/^struct stReturnTeamMemberPosition : public stChatUserCmd$/;"	s	namespace:Cmd
stReturnTeamMemberPosition	tmpcode/commond.h	/^	stReturnTeamMemberPosition()$/;"	f	struct:stReturnTeamMemberPosition
stReturnTeamMemberPosition	tmpcode/commond.h	/^struct stReturnTeamMemberPosition : public stChatUserCmd$/;"	s
stReturnTmPowerValueList	tmpcode/commond.h	/^	stReturnTmPowerValueList() $/;"	f	struct:stReturnTmPowerValueList
stReturnTmPowerValueList	tmpcode/commond.h	/^struct stReturnTmPowerValueList : public stCountryUserCmd$/;"	s
stReturnTrafficTaxHistory	tmpcode/commond.h	/^	stReturnTrafficTaxHistory()$/;"	f	struct:stReturnTrafficTaxHistory
stReturnTrafficTaxHistory	tmpcode/commond.h	/^struct stReturnTrafficTaxHistory : public stUnionUserCmd$/;"	s
stReturnUnionMemberInfoCmd	base/Command.h	/^  stReturnUnionMemberInfoCmd()$/;"	f	struct:Cmd::stReturnUnionMemberInfoCmd
stReturnUnionMemberInfoCmd	base/Command.h	/^struct stReturnUnionMemberInfoCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stReturnUnionMemberInfoCmd	tmpcode/commond.h	/^	stReturnUnionMemberInfoCmd()$/;"	f	struct:stReturnUnionMemberInfoCmd
stReturnUnionMemberInfoCmd	tmpcode/commond.h	/^struct stReturnUnionMemberInfoCmd : public stUnionUserCmd$/;"	s
stReturnUserEmotionSort	tmpcode/commond.h	/^	stReturnUserEmotionSort()$/;"	f	struct:stReturnUserEmotionSort
stReturnUserEmotionSort	tmpcode/commond.h	/^struct stReturnUserEmotionSort : public stSpecialUserCmd$/;"	s
stReturnVoteListUserCmd	base/Command.h	/^  stReturnVoteListUserCmd()$/;"	f	struct:Cmd::stReturnVoteListUserCmd
stReturnVoteListUserCmd	base/Command.h	/^struct stReturnVoteListUserCmd : public stVoteUserCmd$/;"	s	namespace:Cmd
stReturnWeekAssuranceConfig	tmpcode/commond.h	/^	stReturnWeekAssuranceConfig()$/;"	f	struct:stReturnWeekAssuranceConfig
stReturnWeekAssuranceConfig	tmpcode/commond.h	/^struct stReturnWeekAssuranceConfig : public stGoldUserCmd$/;"	s
stReturnWeekAssuranceDrawState	tmpcode/commond.h	/^	stReturnWeekAssuranceDrawState()$/;"	f	struct:stReturnWeekAssuranceDrawState
stReturnWeekAssuranceDrawState	tmpcode/commond.h	/^struct stReturnWeekAssuranceDrawState : public stGoldUserCmd$/;"	s
stReturnYuYinChannelCmd	tmpcode/commond.h	/^	stReturnYuYinChannelCmd()$/;"	f	struct:stReturnYuYinChannelCmd
stReturnYuYinChannelCmd	tmpcode/commond.h	/^struct stReturnYuYinChannelCmd : public stSoundUserCmd$/;"	s
stReturnerItem	tmpcode/commond.h	/^	stReturnerItem()$/;"	f	struct:stReturnerItem
stReturnerItem	tmpcode/commond.h	/^struct stReturnerItem$/;"	s
stRideMapScreenUserCmd	base/Command.h	/^  stRideMapScreenUserCmd()$/;"	f	struct:Cmd::stRideMapScreenUserCmd
stRideMapScreenUserCmd	base/Command.h	/^struct stRideMapScreenUserCmd : public stMapScreenUserCmd$/;"	s	namespace:Cmd
stRideMapScreenUserCmd	tmpcode/commond.h	/^    stRideMapScreenUserCmd()$/;"	f	struct:stRideMapScreenUserCmd
stRideMapScreenUserCmd	tmpcode/commond.h	/^struct stRideMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stRideTankDataTankCmd	tmpcode/commond.h	/^	stRideTankDataTankCmd()$/;"	f	struct:stRideTankDataTankCmd
stRideTankDataTankCmd	tmpcode/commond.h	/^struct stRideTankDataTankCmd : public stTankUserCmd$/;"	s
stRoomInfoQuestRoomUserCmd	tmpcode/commond.h	/^    stRoomInfoQuestRoomUserCmd():questID(0), levelMark(0), flag(0), roomCount(0),\/* lev$/;"	f	struct:stRoomInfoQuestRoomUserCmd
stRoomInfoQuestRoomUserCmd	tmpcode/commond.h	/^struct stRoomInfoQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stRoomMemDetailQuestRoomUserCmd	tmpcode/commond.h	/^    stRoomMemDetailQuestRoomUserCmd(): questID(0), levelMark(0), roomID(0), masterOrder$/;"	f	struct:stRoomMemDetailQuestRoomUserCmd
stRoomMemDetailQuestRoomUserCmd	tmpcode/commond.h	/^struct stRoomMemDetailQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stRtEarningInfoUnionCmd	tmpcode/commond.h	/^        stRtEarningInfoUnionCmd()$/;"	f	struct:stRtEarningInfoUnionCmd
stRtEarningInfoUnionCmd	tmpcode/commond.h	/^struct stRtEarningInfoUnionCmd : public stUnionUserCmd$/;"	s
stRtnArmyListUserCmd	base/Command.h	/^  stRtnArmyListUserCmd()$/;"	f	struct:Cmd::stRtnArmyListUserCmd
stRtnArmyListUserCmd	base/Command.h	/^struct stRtnArmyListUserCmd : public stArmyUserCmd$/;"	s	namespace:Cmd
stRtnArmySpecUserCmd	base/Command.h	/^  stRtnArmySpecUserCmd()$/;"	f	struct:Cmd::stRtnArmySpecUserCmd
stRtnArmySpecUserCmd	base/Command.h	/^struct stRtnArmySpecUserCmd : public stArmyUserCmd$/;"	s	namespace:Cmd
stRtnCancelUnionAllyInfo	tmpcode/commond.h	/^	stRtnCancelUnionAllyInfo ()$/;"	f	struct:stRtnCancelUnionAllyInfo
stRtnCancelUnionAllyInfo	tmpcode/commond.h	/^struct stRtnCancelUnionAllyInfo: public stUnionAllyUserCmd$/;"	s
stRtnCityOwnerListCmd	base/Command.h	/^  stRtnCityOwnerListCmd()$/;"	f	struct:Cmd::stRtnCityOwnerListCmd
stRtnCityOwnerListCmd	base/Command.h	/^struct stRtnCityOwnerListCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stRtnCountryAllyInfo	base/Command.h	/^  stRtnCountryAllyInfo()$/;"	f	struct:Cmd::stRtnCountryAllyInfo
stRtnCountryAllyInfo	base/Command.h	/^struct stRtnCountryAllyInfo : public stAllyUserCmd$/;"	s	namespace:Cmd
stRtnEnterBattleUserCmd	base/BattleUserCmd.h	/^	stRtnEnterBattleUserCmd()$/;"	f	struct:Cmd::stRtnEnterBattleUserCmd
stRtnEnterBattleUserCmd	base/BattleUserCmd.h	/^    struct stRtnEnterBattleUserCmd : public stBattleUserCmd$/;"	s	namespace:Cmd
stRtnGRecommendBountyUserCmd	tmpcode/commond.h	/^	stRtnGRecommendBountyUserCmd()$/;"	f	struct:stRtnGRecommendBountyUserCmd
stRtnGRecommendBountyUserCmd	tmpcode/commond.h	/^struct stRtnGRecommendBountyUserCmd : public stRecommendUserCmd$/;"	s
stRtnGRecommendRelationUserCmd	tmpcode/commond.h	/^	stRtnGRecommendRelationUserCmd()$/;"	f	struct:stRtnGRecommendRelationUserCmd
stRtnGRecommendRelationUserCmd	tmpcode/commond.h	/^struct stRtnGRecommendRelationUserCmd : public stRecommendUserCmd$/;"	s
stRtnGRecommendedBountyUserCmd	tmpcode/commond.h	/^	stRtnGRecommendedBountyUserCmd()$/;"	f	struct:stRtnGRecommendedBountyUserCmd
stRtnGRecommendedBountyUserCmd	tmpcode/commond.h	/^struct stRtnGRecommendedBountyUserCmd : public stRecommendUserCmd$/;"	s
stRtnKingListCmd	base/Command.h	/^  stRtnKingListCmd()$/;"	f	struct:Cmd::stRtnKingListCmd
stRtnKingListCmd	base/Command.h	/^struct stRtnKingListCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stRtnNpcOwnerListCmd	base/Command.h	/^  stRtnNpcOwnerListCmd()$/;"	f	struct:Cmd::stRtnNpcOwnerListCmd
stRtnNpcOwnerListCmd	base/Command.h	/^struct stRtnNpcOwnerListCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stRtnRecommendBountyUserCmd	base/Command.h	/^  stRtnRecommendBountyUserCmd()$/;"	f	struct:Cmd::stRtnRecommendBountyUserCmd
stRtnRecommendBountyUserCmd	base/Command.h	/^struct stRtnRecommendBountyUserCmd : public stRecommendUserCmd$/;"	s	namespace:Cmd
stRtnRecommendedBountyUserCmd	base/Command.h	/^  stRtnRecommendedBountyUserCmd()$/;"	f	struct:Cmd::stRtnRecommendedBountyUserCmd
stRtnRecommendedBountyUserCmd	base/Command.h	/^struct stRtnRecommendedBountyUserCmd : public stRecommendUserCmd$/;"	s	namespace:Cmd
stRtnSeptNameCmd	base/Command.h	/^  stRtnSeptNameCmd()$/;"	f	struct:Cmd::stRtnSeptNameCmd
stRtnSeptNameCmd	base/Command.h	/^struct stRtnSeptNameCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stRtnSeptNameCmd	tmpcode/commond.h	/^	 stRtnSeptNameCmd()$/;"	f	struct:stRtnSeptNameCmd
stRtnSeptNameCmd	tmpcode/commond.h	/^ struct stRtnSeptNameCmd : public stSeptUserCmd$/;"	s
stRtnSeptNameListCmd	base/Command.h	/^  stRtnSeptNameListCmd()$/;"	f	struct:Cmd::stRtnSeptNameListCmd
stRtnSeptNameListCmd	base/Command.h	/^struct stRtnSeptNameListCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stRtnSeptSort	base/Command.h	/^  stRtnSeptSort()$/;"	f	struct:Cmd::stRtnSeptSort
stRtnSeptSort	base/Command.h	/^struct stRtnSeptSort : public stSeptUserCmd$/;"	s	namespace:Cmd
stRtnSeptSort	tmpcode/commond.h	/^	stRtnSeptSort()$/;"	f	struct:stRtnSeptSort
stRtnSeptSort	tmpcode/commond.h	/^struct stRtnSeptSort : public stSeptUserCmd$/;"	s
stRtnSoundTokenCmd	tmpcode/commond.h	/^	stRtnSoundTokenCmd()$/;"	f	struct:stRtnSoundTokenCmd
stRtnSoundTokenCmd	tmpcode/commond.h	/^struct stRtnSoundTokenCmd : public stSoundUserCmd$/;"	s
stRtnSponserAwardCallBackUserCmd	tmpcode/commond.h	/^	stRtnSponserAwardCallBackUserCmd()$/;"	f	struct:stRtnSponserAwardCallBackUserCmd
stRtnSponserAwardCallBackUserCmd	tmpcode/commond.h	/^struct stRtnSponserAwardCallBackUserCmd : public stCallBackUserCmd$/;"	s
stRtnTechUserCmd	base/Command.h	/^  stRtnTechUserCmd()$/;"	f	struct:Cmd::stRtnTechUserCmd
stRtnTechUserCmd	base/Command.h	/^struct stRtnTechUserCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stRtnUnionAllyInfo	tmpcode/commond.h	/^	stRtnUnionAllyInfo()$/;"	f	struct:stRtnUnionAllyInfo
stRtnUnionAllyInfo	tmpcode/commond.h	/^struct stRtnUnionAllyInfo : public stUnionAllyUserCmd$/;"	s
stRtnUnionNameCmd	base/Command.h	/^  stRtnUnionNameCmd()$/;"	f	struct:Cmd::stRtnUnionNameCmd
stRtnUnionNameCmd	base/Command.h	/^struct stRtnUnionNameCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stRtnUnionNameCmd	tmpcode/commond.h	/^	 stRtnUnionNameCmd()$/;"	f	struct:stRtnUnionNameCmd
stRtnUnionNameCmd	tmpcode/commond.h	/^ struct stRtnUnionNameCmd : public stUnionUserCmd$/;"	s
stRtnUnionNameListCmd	base/Command.h	/^  stRtnUnionNameListCmd()$/;"	f	struct:Cmd::stRtnUnionNameListCmd
stRtnUnionNameListCmd	base/Command.h	/^struct stRtnUnionNameListCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stRtnUnionSort	base/Command.h	/^  stRtnUnionSort()$/;"	f	struct:Cmd::stRtnUnionSort
stRtnUnionSort	base/Command.h	/^struct stRtnUnionSort : public stUnionUserCmd$/;"	s	namespace:Cmd
stRtnUnionSort	tmpcode/commond.h	/^	stRtnUnionSort()$/;"	f	struct:stRtnUnionSort
stRtnUnionSort	tmpcode/commond.h	/^struct stRtnUnionSort : public stUnionUserCmd$/;"	s
stRtnWaitGenUserCmd	base/Command.h	/^  stRtnWaitGenUserCmd()$/;"	f	struct:Cmd::stRtnWaitGenUserCmd
stRtnWaitGenUserCmd	base/Command.h	/^struct stRtnWaitGenUserCmd : public stArmyUserCmd$/;"	s	namespace:Cmd
stRtnWaitOfficialUserCmd	base/Command.h	/^  stRtnWaitOfficialUserCmd()$/;"	f	struct:Cmd::stRtnWaitOfficialUserCmd
stRtnWaitOfficialUserCmd	base/Command.h	/^struct stRtnWaitOfficialUserCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stRtnZoneList	base/BattleUserCmd.h	/^	stRtnZoneList()$/;"	f	struct:Cmd::stRtnZoneList
stRtnZoneList	base/BattleUserCmd.h	/^    struct stRtnZoneList : public stBattleUserCmd$/;"	s	namespace:Cmd
stSafetyUserCmd	tmpcode/commond.h	/^	stSafetyUserCmd()$/;"	f	struct:stSafetyUserCmd
stSafetyUserCmd	tmpcode/commond.h	/^struct stSafetyUserCmd : public stNullUserCmd$/;"	s
stSaleAuction	base/Command.h	/^  stSaleAuction()$/;"	f	struct:Cmd::stSaleAuction
stSaleAuction	base/Command.h	/^struct stSaleAuction : public stAuctionUserCmd$/;"	s	namespace:Cmd
stSaleAuction	tmpcode/commond.h	/^        stSaleAuction()$/;"	f	struct:stSaleAuction
stSaleAuction	tmpcode/commond.h	/^struct stSaleAuction : public stAuctionUserCmd$/;"	s
stSaleBusinessGoods	tmpcode/commond.h	/^	stSaleBusinessGoods() : stBusinessUserCmd(SALE_BUSINESS_GOODS_USERCMD)$/;"	f	struct:stSaleBusinessGoods
stSaleBusinessGoods	tmpcode/commond.h	/^struct stSaleBusinessGoods : public stBusinessUserCmd $/;"	s
stSaleCartoonCmd	base/Command.h	/^  stSaleCartoonCmd()$/;"	f	struct:Cmd::stSaleCartoonCmd
stSaleCartoonCmd	base/Command.h	/^struct stSaleCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stSalePurchase	tmpcode/commond.h	/^    stSalePurchase()$/;"	f	struct:stSalePurchase
stSalePurchase	tmpcode/commond.h	/^struct stSalePurchase : public stTradeUserCmd$/;"	s
stSaveDance	tmpcode/commond.h	/^        stSaveDance()    $/;"	f	struct:stSaveDance
stSaveDance	tmpcode/commond.h	/^struct stSaveDance : public stDanceUserCmd$/;"	s
stSayNoQuestRoomUserCmd	tmpcode/commond.h	/^    stSayNoQuestRoomUserCmd()$/;"	f	struct:stSayNoQuestRoomUserCmd
stSayNoQuestRoomUserCmd	tmpcode/commond.h	/^struct stSayNoQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stScoreChallengeUserCmd	tmpcode/commond.h	/^	stScoreChallengeUserCmd()$/;"	f	struct:stScoreChallengeUserCmd
stScoreChallengeUserCmd	tmpcode/commond.h	/^struct stScoreChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stScoreInfo	tmpcode/commond.h	/^		stScoreInfo()$/;"	f	struct:stScoreInfoSCUserCmd::stScoreInfo
stScoreInfo	tmpcode/commond.h	/^	struct stScoreInfo$/;"	s	struct:stScoreInfoSCUserCmd
stScoreInfoSCUserCmd	tmpcode/commond.h	/^	stScoreInfoSCUserCmd()$/;"	f	struct:stScoreInfoSCUserCmd
stScoreInfoSCUserCmd	tmpcode/commond.h	/^struct stScoreInfoSCUserCmd : public stSeptCompeteUserCmd$/;"	s
stScoreNode	tmpcode/commond.h	/^		stScoreNode(const stScoreNode& stData)$/;"	f	struct:stShouLieScoreListCmd::stScoreNode
stScoreNode	tmpcode/commond.h	/^        stScoreNode()$/;"	f	struct:stShouLieScoreListCmd::stScoreNode
stScoreNode	tmpcode/commond.h	/^    struct stScoreNode$/;"	s	struct:stShouLieScoreListCmd
stScrollMapPropertyUserCmd	base/Command.h	/^    stScrollMapPropertyUserCmd()$/;"	f	struct:Cmd::stScrollMapPropertyUserCmd
stScrollMapPropertyUserCmd	base/Command.h	/^  struct stScrollMapPropertyUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stSealMagicUserCmd	tmpcode/commond.h	/^	stSealMagicUserCmd()$/;"	f	struct:stSealMagicUserCmd
stSealMagicUserCmd	tmpcode/commond.h	/^struct stSealMagicUserCmd : public stMagicUserCmd$/;"	s
stSecondToReliveGatherPoint	tmpcode/commond.h	/^        stSecondToReliveGatherPoint()$/;"	f	struct:stSecondToReliveGatherPoint
stSecondToReliveGatherPoint	tmpcode/commond.h	/^struct stSecondToReliveGatherPoint : public stDataUserCmd$/;"	s
stSecondsToRecoverFromDyingCmd	tmpcode/commond.h	/^	stSecondsToRecoverFromDyingCmd()$/;"	f	struct:stSecondsToRecoverFromDyingCmd
stSecondsToRecoverFromDyingCmd	tmpcode/commond.h	/^struct stSecondsToRecoverFromDyingCmd : public stDataUserCmd$/;"	s
stSelectCountryUserCmd	base/Command.h	/^	stSelectCountryUserCmd()$/;"	f	struct:Cmd::stSelectCountryUserCmd
stSelectCountryUserCmd	base/Command.h	/^struct stSelectCountryUserCmd : public stLogonUserCmd$/;"	s	namespace:Cmd
stSelectGuildManteauUserCmd	tmpcode/commond.h	/^	stSelectGuildManteauUserCmd()$/;"	f	struct:stSelectGuildManteauUserCmd
stSelectGuildManteauUserCmd	tmpcode/commond.h	/^struct stSelectGuildManteauUserCmd : public stPropertyUserCmd$/;"	s
stSelectMainUserPropertyUserCmd	base/Command.h	/^  stSelectMainUserPropertyUserCmd()$/;"	f	struct:Cmd::stSelectMainUserPropertyUserCmd
stSelectMainUserPropertyUserCmd	base/Command.h	/^struct stSelectMainUserPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stSelectMainUserPropertyUserCmd	tmpcode/commond.h	/^	stSelectMainUserPropertyUserCmd()$/;"	f	struct:stSelectMainUserPropertyUserCmd
stSelectMainUserPropertyUserCmd	tmpcode/commond.h	/^struct stSelectMainUserPropertyUserCmd : public stPropertyUserCmd$/;"	s
stSelectPropertyUserCmd	base/Command.h	/^  stSelectPropertyUserCmd()$/;"	f	struct:Cmd::stSelectPropertyUserCmd
stSelectPropertyUserCmd	base/Command.h	/^struct stSelectPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stSelectPropertyUserCmd	tmpcode/commond.h	/^	stSelectPropertyUserCmd()$/;"	f	struct:stSelectPropertyUserCmd
stSelectPropertyUserCmd	tmpcode/commond.h	/^struct stSelectPropertyUserCmd : public stPropertyUserCmd$/;"	s
stSelectReturnHorsePropertyUserCmd	base/Command.h	/^  stSelectReturnHorsePropertyUserCmd()$/;"	f	struct:Cmd::stSelectReturnHorsePropertyUserCmd
stSelectReturnHorsePropertyUserCmd	base/Command.h	/^struct stSelectReturnHorsePropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stSelectReturnHorsePropertyUserCmd	tmpcode/commond.h	/^    stSelectReturnHorsePropertyUserCmd()                                            $/;"	f	struct:stSelectReturnHorsePropertyUserCmd
stSelectReturnHorsePropertyUserCmd	tmpcode/commond.h	/^struct stSelectReturnHorsePropertyUserCmd : public stPropertyUserCmd                    $/;"	s
stSelectReturnMainUserPropertyUserCmd	base/Command.h	/^  stSelectReturnMainUserPropertyUserCmd()$/;"	f	struct:Cmd::stSelectReturnMainUserPropertyUserCmd
stSelectReturnMainUserPropertyUserCmd	base/Command.h	/^struct stSelectReturnMainUserPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stSelectReturnMainUserPropertyUserCmd	tmpcode/commond.h	/^	stSelectReturnMainUserPropertyUserCmd()$/;"	f	struct:stSelectReturnMainUserPropertyUserCmd
stSelectReturnMainUserPropertyUserCmd	tmpcode/commond.h	/^struct stSelectReturnMainUserPropertyUserCmd : public stPropertyUserCmd$/;"	s
stSelectReturnStatesPropertyUserCmd	base/Command.h	/^  stSelectReturnStatesPropertyUserCmd()$/;"	f	struct:Cmd::stSelectReturnStatesPropertyUserCmd
stSelectReturnStatesPropertyUserCmd	base/Command.h	/^struct stSelectReturnStatesPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stSelectReturnStatesPropertyUserCmd	tmpcode/commond.h	/^	stSelectReturnStatesPropertyUserCmd()$/;"	f	struct:stSelectReturnStatesPropertyUserCmd
stSelectReturnStatesPropertyUserCmd	tmpcode/commond.h	/^struct stSelectReturnStatesPropertyUserCmd : public stPropertyUserCmd$/;"	s
stSelectTransLevelUserCmd	base/Command.h	/^  stSelectTransLevelUserCmd()$/;"	f	struct:Cmd::stSelectTransLevelUserCmd
stSelectTransLevelUserCmd	base/Command.h	/^struct stSelectTransLevelUserCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stSelectUserCmd	base/Command.h	/^  stSelectUserCmd()$/;"	f	struct:Cmd::stSelectUserCmd
stSelectUserCmd	base/Command.h	/^struct stSelectUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stSelectUserCmd	tmpcode/commond.h	/^        stSelectUserCmd()$/;"	f	struct:stSelectUserCmd
stSelectUserCmd	tmpcode/commond.h	/^struct stSelectUserCmd : public stNullUserCmd$/;"	s
stSelfDecayLingQiUserCmd	tmpcode/commond.h	/^	stSelfDecayLingQiUserCmd()$/;"	f	struct:stSelfDecayLingQiUserCmd
stSelfDecayLingQiUserCmd	tmpcode/commond.h	/^struct stSelfDecayLingQiUserCmd : public stLingQiDecayUserCmd$/;"	s
stSelfHistoryGoldStockUserCmd	base/Command.h	/^  stSelfHistoryGoldStockUserCmd() $/;"	f	struct:Cmd::stSelfHistoryGoldStockUserCmd
stSelfHistoryGoldStockUserCmd	base/Command.h	/^struct stSelfHistoryGoldStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stSelfHistoryGoldStockUserCmd	tmpcode/commond.h	/^	stSelfHistoryGoldStockUserCmd()$/;"	f	struct:stSelfHistoryGoldStockUserCmd
stSelfHistoryGoldStockUserCmd	tmpcode/commond.h	/^struct stSelfHistoryGoldStockUserCmd : public stStockBillUserCmd$/;"	s
stSelfHistoryMoneyStockUserCmd	base/Command.h	/^  stSelfHistoryMoneyStockUserCmd() $/;"	f	struct:Cmd::stSelfHistoryMoneyStockUserCmd
stSelfHistoryMoneyStockUserCmd	base/Command.h	/^struct stSelfHistoryMoneyStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stSelfHistoryMoneyStockUserCmd	tmpcode/commond.h	/^	stSelfHistoryMoneyStockUserCmd()$/;"	f	struct:stSelfHistoryMoneyStockUserCmd
stSelfHistoryMoneyStockUserCmd	tmpcode/commond.h	/^struct stSelfHistoryMoneyStockUserCmd : public stStockBillUserCmd$/;"	s
stSellAllCartoonCmd	base/Command.h	/^  stSellAllCartoonCmd()$/;"	f	struct:Cmd::stSellAllCartoonCmd
stSellAllCartoonCmd	base/Command.h	/^struct stSellAllCartoonCmd : public stCartoonUserCmd$/;"	s	namespace:Cmd
stSellHorseNpcTradeUserCmd	base/Command.h	/^  stSellHorseNpcTradeUserCmd()$/;"	f	struct:Cmd::stSellHorseNpcTradeUserCmd
stSellHorseNpcTradeUserCmd	base/Command.h	/^struct stSellHorseNpcTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stSellObjListNpcTradeUserCmd	tmpcode/commond.h	/^	stSellObjListNpcTradeUserCmd()$/;"	f	struct:stSellObjListNpcTradeUserCmd
stSellObjListNpcTradeUserCmd	tmpcode/commond.h	/^struct stSellObjListNpcTradeUserCmd : public stTradeUserCmd$/;"	s
stSellObjectNpcTradeUserCmd	base/Command.h	/^  stSellObjectNpcTradeUserCmd()$/;"	f	struct:Cmd::stSellObjectNpcTradeUserCmd
stSellObjectNpcTradeUserCmd	base/Command.h	/^struct stSellObjectNpcTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stSellObjectNpcTradeUserCmd	tmpcode/commond.h	/^	stSellObjectNpcTradeUserCmd()$/;"	f	struct:stSellObjectNpcTradeUserCmd
stSellObjectNpcTradeUserCmd	tmpcode/commond.h	/^struct stSellObjectNpcTradeUserCmd:public stTradeUserCmd$/;"	s
stSellTradeUserCmd	base/Command.h	/^  stSellTradeUserCmd()$/;"	f	struct:Cmd::stSellTradeUserCmd
stSellTradeUserCmd	base/Command.h	/^struct stSellTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stSellTradeUserCmd	tmpcode/commond.h	/^	stSellTradeUserCmd()$/;"	f	struct:stSellTradeUserCmd
stSellTradeUserCmd	tmpcode/commond.h	/^struct stSellTradeUserCmd:public stTradeUserCmd$/;"	s
stSendActivityStateUserCmd	tmpcode/commond.h	/^        stSendActivityStateUserCmd()$/;"	f	struct:stSendActivityStateUserCmd
stSendActivityStateUserCmd	tmpcode/commond.h	/^struct stSendActivityStateUserCmd : public stTimerUserCmd$/;"	s
stSendAllAchivementAwardInfoUserCmd	tmpcode/commond.h	/^	stSendAllAchivementAwardInfoUserCmd()$/;"	f	struct:stSendAllAchivementAwardInfoUserCmd
stSendAllAchivementAwardInfoUserCmd	tmpcode/commond.h	/^struct stSendAllAchivementAwardInfoUserCmd : public stDataUserCmd$/;"	s
stSendAllLingQiSkillsUserCmd	tmpcode/commond.h	/^    stSendAllLingQiSkillsUserCmd()$/;"	f	struct:stSendAllLingQiSkillsUserCmd
stSendAllLingQiSkillsUserCmd	tmpcode/commond.h	/^struct stSendAllLingQiSkillsUserCmd : public stLingQiUserCmd$/;"	s
stSendAllScoreCmd	tmpcode/commond.h	/^    stSendAllScoreCmd()$/;"	f	struct:stSendAllScoreCmd
stSendAllScoreCmd	tmpcode/commond.h	/^struct stSendAllScoreCmd : public stLuoRiXiaGuUserCmd$/;"	s
stSendBrightIconDataUserCmd	tmpcode/commond.h	/^        stSendBrightIconDataUserCmd()$/;"	f	struct:stSendBrightIconDataUserCmd
stSendBrightIconDataUserCmd	tmpcode/commond.h	/^struct stSendBrightIconDataUserCmd : public stDataUserCmd$/;"	s
stSendBuildingPotentialSkillUserCmd	tmpcode/commond.h	/^        stSendBuildingPotentialSkillUserCmd()$/;"	f	struct:stSendBuildingPotentialSkillUserCmd
stSendBuildingPotentialSkillUserCmd	tmpcode/commond.h	/^struct stSendBuildingPotentialSkillUserCmd : public stPropertyUserCmd $/;"	s
stSendCanLearnFakeSkillLingQiUserCmd	tmpcode/commond.h	/^    stSendCanLearnFakeSkillLingQiUserCmd()$/;"	f	struct:stSendCanLearnFakeSkillLingQiUserCmd
stSendCanLearnFakeSkillLingQiUserCmd	tmpcode/commond.h	/^struct stSendCanLearnFakeSkillLingQiUserCmd : public stLingQiUserCmd$/;"	s
stSendChangeFaceNPCMagicUserCmd	tmpcode/commond.h	/^	stSendChangeFaceNPCMagicUserCmd()$/;"	f	struct:stSendChangeFaceNPCMagicUserCmd
stSendChangeFaceNPCMagicUserCmd	tmpcode/commond.h	/^struct stSendChangeFaceNPCMagicUserCmd:public stMagicUserCmd$/;"	s
stSendCountryGuradTime	tmpcode/commond.h	/^    stSendCountryGuradTime()$/;"	f	struct:stSendCountryGuradTime
stSendCountryGuradTime	tmpcode/commond.h	/^struct stSendCountryGuradTime : stEarthQuakeUserCmd$/;"	s
stSendCountryInviteQuestRoomUserCmd	tmpcode/commond.h	/^	stSendCountryInviteQuestRoomUserCmd(): roomID(0), questID(0), minLevel(0), maxLevel(0), bPassw(0), fromCountryID(0), toCountryID(0)$/;"	f	struct:stSendCountryInviteQuestRoomUserCmd
stSendCountryInviteQuestRoomUserCmd	tmpcode/commond.h	/^struct stSendCountryInviteQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stSendCountryListMercenaryCountryCmd	tmpcode/commond.h	/^        stSendCountryListMercenaryCountryCmd()$/;"	f	struct:stSendCountryListMercenaryCountryCmd
stSendCountryListMercenaryCountryCmd	tmpcode/commond.h	/^struct stSendCountryListMercenaryCountryCmd:public stCountryUserCmd$/;"	s
stSendCrystalFlowerUserCmd	tmpcode/commond.h	/^	stSendCrystalFlowerUserCmd()$/;"	f	struct:stSendCrystalFlowerUserCmd
stSendCrystalFlowerUserCmd	tmpcode/commond.h	/^struct stSendCrystalFlowerUserCmd : public stPropertyUserCmd$/;"	s
stSendDailyBoxAwardResultUserCmd	tmpcode/commond.h	/^	stSendDailyBoxAwardResultUserCmd()$/;"	f	struct:stSendDailyBoxAwardResultUserCmd
stSendDailyBoxAwardResultUserCmd	tmpcode/commond.h	/^struct stSendDailyBoxAwardResultUserCmd : public stDataUserCmd$/;"	s
stSendDareList	base/Command.h	/^  stSendDareList()$/;"	f	struct:Cmd::stSendDareList
stSendDareList	base/Command.h	/^struct stSendDareList : public stDareUserCmd$/;"	s	namespace:Cmd
stSendDataFlySkillMagicUserCmd	tmpcode/commond.h	/^	stSendDataFlySkillMagicUserCmd()$/;"	f	struct:stSendDataFlySkillMagicUserCmd
stSendDataFlySkillMagicUserCmd	tmpcode/commond.h	/^struct stSendDataFlySkillMagicUserCmd : public stMagicUserCmd$/;"	s
stSendDrunkStateBigfireUserCmd	tmpcode/commond.h	/^	stSendDrunkStateBigfireUserCmd(): stateLeftTime(0)$/;"	f	struct:stSendDrunkStateBigfireUserCmd
stSendDrunkStateBigfireUserCmd	tmpcode/commond.h	/^struct stSendDrunkStateBigfireUserCmd: public stGouhuoUserCmd$/;"	s
stSendDrunkStateGouhuoUserCmd	tmpcode/commond.h	/^	stSendDrunkStateGouhuoUserCmd(): byType(0), gouhuoType(0), drinkSize(0), paraExp(0), stateLeftTime$/;"	f	struct:stSendDrunkStateGouhuoUserCmd
stSendDrunkStateGouhuoUserCmd	tmpcode/commond.h	/^struct stSendDrunkStateGouhuoUserCmd: public stGouhuoUserCmd$/;"	s
stSendFarmNoticeUserCmd	tmpcode/commond.h	/^	stSendFarmNoticeUserCmd()$/;"	f	struct:stSendFarmNoticeUserCmd
stSendFarmNoticeUserCmd	tmpcode/commond.h	/^struct stSendFarmNoticeUserCmd : public stUnionPlantUserCmd$/;"	s
stSendFeteStateUserCmd	tmpcode/commond.h	/^	stSendFeteStateUserCmd(): stateLeftTime(0)$/;"	f	struct:stSendFeteStateUserCmd
stSendFeteStateUserCmd	tmpcode/commond.h	/^struct stSendFeteStateUserCmd: public stGouhuoUserCmd$/;"	s
stSendFlagInfoUserCmd	tmpcode/commond.h	/^	stSendFlagInfoUserCmd(): userCountryID(0)$/;"	f	struct:stSendFlagInfoUserCmd
stSendFlagInfoUserCmd	tmpcode/commond.h	/^struct stSendFlagInfoUserCmd: public stZYZUserCmd$/;"	s
stSendFlowerEffectNineCmd	tmpcode/commond.h	/^	stSendFlowerEffectNineCmd()$/;"	f	struct:stSendFlowerEffectNineCmd
stSendFlowerEffectNineCmd	tmpcode/commond.h	/^struct stSendFlowerEffectNineCmd : public stDataUserCmd$/;"	s
stSendForceLockUserMagicUserCmd	tmpcode/commond.h	/^	stSendForceLockUserMagicUserCmd()$/;"	f	struct:stSendForceLockUserMagicUserCmd
stSendForceLockUserMagicUserCmd	tmpcode/commond.h	/^struct stSendForceLockUserMagicUserCmd:public stMagicUserCmd$/;"	s
stSendFriendFlowerCmd	tmpcode/commond.h	/^	stSendFriendFlowerCmd()$/;"	f	struct:stSendFriendFlowerCmd
stSendFriendFlowerCmd	tmpcode/commond.h	/^struct stSendFriendFlowerCmd : public stDataUserCmd$/;"	s
stSendFriendListUserCmd	tmpcode/commond.h	/^        stSendFriendListUserCmd()$/;"	f	struct:stSendFriendListUserCmd
stSendFriendListUserCmd	tmpcode/commond.h	/^struct stSendFriendListUserCmd : public stPropertyUserCmd$/;"	s
stSendHomeListUserCmd	tmpcode/commond.h	/^	stSendHomeListUserCmd()$/;"	f	struct:stSendHomeListUserCmd
stSendHomeListUserCmd	tmpcode/commond.h	/^struct stSendHomeListUserCmd : public stHomeUserCmd$/;"	s
stSendHonorZhanGong	tmpcode/commond.h	/^	stSendHonorZhanGong()$/;"	f	struct:stSendHonorZhanGong
stSendHonorZhanGong	tmpcode/commond.h	/^struct stSendHonorZhanGong : public stChatUserCmd$/;"	s
stSendInfoUserCmd	tmpcode/commond.h	/^	stSendInfoUserCmd(): leftTime(0),mapID(0),bBind(1)$/;"	f	struct:stSendInfoUserCmd
stSendInfoUserCmd	tmpcode/commond.h	/^struct stSendInfoUserCmd: public stYueMoUserCmd$/;"	s
stSendLeftTimeAuction	tmpcode/commond.h	/^        stSendLeftTimeAuction()$/;"	f	struct:stSendLeftTimeAuction
stSendLeftTimeAuction	tmpcode/commond.h	/^struct stSendLeftTimeAuction : public stAuctionUserCmd$/;"	s
stSendLevelUpBoxAwardResultUserCmd	tmpcode/commond.h	/^	stSendLevelUpBoxAwardResultUserCmd()$/;"	f	struct:stSendLevelUpBoxAwardResultUserCmd
stSendLevelUpBoxAwardResultUserCmd	tmpcode/commond.h	/^struct stSendLevelUpBoxAwardResultUserCmd : public stDataUserCmd$/;"	s
stSendLoverRelationCmd	tmpcode/commond.h	/^	stSendLoverRelationCmd()$/;"	f	struct:stSendLoverRelationCmd
stSendLoverRelationCmd	tmpcode/commond.h	/^struct stSendLoverRelationCmd : public stRelationUserCmd$/;"	s
stSendMail	base/Command.h	/^  stSendMail() $/;"	f	struct:Cmd::stSendMail
stSendMail	base/Command.h	/^struct stSendMail : public stMailUserCmd$/;"	s	namespace:Cmd
stSendMail	tmpcode/commond.h	/^    stSendMail()$/;"	f	struct:stSendMail
stSendMail	tmpcode/commond.h	/^struct stSendMail : public stMailUserCmd$/;"	s
stSendMailImage	tmpcode/commond.h	/^        stSendMailImage()$/;"	f	struct:stSendMailImage
stSendMailImage	tmpcode/commond.h	/^struct stSendMailImage : public stMailUserCmd$/;"	s
stSendMercenaryListCountryCmd	tmpcode/commond.h	/^        stSendMercenaryListCountryCmd()$/;"	f	struct:stSendMercenaryListCountryCmd
stSendMercenaryListCountryCmd	tmpcode/commond.h	/^struct stSendMercenaryListCountryCmd:public stCountryUserCmd$/;"	s
stSendMerchAdvertInfo	tmpcode/commond.h	/^        stSendMerchAdvertInfo()$/;"	f	struct:stSendMerchAdvertInfo
stSendMerchAdvertInfo	tmpcode/commond.h	/^struct stSendMerchAdvertInfo : public stUnionUserCmd$/;"	s
stSendMutualGiftUserCmd	tmpcode/commond.h	/^        stSendMutualGiftUserCmd()$/;"	f	struct:stSendMutualGiftUserCmd
stSendMutualGiftUserCmd	tmpcode/commond.h	/^struct stSendMutualGiftUserCmd : public stPropertyUserCmd$/;"	s
stSendObjNewBoxPropertyUserCmd	tmpcode/commond.h	/^	stSendObjNewBoxPropertyUserCmd()$/;"	f	struct:stSendObjNewBoxPropertyUserCmd
stSendObjNewBoxPropertyUserCmd	tmpcode/commond.h	/^struct stSendObjNewBoxPropertyUserCmd : public stPropertyUserCmd$/;"	s
stSendOneAchivementAwardInfoUserCmd	tmpcode/commond.h	/^	stSendOneAchivementAwardInfoUserCmd()$/;"	f	struct:stSendOneAchivementAwardInfoUserCmd
stSendOneAchivementAwardInfoUserCmd	tmpcode/commond.h	/^struct stSendOneAchivementAwardInfoUserCmd : public stDataUserCmd$/;"	s
stSendOneLevelEquipAwardInfoUserCmd	tmpcode/commond.h	/^	stSendOneLevelEquipAwardInfoUserCmd()$/;"	f	struct:stSendOneLevelEquipAwardInfoUserCmd
stSendOneLevelEquipAwardInfoUserCmd	tmpcode/commond.h	/^struct stSendOneLevelEquipAwardInfoUserCmd : public stDataUserCmd$/;"	s
stSendQuestionGm	tmpcode/commond.h	/^	stSendQuestionGm()$/;"	f	struct:stSendQuestionGm
stSendQuestionGm	tmpcode/commond.h	/^struct stSendQuestionGm : public stChatUserCmd$/;"	s
stSendRelationListCmd	base/Command.h	/^  stSendRelationListCmd()$/;"	f	struct:Cmd::stSendRelationListCmd
stSendRelationListCmd	base/Command.h	/^struct stSendRelationListCmd : public stRelationUserCmd$/;"	s	namespace:Cmd
stSendReplayMerceryListCountryCmd	tmpcode/commond.h	/^        stSendReplayMerceryListCountryCmd()$/;"	f	struct:stSendReplayMerceryListCountryCmd
stSendReplayMerceryListCountryCmd	tmpcode/commond.h	/^struct stSendReplayMerceryListCountryCmd:public stCountryUserCmd$/;"	s
stSendResultListLuoRiCmd	tmpcode/commond.h	/^        stSendResultListLuoRiCmd()$/;"	f	struct:stSendResultListLuoRiCmd
stSendResultListLuoRiCmd	tmpcode/commond.h	/^struct stSendResultListLuoRiCmd: public stLuoRiXiaGuUserCmd$/;"	s
stSendResultNewBoxPropertyUserCmd	tmpcode/commond.h	/^	stSendResultNewBoxPropertyUserCmd()$/;"	f	struct:stSendResultNewBoxPropertyUserCmd
stSendResultNewBoxPropertyUserCmd	tmpcode/commond.h	/^struct stSendResultNewBoxPropertyUserCmd : public stPropertyUserCmd$/;"	s
stSendScoreSeptPopoUserCmd	tmpcode/commond.h	/^	stSendScoreSeptPopoUserCmd()$/;"	f	struct:stSendScoreSeptPopoUserCmd
stSendScoreSeptPopoUserCmd	tmpcode/commond.h	/^struct stSendScoreSeptPopoUserCmd : public stSeptPopoUserCmd$/;"	s
stSendSeptAdCmd	tmpcode/commond.h	/^	stSendSeptAdCmd()$/;"	f	struct:stSendSeptAdCmd
stSendSeptAdCmd	tmpcode/commond.h	/^struct stSendSeptAdCmd : public stCountryUserCmd$/;"	s
stSendSeptStoreDataCmd	tmpcode/commond.h	/^	stSendSeptStoreDataCmd()$/;"	f	struct:stSendSeptStoreDataCmd
stSendSeptStoreDataCmd	tmpcode/commond.h	/^struct stSendSeptStoreDataCmd : public stSeptUserCmd$/;"	s
stSendShuDuPara	tmpcode/commond.h	/^	stSendShuDuPara()$/;"	f	struct:stSendShuDuPara
stSendShuDuPara	tmpcode/commond.h	/^struct stSendShuDuPara :public stShuDuUserCmd\/\/add_for_kok_xutao_08.12.13$/;"	s
stSendSkillIdTwilightCityUserCmd	tmpcode/commond.h	/^	stSendSkillIdTwilightCityUserCmd(): skillID(0)$/;"	f	struct:stSendSkillIdTwilightCityUserCmd
stSendSkillIdTwilightCityUserCmd	tmpcode/commond.h	/^struct stSendSkillIdTwilightCityUserCmd: public stQuestMapUserCmd$/;"	s
stSendUnderAttack	tmpcode/commond.h	/^    stSendUnderAttack()$/;"	f	struct:stSendUnderAttack
stSendUnderAttack	tmpcode/commond.h	/^struct stSendUnderAttack : public stSeptUserCmd$/;"	s
stSendUseFlySkillMagicUserCmd	tmpcode/commond.h	/^	stSendUseFlySkillMagicUserCmd()$/;"	f	struct:stSendUseFlySkillMagicUserCmd
stSendUseFlySkillMagicUserCmd	tmpcode/commond.h	/^struct stSendUseFlySkillMagicUserCmd: public stMagicUserCmd$/;"	s
stSendUserInfoNewCmd	tmpcode/commond.h	/^	stSendUserInfoNewCmd()$/;"	f	struct:stSendUserInfoNewCmd
stSendUserInfoNewCmd	tmpcode/commond.h	/^struct stSendUserInfoNewCmd : public stSoundUserCmd$/;"	s
stSendUserPartUserCmd	tmpcode/commond.h	/^        stSendUserPartUserCmd()$/;"	f	struct:stSendUserPartUserCmd
stSendUserPartUserCmd	tmpcode/commond.h	/^struct stSendUserPartUserCmd : public stLuoRiXiaGuUserCmd$/;"	s
stSendUserScoreSeptPopoUserCmd	tmpcode/commond.h	/^	stSendUserScoreSeptPopoUserCmd()$/;"	f	struct:stSendUserScoreSeptPopoUserCmd
stSendUserScoreSeptPopoUserCmd	tmpcode/commond.h	/^struct stSendUserScoreSeptPopoUserCmd : public stSeptPopoUserCmd$/;"	s
stSendWenMingNCInfoUserCmd	tmpcode/commond.h	/^	stSendWenMingNCInfoUserCmd(): leftTime(0)$/;"	f	struct:stSendWenMingNCInfoUserCmd
stSendWenMingNCInfoUserCmd	tmpcode/commond.h	/^struct stSendWenMingNCInfoUserCmd: public stWenMingNCUserCmd$/;"	s
stSeptBaseInfoCmd	base/Command.h	/^  stSeptBaseInfoCmd()$/;"	f	struct:Cmd::stSeptBaseInfoCmd
stSeptBaseInfoCmd	base/Command.h	/^struct stSeptBaseInfoCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stSeptBaseInfoCmd	tmpcode/commond.h	/^	stSeptBaseInfoCmd()$/;"	f	struct:stSeptBaseInfoCmd
stSeptBaseInfoCmd	tmpcode/commond.h	/^struct stSeptBaseInfoCmd : public stSeptUserCmd$/;"	s
stSeptBattleUserCmd	tmpcode/commond.h	/^	stSeptBattleUserCmd()$/;"	f	struct:stSeptBattleUserCmd
stSeptBattleUserCmd	tmpcode/commond.h	/^struct stSeptBattleUserCmd : public stNullUserCmd$/;"	s
stSeptCompeteUserCmd	tmpcode/commond.h	/^	stSeptCompeteUserCmd()$/;"	f	struct:stSeptCompeteUserCmd
stSeptCompeteUserCmd	tmpcode/commond.h	/^struct stSeptCompeteUserCmd : public stNullUserCmd$/;"	s
stSeptDefenseCmd	tmpcode/commond.h	/^	stSeptDefenseCmd()$/;"	f	struct:stSeptDefenseCmd
stSeptDefenseCmd	tmpcode/commond.h	/^struct stSeptDefenseCmd : public stNullUserCmd$/;"	s
stSeptGatherCmd	tmpcode/commond.h	/^	stSeptGatherCmd()$/;"	f	struct:stSeptGatherCmd
stSeptGatherCmd	tmpcode/commond.h	/^struct stSeptGatherCmd: public stSeptUserCmd$/;"	s
stSeptGuardVisitSeptCmd	tmpcode/commond.h	/^	stSeptGuardVisitSeptCmd()               $/;"	f	struct:stSeptGuardVisitSeptCmd
stSeptGuardVisitSeptCmd	tmpcode/commond.h	/^struct stSeptGuardVisitSeptCmd: public stSeptUserCmd$/;"	s
stSeptInfo	base/Sept.h	/^struct stSeptInfo                      \/\/  ˝æ›ø‚∂¡»°Ω·ππ£¨«Î≤ª“™ÀÊ“‚–ﬁ∏ƒ£¨–ﬁ∏ƒ◊¢“‚∏¸–¬À˘”–¥˙¬Î$/;"	s	namespace:SeptDef
stSeptMemberInfo	base/Sept.h	/^struct stSeptMemberInfo                      \/\/  ˝æ›ø‚∂¡»°Ω·ππ£¨«Î≤ª“™ÀÊ“‚–ﬁ∏ƒ£¨–ﬁ∏ƒ◊¢“‚∏¸–¬À˘”–¥˙¬Î$/;"	s	namespace:SeptDef
stSeptMemberLeaveSeptCmd	base/Command.h	/^  stSeptMemberLeaveSeptCmd()$/;"	f	struct:Cmd::stSeptMemberLeaveSeptCmd
stSeptMemberLeaveSeptCmd	base/Command.h	/^struct stSeptMemberLeaveSeptCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stSeptMemberLeaveSeptCmd	tmpcode/commond.h	/^	stSeptMemberLeaveSeptCmd()$/;"	f	struct:stSeptMemberLeaveSeptCmd
stSeptMemberLeaveSeptCmd	tmpcode/commond.h	/^struct stSeptMemberLeaveSeptCmd : public stSeptUserCmd$/;"	s
stSeptPlaceSet	tmpcode/commond.h	/^	stSeptPlaceSet()$/;"	f	struct:stSeptPlaceSet
stSeptPlaceSet	tmpcode/commond.h	/^struct stSeptPlaceSet : public stSeptUserCmd$/;"	s
stSeptPopoUserCmd	tmpcode/commond.h	/^	stSeptPopoUserCmd()$/;"	f	struct:stSeptPopoUserCmd
stSeptPopoUserCmd	tmpcode/commond.h	/^struct stSeptPopoUserCmd : public stNullUserCmd$/;"	s
stSeptPositionSet	tmpcode/commond.h	/^	stSeptPositionSet()$/;"	f	struct:stSeptPositionSet
stSeptPositionSet	tmpcode/commond.h	/^struct stSeptPositionSet : public stSeptUserCmd$/;"	s
stSeptPracResultChallengeUserCmd	tmpcode/commond.h	/^	stSeptPracResultChallengeUserCmd()$/;"	f	struct:stSeptPracResultChallengeUserCmd
stSeptPracResultChallengeUserCmd	tmpcode/commond.h	/^struct stSeptPracResultChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stSeptPrepareTimeChallengeUserCmd	tmpcode/commond.h	/^	stSeptPrepareTimeChallengeUserCmd()$/;"	f	struct:stSeptPrepareTimeChallengeUserCmd
stSeptPrepareTimeChallengeUserCmd	tmpcode/commond.h	/^struct stSeptPrepareTimeChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stSeptRecord	base/Command.h	/^struct stSeptRecord{$/;"	s	namespace:Cmd
stSeptRember	base/Command.h	/^struct stSeptRember{$/;"	s	namespace:Cmd
stSeptRember	tmpcode/commond.h	/^struct stSeptRember{$/;"	s
stSeptScoreSCUserCmd	tmpcode/commond.h	/^	stSeptScoreSCUserCmd()$/;"	f	struct:stSeptScoreSCUserCmd
stSeptScoreSCUserCmd	tmpcode/commond.h	/^struct stSeptScoreSCUserCmd : public stSeptCompeteUserCmd$/;"	s
stSeptSkillList	tmpcode/commond.h	/^	stSeptSkillList() : stUnionSkillUserCmd(SEPTSKILL_LIST_USERCMD) {};$/;"	f	struct:stSeptSkillList
stSeptSkillList	tmpcode/commond.h	/^struct stSeptSkillList : public stUnionSkillUserCmd {$/;"	s
stSeptSortInfo	base/Command.h	/^struct stSeptSortInfo$/;"	s	namespace:Cmd
stSeptSortInfo	tmpcode/commond.h	/^struct stSeptSortInfo$/;"	s
stSeptStatusCheckCmd	base/Command.h	/^  stSeptStatusCheckCmd()$/;"	f	struct:Cmd::stSeptStatusCheckCmd
stSeptStatusCheckCmd	base/Command.h	/^struct stSeptStatusCheckCmd  : public stSeptUserCmd$/;"	s	namespace:Cmd
stSeptUserCmd	base/Command.h	/^  stSeptUserCmd()$/;"	f	struct:Cmd::stSeptUserCmd
stSeptUserCmd	base/Command.h	/^struct stSeptUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stSeptUserCmd	tmpcode/commond.h	/^	stSeptUserCmd()$/;"	f	struct:stSeptUserCmd
stSeptUserCmd	tmpcode/commond.h	/^struct stSeptUserCmd : public stNullUserCmd$/;"	s
stSeptVoteRecord	base/Command.h	/^struct stSeptVoteRecord{$/;"	s	namespace:Cmd
stSeqKillWeekendZhenxuanUserCmd	tmpcode/commond.h	/^	stSeqKillWeekendZhenxuanUserCmd()$/;"	f	struct:stSeqKillWeekendZhenxuanUserCmd
stSeqKillWeekendZhenxuanUserCmd	tmpcode/commond.h	/^struct stSeqKillWeekendZhenxuanUserCmd: public stZhenxuanJingjiUserCmd$/;"	s
stServerChannelChatUserCmd	base/Command.h	/^  stServerChannelChatUserCmd()$/;"	f	struct:Cmd::stServerChannelChatUserCmd
stServerChannelChatUserCmd	base/Command.h	/^struct  stServerChannelChatUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stServerKOKOption	tmpcode/commond.h	/^        stServerKOKOption()$/;"	f	struct:stServerKOKOption
stServerKOKOption	tmpcode/commond.h	/^struct stServerKOKOption:public stDataUserCmd$/;"	s
stServerReturnLoginFailedCmd	base/Command.h	/^  stServerReturnLoginFailedCmd()$/;"	f	struct:Cmd::stServerReturnLoginFailedCmd
stServerReturnLoginFailedCmd	base/Command.h	/^struct stServerReturnLoginFailedCmd : public stLogonUserCmd$/;"	s	namespace:Cmd
stServerReturnLoginFailedCmd	tmpcode/commond.h	/^	stServerReturnLoginFailedCmd()$/;"	f	struct:stServerReturnLoginFailedCmd
stServerReturnLoginFailedCmd	tmpcode/commond.h	/^struct stServerReturnLoginFailedCmd : public stLogonUserCmd$/;"	s
stServerReturnLoginSuccessCmd	base/Command.h	/^  stServerReturnLoginSuccessCmd()$/;"	f	struct:Cmd::stServerReturnLoginSuccessCmd
stServerReturnLoginSuccessCmd	base/Command.h	/^struct stServerReturnLoginSuccessCmd : public stLogonUserCmd $/;"	s	namespace:Cmd
stServerReturnLoginSuccessCmd	tmpcode/commond.h	/^	stServerReturnLoginSuccessCmd()$/;"	f	struct:stServerReturnLoginSuccessCmd
stServerReturnLoginSuccessCmd	tmpcode/commond.h	/^struct stServerReturnLoginSuccessCmd : public stLogonUserCmd $/;"	s
stServerReturnSeptCheckCmd	base/Command.h	/^  stServerReturnSeptCheckCmd()$/;"	f	struct:Cmd::stServerReturnSeptCheckCmd
stServerReturnSeptCheckCmd	base/Command.h	/^struct stServerReturnSeptCheckCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stServerReturnSeptCheckCmd	tmpcode/commond.h	/^	stServerReturnSeptCheckCmd()$/;"	f	struct:stServerReturnSeptCheckCmd
stServerReturnSeptCheckCmd	tmpcode/commond.h	/^struct stServerReturnSeptCheckCmd : public stSeptUserCmd$/;"	s
stServerReturnUnionCheckCmd	base/Command.h	/^  stServerReturnUnionCheckCmd()$/;"	f	struct:Cmd::stServerReturnUnionCheckCmd
stServerReturnUnionCheckCmd	base/Command.h	/^struct stServerReturnUnionCheckCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stServerReturnUnionCheckCmd	tmpcode/commond.h	/^	stServerReturnUnionCheckCmd()$/;"	f	struct:stServerReturnUnionCheckCmd
stServerReturnUnionCheckCmd	tmpcode/commond.h	/^struct stServerReturnUnionCheckCmd : public stUnionUserCmd$/;"	s
stSetAIPetCmd	base/Command.h	/^  stSetAIPetCmd()$/;"	f	struct:Cmd::stSetAIPetCmd
stSetAIPetCmd	base/Command.h	/^struct stSetAIPetCmd : public stPetUserCmd$/;"	s	namespace:Cmd
stSetAIPetCmd	tmpcode/commond.h	/^	stSetAIPetCmd()         $/;"	f	struct:stSetAIPetCmd
stSetAIPetCmd	tmpcode/commond.h	/^struct stSetAIPetCmd : public stPetUserCmd$/;"	s
stSetChatDragonUserCmd	tmpcode/commond.h	/^	stSetChatDragonUserCmd()$/;"	f	struct:stSetChatDragonUserCmd
stSetChatDragonUserCmd	tmpcode/commond.h	/^struct stSetChatDragonUserCmd : public stDragonUserCmd$/;"	s
stSetCityDareThirdLevel	tmpcode/commond.h	/^	stSetCityDareThirdLevel()$/;"	f	struct:stSetCityDareThirdLevel
stSetCityDareThirdLevel	tmpcode/commond.h	/^struct stSetCityDareThirdLevel: public stUnionUserCmd$/;"	s
stSetCityGuardCmd	tmpcode/commond.h	/^	stSetCityGuardCmd()$/;"	f	struct:stSetCityGuardCmd
stSetCityGuardCmd	tmpcode/commond.h	/^struct stSetCityGuardCmd : public stCityUserCmd$/;"	s
stSetCountryDareUserCmd	base/Command.h	/^  stSetCountryDareUserCmd()$/;"	f	struct:Cmd::stSetCountryDareUserCmd
stSetCountryDareUserCmd	base/Command.h	/^struct stSetCountryDareUserCmd:public stCountryUserCmd$/;"	s	namespace:Cmd
stSetDancerProfileUserCmd	tmpcode/commond.h	/^	stSetDancerProfileUserCmd()$/;"	f	struct:stSetDancerProfileUserCmd
stSetDancerProfileUserCmd	tmpcode/commond.h	/^struct stSetDancerProfileUserCmd : public stBarUserCmd$/;"	s
stSetDancerUserCmd	tmpcode/commond.h	/^	stSetDancerUserCmd()$/;"	f	struct:stSetDancerUserCmd
stSetDancerUserCmd	tmpcode/commond.h	/^struct stSetDancerUserCmd : public stBarUserCmd$/;"	s
stSetDecayForFriendLingQiUserCmd	tmpcode/commond.h	/^	stSetDecayForFriendLingQiUserCmd()$/;"	f	struct:stSetDecayForFriendLingQiUserCmd
stSetDecayForFriendLingQiUserCmd	tmpcode/commond.h	/^struct stSetDecayForFriendLingQiUserCmd : public stLingQiDecayUserCmd$/;"	s
stSetElementShiftUserCmd	tmpcode/commond.h	/^	stSetElementShiftUserCmd()$/;"	f	struct:stSetElementShiftUserCmd
stSetElementShiftUserCmd	tmpcode/commond.h	/^struct stSetElementShiftUserCmd : public stMagicUserCmd$/;"	s
stSetFightLingQiUserCmd	tmpcode/commond.h	/^	stSetFightLingQiUserCmd()$/;"	f	struct:stSetFightLingQiUserCmd
stSetFightLingQiUserCmd	tmpcode/commond.h	/^struct stSetFightLingQiUserCmd : public stLingQiUserCmd$/;"	s
stSetForceDataUserCmd	tmpcode/commond.h	/^        stSetForceDataUserCmd()$/;"	f	struct:stSetForceDataUserCmd
stSetForceDataUserCmd	tmpcode/commond.h	/^struct stSetForceDataUserCmd : public stDataUserCmd$/;"	s
stSetGRecommendUserCmd	tmpcode/commond.h	/^	stSetGRecommendUserCmd()$/;"	f	struct:stSetGRecommendUserCmd
stSetGRecommendUserCmd	tmpcode/commond.h	/^struct stSetGRecommendUserCmd : public stRecommendUserCmd$/;"	s
stSetHPAndMPDataUserCmd	base/Command.h	/^    stSetHPAndMPDataUserCmd()$/;"	f	struct:Cmd::stSetHPAndMPDataUserCmd
stSetHPAndMPDataUserCmd	base/Command.h	/^  struct stSetHPAndMPDataUserCmd : public stDataUserCmd{$/;"	s	namespace:Cmd
stSetHPAndMPDataUserCmd	tmpcode/commond.h	/^    stSetHPAndMPDataUserCmd()$/;"	f	struct:stSetHPAndMPDataUserCmd
stSetHPAndMPDataUserCmd	tmpcode/commond.h	/^struct stSetHPAndMPDataUserCmd : public stDataUserCmd \/\/…Ë÷√÷˜”√ªßµƒhp,mp$/;"	s
stSetHpTankCmd	tmpcode/commond.h	/^	stSetHpTankCmd()$/;"	f	struct:stSetHpTankCmd
stSetHpTankCmd	tmpcode/commond.h	/^struct stSetHpTankCmd : public stTankUserCmd$/;"	s
stSetLingliLingQiUserCmd	tmpcode/commond.h	/^    stSetLingliLingQiUserCmd()      $/;"	f	struct:stSetLingliLingQiUserCmd
stSetLingliLingQiUserCmd	tmpcode/commond.h	/^struct stSetLingliLingQiUserCmd :public stLingQiUserCmd$/;"	s
stSetMarriageInteractionCmd	tmpcode/commond.h	/^	stSetMarriageInteractionCmd()$/;"	f	struct:stSetMarriageInteractionCmd
stSetMarriageInteractionCmd	tmpcode/commond.h	/^struct stSetMarriageInteractionCmd : public stRelationUserCmd$/;"	s
stSetNeedAdditUnionMerch	tmpcode/commond.h	/^	stSetNeedAdditUnionMerch()$/;"	f	struct:stSetNeedAdditUnionMerch
stSetNeedAdditUnionMerch	tmpcode/commond.h	/^struct stSetNeedAdditUnionMerch : public stUnionUserCmd$/;"	s
stSetNewNumPasswdCmd	tmpcode/commond.h	/^	stSetNewNumPasswdCmd()$/;"	f	struct:stSetNewNumPasswdCmd
stSetNewNumPasswdCmd	tmpcode/commond.h	/^struct stSetNewNumPasswdCmd : public stSafetyUserCmd$/;"	s
stSetObjectRightSeptStore	tmpcode/commond.h	/^	stSetObjectRightSeptStore()$/;"	f	struct:stSetObjectRightSeptStore
stSetObjectRightSeptStore	tmpcode/commond.h	/^struct stSetObjectRightSeptStore : public stSeptUserCmd$/;"	s
stSetOfflineExpUserCmd	tmpcode/commond.h	/^	stSetOfflineExpUserCmd()$/;"	f	struct:stSetOfflineExpUserCmd
stSetOfflineExpUserCmd	tmpcode/commond.h	/^struct stSetOfflineExpUserCmd : public stPropertyUserCmd$/;"	s
stSetRecommendUserCmd	base/Command.h	/^  stSetRecommendUserCmd()$/;"	f	struct:Cmd::stSetRecommendUserCmd
stSetRecommendUserCmd	base/Command.h	/^struct stSetRecommendUserCmd : public stRecommendUserCmd$/;"	s	namespace:Cmd
stSetReqShiKongChuanSongUserCmd	tmpcode/commond.h	/^    stSetReqShiKongChuanSongUserCmd()$/;"	f	struct:stSetReqShiKongChuanSongUserCmd
stSetReqShiKongChuanSongUserCmd	tmpcode/commond.h	/^struct stSetReqShiKongChuanSongUserCmd : public stMagicUserCmd$/;"	s
stSetSafetyDetailUserCmd	tmpcode/commond.h	/^	stSetSafetyDetailUserCmd()$/;"	f	struct:stSetSafetyDetailUserCmd
stSetSafetyDetailUserCmd	tmpcode/commond.h	/^struct stSetSafetyDetailUserCmd : public stSafetyUserCmd$/;"	s
stSetSkillModeCmd	tmpcode/commond.h	/^	stSetSkillModeCmd()$/;"	f	struct:stSetSkillModeCmd
stSetSkillModeCmd	tmpcode/commond.h	/^struct stSetSkillModeCmd : public stPetUserCmd$/;"	s
stSetSponserCallBackUserCmd	tmpcode/commond.h	/^	stSetSponserCallBackUserCmd()$/;"	f	struct:stSetSponserCallBackUserCmd
stSetSponserCallBackUserCmd	tmpcode/commond.h	/^struct stSetSponserCallBackUserCmd : public stCallBackUserCmd$/;"	s
stSetStateMapScreenUserCmd	base/Command.h	/^  stSetStateMapScreenUserCmd()$/;"	f	struct:Cmd::stSetStateMapScreenUserCmd
stSetStateMapScreenUserCmd	base/Command.h	/^struct stSetStateMapScreenUserCmd : public stMapScreenUserCmd{$/;"	s	namespace:Cmd
stSetStateMapScreenUserCmd	tmpcode/commond.h	/^    stSetStateMapScreenUserCmd()$/;"	f	struct:stSetStateMapScreenUserCmd
stSetStateMapScreenUserCmd	tmpcode/commond.h	/^struct stSetStateMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stSetSuitPropertyUserCmd	tmpcode/commond.h	/^    stSetSuitPropertyUserCmd()$/;"	f	struct:stSetSuitPropertyUserCmd
stSetSuitPropertyUserCmd	tmpcode/commond.h	/^struct stSetSuitPropertyUserCmd : public stPropertyUserCmd$/;"	s
stSetTabKeyPropertyUserCmd	tmpcode/commond.h	/^	stSetTabKeyPropertyUserCmd()$/;"	f	struct:stSetTabKeyPropertyUserCmd
stSetTabKeyPropertyUserCmd	tmpcode/commond.h	/^struct stSetTabKeyPropertyUserCmd : public stPropertyUserCmd$/;"	s
stSetTargetPetCmd	base/Command.h	/^  stSetTargetPetCmd()$/;"	f	struct:Cmd::stSetTargetPetCmd
stSetTargetPetCmd	base/Command.h	/^struct stSetTargetPetCmd : public stPetUserCmd$/;"	s	namespace:Cmd
stSetTargetPetCmd	tmpcode/commond.h	/^	stSetTargetPetCmd()$/;"	f	struct:stSetTargetPetCmd
stSetTargetPetCmd	tmpcode/commond.h	/^struct stSetTargetPetCmd : public stPetUserCmd$/;"	s
stSetTaxCountryUserCmd	base/Command.h	/^  stSetTaxCountryUserCmd()$/;"	f	struct:Cmd::stSetTaxCountryUserCmd
stSetTaxCountryUserCmd	base/Command.h	/^struct stSetTaxCountryUserCmd:public stCountryUserCmd$/;"	s	namespace:Cmd
stSetTechSearchUserCmd	base/Command.h	/^  stSetTechSearchUserCmd()$/;"	f	struct:Cmd::stSetTechSearchUserCmd
stSetTechSearchUserCmd	base/Command.h	/^struct stSetTechSearchUserCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stSetTempUnsafetyUserCmd	tmpcode/commond.h	/^	stSetTempUnsafetyUserCmd()$/;"	f	struct:stSetTempUnsafetyUserCmd
stSetTempUnsafetyUserCmd	tmpcode/commond.h	/^struct stSetTempUnsafetyUserCmd : public stSafetyUserCmd$/;"	s
stSetTextLTQUserCmd	tmpcode/commond.h	/^	stSetTextLTQUserCmd()$/;"	f	struct:stSetTextLTQUserCmd
stSetTextLTQUserCmd	tmpcode/commond.h	/^struct stSetTextLTQUserCmd : public stLTQUserCmd$/;"	s
stSetTimeUserCmd	tmpcode/commond.h	/^        stSetTimeUserCmd()      $/;"	f	struct:stSetTimeUserCmd
stSetTimeUserCmd	tmpcode/commond.h	/^struct stSetTimeUserCmd : public stPropertyUserCmd$/;"	s
stSetUnionCityTax	tmpcode/commond.h	/^	stSetUnionCityTax ()$/;"	f	struct:stSetUnionCityTax
stSetUnionCityTax	tmpcode/commond.h	/^struct stSetUnionCityTax: public stUnionUserCmd$/;"	s
stSetUnionMemberRankName	tmpcode/commond.h	/^	stSetUnionMemberRankName()$/;"	f	struct:stSetUnionMemberRankName
stSetUnionMemberRankName	tmpcode/commond.h	/^struct stSetUnionMemberRankName: public stUnionUserCmd$/;"	s
stSetUnionMerchInfo	tmpcode/commond.h	/^	stSetUnionMerchInfo()$/;"	f	struct:stSetUnionMerchInfo
stSetUnionMerchInfo	tmpcode/commond.h	/^struct stSetUnionMerchInfo : public stUnionUserCmd$/;"	s
stSetUnionResidentHireMoney	tmpcode/commond.h	/^	stSetUnionResidentHireMoney()                   $/;"	f	struct:stSetUnionResidentHireMoney
stSetUnionResidentHireMoney	tmpcode/commond.h	/^struct stSetUnionResidentHireMoney: public stUnionUserCmd$/;"	s
stSetUpHorseAutoEatGrassUserCmd	tmpcode/commond.h	/^    stSetUpHorseAutoEatGrassUserCmd()$/;"	f	struct:stSetUpHorseAutoEatGrassUserCmd
stSetUpHorseAutoEatGrassUserCmd	tmpcode/commond.h	/^struct stSetUpHorseAutoEatGrassUserCmd : public stPetUserCmd$/;"	s
stSevenDragonBallsAwardUserCmd	tmpcode/commond.h	/^	stSevenDragonBallsAwardUserCmd()$/;"	f	struct:stSevenDragonBallsAwardUserCmd
stSevenDragonBallsAwardUserCmd	tmpcode/commond.h	/^struct stSevenDragonBallsAwardUserCmd : public stPropertyUserCmd$/;"	s
stShopMeetInfo	tmpcode/commond.h	/^        stShopMeetInfo()$/;"	f	struct:stShopMeetInfo
stShopMeetInfo	tmpcode/commond.h	/^struct stShopMeetInfo$/;"	s
stShouLieEnterCmd	tmpcode/commond.h	/^    stShouLieEnterCmd()$/;"	f	struct:stShouLieEnterCmd
stShouLieEnterCmd	tmpcode/commond.h	/^struct stShouLieEnterCmd : public stDataUserCmd$/;"	s
stShouLieReqScoreListCmd	tmpcode/commond.h	/^    stShouLieReqScoreListCmd()$/;"	f	struct:stShouLieReqScoreListCmd
stShouLieReqScoreListCmd	tmpcode/commond.h	/^struct stShouLieReqScoreListCmd : public stDataUserCmd$/;"	s
stShouLieScoreListCmd	tmpcode/commond.h	/^    stShouLieScoreListCmd()$/;"	f	struct:stShouLieScoreListCmd
stShouLieScoreListCmd	tmpcode/commond.h	/^struct stShouLieScoreListCmd : public stDataUserCmd$/;"	s
stShouLieTimerCmd	tmpcode/commond.h	/^    stShouLieTimerCmd()$/;"	f	struct:stShouLieTimerCmd
stShouLieTimerCmd	tmpcode/commond.h	/^struct stShouLieTimerCmd : public stDataUserCmd$/;"	s
stShowAllSkillUserPropertyUserCmd	tmpcode/commond.h	/^	stShowAllSkillUserPropertyUserCmd()$/;"	f	struct:stShowAllSkillUserPropertyUserCmd
stShowAllSkillUserPropertyUserCmd	tmpcode/commond.h	/^struct stShowAllSkillUserPropertyUserCmd : public stPropertyUserCmd$/;"	s
stShowAllUserCmd	tmpcode/commond.h	/^	stShowAllUserCmd()$/;"	f	struct:stShowAllUserCmd
stShowAllUserCmd	tmpcode/commond.h	/^struct stShowAllUserCmd : public stPropertyUserCmd$/;"	s
stShowBackInfoUserCmd	tmpcode/commond.h	/^    stShowBackInfoUserCmd()$/;"	f	struct:stShowBackInfoUserCmd
stShowBackInfoUserCmd	tmpcode/commond.h	/^struct stShowBackInfoUserCmd: public stDareUserCmd$/;"	s
stShowBombEffectUserCmd	tmpcode/commond.h	/^	stShowBombEffectUserCmd()$/;"	f	struct:stShowBombEffectUserCmd
stShowBombEffectUserCmd	tmpcode/commond.h	/^struct stShowBombEffectUserCmd : public stMagicUserCmd$/;"	s
stShowDynamicMapUserCmd	tmpcode/commond.h	/^    stShowDynamicMapUserCmd()$/;"	f	struct:stShowDynamicMapUserCmd
stShowDynamicMapUserCmd	tmpcode/commond.h	/^struct stShowDynamicMapUserCmd : public stMapScreenUserCmd $/;"	s
stShowEffectWhenFlowerEggCmd	tmpcode/commond.h	/^	stShowEffectWhenFlowerEggCmd()$/;"	f	struct:stShowEffectWhenFlowerEggCmd
stShowEffectWhenFlowerEggCmd	tmpcode/commond.h	/^struct stShowEffectWhenFlowerEggCmd: public stZhenxuanJingjiUserCmd$/;"	s
stShowEquipUserPropertyUserCmd	tmpcode/commond.h	/^        stShowEquipUserPropertyUserCmd()$/;"	f	struct:stShowEquipUserPropertyUserCmd
stShowEquipUserPropertyUserCmd	tmpcode/commond.h	/^struct stShowEquipUserPropertyUserCmd : public stPropertyUserCmd$/;"	s
stShowFlowerEffect	tmpcode/commond.h	/^	stShowFlowerEffect()$/;"	f	struct:stShowFlowerEffect
stShowFlowerEffect	tmpcode/commond.h	/^struct stShowFlowerEffect: public stDataUserCmd$/;"	s
stShowHelpUnionCmd	tmpcode/commond.h	/^	stShowHelpUnionCmd()$/;"	f	struct:stShowHelpUnionCmd
stShowHelpUnionCmd	tmpcode/commond.h	/^struct stShowHelpUnionCmd : public stUnionUserCmd$/;"	s
stShowHorseSkillUserCmd	tmpcode/commond.h	/^        stShowHorseSkillUserCmd()$/;"	f	struct:stShowHorseSkillUserCmd
stShowHorseSkillUserCmd	tmpcode/commond.h	/^struct stShowHorseSkillUserCmd : public stPetUserCmd$/;"	s
stShowMagicEffectUserCmd	tmpcode/commond.h	/^       stShowMagicEffectUserCmd()$/;"	f	struct:stShowMagicEffectUserCmd
stShowMagicEffectUserCmd	tmpcode/commond.h	/^struct stShowMagicEffectUserCmd : public stMagicUserCmd$/;"	s
stShowMarryIconCmd	tmpcode/commond.h	/^	stShowMarryIconCmd()$/;"	f	struct:stShowMarryIconCmd
stShowMarryIconCmd	tmpcode/commond.h	/^struct stShowMarryIconCmd : public stRelationUserCmd$/;"	s
stShowMaterialHorsesAndSkillsUserCmd	tmpcode/commond.h	/^    stShowMaterialHorsesAndSkillsUserCmd()$/;"	f	struct:stShowMaterialHorsesAndSkillsUserCmd
stShowMaterialHorsesAndSkillsUserCmd	tmpcode/commond.h	/^struct stShowMaterialHorsesAndSkillsUserCmd : public stPetUserCmd$/;"	s
stShowMaxLevelIconUserCmd	tmpcode/commond.h	/^	stShowMaxLevelIconUserCmd()$/;"	f	struct:stShowMaxLevelIconUserCmd
stShowMaxLevelIconUserCmd	tmpcode/commond.h	/^struct stShowMaxLevelIconUserCmd : public stMaxLevelLimitUserCmd$/;"	s
stShowMoneyUserCmd	tmpcode/commond.h	/^	stShowMoneyUserCmd(): npcTempID(0), money(0)$/;"	f	struct:stShowMoneyUserCmd
stShowMoneyUserCmd	tmpcode/commond.h	/^struct stShowMoneyUserCmd: public stZYZUserCmd$/;"	s
stShowNowHorseSoulEnergyUserCmd	tmpcode/commond.h	/^        stShowNowHorseSoulEnergyUserCmd()$/;"	f	struct:stShowNowHorseSoulEnergyUserCmd
stShowNowHorseSoulEnergyUserCmd	tmpcode/commond.h	/^struct stShowNowHorseSoulEnergyUserCmd : public stPetUserCmd$/;"	s
stShowScoreSeptBattleUserCmd	tmpcode/commond.h	/^         stShowScoreSeptBattleUserCmd()$/;"	f	struct:stShowScoreSeptBattleUserCmd
stShowScoreSeptBattleUserCmd	tmpcode/commond.h	/^ struct stShowScoreSeptBattleUserCmd : public stSeptBattleUserCmd$/;"	s
stShowShiKongChuanSongUserCmd	tmpcode/commond.h	/^    stShowShiKongChuanSongUserCmd()$/;"	f	struct:stShowShiKongChuanSongUserCmd
stShowShiKongChuanSongUserCmd	tmpcode/commond.h	/^struct stShowShiKongChuanSongUserCmd : public stMagicUserCmd$/;"	s
stShowSingUserCmd	tmpcode/commond.h	/^	stShowSingUserCmd():userTempID(0),skillID(0),singType(SKILL_SING_TYPE),singShowType(0)$/;"	f	struct:stShowSingUserCmd
stShowSingUserCmd	tmpcode/commond.h	/^struct stShowSingUserCmd : public stSingUserCmd$/;"	s
stShowTipUserCmd	tmpcode/commond.h	/^	stShowTipUserCmd()$/;"	f	struct:stShowTipUserCmd
stShowTipUserCmd	tmpcode/commond.h	/^struct stShowTipUserCmd : public stQuestUserCmd$/;"	s
stShowVigourValueQuestUserCmd	tmpcode/commond.h	/^	stShowVigourValueQuestUserCmd()$/;"	f	struct:stShowVigourValueQuestUserCmd
stShowVigourValueQuestUserCmd	tmpcode/commond.h	/^struct stShowVigourValueQuestUserCmd : public stRandomQuestUserCmd$/;"	s
stShowWindowUserCmd	tmpcode/commond.h	/^	stShowWindowUserCmd()$/;"	f	struct:stShowWindowUserCmd
stShowWindowUserCmd	tmpcode/commond.h	/^struct stShowWindowUserCmd : public stQuestUserCmd$/;"	s
stShuDuUserCmd	tmpcode/commond.h	/^        stShuDuUserCmd()$/;"	f	struct:stShuDuUserCmd
stShuDuUserCmd	tmpcode/commond.h	/^struct stShuDuUserCmd : public stNullUserCmd$/;"	s
stSignMaxLevelLimitUserCmd	tmpcode/commond.h	/^	stSignMaxLevelLimitUserCmd()$/;"	f	struct:stSignMaxLevelLimitUserCmd
stSignMaxLevelLimitUserCmd	tmpcode/commond.h	/^struct stSignMaxLevelLimitUserCmd : public stMaxLevelLimitUserCmd$/;"	s
stSimpleInfoChallengeUserCmd	tmpcode/commond.h	/^	stSimpleInfoChallengeUserCmd()$/;"	f	struct:stSimpleInfoChallengeUserCmd
stSimpleInfoChallengeUserCmd	tmpcode/commond.h	/^struct stSimpleInfoChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stSimulateHorseDataCmd	tmpcode/commond.h	/^	stSimulateHorseDataCmd()$/;"	f	struct:stSimulateHorseDataCmd
stSimulateHorseDataCmd	tmpcode/commond.h	/^struct stSimulateHorseDataCmd : public stPetUserCmd$/;"	s
stSimulateLingQiUserCmd	tmpcode/commond.h	/^	stSimulateLingQiUserCmd()$/;"	f	struct:stSimulateLingQiUserCmd
stSimulateLingQiUserCmd	tmpcode/commond.h	/^struct stSimulateLingQiUserCmd : public stLingQiUserCmd$/;"	s
stSimulateMagicUserCmd	tmpcode/commond.h	/^	stSimulateMagicUserCmd()$/;"	f	struct:stSimulateMagicUserCmd
stSimulateMagicUserCmd	tmpcode/commond.h	/^struct stSimulateMagicUserCmd : public stMagicUserCmd$/;"	s
stSingMagicUserCmd	tmpcode/commond.h	/^    stSingMagicUserCmd()$/;"	f	struct:stSingMagicUserCmd
stSingMagicUserCmd	tmpcode/commond.h	/^struct stSingMagicUserCmd : public stMagicUserCmd$/;"	s
stSingUserCmd	tmpcode/commond.h	/^	stSingUserCmd()$/;"	f	struct:stSingUserCmd
stSingUserCmd	tmpcode/commond.h	/^struct stSingUserCmd : public stNullUserCmd$/;"	s
stSingleSelectQuestUserCmd	tmpcode/commond.h	/^	stSingleSelectQuestUserCmd()  $/;"	f	struct:stSingleSelectQuestUserCmd
stSingleSelectQuestUserCmd	tmpcode/commond.h	/^struct stSingleSelectQuestUserCmd : public stRandomQuestUserCmd$/;"	s
stSitDownChairUserCmd	tmpcode/commond.h	/^	stSitDownChairUserCmd()$/;"	f	struct:stSitDownChairUserCmd
stSitDownChairUserCmd	tmpcode/commond.h	/^struct stSitDownChairUserCmd : public stMoveUserCmd$/;"	s
stSitDownMoveUserCmd	base/Command.h	/^    stSitDownMoveUserCmd()$/;"	f	struct:Cmd::stSitDownMoveUserCmd
stSitDownMoveUserCmd	base/Command.h	/^  struct stSitDownMoveUserCmd : public stMoveUserCmd{$/;"	s	namespace:Cmd
stSitDownMoveUserCmd	tmpcode/commond.h	/^	stSitDownMoveUserCmd()$/;"	f	struct:stSitDownMoveUserCmd
stSitDownMoveUserCmd	tmpcode/commond.h	/^struct stSitDownMoveUserCmd : public stMoveUserCmd$/;"	s
stSortObjectPropertyUserCmd	base/Command.h	/^        stSortObjectPropertyUserCmd()$/;"	f	struct:Cmd::stSortObjectPropertyUserCmd
stSortObjectPropertyUserCmd	base/Command.h	/^    struct stSortObjectPropertyUserCmd : public  stPropertyUserCmd{$/;"	s	namespace:Cmd
stSortObjectPropertyUserCmd	tmpcode/commond.h	/^        stSortObjectPropertyUserCmd()$/;"	f	struct:stSortObjectPropertyUserCmd
stSortObjectPropertyUserCmd	tmpcode/commond.h	/^    struct stSortObjectPropertyUserCmd : public  stPropertyUserCmd{$/;"	s
stSoundEffectLuoRiUserCmd	tmpcode/commond.h	/^    stSoundEffectLuoRiUserCmd()                 $/;"	f	struct:stSoundEffectLuoRiUserCmd
stSoundEffectLuoRiUserCmd	tmpcode/commond.h	/^struct stSoundEffectLuoRiUserCmd:public stLuoRiXiaGuUserCmd$/;"	s
stSoundUserCmd	tmpcode/commond.h	/^	stSoundUserCmd()$/;"	f	struct:stSoundUserCmd
stSoundUserCmd	tmpcode/commond.h	/^struct stSoundUserCmd : public stNullUserCmd$/;"	s
stSpecialUserCmd	tmpcode/commond.h	/^	stSpecialUserCmd()$/;"	f	struct:stSpecialUserCmd
stSpecialUserCmd	tmpcode/commond.h	/^struct stSpecialUserCmd : public stNullUserCmd$/;"	s
stSplitObjectPropertyUserCmd	base/Command.h	/^    stSplitObjectPropertyUserCmd()$/;"	f	struct:Cmd::stSplitObjectPropertyUserCmd
stSplitObjectPropertyUserCmd	base/Command.h	/^  struct stSplitObjectPropertyUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stSplitObjectPropertyUserCmd	tmpcode/commond.h	/^		stSplitObjectPropertyUserCmd()$/;"	f	struct:stSplitObjectPropertyUserCmd
stSplitObjectPropertyUserCmd	tmpcode/commond.h	/^	struct stSplitObjectPropertyUserCmd : public stPropertyUserCmd{$/;"	s
stSponserGetAwardCallBackUserCmd	tmpcode/commond.h	/^	stSponserGetAwardCallBackUserCmd()$/;"	f	struct:stSponserGetAwardCallBackUserCmd
stSponserGetAwardCallBackUserCmd	tmpcode/commond.h	/^struct stSponserGetAwardCallBackUserCmd : public stCallBackUserCmd$/;"	s
stSrvMapTile	Robot/LoadMap.h	/^struct stSrvMapTile$/;"	s
stSrvMapTile	ScenesServer/LoadMap.h	/^struct stSrvMapTile$/;"	s
stStableDataCmd	tmpcode/commond.h	/^	stStableDataCmd()$/;"	f	struct:stStableDataCmd
stStableDataCmd	tmpcode/commond.h	/^struct stStableDataCmd : public stPetUserCmd$/;"	s
stStableHorseNameCmd	tmpcode/commond.h	/^    stStableHorseNameCmd()$/;"	f	struct:stStableHorseNameCmd
stStableHorseNameCmd	tmpcode/commond.h	/^struct stStableHorseNameCmd : public stPetUserCmd$/;"	s
stStampCheckUserCmd	base/Command.h	/^  stStampCheckUserCmd()$/;"	f	struct:Cmd::stStampCheckUserCmd
stStampCheckUserCmd	base/Command.h	/^struct stStampCheckUserCmd : public stDataUserCmd$/;"	s	namespace:Cmd
stStampDataUserCmd	base/Command.h	/^  stStampDataUserCmd()$/;"	f	struct:Cmd::stStampDataUserCmd
stStampDataUserCmd	base/Command.h	/^struct stStampDataUserCmd : public stDataUserCmd$/;"	s	namespace:Cmd
stStampDataUserCmd	tmpcode/commond.h	/^	stStampDataUserCmd()$/;"	f	struct:stStampDataUserCmd
stStampDataUserCmd	tmpcode/commond.h	/^struct stStampDataUserCmd : public stDataUserCmd$/;"	s
stStartAccelcmdPropUserCmd	tmpcode/commond.h	/^        stStartAccelcmdPropUserCmd()$/;"	f	struct:stStartAccelcmdPropUserCmd
stStartAccelcmdPropUserCmd	tmpcode/commond.h	/^struct stStartAccelcmdPropUserCmd : public stPropertyUserCmd$/;"	s
stStartColdDownPropertyUserCmd	tmpcode/commond.h	/^    stStartColdDownPropertyUserCmd()$/;"	f	struct:stStartColdDownPropertyUserCmd
stStartColdDownPropertyUserCmd	tmpcode/commond.h	/^struct stStartColdDownPropertyUserCmd:public stPropertyUserCmd$/;"	s
stStartDigTreasureUserCmd	tmpcode/commond.h	/^	stStartDigTreasureUserCmd()$/;"	f	struct:stStartDigTreasureUserCmd
stStartDigTreasureUserCmd	tmpcode/commond.h	/^struct stStartDigTreasureUserCmd : public stDigTreasureUserCmd$/;"	s
stStartEmployGatherCmd	tmpcode/commond.h	/^    stStartEmployGatherCmd()$/;"	f	struct:stStartEmployGatherCmd
stStartEmployGatherCmd	tmpcode/commond.h	/^struct stStartEmployGatherCmd:stTradeUserCmd$/;"	s
stStartNewGameChallengeUserCmd	tmpcode/commond.h	/^	stStartNewGameChallengeUserCmd()$/;"	f	struct:stStartNewGameChallengeUserCmd
stStartNewGameChallengeUserCmd	tmpcode/commond.h	/^struct stStartNewGameChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stStartQuestQuestRoomUserCmd	tmpcode/commond.h	/^	stStartQuestQuestRoomUserCmd(): roomID(0)$/;"	f	struct:stStartQuestQuestRoomUserCmd
stStartQuestQuestRoomUserCmd	tmpcode/commond.h	/^struct stStartQuestQuestRoomUserCmd: public stQuestMapUserCmd$/;"	s
stStartSeptPopoUserCmd	tmpcode/commond.h	/^	stStartSeptPopoUserCmd()$/;"	f	struct:stStartSeptPopoUserCmd
stStartSeptPopoUserCmd	tmpcode/commond.h	/^struct stStartSeptPopoUserCmd : public stSeptPopoUserCmd$/;"	s
stStateDancerUserCmd	tmpcode/commond.h	/^	stStateDancerUserCmd()$/;"	f	struct:stStateDancerUserCmd
stStateDancerUserCmd	tmpcode/commond.h	/^struct stStateDancerUserCmd : public stBarUserCmd$/;"	s
stStateSeptGuardCmd	tmpcode/commond.h	/^	stStateSeptGuardCmd()$/;"	f	struct:stStateSeptGuardCmd
stStateSeptGuardCmd	tmpcode/commond.h	/^struct stStateSeptGuardCmd : public stSeptUserCmd$/;"	s
stStatueHPUserCmd	tmpcode/commond.h	/^	stStatueHPUserCmd()$/;"	f	struct:stStatueHPUserCmd
stStatueHPUserCmd	tmpcode/commond.h	/^struct stStatueHPUserCmd : public stSeptDefenseCmd$/;"	s
stStatueInfoUserCmd	tmpcode/commond.h	/^	stStatueInfoUserCmd()$/;"	f	struct:stStatueInfoUserCmd
stStatueInfoUserCmd	tmpcode/commond.h	/^struct stStatueInfoUserCmd : public stSeptDefenseCmd$/;"	s
stStealSoilHouseUserCmd	tmpcode/commond.h	/^	stStealSoilHouseUserCmd()$/;"	f	struct:stStealSoilHouseUserCmd
stStealSoilHouseUserCmd	tmpcode/commond.h	/^struct stStealSoilHouseUserCmd: public stHouseUserCmd$/;"	s
stStepRight	base/Command.h	/^  struct stStepRight$/;"	s	struct:Cmd::stSeptBaseInfoCmd
stStockBillUserCmd	base/Command.h	/^  stStockBillUserCmd()$/;"	f	struct:Cmd::stStockBillUserCmd
stStockBillUserCmd	base/Command.h	/^struct stStockBillUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stStockBillUserCmd	tmpcode/commond.h	/^	stStockBillUserCmd()$/;"	f	struct:stStockBillUserCmd
stStockBillUserCmd	tmpcode/commond.h	/^struct stStockBillUserCmd : public stNullUserCmd$/;"	s
stStockSceneUserCmd	base/Command.h	/^  stStockSceneUserCmd()$/;"	f	struct:Cmd::stStockSceneUserCmd
stStockSceneUserCmd	base/Command.h	/^struct stStockSceneUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stStockSceneUserCmd	tmpcode/commond.h	/^	stStockSceneUserCmd()$/;"	f	struct:stStockSceneUserCmd
stStockSceneUserCmd	tmpcode/commond.h	/^struct stStockSceneUserCmd : public stNullUserCmd$/;"	s
stStopAssaultMagicUserCmd	tmpcode/commond.h	/^	stStopAssaultMagicUserCmd()$/;"	f	struct:stStopAssaultMagicUserCmd
stStopAssaultMagicUserCmd	tmpcode/commond.h	/^struct stStopAssaultMagicUserCmd : public stMagicUserCmd$/;"	s
stStopCancelNumPasswdCmd	tmpcode/commond.h	/^	stStopCancelNumPasswdCmd()$/;"	f	struct:stStopCancelNumPasswdCmd
stStopCancelNumPasswdCmd	tmpcode/commond.h	/^struct stStopCancelNumPasswdCmd : public stSafetyUserCmd$/;"	s
stStopDance	tmpcode/commond.h	/^	    stStopDance() $/;"	f	struct:stStopDance
stStopDance	tmpcode/commond.h	/^struct stStopDance : public stDanceUserCmd$/;"	s
stStopDanceMapScreenUserCmd	tmpcode/commond.h	/^	stStopDanceMapScreenUserCmd()$/;"	f	struct:stStopDanceMapScreenUserCmd
stStopDanceMapScreenUserCmd	tmpcode/commond.h	/^struct stStopDanceMapScreenUserCmd : public stMapScreenUserCmd$/;"	s
stStopSceneEntryProtectionCmd	tmpcode/commond.h	/^	stStopSceneEntryProtectionCmd()$/;"	f	struct:stStopSceneEntryProtectionCmd
stStopSceneEntryProtectionCmd	tmpcode/commond.h	/^struct stStopSceneEntryProtectionCmd : public stDataUserCmd$/;"	s
stStopServerTimeUserCmd	tmpcode/commond.h	/^	 stStopServerTimeUserCmd()$/;"	f	struct:stStopServerTimeUserCmd
stStopServerTimeUserCmd	tmpcode/commond.h	/^struct stStopServerTimeUserCmd : public stTimerUserCmd$/;"	s
stStopServiceGold	base/Command.h	/^  stStopServiceGold()$/;"	f	struct:Cmd::stStopServiceGold
stStopServiceGold	base/Command.h	/^struct stStopServiceGold :  public stGoldUserCmd$/;"	s	namespace:Cmd
stStopServiceStockUserCmd	base/Command.h	/^  stStopServiceStockUserCmd() $/;"	f	struct:Cmd::stStopServiceStockUserCmd
stStopServiceStockUserCmd	base/Command.h	/^struct stStopServiceStockUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stStopServiceStockUserCmd	tmpcode/commond.h	/^	stStopServiceStockUserCmd()$/;"	f	struct:stStopServiceStockUserCmd
stStopServiceStockUserCmd	tmpcode/commond.h	/^struct stStopServiceStockUserCmd : public stStockBillUserCmd$/;"	s
stStoreInfoNpcTradeUserCmd	base/Command.h	/^  stStoreInfoNpcTradeUserCmd()$/;"	f	struct:Cmd::stStoreInfoNpcTradeUserCmd
stStoreInfoNpcTradeUserCmd	base/Command.h	/^struct stStoreInfoNpcTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stStoreInfoNpcTradeUserCmd	tmpcode/commond.h	/^	stStoreInfoNpcTradeUserCmd()$/;"	f	struct:stStoreInfoNpcTradeUserCmd
stStoreInfoNpcTradeUserCmd	tmpcode/commond.h	/^struct stStoreInfoNpcTradeUserCmd : public stTradeUserCmd$/;"	s
stStoveDataUserCmd	tmpcode/commond.h	/^        stStoveDataUserCmd()$/;"	f	struct:stStoveDataUserCmd
stStoveDataUserCmd	tmpcode/commond.h	/^struct stStoveDataUserCmd : public stPropertyUserCmd$/;"	s
stStudyLingQiSkillUserCmd	tmpcode/commond.h	/^    stStudyLingQiSkillUserCmd()$/;"	f	struct:stStudyLingQiSkillUserCmd
stStudyLingQiSkillUserCmd	tmpcode/commond.h	/^struct stStudyLingQiSkillUserCmd : public stLingQiUserCmd$/;"	s
stStudySeptSkill	tmpcode/commond.h	/^	stStudySeptSkill(const unsigned int _id) : stUnionSkillUserCmd(STUDY_SEPTSKILL_USERCMD) {$/;"	f	struct:stStudySeptSkill
stStudySeptSkill	tmpcode/commond.h	/^struct stStudySeptSkill : public stUnionSkillUserCmd {$/;"	s
stSuccessOpenBoxUserCmd	tmpcode/commond.h	/^    stSuccessOpenBoxUserCmd()$/;"	f	struct:stSuccessOpenBoxUserCmd
stSuccessOpenBoxUserCmd	tmpcode/commond.h	/^struct stSuccessOpenBoxUserCmd: public stWeekBoxUserCmd$/;"	s
stSuitsPropertyUserCmd	tmpcode/commond.h	/^    stSuitsPropertyUserCmd()$/;"	f	struct:stSuitsPropertyUserCmd
stSuitsPropertyUserCmd	tmpcode/commond.h	/^struct stSuitsPropertyUserCmd : public stPropertyUserCmd$/;"	s
stSummonAvatarGuard	tmpcode/commond.h	/^	stSummonAvatarGuard()$/;"	f	struct:stSummonAvatarGuard
stSummonAvatarGuard	tmpcode/commond.h	/^struct stSummonAvatarGuard : public stPetUserCmd$/;"	s
stSummonSkillControlMagicUserCmd	tmpcode/commond.h	/^	stSummonSkillControlMagicUserCmd()$/;"	f	struct:stSummonSkillControlMagicUserCmd
stSummonSkillControlMagicUserCmd	tmpcode/commond.h	/^struct stSummonSkillControlMagicUserCmd : public stMagicUserCmd{$/;"	s
stSummonTrainDragonUserCmd	tmpcode/commond.h	/^        stSummonTrainDragonUserCmd()$/;"	f	struct:stSummonTrainDragonUserCmd
stSummonTrainDragonUserCmd	tmpcode/commond.h	/^struct stSummonTrainDragonUserCmd : public stDragonUserCmd$/;"	s
stSurrenderPurchase	tmpcode/commond.h	/^    stSurrenderPurchase()$/;"	f	struct:stSurrenderPurchase
stSurrenderPurchase	tmpcode/commond.h	/^struct stSurrenderPurchase : public stTradeUserCmd$/;"	s
stSurveyOverUserCmd	tmpcode/commond.h	/^	stSurveyOverUserCmd()$/;"	f	struct:stSurveyOverUserCmd
stSurveyOverUserCmd	tmpcode/commond.h	/^struct stSurveyOverUserCmd : public stSurveyUserCmd$/;"	s
stSurveyResultUserCmd	tmpcode/commond.h	/^	stSurveyResultUserCmd()$/;"	f	struct:stSurveyResultUserCmd
stSurveyResultUserCmd	tmpcode/commond.h	/^struct stSurveyResultUserCmd : public stSurveyUserCmd$/;"	s
stSurveyUserCmd	tmpcode/commond.h	/^	stSurveyUserCmd()$/;"	f	struct:stSurveyUserCmd
stSurveyUserCmd	tmpcode/commond.h	/^struct stSurveyUserCmd : public stNullUserCmd$/;"	s
stSwapObjectPropertyUserCmd	base/Command.h	/^    stSwapObjectPropertyUserCmd()$/;"	f	struct:Cmd::stSwapObjectPropertyUserCmd
stSwapObjectPropertyUserCmd	base/Command.h	/^  struct stSwapObjectPropertyUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stSwapObjectPropertyUserCmd	tmpcode/commond.h	/^		stSwapObjectPropertyUserCmd()$/;"	f	struct:stSwapObjectPropertyUserCmd
stSwapObjectPropertyUserCmd	tmpcode/commond.h	/^	struct stSwapObjectPropertyUserCmd : public stPropertyUserCmd{$/;"	s
stSwitchCharacterObstacleUserCmd	base/Command.h	/^       stSwitchCharacterObstacleUserCmd()$/;"	f	struct:Cmd::stSwitchCharacterObstacleUserCmd
stSwitchCharacterObstacleUserCmd	base/Command.h	/^struct stSwitchCharacterObstacleUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stSystemSettings	base/Command.h	/^struct stSystemSettings$/;"	s	namespace:Cmd
stSystemSettings	tmpcode/commond.h	/^struct stSystemSettings$/;"	s
stSystemSettingsUserCmd	base/Command.h	/^  stSystemSettingsUserCmd()$/;"	f	struct:Cmd::stSystemSettingsUserCmd
stSystemSettingsUserCmd	base/Command.h	/^struct stSystemSettingsUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stSystemSettingsUserCmd	tmpcode/commond.h	/^	stSystemSettingsUserCmd()$/;"	f	struct:stSystemSettingsUserCmd
stSystemSettingsUserCmd	tmpcode/commond.h	/^struct stSystemSettingsUserCmd : public stPropertyUserCmd$/;"	s
stTabKeyPropertyUserCmd	tmpcode/commond.h	/^	stTabKeyPropertyUserCmd()$/;"	f	struct:stTabKeyPropertyUserCmd
stTabKeyPropertyUserCmd	tmpcode/commond.h	/^struct stTabKeyPropertyUserCmd : public stPropertyUserCmd$/;"	s
stTabLastSelectedIDPropertyUserCmd	tmpcode/commond.h	/^	stTabLastSelectedIDPropertyUserCmd()$/;"	f	struct:stTabLastSelectedIDPropertyUserCmd
stTabLastSelectedIDPropertyUserCmd	tmpcode/commond.h	/^struct stTabLastSelectedIDPropertyUserCmd : public stPropertyUserCmd$/;"	s
stTakeBackAllFurnitureUserCmd	tmpcode/commond.h	/^	stTakeBackAllFurnitureUserCmd()$/;"	f	struct:stTakeBackAllFurnitureUserCmd
stTakeBackAllFurnitureUserCmd	tmpcode/commond.h	/^struct stTakeBackAllFurnitureUserCmd: public stHomeUserCmd$/;"	s
stTakeTotleEaningUserCmd	tmpcode/commond.h	/^	stTakeTotleEaningUserCmd()$/;"	f	struct:stTakeTotleEaningUserCmd
stTakeTotleEaningUserCmd	tmpcode/commond.h	/^struct stTakeTotleEaningUserCmd : public stBarUserCmd$/;"	s
stTalkLTQUserCmd	tmpcode/commond.h	/^	stTalkLTQUserCmd()$/;"	f	struct:stTalkLTQUserCmd
stTalkLTQUserCmd	tmpcode/commond.h	/^struct stTalkLTQUserCmd : public stLTQUserCmd$/;"	s
stTalkWithDancerUserCmd	tmpcode/commond.h	/^	stTalkWithDancerUserCmd()$/;"	f	struct:stTalkWithDancerUserCmd
stTalkWithDancerUserCmd	tmpcode/commond.h	/^struct stTalkWithDancerUserCmd : public stBarUserCmd$/;"	s
stTankNameCmd	tmpcode/commond.h	/^	stTankNameCmd()$/;"	f	struct:stTankNameCmd
stTankNameCmd	tmpcode/commond.h	/^struct stTankNameCmd : public stTankUserCmd$/;"	s
stTankPartUpgradePropertyUserCmd	tmpcode/commond.h	/^	stTankPartUpgradePropertyUserCmd()$/;"	f	struct:stTankPartUpgradePropertyUserCmd
stTankPartUpgradePropertyUserCmd	tmpcode/commond.h	/^struct stTankPartUpgradePropertyUserCmd : public stPropertyUserCmd {$/;"	s
stTankUserCmd	tmpcode/commond.h	/^	stTankUserCmd()$/;"	f	struct:stTankUserCmd
stTankUserCmd	tmpcode/commond.h	/^struct stTankUserCmd : public stNullUserCmd$/;"	s
stTaskBuildMagicForgeObject	tmpcode/commond.h	/^	stTaskBuildMagicForgeObject()$/;"	f	struct:stTaskBuildMagicForgeObject
stTaskBuildMagicForgeObject	tmpcode/commond.h	/^struct stTaskBuildMagicForgeObject : public stUnionUserCmd$/;"	s
stTaxCountryUserCmd	base/Command.h	/^  stTaxCountryUserCmd()$/;"	f	struct:Cmd::stTaxCountryUserCmd
stTaxCountryUserCmd	base/Command.h	/^struct stTaxCountryUserCmd:public stCountryUserCmd$/;"	s	namespace:Cmd
stTeamDegreeAddCmd	tmpcode/commond.h	/^	stTeamDegreeAddCmd()$/;"	f	struct:stTeamDegreeAddCmd
stTeamDegreeAddCmd	tmpcode/commond.h	/^struct stTeamDegreeAddCmd : public stChatUserCmd$/;"	s
stTeamMemberData	base/Command.h	/^struct stTeamMemberData$/;"	s	namespace:Cmd
stTeamMemberData	tmpcode/commond.h	/^struct stTeamMemberData$/;"	s
stTeamMemberOfflineUserCmd	base/Command.h	/^        stTeamMemberOfflineUserCmd()$/;"	f	struct:Cmd::stTeamMemberOfflineUserCmd
stTeamMemberOfflineUserCmd	base/Command.h	/^struct stTeamMemberOfflineUserCmd : public stChatUserCmd$/;"	s	namespace:Cmd
stTeamMemberOfflineUserCmd	tmpcode/commond.h	/^	stTeamMemberOfflineUserCmd()$/;"	f	struct:stTeamMemberOfflineUserCmd
stTeamMemberOfflineUserCmd	tmpcode/commond.h	/^struct stTeamMemberOfflineUserCmd : public stChatUserCmd$/;"	s
stTeamMemberPosition	base/Command.h	/^struct stTeamMemberPosition$/;"	s	namespace:Cmd
stTeamMemberPosition	tmpcode/commond.h	/^struct stTeamMemberPosition$/;"	s
stTeamModeUserCmd	base/Command.h	/^  stTeamModeUserCmd()$/;"	f	struct:Cmd::stTeamModeUserCmd
stTeamModeUserCmd	base/Command.h	/^struct stTeamModeUserCmd: public stChatUserCmd$/;"	s	namespace:Cmd
stTeamModeUserCmd	tmpcode/commond.h	/^	stTeamModeUserCmd()$/;"	f	struct:stTeamModeUserCmd
stTeamModeUserCmd	tmpcode/commond.h	/^struct stTeamModeUserCmd: public stChatUserCmd$/;"	s
stTeamRecruitUserCmd	tmpcode/commond.h	/^	stTeamRecruitUserCmd()$/;"	f	struct:stTeamRecruitUserCmd
stTeamRecruitUserCmd	tmpcode/commond.h	/^struct stTeamRecruitUserCmd : public stNullUserCmd$/;"	s
stTeamUserInfo	tmpcode/commond.h	/^	 stTeamUserInfo()$/;"	f	struct:stTeamUserInfo
stTeamUserInfo	tmpcode/commond.h	/^ struct stTeamUserInfo$/;"	s
stTechItem	base/Command.h	/^struct stTechItem$/;"	s	namespace:Cmd
stTellWorldDTSUserCmd	tmpcode/commond.h	/^	 stTellWorldDTSUserCmd()$/;"	f	struct:stTellWorldDTSUserCmd
stTellWorldDTSUserCmd	tmpcode/commond.h	/^ struct stTellWorldDTSUserCmd: public stDaTaoShaUserCmd$/;"	s
stTicketSelectUser	tmpcode/commond.h	/^    stTicketSelectUser()$/;"	f	struct:stTicketSelectUser
stTicketSelectUser	tmpcode/commond.h	/^struct stTicketSelectUser : public stSelectUserCmd$/;"	s
stTime	tmpcode/commond.h	/^        struct stTime$/;"	s	struct:stRetDailyWarningQuestUserCmd::quests
stTimeCountTankCmd	tmpcode/commond.h	/^	stTimeCountTankCmd()$/;"	f	struct:stTimeCountTankCmd
stTimeCountTankCmd	tmpcode/commond.h	/^struct stTimeCountTankCmd : public stTankUserCmd$/;"	s
stTimeCountUserCmd	tmpcode/commond.h	/^        stTimeCountUserCmd()$/;"	f	struct:stTimeCountUserCmd
stTimeCountUserCmd	tmpcode/commond.h	/^struct stTimeCountUserCmd:public stMapScreenUserCmd      $/;"	s
stTimeSyncUserCmd	base/Command.h	/^  stTimeSyncUserCmd()$/;"	f	struct:Cmd::stTimeSyncUserCmd
stTimeSyncUserCmd	base/Command.h	/^struct stTimeSyncUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stTimeSyncUserCmd	tmpcode/commond.h	/^	stTimeSyncUserCmd()$/;"	f	struct:stTimeSyncUserCmd
stTimeSyncUserCmd	tmpcode/commond.h	/^struct stTimeSyncUserCmd : public stMagicUserCmd{$/;"	s
stTimerUserCmd	base/Command.h	/^  stTimerUserCmd()$/;"	f	struct:Cmd::stTimerUserCmd
stTimerUserCmd	base/Command.h	/^struct stTimerUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stTimerUserCmd	tmpcode/commond.h	/^	stTimerUserCmd()$/;"	f	struct:stTimerUserCmd
stTimerUserCmd	tmpcode/commond.h	/^struct stTimerUserCmd : public stNullUserCmd$/;"	s
stTitleUserCmd	tmpcode/commond.h	/^	stTitleUserCmd()$/;"	f	struct:stTitleUserCmd
stTitleUserCmd	tmpcode/commond.h	/^struct stTitleUserCmd : public stNullUserCmd$/;"	s
stToAttAttackMagicUserCmd	tmpcode/commond.h	/^	stToAttAttackMagicUserCmd()$/;"	f	struct:stToAttAttackMagicUserCmd
stToAttAttackMagicUserCmd	tmpcode/commond.h	/^struct stToAttAttackMagicUserCmd : public stMagicUserCmd$/;"	s
stToDefAttackMagicUserCmd	tmpcode/commond.h	/^	stToDefAttackMagicUserCmd()$/;"	f	struct:stToDefAttackMagicUserCmd
stToDefAttackMagicUserCmd	tmpcode/commond.h	/^struct stToDefAttackMagicUserCmd : public stMagicUserCmd$/;"	s
stToNineAttackMagicUserCmd	tmpcode/commond.h	/^	stToNineAttackMagicUserCmd()$/;"	f	struct:stToNineAttackMagicUserCmd
stToNineAttackMagicUserCmd	tmpcode/commond.h	/^struct stToNineAttackMagicUserCmd : public stMagicUserCmd$/;"	s
stToNineShowMagicUserCmd	tmpcode/commond.h	/^	stToNineShowMagicUserCmd()$/;"	f	struct:stToNineShowMagicUserCmd
stToNineShowMagicUserCmd	tmpcode/commond.h	/^struct stToNineShowMagicUserCmd : public stMagicUserCmd$/;"	s
stTodayHasDragonIslandMaze	tmpcode/commond.h	/^	stTodayHasDragonIslandMaze()$/;"	f	struct:stTodayHasDragonIslandMaze
stTodayHasDragonIslandMaze	tmpcode/commond.h	/^struct stTodayHasDragonIslandMaze : public stSpecialUserCmd$/;"	s
stTopicActiveUserCmd	tmpcode/commond.h	/^        stTopicActiveUserCmd()$/;"	f	struct:stTopicActiveUserCmd
stTopicActiveUserCmd	tmpcode/commond.h	/^struct stTopicActiveUserCmd : public stQuestUserCmd$/;"	s
stTotemActionEndCmd	tmpcode/commond.h	/^	stTotemActionEndCmd()$/;"	f	struct:stTotemActionEndCmd
stTotemActionEndCmd	tmpcode/commond.h	/^struct stTotemActionEndCmd : public stResidentBattleCmd$/;"	s
stTradeObject	base/Command.h	/^struct stTradeObject$/;"	s	namespace:Cmd
stTradeObject	tmpcode/commond.h	/^		stTradeObject()$/;"	f	struct:stTradeObject
stTradeObject	tmpcode/commond.h	/^struct stTradeObject$/;"	s
stTradeUserCmd	base/Command.h	/^  stTradeUserCmd()$/;"	f	struct:Cmd::stTradeUserCmd
stTradeUserCmd	base/Command.h	/^struct stTradeUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stTradeUserCmd	tmpcode/commond.h	/^	stTradeUserCmd()$/;"	f	struct:stTradeUserCmd
stTradeUserCmd	tmpcode/commond.h	/^struct stTradeUserCmd : public stNullUserCmd$/;"	s
stTradeYuYinItemCmd	tmpcode/commond.h	/^	stTradeYuYinItemCmd()$/;"	f	struct:stTradeYuYinItemCmd
stTradeYuYinItemCmd	tmpcode/commond.h	/^struct stTradeYuYinItemCmd : public stSoundUserCmd$/;"	s
stTrafficInfo	tmpcode/commond.h	/^	struct stTrafficInfo$/;"	s	struct:stRetTrafficInfoUserCmd
stTransCrystalPropertyUserCmd	tmpcode/commond.h	/^    stTransCrystalPropertyUserCmd()$/;"	f	struct:stTransCrystalPropertyUserCmd
stTransCrystalPropertyUserCmd	tmpcode/commond.h	/^struct stTransCrystalPropertyUserCmd: public stPropertyUserCmd $/;"	s
stTransDareCountryCmd	base/Command.h	/^  stTransDareCountryCmd()$/;"	f	struct:Cmd::stTransDareCountryCmd
stTransDareCountryCmd	base/Command.h	/^struct stTransDareCountryCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stTransferCountryKingToCityMasterCmd	tmpcode/commond.h	/^    stTransferCountryKingToCityMasterCmd()$/;"	f	struct:stTransferCountryKingToCityMasterCmd
stTransferCountryKingToCityMasterCmd	tmpcode/commond.h	/^struct stTransferCountryKingToCityMasterCmd : public stCountryUserCmd$/;"	s
stTransferCountryKingUserCmd	tmpcode/commond.h	/^    stTransferCountryKingUserCmd()$/;"	f	struct:stTransferCountryKingUserCmd
stTransferCountryKingUserCmd	tmpcode/commond.h	/^struct stTransferCountryKingUserCmd : public stCountryUserCmd$/;"	s
stTransferFundStockFetchUserCmd	base/Command.h	/^  stTransferFundStockFetchUserCmd() $/;"	f	struct:Cmd::stTransferFundStockFetchUserCmd
stTransferFundStockFetchUserCmd	base/Command.h	/^struct stTransferFundStockFetchUserCmd : public stStockBillUserCmd$/;"	s	namespace:Cmd
stTransferFundStockFetchUserCmd	tmpcode/commond.h	/^	stTransferFundStockFetchUserCmd()$/;"	f	struct:stTransferFundStockFetchUserCmd
stTransferFundStockFetchUserCmd	tmpcode/commond.h	/^struct stTransferFundStockFetchUserCmd : public stStockBillUserCmd$/;"	s
stTransferFundStockSaveUserCmd	base/Command.h	/^  stTransferFundStockSaveUserCmd() $/;"	f	struct:Cmd::stTransferFundStockSaveUserCmd
stTransferFundStockSaveUserCmd	base/Command.h	/^struct stTransferFundStockSaveUserCmd : public stStockSceneUserCmd$/;"	s	namespace:Cmd
stTransferFundStockSaveUserCmd	tmpcode/commond.h	/^	stTransferFundStockSaveUserCmd()$/;"	f	struct:stTransferFundStockSaveUserCmd
stTransferFundStockSaveUserCmd	tmpcode/commond.h	/^struct stTransferFundStockSaveUserCmd : public stStockSceneUserCmd$/;"	s
stTransferTankDriverPowerCmd	tmpcode/commond.h	/^	stTransferTankDriverPowerCmd()$/;"	f	struct:stTransferTankDriverPowerCmd
stTransferTankDriverPowerCmd	tmpcode/commond.h	/^struct stTransferTankDriverPowerCmd : public stTankUserCmd$/;"	s
stTransportObjectConfigUserCmd	tmpcode/commond.h	/^	stTransportObjectConfigUserCmd()$/;"	f	struct:stTransportObjectConfigUserCmd
stTransportObjectConfigUserCmd	tmpcode/commond.h	/^struct stTransportObjectConfigUserCmd : public stPropertyUserCmd$/;"	s
stTriggerReqMasterUserCmd	tmpcode/commond.h	/^	stTriggerReqMasterUserCmd()$/;"	f	struct:stTriggerReqMasterUserCmd
stTriggerReqMasterUserCmd	tmpcode/commond.h	/^struct stTriggerReqMasterUserCmd : public stRecommendUserCmd$/;"	s
stTriggerReqSponserUserCmd	tmpcode/commond.h	/^	stTriggerReqSponserUserCmd()$/;"	f	struct:stTriggerReqSponserUserCmd
stTriggerReqSponserUserCmd	tmpcode/commond.h	/^struct stTriggerReqSponserUserCmd : public stCallBackUserCmd$/;"	s
stTurnBackMail	base/Command.h	/^  stTurnBackMail()$/;"	f	struct:Cmd::stTurnBackMail
stTurnBackMail	base/Command.h	/^struct stTurnBackMail : public stMailUserCmd$/;"	s	namespace:Cmd
stTurnBackMail	tmpcode/commond.h	/^        stTurnBackMail()$/;"	f	struct:stTurnBackMail
stTurnBackMail	tmpcode/commond.h	/^struct stTurnBackMail : public stMailUserCmd$/;"	s
stUnBindUserToOther	tmpcode/commond.h	/^       stUnBindUserToOther()$/;"	f	struct:stUnBindUserToOther
stUnBindUserToOther	tmpcode/commond.h	/^struct stUnBindUserToOther : public stMapScreenUserCmd$/;"	s
stUnCombinUserCmd	base/Command.h	/^    stUnCombinUserCmd()$/;"	f	struct:Cmd::stUnCombinUserCmd
stUnCombinUserCmd	base/Command.h	/^  struct stUnCombinUserCmd : public stMagicUserCmd{$/;"	s	namespace:Cmd
stUnionAddMemberSuccessCmd	tmpcode/commond.h	/^	stUnionAddMemberSuccessCmd()$/;"	f	struct:stUnionAddMemberSuccessCmd
stUnionAddMemberSuccessCmd	tmpcode/commond.h	/^struct stUnionAddMemberSuccessCmd : public stUnionUserCmd$/;"	s
stUnionAllyUserCmd	tmpcode/commond.h	/^	stUnionAllyUserCmd()$/;"	f	struct:stUnionAllyUserCmd
stUnionAllyUserCmd	tmpcode/commond.h	/^struct stUnionAllyUserCmd: public stNullUserCmd$/;"	s
stUnionAppointMasterCmd	tmpcode/commond.h	/^        stUnionAppointMasterCmd()$/;"	f	struct:stUnionAppointMasterCmd
stUnionAppointMasterCmd	tmpcode/commond.h	/^struct stUnionAppointMasterCmd : public stUnionUserCmd$/;"	s
stUnionBaseInfoCmd	base/Command.h	/^  stUnionBaseInfoCmd()$/;"	f	struct:Cmd::stUnionBaseInfoCmd
stUnionBaseInfoCmd	base/Command.h	/^struct stUnionBaseInfoCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stUnionBaseInfoCmd	tmpcode/commond.h	/^	stUnionBaseInfoCmd()$/;"	f	struct:stUnionBaseInfoCmd
stUnionBaseInfoCmd	tmpcode/commond.h	/^struct stUnionBaseInfoCmd : public stUnionUserCmd$/;"	s
stUnionCityDareUserCmd	tmpcode/commond.h	/^         stUnionCityDareUserCmd()$/;"	f	struct:stUnionCityDareUserCmd
stUnionCityDareUserCmd	tmpcode/commond.h	/^ struct stUnionCityDareUserCmd : public stNullUserCmd$/;"	s
stUnionCloseMerchRoad	tmpcode/commond.h	/^        stUnionCloseMerchRoad()$/;"	f	struct:stUnionCloseMerchRoad
stUnionCloseMerchRoad	tmpcode/commond.h	/^struct stUnionCloseMerchRoad : public stUnionUserCmd$/;"	s
stUnionEnterMap	tmpcode/commond.h	/^	stUnionEnterMap()                                       $/;"	f	struct:stUnionEnterMap
stUnionEnterMap	tmpcode/commond.h	/^struct stUnionEnterMap : public stUnionUserCmd          $/;"	s
stUnionInfo	base/Union.h	/^struct stUnionInfo             \/\/ Êï∞ÊçÆÂ∫ìËØªÂèñÁªìÊûÑÔºåËØ∑‰∏çË¶ÅÈöèÊÑè‰øÆÊîπÔºå‰øÆÊîπÊ≥®ÊÑèÊõ¥Êñ∞ÊâÄÊúâ‰ª£Á†Å$/;"	s	namespace:UnionDef
stUnionMarketDownGood	tmpcode/commond.h	/^	stUnionMarketDownGood()$/;"	f	struct:stUnionMarketDownGood
stUnionMarketDownGood	tmpcode/commond.h	/^struct stUnionMarketDownGood : public stUnionUserCmd$/;"	s
stUnionMemberInfo	base/Union.h	/^struct stUnionMemberInfo                      \/\/ Êï∞ÊçÆÂ∫ìËØªÂèñÁªìÊûÑÔºåËØ∑‰∏çË¶ÅÈöèÊÑè‰øÆÊîπÔºå‰øÆÊîπÊ≥®ÊÑèÊõ¥Êñ∞ÊâÄÊúâ‰ª£Á†Å$/;"	s	namespace:UnionDef
stUnionMemberLeaveUnionCmd	base/Command.h	/^  stUnionMemberLeaveUnionCmd()$/;"	f	struct:Cmd::stUnionMemberLeaveUnionCmd
stUnionMemberLeaveUnionCmd	base/Command.h	/^struct stUnionMemberLeaveUnionCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stUnionMemberLeaveUnionCmd	tmpcode/commond.h	/^	stUnionMemberLeaveUnionCmd()$/;"	f	struct:stUnionMemberLeaveUnionCmd
stUnionMemberLeaveUnionCmd	tmpcode/commond.h	/^struct stUnionMemberLeaveUnionCmd : public stUnionUserCmd$/;"	s
stUnionMemberPower	base/Command.h	/^  stUnionMemberPower()$/;"	f	struct:Cmd::stUnionMemberPower
stUnionMemberPower	base/Command.h	/^struct stUnionMemberPower : public stUnionUserCmd$/;"	s	namespace:Cmd
stUnionMemberPower	tmpcode/commond.h	/^	stUnionMemberPower()$/;"	f	struct:stUnionMemberPower
stUnionMemberPower	tmpcode/commond.h	/^struct stUnionMemberPower : public stUnionUserCmd$/;"	s
stUnionMerchListInfo	tmpcode/commond.h	/^        stUnionMerchListInfo()$/;"	f	struct:stUnionMerchListInfo
stUnionMerchListInfo	tmpcode/commond.h	/^struct stUnionMerchListInfo : public stUnionUserCmd$/;"	s
stUnionMerchMeetingOp	tmpcode/commond.h	/^        stUnionMerchMeetingOp()$/;"	f	struct:stUnionMerchMeetingOp
stUnionMerchMeetingOp	tmpcode/commond.h	/^struct stUnionMerchMeetingOp : public stUnionUserCmd$/;"	s
stUnionMerchRoadInfo	tmpcode/commond.h	/^        stUnionMerchRoadInfo()$/;"	f	struct:stUnionMerchRoadInfo
stUnionMerchRoadInfo	tmpcode/commond.h	/^struct stUnionMerchRoadInfo : public stUnionUserCmd$/;"	s
stUnionObjectPropertyUserCmd	base/Command.h	/^    stUnionObjectPropertyUserCmd()$/;"	f	struct:Cmd::stUnionObjectPropertyUserCmd
stUnionObjectPropertyUserCmd	base/Command.h	/^  struct stUnionObjectPropertyUserCmd : public stPropertyUserCmd{$/;"	s	namespace:Cmd
stUnionOpenMerchRoad	tmpcode/commond.h	/^        stUnionOpenMerchRoad()$/;"	f	struct:stUnionOpenMerchRoad
stUnionOpenMerchRoad	tmpcode/commond.h	/^struct stUnionOpenMerchRoad : public stUnionUserCmd$/;"	s
stUnionPlantUserCmd	tmpcode/commond.h	/^	stUnionPlantUserCmd()$/;"	f	struct:stUnionPlantUserCmd
stUnionPlantUserCmd	tmpcode/commond.h	/^struct stUnionPlantUserCmd : public stNullUserCmd$/;"	s
stUnionRecord	base/Command.h	/^struct stUnionRecord{$/;"	s	namespace:Cmd
stUnionRember	base/Command.h	/^struct stUnionRember{$/;"	s	namespace:Cmd
stUnionRember	tmpcode/commond.h	/^struct stUnionRember{$/;"	s
stUnionResidentHireList	tmpcode/commond.h	/^	stUnionResidentHireList()$/;"	f	struct:stUnionResidentHireList
stUnionResidentHireList	tmpcode/commond.h	/^struct stUnionResidentHireList: public stUnionUserCmd$/;"	s
stUnionResourceAssign	tmpcode/commond.h	/^	stUnionResourceAssign()$/;"	f	struct:stUnionResourceAssign
stUnionResourceAssign	tmpcode/commond.h	/^struct stUnionResourceAssign : public stUnionUserCmd$/;"	s
stUnionSetPositionCmd	tmpcode/commond.h	/^        stUnionSetPositionCmd()$/;"	f	struct:stUnionSetPositionCmd
stUnionSetPositionCmd	tmpcode/commond.h	/^struct stUnionSetPositionCmd : public stUnionUserCmd$/;"	s
stUnionShop	tmpcode/commond.h	/^        stUnionShop()$/;"	f	struct:stUnionShop
stUnionShop	tmpcode/commond.h	/^struct stUnionShop$/;"	s
stUnionShopMeetigInfo	tmpcode/commond.h	/^        stUnionShopMeetigInfo()$/;"	f	struct:stUnionShopMeetigInfo
stUnionShopMeetigInfo	tmpcode/commond.h	/^struct stUnionShopMeetigInfo : public stUnionUserCmd$/;"	s
stUnionSkillUserCmd	tmpcode/commond.h	/^	stUnionSkillUserCmd(const BYTE param) {       $/;"	f	struct:stUnionSkillUserCmd
stUnionSkillUserCmd	tmpcode/commond.h	/^struct stUnionSkillUserCmd : public stNullUserCmd {$/;"	s
stUnionSortInfo	base/Command.h	/^struct stUnionSortInfo$/;"	s	namespace:Cmd
stUnionSortInfo	tmpcode/commond.h	/^struct stUnionSortInfo$/;"	s
stUnionStatusCheckCmd	base/Command.h	/^  stUnionStatusCheckCmd()$/;"	f	struct:Cmd::stUnionStatusCheckCmd
stUnionStatusCheckCmd	base/Command.h	/^struct stUnionStatusCheckCmd  : public stUnionUserCmd$/;"	s	namespace:Cmd
stUnionTakeBackBuild	tmpcode/commond.h	/^	stUnionTakeBackBuild()$/;"	f	struct:stUnionTakeBackBuild
stUnionTakeBackBuild	tmpcode/commond.h	/^struct stUnionTakeBackBuild : public stUnionUserCmd$/;"	s
stUnionTankNameCmd	tmpcode/commond.h	/^	stUnionTankNameCmd()$/;"	f	struct:stUnionTankNameCmd
stUnionTankNameCmd	tmpcode/commond.h	/^struct stUnionTankNameCmd : public stTankUserCmd$/;"	s
stUnionUpBuild	tmpcode/commond.h	/^	stUnionUpBuild()$/;"	f	struct:stUnionUpBuild
stUnionUpBuild	tmpcode/commond.h	/^struct stUnionUpBuild : public stUnionUserCmd   $/;"	s
stUnionUserCmd	base/Command.h	/^  stUnionUserCmd()$/;"	f	struct:Cmd::stUnionUserCmd
stUnionUserCmd	base/Command.h	/^struct stUnionUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stUnionUserCmd	tmpcode/commond.h	/^	stUnionUserCmd()$/;"	f	struct:stUnionUserCmd
stUnionUserCmd	tmpcode/commond.h	/^struct stUnionUserCmd : public stNullUserCmd$/;"	s
stUnionVoteRecord	base/Command.h	/^struct stUnionVoteRecord{$/;"	s	namespace:Cmd
stUnmarryCmd	base/Command.h	/^  stUnmarryCmd()$/;"	f	struct:Cmd::stUnmarryCmd
stUnmarryCmd	base/Command.h	/^struct stUnmarryCmd  : public stRelationUserCmd$/;"	s	namespace:Cmd
stUnmarryCmd	tmpcode/commond.h	/^	stUnmarryCmd()$/;"	f	struct:stUnmarryCmd
stUnmarryCmd	tmpcode/commond.h	/^struct stUnmarryCmd  : public stRelationUserCmd$/;"	s
stUpTechDegreeUserCmd	base/Command.h	/^  stUpTechDegreeUserCmd()$/;"	f	struct:Cmd::stUpTechDegreeUserCmd
stUpTechDegreeUserCmd	base/Command.h	/^struct stUpTechDegreeUserCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stUpdateCountryAlly	base/Command.h	/^  stUpdateCountryAlly()$/;"	f	struct:Cmd::stUpdateCountryAlly
stUpdateCountryAlly	base/Command.h	/^struct stUpdateCountryAlly : public stAllyUserCmd$/;"	s	namespace:Cmd
stUpdateCountryKingUserCmd	base/Command.h	/^  stUpdateCountryKingUserCmd()$/;"	f	struct:Cmd::stUpdateCountryKingUserCmd
stUpdateCountryKingUserCmd	base/Command.h	/^struct stUpdateCountryKingUserCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stUpdateCountryStarCmd	base/Command.h	/^  stUpdateCountryStarCmd()$/;"	f	struct:Cmd::stUpdateCountryStarCmd
stUpdateCountryStarCmd	base/Command.h	/^struct stUpdateCountryStarCmd : public stCountryUserCmd$/;"	s	namespace:Cmd
stUpdateHouseRoomRenQiUserCmd	tmpcode/commond.h	/^	stUpdateHouseRoomRenQiUserCmd()$/;"	f	struct:stUpdateHouseRoomRenQiUserCmd
stUpdateHouseRoomRenQiUserCmd	tmpcode/commond.h	/^struct stUpdateHouseRoomRenQiUserCmd : public stHouseUserCmd$/;"	s
stUpdateIntensifyRageNumUserCmd	tmpcode/commond.h	/^    stUpdateIntensifyRageNumUserCmd()$/;"	f	struct:stUpdateIntensifyRageNumUserCmd
stUpdateIntensifyRageNumUserCmd	tmpcode/commond.h	/^struct stUpdateIntensifyRageNumUserCmd : public stPropertyUserCmd$/;"	s
stUpdateScoreSeptPopoUserCmd	tmpcode/commond.h	/^	stUpdateScoreSeptPopoUserCmd()$/;"	f	struct:stUpdateScoreSeptPopoUserCmd
stUpdateScoreSeptPopoUserCmd	tmpcode/commond.h	/^struct stUpdateScoreSeptPopoUserCmd : public stSeptPopoUserCmd$/;"	s
stUpdateShopAdvcmd	base/Command.h	/^	stUpdateShopAdvcmd()$/;"	f	struct:Cmd::stUpdateShopAdvcmd
stUpdateShopAdvcmd	base/Command.h	/^struct stUpdateShopAdvcmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stUpdateStorePassUserCmd	base/Command.h	/^  stUpdateStorePassUserCmd()$/;"	f	struct:Cmd::stUpdateStorePassUserCmd
stUpdateStorePassUserCmd	base/Command.h	/^struct stUpdateStorePassUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stUpdateStorePassUserCmd	tmpcode/commond.h	/^	stUpdateStorePassUserCmd()$/;"	f	struct:stUpdateStorePassUserCmd
stUpdateStorePassUserCmd	tmpcode/commond.h	/^struct stUpdateStorePassUserCmd:public stTradeUserCmd$/;"	s
stUpdateStoveDataUserCmd	tmpcode/commond.h	/^        stUpdateStoveDataUserCmd()$/;"	f	struct:stUpdateStoveDataUserCmd
stUpdateStoveDataUserCmd	tmpcode/commond.h	/^struct stUpdateStoveDataUserCmd : public stPropertyUserCmd$/;"	s
stUpdateTradeMoneycmd	base/Command.h	/^	stUpdateTradeMoneycmd()$/;"	f	struct:Cmd::stUpdateTradeMoneycmd
stUpdateTradeMoneycmd	base/Command.h	/^struct stUpdateTradeMoneycmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stUpdateUnionAlly	tmpcode/commond.h	/^	stUpdateUnionAlly()$/;"	f	struct:stUpdateUnionAlly
stUpdateUnionAlly	tmpcode/commond.h	/^struct stUpdateUnionAlly: public stUnionAllyUserCmd$/;"	s
stUpgradeFlySkillMagicUserCmd	tmpcode/commond.h	/^	stUpgradeFlySkillMagicUserCmd()$/;"	f	struct:stUpgradeFlySkillMagicUserCmd
stUpgradeFlySkillMagicUserCmd	tmpcode/commond.h	/^struct stUpgradeFlySkillMagicUserCmd : public stMagicUserCmd$/;"	s
stUpgradeGuildManteauUserCmd	tmpcode/commond.h	/^	stUpgradeGuildManteauUserCmd()$/;"	f	struct:stUpgradeGuildManteauUserCmd
stUpgradeGuildManteauUserCmd	tmpcode/commond.h	/^struct stUpgradeGuildManteauUserCmd : public stPropertyUserCmd$/;"	s
stUpgradeItemPropertyUserCmd	base/Command.h	/^    stUpgradeItemPropertyUserCmd() $/;"	f	struct:Cmd::stUpgradeItemPropertyUserCmd
stUpgradeItemPropertyUserCmd	base/Command.h	/^  struct stUpgradeItemPropertyUserCmd : public stPropertyUserCmd {$/;"	s	namespace:Cmd
stUpgradeSoilHouseUserCmd	tmpcode/commond.h	/^	stUpgradeSoilHouseUserCmd()$/;"	f	struct:stUpgradeSoilHouseUserCmd
stUpgradeSoilHouseUserCmd	tmpcode/commond.h	/^struct stUpgradeSoilHouseUserCmd : public stHouseUserCmd$/;"	s
stUpgradeUserSkillPropertyUserCmd	base/Command.h	/^  stUpgradeUserSkillPropertyUserCmd()$/;"	f	struct:Cmd::stUpgradeUserSkillPropertyUserCmd
stUpgradeUserSkillPropertyUserCmd	base/Command.h	/^struct stUpgradeUserSkillPropertyUserCmd : public stPropertyUserCmd$/;"	s	namespace:Cmd
stUseAddRingUserCmd	tmpcode/commond.h	/^    stUseAddRingUserCmd() {$/;"	f	struct:stUseAddRingUserCmd
stUseAddRingUserCmd	tmpcode/commond.h	/^struct stUseAddRingUserCmd : public stPropertyUserCmd {$/;"	s
stUseBugleObjSayToWorldUserCmd	tmpcode/commond.h	/^	stUseBugleObjSayToWorldUserCmd()$/;"	f	struct:stUseBugleObjSayToWorldUserCmd
stUseBugleObjSayToWorldUserCmd	tmpcode/commond.h	/^struct stUseBugleObjSayToWorldUserCmd : public stPropertyUserCmd$/;"	s
stUseCanSelectScrollPropertyUserCmd	tmpcode/commond.h	/^	stUseCanSelectScrollPropertyUserCmd() $/;"	f	struct:stUseCanSelectScrollPropertyUserCmd
stUseCanSelectScrollPropertyUserCmd	tmpcode/commond.h	/^struct stUseCanSelectScrollPropertyUserCmd : public stPropertyUserCmd {$/;"	s
stUseElecHammerUserCmd	tmpcode/commond.h	/^    stUseElecHammerUserCmd() {$/;"	f	struct:stUseElecHammerUserCmd
stUseElecHammerUserCmd	tmpcode/commond.h	/^struct stUseElecHammerUserCmd : public stPropertyUserCmd {$/;"	s
stUseHorseTaoDiUserCmd	tmpcode/commond.h	/^    stUseHorseTaoDiUserCmd()$/;"	f	struct:stUseHorseTaoDiUserCmd
stUseHorseTaoDiUserCmd	tmpcode/commond.h	/^struct stUseHorseTaoDiUserCmd : public stPropertyUserCmd$/;"	s
stUseJobTokenPropertyUserCmd	tmpcode/commond.h	/^	stUseJobTokenPropertyUserCmd()$/;"	f	struct:stUseJobTokenPropertyUserCmd
stUseJobTokenPropertyUserCmd	tmpcode/commond.h	/^struct stUseJobTokenPropertyUserCmd : public stPropertyUserCmd$/;"	s
stUseMainPowerTankDamageCmd	tmpcode/commond.h	/^	stUseMainPowerTankDamageCmd()$/;"	f	struct:stUseMainPowerTankDamageCmd
stUseMainPowerTankDamageCmd	tmpcode/commond.h	/^struct stUseMainPowerTankDamageCmd : public stTankUserCmd$/;"	s
stUseNewBoxPropertyUserCmd	tmpcode/commond.h	/^	stUseNewBoxPropertyUserCmd()$/;"	f	struct:stUseNewBoxPropertyUserCmd
stUseNewBoxPropertyUserCmd	tmpcode/commond.h	/^struct stUseNewBoxPropertyUserCmd : public stPropertyUserCmd$/;"	s
stUseObjectPropertyUserCmd	base/Command.h	/^    stUseObjectPropertyUserCmd()$/;"	f	struct:Cmd::stUseObjectPropertyUserCmd
stUseObjectPropertyUserCmd	base/Command.h	/^  struct stUseObjectPropertyUserCmd : public  stPropertyUserCmd{$/;"	s	namespace:Cmd
stUseObjectPropertyUserCmd	tmpcode/commond.h	/^	stUseObjectPropertyUserCmd()$/;"	f	struct:stUseObjectPropertyUserCmd
stUseObjectPropertyUserCmd	tmpcode/commond.h	/^struct stUseObjectPropertyUserCmd : public  stPropertyUserCmd{$/;"	s
stUseObjectScrollPropertyUserCmd	tmpcode/commond.h	/^	stUseObjectScrollPropertyUserCmd()$/;"	f	struct:stUseObjectScrollPropertyUserCmd
stUseObjectScrollPropertyUserCmd	tmpcode/commond.h	/^struct stUseObjectScrollPropertyUserCmd : public stPropertyUserCmd {$/;"	s
stUseRageNumUpgradeUserCmd	tmpcode/commond.h	/^    stUseRageNumUpgradeUserCmd()$/;"	f	struct:stUseRageNumUpgradeUserCmd
stUseRageNumUpgradeUserCmd	tmpcode/commond.h	/^struct stUseRageNumUpgradeUserCmd : public stPropertyUserCmd$/;"	s
stUseScrollUpPropertyUserCmd	tmpcode/commond.h	/^    stUseScrollUpPropertyUserCmd()$/;"	f	struct:stUseScrollUpPropertyUserCmd
stUseScrollUpPropertyUserCmd	tmpcode/commond.h	/^struct stUseScrollUpPropertyUserCmd : public stPropertyUserCmd$/;"	s
stUseStarStoneUserCmd	tmpcode/commond.h	/^    stUseStarStoneUserCmd() {$/;"	f	struct:stUseStarStoneUserCmd
stUseStarStoneUserCmd	tmpcode/commond.h	/^struct stUseStarStoneUserCmd : public stPropertyUserCmd {$/;"	s
stUseTransportObjectUserCmd	tmpcode/commond.h	/^	stUseTransportObjectUserCmd()$/;"	f	struct:stUseTransportObjectUserCmd
stUseTransportObjectUserCmd	tmpcode/commond.h	/^struct stUseTransportObjectUserCmd : public stPropertyUserCmd$/;"	s
stUserBattfieldData	ScenesServer/SceneUser.h	/^	stUserBattfieldData()$/;"	f	struct:stUserBattfieldData
stUserBattfieldData	ScenesServer/SceneUser.h	/^struct stUserBattfieldData$/;"	s
stUserEffectCmd	tmpcode/commond.h	/^    stUserEffectCmd()$/;"	f	struct:stUserEffectCmd
stUserEffectCmd	tmpcode/commond.h	/^struct stUserEffectCmd : public stDataUserCmd$/;"	s
stUserFullEffectCmd	tmpcode/commond.h	/^    stUserFullEffectCmd()$/;"	f	struct:stUserFullEffectCmd
stUserFullEffectCmd	tmpcode/commond.h	/^struct stUserFullEffectCmd : public stDataUserCmd$/;"	s
stUserFullModelCmd	tmpcode/commond.h	/^    stUserFullModelCmd()$/;"	f	struct:stUserFullModelCmd
stUserFullModelCmd	tmpcode/commond.h	/^struct stUserFullModelCmd : public stDataUserCmd$/;"	s
stUserGameTimeTimerUserCmd	base/Command.h	/^  stUserGameTimeTimerUserCmd()$/;"	f	struct:Cmd::stUserGameTimeTimerUserCmd
stUserGameTimeTimerUserCmd	base/Command.h	/^struct stUserGameTimeTimerUserCmd : public stTimerUserCmd$/;"	s	namespace:Cmd
stUserGameTimeTimerUserCmd	tmpcode/commond.h	/^	stUserGameTimeTimerUserCmd()$/;"	f	struct:stUserGameTimeTimerUserCmd
stUserGameTimeTimerUserCmd	tmpcode/commond.h	/^struct stUserGameTimeTimerUserCmd : public stTimerUserCmd$/;"	s
stUserGotoMapMoveUserCmd	base/Command.h	/^  stUserGotoMapMoveUserCmd()$/;"	f	struct:Cmd::stUserGotoMapMoveUserCmd
stUserGotoMapMoveUserCmd	base/Command.h	/^struct stUserGotoMapMoveUserCmd : public stMoveUserCmd$/;"	s	namespace:Cmd
stUserInfoUserCmd	base/Command.h	/^  stUserInfoUserCmd()$/;"	f	struct:Cmd::stUserInfoUserCmd
stUserInfoUserCmd	base/Command.h	/^struct stUserInfoUserCmd : public stSelectUserCmd$/;"	s	namespace:Cmd
stUserInfoUserCmd	tmpcode/commond.h	/^   stUserInfoUserCmd()$/;"	f	struct:stUserInfoUserCmd
stUserInfoUserCmd	tmpcode/commond.h	/^struct stUserInfoUserCmd : public stSelectUserCmd$/;"	s
stUserInstantJumpMoveUserCmd	base/Command.h	/^    stUserInstantJumpMoveUserCmd()$/;"	f	struct:Cmd::stUserInstantJumpMoveUserCmd
stUserInstantJumpMoveUserCmd	base/Command.h	/^  struct stUserInstantJumpMoveUserCmd : public stMoveUserCmd{$/;"	s	namespace:Cmd
stUserInstantJumpMoveUserCmd	tmpcode/commond.h	/^	stUserInstantJumpMoveUserCmd()$/;"	f	struct:stUserInstantJumpMoveUserCmd
stUserInstantJumpMoveUserCmd	tmpcode/commond.h	/^struct stUserInstantJumpMoveUserCmd : public stMoveUserCmd$/;"	s
stUserListTankCmd	tmpcode/commond.h	/^	stUserListTankCmd()$/;"	f	struct:stUserListTankCmd
stUserListTankCmd	tmpcode/commond.h	/^struct stUserListTankCmd : public stTankUserCmd$/;"	s
stUserModelCmd	tmpcode/commond.h	/^    stUserModelCmd()$/;"	f	struct:stUserModelCmd
stUserModelCmd	tmpcode/commond.h	/^struct stUserModelCmd : public stDataUserCmd$/;"	s
stUserMoveMoveUserCmd	base/Command.h	/^    stUserMoveMoveUserCmd()$/;"	f	struct:Cmd::stUserMoveMoveUserCmd
stUserMoveMoveUserCmd	base/Command.h	/^  struct stUserMoveMoveUserCmd : public stMoveUserCmd {$/;"	s	namespace:Cmd
stUserMoveMoveUserCmd	tmpcode/commond.h	/^	stUserMoveMoveUserCmd()$/;"	f	struct:stUserMoveMoveUserCmd
stUserMoveMoveUserCmd	tmpcode/commond.h	/^struct stUserMoveMoveUserCmd : public stMoveUserCmd $/;"	s
stUserPerformInfo	tmpcode/commond.h	/^	stUserPerformInfo()$/;"	f	struct:stUserPerformInfo
stUserPerformInfo	tmpcode/commond.h	/^struct stUserPerformInfo$/;"	s
stUserRefrainLoginCmd	base/Command.h	/^  stUserRefrainLoginCmd()$/;"	f	struct:Cmd::stUserRefrainLoginCmd
stUserRefrainLoginCmd	base/Command.h	/^struct stUserRefrainLoginCmd : public stLogonUserCmd$/;"	s	namespace:Cmd
stUserRequestLoginCmd	base/Command.h	/^  stUserRequestLoginCmd()$/;"	f	struct:Cmd::stUserRequestLoginCmd
stUserRequestLoginCmd	base/Command.h	/^struct stUserRequestLoginCmd : public stLogonUserCmd$/;"	s	namespace:Cmd
stUserRequestLoginCmd	tmpcode/commond.h	/^	stUserRequestLoginCmd()$/;"	f	struct:stUserRequestLoginCmd
stUserRequestLoginCmd	tmpcode/commond.h	/^struct stUserRequestLoginCmd : public stLogonUserCmd$/;"	s
stUserRequestMtcardCmd	tmpcode/commond.h	/^	stUserRequestMtcardCmd()$/;"	f	struct:stUserRequestMtcardCmd
stUserRequestMtcardCmd	tmpcode/commond.h	/^struct stUserRequestMtcardCmd : public stLogonUserCmd$/;"	s
stUserVerifyVerCmd	base/Command.h	/^  stUserVerifyVerCmd()$/;"	f	struct:Cmd::stUserVerifyVerCmd
stUserVerifyVerCmd	base/Command.h	/^struct stUserVerifyVerCmd  : public stLogonUserCmd$/;"	s	namespace:Cmd
stUserVerifyVerCmd	tmpcode/commond.h	/^	stUserVerifyVerCmd()$/;"	f	struct:stUserVerifyVerCmd
stUserVerifyVerCmd	tmpcode/commond.h	/^struct stUserVerifyVerCmd  : public stLogonUserCmd$/;"	s
stVisitAltarTradeUserCmd	tmpcode/commond.h	/^        stVisitAltarTradeUserCmd()$/;"	f	struct:stVisitAltarTradeUserCmd
stVisitAltarTradeUserCmd	tmpcode/commond.h	/^struct stVisitAltarTradeUserCmd : public stTradeUserCmd$/;"	s
stVisitFlagSCUserCmd	tmpcode/commond.h	/^	stVisitFlagSCUserCmd()$/;"	f	struct:stVisitFlagSCUserCmd
stVisitFlagSCUserCmd	tmpcode/commond.h	/^struct stVisitFlagSCUserCmd : public stSeptCompeteUserCmd$/;"	s
stVisitMaxLevelMapNpcUserCmd	tmpcode/commond.h	/^	stVisitMaxLevelMapNpcUserCmd()$/;"	f	struct:stVisitMaxLevelMapNpcUserCmd
stVisitMaxLevelMapNpcUserCmd	tmpcode/commond.h	/^struct stVisitMaxLevelMapNpcUserCmd : public stTradeUserCmd$/;"	s
stVisitNpcMobileShopUserCmd	tmpcode/commond.h	/^	stVisitNpcMobileShopUserCmd()$/;"	f	struct:stVisitNpcMobileShopUserCmd
stVisitNpcMobileShopUserCmd	tmpcode/commond.h	/^struct stVisitNpcMobileShopUserCmd :public stTradeUserCmd$/;"	s
stVisitNpcTradeUserCmd	base/Command.h	/^  stVisitNpcTradeUserCmd()$/;"	f	struct:Cmd::stVisitNpcTradeUserCmd
stVisitNpcTradeUserCmd	base/Command.h	/^struct stVisitNpcTradeUserCmd:public stTradeUserCmd$/;"	s	namespace:Cmd
stVisitNpcTradeUserCmd	tmpcode/commond.h	/^	stVisitNpcTradeUserCmd()$/;"	f	struct:stVisitNpcTradeUserCmd
stVisitNpcTradeUserCmd	tmpcode/commond.h	/^struct stVisitNpcTradeUserCmd:public stTradeUserCmd$/;"	s
stVisitQuestMapFeiLongNpcUserCmd	tmpcode/commond.h	/^    stVisitQuestMapFeiLongNpcUserCmd()$/;"	f	struct:stVisitQuestMapFeiLongNpcUserCmd
stVisitQuestMapFeiLongNpcUserCmd	tmpcode/commond.h	/^struct stVisitQuestMapFeiLongNpcUserCmd : public stTradeUserCmd$/;"	s
stVisitZhongLiCityTradeUserCmd	tmpcode/commond.h	/^	stVisitZhongLiCityTradeUserCmd()$/;"	f	struct:stVisitZhongLiCityTradeUserCmd
stVisitZhongLiCityTradeUserCmd	tmpcode/commond.h	/^struct stVisitZhongLiCityTradeUserCmd : public stTradeUserCmd$/;"	s
stVoteInChallengeDragonUserCmd	tmpcode/commond.h	/^	stVoteInChallengeDragonUserCmd()$/;"	f	struct:stVoteInChallengeDragonUserCmd
stVoteInChallengeDragonUserCmd	tmpcode/commond.h	/^struct stVoteInChallengeDragonUserCmd : public stDragonUserCmd$/;"	s
stVoteItem	base/Command.h	/^struct stVoteItem$/;"	s	namespace:Cmd
stVoteListSeptCmd	base/Command.h	/^  stVoteListSeptCmd()$/;"	f	struct:Cmd::stVoteListSeptCmd
stVoteListSeptCmd	base/Command.h	/^struct stVoteListSeptCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stVoteListUnionCmd	base/Command.h	/^  stVoteListUnionCmd()$/;"	f	struct:Cmd::stVoteListUnionCmd
stVoteListUnionCmd	base/Command.h	/^struct stVoteListUnionCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stVoteSeptCmd	base/Command.h	/^  stVoteSeptCmd()$/;"	f	struct:Cmd::stVoteSeptCmd
stVoteSeptCmd	base/Command.h	/^struct stVoteSeptCmd : public stSeptUserCmd$/;"	s	namespace:Cmd
stVoteUnionCmd	base/Command.h	/^  stVoteUnionCmd()$/;"	f	struct:Cmd::stVoteUnionCmd
stVoteUnionCmd	base/Command.h	/^struct stVoteUnionCmd : public stUnionUserCmd$/;"	s	namespace:Cmd
stVoteUserCmd	base/Command.h	/^    stVoteUserCmd()$/;"	f	struct:Cmd::stVoteUserCmd
stVoteUserCmd	base/Command.h	/^struct stVoteUserCmd : public stNullUserCmd$/;"	s	namespace:Cmd
stWMSwitchMagicUserCmd	tmpcode/commond.h	/^	stWMSwitchMagicUserCmd()$/;"	f	struct:stWMSwitchMagicUserCmd
stWMSwitchMagicUserCmd	tmpcode/commond.h	/^struct stWMSwitchMagicUserCmd : public stMagicUserCmd$/;"	s
stWaitCountryUserCmd	tmpcode/commond.h	/^	stWaitCountryUserCmd()  $/;"	f	struct:stWaitCountryUserCmd
stWaitCountryUserCmd	tmpcode/commond.h	/^struct stWaitCountryUserCmd : public stSelectUserCmd$/;"	s
stWaitGenItem	base/Command.h	/^struct stWaitGenItem$/;"	s	namespace:Cmd
stWaitOfficialItem	base/Command.h	/^struct stWaitOfficialItem$/;"	s	namespace:Cmd
stWatchDragonUserCmd	tmpcode/commond.h	/^        stWatchDragonUserCmd()$/;"	f	struct:stWatchDragonUserCmd
stWatchDragonUserCmd	tmpcode/commond.h	/^struct stWatchDragonUserCmd : public stDragonUserCmd$/;"	s
stWatchFriendStoveUserCmd	tmpcode/commond.h	/^        stWatchFriendStoveUserCmd()$/;"	f	struct:stWatchFriendStoveUserCmd
stWatchFriendStoveUserCmd	tmpcode/commond.h	/^struct stWatchFriendStoveUserCmd : public stPropertyUserCmd$/;"	s
stWatchFriendUserCmd	tmpcode/commond.h	/^	stWatchFriendUserCmd()$/;"	f	struct:stWatchFriendUserCmd
stWatchFriendUserCmd	tmpcode/commond.h	/^struct stWatchFriendUserCmd : public stRelationUserCmd$/;"	s
stWatchLingQiUserCmd	tmpcode/commond.h	/^    stWatchLingQiUserCmd()$/;"	f	struct:stWatchLingQiUserCmd
stWatchLingQiUserCmd	tmpcode/commond.h	/^struct stWatchLingQiUserCmd : public stLingQiUserCmd$/;"	s
stWatcherExpressWeekendZhenxuanUserCmd	tmpcode/commond.h	/^	stWatcherExpressWeekendZhenxuanUserCmd()$/;"	f	struct:stWatcherExpressWeekendZhenxuanUserCmd
stWatcherExpressWeekendZhenxuanUserCmd	tmpcode/commond.h	/^struct stWatcherExpressWeekendZhenxuanUserCmd: public stZhenxuanJingjiUserCmd$/;"	s
stWatcherNumChallengeUserCmd	tmpcode/commond.h	/^	stWatcherNumChallengeUserCmd()$/;"	f	struct:stWatcherNumChallengeUserCmd
stWatcherNumChallengeUserCmd	tmpcode/commond.h	/^struct stWatcherNumChallengeUserCmd : public stChallengeGameUserCmd$/;"	s
stWaterSoilHouseUserCmd	tmpcode/commond.h	/^	stWaterSoilHouseUserCmd()$/;"	f	struct:stWaterSoilHouseUserCmd
stWaterSoilHouseUserCmd	tmpcode/commond.h	/^struct stWaterSoilHouseUserCmd: public stHouseUserCmd$/;"	s
stWeekBoxUserCmd	tmpcode/commond.h	/^    stWeekBoxUserCmd()$/;"	f	struct:stWeekBoxUserCmd
stWeekBoxUserCmd	tmpcode/commond.h	/^struct stWeekBoxUserCmd: public stNullUserCmd$/;"	s
stWeekSalaryOperationUnionCmd	tmpcode/commond.h	/^   stWeekSalaryOperationUnionCmd( )$/;"	f	struct:stWeekSalaryOperationUnionCmd
stWeekSalaryOperationUnionCmd	tmpcode/commond.h	/^struct stWeekSalaryOperationUnionCmd : public stUnionUserCmd$/;"	s
stWenMingNCUserCmd	tmpcode/commond.h	/^	stWenMingNCUserCmd()$/;"	f	struct:stWenMingNCUserCmd
stWenMingNCUserCmd	tmpcode/commond.h	/^struct stWenMingNCUserCmd: public stNullUserCmd$/;"	s
stWinnerGift	base/Command.h	/^  stWinnerGift()$/;"	f	struct:Cmd::stWinnerGift
stWinnerGift	base/Command.h	/^struct stWinnerGift : public stGiftUserCmd$/;"	s	namespace:Cmd
stWinnerGift	tmpcode/commond.h	/^        stWinnerGift()$/;"	f	struct:stWinnerGift
stWinnerGift	tmpcode/commond.h	/^struct stWinnerGift : public stGiftUserCmd$/;"	s
stWorldCupAct	tmpcode/commond.h	/^    stWorldCupAct()$/;"	f	struct:stWorldCupAct
stWorldCupAct	tmpcode/commond.h	/^struct stWorldCupAct : public stMapScreenUserCmd$/;"	s
stWorldCupGiftBagPropertyUserCmd	tmpcode/commond.h	/^	stWorldCupGiftBagPropertyUserCmd()$/;"	f	struct:stWorldCupGiftBagPropertyUserCmd
stWorldCupGiftBagPropertyUserCmd	tmpcode/commond.h	/^struct stWorldCupGiftBagPropertyUserCmd : public stPropertyUserCmd$/;"	s
stWriteSkillBookUserCmd	tmpcode/commond.h	/^	stWriteSkillBookUserCmd()$/;"	f	struct:stWriteSkillBookUserCmd
stWriteSkillBookUserCmd	tmpcode/commond.h	/^struct stWriteSkillBookUserCmd : public stPropertyUserCmd$/;"	s
stYingZhuanSwitchMagicUserCmd	tmpcode/commond.h	/^	stYingZhuanSwitchMagicUserCmd()$/;"	f	struct:stYingZhuanSwitchMagicUserCmd
stYingZhuanSwitchMagicUserCmd	tmpcode/commond.h	/^struct stYingZhuanSwitchMagicUserCmd : public stMagicUserCmd$/;"	s
stYueMoUserCmd	tmpcode/commond.h	/^	stYueMoUserCmd()$/;"	f	struct:stYueMoUserCmd
stYueMoUserCmd	tmpcode/commond.h	/^struct stYueMoUserCmd: public stNullUserCmd$/;"	s
stZYZUserCmd	tmpcode/commond.h	/^	stZYZUserCmd()$/;"	f	struct:stZYZUserCmd
stZYZUserCmd	tmpcode/commond.h	/^struct stZYZUserCmd : public stNullUserCmd$/;"	s
stZhanWuSwitchMagicUserCmd	tmpcode/commond.h	/^	stZhanWuSwitchMagicUserCmd()$/;"	f	struct:stZhanWuSwitchMagicUserCmd
stZhanWuSwitchMagicUserCmd	tmpcode/commond.h	/^struct stZhanWuSwitchMagicUserCmd : public stMagicUserCmd$/;"	s
stZhenxuanJingjiUserCmd	tmpcode/commond.h	/^	stZhenxuanJingjiUserCmd()$/;"	f	struct:stZhenxuanJingjiUserCmd
stZhenxuanJingjiUserCmd	tmpcode/commond.h	/^struct stZhenxuanJingjiUserCmd : public stNullUserCmd$/;"	s
stZhongLiCityDist	tmpcode/commond.h	/^    stZhongLiCityDist()$/;"	f	struct:stZhongLiCityDist
stZhongLiCityDist	tmpcode/commond.h	/^struct stZhongLiCityDist$/;"	s
stZhongLiCityHomeMenu	tmpcode/commond.h	/^    stZhongLiCityHomeMenu()$/;"	f	struct:stZhongLiCityHomeMenu
stZhongLiCityHomeMenu	tmpcode/commond.h	/^struct stZhongLiCityHomeMenu : public stMapScreenUserCmd$/;"	s
stZhongLiCityInfo	tmpcode/commond.h	/^    stZhongLiCityInfo()$/;"	f	struct:stZhongLiCityInfo
stZhongLiCityInfo	tmpcode/commond.h	/^struct stZhongLiCityInfo : public stMapScreenUserCmd$/;"	s
stZhongLiCityList	tmpcode/commond.h	/^    stZhongLiCityList()$/;"	f	struct:stZhongLiCityList
stZhongLiCityList	tmpcode/commond.h	/^struct stZhongLiCityList : public stMapScreenUserCmd$/;"	s
stZhongLiCityLive	tmpcode/commond.h	/^	stZhongLiCityLive()$/;"	f	struct:stZhongLiCityLive
stZhongLiCityLive	tmpcode/commond.h	/^struct stZhongLiCityLive : public stMapScreenUserCmd$/;"	s
stZhongLiCityTime	tmpcode/commond.h	/^    stZhongLiCityTime()$/;"	f	struct:stZhongLiCityTime
stZhongLiCityTime	tmpcode/commond.h	/^struct stZhongLiCityTime : public stMapScreenUserCmd$/;"	s
st_BanishRoomerHouseUserCmd	tmpcode/commond.h	/^	st_BanishRoomerHouseUserCmd()$/;"	f	struct:st_BanishRoomerHouseUserCmd
st_BanishRoomerHouseUserCmd	tmpcode/commond.h	/^struct st_BanishRoomerHouseUserCmd : public stHouseUserCmd$/;"	s
st_BroadcastBanishRoomerHouseUserCmd	tmpcode/commond.h	/^	st_BroadcastBanishRoomerHouseUserCmd()$/;"	f	struct:st_BroadcastBanishRoomerHouseUserCmd
st_BroadcastBanishRoomerHouseUserCmd	tmpcode/commond.h	/^struct st_BroadcastBanishRoomerHouseUserCmd : public stHouseUserCmd$/;"	s
st_BroadcastUserApplyHouseUserCmd	tmpcode/commond.h	/^	st_BroadcastUserApplyHouseUserCmd()$/;"	f	struct:st_BroadcastUserApplyHouseUserCmd
st_BroadcastUserApplyHouseUserCmd	tmpcode/commond.h	/^struct st_BroadcastUserApplyHouseUserCmd : public stHouseUserCmd$/;"	s
st_CancelConscribeHouseUserCmd	tmpcode/commond.h	/^	st_CancelConscribeHouseUserCmd()$/;"	f	struct:st_CancelConscribeHouseUserCmd
st_CancelConscribeHouseUserCmd	tmpcode/commond.h	/^struct st_CancelConscribeHouseUserCmd : public stHouseUserCmd$/;"	s
st_CharShow2	tmpcode/commond.h	/^	st_CharShow2()$/;"	f	struct:st_CharShow2
st_CharShow2	tmpcode/commond.h	/^	st_CharShow2(const stAddUserAndPosMapScreenStateUserCmd* cmd) \/\/send me to nine$/;"	f	struct:st_CharShow2
st_CharShow2	tmpcode/commond.h	/^	st_CharShow2(const stMapDataMapScreenUserCmd* cmd,int ii)\/\/send nine to me$/;"	f	struct:st_CharShow2
st_CharShow2	tmpcode/commond.h	/^struct st_CharShow2 $/;"	s
st_ConscribeRoomerHouseUserCmd	tmpcode/commond.h	/^	st_ConscribeRoomerHouseUserCmd()$/;"	f	struct:st_ConscribeRoomerHouseUserCmd
st_ConscribeRoomerHouseUserCmd	tmpcode/commond.h	/^struct st_ConscribeRoomerHouseUserCmd : public stHouseUserCmd$/;"	s
st_DriveAwayHouseUserCmd	tmpcode/commond.h	/^	st_DriveAwayHouseUserCmd()$/;"	f	struct:st_DriveAwayHouseUserCmd
st_DriveAwayHouseUserCmd	tmpcode/commond.h	/^struct st_DriveAwayHouseUserCmd : public stHouseUserCmd$/;"	s
st_LevelUpNeedThingHouseUserCmd	tmpcode/commond.h	/^	st_LevelUpNeedThingHouseUserCmd()$/;"	f	struct:st_LevelUpNeedThingHouseUserCmd
st_LevelUpNeedThingHouseUserCmd	tmpcode/commond.h	/^struct st_LevelUpNeedThingHouseUserCmd : public stHouseUserCmd$/;"	s
st_MoveItemStoreHouseUserCmd	tmpcode/commond.h	/^	st_MoveItemStoreHouseUserCmd()$/;"	f	struct:st_MoveItemStoreHouseUserCmd
st_MoveItemStoreHouseUserCmd	tmpcode/commond.h	/^struct st_MoveItemStoreHouseUserCmd : public stHouseUserCmd$/;"	s
st_PlaceObjectHouseUserCmd	tmpcode/commond.h	/^	st_PlaceObjectHouseUserCmd()$/;"	f	struct:st_PlaceObjectHouseUserCmd
st_PlaceObjectHouseUserCmd	tmpcode/commond.h	/^struct st_PlaceObjectHouseUserCmd : public stHouseUserCmd$/;"	s
st_PutItemStoreHouseUserCmd	tmpcode/commond.h	/^	st_PutItemStoreHouseUserCmd()$/;"	f	struct:st_PutItemStoreHouseUserCmd
st_PutItemStoreHouseUserCmd	tmpcode/commond.h	/^struct st_PutItemStoreHouseUserCmd : public stHouseUserCmd$/;"	s
st_QuitClock	tmpcode/commond.h	/^	st_QuitClock()$/;"	f	struct:st_QuitClock
st_QuitClock	tmpcode/commond.h	/^struct st_QuitClock:public stDataUserCmd$/;"	s
st_RejectApplyRoomerHouseUserCmd	tmpcode/commond.h	/^	st_RejectApplyRoomerHouseUserCmd()$/;"	f	struct:st_RejectApplyRoomerHouseUserCmd
st_RejectApplyRoomerHouseUserCmd	tmpcode/commond.h	/^struct st_RejectApplyRoomerHouseUserCmd : public stHouseUserCmd$/;"	s
st_RejectBanishRoomerHouseUserCmd	tmpcode/commond.h	/^	st_RejectBanishRoomerHouseUserCmd()$/;"	f	struct:st_RejectBanishRoomerHouseUserCmd
st_RejectBanishRoomerHouseUserCmd	tmpcode/commond.h	/^struct st_RejectBanishRoomerHouseUserCmd : public stHouseUserCmd$/;"	s
st_RemoveHorseSoulUserCmd	tmpcode/commond.h	/^	st_RemoveHorseSoulUserCmd()$/;"	f	struct:st_RemoveHorseSoulUserCmd
st_RemoveHorseSoulUserCmd	tmpcode/commond.h	/^struct st_RemoveHorseSoulUserCmd : public stPetUserCmd$/;"	s
st_RequestLevelUpHouseUserCmd	tmpcode/commond.h	/^	st_RequestLevelUpHouseUserCmd()$/;"	f	struct:st_RequestLevelUpHouseUserCmd
st_RequestLevelUpHouseUserCmd	tmpcode/commond.h	/^struct st_RequestLevelUpHouseUserCmd : public stHouseUserCmd$/;"	s
st_RequestManageHouseUserCmd	tmpcode/commond.h	/^	st_RequestManageHouseUserCmd()$/;"	f	struct:st_RequestManageHouseUserCmd
st_RequestManageHouseUserCmd	tmpcode/commond.h	/^struct st_RequestManageHouseUserCmd : public stHouseUserCmd$/;"	s
st_RequestRentHouseUserCmd	tmpcode/commond.h	/^	st_RequestRentHouseUserCmd()$/;"	f	struct:st_RequestRentHouseUserCmd
st_RequestRentHouseUserCmd	tmpcode/commond.h	/^struct st_RequestRentHouseUserCmd : public stHouseUserCmd$/;"	s
st_RequestRoomerNameHouseUserCmd	tmpcode/commond.h	/^	st_RequestRoomerNameHouseUserCmd()$/;"	f	struct:st_RequestRoomerNameHouseUserCmd
st_RequestRoomerNameHouseUserCmd	tmpcode/commond.h	/^struct st_RequestRoomerNameHouseUserCmd : public stHouseUserCmd$/;"	s
st_RetManageHouseUserCmd	tmpcode/commond.h	/^	st_RetManageHouseUserCmd()$/;"	f	struct:st_RetManageHouseUserCmd
st_RetManageHouseUserCmd	tmpcode/commond.h	/^struct st_RetManageHouseUserCmd : public stHouseUserCmd$/;"	s
st_RetRentHouseUserCmd	tmpcode/commond.h	/^	st_RetRentHouseUserCmd()$/;"	f	struct:st_RetRentHouseUserCmd
st_RetRentHouseUserCmd	tmpcode/commond.h	/^struct st_RetRentHouseUserCmd : public stHouseUserCmd$/;"	s
st_RetRoomerNameHouseUserCmd	tmpcode/commond.h	/^	st_RetRoomerNameHouseUserCmd()$/;"	f	struct:st_RetRoomerNameHouseUserCmd
st_RetRoomerNameHouseUserCmd	tmpcode/commond.h	/^struct st_RetRoomerNameHouseUserCmd : public stHouseUserCmd$/;"	s
st_SendFlowerNoExpDataUserCmd	tmpcode/commond.h	/^	st_SendFlowerNoExpDataUserCmd()$/;"	f	struct:st_SendFlowerNoExpDataUserCmd
st_SendFlowerNoExpDataUserCmd	tmpcode/commond.h	/^struct st_SendFlowerNoExpDataUserCmd : stDataUserCmd$/;"	s
st_StorageMoneyHouseUserCmd	tmpcode/commond.h	/^	st_StorageMoneyHouseUserCmd()$/;"	f	struct:st_StorageMoneyHouseUserCmd
st_StorageMoneyHouseUserCmd	tmpcode/commond.h	/^struct st_StorageMoneyHouseUserCmd : public stHouseUserCmd$/;"	s
st_StoreItemHouseUserCmd	tmpcode/commond.h	/^	st_StoreItemHouseUserCmd()$/;"	f	struct:st_StoreItemHouseUserCmd
st_StoreItemHouseUserCmd	tmpcode/commond.h	/^struct st_StoreItemHouseUserCmd : public stHouseUserCmd$/;"	s
st_StoreLogHouseUserCmd	tmpcode/commond.h	/^	st_StoreLogHouseUserCmd()$/;"	f	struct:st_StoreLogHouseUserCmd
st_StoreLogHouseUserCmd	tmpcode/commond.h	/^struct st_StoreLogHouseUserCmd : public stHouseUserCmd$/;"	s
st_TakeOutItemStoreHouseUserCmd	tmpcode/commond.h	/^	st_TakeOutItemStoreHouseUserCmd()$/;"	f	struct:st_TakeOutItemStoreHouseUserCmd
st_TakeOutItemStoreHouseUserCmd	tmpcode/commond.h	/^struct st_TakeOutItemStoreHouseUserCmd : public stHouseUserCmd$/;"	s
st_WatchPlayer	tmpcode/commond.h	/^	st_WatchPlayer(const stNullUserCmd* pCmd)$/;"	f	struct:st_WatchPlayer
st_WatchPlayer	tmpcode/commond.h	/^struct  st_WatchPlayer$/;"	s
st_rtShenYuCardOptionUserCmd	tmpcode/commond.h	/^    st_rtShenYuCardOptionUserCmd()$/;"	f	struct:st_rtShenYuCardOptionUserCmd
st_rtShenYuCardOptionUserCmd	tmpcode/commond.h	/^struct st_rtShenYuCardOptionUserCmd:public stMapScreenUserCmd$/;"	s
st_rt_DestroyObjectHouseUserCmd	tmpcode/commond.h	/^	st_rt_DestroyObjectHouseUserCmd()$/;"	f	struct:st_rt_DestroyObjectHouseUserCmd
st_rt_DestroyObjectHouseUserCmd	tmpcode/commond.h	/^struct st_rt_DestroyObjectHouseUserCmd : public stHouseUserCmd$/;"	s
st_rt_MoveObjectHouseUserCmd	tmpcode/commond.h	/^	st_rt_MoveObjectHouseUserCmd()$/;"	f	struct:st_rt_MoveObjectHouseUserCmd
st_rt_MoveObjectHouseUserCmd	tmpcode/commond.h	/^struct st_rt_MoveObjectHouseUserCmd : public stHouseUserCmd$/;"	s
stable	ScenesServer/zObject.h	/^  WORD stable; \/\/ÂÆöË∫´Â¢ûÂä†$/;"	m	class:Equips
stable	base/Object.h	/^	WORD stable; \/\/∂®…Ì‘ˆº”$/;"	m	struct:t_Object
stablePos	tmpcode/commond.h	/^	int stablePos; \/\/ ¬Ì¿∏Œª÷√$/;"	m	struct:stExchangeHorsePetCmd
stablePos	tmpcode/commond.h	/^	int stablePos; \/\/ ¬Ì¿∏Œª÷√$/;"	m	struct:stFreeHorsePetCmd
stablePos	tmpcode/commond.h	/^    BYTE stablePos;$/;"	m	struct:stStableHorseNameCmd
stabledef	ScenesServer/zObject.h	/^  WORD stabledef; \/\/ÊäóÂÆöË∫´Â¢ûÂä†$/;"	m	class:Equips
stabledef	base/Object.h	/^	WORD stabledef; \/\/øπ∂®…Ì‘ˆº”$/;"	m	struct:t_Object
stamp	tmpcode/commond.h	/^    DWORD  stamp;       \/\/º§ªÓ ±º‰¥¡$/;"	m	struct:t_RewardInfo
standBack	ScenesServer/SceneNpc.cpp	/^void SceneNpc::standBack(const DWORD dwAttTempID,DWORD grids)$/;"	f	class:SceneNpc
standBack	ScenesServer/SceneUser.cpp	/^void SceneUser::standBack(const DWORD dwAttTempID,DWORD grids)$/;"	f	class:SceneUser
standup	ScenesServer/SceneUser.cpp	/^void SceneUser::standup()$/;"	f	class:SceneUser
star	tmpcode/commond.h	/^    DWORD star; \/\/»Ÿ”˛$/;"	m	struct:stJieZhanState
starFlag	tmpcode/commond.h	/^        BYTE  starFlag; \/\/–«–«$/;"	m	struct:CardMainData
start	base/Command.h	/^  DWORD start;$/;"	m	struct:Cmd::stQuestInfoUserCmd
start	base/zDatabase.h	/^    DWORD start;$/;"	m	struct:npcRecover
start	tmpcode/commond.h	/^	DWORD start;$/;"	m	struct:stQuestInfoUserCmd
start	tmpcode/commond.h	/^	bool start;		\/\/ «ø™ ºªπ «Ω· ¯$/;"	m	struct:t_AutoSkill_Start
startGame	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::startGame(SceneUser &user)$/;"	f	class:ChallengeGame
startHour	tmpcode/commond.h	/^            BYTE startHour;$/;"	m	struct:stRetDailyWarningQuestUserCmd::quests::stTime
startMin	tmpcode/commond.h	/^            BYTE startMin;$/;"	m	struct:stRetDailyWarningQuestUserCmd::quests::stTime
startTime	Robot/Client.h	/^    zRTime startTime;$/;"	m	struct:ClientBase
startTime	ScenesServer/Scene.h	/^      tm startTime;\/\/‰∏ÄÂ§©‰∏≠ÂºÄÂßãÁöÑÊó∂Èó¥$/;"	m	struct:Scene::FixedRush
startTime	SuperServer/TimeTick.h	/^    zRTime startTime;$/;"	m	class:SuperTimeTick
startTime	base/GmToolCommand.h	/^      DWORD startTime;$/;"	m	struct:Cmd::GmTool::t_Msg_GmTool
startTime	base/GmToolCommand.h	/^      DWORD startTime;$/;"	m	struct:Cmd::GmTool::t_Punish_GmTool
startTime	base/SessionCommand.h	/^      DWORD startTime;$/;"	m	struct:Cmd::Session::auctionInfo
startTime	tmpcode/commond.h	/^        DWORD startTime;$/;"	m	struct:stSendActivityStateUserCmd
startTime	tmpcode/commond.h	/^        time_t startTime;        \/\/ªÓ∂Øø™ º ±º‰$/;"	m	struct:stActivityDataUserCmd::act
startUpFinish	GatewayServer/GatewayServer.h	/^	bool startUpFinish;$/;"	m	class:GatewayService
start_time	ScenesServer/Quest.cpp	/^int QuestList::start_time(DWORD id) const$/;"	f	class:QuestList
start_time	ScenesServer/Quest.cpp	/^int Vars::start_time() const$/;"	f	class:Vars
state	BillServer/BillManager.h	/^  state;          \/**< ‰ºöËØùÁä∂ÊÄÅ *\/$/;"	m	struct:BillInfo	typeref:enum:BillInfo::__anon1
state	BillServer/BillUser.h	/^    state;          \/**< ‰ºöËØùÁä∂ÊÄÅ *\/ $/;"	m	class:BillUser	typeref:enum:BillUser::LoginState
state	FLServer/GYListManager.h	/^	int  state;          \/**< ÊúçÂä°Âô®Áä∂ÊÄÅ *\/$/;"	m	struct:GYList
state	ScenesServer/ChallengeGame.h	/^	ChallengeState state;$/;"	m	class:ChallengeGame
state	ScenesServer/Quest.cpp	/^int QuestList::state(DWORD id) const$/;"	f	class:QuestList
state	ScenesServer/Quest.cpp	/^int Vars::state() const$/;"	f	class:Vars
state	ScenesServer/Quest.h	/^    const int state() const$/;"	f	class:Vars::VAR
state	ScenesServer/Quest.h	/^    const void state(int state)$/;"	f	class:Vars::VAR
state	ScenesServer/QuestEvent.cpp	/^int Event::state(SceneUser& user)$/;"	f	class:Event
state	ScenesServer/QuestEvent.h	/^inline int EventManager<OnVisit>::state(SceneUser& user,OnVisit& event)$/;"	f	class:EventManager
state	ScenesServer/SceneDefine.h	/^  zSceneEntry::SceneEntryState state;    \/\/ÂΩìÂâçÁä∂ÊÄÅ,ÈöêËóèÊàñËÄÖÈùûÈöêËóè$/;"	m	struct:ZoneTypeDef
state	ScenesServer/SceneNpcAI.cpp	/^    const int state;$/;"	m	struct:getEntriesCallBack
state	ScenesServer/SkillStatusManager.h	/^  DWORD state;$/;"	m	struct:SkillStatusElement
state	SuperServer/RoleregCache.h	/^      WORD state;          \/**< ∏˜÷÷◊¥Ã¨µƒŒª◊È∫œ *\/$/;"	m	struct:RoleregCache::Data
state	base/Card.h	/^	BYTE state[(CARD_STATE_MAX + 7) \/ 8];$/;"	m	struct:t_Card
state	base/Command.h	/^	petState state;         \/\/Áä∂ÊÄÅ$/;"	m	struct:Cmd::t_PetData
state	base/Command.h	/^    DWORD state;$/;"	m	struct:Cmd::stSelectReturnStatesPropertyUserCmd::__anon93
state	base/Command.h	/^  BYTE state;    \/\/Áä∂ÊÄÅ$/;"	m	struct:Cmd::stAddWaitingCartoonCmd
state	base/Command.h	/^  BYTE state;    \/\/Áä∂ÊÄÅ$/;"	m	struct:Cmd::t_CartoonData
state	base/Command.h	/^  BYTE state; \/\/ 0,‰∏∫ÈÄÄÂá∫,1,‰∏∫ËøõÂÖ•$/;"	m	struct:Cmd::stEnterEmperorDareZone
state	base/Command.h	/^  BYTE state;$/;"	m	struct:Cmd::actTitle
state	base/Command.h	/^  BYTE state;$/;"	m	struct:Cmd::ping_element
state	base/Command.h	/^  BYTE state;$/;"	m	struct:Cmd::stAddListMail
state	base/Command.h	/^  BYTE state[(MAX_STATE + 7) \/ 8];  \/\/\/ ËßíËâ≤Áä∂ÊÄÅ$/;"	m	struct:Cmd::stRefreshStateMapScreenUserCmd
state	base/Command.h	/^  BYTE state[(MAX_STATE + 7) \/ 8];  \/\/\/ ËßíËâ≤Áä∂ÊÄÅ$/;"	m	struct:Cmd::t_MapUserData
state	base/Command.h	/^  DWORD state;$/;"	m	struct:Cmd::stServerReturnLoginSuccessCmd
state	base/Command.h	/^  WORD state[0];    \/\/\/Áä∂ÊÄÅÂàóË°®$/;"	m	struct:Cmd::t_MapNpcDataState
state	base/Command.h	/^  WORD state[0];    \/\/\/Áä∂ÊÄÅÂàóË°®$/;"	m	struct:Cmd::t_MapUserDataPosState
state	base/Command.h	/^  WORD state[0];    \/\/\/Áä∂ÊÄÅÂàóË°®$/;"	m	struct:Cmd::t_MapUserDataState
state	base/Command.h	/^  WORD state[1];    \/\/\/Áä∂ÊÄÅÂàóË°®$/;"	m	struct:Cmd::t_MapNpcDataPosState
state	base/Command.h	/^  horseState state;  \/\/È©¨ÁöÑÁä∂ÊÄÅ$/;"	m	struct:Cmd::t_HorseData
state	base/FLCommand.h	/^      int  state;          \/**< ÊúçÂä°Âô®Áä∂ÊÄÅ *\/$/;"	m	struct:Cmd::FL::t_GYList_FL
state	base/HeroCardCmd.h	/^	BYTE state;$/;"	m	struct:Cmd::stRetRefreshBattleStateUserCmd
state	base/HeroCardCmd.h	/^	BYTE state[(CARD_STATE_MAX + 7) \/ 8];$/;"	m	struct:Cmd::stRetRefreshCardAllStateUserCmd
state	base/RecordCommand.h	/^	BYTE state;$/;"	m	struct:Cmd::Record::t_update_ZoneState
state	base/RolechangeCommand.h	/^	BYTE state;$/;"	m	struct:Cmd::Rolechange::t_Ret_Check_Valid
state	base/RolechangeCommand.h	/^	DWORD state;$/;"	m	struct:Cmd::Rolechange::t_retSendUserToZone
state	base/RolechangeCommand.h	/^	int state;	\/\/0,æ‹æ¯Ω” ‹ 1,ø…“‘Ω” ‹$/;"	m	struct:Cmd::Rolechange::t_confirmReceive
state	base/RoleregCommand.h	/^      WORD state;          \/**< ‰∏äÈù¢ÂêÑÁßçÁä∂ÊÄÅÁöÑ‰ΩçÁªÑÂêà *\/$/;"	m	struct:Cmd::RoleReg::t_Charname_reg_withID
state	base/SessionCommand.h	/^      BYTE state;$/;"	m	struct:Cmd::Session::auctionInfo
state	base/SessionCommand.h	/^      BYTE state;$/;"	m	struct:Cmd::Session::mailInfo
state	base/SessionCommand.h	/^      BYTE state;\/\/0:‰∏ãÁ∫ø 1:‰∏äÁ∫ø$/;"	m	struct:Cmd::Session::t_notifyCartoon_SceneSession
state	base/SessionCommand.h	/^      BYTE state;\/\/1 ÂºÄÂßã 0 ÁªìÊùü$/;"	m	struct:Cmd::Session::t_unionDareNotify_SceneSession
state	base/SuperCommand.h	/^      WORD state;          \/**< ‰∏äÈù¢ÂêÑÁßçÁä∂ÊÄÅÁöÑ‰ΩçÁªÑÂêà *\/$/;"	m	struct:Cmd::Super::t_Charname_Gateway
state	base/SuperCommand.h	/^      WORD state;$/;"	m	struct:Cmd::Super::ServerEntry
state	base/SuperCommand.h	/^      int  state;          \/**< ÊúçÂä°Âô®Áä∂ÊÄÅ *\/$/;"	m	struct:Cmd::Super::t_GYList_Gateway
state	base/zDatabase.h	/^	    DWORD state;$/;"	m	struct:SkillElement::__anon34::__anon35
state	base/zDatabase.h	/^    char  state[1024];    \/\/ ◊¥Ã¨$/;"	m	struct:zNpcB
state	base/zSyncEvent.h	/^	volatile bool state;$/;"	m	class:zSyncEvent
state	base/zTCPClientTask.h	/^	volatile ConnState state;            \/**< ¡¨Ω”◊¥Ã¨ *\/$/;"	m	class:zTCPClientTask
state	base/zTCPTask.h	/^	zTCPTask_State state;              \/**< ¡¨Ω”◊¥Ã¨ *\/$/;"	m	class:zTCPTask
state	base/zTCPTaskPool.h	/^	int state;                        \/**< ¡¨Ω”≥ÿ◊¥Ã¨ *\/$/;"	m	class:zTCPTaskPool
state	base/zType.h	/^  BYTE state;$/;"	m	struct:t_NewLoginSession
state	roleRegServer/RoleregCommand.h	/^      WORD state;          \/**< ‰∏äÈù¢ÂêÑÁßçÁä∂ÊÄÅÁöÑ‰ΩçÁªÑÂêà *\/$/;"	m	struct:Cmd::RoleReg::t_Charname_reg_withID
state	tmpcode/commond.h	/^		BYTE  state;  $/;"	m	struct:stUnionResourceAssign::ResAssign
state	tmpcode/commond.h	/^		BYTE state;                     \/\/Ω®÷˛∞⁄∑≈ ±”√µƒ◊¥Ã¨; 1:“—∞⁄∑≈, 2:Œ¥∞⁄∑≈(”…”⁄∫œ«¯ªÚ’Ω’˘“ÚÀÿ±ª ’ªÿµƒΩ®÷˛)$/;"	m	struct:stRetUnionBuildInfo::__anon269
state	tmpcode/commond.h	/^		BYTE state[(MAX_STATE + 7) \/ 8];        \/\/\/ npc◊¥Ã¨$/;"	m	struct:stRefreshNpcStateMapScreenUserCmd::npcState
state	tmpcode/commond.h	/^		DWORD state;$/;"	m	struct:stRetFinishBuildInfo::BuildType
state	tmpcode/commond.h	/^		DWORD state;$/;"	m	struct:stSelectReturnStatesPropertyUserCmd::__anon230
state	tmpcode/commond.h	/^		WORD  state;            \/\/»ŒŒÒ◊¥Ã¨÷µ, 0ƒ¨»œ «ø…Ω”◊¥Ã¨, 3±Ì æ≤ªø…Ω”◊¥Ã¨$/;"	m	struct:stRetDailyRandomQuestUserCmd::quests
state	tmpcode/commond.h	/^	BYTE      state;  \/\/≤Œº˚…œ√Ê√∂æŸ$/;"	m	struct:stRetTitleInfoCmd
state	tmpcode/commond.h	/^	BYTE  state;                    \/\/∑øŒ›◊¥Ã¨$/;"	m	struct:st_RetManageHouseUserCmd
state	tmpcode/commond.h	/^	BYTE  state;      \/\/≤Œº˚cmd ¿Ôµƒ MERCH_STATE √∂æŸ$/;"	m	struct:Merch
state	tmpcode/commond.h	/^	BYTE  state;   \/\/≤Œº˚…œ√Ê√∂æŸ$/;"	m	struct:stSetUnionMerchInfo
state	tmpcode/commond.h	/^	BYTE state;			\/\/µ±«∞◊¥Ã¨ 0:ø’∑ø  0x40:“—æ”◊°   0x01:’–ƒº÷–$/;"	m	struct:__anon355
state	tmpcode/commond.h	/^	BYTE state;     \/\/µ±«∞µƒ◊¥Ã¨$/;"	m	struct:stRetUnionProStateCmd
state	tmpcode/commond.h	/^	BYTE state;     \/\/œ¬“ª≤Ωµƒ◊¥Ã¨$/;"	m	struct:stReqNextStateMarryCmd
state	tmpcode/commond.h	/^	BYTE state;     \/\/œ¬“ª≤Ωµƒ◊¥Ã¨$/;"	m	struct:stRetNextStateMarryCmd
state	tmpcode/commond.h	/^	BYTE state;   \/\/≤È—Ø◊¥Ã¨–≈œ¢$/;"	m	struct:stReqCityDareInfoUserCmd
state	tmpcode/commond.h	/^	BYTE state;   \/\/‘ˆº”ªÚ «…æ≥˝◊¥Ã¨  º˚…œ√Ê√∂æŸ$/;"	m	struct:stNotifyDecorationUnionID
state	tmpcode/commond.h	/^	BYTE state;  \/\/±»»¸Ω◊∂Œ$/;"	m	struct:stNotifyStateAndTimeZhenXuanUserCmd
state	tmpcode/commond.h	/^	BYTE state;  \/\/—˚«Î◊¥Ã¨$/;"	m	struct:stRetCreateSeptSign
state	tmpcode/commond.h	/^	BYTE state;$/;"	m	struct:stBarCardReturnCmd
state	tmpcode/commond.h	/^	BYTE state;$/;"	m	struct:stDancerStateUserCmd
state	tmpcode/commond.h	/^	BYTE state;$/;"	m	struct:stOpenMarryStateCmd
state	tmpcode/commond.h	/^	BYTE state;\/\/µ±«∞∑¢≤º◊¥Ã¨$/;"	m	struct:stCityQuestAutoInfo
state	tmpcode/commond.h	/^	BYTE state[(MAX_STATE + 7) \/ 8];	\/\/\/ Ω«…´◊¥Ã¨$/;"	m	struct:t_MapNPCData
state	tmpcode/commond.h	/^	BYTE state[(MAX_STATE + 7) \/ 8];	\/\/\/ Ω«…´◊¥Ã¨$/;"	m	struct:t_MapUserData
state	tmpcode/commond.h	/^	DWORD  state; \/\/0≤ªø…’˘∂· 1ø…“‘’˘∂·$/;"	m	struct:stZhongLiCityDist
state	tmpcode/commond.h	/^	DWORD state;		\/\/’ ∫≈◊¥Ã¨$/;"	m	struct:stServerReturnLoginSuccessCmd
state	tmpcode/commond.h	/^	DWORD state;           \/\/±»»¸◊¥Ã¨$/;"	m	struct:stRefreshCommonInfoWeekendZhenxuanUserCmd
state	tmpcode/commond.h	/^	DWORD state;$/;"	m	struct:stDanceTime
state	tmpcode/commond.h	/^	WORD state;$/;"	m	struct:stStateDancerUserCmd
state	tmpcode/commond.h	/^	WORD state[0];		\/\/\/◊¥Ã¨¡–±Ì$/;"	m	struct:t_MapUserDataPosState
state	tmpcode/commond.h	/^	WORD state[0];          \/\/\/◊¥Ã¨¡–±Ì$/;"	m	struct:npcState
state	tmpcode/commond.h	/^	bool state;             \/\/true: ø™ ºº“◊Âª§ÀÕ, false: ÷’÷πº“◊Âª§ÀÕ$/;"	m	struct:stStateSeptGuardCmd
state	tmpcode/commond.h	/^	bool state;          \/\/‘ˆº”ªÚºı…Ÿ true¥˙±Ì‘ˆº” false¥˙±Ìºı…Ÿ  $/;"	m	struct:stAddUnionMemberRank
state	tmpcode/commond.h	/^	byte state;$/;"	m	struct:stRetCityDareInfoUserCmd
state	tmpcode/commond.h	/^	byte state;$/;"	m	struct:stRetCityDareInfoUserCmd_buf
state	tmpcode/commond.h	/^	petState state;         \/\/◊¥Ã¨$/;"	m	struct:t_PetData
state	tmpcode/commond.h	/^        BYTE  state;     \/\/ƒß¡¶¬Ø◊¥Ã¨$/;"	m	struct:stStoveDataUserCmd
state	tmpcode/commond.h	/^        BYTE  state;  $/;"	m	struct:stSendActivityStateUserCmd
state	tmpcode/commond.h	/^        BYTE state;$/;"	m	struct:actTitle
state	tmpcode/commond.h	/^    BYTE state;     \/\/0, ‘⁄¬Ì≥µ∏ΩΩ¸; 1,‘⁄æ≈∆¡÷ÆÕ‚$/;"	m	struct:SeptGuardList
state	tmpcode/commond.h	/^    BYTE state;$/;"	m	struct:stAddListMail
state	tmpcode/commond.h	/^    DWORD state; \/\/ state=0 Œ¥∑¢≤º, state=1 ∑¢≤º, state=2 ÷ÿµ„∑¢≤º$/;"	m	struct:stNotifySuccessPutCityQuest
state	tmpcode/commond.h	/^    DWORD state; \/\/ state=0 Œ¥∑¢≤º, state=1 ∑¢≤º, state=2 ÷ÿµ„∑¢≤º$/;"	m	struct:stRetPutCityQuest
state	tmpcode/commond.h	/^    DWORD state;$/;"	m	struct:stCityQuestGetInfo
state	tmpcode/commond.h	/^    DWORD state;\/\/…Òƒæµƒ◊¥Ã¨£∫0-’˝≥££¨1-“∂◊”ø›ª∆£¨2-”–≥Ê£¨3-µÙ“∂£¨4-≥§≤›$/;"	m	struct:rtShenMuStateCountryCmd
state	tmpcode/commond.h	/^    horseState state;       \/\/¬Ìµƒ◊¥Ã¨$/;"	m	struct:t_HorseData
stateLeftTime	tmpcode/commond.h	/^	WORD stateLeftTime;     \/\/µ√æ≠—Èµƒ £”‡ ±º‰£¨µ•Œª£∫√Î$/;"	m	struct:stSendDrunkStateBigfireUserCmd
stateLeftTime	tmpcode/commond.h	/^	WORD stateLeftTime;     \/\/µ√æ≠—È £”‡ ±º‰£¨µ•Œª£∫√Î$/;"	m	struct:stSendFeteStateUserCmd
stateLeftTime	tmpcode/commond.h	/^	WORD stateLeftTime;     \/\/æ∆◊Ì◊¥Ã¨ £”‡ ±º‰$/;"	m	struct:stSendDrunkStateGouhuoUserCmd
stateList	base/zSceneEntry.h	/^	SceneEntryStateList stateList;$/;"	m	struct:zSceneEntry
stateNum	base/HeroCardCmd.h	/^	BYTE stateNum;	    \/\/◊¥Ã¨µƒ√∂æŸ$/;"	m	struct:Cmd::stRetClearCardOneStateUserCmd
stateNum	base/HeroCardCmd.h	/^	BYTE stateNum;	    \/\/◊¥Ã¨µƒ√∂æŸ$/;"	m	struct:Cmd::stRetSetCardOneStateUserCmd
state_b	tmpcode/commond.h	/^                int state_b;  \/\/0œ‘ æø…∞·‘À, -2 ±Ì æ∞≤»´◊¥Ã¨≤ªø…’˘∂·,¥Û”⁄0‘ÚŒ™±£ª§µπº∆ ±$/;"	m	struct:stCrystalAllInfoDataUserCmd::cryState
state_helper	base/Command.h	/^    BYTE state_helper;$/;"	m	struct:Cmd::t_MapUserData
state_helper	base/Command.h	/^  BYTE state_helper;$/;"	m	struct:Cmd::t_MapUserDataPosState
state_helper	tmpcode/commond.h	/^	BYTE state_helper;      \/\/ƒ≥∏ˆ◊¥Ã¨◊¥Ã¨µƒ∏Ωº”÷µ£∫ƒø«∞¥∫‘À π”√$/;"	m	struct:st_CharShow2
state_helper	tmpcode/commond.h	/^	BYTE state_helper;      \/\/ƒ≥∏ˆ◊¥Ã¨◊¥Ã¨µƒ∏Ωº”÷µ£∫ƒø«∞¥∫‘À π”√$/;"	m	struct:t_MapUserDataPosState
state_helper	tmpcode/commond.h	/^	BYTE state_helper; \/\/◊¥Ã¨∏®÷˙◊÷Ω⁄£∫ƒø«∞ π”√‘⁄¥∫‘À◊¥Ã¨ª§ÀÕ»À ˝œ‘ æ$/;"	m	struct:t_MapUserData
state_maintain	base/zType.h	/^  state_maintain  =  1            \/**< Áª¥Êä§‰∏≠ÔºåÊöÇÊó∂‰∏çÂÖÅËÆ∏Âª∫Á´ãÊñ∞ÁöÑËøûÊé• *\/$/;"	e	enum:__anon7
state_none	base/zType.h	/^  state_none    =  0,          \/**< Á©∫ÁöÑÁä∂ÊÄÅ *\/$/;"	e	enum:__anon7
state_z	tmpcode/commond.h	/^                int state_z;  \/\/Œﬁ”√$/;"	m	struct:stCrystalAllInfoDataUserCmd::cryState
states	base/Command.h	/^  }states[0];$/;"	m	struct:Cmd::stSelectReturnStatesPropertyUserCmd	typeref:struct:Cmd::stSelectReturnStatesPropertyUserCmd::__anon93
states	tmpcode/commond.h	/^	}states[0];$/;"	m	struct:stSelectReturnStatesPropertyUserCmd	typeref:struct:stSelectReturnStatesPropertyUserCmd::__anon230
status	ScenesServer/SkillStatusManager.h	/^    const SkillStatus *status;$/;"	m	struct:SkillStatusCarrier
status	base/Command.h	/^  BYTE status; \/\/ 0 success,1 fail$/;"	m	struct:Cmd::stCanSellTradeUserCmd
status	base/Command.h	/^  BYTE status; \/\/ÁªìÊûú 0 ÊàêÂäü Èùû0 Â§±Ë¥•$/;"	m	struct:Cmd::stResponsePropertyUserCmd
status	base/Command.h	/^  BYTE status;$/;"	m	struct:Cmd::stRequestJoinSeptCmd
status	base/Command.h	/^  BYTE status;$/;"	m	struct:Cmd::stRequestJoinUnionCmd
status	base/Command.h	/^  FALSE_COUNTRY_STATUS status;$/;"	m	struct:Cmd::stDisableLoginCountryCmd
status	base/SessionCommand.h	/^      DWORD status;$/;"	m	struct:Cmd::Session::t_DelChar_GateSession
status	base/zDatabase.h	/^	WORD status[7];$/;"	m	union:SkillStatus::__anon36
status	tmpcode/commond.h	/^	BYTE    status[(MAX_STATE + 7) \/ 8]; \/\/$/;"	m	struct:st_CharShow2
status	tmpcode/commond.h	/^	BYTE status; \/\/ 0 success, 1 fail$/;"	m	struct:stCanSellTradeUserCmd
status	tmpcode/commond.h	/^	BYTE status; \/\/0≥…π¶  1 ß∞‹$/;"	m	struct:stAddItemStall
status	tmpcode/commond.h	/^	BYTE status; \/\/0≥…π¶  1 ß∞‹$/;"	m	struct:stBuyItemStall
status	tmpcode/commond.h	/^	BYTE status; \/\/0≥…π¶  1 ß∞‹$/;"	m	struct:stDelItemStall
status	tmpcode/commond.h	/^	FALSE_COUNTRY_STATUS status;$/;"	m	struct:stDisableLoginCountryCmd
status	tmpcode/commond.h	/^	bool status;$/;"	m	struct:stReqCityDareIntoUserCmd
status	tmpcode/commond.h	/^    BYTE status; \/\/Ω·π˚ 0 ≥…π¶ ∑«0 ß∞‹(≥Â–« ± 0≥…π¶ 1µÙ–« 2Ãıº˛≤ª◊„ ß∞‹)$/;"	m	struct:stResponsePropertyUserCmd
std	base/xml/xml_config.h	/^namespace std$/;"	n
std	base/xml/xml_node.h	/^namespace std$/;"	n
std	base/xml/xml_node_container.h	/^namespace std$/;"	n
std	base/xml/xml_node_content.h	/^namespace std$/;"	n
std	base/xml/xml_node_prop.h	/^namespace std$/;"	n
std	base/xml/xml_utility.h	/^namespace std$/;"	n
stdbang	base/CharBase.h	/^  WORD  stdbang;            \/\/\/ Ê†áÂáÜÈáçÂáªÁéá$/;"	m	struct:CharState
stdmdamage	base/CharBase.h	/^  DWORD stdmdamage;          \/\/\/ Ê†áÂáÜÊ≥ïÊúØÊîªÂáªÂäõ$/;"	m	struct:CharState
stdmdefence	base/CharBase.h	/^  DWORD stdmdefence;          \/\/\/ Ê†áÂáÜÊ≥ïÊúØÈò≤Âæ°Âäõ$/;"	m	struct:CharState
stdpdamage	base/CharBase.h	/^  DWORD stdpdamage;          \/\/\/ Ê†áÂáÜÁâ©ÁêÜÊîªÂáªÂäõ$/;"	m	struct:CharState
stdpdefence	base/CharBase.h	/^  DWORD stdpdefence;          \/\/\/ Ê†áÂáÜÁâ©ÁêÜÈò≤Âæ°Âäõ$/;"	m	struct:CharState
stepOrder	tmpcode/commond.h	/^	BYTE stepOrder;        \/\/±»»¸µ⁄º∏≥°$/;"	m	struct:stRefreshCommonInfoWeekendZhenxuanUserCmd
step_state	ScenesServer/SceneUser.h	/^    WORD step_state; $/;"	m	struct:SceneUser
stock_login	BillServer/BillUser.h	/^    bool stock_login;$/;"	m	class:BillUser
stone	ScenesServer/SceneEntryPk.h	/^    bool stone;      \/\/\/ Áü≥Âåñ$/;"	m	struct:SceneEntryPk
stoneID	tmpcode/commond.h	/^    DWORD stoneID;   \/\/…˝–« Øµƒid$/;"	m	struct:stComposeStarStoneUserCmd
stoneID	tmpcode/commond.h	/^    DWORD stoneID;   \/\/…˝–« Øµƒid$/;"	m	struct:stUseStarStoneUserCmd
stoneThisID	tmpcode/commond.h	/^    DWORD stoneThisID;      \/\/»€ ØŒ®“ªID$/;"	m	struct:stHorseEvolveUserCmd
storageAlter	tmpcode/commond.h	/^	storageList storageAlter;       \/\/\/ ø‚¥Ê∏ƒ±‰$/;"	m	struct:stRetAlterStorageSellList
storageList	tmpcode/commond.h	/^struct storageList$/;"	s
store	ScenesServer/zObject.h	/^    StorePack store;$/;"	m	class:Packages
storeMaxNum	tmpcode/commond.h	/^	DWORD storeMaxNum;     \/\/Õ≈≤÷ø‚◊ ‘¥…œœﬁ$/;"	m	struct:resourceInfo
storeName	tmpcode/commond.h	/^	char      storeName[MAX_NAMESIZE];\/\/ÃØŒª√˚$/;"	m	struct:t_PrivateStoreData
storeName	tmpcode/commond.h	/^        char storeName[MAX_NAMESIZE + 1];  \/\/ÃØŒª√˚µƒµ⁄“ª––, µ⁄∂˛––œ‘ æººƒ‹√˚∫Õ Ï¡∑∂»–≈œ¢$/;"	m	struct:stBuildSkillStoreCmd
storeName	tmpcode/commond.h	/^        char storeName[MAX_NAMESIZE + 1]; \/\/ÃØ÷˜◊‘∂®“Â√˚$/;"	m	struct:t_SkillStoreData
storeName	tmpcode/commond.h	/^      char storeName[MAX_NAMESIZE + 1];  \/\/ÃØŒª√˚µƒµ⁄“ª––$/;"	m	struct:stReqChangeSkillStoreType
storeThisID	tmpcode/commond.h	/^	DWORD storeThisID;      \/\/¥¢≤ÿπÒŒ®“ªID$/;"	m	struct:st_MoveItemStoreHouseUserCmd
storeThisID	tmpcode/commond.h	/^	DWORD storeThisID;      \/\/¥¢ŒÔœ‰Œ®“ªID$/;"	m	struct:st_PutItemStoreHouseUserCmd
storeThisID	tmpcode/commond.h	/^	DWORD storeThisID;      \/\/¥¢ŒÔœ‰Œ®“ªID$/;"	m	struct:st_StoreItemHouseUserCmd
storeThisID	tmpcode/commond.h	/^	DWORD storeThisID;      \/\/¥¢ŒÔœ‰Œ®“ªID$/;"	m	struct:st_StoreLogHouseUserCmd
storeThisID	tmpcode/commond.h	/^	DWORD storeThisID;      \/\/¥¢ŒÔœ‰Œ®“ªID$/;"	m	struct:st_TakeOutItemStoreHouseUserCmd
str	ScenesServer/SceneNpcAI.h	/^  std::string str;$/;"	m	struct:t_NpcAIDefine
str	ScenesServer/zObject.h	/^  WORD str;  \/\/ ÂäõÈáè$/;"	m	class:Equips
str	base/Command.h	/^	DWORD str;               \/\/ÂäõÈáè$/;"	m	struct:Cmd::t_PetData
str	base/Command.h	/^  WORD str;    \/\/ÂäõÈáè$/;"	m	struct:Cmd::t_HorseData
str	base/Object.h	/^	WORD str;  \/\/ ¡¶¡ø                               \/\/ ∂‘”¶¬Ì∆• ¡¶¡ø \/\/  ±◊∞Ω´¡¶¡ø∫Õ÷«¡¶÷ÿ”√Œ™‘ˆº”HP∫ÕMP…œœﬁµƒ∞Ÿ∑÷±»$/;"	m	struct:t_Object
str	base/zDatabase.h	/^    DWORD  str;        \/\/ ¡¶¡ø$/;"	m	struct:zNpcB
str	tmpcode/commond.h	/^	WORD str;               \/\/¡¶¡ø$/;"	m	struct:t_PetData
str	tmpcode/commond.h	/^	WORD str;$/;"	m	struct:SimulateHorse
str	tmpcode/commond.h	/^	char	str[128];$/;"	m	struct:stInviteSCUserCmd
str	tmpcode/commond.h	/^        BYTE    str[MAX_NAMESIZE]; \/\/–Ø¥¯–≈œ¢:◊Ó¥Û16∏ˆ∫∫◊÷      $/;"	m	struct:stTimeCountUserCmd
strField1	base/zDatabase.h	/^    char  strField1[32];    \/\/ √˚≥∆$/;"	m	struct:NpcBase
strIP	base/BroadCastCommand.h	/^      char strIP[MAX_IP_LENGTH];$/;"	m	struct:Cmd::BroadCast::t_LoginCmd
strIP	base/FLCommand.h	/^      char strIP[MAX_IP_LENGTH];$/;"	m	struct:Cmd::FL::t_LoginFL
strIP	base/RolechangeCommand.h	/^      char strIP[MAX_IP_LENGTH];$/;"	m	struct:Cmd::Rolechange::t_LoginCmd
strIP	base/RoleregCommand.h	/^      char strIP[MAX_IP_LENGTH];$/;"	m	struct:Cmd::RoleReg::t_LoginRoleReg
strIP	base/UserCommand.h	/^	char strIP[MAX_IP_LENGTH];  \/\/game super$/;"	m	struct:Cmd::UserServer::t_logon
strIP	roleRegServer/RoleregCommand.h	/^      char strIP[MAX_IP_LENGTH];$/;"	m	struct:Cmd::RoleReg::t_LoginRoleReg
strMapName	ScenesServer/Scene.h	/^      char strMapName[MAX_NAMESIZE];$/;"	m	struct:Scene::stMapName
strMapName	base/Command.h	/^      char strMapName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stScrollMapPropertyUserCmd::__anon96
strMapName	tmpcode/commond.h	/^            char strMapName[MAX_NAMESIZE];$/;"	m	struct:stTransCrystalPropertyUserCmd::__anon233
strName	base/Card.h	/^	char strName[MAX_NAMESIZE]; \/\/√˚≥∆$/;"	m	struct:t_Card
strName	base/Command.h	/^	char  strName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::stClearObjectOwnerMapScreenUserCmd
strName	base/Command.h	/^    char strName[MAX_ACCNAMESIZE];$/;"	m	struct:Cmd::stPasswordLogonUserCmd
strName	base/Command.h	/^  char strName[MAX_ACCNAMESIZE];$/;"	m	struct:Cmd::stAccountLogonUserCmd
strName	base/Command.h	/^  char strName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stTradeObject
strName	base/Object.h	/^	char strName[MAX_NAMESIZE]; \/\/√˚≥∆$/;"	m	struct:t_Object
strName	tmpcode/commond.h	/^	  char strName[MAX_NAMESIZE]; \/\/√˚≥∆	$/;"	m	struct:st_WatchPlayer
strName	tmpcode/commond.h	/^        char strName[MAX_NAMESIZE];$/;"	m	struct:stTradeObject
strNewPassword	base/Command.h	/^    char strNewPassword[MAX_PASSWORD];$/;"	m	struct:Cmd::stPasswordLogonUserCmd
strPassword	base/Command.h	/^    char strPassword[MAX_PASSWORD];$/;"	m	struct:Cmd::stPasswordLogonUserCmd
strPassword	base/Command.h	/^  char strPassword[MAX_PASSWORD];$/;"	m	struct:Cmd::stAccountLogonUserCmd
strShopAdv	base/Command.h	/^		char strShopAdv[MAX_SHOPADV];$/;"	m	struct:Cmd::stUpdateShopAdvcmd::stAdv
strUserName	base/Command.h	/^  char strUserName[MAX_NAMESIZE+1];  \/**< Áî®Êà∑ÂêçÂ≠ó  *\/$/;"	m	struct:Cmd::stCreateSelectUserCmd
str_Attribute	ScenesServer/zObject.h	/^	  WORD str_Attribute;		\/\/ ÂäõÈáèÂ∑≤ÁªèÂä†ËøáÁöÑËá™Áî±ÁÇπ$/;"	m	struct:Equips::Freedom_Attribute
stringtok	base/zString.h	/^stringtok(Container &container,std::string const &in,$/;"	f	namespace:Zebra
strong_info	tmpcode/commond.h	/^struct strong_info$/;"	s
structname	base/xml/xml_parser_generator.h	/^	std::string structname;$/;"	m	class:xml_node_parser_generator
stuff	base/zDatabase.h	/^	struct stuff$/;"	s	struct:zObjectB::material
stuffs	base/zDatabase.h	/^	std::vector<std::vector<stuff> > stuffs;$/;"	m	struct:zObjectB::material
subDamage	ScenesServer/CardPk.cpp	/^bool zCard::subDamage(DWORD dam)$/;"	f	class:zCard
subDur	ScenesServer/CardPk.cpp	/^bool zCard::subDur(DWORD value)$/;"	f	class:zCard
subNetServiceInst	base/zSubNetService.h	/^	static zSubNetService *subNetServiceInst;      \/**< Á±ªÁöÑÂîØ‰∏ÄÂÆû‰æãÊåáÈíàÔºåÂåÖÊã¨Ê¥æÁîüÁ±ªÔºåÂàùÂßãÂåñ‰∏∫Á©∫ÊåáÈíà *\/$/;"	m	class:zSubNetService
subNetServiceInstance	base/zSubNetService.h	/^	static zSubNetService *subNetServiceInstance()$/;"	f	class:zSubNetService
subPlayers	tmpcode/commond.h	/^	}subPlayers[0];$/;"	m	struct:stRet_PromoterRelationUserCmd	typeref:struct:stRet_PromoterRelationUserCmd::SubPlayer
subUserCount	ScenesServer/Scene.h	/^    const DWORD subUserCount() { return --userCount; }$/;"	f	class:Scene
subat	BillServer/BillCallback.h	/^  int            subat;                                      \/\/Â≠êÁ±ªÂûã$/;"	m	struct:BillData
subat	base/UserCommand.h	/^      int      subat;          \/\/Â≠êÁ±ªÂûã$/;"	m	struct:Cmd::UserServer::t_cmd_ret
subatt	base/BillCommand.h	/^      DWORD subatt;  \/\/Ê∂àË¥πÂ≠êÁ±ªÂûã$/;"	m	struct:Cmd::Bill::t_Return_ObjCard
subject	base/Command.h	/^  char subject[0]; \/\/ È¢òÁõÆ Á≠îÊ°à‰∏Ä Á≠îÊ°à‰∫å Á≠îÊ°à‰∏â....Ôºå‰∏≠Èó¥‰ª•0ÂÅö‰∏∫ÂàÜÈöî$/;"	m	struct:Cmd::stQuestionQuiz
subject_type	base/SessionCommand.h	/^      BYTE  subject_type; \/\/ È¢òÂ∫ìÁ±ªÂûã$/;"	m	struct:Cmd::Session::t_createQuiz_SceneSession
subkind	base/Object.h	/^	BYTE subkind;\/\/◊”∆∑÷  (+1~+9)$/;"	m	struct:t_Object
subkind	tmpcode/commond.h	/^	BYTE subkind; \/\/∆∑÷ $/;"	m	struct:EquipSimulate
subupgrade	base/Object.h	/^	    BYTE subupgrade;        \/\/\/ ŒÔ∆∑…˝º∂Ω◊∏Ω Ùµ»º∂(◊∞±∏«øªØ≥Â–«)$/;"	m	union:t_Object::__anon61
subupgrade	tmpcode/commond.h	/^	BYTE subupgrade;\/\/≥Â‘¬¡¡$/;"	m	struct:EquipSimulate
sucDSRewardUserCmd	tmpcode/commond.h	/^	sucDSRewardUserCmd()$/;"	f	struct:sucDSRewardUserCmd
sucDSRewardUserCmd	tmpcode/commond.h	/^struct sucDSRewardUserCmd: public stNSUserCmd$/;"	s
sucMSRewardUserCmd	tmpcode/commond.h	/^	sucMSRewardUserCmd()$/;"	f	struct:sucMSRewardUserCmd
sucMSRewardUserCmd	tmpcode/commond.h	/^struct sucMSRewardUserCmd: public stNSUserCmd$/;"	s
success	base/HeroCardCmd.h	/^	BYTE success;		    \/\/1,≥…π¶ 0, ß∞‹$/;"	m	struct:Cmd::stRetMoveGameCardUserCmd
success	base/HeroCardCmd.h	/^	BYTE success;	    $/;"	m	struct:Cmd::stRetHeroFightMatchUserCmd
success	base/HeroCardCmd.h	/^	BYTE success;	    \/\/1≥…π¶ 0 ß∞‹$/;"	m	struct:Cmd::stRetDeleteOneCardGroupUserCmd
success	base/HeroCardCmd.h	/^	BYTE success;	    \/\/1≥…π¶ 0 ß∞‹$/;"	m	struct:Cmd::stRetSaveOneCardGroupUserCmd
success	tmpcode/commond.h	/^		BYTE  success;   \/\/»Áπ˚“—æ≠»€¡∂ÕÍ≥…,0±Ì æ≥…π¶, 1±Ì æ ß∞‹$/;"	m	struct:stStoveDataUserCmd
success	tmpcode/commond.h	/^		BYTE  success;   \/\/»Áπ˚“—æ≠»€¡∂ÕÍ≥…,0±Ì æ≥…π¶, 1±Ì æ ß∞‹,$/;"	m	struct:stEndStoveDataUserCmd
successOrNot	tmpcode/commond.h	/^	BYTE successOrNot;  $/;"	m	struct:stSetDancerUserCmd
successOrNot	tmpcode/commond.h	/^	BYTE successOrNot;$/;"	m	struct:stTakeTotleEaningUserCmd
suit	tmpcode/commond.h	/^	BYTE suit;  \/\/Ã◊◊∞  $/;"	m	struct:EquipSimulate
suit	tmpcode/commond.h	/^    OneSuit suit;$/;"	m	struct:stSetSuitPropertyUserCmd
suitElement	tmpcode/commond.h	/^struct suitElement$/;"	s
suits	base/zDatabase.h	/^    std::vector<DWORD> suits;$/;"	m	struct:zObjectB
suits	tmpcode/commond.h	/^    OneSuit suits[5];$/;"	m	struct:stSuitsPropertyUserCmd
sum	ScenesServer/SceneUserManager.h	/^    static SceneUserManager *sum;$/;"	m	class:SceneUserManager
summonAttend	ScenesServer/CardPk.cpp	/^bool zCard::summonAttend(DWORD cardID, DWORD num)$/;"	f	class:zCard
summonByNpcMap	ScenesServer/SceneNpc.cpp	/^int SceneNpc::summonByNpcMap(std::map<DWORD,std::pair<DWORD,DWORD> > map)$/;"	f	class:SceneNpc
summonList	ScenesServer/SceneDefine.h	/^	std::map<DWORD,std::pair<DWORD,DWORD> > summonList;$/;"	m	struct:t_NpcDefine
summonNpc	ScenesServer/Scene.cpp	/^int Scene::summonNpc(const t_NpcDefine &define,const zPos &pos,zNpcB *base,unsigned short dupIndex)$/;"	f	class:Scene
summonOneNpc	ScenesServer/Scene.h	/^Npc* Scene::summonOneNpc(const t_NpcDefine &define,const zPos &pos,zNpcB *base,DWORD standTime,zNpcB* abase,BYTE vdir, SceneEntryPk * m)$/;"	f	class:Scene
summoned	ScenesServer/SceneNpc.h	/^  bool summoned;$/;"	m	class:SceneNpc
summonrelive	ScenesServer/ScenePk.h	/^      SWORD summonrelive; \/\/ Âè¨Âî§ÂÖΩÈáçÁîü$/;"	m	struct:SkillState::__anon155::__anon156
summonsplit	ScenesServer/SceneEntryPk.h	/^    BYTE summonsplit; \/\/ÁÑ∞È≠îÂêõ‰∏ªÊ≠ª‰∫°ÂêéÂàÜË£ÇÊ†áÂøó$/;"	m	struct:SceneEntryPk
supdam	ScenesServer/ScenePk.h	/^      SWORD supdam;    \/\/ÂºìÁÆ≠Á±ªÂ¢ûÂä†Áâ©ÁêÜÊîªÂáªÂäõÂõ∫ÂÆöÂÄº(ÈïøÊïà)$/;"	m	struct:SkillState::__anon155::__anon156
superClient	base/zSubNetService.h	/^	SuperClient *superClient;    \/**< ÁÆ°ÁêÜÊúçÂä°Âô®ÁöÑÂÆ¢Êà∑Á´ØÂÆû‰æã *\/$/;"	m	class:zSubNetService
super_doc	BillServer/BillServer.cpp	/^static char super_doc[] = "\\nSuperServer\\n" "\\tgame server manager";$/;"	v
super_doc	FLServer/FLServer.cpp	/^static char super_doc[] = "\\nSuperServer\\n" "\\tgame server manager";$/;"	v
super_doc	GatewayServer/GatewayServer.cpp	/^static char super_doc[] = "\\nSuperServer\\n" "\\tgame server manager";$/;"	v
super_doc	RecordServer/RecordServer.cpp	/^static char super_doc[] = "\\nSuperServer\\n" "\\tgame server manager";$/;"	v
super_doc	Robot/ClientService.cpp	/^static char super_doc[] = "\\nSuperServer\\n" "\\tgame server manager";$/;"	v
super_doc	ScenesServer/ScenesServer.cpp	/^static char super_doc[] = "\\nSuperServer\\n" "\\tgame server manager";$/;"	v
super_doc	SessionServer/SessionServer.cpp	/^static char super_doc[] = "\\nSuperServer\\n" "\\tgame server manager";$/;"	v
super_doc	SuperServer/SuperServer.cpp	/^static char super_doc[] = "\\nSuperServer\\n" "\\tgame server manager";$/;"	v
super_doc	roleChangeServer/roleChangeServer.cpp	/^static char super_doc[] = "\\nSuperServer\\n" "\\tgame server manager";$/;"	v
super_doc	roleRegServer/roleRegServer.cpp	/^static char super_doc[] = "\\nSuperServer\\n" "\\tgame server manager";$/;"	v
super_mode	ScenesServer/Chat.h	/^      super_mode =   0x08,$/;"	e	enum:Gm::__anon179
super_options	BillServer/BillServer.cpp	/^static struct argp_option super_options[] =$/;"	v	typeref:struct:argp_option
super_options	FLServer/FLServer.cpp	/^static struct argp_option super_options[] =$/;"	v	typeref:struct:argp_option
super_options	GatewayServer/GatewayServer.cpp	/^static struct argp_option super_options[] =$/;"	v	typeref:struct:argp_option
super_options	RecordServer/RecordServer.cpp	/^static struct argp_option super_options[] =$/;"	v	typeref:struct:argp_option
super_options	Robot/ClientService.cpp	/^static struct argp_option super_options[] =$/;"	v	typeref:struct:argp_option
super_options	ScenesServer/ScenesServer.cpp	/^static struct argp_option super_options[] =$/;"	v	typeref:struct:argp_option
super_options	SessionServer/SessionServer.cpp	/^static struct argp_option super_options[] =$/;"	v	typeref:struct:argp_option
super_options	SuperServer/SuperServer.cpp	/^static struct argp_option super_options[] =$/;"	v	typeref:struct:argp_option
super_options	roleChangeServer/roleChangeServer.cpp	/^static struct argp_option super_options[] =$/;"	v	typeref:struct:argp_option
super_options	roleRegServer/roleRegServer.cpp	/^static struct argp_option super_options[] =$/;"	v	typeref:struct:argp_option
super_parse_opt	BillServer/BillServer.cpp	/^static error_t super_parse_opt(int key, char *arg, struct argp_state *state)$/;"	f
super_parse_opt	FLServer/FLServer.cpp	/^static error_t super_parse_opt(int key, char *arg, struct argp_state *state)$/;"	f
super_parse_opt	GatewayServer/GatewayServer.cpp	/^static error_t super_parse_opt(int key, char *arg, struct argp_state *state)$/;"	f
super_parse_opt	RecordServer/RecordServer.cpp	/^static error_t super_parse_opt(int key, char *arg, struct argp_state *state)$/;"	f
super_parse_opt	Robot/ClientService.cpp	/^static error_t super_parse_opt(int key, char *arg, struct argp_state *state)$/;"	f
super_parse_opt	ScenesServer/ScenesServer.cpp	/^static error_t super_parse_opt(int key, char *arg, struct argp_state *state)$/;"	f
super_parse_opt	SessionServer/SessionServer.cpp	/^static error_t super_parse_opt(int key, char *arg, struct argp_state *state)$/;"	f
super_parse_opt	SuperServer/SuperServer.cpp	/^static error_t super_parse_opt(int key, char *arg, struct argp_state *state)$/;"	f
super_parse_opt	roleChangeServer/roleChangeServer.cpp	/^static error_t super_parse_opt(int key, char *arg, struct argp_state *state)$/;"	f
super_parse_opt	roleRegServer/roleRegServer.cpp	/^static error_t super_parse_opt(int key, char *arg, struct argp_state *state)$/;"	f
supportTransactions	base/zDBConnPool.h	/^	const bool supportTransactions;$/;"	m	struct:UrlInfo
swap	ScenesServer/zCard.cpp	/^bool CardSlot::swap(WORD index1, WORD index2)$/;"	f	class:CardSlot
swap	ScenesServer/zObject.cpp	/^bool Package::swap(WORD index1, WORD index2)$/;"	f	class:Package
swapdamcharid	ScenesServer/SceneEntryPk.h	/^    DWORD swapdamcharid; \/\/\/ÁåÆË∫´ÊñΩÊ≥ïËÄÖÁöÑ‰∏¥Êó∂ID$/;"	m	struct:SceneEntryPk
swapdamcharid2	ScenesServer/SceneEntryPk.h	/^    DWORD swapdamcharid2; \/\/\/ÂÖ≥Áà±ÊñΩÊ≥ïËÄÖÁöÑ‰∏¥Êó∂ID$/;"	m	struct:SceneEntryPk
swdValue	ScenesServer/ScenePk.h	/^    SWORD swdValue[171];$/;"	m	union:SkillState::__anon155
switchAI	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::switchAI(const bool setTime)$/;"	f	class:NpcAIController
switchPKMode	ScenesServer/ScenePk.cpp	/^bool SceneUser::switchPKMode(const Cmd::stPKModeUserCmd *rev)$/;"	f	class:SceneUser
switchdie	ScenesServer/SceneEntryPk.h	/^    BYTE switchdie; \/\/ÂêåÂ±èËΩ¨ÁßªÊ≠ª‰∫°Áä∂ÊÄÅÁöÑÂá†Áéá$/;"	m	struct:SceneEntryPk
sword_udam	ScenesServer/ScenePk.h	/^      SWORD sword_udam; \/\/ÊèêÂçáÂºìÁÆ≠ÊîªÂáªÁöÑ‰º§ÂÆ≥ÁÇπÊï∞   \/\/ 110$/;"	m	struct:SkillState::__anon155::__anon156
sync	base/zTCPClientTask.h	/^		sync    =  1,            \/**< µ»¥˝Õ¨≤Ω◊¥Ã¨ *\/$/;"	e	enum:zTCPClientTask::ConnState
sync	base/zTCPTask.h	/^		sync    =  2,            \/**< µ»¥˝¿¥◊‘∆‰À¸∑˛ŒÒ∆˜µƒ—È÷§–≈œ¢Õ¨≤Ω *\/$/;"	e	enum:zTCPTask::zTCPTask_State
syncThread	base/zTCPTaskPool.h	/^	zSyncThread *syncThread;                \/**< µ»¥˝Õ¨≤Ωœﬂ≥Ã *\/$/;"	m	class:zTCPTaskPool
sys	ScenesServer/script_func.cpp	/^bool sys(SceneUser* target,int type,const char* msg)$/;"	f
sysSetting	GatewayServer/GateUser.h	/^	BYTE sysSetting[20];$/;"	m	class:GateUser
sysSetting	ScenesServer/SceneUser.h	/^      BYTE sysSetting[20];$/;"	m	union:SceneUser::__anon185
sysSetting	SessionServer/Session.h	/^    BYTE sysSetting[20];\/\/Á≥ªÁªüËÆæÁΩÆ$/;"	m	class:UserSession
sysSetting	base/SceneCommand.h	/^      BYTE sysSetting[20];$/;"	m	struct:Cmd::Scene::t_sysSetting_GateScene
sysSetting	base/SessionCommand.h	/^      BYTE sysSetting[20];$/;"	m	struct:Cmd::Session::t_sysSetting_SceneSession
systemstate	GatewayServer/GateUser.h	/^	volatile Systemstate systemstate;$/;"	m	class:GateUser
szAccelKey	base/Command.h	/^  BYTE szAccelKey[4];$/;"	m	struct:Cmd::stGameAccelKey
szAccelKey	tmpcode/commond.h	/^	BYTE szAccelKey[4];$/;"	m	struct:stGameAccelKey
szMapName	base/Command.h	/^  char szMapName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stTeamMemberPosition
szMapName	tmpcode/commond.h	/^	char szMapName[MAX_NAMESIZE];$/;"	m	struct:stTeamMemberPosition
szName	SessionServer/SessionManager.cpp	/^    char  szName[MAX_NAMESIZE];$/;"	m	class:CGraceUser
szName	base/Command.h	/^  char  szName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stWaitGenItem
szName	base/Command.h	/^  char  szName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stWaitOfficialItem
szName	base/Command.h	/^  char szName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stTeamMemberPosition
szName	tmpcode/commond.h	/^	char szName[MAX_NAMESIZE];$/;"	m	struct:stTeamMemberPosition
szOptionDesc	base/Command.h	/^  char  szOptionDesc[MAX_NAMESIZE];$/;"	m	struct:Cmd::stTechItem
szOptionDesc	base/Command.h	/^  char  szOptionDesc[MAX_NAMESIZE];$/;"	m	struct:Cmd::stVoteItem
szResearchName	base/Command.h	/^  char  szResearchName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stTechItem
tGood	ScenesServer/ScenePk.h	/^  zRTime tGood;$/;"	m	struct:ScenePkState
tGoodNormal	ScenesServer/ScenePk.h	/^  zRTime tGoodNormal;$/;"	m	struct:ScenePkState
tProtect	ScenesServer/ScenePk.h	/^  zRTime tProtect;$/;"	m	struct:ScenePkState
tSellObject	tmpcode/commond.h	/^	struct tSellObject$/;"	s	struct:stRequestAddObjectSellUserCmd
t_AddSeptSuccessCmd	tmpcode/commond.h	/^	t_AddSeptSuccessCmd()$/;"	f	struct:t_AddSeptSuccessCmd
t_AddSeptSuccessCmd	tmpcode/commond.h	/^struct t_AddSeptSuccessCmd : public stSeptUserCmd$/;"	s
t_AskForEndSeptGuard	tmpcode/commond.h	/^	t_AskForEndSeptGuard()$/;"	f	struct:t_AskForEndSeptGuard
t_AskForEndSeptGuard	tmpcode/commond.h	/^struct t_AskForEndSeptGuard: public stSeptUserCmd$/;"	s
t_AuctionCmd	base/SessionCommand.h	/^      t_AuctionCmd()$/;"	f	struct:Cmd::Session::t_AuctionCmd
t_AuctionCmd	base/SessionCommand.h	/^    struct t_AuctionCmd : t_NullCmd$/;"	s	namespace:Cmd::Session
t_AutoPayAutoSkill	tmpcode/commond.h	/^	t_AutoPayAutoSkill(const bool _autoPay) $/;"	f	struct:t_AutoPayAutoSkill
t_AutoPayAutoSkill	tmpcode/commond.h	/^struct t_AutoPayAutoSkill : stNullUserCmd $/;"	s
t_AutoSkill_Start	tmpcode/commond.h	/^	t_AutoSkill_Start(const bool isStart, const bool x2) $/;"	f	struct:t_AutoSkill_Start
t_AutoSkill_Start	tmpcode/commond.h	/^struct t_AutoSkill_Start : stNullUserCmd $/;"	s
t_Bill_ForwardBill	base/BillCommand.h	/^      t_Bill_ForwardBill()$/;"	f	struct:Cmd::Bill::t_Bill_ForwardBill
t_Bill_ForwardBill	base/BillCommand.h	/^    struct t_Bill_ForwardBill : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Bill_ForwardBillToScene	base/BillCommand.h	/^      t_Bill_ForwardBillToScene()$/;"	f	struct:Cmd::Bill::t_Bill_ForwardBillToScene
t_Bill_ForwardBillToScene	base/BillCommand.h	/^    struct t_Bill_ForwardBillToScene : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Bill_ForwardScene	base/SceneCommand.h	/^      t_Bill_ForwardScene()$/;"	f	struct:Cmd::Scene::t_Bill_ForwardScene
t_Bill_ForwardScene	base/SceneCommand.h	/^    struct t_Bill_ForwardScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Bill_ForwardUser	base/BillCommand.h	/^      t_Bill_ForwardUser()$/;"	f	struct:Cmd::Bill::t_Bill_ForwardUser
t_Bill_ForwardUser	base/BillCommand.h	/^    struct t_Bill_ForwardUser : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_BlastGemNPC_SceneSession	base/SessionCommand.h	/^      t_BlastGemNPC_SceneSession()$/;"	f	struct:Cmd::Session::t_BlastGemNPC_SceneSession
t_BlastGemNPC_SceneSession	base/SessionCommand.h	/^    struct t_BlastGemNPC_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_BroadcastMessage	base/BroadCastCommand.h	/^      t_BroadcastMessage()$/;"	f	struct:Cmd::BroadCast::t_BroadcastMessage
t_BroadcastMessage	base/BroadCastCommand.h	/^    struct t_BroadcastMessage : t_NullCmd$/;"	s	namespace:Cmd::BroadCast
t_Broadcast_GmTool	base/GmToolCommand.h	/^      t_Broadcast_GmTool() : t_NullCmd(CMD_GMTOOL,PARA_BROADCAST_GMTOOL)$/;"	f	struct:Cmd::GmTool::t_Broadcast_GmTool
t_Broadcast_GmTool	base/GmToolCommand.h	/^    struct t_Broadcast_GmTool : t_NullCmd$/;"	s	namespace:Cmd::GmTool
t_BufferCmdQueue	base/zSocket.h	/^typedef ByteBuffer<std::vector<unsigned char> > t_BufferCmdQueue;$/;"	t
t_BuyTimeAutoSkill	tmpcode/commond.h	/^	t_BuyTimeAutoSkill(const DWORD _money) $/;"	f	struct:t_BuyTimeAutoSkill
t_BuyTimeAutoSkill	tmpcode/commond.h	/^struct t_BuyTimeAutoSkill : stNullUserCmd $/;"	s
t_CancelGemState_SceneSession	base/SessionCommand.h	/^      t_CancelGemState_SceneSession()$/;"	f	struct:Cmd::Session::t_CancelGemState_SceneSession
t_CancelGemState_SceneSession	base/SessionCommand.h	/^    struct t_CancelGemState_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_CancelListAllStock_GateScene	base/Command.h	/^  t_CancelListAllStock_GateScene()$/;"	f	struct:Cmd::t_CancelListAllStock_GateScene
t_CancelListAllStock_GateScene	base/Command.h	/^struct t_CancelListAllStock_GateScene : public stStockBillUserCmd$/;"	s	namespace:Cmd
t_Card	base/Card.h	/^	t_Card()$/;"	f	struct:t_Card
t_Card	base/Card.h	/^struct t_Card$/;"	s
t_CardPK	base/Card.h	/^    t_CardPK()$/;"	f	struct:t_CardPK
t_CardPK	base/Card.h	/^struct t_CardPK$/;"	s
t_CartoonCmd	base/SessionCommand.h	/^      t_CartoonCmd()$/;"	f	struct:Cmd::Session::t_CartoonCmd
t_CartoonCmd	base/SessionCommand.h	/^    struct t_CartoonCmd : t_NullCmd$/;"	s	namespace:Cmd::Session
t_CartoonData	base/Command.h	/^struct t_CartoonData$/;"	s	namespace:Cmd
t_ChangeAP	base/SessionCommand.h	/^      t_ChangeAP(): t_NullCmd(CMD_SCENE,QUEST_CHANGE_AP)$/;"	f	struct:Cmd::Session::t_ChangeAP
t_ChangeAP	base/SessionCommand.h	/^    struct t_ChangeAP : public t_NullCmd \/\/Êõ¥ÊîπË°åÂä®Âäõ$/;"	s	namespace:Cmd::Session
t_ChangeCountryStatus	base/SceneCommand.h	/^      t_ChangeCountryStatus()$/;"	f	struct:Cmd::Scene::t_ChangeCountryStatus
t_ChangeCountryStatus	base/SceneCommand.h	/^    struct t_ChangeCountryStatus : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_ChangeGemState_SceneSession	base/SessionCommand.h	/^      t_ChangeGemState_SceneSession()$/;"	f	struct:Cmd::Session::t_ChangeGemState_SceneSession
t_ChangeGemState_SceneSession	base/SessionCommand.h	/^    struct t_ChangeGemState_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_ChangeRP	base/SessionCommand.h	/^      t_ChangeRP(): t_NullCmd(CMD_SCENE,QUEST_CHANGE_RP)$/;"	f	struct:Cmd::Session::t_ChangeRP
t_ChangeRP	base/SessionCommand.h	/^    struct t_ChangeRP : public t_NullCmd$/;"	s	namespace:Cmd::Session
t_ChangeServer_SessionCheck	FLServer/DBAccessCommand.h	/^      t_ChangeServer_SessionCheck()$/;"	f	struct:Cmd::DBAccess::t_ChangeServer_SessionCheck
t_ChangeServer_SessionCheck	FLServer/DBAccessCommand.h	/^    struct t_ChangeServer_SessionCheck : t_NullCmd$/;"	s	namespace:Cmd::DBAccess
t_ChangeVerifyVersion	base/SceneCommand.h	/^      t_ChangeVerifyVersion()$/;"	f	struct:Cmd::Scene::t_ChangeVerifyVersion
t_ChangeVerifyVersion	base/SceneCommand.h	/^    struct t_ChangeVerifyVersion : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_ChangeZoneDel_Gateway	base/SuperCommand.h	/^	  t_ChangeZoneDel_Gateway()$/;"	f	struct:Cmd::Super::t_ChangeZoneDel_Gateway
t_ChangeZoneDel_Gateway	base/SuperCommand.h	/^	struct t_ChangeZoneDel_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Super
t_Charname_Gateway	base/SuperCommand.h	/^      t_Charname_Gateway()$/;"	f	struct:Cmd::Super::t_Charname_Gateway
t_Charname_Gateway	base/SuperCommand.h	/^    struct t_Charname_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Super
t_Charname_reg_withID	base/RoleregCommand.h	/^      t_Charname_reg_withID()$/;"	f	struct:Cmd::RoleReg::t_Charname_reg_withID
t_Charname_reg_withID	base/RoleregCommand.h	/^    struct t_Charname_reg_withID : t_NullCmd$/;"	s	namespace:Cmd::RoleReg
t_Charname_reg_withID	roleRegServer/RoleregCommand.h	/^      t_Charname_reg_withID()$/;"	f	struct:Cmd::RoleReg::t_Charname_reg_withID
t_Charname_reg_withID	roleRegServer/RoleregCommand.h	/^    struct t_Charname_reg_withID : t_NullCmd$/;"	s	namespace:Cmd::RoleReg
t_ChatCmd	base/RolechangeCommand.h	/^	t_ChatCmd(BYTE para) : t_NullCmd(CMD_CHAT_OVER_ZONE, para)$/;"	f	struct:Cmd::Rolechange::t_ChatCmd
t_ChatCmd	base/RolechangeCommand.h	/^    struct t_ChatCmd : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_Chat_GmTool	base/GmToolCommand.h	/^      t_Chat_GmTool() : t_NullCmd(CMD_GMTOOL,PARA_CHAT_GMTOOL)$/;"	f	struct:Cmd::GmTool::t_Chat_GmTool
t_Chat_GmTool	base/GmToolCommand.h	/^    struct t_Chat_GmTool : t_NullCmd$/;"	s	namespace:Cmd::GmTool
t_CheckName_GateRecord	base/RecordCommand.h	/^      t_CheckName_GateRecord()$/;"	f	struct:Cmd::Record::t_CheckName_GateRecord
t_CheckName_GateRecord	base/RecordCommand.h	/^    struct t_CheckName_GateRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_CheckName_Return_GateRecord	base/RecordCommand.h	/^      t_CheckName_Return_GateRecord()$/;"	f	struct:Cmd::Record::t_CheckName_Return_GateRecord
t_CheckName_Return_GateRecord	base/RecordCommand.h	/^    struct t_CheckName_Return_GateRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_Check_CallTimes_SceneSession	base/SessionCommand.h	/^      t_Check_CallTimes_SceneSession()$/;"	f	struct:Cmd::Session::t_Check_CallTimes_SceneSession
t_Check_CallTimes_SceneSession	base/SessionCommand.h	/^    struct t_Check_CallTimes_SceneSession  : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Check_Valid	base/RolechangeCommand.h	/^	t_Check_Valid() : t_NullCmd(CMD_BATTLE, PARA_CHECK_VALID)$/;"	f	struct:Cmd::Rolechange::t_Check_Valid
t_Check_Valid	base/RolechangeCommand.h	/^    struct t_Check_Valid : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_ClearGemNPC_SceneSession	base/SessionCommand.h	/^      t_ClearGemNPC_SceneSession()$/;"	f	struct:Cmd::Session::t_ClearGemNPC_SceneSession
t_ClearGemNPC_SceneSession	base/SessionCommand.h	/^    struct t_ClearGemNPC_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_ClearRelation_SceneSession	base/SessionCommand.h	/^      t_ClearRelation_SceneSession()$/;"	f	struct:Cmd::Session::t_ClearRelation_SceneSession
t_ClearRelation_SceneSession	base/SessionCommand.h	/^    struct t_ClearRelation_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_CloseNpc_SceneSession	base/SessionCommand.h	/^      t_CloseNpc_SceneSession()$/;"	f	struct:Cmd::Session::t_CloseNpc_SceneSession
t_CloseNpc_SceneSession	base/SessionCommand.h	/^    struct t_CloseNpc_SceneSession  : t_NullCmd$/;"	s	namespace:Cmd::Session
t_CommonCmd	base/RolechangeCommand.h	/^	t_CommonCmd(BYTE para) : t_NullCmd(CMD_COMMON, para)$/;"	f	struct:Cmd::Rolechange::t_CommonCmd
t_CommonCmd	base/RolechangeCommand.h	/^    struct t_CommonCmd : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_ContributeCountry_SceneSession	base/SessionCommand.h	/^      t_ContributeCountry_SceneSession()$/;"	f	struct:Cmd::Session::t_ContributeCountry_SceneSession
t_ContributeCountry_SceneSession	base/SessionCommand.h	/^    struct t_ContributeCountry_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_CountFriendDegree_SceneSession	base/SessionCommand.h	/^      t_CountFriendDegree_SceneSession()$/;"	f	struct:Cmd::Session::t_CountFriendDegree_SceneSession
t_CountFriendDegree_SceneSession	base/SessionCommand.h	/^    struct t_CountFriendDegree_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_CountryIncLoginCount	base/SessionCommand.h	/^	  t_CountryIncLoginCount(const DWORD id)$/;"	f	struct:Cmd::Session::t_CountryIncLoginCount
t_CountryIncLoginCount	base/SessionCommand.h	/^    struct t_CountryIncLoginCount : t_NullCmd$/;"	s	namespace:Cmd::Session
t_CountryOnline	base/SuperCommand.h	/^      t_CountryOnline() : t_NullCmd(CMD_COUNTRYONLINE,PARA_COUNTRYONLINE)$/;"	f	struct:Cmd::Super::t_CountryOnline
t_CountryOnline	base/SuperCommand.h	/^    struct t_CountryOnline : t_NullCmd$/;"	s	namespace:Cmd::Super
t_CreateChar_GateRecord	base/RecordCommand.h	/^      t_CreateChar_GateRecord()$/;"	f	struct:Cmd::Record::t_CreateChar_GateRecord
t_CreateChar_GateRecord	base/RecordCommand.h	/^    struct t_CreateChar_GateRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_CreateChar_Return_GateRecord	base/RecordCommand.h	/^      t_CreateChar_Return_GateRecord()$/;"	f	struct:Cmd::Record::t_CreateChar_Return_GateRecord
t_CreateChar_Return_GateRecord	base/RecordCommand.h	/^    struct t_CreateChar_Return_GateRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_CreateNewPkGame_SceneSession	base/SessionCommand.h	/^	  t_CreateNewPkGame_SceneSession() : t_PKGame_SceneSession(CREATE_NEW_PK_GAME_PARA)$/;"	f	struct:Cmd::Session::t_CreateNewPkGame_SceneSession
t_CreateNewPkGame_SceneSession	base/SessionCommand.h	/^    struct t_CreateNewPkGame_SceneSession : t_PKGame_SceneSession$/;"	s	namespace:Cmd::Session
t_DES_SPtrans	base/EncDec/EncDec.h	/^typedef DES_LONG t_DES_SPtrans[8][64];$/;"	t
t_DES_SPtrans	base/EncDec/mydes.h	/^typedef DES_LONG t_DES_SPtrans[8][64];$/;"	t
t_DebugCountryPower_SceneSession	base/SessionCommand.h	/^      t_DebugCountryPower_SceneSession()$/;"	f	struct:Cmd::Session::t_DebugCountryPower_SceneSession
t_DebugCountryPower_SceneSession	base/SessionCommand.h	/^    struct t_DebugCountryPower_SceneSession  : t_NullCmd$/;"	s	namespace:Cmd::Session
t_DelChar_GateRecord	base/RecordCommand.h	/^      t_DelChar_GateRecord()$/;"	f	struct:Cmd::Record::t_DelChar_GateRecord
t_DelChar_GateRecord	base/RecordCommand.h	/^    struct t_DelChar_GateRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_DelChar_GateSession	base/SessionCommand.h	/^      t_DelChar_GateSession()$/;"	f	struct:Cmd::Session::t_DelChar_GateSession
t_DelChar_GateSession	base/SessionCommand.h	/^    struct t_DelChar_GateSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_DelChar_Return_GateRecord	base/RecordCommand.h	/^      t_DelChar_Return_GateRecord()$/;"	f	struct:Cmd::Record::t_DelChar_Return_GateRecord
t_DelChar_Return_GateRecord	base/RecordCommand.h	/^    struct t_DelChar_Return_GateRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_Delete_CharTest_SceneRecord	base/RecordCommand.h	/^      t_Delete_CharTest_SceneRecord()$/;"	f	struct:Cmd::Record::t_Delete_CharTest_SceneRecord
t_Delete_CharTest_SceneRecord	base/RecordCommand.h	/^    struct t_Delete_CharTest_SceneRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_DragonData	tmpcode/commond.h	/^    t_DragonData()$/;"	f	struct:t_DragonData
t_DragonData	tmpcode/commond.h	/^struct t_DragonData$/;"	s
t_ForwardMsg_CommonCmd	base/RolechangeCommand.h	/^	t_ForwardMsg_CommonCmd():t_CommonCmd(PARA_FORWARD_MSG)$/;"	f	struct:Cmd::Rolechange::t_ForwardMsg_CommonCmd
t_ForwardMsg_CommonCmd	base/RolechangeCommand.h	/^    struct t_ForwardMsg_CommonCmd : t_CommonCmd$/;"	s	namespace:Cmd::Rolechange
t_ForwardMsg_Scene	base/SuperCommand.h	/^	t_ForwardMsg_Scene() : t_NullCmd(CMD_SCENE, PARA_FORWARD_MSG_SCENE)$/;"	f	struct:Cmd::Super::t_ForwardMsg_Scene
t_ForwardMsg_Scene	base/SuperCommand.h	/^    struct t_ForwardMsg_Scene : t_NullCmd$/;"	s	namespace:Cmd::Super
t_ForwardScene_dupChange	base/SceneCommand.h	/^      t_ForwardScene_dupChange()$/;"	f	struct:Cmd::Scene::t_ForwardScene_dupChange
t_ForwardScene_dupChange	base/SceneCommand.h	/^    struct t_ForwardScene_dupChange : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_GMCreateUnionCity_SceneSession	base/SessionCommand.h	/^      t_GMCreateUnionCity_SceneSession()$/;"	f	struct:Cmd::Session::t_GMCreateUnionCity_SceneSession
t_GMCreateUnionCity_SceneSession	base/SessionCommand.h	/^    struct t_GMCreateUnionCity_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_GYList_FL	base/FLCommand.h	/^      t_GYList_FL()$/;"	f	struct:Cmd::FL::t_GYList_FL
t_GYList_FL	base/FLCommand.h	/^    struct t_GYList_FL : t_NullCmd$/;"	s	namespace:Cmd::FL
t_GYList_Gateway	base/SuperCommand.h	/^      t_GYList_Gateway()$/;"	f	struct:Cmd::Super::t_GYList_Gateway
t_GYList_Gateway	base/SuperCommand.h	/^    struct t_GYList_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Super
t_GameTime	base/BroadCommand.h	/^      t_GameTime()$/;"	f	struct:Cmd::BroadServer::t_GameTime
t_GameTime	base/BroadCommand.h	/^    struct t_GameTime : t_NullCmd$/;"	s	namespace:Cmd::BroadServer
t_GameTime	base/SuperCommand.h	/^      t_GameTime()$/;"	f	struct:Cmd::Super::t_GameTime
t_GameTime	base/SuperCommand.h	/^    struct t_GameTime : t_NullCmd$/;"	s	namespace:Cmd::Super
t_GetCreateUnionItem_SceneSession	base/SessionCommand.h	/^      t_GetCreateUnionItem_SceneSession()$/;"	f	struct:Cmd::Session::t_GetCreateUnionItem_SceneSession
t_GetCreateUnionItem_SceneSession	base/SessionCommand.h	/^    struct t_GetCreateUnionItem_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_GetHeroList	base/Command.h	/^	t_GetHeroList() $/;"	f	struct:Cmd::t_GetHeroList
t_GetHeroList	base/Command.h	/^struct t_GetHeroList : stNullUserCmd $/;"	s	namespace:Cmd
t_GetHeroList	tmpcode/commond.h	/^	t_GetHeroList() $/;"	f	struct:t_GetHeroList
t_GetHeroList	tmpcode/commond.h	/^struct t_GetHeroList : stNullUserCmd $/;"	s
t_GetHeroMedal	tmpcode/commond.h	/^	t_GetHeroMedal()$/;"	f	struct:t_GetHeroMedal
t_GetHeroMedal	tmpcode/commond.h	/^struct t_GetHeroMedal : stNullUserCmd$/;"	s
t_GetSeptExp_SceneSession	base/SessionCommand.h	/^      t_GetSeptExp_SceneSession()$/;"	f	struct:Cmd::Session::t_GetSeptExp_SceneSession
t_GetSeptExp_SceneSession	base/SessionCommand.h	/^    struct t_GetSeptExp_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_GetSeptNormalExp_SceneSession	base/SessionCommand.h	/^      t_GetSeptNormalExp_SceneSession()$/;"	f	struct:Cmd::Session::t_GetSeptNormalExp_SceneSession
t_GetSeptNormalExp_SceneSession	base/SessionCommand.h	/^    struct t_GetSeptNormalExp_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_GetSortList	base/Command.h	/^        t_GetSortList() {$/;"	f	struct:Cmd::t_GetSortList
t_GetSortList	base/Command.h	/^struct t_GetSortList : stNullUserCmd {$/;"	s	namespace:Cmd
t_GetSortList	tmpcode/commond.h	/^        t_GetSortList() {$/;"	f	struct:t_GetSortList
t_GetSortList	tmpcode/commond.h	/^struct t_GetSortList : stNullUserCmd {$/;"	s
t_Get_SelectInfo_GateRecord	base/RecordCommand.h	/^      t_Get_SelectInfo_GateRecord()$/;"	f	struct:Cmd::Record::t_Get_SelectInfo_GateRecord
t_Get_SelectInfo_GateRecord	base/RecordCommand.h	/^    struct t_Get_SelectInfo_GateRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_GlobalMessage_SceneSession	base/SessionCommand.h	/^		t_GlobalMessage_SceneSession()$/;"	f	struct:Cmd::Session::t_GlobalMessage_SceneSession
t_GlobalMessage_SceneSession	base/SessionCommand.h	/^	struct t_GlobalMessage_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_GoTo_Leader_Check_SceneSession	base/SessionCommand.h	/^      t_GoTo_Leader_Check_SceneSession()$/;"	f	struct:Cmd::Session::t_GoTo_Leader_Check_SceneSession
t_GoTo_Leader_Check_SceneSession	base/SessionCommand.h	/^    struct t_GoTo_Leader_Check_SceneSession  : t_NullCmd$/;"	s	namespace:Cmd::Session
t_GoTo_Leader_SceneSession	base/SessionCommand.h	/^      t_GoTo_Leader_SceneSession()$/;"	f	struct:Cmd::Session::t_GoTo_Leader_SceneSession
t_GoTo_Leader_SceneSession	base/SessionCommand.h	/^    struct t_GoTo_Leader_SceneSession  : t_NullCmd$/;"	s	namespace:Cmd::Session
t_HorseData	base/Command.h	/^struct t_HorseData$/;"	s	namespace:Cmd
t_HorseData	tmpcode/commond.h	/^    t_HorseData()$/;"	f	struct:t_HorseData
t_HorseData	tmpcode/commond.h	/^struct t_HorseData$/;"	s
t_Insert_CharTest_SceneRecord	base/RecordCommand.h	/^      t_Insert_CharTest_SceneRecord()$/;"	f	struct:Cmd::Record::t_Insert_CharTest_SceneRecord
t_Insert_CharTest_SceneRecord	base/RecordCommand.h	/^    struct t_Insert_CharTest_SceneRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_LandMass	base/Command.h	/^struct t_LandMass {$/;"	s	namespace:Cmd
t_LastPositionTimeListSept	tmpcode/commond.h	/^	t_LastPositionTimeListSept()$/;"	f	struct:t_LastPositionTimeListSept
t_LastPositionTimeListSept	tmpcode/commond.h	/^struct t_LastPositionTimeListSept: public stSeptUserCmd$/;"	s
t_Log_GmTool	base/GmToolCommand.h	/^      t_Log_GmTool() : t_NullCmd(CMD_GMTOOL,PARA_LOG_GMTOOL)$/;"	f	struct:Cmd::GmTool::t_Log_GmTool
t_Log_GmTool	base/GmToolCommand.h	/^    struct t_Log_GmTool : t_NullCmd$/;"	s	namespace:Cmd::GmTool
t_LoginBill	base/BillCommand.h	/^      t_LoginBill()$/;"	f	struct:Cmd::Bill::t_LoginBill
t_LoginBill	base/BillCommand.h	/^    struct t_LoginBill : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_LoginCmd	base/BroadCastCommand.h	/^      t_LoginCmd()$/;"	f	struct:Cmd::BroadCast::t_LoginCmd
t_LoginCmd	base/BroadCastCommand.h	/^    struct t_LoginCmd : t_NullCmd$/;"	s	namespace:Cmd::BroadCast
t_LoginCmd	base/RolechangeCommand.h	/^      t_LoginCmd()$/;"	f	struct:Cmd::Rolechange::t_LoginCmd
t_LoginCmd	base/RolechangeCommand.h	/^    struct t_LoginCmd : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_LoginCmd_OK	base/BroadCastCommand.h	/^      t_LoginCmd_OK()$/;"	f	struct:Cmd::BroadCast::t_LoginCmd_OK
t_LoginCmd_OK	base/BroadCastCommand.h	/^    struct t_LoginCmd_OK : t_NullCmd$/;"	s	namespace:Cmd::BroadCast
t_LoginCmd_OK	base/RolechangeCommand.h	/^      t_LoginCmd_OK()$/;"	f	struct:Cmd::Rolechange::t_LoginCmd_OK
t_LoginCmd_OK	base/RolechangeCommand.h	/^    struct t_LoginCmd_OK : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_LoginFL	base/FLCommand.h	/^      t_LoginFL()$/;"	f	struct:Cmd::FL::t_LoginFL
t_LoginFL	base/FLCommand.h	/^    struct t_LoginFL : t_NullCmd$/;"	s	namespace:Cmd::FL
t_LoginFL_OK	base/FLCommand.h	/^      t_LoginFL_OK()$/;"	f	struct:Cmd::FL::t_LoginFL_OK
t_LoginFL_OK	base/FLCommand.h	/^    struct t_LoginFL_OK : t_NullCmd$/;"	s	namespace:Cmd::FL
t_LoginMini	base/MiniCommand.h	/^      t_LoginMini()$/;"	f	struct:Cmd::Mini::t_LoginMini
t_LoginMini	base/MiniCommand.h	/^    struct t_LoginMini : t_NullCmd$/;"	s	namespace:Cmd::Mini
t_LoginRecord	base/RecordCommand.h	/^      t_LoginRecord()$/;"	f	struct:Cmd::Record::t_LoginRecord
t_LoginRecord	base/RecordCommand.h	/^    struct t_LoginRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_LoginRoleReg	base/RoleregCommand.h	/^      t_LoginRoleReg()$/;"	f	struct:Cmd::RoleReg::t_LoginRoleReg
t_LoginRoleReg	base/RoleregCommand.h	/^    struct t_LoginRoleReg : t_NullCmd$/;"	s	namespace:Cmd::RoleReg
t_LoginRoleReg	roleRegServer/RoleregCommand.h	/^      t_LoginRoleReg()$/;"	f	struct:Cmd::RoleReg::t_LoginRoleReg
t_LoginRoleReg	roleRegServer/RoleregCommand.h	/^    struct t_LoginRoleReg : t_NullCmd$/;"	s	namespace:Cmd::RoleReg
t_LoginRoleReg_OK	base/RoleregCommand.h	/^      t_LoginRoleReg_OK()$/;"	f	struct:Cmd::RoleReg::t_LoginRoleReg_OK
t_LoginRoleReg_OK	base/RoleregCommand.h	/^    struct t_LoginRoleReg_OK : t_NullCmd$/;"	s	namespace:Cmd::RoleReg
t_LoginRoleReg_OK	roleRegServer/RoleregCommand.h	/^      t_LoginRoleReg_OK()$/;"	f	struct:Cmd::RoleReg::t_LoginRoleReg_OK
t_LoginRoleReg_OK	roleRegServer/RoleregCommand.h	/^    struct t_LoginRoleReg_OK : t_NullCmd$/;"	s	namespace:Cmd::RoleReg
t_LoginScene	base/SceneCommand.h	/^      t_LoginScene()$/;"	f	struct:Cmd::Scene::t_LoginScene
t_LoginScene	base/SceneCommand.h	/^    struct t_LoginScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_LoginServer_SessionCheck	FLServer/DBAccessCommand.h	/^      t_LoginServer_SessionCheck()$/;"	f	struct:Cmd::DBAccess::t_LoginServer_SessionCheck
t_LoginServer_SessionCheck	FLServer/DBAccessCommand.h	/^    struct t_LoginServer_SessionCheck : t_NullCmd$/;"	s	namespace:Cmd::DBAccess
t_LoginSession	base/SessionCommand.h	/^      t_LoginSession()$/;"	f	struct:Cmd::Session::t_LoginSession
t_LoginSession	base/SessionCommand.h	/^    struct t_LoginSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_LoginVerify_Gateway	base/BillCommand.h	/^      t_LoginVerify_Gateway()$/;"	f	struct:Cmd::Bill::t_LoginVerify_Gateway
t_LoginVerify_Gateway	base/BillCommand.h	/^    struct t_LoginVerify_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_LoginVerify_Gateway_Return	base/BillCommand.h	/^      t_LoginVerify_Gateway_Return()$/;"	f	struct:Cmd::Bill::t_LoginVerify_Gateway_Return
t_LoginVerify_Gateway_Return	base/BillCommand.h	/^    struct t_LoginVerify_Gateway_Return : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_LogonDBAccess	FLServer/DBAccessCommand.h	/^      t_LogonDBAccess()$/;"	f	struct:Cmd::DBAccess::t_LogonDBAccess
t_LogonDBAccess	FLServer/DBAccessCommand.h	/^    struct t_LogonDBAccess : t_NullCmd$/;"	s	namespace:Cmd::DBAccess
t_Logout_Gateway	base/BillCommand.h	/^      t_Logout_Gateway()$/;"	f	struct:Cmd::Bill::t_Logout_Gateway
t_Logout_Gateway	base/BillCommand.h	/^    struct t_Logout_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_MagicPoint	base/HeroCardCmd.h	/^	t_MagicPoint()$/;"	f	struct:Cmd::t_MagicPoint
t_MagicPoint	base/HeroCardCmd.h	/^    struct t_MagicPoint$/;"	s	namespace:Cmd
t_MainUserData	base/Command.h	/^struct t_MainUserData $/;"	s	namespace:Cmd
t_MainUserData	tmpcode/commond.h	/^struct t_MainUserData $/;"	s
t_MapBuildingData	base/Command.h	/^struct t_MapBuildingData{$/;"	s	namespace:Cmd
t_MapBuildingDataPos	base/Command.h	/^struct t_MapBuildingDataPos :public t_MapBuildingData$/;"	s	namespace:Cmd
t_MapDanceData	tmpcode/commond.h	/^struct t_MapDanceData$/;"	s
t_MapNPCData	tmpcode/commond.h	/^struct t_MapNPCData : public t_NPCData $/;"	s
t_MapNpcData	base/Command.h	/^struct t_MapNpcData :public t_NpcData$/;"	s	namespace:Cmd
t_MapNpcDataPos	base/Command.h	/^struct t_MapNpcDataPos :public t_MapNpcData$/;"	s	namespace:Cmd
t_MapNpcDataPos	tmpcode/commond.h	/^struct t_MapNpcDataPos :public t_MapNPCData$/;"	s
t_MapNpcDataPosState	base/Command.h	/^struct t_MapNpcDataPosState :public t_NpcData$/;"	s	namespace:Cmd
t_MapNpcDataState	base/Command.h	/^  t_MapNpcDataState()$/;"	f	struct:Cmd::t_MapNpcDataState
t_MapNpcDataState	base/Command.h	/^struct t_MapNpcDataState :public t_NpcData$/;"	s	namespace:Cmd
t_MapObjectData	base/Command.h	/^struct t_MapObjectData {$/;"	s	namespace:Cmd
t_MapObjectData	tmpcode/commond.h	/^struct t_MapObjectData $/;"	s
t_MapPKGameData	base/Command.h	/^struct t_MapPKGameData$/;"	s	namespace:Cmd
t_MapPetData	base/Command.h	/^struct t_MapPetData {$/;"	s	namespace:Cmd
t_MapPetData	tmpcode/commond.h	/^struct t_MapPetData $/;"	s
t_MapTankData	tmpcode/commond.h	/^struct t_MapTankData$/;"	s
t_MapUserData	base/Command.h	/^struct t_MapUserData : public t_UserData $/;"	s	namespace:Cmd
t_MapUserData	tmpcode/commond.h	/^struct t_MapUserData : public t_UserData $/;"	s
t_MapUserDataPos	base/Command.h	/^struct t_MapUserDataPos :public t_MapUserData$/;"	s	namespace:Cmd
t_MapUserDataPos	tmpcode/commond.h	/^struct t_MapUserDataPos :public t_MapUserData$/;"	s
t_MapUserDataPosState	base/Command.h	/^struct t_MapUserDataPosState :public t_UserData$/;"	s	namespace:Cmd
t_MapUserDataPosState	tmpcode/commond.h	/^struct t_MapUserDataPosState :public t_UserData$/;"	s
t_MapUserDataState	base/Command.h	/^  t_MapUserDataState()$/;"	f	struct:Cmd::t_MapUserDataState
t_MapUserDataState	base/Command.h	/^struct t_MapUserDataState : public t_UserData $/;"	s	namespace:Cmd
t_MapUserSculpt	base/Command.h	/^struct t_MapUserSculpt{$/;"	s	namespace:Cmd
t_MapUserSculpt	tmpcode/commond.h	/^struct t_MapUserSculpt$/;"	s
t_Mini_ForwardMiniToScene	base/MiniCommand.h	/^      t_Mini_ForwardMiniToScene()$/;"	f	struct:Cmd::Mini::t_Mini_ForwardMiniToScene
t_Mini_ForwardMiniToScene	base/MiniCommand.h	/^    struct t_Mini_ForwardMiniToScene : t_NullCmd$/;"	s	namespace:Cmd::Mini
t_Mini_ForwardUser	base/MiniCommand.h	/^      t_Mini_ForwardUser()$/;"	f	struct:Cmd::Mini::t_Mini_ForwardUser
t_Mini_ForwardUser	base/MiniCommand.h	/^    struct t_Mini_ForwardUser : t_NullCmd$/;"	s	namespace:Cmd::Mini
t_Mini_UserForwardMini	base/MiniCommand.h	/^      t_Mini_UserForwardMini()$/;"	f	struct:Cmd::Mini::t_Mini_UserForwardMini
t_Mini_UserForwardMini	base/MiniCommand.h	/^    struct t_Mini_UserForwardMini : t_NullCmd$/;"	s	namespace:Cmd::Mini
t_MsgTime_GmTool	base/SessionCommand.h	/^      t_MsgTime_GmTool()$/;"	f	struct:Cmd::Session::t_MsgTime_GmTool
t_MsgTime_GmTool	base/SessionCommand.h	/^    struct t_MsgTime_GmTool : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Msg_GmTool	base/GmToolCommand.h	/^      t_Msg_GmTool() : t_NullCmd(CMD_GMTOOL,PARA_MSG_GMTOOL)$/;"	f	struct:Cmd::GmTool::t_Msg_GmTool
t_Msg_GmTool	base/GmToolCommand.h	/^    struct t_Msg_GmTool : t_NullCmd$/;"	s	namespace:Cmd::GmTool
t_Msg_Reply_GmTool	base/GmToolCommand.h	/^      t_Msg_Reply_GmTool() : t_NullCmd(CMD_GMTOOL,PARA_MSG_REPLY_GMTOOL)$/;"	f	struct:Cmd::GmTool::t_Msg_Reply_GmTool
t_Msg_Reply_GmTool	base/GmToolCommand.h	/^    struct t_Msg_Reply_GmTool : t_NullCmd$/;"	s	namespace:Cmd::GmTool
t_NPCData	tmpcode/commond.h	/^struct t_NPCData $/;"	s
t_NeedMasterAffrimJoin	tmpcode/commond.h	/^	t_NeedMasterAffrimJoin()$/;"	f	struct:t_NeedMasterAffrimJoin
t_NeedMasterAffrimJoin	tmpcode/commond.h	/^struct t_NeedMasterAffrimJoin: public stSeptUserCmd$/;"	s
t_NewLoginSession	base/zType.h	/^  t_NewLoginSession()$/;"	f	struct:t_NewLoginSession
t_NewLoginSession	base/zType.h	/^  t_NewLoginSession(const t_NewLoginSession& session)$/;"	f	struct:t_NewLoginSession
t_NewLoginSession	base/zType.h	/^struct t_NewLoginSession$/;"	s
t_NewMsg_GmTool	base/GmToolCommand.h	/^      t_NewMsg_GmTool() : t_NullCmd(CMD_GMTOOL,PARA_NEW_MSG_GMTOOL)$/;"	f	struct:Cmd::GmTool::t_NewMsg_GmTool
t_NewMsg_GmTool	base/GmToolCommand.h	/^    struct t_NewMsg_GmTool : t_NullCmd$/;"	s	namespace:Cmd::GmTool
t_NewSession_Bill	base/SuperCommand.h	/^      t_NewSession_Bill()$/;"	f	struct:Cmd::Super::t_NewSession_Bill
t_NewSession_Bill	base/SuperCommand.h	/^    struct t_NewSession_Bill : t_NullCmd$/;"	s	namespace:Cmd::Super
t_NewSession_Gateway	base/BillCommand.h	/^      t_NewSession_Gateway()$/;"	f	struct:Cmd::Bill::t_NewSession_Gateway
t_NewSession_Gateway	base/BillCommand.h	/^    struct t_NewSession_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_NewSession_Gateway	base/SuperCommand.h	/^      t_NewSession_Gateway()$/;"	f	struct:Cmd::Super::t_NewSession_Gateway
t_NewSession_Gateway	base/SuperCommand.h	/^    struct t_NewSession_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Super
t_NewSession_Session	base/FLCommand.h	/^      t_NewSession_Session()$/;"	f	struct:Cmd::FL::t_NewSession_Session
t_NewSession_Session	base/FLCommand.h	/^    struct t_NewSession_Session : t_NullCmd$/;"	s	namespace:Cmd::FL
t_Nine_ExceptMe_ForwardScene	base/SceneCommand.h	/^      t_Nine_ExceptMe_ForwardScene()$/;"	f	struct:Cmd::Scene::t_Nine_ExceptMe_ForwardScene
t_Nine_ExceptMe_ForwardScene	base/SceneCommand.h	/^    struct t_Nine_ExceptMe_ForwardScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Nine_ForwardScene	base/SceneCommand.h	/^      t_Nine_ForwardScene()$/;"	f	struct:Cmd::Scene::t_Nine_ForwardScene
t_Nine_ForwardScene	base/SceneCommand.h	/^    struct t_Nine_ForwardScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Nine_dir_ForwardScene	base/SceneCommand.h	/^      t_Nine_dir_ForwardScene()$/;"	f	struct:Cmd::Scene::t_Nine_dir_ForwardScene
t_Nine_dir_ForwardScene	base/SceneCommand.h	/^    struct t_Nine_dir_ForwardScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Nine_rdir_ForwardScene	base/SceneCommand.h	/^      t_Nine_rdir_ForwardScene()$/;"	f	struct:Cmd::Scene::t_Nine_rdir_ForwardScene
t_Nine_rdir_ForwardScene	base/SceneCommand.h	/^    struct t_Nine_rdir_ForwardScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_NotifyAutoSkillMoneyTime	tmpcode/commond.h	/^	t_NotifyAutoSkillMoneyTime(const DWORD t) {$/;"	f	struct:t_NotifyAutoSkillMoneyTime
t_NotifyAutoSkillMoneyTime	tmpcode/commond.h	/^struct t_NotifyAutoSkillMoneyTime : stNullUserCmd {$/;"	s
t_NotifySceneServerGameCount_SceneSession	base/SessionCommand.h	/^	  t_NotifySceneServerGameCount_SceneSession() : t_PKGame_SceneSession(NOTIFY_SCENESERVER_GAME_COUNT_PARA)$/;"	f	struct:Cmd::Session::t_NotifySceneServerGameCount_SceneSession
t_NotifySceneServerGameCount_SceneSession	base/SessionCommand.h	/^    struct t_NotifySceneServerGameCount_SceneSession : t_PKGame_SceneSession$/;"	s	namespace:Cmd::Session
t_NpcAIDefine	ScenesServer/SceneNpcAI.h	/^  t_NpcAIDefine()$/;"	f	struct:t_NpcAIDefine
t_NpcAIDefine	ScenesServer/SceneNpcAI.h	/^  t_NpcAIDefine(SceneNpcAIType type,const zPos &pos,int regionX,int regionY,int lasttime)$/;"	f	struct:t_NpcAIDefine
t_NpcAIDefine	ScenesServer/SceneNpcAI.h	/^  t_NpcAIDefine(const t_NpcAIDefine &ad)$/;"	f	struct:t_NpcAIDefine
t_NpcAIDefine	ScenesServer/SceneNpcAI.h	/^struct t_NpcAIDefine$/;"	s
t_NpcDare_Dare_SceneSession	base/SessionCommand.h	/^      t_NpcDare_Dare_SceneSession()$/;"	f	struct:Cmd::Session::t_NpcDare_Dare_SceneSession
t_NpcDare_Dare_SceneSession	base/SessionCommand.h	/^    struct t_NpcDare_Dare_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_NpcDare_GMCmd_SceneSession	base/SessionCommand.h	/^      t_NpcDare_GMCmd_SceneSession()$/;"	f	struct:Cmd::Session::t_NpcDare_GMCmd_SceneSession
t_NpcDare_GMCmd_SceneSession	base/SessionCommand.h	/^    struct t_NpcDare_GMCmd_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_NpcDare_GetGold_SceneSession	base/SessionCommand.h	/^      t_NpcDare_GetGold_SceneSession()$/;"	f	struct:Cmd::Session::t_NpcDare_GetGold_SceneSession
t_NpcDare_GetGold_SceneSession	base/SessionCommand.h	/^    struct t_NpcDare_GetGold_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_NpcDare_ItemBack_SceneSession	base/SessionCommand.h	/^      t_NpcDare_ItemBack_SceneSession()$/;"	f	struct:Cmd::Session::t_NpcDare_ItemBack_SceneSession
t_NpcDare_ItemBack_SceneSession	base/SessionCommand.h	/^    struct t_NpcDare_ItemBack_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_NpcDare_NotifyScene_SceneSession	base/SessionCommand.h	/^      t_NpcDare_NotifyScene_SceneSession()$/;"	f	struct:Cmd::Session::t_NpcDare_NotifyScene_SceneSession
t_NpcDare_NotifyScene_SceneSession	base/SessionCommand.h	/^    struct t_NpcDare_NotifyScene_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_NpcDare_Result_SceneSession	base/SessionCommand.h	/^      t_NpcDare_Result_SceneSession()$/;"	f	struct:Cmd::Session::t_NpcDare_Result_SceneSession
t_NpcDare_Result_SceneSession	base/SessionCommand.h	/^    struct t_NpcDare_Result_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_NpcData	base/Command.h	/^struct t_NpcData {$/;"	s	namespace:Cmd
t_NpcDefine	ScenesServer/SceneDefine.h	/^  t_NpcDefine() : pos(),region()$/;"	f	struct:t_NpcDefine
t_NpcDefine	ScenesServer/SceneDefine.h	/^  t_NpcDefine(const t_NpcDefine &reg)$/;"	f	struct:t_NpcDefine
t_NpcDefine	ScenesServer/SceneDefine.h	/^struct t_NpcDefine$/;"	s
t_NullCmd	base/zNullCmd.h	/^    t_NullCmd(const BYTE cmd = CMD_NULL,const BYTE para = PARA_NULL) : cmd(cmd),para(para) {};$/;"	f	struct:Cmd::t_NullCmd
t_NullCmd	base/zNullCmd.h	/^  struct t_NullCmd$/;"	s	namespace:Cmd
t_Object	base/Object.h	/^typedef struct t_Object$/;"	s
t_Object_mobile	base/Object.h	/^typedef struct t_Object_mobile$/;"	s
t_OpGemState_SceneSession	base/SessionCommand.h	/^      t_OpGemState_SceneSession()$/;"	f	struct:Cmd::Session::t_OpGemState_SceneSession
t_OpGemState_SceneSession	base/SessionCommand.h	/^    struct t_OpGemState_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_OpLevel_SceneSession	base/SessionCommand.h	/^      t_OpLevel_SceneSession()$/;"	f	struct:Cmd::Session::t_OpLevel_SceneSession
t_OpLevel_SceneSession	base/SessionCommand.h	/^    struct t_OpLevel_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_OpRepute_SceneSession	base/SessionCommand.h	/^      t_OpRepute_SceneSession()$/;"	f	struct:Cmd::Session::t_OpRepute_SceneSession
t_OpRepute_SceneSession	base/SessionCommand.h	/^    struct t_OpRepute_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_OpUnionAction_SceneSession	base/SessionCommand.h	/^      t_OpUnionAction_SceneSession()$/;"	f	struct:Cmd::Session::t_OpUnionAction_SceneSession
t_OpUnionAction_SceneSession	base/SessionCommand.h	/^    struct t_OpUnionAction_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_OpUnionMoney_SceneSession	base/SessionCommand.h	/^      t_OpUnionMoney_SceneSession()$/;"	f	struct:Cmd::Session::t_OpUnionMoney_SceneSession
t_OpUnionMoney_SceneSession	base/SessionCommand.h	/^    struct t_OpUnionMoney_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_OverZoneRet_ChatCmd	base/RolechangeCommand.h	/^	t_OverZoneRet_ChatCmd() : t_ChatCmd(PARA_OVER_ZONE_RET_CHAT)$/;"	f	struct:Cmd::Rolechange::t_OverZoneRet_ChatCmd
t_OverZoneRet_ChatCmd	base/RolechangeCommand.h	/^    struct t_OverZoneRet_ChatCmd : t_ChatCmd$/;"	s	namespace:Cmd::Rolechange
t_OverZone_ChatCmd	base/RolechangeCommand.h	/^	t_OverZone_ChatCmd() : t_ChatCmd(PARA_OVER_ZONE_CHAT)$/;"	f	struct:Cmd::Rolechange::t_OverZone_ChatCmd
t_OverZone_ChatCmd	base/RolechangeCommand.h	/^    struct t_OverZone_ChatCmd : t_ChatCmd$/;"	s	namespace:Cmd::Rolechange
t_OvermanTicketAdd	base/SessionCommand.h	/^      t_OvermanTicketAdd(): t_NullCmd(OVERMAN_TICKET_ADD,QUEST_CHANGE_RP)$/;"	f	struct:Cmd::Session::t_OvermanTicketAdd
t_OvermanTicketAdd	base/SessionCommand.h	/^    struct t_OvermanTicketAdd : public t_NullCmd$/;"	s	namespace:Cmd::Session
t_PKGame_SceneSession	base/SessionCommand.h	/^	  t_PKGame_SceneSession(BYTE para=PARA_NULL)$/;"	f	struct:Cmd::Session::t_PKGame_SceneSession
t_PKGame_SceneSession	base/SessionCommand.h	/^    struct t_PKGame_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_PackBusinessData	tmpcode/commond.h	/^struct t_PackBusinessData               \/\/≈‹…Ã∞¸π¸÷–µƒŒÔ∆∑$/;"	s
t_PetData	base/Command.h	/^struct t_PetData$/;"	s	namespace:Cmd
t_PetData	tmpcode/commond.h	/^struct t_PetData$/;"	s
t_PickupMaster_SceneSession	base/SessionCommand.h	/^      t_PickupMaster_SceneSession()$/;"	f	struct:Cmd::Session::t_PickupMaster_SceneSession
t_PickupMaster_SceneSession	base/SessionCommand.h	/^    struct t_PickupMaster_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_PickupRecommend_SceneSession	base/SessionCommand.h	/^      t_PickupRecommend_SceneSession()$/;"	f	struct:Cmd::Session::t_PickupRecommend_SceneSession
t_PickupRecommend_SceneSession	base/SessionCommand.h	/^    struct t_PickupRecommend_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_PrivateStoreData	tmpcode/commond.h	/^	t_PrivateStoreData()$/;"	f	struct:t_PrivateStoreData
t_PrivateStoreData	tmpcode/commond.h	/^struct t_PrivateStoreData$/;"	s
t_Punish_GmTool	base/GmToolCommand.h	/^      t_Punish_GmTool() : t_NullCmd(CMD_GMTOOL,PARA_PUNISH_GMTOOL)$/;"	f	struct:Cmd::GmTool::t_Punish_GmTool
t_Punish_GmTool	base/GmToolCommand.h	/^    struct t_Punish_GmTool : t_NullCmd$/;"	s	namespace:Cmd::GmTool
t_PutOneGameIDBack_SceneSession	base/SessionCommand.h	/^	  t_PutOneGameIDBack_SceneSession() : t_PKGame_SceneSession(PUT_ONE_GAMEID_BACK_PARA)$/;"	f	struct:Cmd::Session::t_PutOneGameIDBack_SceneSession
t_PutOneGameIDBack_SceneSession	base/SessionCommand.h	/^    struct t_PutOneGameIDBack_SceneSession : t_PKGame_SceneSession$/;"	s	namespace:Cmd::Session
t_QueryHeroKill	tmpcode/commond.h	/^	t_QueryHeroKill()$/;"	f	struct:t_QueryHeroKill
t_QueryHeroKill	tmpcode/commond.h	/^struct t_QueryHeroKill : stNullUserCmd$/;"	s
t_QueryHeroList	base/Command.h	/^	t_QueryHeroList() $/;"	f	struct:Cmd::t_QueryHeroList
t_QueryHeroList	base/Command.h	/^struct t_QueryHeroList : stNullUserCmd $/;"	s	namespace:Cmd
t_QueryHeroList	tmpcode/commond.h	/^	t_QueryHeroList() $/;"	f	struct:t_QueryHeroList
t_QueryHeroList	tmpcode/commond.h	/^struct t_QueryHeroList : stNullUserCmd $/;"	s
t_QueryHistory	tmpcode/commond.h	/^	t_QueryHistory()$/;"	f	struct:t_QueryHistory
t_QueryHistory	tmpcode/commond.h	/^struct t_QueryHistory:stNullUserCmd$/;"	s
t_QuerySortList	base/Command.h	/^	t_QuerySortList() $/;"	f	struct:Cmd::t_QuerySortList
t_QuerySortList	base/Command.h	/^struct t_QuerySortList : stNullUserCmd $/;"	s	namespace:Cmd
t_QuerySortList	tmpcode/commond.h	/^	t_QuerySortList() $/;"	f	struct:t_QuerySortList
t_QuerySortList	tmpcode/commond.h	/^struct t_QuerySortList : stNullUserCmd $/;"	s
t_QueryThisWeek	tmpcode/commond.h	/^	t_QueryThisWeek()$/;"	f	struct:t_QueryThisWeek
t_QueryThisWeek	tmpcode/commond.h	/^struct t_QueryThisWeek:stNullUserCmd$/;"	s
t_Query_AccountScene	base/SceneCommand.h	/^      t_Query_AccountScene()$/;"	f	struct:Cmd::Scene::t_Query_AccountScene
t_Query_AccountScene	base/SceneCommand.h	/^    struct t_Query_AccountScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_QuestBulletinUserCmd	base/SessionCommand.h	/^      t_QuestBulletinUserCmd(): t_NullCmd(CMD_SCENE,QUEST_BULLETIN_USERCMD_PARA)$/;"	f	struct:Cmd::Session::t_QuestBulletinUserCmd
t_QuestBulletinUserCmd	base/SessionCommand.h	/^    struct t_QuestBulletinUserCmd : public t_NullCmd$/;"	s	namespace:Cmd::Session
t_RQGYList_FL	base/FLCommand.h	/^      t_RQGYList_FL()$/;"	f	struct:Cmd::FL::t_RQGYList_FL
t_RQGYList_FL	base/FLCommand.h	/^    struct t_RQGYList_FL : t_NullCmd$/;"	s	namespace:Cmd::FL
t_RQGYList_Gateway	base/SuperCommand.h	/^      t_RQGYList_Gateway()$/;"	f	struct:Cmd::Super::t_RQGYList_Gateway
t_RQGYList_Gateway	base/SuperCommand.h	/^    struct t_RQGYList_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Super
t_RTPositionSkillInfoSept	tmpcode/commond.h	/^	t_RTPositionSkillInfoSept()$/;"	f	struct:t_RTPositionSkillInfoSept
t_RTPositionSkillInfoSept	tmpcode/commond.h	/^struct t_RTPositionSkillInfoSept : public stSeptUserCmd$/;"	s
t_ReadUser_SceneArchive	base/SessionCommand.h	/^      t_ReadUser_SceneArchive()$/;"	f	struct:Cmd::Session::t_ReadUser_SceneArchive
t_ReadUser_SceneArchive	base/SessionCommand.h	/^    struct t_ReadUser_SceneArchive : t_NullCmd$/;"	s	namespace:Cmd::Session
t_ReadUser_SceneRecord	base/RecordCommand.h	/^      t_ReadUser_SceneRecord()$/;"	f	struct:Cmd::Record::t_ReadUser_SceneRecord
t_ReadUser_SceneRecord	base/RecordCommand.h	/^    struct t_ReadUser_SceneRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_Read_CharTest_SceneRecord	base/RecordCommand.h	/^      t_Read_CharTest_SceneRecord()$/;"	f	struct:Cmd::Record::t_Read_CharTest_SceneRecord
t_Read_CharTest_SceneRecord	base/RecordCommand.h	/^    struct t_Read_CharTest_SceneRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_Redeem_Gold_Gateway	base/BillCommand.h	/^      t_Redeem_Gold_Gateway()$/;"	f	struct:Cmd::Bill::t_Redeem_Gold_Gateway
t_Redeem_Gold_Gateway	base/BillCommand.h	/^    struct t_Redeem_Gold_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Redeem_MonthCard_Gateway	base/BillCommand.h	/^      t_Redeem_MonthCard_Gateway()$/;"	f	struct:Cmd::Bill::t_Redeem_MonthCard_Gateway
t_Redeem_MonthCard_Gateway	base/BillCommand.h	/^    struct t_Redeem_MonthCard_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Refresh_LoginScene	base/SceneCommand.h	/^      t_Refresh_LoginScene()$/;"	f	struct:Cmd::Scene::t_Refresh_LoginScene
t_Refresh_LoginScene	base/SceneCommand.h	/^    struct t_Refresh_LoginScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_RelationAddFriend	base/SessionCommand.h	/^	t_RelationAddFriend():t_NullCmd(CMD_OTHER, RELATION_ADD_FRIEND)$/;"	f	struct:Cmd::Session::t_RelationAddFriend
t_RelationAddFriend	base/SessionCommand.h	/^    struct t_RelationAddFriend : public t_NullCmd$/;"	s	namespace:Cmd::Session
t_RemoveUser_SceneRecord	base/RecordCommand.h	/^      t_RemoveUser_SceneRecord()$/;"	f	struct:Cmd::Record::t_RemoveUser_SceneRecord
t_RemoveUser_SceneRecord	base/RecordCommand.h	/^    struct t_RemoveUser_SceneRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_Remove_MapIndex	base/SceneCommand.h	/^      t_Remove_MapIndex()$/;"	f	struct:Cmd::Scene::t_Remove_MapIndex
t_Remove_MapIndex	base/SceneCommand.h	/^    struct t_Remove_MapIndex : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_ReqArmyList_SceneSession	base/SessionCommand.h	/^      t_ReqArmyList_SceneSession()$/;"	f	struct:Cmd::Session::t_ReqArmyList_SceneSession
t_ReqArmyList_SceneSession	base/SessionCommand.h	/^    struct t_ReqArmyList_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_ReqCountrySeptNotice	tmpcode/commond.h	/^	t_ReqCountrySeptNotice()$/;"	f	struct:t_ReqCountrySeptNotice
t_ReqCountrySeptNotice	tmpcode/commond.h	/^struct t_ReqCountrySeptNotice : public stSeptUserCmd$/;"	s
t_ReqFightMatch_SceneSession	base/SessionCommand.h	/^	  t_ReqFightMatch_SceneSession() : t_PKGame_SceneSession(REQ_FIGHT_MATCH_PARA)$/;"	f	struct:Cmd::Session::t_ReqFightMatch_SceneSession
t_ReqFightMatch_SceneSession	base/SessionCommand.h	/^    struct t_ReqFightMatch_SceneSession : t_PKGame_SceneSession$/;"	s	namespace:Cmd::Session
t_ReqPositionSkillInfoCmd	tmpcode/commond.h	/^	t_ReqPositionSkillInfoCmd()$/;"	f	struct:t_ReqPositionSkillInfoCmd
t_ReqPositionSkillInfoCmd	tmpcode/commond.h	/^struct t_ReqPositionSkillInfoCmd : public stSeptUserCmd$/;"	s
t_ReqPutSeptNotice	tmpcode/commond.h	/^	t_ReqPutSeptNotice()$/;"	f	struct:t_ReqPutSeptNotice
t_ReqPutSeptNotice	tmpcode/commond.h	/^struct t_ReqPutSeptNotice : public stSeptUserCmd$/;"	s
t_ReqSeptMemberListInfo	tmpcode/commond.h	/^	t_ReqSeptMemberListInfo()$/;"	f	struct:t_ReqSeptMemberListInfo
t_ReqSeptMemberListInfo	tmpcode/commond.h	/^struct t_ReqSeptMemberListInfo : public stSeptUserCmd$/;"	s
t_ReqSeptNoticeManager	tmpcode/commond.h	/^	t_ReqSeptNoticeManager()$/;"	f	struct:t_ReqSeptNoticeManager
t_ReqSeptNoticeManager	tmpcode/commond.h	/^struct t_ReqSeptNoticeManager : public stSeptUserCmd$/;"	s
t_ReqUser_SceneArchive	base/SessionCommand.h	/^      t_ReqUser_SceneArchive()$/;"	f	struct:Cmd::Session::t_ReqUser_SceneArchive
t_ReqUser_SceneArchive	base/SessionCommand.h	/^    struct t_ReqUser_SceneArchive : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Req_ZoneList	base/RolechangeCommand.h	/^	t_Req_ZoneList() : t_NullCmd(CMD_BATTLE, PARA_REQ_ZONE_LIST)$/;"	f	struct:Cmd::Rolechange::t_Req_ZoneList
t_Req_ZoneList	base/RolechangeCommand.h	/^    struct t_Req_ZoneList : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_RequestFriendDegree_SceneSession	base/SessionCommand.h	/^      t_RequestFriendDegree_SceneSession()$/;"	f	struct:Cmd::Session::t_RequestFriendDegree_SceneSession
t_RequestFriendDegree_SceneSession	base/SessionCommand.h	/^    struct t_RequestFriendDegree_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Request_Bill	base/SceneCommand.h	/^      t_Request_Bill()$/;"	f	struct:Cmd::Scene::t_Request_Bill
t_Request_Bill	base/SceneCommand.h	/^    struct t_Request_Bill : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Request_Card_Gold_Gateway	base/BillCommand.h	/^      t_Request_Card_Gold_Gateway()$/;"	f	struct:Cmd::Bill::t_Request_Card_Gold_Gateway
t_Request_Card_Gold_Gateway	base/BillCommand.h	/^    struct t_Request_Card_Gold_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Request_CountryOnline	base/SuperCommand.h	/^      t_Request_CountryOnline()$/;"	f	struct:Cmd::Super::t_Request_CountryOnline
t_Request_CountryOnline	base/SuperCommand.h	/^    struct t_Request_CountryOnline : t_NullCmd$/;"	s	namespace:Cmd::Super
t_Request_Point	base/SceneCommand.h	/^      t_Request_Point()$/;"	f	struct:Cmd::Scene::t_Request_Point
t_Request_Point	base/SceneCommand.h	/^    struct t_Request_Point : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Request_Point_Gateway	base/BillCommand.h	/^      t_Request_Point_Gateway()$/;"	f	struct:Cmd::Bill::t_Request_Point_Gateway
t_Request_Point_Gateway	base/BillCommand.h	/^    struct t_Request_Point_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Request_RedeemCard	base/SceneCommand.h	/^      t_Request_RedeemCard()$/;"	f	struct:Cmd::Scene::t_Request_RedeemCard
t_Request_RedeemCard	base/SceneCommand.h	/^    struct t_Request_RedeemCard : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Request_RedeemGold	base/SceneCommand.h	/^      t_Request_RedeemGold()$/;"	f	struct:Cmd::Scene::t_Request_RedeemGold
t_Request_RedeemGold	base/SceneCommand.h	/^    struct t_Request_RedeemGold : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Request_Redeem_Gold_Gateway	base/BillCommand.h	/^      t_Request_Redeem_Gold_Gateway()$/;"	f	struct:Cmd::Bill::t_Request_Redeem_Gold_Gateway
t_Request_Redeem_Gold_Gateway	base/BillCommand.h	/^    struct t_Request_Redeem_Gold_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Request_Redeem_MonthCard_Gateway	base/BillCommand.h	/^      t_Request_Redeem_MonthCard_Gateway()$/;"	f	struct:Cmd::Bill::t_Request_Redeem_MonthCard_Gateway
t_Request_Redeem_MonthCard_Gateway	base/BillCommand.h	/^    struct t_Request_Redeem_MonthCard_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Reset_CallTimes_SceneSession	base/SessionCommand.h	/^      t_Reset_CallTimes_SceneSession()$/;"	f	struct:Cmd::Session::t_Reset_CallTimes_SceneSession
t_Reset_CallTimes_SceneSession	base/SessionCommand.h	/^    struct t_Reset_CallTimes_SceneSession  : t_NullCmd$/;"	s	namespace:Cmd::Session
t_ResignPositionSept	tmpcode/commond.h	/^	t_ResignPositionSept()$/;"	f	struct:t_ResignPositionSept
t_ResignPositionSept	tmpcode/commond.h	/^struct t_ResignPositionSept : public stSeptUserCmd$/;"	s
t_RetCountrySeptNotice	tmpcode/commond.h	/^	t_RetCountrySeptNotice()$/;"	f	struct:t_RetCountrySeptNotice
t_RetCountrySeptNotice	tmpcode/commond.h	/^struct t_RetCountrySeptNotice : public stSeptUserCmd$/;"	s
t_RetSceneuserPkGame_SceneSession	base/SessionCommand.h	/^	  t_RetSceneuserPkGame_SceneSession() : t_PKGame_SceneSession(RET_SCENEUSER_PK_GAME_PARA)$/;"	f	struct:Cmd::Session::t_RetSceneuserPkGame_SceneSession
t_RetSceneuserPkGame_SceneSession	base/SessionCommand.h	/^    struct t_RetSceneuserPkGame_SceneSession : t_PKGame_SceneSession$/;"	s	namespace:Cmd::Session
t_Ret_Check_Valid	base/RolechangeCommand.h	/^	t_Ret_Check_Valid() : t_NullCmd(CMD_BATTLE, PARA_RET_CHECK_VALID)$/;"	f	struct:Cmd::Rolechange::t_Ret_Check_Valid
t_Ret_Check_Valid	base/RolechangeCommand.h	/^    struct t_Ret_Check_Valid : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_Ret_SelectInfo_GateRecord	base/RecordCommand.h	/^      t_Ret_SelectInfo_GateRecord()$/;"	f	struct:Cmd::Record::t_Ret_SelectInfo_GateRecord
t_Ret_SelectInfo_GateRecord	base/RecordCommand.h	/^    struct t_Ret_SelectInfo_GateRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_ReturnCreateUnionItem_SceneSession	base/SessionCommand.h	/^      t_ReturnCreateUnionItem_SceneSession()$/;"	f	struct:Cmd::Session::t_ReturnCreateUnionItem_SceneSession
t_ReturnCreateUnionItem_SceneSession	base/SessionCommand.h	/^    struct t_ReturnCreateUnionItem_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_ReturnFriendDegree_SceneSession	base/SessionCommand.h	/^      t_ReturnFriendDegree_SceneSession()$/;"	f	struct:Cmd::Session::t_ReturnFriendDegree_SceneSession
t_ReturnFriendDegree_SceneSession	base/SessionCommand.h	/^    struct t_ReturnFriendDegree_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_ReturnHeroKill	tmpcode/commond.h	/^	t_ReturnHeroKill()$/;"	f	struct:t_ReturnHeroKill
t_ReturnHeroKill	tmpcode/commond.h	/^struct t_ReturnHeroKill : stNullUserCmd$/;"	s
t_ReturnHistory	tmpcode/commond.h	/^	t_ReturnHistory()$/;"	f	struct:t_ReturnHistory
t_ReturnHistory	tmpcode/commond.h	/^struct t_ReturnHistory:stNullUserCmd$/;"	s
t_ReturnThisWeek	tmpcode/commond.h	/^	t_ReturnThisWeek()$/;"	f	struct:t_ReturnThisWeek
t_ReturnThisWeek	tmpcode/commond.h	/^struct t_ReturnThisWeek:stNullUserCmd$/;"	s
t_Return_CallTimes_SceneSession	base/SessionCommand.h	/^      t_Return_CallTimes_SceneSession()$/;"	f	struct:Cmd::Session::t_Return_CallTimes_SceneSession
t_Return_CallTimes_SceneSession	base/SessionCommand.h	/^    struct t_Return_CallTimes_SceneSession  : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Return_Card_Gold	base/BillCommand.h	/^      t_Return_Card_Gold()$/;"	f	struct:Cmd::Bill::t_Return_Card_Gold
t_Return_Card_Gold	base/BillCommand.h	/^    struct t_Return_Card_Gold : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Return_ObjCard	base/BillCommand.h	/^      t_Return_ObjCard()$/;"	f	struct:Cmd::Bill::t_Return_ObjCard
t_Return_ObjCard	base/BillCommand.h	/^    struct t_Return_ObjCard : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Return_Point	base/BillCommand.h	/^      t_Return_Point()$/;"	f	struct:Cmd::Bill::t_Return_Point
t_Return_Point	base/BillCommand.h	/^    struct t_Return_Point : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_RewardInfo	tmpcode/commond.h	/^    t_RewardInfo()$/;"	f	struct:t_RewardInfo
t_RewardInfo	tmpcode/commond.h	/^struct t_RewardInfo$/;"	s
t_Rtn_ZoneList	base/RolechangeCommand.h	/^	t_Rtn_ZoneList() : t_NullCmd(CMD_BATTLE, PARA_RTN_ZONE_LIST)$/;"	f	struct:Cmd::Rolechange::t_Rtn_ZoneList
t_Rtn_ZoneList	base/RolechangeCommand.h	/^    struct t_Rtn_ZoneList : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_Scene_Check_Draw	base/MiniCommand.h	/^      t_Scene_Check_Draw()$/;"	f	struct:Cmd::Mini::t_Scene_Check_Draw
t_Scene_Check_Draw	base/MiniCommand.h	/^    struct t_Scene_Check_Draw : t_NullCmd$/;"	s	namespace:Cmd::Mini
t_Scene_Deposit	base/MiniCommand.h	/^      t_Scene_Deposit()$/;"	f	struct:Cmd::Mini::t_Scene_Deposit
t_Scene_Deposit	base/MiniCommand.h	/^    struct t_Scene_Deposit : t_NullCmd$/;"	s	namespace:Cmd::Mini
t_Scene_Deposit_Ret	base/MiniCommand.h	/^      t_Scene_Deposit_Ret()$/;"	f	struct:Cmd::Mini::t_Scene_Deposit_Ret
t_Scene_Deposit_Ret	base/MiniCommand.h	/^    struct t_Scene_Deposit_Ret : t_NullCmd$/;"	s	namespace:Cmd::Mini
t_Scene_Draw_Ret	base/MiniCommand.h	/^      t_Scene_Draw_Ret()$/;"	f	struct:Cmd::Mini::t_Scene_Draw_Ret
t_Scene_Draw_Ret	base/MiniCommand.h	/^    struct t_Scene_Draw_Ret : t_NullCmd$/;"	s	namespace:Cmd::Mini
t_Scene_ForwardBill	base/BillCommand.h	/^      t_Scene_ForwardBill()$/;"	f	struct:Cmd::Bill::t_Scene_ForwardBill
t_Scene_ForwardBill	base/BillCommand.h	/^    struct t_Scene_ForwardBill : t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Scene_ForwardMini	base/MiniCommand.h	/^      t_Scene_ForwardMini()$/;"	f	struct:Cmd::Mini::t_Scene_ForwardMini
t_Scene_ForwardMini	base/MiniCommand.h	/^    struct t_Scene_ForwardMini : t_NullCmd$/;"	s	namespace:Cmd::Mini
t_Scene_ForwardScene	base/SceneCommand.h	/^      t_Scene_ForwardScene()$/;"	f	struct:Cmd::Scene::t_Scene_ForwardScene
t_Scene_ForwardScene	base/SceneCommand.h	/^    struct t_Scene_ForwardScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Scene_ForwardSceneToBill	base/SceneCommand.h	/^      t_Scene_ForwardSceneToBill()$/;"	f	struct:Cmd::Scene::t_Scene_ForwardSceneToBill
t_Scene_ForwardSceneToBill	base/SceneCommand.h	/^    struct t_Scene_ForwardSceneToBill : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Scene_ForwardSceneUserToBill	base/SceneCommand.h	/^      t_Scene_ForwardSceneUserToBill()$/;"	f	struct:Cmd::Scene::t_Scene_ForwardSceneUserToBill
t_Scene_ForwardSceneUserToBill	base/SceneCommand.h	/^    struct t_Scene_ForwardSceneUserToBill : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Scene_MeIsBattlefield	base/SessionCommand.h	/^		t_Scene_MeIsBattlefield()$/;"	f	struct:Cmd::Session::t_Scene_MeIsBattlefield
t_Scene_MeIsBattlefield	base/SessionCommand.h	/^	struct t_Scene_MeIsBattlefield : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Scene_SetScene	base/MiniCommand.h	/^      t_Scene_SetScene()$/;"	f	struct:Cmd::Mini::t_Scene_SetScene
t_Scene_SetScene	base/MiniCommand.h	/^    struct t_Scene_SetScene : t_NullCmd$/;"	s	namespace:Cmd::Mini
t_SchoolCreateSuccess_SceneSession	base/SessionCommand.h	/^      t_SchoolCreateSuccess_SceneSession()$/;"	f	struct:Cmd::Session::t_SchoolCreateSuccess_SceneSession
t_SchoolCreateSuccess_SceneSession	base/SessionCommand.h	/^    struct t_SchoolCreateSuccess_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_SendSeptNormal_SceneSession	base/SessionCommand.h	/^      t_SendSeptNormal_SceneSession()$/;"	f	struct:Cmd::Session::t_SendSeptNormal_SceneSession
t_SendSeptNormal_SceneSession	base/SessionCommand.h	/^    struct t_SendSeptNormal_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_SendUnionNormal_SceneSession	base/SessionCommand.h	/^      t_SendUnionNormal_SceneSession()$/;"	f	struct:Cmd::Session::t_SendUnionNormal_SceneSession
t_SendUnionNormal_SceneSession	base/SessionCommand.h	/^    struct t_SendUnionNormal_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_ServiceGold_GateScene	base/SceneCommand.h	/^      t_ServiceGold_GateScene()$/;"	f	struct:Cmd::Scene::t_ServiceGold_GateScene
t_ServiceGold_GateScene	base/SceneCommand.h	/^    struct t_ServiceGold_GateScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_ServiceStock_GateScene	base/SceneCommand.h	/^      t_ServiceStock_GateScene()$/;"	f	struct:Cmd::Scene::t_ServiceStock_GateScene
t_ServiceStock_GateScene	base/SceneCommand.h	/^    struct t_ServiceStock_GateScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Session_ForwardCountry	base/SessionCommand.h	/^      t_Session_ForwardCountry()$/;"	f	struct:Cmd::Session::t_Session_ForwardCountry
t_Session_ForwardCountry	base/SessionCommand.h	/^    struct t_Session_ForwardCountry : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Session_ForwardUser	base/SessionCommand.h	/^      t_Session_ForwardUser()$/;"	f	struct:Cmd::Session::t_Session_ForwardUser
t_Session_ForwardUser	base/SessionCommand.h	/^    struct t_Session_ForwardUser : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Session_ForwardWorld	base/SessionCommand.h	/^      t_Session_ForwardWorld()$/;"	f	struct:Cmd::Session::t_Session_ForwardWorld
t_Session_ForwardWorld	base/SessionCommand.h	/^    struct t_Session_ForwardWorld : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Session_HandleBlackList	base/SessionCommand.h	/^      t_Session_HandleBlackList()$/;"	f	struct:Cmd::Session::t_Session_HandleBlackList
t_Session_HandleBlackList	base/SessionCommand.h	/^    struct t_Session_HandleBlackList : t_NullCmd$/;"	s	namespace:Cmd::Session
t_SetGemState_SceneSession	base/SessionCommand.h	/^      t_SetGemState_SceneSession()$/;"	f	struct:Cmd::Session::t_SetGemState_SceneSession
t_SetGemState_SceneSession	base/SessionCommand.h	/^    struct t_SetGemState_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_SetService_SceneSession	base/SessionCommand.h	/^      t_SetService_SceneSession()$/;"	f	struct:Cmd::Session::t_SetService_SceneSession
t_SetService_SceneSession	base/SessionCommand.h	/^    struct t_SetService_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_SkillStoreData	tmpcode/commond.h	/^        t_SkillStoreData()              $/;"	f	struct:t_SkillStoreData
t_SkillStoreData	tmpcode/commond.h	/^struct t_SkillStoreData$/;"	s
t_SpendGold_SceneSession	base/SessionCommand.h	/^      t_SpendGold_SceneSession()$/;"	f	struct:Cmd::Session::t_SpendGold_SceneSession
t_SpendGold_SceneSession	base/SessionCommand.h	/^    struct t_SpendGold_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Sports_AddMeToQueuing	base/SessionCommand.h	/^		t_Sports_AddMeToQueuing()$/;"	f	struct:Cmd::Session::t_Sports_AddMeToQueuing
t_Sports_AddMeToQueuing	base/SessionCommand.h	/^	struct t_Sports_AddMeToQueuing : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Sports_MoveSecen	base/SessionCommand.h	/^		t_Sports_MoveSecen()$/;"	f	struct:Cmd::Session::t_Sports_MoveSecen
t_Sports_MoveSecen	base/SessionCommand.h	/^	struct t_Sports_MoveSecen : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Sports_RequestMap	base/SessionCommand.h	/^		t_Sports_RequestMap()$/;"	f	struct:Cmd::Session::t_Sports_RequestMap
t_Sports_RequestMap	base/SessionCommand.h	/^	struct t_Sports_RequestMap : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Sports_ReturnMapID	base/SessionCommand.h	/^		t_Sports_ReturnMapID()$/;"	f	struct:Cmd::Session::t_Sports_ReturnMapID
t_Sports_ReturnMapID	base/SessionCommand.h	/^	struct t_Sports_ReturnMapID : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Stable	tmpcode/commond.h	/^struct t_Stable$/;"	s
t_StackCmdQueue	base/zSocket.h	/^typedef ByteBuffer<BYTE [PACKET_ZIP_BUFFER]> t_StackCmdQueue;$/;"	t
t_Startup_OK	base/BroadCommand.h	/^      t_Startup_OK()$/;"	f	struct:Cmd::BroadServer::t_Startup_OK
t_Startup_OK	base/BroadCommand.h	/^    struct t_Startup_OK : t_NullCmd$/;"	s	namespace:Cmd::BroadServer
t_Startup_OK	base/SuperCommand.h	/^      t_Startup_OK()$/;"	f	struct:Cmd::Super::t_Startup_OK
t_Startup_OK	base/SuperCommand.h	/^    struct t_Startup_OK : t_NullCmd$/;"	s	namespace:Cmd::Super
t_Startup_Request	base/BroadCommand.h	/^      t_Startup_Request()$/;"	f	struct:Cmd::BroadServer::t_Startup_Request
t_Startup_Request	base/BroadCommand.h	/^    struct t_Startup_Request : t_NullCmd$/;"	s	namespace:Cmd::BroadServer
t_Startup_Request	base/SuperCommand.h	/^      t_Startup_Request()$/;"	f	struct:Cmd::Super::t_Startup_Request
t_Startup_Request	base/SuperCommand.h	/^    struct t_Startup_Request : t_NullCmd$/;"	s	namespace:Cmd::Super
t_Startup_Response	base/BroadCommand.h	/^      t_Startup_Response()$/;"	f	struct:Cmd::BroadServer::t_Startup_Response
t_Startup_Response	base/BroadCommand.h	/^    struct t_Startup_Response : t_NullCmd$/;"	s	namespace:Cmd::BroadServer
t_Startup_Response	base/SuperCommand.h	/^      t_Startup_Response()$/;"	f	struct:Cmd::Super::t_Startup_Response
t_Startup_Response	base/SuperCommand.h	/^    struct t_Startup_Response : t_NullCmd$/;"	s	namespace:Cmd::Super
t_Startup_ServerEntry_NotifyMe	base/SuperCommand.h	/^      t_Startup_ServerEntry_NotifyMe()$/;"	f	struct:Cmd::Super::t_Startup_ServerEntry_NotifyMe
t_Startup_ServerEntry_NotifyMe	base/SuperCommand.h	/^    struct t_Startup_ServerEntry_NotifyMe : t_NullCmd$/;"	s	namespace:Cmd::Super
t_Startup_ServerEntry_NotifyOther	base/SuperCommand.h	/^      t_Startup_ServerEntry_NotifyOther()$/;"	f	struct:Cmd::Super::t_Startup_ServerEntry_NotifyOther
t_Startup_ServerEntry_NotifyOther	base/SuperCommand.h	/^    struct t_Startup_ServerEntry_NotifyOther : t_NullCmd$/;"	s	namespace:Cmd::Super
t_Stock_Fetch	base/BillCommand.h	/^      t_Stock_Fetch()$/;"	f	struct:Cmd::Bill::t_Stock_Fetch
t_Stock_Fetch	base/BillCommand.h	/^    struct t_Stock_Fetch: t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Stock_Login	base/BillCommand.h	/^      t_Stock_Login()$/;"	f	struct:Cmd::Bill::t_Stock_Login
t_Stock_Login	base/BillCommand.h	/^    struct t_Stock_Login: t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Stock_Logout	base/BillCommand.h	/^      t_Stock_Logout()$/;"	f	struct:Cmd::Bill::t_Stock_Logout
t_Stock_Logout	base/BillCommand.h	/^    struct t_Stock_Logout: t_NullCmd$/;"	s	namespace:Cmd::Bill
t_Stock_Save	base/BillCommand.h	/^      t_Stock_Save()$/;"	f	struct:Cmd::Bill::t_Stock_Save
t_Stock_Save	base/BillCommand.h	/^    struct t_Stock_Save: t_NullCmd$/;"	s	namespace:Cmd::Bill
t_StopChange_Scene	base/SuperCommand.h	/^	t_StopChange_Scene() : t_NullCmd(CMD_SCENE, PARA_STOPCHANGE_SCENE)$/;"	f	struct:Cmd::Super::t_StopChange_Scene
t_StopChange_Scene	base/SuperCommand.h	/^    struct t_StopChange_Scene : t_NullCmd$/;"	s	namespace:Cmd::Super
t_SummonGemNPC_SceneSession	base/SessionCommand.h	/^      t_SummonGemNPC_SceneSession()$/;"	f	struct:Cmd::Session::t_SummonGemNPC_SceneSession
t_SummonGemNPC_SceneSession	base/SessionCommand.h	/^    struct t_SummonGemNPC_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Team_AddMe	base/SessionCommand.h	/^		t_Team_AddMe()$/;"	f	struct:Cmd::Session::t_Team_AddMe
t_Team_AddMe	base/SessionCommand.h	/^	struct t_Team_AddMe : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Team_AddMember	base/SessionCommand.h	/^		t_Team_AddMember()$/;"	f	struct:Cmd::Session::t_Team_AddMember
t_Team_AddMember	base/SessionCommand.h	/^    struct t_Team_AddMember : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Team_AddMoveSceneMember	base/SessionCommand.h	/^		t_Team_AddMoveSceneMember()$/;"	f	struct:Cmd::Session::t_Team_AddMoveSceneMember
t_Team_AddMoveSceneMember	base/SessionCommand.h	/^	struct t_Team_AddMoveSceneMember : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Team_AnswerTeam	base/SessionCommand.h	/^		t_Team_AnswerTeam()$/;"	f	struct:Cmd::Session::t_Team_AnswerTeam
t_Team_AnswerTeam	base/SessionCommand.h	/^	struct t_Team_AnswerTeam : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Team_ChangeLeader	base/SessionCommand.h	/^		t_Team_ChangeLeader() $/;"	f	struct:Cmd::Session::t_Team_ChangeLeader
t_Team_ChangeLeader	base/SessionCommand.h	/^    struct t_Team_ChangeLeader : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Team_Data	base/SessionCommand.h	/^		t_Team_Data()$/;"	f	struct:Cmd::Session::t_Team_Data
t_Team_Data	base/SessionCommand.h	/^	struct t_Team_Data : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Team_DelMember	base/SessionCommand.h	/^		t_Team_DelMember()$/;"	f	struct:Cmd::Session::t_Team_DelMember
t_Team_DelMember	base/SessionCommand.h	/^	struct t_Team_DelMember : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Team_DelTeam	base/SessionCommand.h	/^		t_Team_DelTeam()$/;"	f	struct:Cmd::Session::t_Team_DelTeam
t_Team_DelTeam	base/SessionCommand.h	/^	struct t_Team_DelTeam : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Team_Request	base/SessionCommand.h	/^      t_Team_Request()$/;"	f	struct:Cmd::Session::t_Team_Request
t_Team_Request	base/SessionCommand.h	/^    struct t_Team_Request : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Team_RequestTeam	base/SessionCommand.h	/^		t_Team_RequestTeam()$/;"	f	struct:Cmd::Session::t_Team_RequestTeam
t_Team_RequestTeam	base/SessionCommand.h	/^	struct t_Team_RequestTeam : t_NullCmd$/;"	s	namespace:Cmd::Session
t_TelePKGame_SceneSession	base/SessionCommand.h	/^	  t_TelePKGame_SceneSession() : t_PKGame_SceneSession(TELE_PKGAME_PARA)$/;"	f	struct:Cmd::Session::t_TelePKGame_SceneSession
t_TelePKGame_SceneSession	base/SessionCommand.h	/^    struct t_TelePKGame_SceneSession : t_PKGame_SceneSession$/;"	s	namespace:Cmd::Session
t_Tujian	base/HeroCardCmd.h	/^	t_Tujian()$/;"	f	struct:Cmd::t_Tujian
t_Tujian	base/HeroCardCmd.h	/^    struct t_Tujian$/;"	s	namespace:Cmd
t_UnionCity_DareResult_SceneSession	base/SessionCommand.h	/^      t_UnionCity_DareResult_SceneSession()$/;"	f	struct:Cmd::Session::t_UnionCity_DareResult_SceneSession
t_UnionCity_DareResult_SceneSession	base/SessionCommand.h	/^    struct t_UnionCity_DareResult_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_UnionCity_Dare_SceneSession	base/SessionCommand.h	/^      t_UnionCity_Dare_SceneSession()$/;"	f	struct:Cmd::Session::t_UnionCity_Dare_SceneSession
t_UnionCity_Dare_SceneSession	base/SessionCommand.h	/^    struct t_UnionCity_Dare_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_Unreg_LoginScene	base/SceneCommand.h	/^      t_Unreg_LoginScene()$/;"	f	struct:Cmd::Scene::t_Unreg_LoginScene
t_Unreg_LoginScene	base/SceneCommand.h	/^    struct t_Unreg_LoginScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Unreg_LoginScene_Ok	base/SceneCommand.h	/^      t_Unreg_LoginScene_Ok()$/;"	f	struct:Cmd::Scene::t_Unreg_LoginScene_Ok
t_Unreg_LoginScene_Ok	base/SceneCommand.h	/^    struct t_Unreg_LoginScene_Ok : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Update_CharTest_SceneRecord	base/RecordCommand.h	/^      t_Update_CharTest_SceneRecord()$/;"	f	struct:Cmd::Record::t_Update_CharTest_SceneRecord
t_Update_CharTest_SceneRecord	base/RecordCommand.h	/^    struct t_Update_CharTest_SceneRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_UserData	base/Command.h	/^struct t_UserData$/;"	s	namespace:Cmd
t_UserData	tmpcode/commond.h	/^struct t_UserData$/;"	s
t_UserDelete_Gateway	base/MiniCommand.h	/^      t_UserDelete_Gateway()$/;"	f	struct:Cmd::Mini::t_UserDelete_Gateway
t_UserDelete_Gateway	base/MiniCommand.h	/^    struct t_UserDelete_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Mini
t_UserInfo_SceneRecord	base/RecordCommand.h	/^      t_UserInfo_SceneRecord()$/;"	f	struct:Cmd::Record::t_UserInfo_SceneRecord
t_UserInfo_SceneRecord	base/RecordCommand.h	/^    struct t_UserInfo_SceneRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_UserLogin_Gateway	base/MiniCommand.h	/^      t_UserLogin_Gateway()$/;"	f	struct:Cmd::Mini::t_UserLogin_Gateway
t_UserLogin_Gateway	base/MiniCommand.h	/^    struct t_UserLogin_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Mini
t_UserLogout_Gateway	base/MiniCommand.h	/^      t_UserLogout_Gateway()$/;"	f	struct:Cmd::Mini::t_UserLogout_Gateway
t_UserLogout_Gateway	base/MiniCommand.h	/^    struct t_UserLogout_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Mini
t_User_ForwardMap	base/SceneCommand.h	/^      t_User_ForwardMap()$/;"	f	struct:Cmd::Scene::t_User_ForwardMap
t_User_ForwardMap	base/SceneCommand.h	/^    struct t_User_ForwardMap : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_User_ForwardScene	base/SceneCommand.h	/^      t_User_ForwardScene()$/;"	f	struct:Cmd::Scene::t_User_ForwardScene
t_User_ForwardScene	base/SceneCommand.h	/^    struct t_User_ForwardScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_Usleep_GateScene	base/SceneCommand.h	/^      t_Usleep_GateScene()$/;"	f	struct:Cmd::Scene::t_Usleep_GateScene
t_Usleep_GateScene	base/SceneCommand.h	/^    struct t_Usleep_GateScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_WriteUser_SceneArchive	base/SessionCommand.h	/^      t_WriteUser_SceneArchive()$/;"	f	struct:Cmd::Session::t_WriteUser_SceneArchive
t_WriteUser_SceneArchive	base/SessionCommand.h	/^    struct t_WriteUser_SceneArchive : t_NullCmd$/;"	s	namespace:Cmd::Session
t_WriteUser_SceneRecord	base/RecordCommand.h	/^      t_WriteUser_SceneRecord()$/;"	f	struct:Cmd::Record::t_WriteUser_SceneRecord
t_WriteUser_SceneRecord	base/RecordCommand.h	/^    struct t_WriteUser_SceneRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_WriteUser_SceneRecord_Ok	base/RecordCommand.h	/^      t_WriteUser_SceneRecord_Ok()$/;"	f	struct:Cmd::Record::t_WriteUser_SceneRecord_Ok
t_WriteUser_SceneRecord_Ok	base/RecordCommand.h	/^    struct t_WriteUser_SceneRecord_Ok : t_NullCmd$/;"	s	namespace:Cmd::Record
t_activeDare_SceneSession	base/SessionCommand.h	/^      t_activeDare_SceneSession()$/;"	f	struct:Cmd::Session::t_activeDare_SceneSession
t_activeDare_SceneSession	base/SessionCommand.h	/^    struct t_activeDare_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_addCartoon_SceneSession	base/SessionCommand.h	/^      t_addCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_addCartoon_SceneSession
t_addCartoon_SceneSession	base/SessionCommand.h	/^    struct t_addCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_addGenExp_SceneSession	base/SessionCommand.h	/^      t_addGenExp_SceneSession()$/;"	f	struct:Cmd::Session::t_addGenExp_SceneSession
t_addGenExp_SceneSession	base/SessionCommand.h	/^    struct t_addGenExp_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_addRelationEnemy	base/SessionCommand.h	/^      t_addRelationEnemy() : t_NullCmd(CMD_SCENE,PARA_ADD_RELATION_ENEMY) {};$/;"	f	struct:Cmd::Session::t_addRelationEnemy
t_addRelationEnemy	base/SessionCommand.h	/^    struct t_addRelationEnemy : t_NullCmd$/;"	s	namespace:Cmd::Session
t_addSeptMember_SceneSession	base/SessionCommand.h	/^      t_addSeptMember_SceneSession()$/;"	f	struct:Cmd::Session::t_addSeptMember_SceneSession
t_addSeptMember_SceneSession	base/SessionCommand.h	/^    struct t_addSeptMember_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_addSept_SceneSession	base/SessionCommand.h	/^      t_addSept_SceneSession()$/;"	f	struct:Cmd::Session::t_addSept_SceneSession
t_addSept_SceneSession	base/SessionCommand.h	/^    struct t_addSept_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_addUnionMember_SceneSession	base/SessionCommand.h	/^      t_addUnionMember_SceneSession()$/;"	f	struct:Cmd::Session::t_addUnionMember_SceneSession
t_addUnionMember_SceneSession	base/SessionCommand.h	/^    struct t_addUnionMember_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_addUnion_SceneSession	base/SessionCommand.h	/^      t_addUnion_SceneSession()$/;"	f	struct:Cmd::Session::t_addUnion_SceneSession
t_addUnion_SceneSession	base/SessionCommand.h	/^    struct t_addUnion_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_adoptCartoon_SceneSession	base/SessionCommand.h	/^      t_adoptCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_adoptCartoon_SceneSession
t_adoptCartoon_SceneSession	base/SessionCommand.h	/^    struct t_adoptCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_allyNpcClear_SceneSession	base/SessionCommand.h	/^      t_allyNpcClear_SceneSession()$/;"	f	struct:Cmd::Session::t_allyNpcClear_SceneSession
t_allyNpcClear_SceneSession	base/SessionCommand.h	/^    struct t_allyNpcClear_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_bailCheck_SceneSession	base/SessionCommand.h	/^      t_bailCheck_SceneSession()$/;"	f	struct:Cmd::Session::t_bailCheck_SceneSession
t_bailCheck_SceneSession	base/SessionCommand.h	/^    struct t_bailCheck_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_beginEmperorDare_SceneSession	base/SessionCommand.h	/^      t_beginEmperorDare_SceneSession()$/;"	f	struct:Cmd::Session::t_beginEmperorDare_SceneSession
t_beginEmperorDare_SceneSession	base/SessionCommand.h	/^    struct t_beginEmperorDare_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_bidAuction_SceneSession	base/SessionCommand.h	/^      t_bidAuction_SceneSession()$/;"	f	struct:Cmd::Session::t_bidAuction_SceneSession
t_bidAuction_SceneSession	base/SessionCommand.h	/^    struct t_bidAuction_SceneSession : t_AuctionCmd$/;"	s	namespace:Cmd::Session
t_broadcastScene_SceneSession	base/SessionCommand.h	/^      t_broadcastScene_SceneSession()$/;"	f	struct:Cmd::Session::t_broadcastScene_SceneSession
t_broadcastScene_SceneSession	base/SessionCommand.h	/^    struct t_broadcastScene_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_buyCartoon_SceneSession	base/SessionCommand.h	/^      t_buyCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_buyCartoon_SceneSession
t_buyCartoon_SceneSession	base/SessionCommand.h	/^    struct t_buyCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_cancelAuction_SceneSession	base/SessionCommand.h	/^      t_cancelAuction_SceneSession()$/;"	f	struct:Cmd::Session::t_cancelAuction_SceneSession
t_cancelAuction_SceneSession	base/SessionCommand.h	/^    struct t_cancelAuction_SceneSession : t_AuctionCmd$/;"	s	namespace:Cmd::Session
t_changeCountry_SceneSession	base/SessionCommand.h	/^      t_changeCountry_SceneSession()$/;"	f	struct:Cmd::Session::t_changeCountry_SceneSession
t_changeCountry_SceneSession	base/SessionCommand.h	/^    struct t_changeCountry_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_changeScene_SceneSession	base/SessionCommand.h	/^      t_changeScene_SceneSession()$/;"	f	struct:Cmd::Session::t_changeScene_SceneSession
t_changeScene_SceneSession	base/SessionCommand.h	/^    struct t_changeScene_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_changeUserData_SceneSession	base/SessionCommand.h	/^      t_changeUserData_SceneSession()$/;"	f	struct:Cmd::Session::t_changeUserData_SceneSession
t_changeUserData_SceneSession	base/SessionCommand.h	/^    struct t_changeUserData_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_changeUser_GateSession	base/SessionCommand.h	/^      t_changeUser_GateSession()$/;"	f	struct:Cmd::Session::t_changeUser_GateSession
t_changeUser_GateSession	base/SessionCommand.h	/^    struct t_changeUser_GateSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_chargeCartoon_SceneSession	base/SessionCommand.h	/^      t_chargeCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_chargeCartoon_SceneSession
t_chargeCartoon_SceneSession	base/SessionCommand.h	/^    struct t_chargeCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_chargeNotifyCartoon_SceneSession	base/SessionCommand.h	/^      t_chargeNotifyCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_chargeNotifyCartoon_SceneSession
t_chargeNotifyCartoon_SceneSession	base/SessionCommand.h	/^    struct t_chargeNotifyCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_checkBidAuction_SceneSession	base/SessionCommand.h	/^      t_checkBidAuction_SceneSession()$/;"	f	struct:Cmd::Session::t_checkBidAuction_SceneSession
t_checkBidAuction_SceneSession	base/SessionCommand.h	/^    struct t_checkBidAuction_SceneSession : t_AuctionCmd$/;"	s	namespace:Cmd::Session
t_checkCancelAuction_SceneSession	base/SessionCommand.h	/^      t_checkCancelAuction_SceneSession()$/;"	f	struct:Cmd::Session::t_checkCancelAuction_SceneSession
t_checkCancelAuction_SceneSession	base/SessionCommand.h	/^    struct t_checkCancelAuction_SceneSession : t_AuctionCmd$/;"	s	namespace:Cmd::Session
t_checkNewMail_SceneSession	base/SessionCommand.h	/^      t_checkNewMail_SceneSession()$/;"	f	struct:Cmd::Session::t_checkNewMail_SceneSession
t_checkNewMail_SceneSession	base/SessionCommand.h	/^    struct t_checkNewMail_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_checkSend_SceneSession	base/SessionCommand.h	/^      t_checkSend_SceneSession()$/;"	f	struct:Cmd::Session::t_checkSend_SceneSession
t_checkSend_SceneSession	base/SessionCommand.h	/^    struct t_checkSend_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_checkUserCity_SceneSession	base/SessionCommand.h	/^      t_checkUserCity_SceneSession()$/;"	f	struct:Cmd::Session::t_checkUserCity_SceneSession
t_checkUserCity_SceneSession	base/SessionCommand.h	/^    struct t_checkUserCity_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_checkUser_SceneSession	base/SessionCommand.h	/^      t_checkUser_SceneSession()$/;"	f	struct:Cmd::Session::t_checkUser_SceneSession
t_checkUser_SceneSession	base/SessionCommand.h	/^    struct t_checkUser_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_checkZoneState	base/RolechangeCommand.h	/^	t_checkZoneState() : t_NullCmd(CMD_BATTLE, PARA_CHECK_ZONE_STATE)$/;"	f	struct:Cmd::Rolechange::t_checkZoneState
t_checkZoneState	base/RolechangeCommand.h	/^    struct t_checkZoneState : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_chkUserExist_SessionRecord	base/RecordCommand.h	/^      t_chkUserExist_SessionRecord()$/;"	f	struct:Cmd::Record::t_chkUserExist_SessionRecord
t_chkUserExist_SessionRecord	base/RecordCommand.h	/^    struct t_chkUserExist_SessionRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_cityRushCust_SceneSession	base/SessionCommand.h	/^      t_cityRushCust_SceneSession()$/;"	f	struct:Cmd::Session::t_cityRushCust_SceneSession
t_cityRushCust_SceneSession	base/SessionCommand.h	/^    struct t_cityRushCust_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_cityRush_SceneSession	base/SessionCommand.h	/^      t_cityRush_SceneSession()$/;"	f	struct:Cmd::Session::t_cityRush_SceneSession
t_cityRush_SceneSession	base/SessionCommand.h	/^    struct t_cityRush_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_clearUnionManor_SceneSession	base/SessionCommand.h	/^      t_clearUnionManor_SceneSession()$/;"	f	struct:Cmd::Session::t_clearUnionManor_SceneSession
t_clearUnionManor_SceneSession	base/SessionCommand.h	/^    struct t_clearUnionManor_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_client_command	tmpcode/commond.h	/^struct t_client_command\/\/∫Í÷∏¡ÓºØ∫œ$/;"	s
t_cmd_consume	base/UserCommand.h	/^      t_cmd_consume() $/;"	f	struct:Cmd::UserServer::t_cmd_consume
t_cmd_consume	base/UserCommand.h	/^    struct t_cmd_consume : public Cmd::t_NullCmd$/;"	s	namespace:Cmd::UserServer
t_cmd_fillin	base/UserCommand.h	/^      t_cmd_fillin() $/;"	f	struct:Cmd::UserServer::t_cmd_fillin
t_cmd_fillin	base/UserCommand.h	/^    struct t_cmd_fillin : public Cmd::t_NullCmd$/;"	s	namespace:Cmd::UserServer
t_cmd_mcard	base/UserCommand.h	/^      t_cmd_mcard() $/;"	f	struct:Cmd::UserServer::t_cmd_mcard
t_cmd_mcard	base/UserCommand.h	/^    struct t_cmd_mcard : public Cmd::t_NullCmd$/;"	s	namespace:Cmd::UserServer
t_cmd_pcard	base/UserCommand.h	/^      t_cmd_pcard() $/;"	f	struct:Cmd::UserServer::t_cmd_pcard
t_cmd_pcard	base/UserCommand.h	/^    struct t_cmd_pcard : public Cmd::t_NullCmd$/;"	s	namespace:Cmd::UserServer
t_cmd_qbalance	base/UserCommand.h	/^      t_cmd_qbalance() $/;"	f	struct:Cmd::UserServer::t_cmd_qbalance
t_cmd_qbalance	base/UserCommand.h	/^    struct t_cmd_qbalance : public Cmd::t_NullCmd$/;"	s	namespace:Cmd::UserServer
t_cmd_ret	base/UserCommand.h	/^      t_cmd_ret() $/;"	f	struct:Cmd::UserServer::t_cmd_ret
t_cmd_ret	base/UserCommand.h	/^    struct t_cmd_ret : public Cmd::t_NullCmd$/;"	s	namespace:Cmd::UserServer
t_confirmReceive	base/RolechangeCommand.h	/^	t_confirmReceive() :t_NullCmd(CMD_BATTLE, PARA_CONFIRM_RECEIVE)$/;"	f	struct:Cmd::Rolechange::t_confirmReceive
t_confirmReceive	base/RolechangeCommand.h	/^    struct t_confirmReceive : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_consignCartoon_SceneSession	base/SessionCommand.h	/^      t_consignCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_consignCartoon_SceneSession
t_consignCartoon_SceneSession	base/SessionCommand.h	/^    struct t_consignCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_consignRetCartoon_SceneSession	base/SessionCommand.h	/^      t_consignRetCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_consignRetCartoon_SceneSession
t_consignRetCartoon_SceneSession	base/SessionCommand.h	/^    struct t_consignRetCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_correctCartoon_SceneSession	base/SessionCommand.h	/^      t_correctCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_correctCartoon_SceneSession
t_correctCartoon_SceneSession	base/SessionCommand.h	/^    struct t_correctCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_countryAndScene_GateScene	base/SceneCommand.h	/^      t_countryAndScene_GateScene()$/;"	f	struct:Cmd::Scene::t_countryAndScene_GateScene
t_countryAndScene_GateScene	base/SceneCommand.h	/^    struct t_countryAndScene_GateScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_countryDareResult_SceneSession	base/SessionCommand.h	/^      t_countryDareResult_SceneSession()$/;"	f	struct:Cmd::Session::t_countryDareResult_SceneSession
t_countryDareResult_SceneSession	base/SessionCommand.h	/^    struct t_countryDareResult_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_countryNotify_SceneSession	base/SessionCommand.h	/^      t_countryNotify_SceneSession()$/;"	f	struct:Cmd::Session::t_countryNotify_SceneSession
t_countryNotify_SceneSession	base/SessionCommand.h	/^    struct t_countryNotify_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_countryPowerSort_SceneSession	base/SessionCommand.h	/^      t_countryPowerSort_SceneSession() : t_NullCmd(CMD_SCENE_COUNTRY,PARA_COUNTRY_POWER_SORT)$/;"	f	struct:Cmd::Session::t_countryPowerSort_SceneSession
t_countryPowerSort_SceneSession	base/SessionCommand.h	/^    struct t_countryPowerSort_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_countryPunishUser_SceneSession	base/SessionCommand.h	/^      t_countryPunishUser_SceneSession()$/;"	f	struct:Cmd::Session::t_countryPunishUser_SceneSession
t_countryPunishUser_SceneSession	base/SessionCommand.h	/^    struct t_countryPunishUser_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_createDare_SceneSession	base/SessionCommand.h	/^      t_createDare_SceneSession()$/;"	f	struct:Cmd::Session::t_createDare_SceneSession
t_createDare_SceneSession	base/SessionCommand.h	/^    struct t_createDare_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_createQuiz_SceneSession	base/SessionCommand.h	/^      t_createQuiz_SceneSession() : t_NullCmd(CMD_SCENE,PARA_SCENE_CREATE_QUIZ)$/;"	f	struct:Cmd::Session::t_createQuiz_SceneSession
t_createQuiz_SceneSession	base/SessionCommand.h	/^    struct t_createQuiz_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_createRush_SceneSession	base/SessionCommand.h	/^      t_createRush_SceneSession()$/;"	f	struct:Cmd::Session::t_createRush_SceneSession
t_createRush_SceneSession	base/SessionCommand.h	/^    struct t_createRush_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_createSchool_SceneSession	base/SessionCommand.h	/^      t_createSchool_SceneSession()$/;"	f	struct:Cmd::Session::t_createSchool_SceneSession
t_createSchool_SceneSession	base/SessionCommand.h	/^    struct t_createSchool_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_dareGold_SceneSession	base/SessionCommand.h	/^      t_dareGold_SceneSession()$/;"	f	struct:Cmd::Session::t_dareGold_SceneSession
t_dareGold_SceneSession	base/SessionCommand.h	/^    struct t_dareGold_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_darePk_SceneSession	base/SessionCommand.h	/^      t_darePk_SceneSession()$/;"	f	struct:Cmd::Session::t_darePk_SceneSession
t_darePk_SceneSession	base/SessionCommand.h	/^    struct t_darePk_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_delMail_SceneSession	base/SessionCommand.h	/^      t_delMail_SceneSession()$/;"	f	struct:Cmd::Session::t_delMail_SceneSession
t_delMail_SceneSession	base/SessionCommand.h	/^    struct t_delMail_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_disbandSept_GateSession	base/SessionCommand.h	/^      t_disbandSept_GateSession()$/;"	f	struct:Cmd::Session::t_disbandSept_GateSession
t_disbandSept_GateSession	base/SessionCommand.h	/^    struct t_disbandSept_GateSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_disbandUnion_GateSession	base/SessionCommand.h	/^      t_disbandUnion_GateSession()$/;"	f	struct:Cmd::Session::t_disbandUnion_GateSession
t_disbandUnion_GateSession	base/SessionCommand.h	/^    struct t_disbandUnion_GateSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_distributeSeptExp_SceneSession	base/SessionCommand.h	/^      t_distributeSeptExp_SceneSession()$/;"	f	struct:Cmd::Session::t_distributeSeptExp_SceneSession
t_distributeSeptExp_SceneSession	base/SessionCommand.h	/^    struct t_distributeSeptExp_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_drawCartoon_SceneSession	base/SessionCommand.h	/^      t_drawCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_drawCartoon_SceneSession
t_drawCartoon_SceneSession	base/SessionCommand.h	/^    struct t_drawCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_emperorPunishUser_SceneSession	base/SessionCommand.h	/^      t_emperorPunishUser_SceneSession()$/;"	f	struct:Cmd::Session::t_emperorPunishUser_SceneSession
t_emperorPunishUser_SceneSession	base/SessionCommand.h	/^    struct t_emperorPunishUser_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_enterUnionManor_SceneSession	base/SessionCommand.h	/^      t_enterUnionManor_SceneSession()$/;"	f	struct:Cmd::Session::t_enterUnionManor_SceneSession
t_enterUnionManor_SceneSession	base/SessionCommand.h	/^    struct t_enterUnionManor_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_enterWar_SceneSession	base/SessionCommand.h	/^      t_enterWar_SceneSession()$/;"	f	struct:Cmd::Session::t_enterWar_SceneSession
t_enterWar_SceneSession	base/SessionCommand.h	/^    struct t_enterWar_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_exitQuiz_GateSession	base/SessionCommand.h	/^      t_exitQuiz_GateSession()$/;"	f	struct:Cmd::Session::t_exitQuiz_GateSession
t_exitQuiz_GateSession	base/SessionCommand.h	/^    struct t_exitQuiz_GateSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_expRec	ScenesServer/SceneNpc.h	/^  t_expRec()$/;"	f	struct:t_expRec
t_expRec	ScenesServer/SceneNpc.h	/^struct t_expRec$/;"	s
t_fireSeptMember_SceneSession	base/SessionCommand.h	/^      t_fireSeptMember_SceneSession()$/;"	f	struct:Cmd::Session::t_fireSeptMember_SceneSession
t_fireSeptMember_SceneSession	base/SessionCommand.h	/^    struct t_fireSeptMember_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_fireUnionMember_SceneSession	base/SessionCommand.h	/^      t_fireUnionMember_SceneSession()$/;"	f	struct:Cmd::Session::t_fireUnionMember_SceneSession
t_fireUnionMember_SceneSession	base/SessionCommand.h	/^    struct t_fireUnionMember_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_forbidTalk_SceneSession	base/SessionCommand.h	/^      t_forbidTalk_SceneSession()$/;"	f	struct:Cmd::Session::t_forbidTalk_SceneSession
t_forbidTalk_SceneSession	base/SessionCommand.h	/^    struct t_forbidTalk_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_forwardUser_GateSession	base/SessionCommand.h	/^      t_forwardUser_GateSession()$/;"	f	struct:Cmd::Session::t_forwardUser_GateSession
t_forwardUser_GateSession	base/SessionCommand.h	/^    struct t_forwardUser_GateSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_forwardUser_SceneSession	base/SessionCommand.h	/^      t_forwardUser_SceneSession()$/;"	f	struct:Cmd::Session::t_forwardUser_SceneSession
t_forwardUser_SceneSession	base/SessionCommand.h	/^    struct t_forwardUser_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_fresh_MapIndex	base/SceneCommand.h	/^      t_fresh_MapIndex()$/;"	f	struct:Cmd::Scene::t_fresh_MapIndex
t_fresh_MapIndex	base/SceneCommand.h	/^    struct t_fresh_MapIndex : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_fresh_ScreenIndex	base/SceneCommand.h	/^      t_fresh_ScreenIndex()$/;"	f	struct:Cmd::Scene::t_fresh_ScreenIndex
t_fresh_ScreenIndex	base/SceneCommand.h	/^    struct t_fresh_ScreenIndex : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_getBackCartoon_SceneSession	base/SessionCommand.h	/^      t_getBackCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_getBackCartoon_SceneSession
t_getBackCartoon_SceneSession	base/SessionCommand.h	/^    struct t_getBackCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_getListAuction_SceneSession	base/SessionCommand.h	/^      t_getListAuction_SceneSession()$/;"	f	struct:Cmd::Session::t_getListAuction_SceneSession
t_getListAuction_SceneSession	base/SessionCommand.h	/^    struct t_getListAuction_SceneSession : t_AuctionCmd$/;"	s	namespace:Cmd::Session
t_getListCartoon_SceneSession	base/SessionCommand.h	/^      t_getListCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_getListCartoon_SceneSession
t_getListCartoon_SceneSession	base/SessionCommand.h	/^    struct t_getListCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_getMailItemConfirm_SceneSession	base/SessionCommand.h	/^      t_getMailItemConfirm_SceneSession()$/;"	f	struct:Cmd::Session::t_getMailItemConfirm_SceneSession
t_getMailItemConfirm_SceneSession	base/SessionCommand.h	/^    struct t_getMailItemConfirm_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_getMailItemReturn_SceneSession	base/SessionCommand.h	/^      t_getMailItemReturn_SceneSession()$/;"	f	struct:Cmd::Session::t_getMailItemReturn_SceneSession
t_getMailItemReturn_SceneSession	base/SessionCommand.h	/^    struct t_getMailItemReturn_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_getMailItem_SceneSession	base/SessionCommand.h	/^      t_getMailItem_SceneSession()$/;"	f	struct:Cmd::Session::t_getMailItem_SceneSession
t_getMailItem_SceneSession	base/SessionCommand.h	/^    struct t_getMailItem_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_getMailList_SceneSession	base/SessionCommand.h	/^      t_getMailList_SceneSession()$/;"	f	struct:Cmd::Session::t_getMailList_SceneSession
t_getMailList_SceneSession	base/SessionCommand.h	/^    struct t_getMailList_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_gmCommand_SceneGate	base/SceneCommand.h	/^	  t_gmCommand_SceneGate() :t_NullCmd(CMD_SCENE, PARA_GM_COMMAND_SCENEGATE)$/;"	f	struct:Cmd::Scene::t_gmCommand_SceneGate
t_gmCommand_SceneGate	base/SceneCommand.h	/^	  t_gmCommand_SceneGate(BYTE gm_cmd, DWORD dwUserID=0,DWORD para1=0,DWORD para2=0):t_NullCmd(CMD_SCENE, PARA_GM_COMMAND_SCENEGATE),gm_cmd(gm_cmd),dwUserID(dwUserID),para1(para1),para2(para2)$/;"	f	struct:Cmd::Scene::t_gmCommand_SceneGate
t_gmCommand_SceneGate	base/SceneCommand.h	/^    struct t_gmCommand_SceneGate : public t_NullCmd$/;"	s	namespace:Cmd::Scene
t_gmCommand_SceneSession	base/SessionCommand.h	/^      t_gmCommand_SceneSession() $/;"	f	struct:Cmd::Session::t_gmCommand_SceneSession
t_gmCommand_SceneSession	base/SessionCommand.h	/^    struct t_gmCommand_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_group	ScenesServer/GroupCardManager.h	/^    t_group()$/;"	f	struct:t_group
t_group	ScenesServer/GroupCardManager.h	/^struct t_group $/;"	s
t_group_list	base/HeroCardCmd.h	/^	t_group_list()$/;"	f	struct:Cmd::t_group_list
t_group_list	base/HeroCardCmd.h	/^    struct t_group_list$/;"	s	namespace:Cmd
t_guardFail_SceneSession	base/SessionCommand.h	/^      t_guardFail_SceneSession()$/;"	f	struct:Cmd::Session::t_guardFail_SceneSession
t_guardFail_SceneSession	base/SessionCommand.h	/^    struct t_guardFail_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_hero	base/HeroCardCmd.h	/^	t_hero()$/;"	f	struct:Cmd::t_hero
t_hero	base/HeroCardCmd.h	/^    struct t_hero$/;"	s	namespace:Cmd
t_idinuse_Bill	base/SuperCommand.h	/^      t_idinuse_Bill()$/;"	f	struct:Cmd::Super::t_idinuse_Bill
t_idinuse_Bill	base/SuperCommand.h	/^    struct t_idinuse_Bill : t_NullCmd$/;"	s	namespace:Cmd::Super
t_idinuse_Session	base/FLCommand.h	/^      t_idinuse_Session()$/;"	f	struct:Cmd::FL::t_idinuse_Session
t_idinuse_Session	base/FLCommand.h	/^    struct t_idinuse_Session : t_NullCmd$/;"	s	namespace:Cmd::FL
t_kickUser_GateScene	base/SceneCommand.h	/^      t_kickUser_GateScene()$/;"	f	struct:Cmd::Scene::t_kickUser_GateScene
t_kickUser_GateScene	base/SceneCommand.h	/^    struct t_kickUser_GateScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_levelNotifyCartoon_SceneSession	base/SessionCommand.h	/^      t_levelNotifyCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_levelNotifyCartoon_SceneSession
t_levelNotifyCartoon_SceneSession	base/SessionCommand.h	/^    struct t_levelNotifyCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_levelupNotify_SceneSession	base/SessionCommand.h	/^      t_levelupNotify_SceneSession()$/;"	f	struct:Cmd::Session::t_levelupNotify_SceneSession
t_levelupNotify_SceneSession	base/SessionCommand.h	/^    struct t_levelupNotify_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_loadCartoon_SceneSession	base/SessionCommand.h	/^      t_loadCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_loadCartoon_SceneSession
t_loadCartoon_SceneSession	base/SessionCommand.h	/^    struct t_loadCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_logon	base/UserCommand.h	/^      t_logon() $/;"	f	struct:Cmd::UserServer::t_logon
t_logon	base/UserCommand.h	/^    struct t_logon : public Cmd::t_NullCmd$/;"	s	namespace:Cmd::UserServer
t_logon_OK	base/UserCommand.h	/^      t_logon_OK()$/;"	f	struct:Cmd::UserServer::t_logon_OK
t_logon_OK	base/UserCommand.h	/^    struct t_logon_OK : t_NullCmd\/\/ÊúçÂä°Âô®ÂêåÊ≠•ÂëΩ‰ª§$/;"	s	namespace:Cmd::UserServer
t_notifyAddIntegral	base/SessionCommand.h	/^      t_notifyAddIntegral() : t_NullCmd(CMD_SCENE,PARA_NOTIFY_ADD_INTEGRAL) {};$/;"	f	struct:Cmd::Session::t_notifyAddIntegral
t_notifyAddIntegral	base/SessionCommand.h	/^    struct t_notifyAddIntegral : t_NullCmd$/;"	s	namespace:Cmd::Session
t_notifyCartoon_SceneSession	base/SessionCommand.h	/^      t_notifyCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_notifyCartoon_SceneSession
t_notifyCartoon_SceneSession	base/SessionCommand.h	/^    struct t_notifyCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_notifyEnterZone_SceneSession	base/SessionCommand.h	/^	t_notifyEnterZone_SceneSession()$/;"	f	struct:Cmd::Session::t_notifyEnterZone_SceneSession
t_notifyEnterZone_SceneSession	base/SessionCommand.h	/^    struct t_notifyEnterZone_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_notifyFinish_Gateway	base/SuperCommand.h	/^	struct t_notifyFinish_Gateway : t_NullCmd$/;"	s	namespace:Cmd::Super
t_notifyFinish_Gateway	base/SuperCommand.h	/^      t_notifyFinish_Gateway()$/;"	f	struct:Cmd::Super::t_notifyFinish_Gateway
t_notifyNpcHoldData	base/SessionCommand.h	/^      t_notifyNpcHoldData() : t_NullCmd(CMD_SCENE,PARA_NOTIFY_NPC_HOLD_DATA) {};$/;"	f	struct:Cmd::Session::t_notifyNpcHoldData
t_notifyNpcHoldData	base/SessionCommand.h	/^    struct t_notifyNpcHoldData : t_NullCmd$/;"	s	namespace:Cmd::Session
t_notifyStopChange_SceneSession	base/SessionCommand.h	/^	t_notifyStopChange_SceneSession()$/;"	f	struct:Cmd::Session::t_notifyStopChange_SceneSession
t_notifyStopChange_SceneSession	base/SessionCommand.h	/^    struct t_notifyStopChange_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_opAllyFrienddegree_SceneSession	base/SessionCommand.h	/^      t_opAllyFrienddegree_SceneSession()$/;"	f	struct:Cmd::Session::t_opAllyFrienddegree_SceneSession
t_opAllyFrienddegree_SceneSession	base/SessionCommand.h	/^    struct t_opAllyFrienddegree_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_opTechVote_SceneSession	base/SessionCommand.h	/^      t_opTechVote_SceneSession()$/;"	f	struct:Cmd::Session::t_opTechVote_SceneSession
t_opTechVote_SceneSession	base/SessionCommand.h	/^    struct t_opTechVote_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_openMail_SceneSession	base/SessionCommand.h	/^      t_openMail_SceneSession()$/;"	f	struct:Cmd::Session::t_openMail_SceneSession
t_openMail_SceneSession	base/SessionCommand.h	/^    struct t_openMail_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_order_Country_GateRecord	base/RecordCommand.h	/^      t_order_Country_GateRecord()$/;"	f	struct:Cmd::Record::t_order_Country_GateRecord
t_order_Country_GateRecord	base/RecordCommand.h	/^    struct t_order_Country_GateRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_order_Country_GateSession	base/SessionCommand.h	/^      t_order_Country_GateSession()$/;"	f	struct:Cmd::Session::t_order_Country_GateSession
t_order_Country_GateSession	base/SessionCommand.h	/^    struct t_order_Country_GateSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_privateChat_SceneSession	base/SessionCommand.h	/^      t_privateChat_SceneSession()$/;"	f	struct:Cmd::Session::t_privateChat_SceneSession
t_privateChat_SceneSession	base/SessionCommand.h	/^    struct t_privateChat_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_queryAuction_SceneSession	base/SessionCommand.h	/^      t_queryAuction_SceneSession()$/;"	f	struct:Cmd::Session::t_queryAuction_SceneSession
t_queryAuction_SceneSession	base/SessionCommand.h	/^    struct t_queryAuction_SceneSession : t_AuctionCmd$/;"	s	namespace:Cmd::Session
t_questionNpcDare_SceneSession	base/SessionCommand.h	/^      t_questionNpcDare_SceneSession()$/;"	f	struct:Cmd::Session::t_questionNpcDare_SceneSession
t_questionNpcDare_SceneSession	base/SessionCommand.h	/^    struct t_questionNpcDare_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_questionObject_SceneSession	base/SessionCommand.h	/^      t_questionObject_SceneSession()$/;"	f	struct:Cmd::Session::t_questionObject_SceneSession
t_questionObject_SceneSession	base/SessionCommand.h	/^    struct t_questionObject_SceneSession  : t_NullCmd$/;"	s	namespace:Cmd::Session
t_questionUnionCity_SceneSession	base/SessionCommand.h	/^      t_questionUnionCity_SceneSession()$/;"	f	struct:Cmd::Session::t_questionUnionCity_SceneSession
t_questionUnionCity_SceneSession	base/SessionCommand.h	/^    struct t_questionUnionCity_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_quizAward_SceneSession	base/SessionCommand.h	/^      t_quizAward_SceneSession()$/;"	f	struct:Cmd::Session::t_quizAward_SceneSession
t_quizAward_SceneSession	base/SessionCommand.h	/^    struct t_quizAward_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_refreshGen_SceneSession	base/SessionCommand.h	/^      t_refreshGen_SceneSession()$/;"	f	struct:Cmd::Session::t_refreshGen_SceneSession
t_refreshGen_SceneSession	base/SessionCommand.h	/^    struct t_refreshGen_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_regScene_SceneSession	base/SessionCommand.h	/^      t_regScene_SceneSession()$/;"	f	struct:Cmd::Session::t_regScene_SceneSession
t_regScene_SceneSession	base/SessionCommand.h	/^    struct t_regScene_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_regScene_ret_SceneSession	base/SessionCommand.h	/^      t_regScene_ret_SceneSession()$/;"	f	struct:Cmd::Session::t_regScene_ret_SceneSession
t_regScene_ret_SceneSession	base/SessionCommand.h	/^    struct t_regScene_ret_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_regUserSuccess_SceneSession	base/SessionCommand.h	/^      t_regUserSuccess_SceneSession()$/;"	f	struct:Cmd::Session::t_regUserSuccess_SceneSession
t_regUserSuccess_SceneSession	base/SessionCommand.h	/^    struct t_regUserSuccess_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_regUser_GateSession	base/SessionCommand.h	/^      t_regUser_GateSession()$/;"	f	struct:Cmd::Session::t_regUser_GateSession
t_regUser_GateSession	base/SessionCommand.h	/^    struct t_regUser_GateSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_regUser_SceneSession	base/SessionCommand.h	/^      t_regUser_SceneSession()$/;"	f	struct:Cmd::Session::t_regUser_SceneSession
t_regUser_SceneSession	base/SessionCommand.h	/^    struct t_regUser_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_removeScene_SceneSession	base/SessionCommand.h	/^      t_removeScene_SceneSession()$/;"	f	struct:Cmd::Session::t_removeScene_SceneSession
t_removeScene_SceneSession	base/SessionCommand.h	/^    struct t_removeScene_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_reqAddScene_SceneSession	base/SessionCommand.h	/^      t_reqAddScene_SceneSession()$/;"	f	struct:Cmd::Session::t_reqAddScene_SceneSession
t_reqAddScene_SceneSession	base/SessionCommand.h	/^    struct t_reqAddScene_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_request_Country_GateRecord	base/RecordCommand.h	/^      t_request_Country_GateRecord()$/;"	f	struct:Cmd::Record::t_request_Country_GateRecord
t_request_Country_GateRecord	base/RecordCommand.h	/^    struct t_request_Country_GateRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_request_Country_GateSession	base/SessionCommand.h	/^      t_request_Country_GateSession()$/;"	f	struct:Cmd::Session::t_request_Country_GateSession
t_request_Country_GateSession	base/SessionCommand.h	/^    struct t_request_Country_GateSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_restart_ServerEntry_NotifyOther	base/BroadCommand.h	/^      t_restart_ServerEntry_NotifyOther()$/;"	f	struct:Cmd::BroadServer::t_restart_ServerEntry_NotifyOther
t_restart_ServerEntry_NotifyOther	base/BroadCommand.h	/^    struct t_restart_ServerEntry_NotifyOther : t_NullCmd$/;"	s	namespace:Cmd::BroadServer
t_restart_ServerEntry_NotifyOther	base/SuperCommand.h	/^      t_restart_ServerEntry_NotifyOther()$/;"	f	struct:Cmd::Super::t_restart_ServerEntry_NotifyOther
t_restart_ServerEntry_NotifyOther	base/SuperCommand.h	/^    struct t_restart_ServerEntry_NotifyOther : t_NullCmd$/;"	s	namespace:Cmd::Super
t_retCheckZoneState	base/RolechangeCommand.h	/^	t_retCheckZoneState() : t_NullCmd(CMD_BATTLE, PARA_RET_CHECK_ZONE_STATE)$/;"	f	struct:Cmd::Rolechange::t_retCheckZoneState
t_retCheckZoneState	base/RolechangeCommand.h	/^    struct t_retCheckZoneState : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_retSendUserToZone	base/RolechangeCommand.h	/^	t_retSendUserToZone() : t_NullCmd(CMD_BATTLE, PARA_SEND_USER_TOZONE)$/;"	f	struct:Cmd::Rolechange::t_retSendUserToZone
t_retSendUserToZone	base/RolechangeCommand.h	/^    struct t_retSendUserToZone : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_returnChangeCountry_SceneSession	base/SessionCommand.h	/^      t_returnChangeCountry_SceneSession()$/;"	f	struct:Cmd::Session::t_returnChangeCountry_SceneSession
t_returnChangeCountry_SceneSession	base/SessionCommand.h	/^    struct t_returnChangeCountry_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_returnEnterUnionManor_SceneSession	base/SessionCommand.h	/^      t_returnEnterUnionManor_SceneSession()$/;"	f	struct:Cmd::Session::t_returnEnterUnionManor_SceneSession
t_returnEnterUnionManor_SceneSession	base/SessionCommand.h	/^    struct t_returnEnterUnionManor_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_returnObject_SceneSession	base/SessionCommand.h	/^      t_returnObject_SceneSession()$/;"	f	struct:Cmd::Session::t_returnObject_SceneSession
t_returnObject_SceneSession	base/SessionCommand.h	/^    struct t_returnObject_SceneSession  : t_NullCmd$/;"	s	namespace:Cmd::Session
t_saleAuction_SceneSession	base/SessionCommand.h	/^      t_saleAuction_SceneSession()$/;"	f	struct:Cmd::Session::t_saleAuction_SceneSession
t_saleAuction_SceneSession	base/SessionCommand.h	/^    struct t_saleAuction_SceneSession : t_AuctionCmd$/;"	s	namespace:Cmd::Session
t_saleCartoon_SceneSession	base/SessionCommand.h	/^      t_saleCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_saleCartoon_SceneSession
t_saleCartoon_SceneSession	base/SessionCommand.h	/^    struct t_saleCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_saveCartoon_SceneSession	base/SessionCommand.h	/^      t_saveCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_saveCartoon_SceneSession
t_saveCartoon_SceneSession	base/SessionCommand.h	/^    struct t_saveCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_selTransCountryWar_SceneSession	base/SessionCommand.h	/^      t_selTransCountryWar_SceneSession()$/;"	f	struct:Cmd::Session::t_selTransCountryWar_SceneSession
t_selTransCountryWar_SceneSession	base/SessionCommand.h	/^    struct t_selTransCountryWar_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_sendChangeSort	base/RolechangeCommand.h	/^	t_sendChangeSort() : t_NullCmd(CMD_BATTLE, PARA_SEND_CHANGE_SORT)$/;"	f	struct:Cmd::Rolechange::t_sendChangeSort
t_sendChangeSort	base/RolechangeCommand.h	/^    struct t_sendChangeSort : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_sendCmd_SceneSession	base/SessionCommand.h	/^      t_sendCmd_SceneSession() : t_NullCmd(CMD_SCENE,PARA_SCENE_SEND_CMD)$/;"	f	struct:Cmd::Session::t_sendCmd_SceneSession
t_sendCmd_SceneSession	base/SessionCommand.h	/^    struct t_sendCmd_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_sendGift_SceneSession	base/SessionCommand.h	/^      t_sendGift_SceneSession()$/;"	f	struct:Cmd::Session::t_sendGift_SceneSession
t_sendGift_SceneSession	base/SessionCommand.h	/^    struct t_sendGift_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_sendMail_SceneSession	base/SessionCommand.h	/^      t_sendMail_SceneSession()$/;"	f	struct:Cmd::Session::t_sendMail_SceneSession
t_sendMail_SceneSession	base/SessionCommand.h	/^    struct t_sendMail_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_sendUserArmyInfo_SceneSession	base/SessionCommand.h	/^      t_sendUserArmyInfo_SceneSession()$/;"	f	struct:Cmd::Session::t_sendUserArmyInfo_SceneSession
t_sendUserArmyInfo_SceneSession	base/SessionCommand.h	/^    struct t_sendUserArmyInfo_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_sendUserRelationID	base/SessionCommand.h	/^      t_sendUserRelationID()$/;"	f	struct:Cmd::Session::t_sendUserRelationID
t_sendUserRelationID	base/SessionCommand.h	/^    struct t_sendUserRelationID : t_NullCmd$/;"	s	namespace:Cmd::Session
t_sendUserToZone	base/RolechangeCommand.h	/^	t_sendUserToZone() : t_NullCmd(CMD_BATTLE, PARA_SEND_USER_TOZONE)$/;"	f	struct:Cmd::Rolechange::t_sendUserToZone
t_sendUserToZone	base/RolechangeCommand.h	/^    struct t_sendUserToZone : t_NullCmd$/;"	s	namespace:Cmd::Rolechange
t_serverNotify_SceneSession	base/SessionCommand.h	/^      t_serverNotify_SceneSession()$/;"	f	struct:Cmd::Session::t_serverNotify_SceneSession
t_serverNotify_SceneSession	base/SessionCommand.h	/^    struct t_serverNotify_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_setAntiAttFlag_SceneSession	base/SessionCommand.h	/^      t_setAntiAttFlag_SceneSession()$/;"	f	struct:Cmd::Session::t_setAntiAttFlag_SceneSession
t_setAntiAttFlag_SceneSession	base/SessionCommand.h	/^    struct t_setAntiAttFlag_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_setCatcherState_SceneSession	base/SessionCommand.h	/^      t_setCatcherState_SceneSession()$/;"	f	struct:Cmd::Session::t_setCatcherState_SceneSession
t_setCatcherState_SceneSession	base/SessionCommand.h	/^    struct t_setCatcherState_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_setCountryWar_SceneSession	base/SessionCommand.h	/^      t_setCountryWar_SceneSession()$/;"	f	struct:Cmd::Session::t_setCountryWar_SceneSession
t_setCountryWar_SceneSession	base/SessionCommand.h	/^    struct t_setCountryWar_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_setDiplomatState_SceneSession	base/SessionCommand.h	/^      t_setDiplomatState_SceneSession()$/;"	f	struct:Cmd::Session::t_setDiplomatState_SceneSession
t_setDiplomatState_SceneSession	base/SessionCommand.h	/^    struct t_setDiplomatState_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_setEmperorDare_SceneSession	base/SessionCommand.h	/^      t_setEmperorDare_SceneSession()$/;"	f	struct:Cmd::Session::t_setEmperorDare_SceneSession
t_setEmperorDare_SceneSession	base/SessionCommand.h	/^    struct t_setEmperorDare_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_setEmperorHold_SceneSession	base/SessionCommand.h	/^      t_setEmperorHold_SceneSession()$/;"	f	struct:Cmd::Session::t_setEmperorHold_SceneSession
t_setEmperorHold_SceneSession	base/SessionCommand.h	/^    struct t_setEmperorHold_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_setRepairCartoon_SceneSession	base/SessionCommand.h	/^      t_setRepairCartoon_SceneSession()$/;"	f	struct:Cmd::Session::t_setRepairCartoon_SceneSession
t_setRepairCartoon_SceneSession	base/SessionCommand.h	/^    struct t_setRepairCartoon_SceneSession : t_CartoonCmd$/;"	s	namespace:Cmd::Session
t_shutdown_SceneSession	base/SessionCommand.h	/^      t_shutdown_SceneSession()$/;"	f	struct:Cmd::Session::t_shutdown_SceneSession
t_shutdown_SceneSession	base/SessionCommand.h	/^    struct t_shutdown_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_shutdown_Super	base/SuperCommand.h	/^      t_shutdown_Super(): t_NullCmd(CMD_SESSION,PARA_SHUTDOWN)$/;"	f	struct:Cmd::Super::t_shutdown_Super
t_shutdown_Super	base/SuperCommand.h	/^    struct t_shutdown_Super : t_NullCmd$/;"	s	namespace:Cmd::Super
t_summonAllyNpc_SceneSession	base/SessionCommand.h	/^      t_summonAllyNpc_SceneSession()$/;"	f	struct:Cmd::Session::t_summonAllyNpc_SceneSession
t_summonAllyNpc_SceneSession	base/SessionCommand.h	/^    struct t_summonAllyNpc_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_sysSetting_GateScene	base/SceneCommand.h	/^      t_sysSetting_GateScene()$/;"	f	struct:Cmd::Scene::t_sysSetting_GateScene
t_sysSetting_GateScene	base/SceneCommand.h	/^    struct t_sysSetting_GateScene : t_NullCmd$/;"	s	namespace:Cmd::Scene
t_sysSetting_SceneSession	base/SessionCommand.h	/^      t_sysSetting_SceneSession()$/;"	f	struct:Cmd::Session::t_sysSetting_SceneSession
t_sysSetting_SceneSession	base/SessionCommand.h	/^    struct t_sysSetting_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_taxAddCountry_SceneSession	base/SessionCommand.h	/^      t_taxAddCountry_SceneSession()$/;"	f	struct:Cmd::Session::t_taxAddCountry_SceneSession
t_taxAddCountry_SceneSession	base/SessionCommand.h	/^    struct t_taxAddCountry_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_taxCountry_SceneSession	base/SessionCommand.h	/^      t_taxCountry_SceneSession()$/;"	f	struct:Cmd::Session::t_taxCountry_SceneSession
t_taxCountry_SceneSession	base/SessionCommand.h	/^    struct t_taxCountry_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_transDareCountry_SceneSession	base/SessionCommand.h	/^      t_transDareCountry_SceneSession()$/;"	f	struct:Cmd::Session::t_transDareCountry_SceneSession
t_transDareCountry_SceneSession	base/SessionCommand.h	/^    struct t_transDareCountry_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_turnBackMail_SceneSession	base/SessionCommand.h	/^      t_turnBackMail_SceneSession()$/;"	f	struct:Cmd::Session::t_turnBackMail_SceneSession
t_turnBackMail_SceneSession	base/SessionCommand.h	/^    struct t_turnBackMail_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_unionDareNotify_SceneSession	base/SessionCommand.h	/^      t_unionDareNotify_SceneSession()$/;"	f	struct:Cmd::Session::t_unionDareNotify_SceneSession
t_unionDareNotify_SceneSession	base/SessionCommand.h	/^    struct t_unionDareNotify_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_unloadScene_SceneSession	base/SessionCommand.h	/^      t_unloadScene_SceneSession()$/;"	f	struct:Cmd::Session::t_unloadScene_SceneSession
t_unloadScene_SceneSession	base/SessionCommand.h	/^    struct t_unloadScene_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_unregScene_SceneSession	base/SessionCommand.h	/^      t_unregScene_SceneSession()$/;"	f	struct:Cmd::Session::t_unregScene_SceneSession
t_unregScene_SceneSession	base/SessionCommand.h	/^    struct t_unregScene_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_unregUser_GateSession	base/SessionCommand.h	/^      t_unregUser_GateSession()$/;"	f	struct:Cmd::Session::t_unregUser_GateSession
t_unregUser_GateSession	base/SessionCommand.h	/^    struct t_unregUser_GateSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_unregUser_SceneSession	base/SessionCommand.h	/^      t_unregUser_SceneSession()$/;"	f	struct:Cmd::Session::t_unregUser_SceneSession
t_unregUser_SceneSession	base/SessionCommand.h	/^    struct t_unregUser_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_updateAlly_SceneSession	base/SessionCommand.h	/^      t_updateAlly_SceneSession()$/;"	f	struct:Cmd::Session::t_updateAlly_SceneSession
t_updateAlly_SceneSession	base/SessionCommand.h	/^    struct t_updateAlly_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_updateConsort	base/SessionCommand.h	/^      t_updateConsort() : t_NullCmd(CMD_SCENE,PARA_UPDATE_CONSORT) $/;"	f	struct:Cmd::Session::t_updateConsort
t_updateConsort	base/SessionCommand.h	/^    struct t_updateConsort : t_NullCmd$/;"	s	namespace:Cmd::Session
t_updateCountryStar	base/SessionCommand.h	/^      t_updateCountryStar() : t_NullCmd(CMD_SCENE,PARA_UPDATE_COUNTRY_STAR) {};$/;"	f	struct:Cmd::Session::t_updateCountryStar
t_updateCountryStar	base/SessionCommand.h	/^    struct t_updateCountryStar : t_NullCmd$/;"	s	namespace:Cmd::Session
t_updateOnline_SessionGate	base/SessionCommand.h	/^		t_updateOnline_SessionGate()$/;"	f	struct:Cmd::Session::t_updateOnline_SessionGate
t_updateOnline_SessionGate	base/SessionCommand.h	/^	struct t_updateOnline_SessionGate : t_NullCmd$/;"	s	namespace:Cmd::Session
t_updateSceneUnion_SceneSession	base/SessionCommand.h	/^      t_updateSceneUnion_SceneSession()$/;"	f	struct:Cmd::Session::t_updateSceneUnion_SceneSession
t_updateSceneUnion_SceneSession	base/SessionCommand.h	/^    struct t_updateSceneUnion_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_updateTech_SceneSession	base/SessionCommand.h	/^      t_updateTech_SceneSession()$/;"	f	struct:Cmd::Session::t_updateTech_SceneSession
t_updateTech_SceneSession	base/SessionCommand.h	/^    struct t_updateTech_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_updateWinnerExp_SceneSession	base/SessionCommand.h	/^      t_updateWinnerExp_SceneSession()$/;"	f	struct:Cmd::Session::t_updateWinnerExp_SceneSession
t_updateWinnerExp_SceneSession	base/SessionCommand.h	/^    struct t_updateWinnerExp_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_update_ZoneState	base/RecordCommand.h	/^	t_update_ZoneState() : t_NullCmd(CMD_GATE, PARA_GATE_UPDATE_ZONE_STATE)$/;"	f	struct:Cmd::Record::t_update_ZoneState
t_update_ZoneState	base/RecordCommand.h	/^    struct t_update_ZoneState : t_NullCmd$/;"	s	namespace:Cmd::Record
t_userExist_SceneRecord	base/RecordCommand.h	/^      t_userExist_SceneRecord()$/;"	f	struct:Cmd::Record::t_userExist_SceneRecord
t_userExist_SceneRecord	base/RecordCommand.h	/^    struct t_userExist_SceneRecord : t_NullCmd$/;"	s	namespace:Cmd::Record
t_viewCountryDare_SceneSession	base/SessionCommand.h	/^      t_viewCountryDare_SceneSession()$/;"	f	struct:Cmd::Session::t_viewCountryDare_SceneSession
t_viewCountryDare_SceneSession	base/SessionCommand.h	/^    struct t_viewCountryDare_SceneSession : t_NullCmd$/;"	s	namespace:Cmd::Session
t_zone_info	base/RolechangeCommand.h	/^	t_zone_info()$/;"	f	struct:Cmd::Rolechange::t_zone_info
t_zone_info	base/RolechangeCommand.h	/^    struct t_zone_info$/;"	s	namespace:Cmd::Rolechange
tab	base/Object.h	/^	DWORD tab() const$/;"	f	struct:stObjectLocation
tab	base/Object.h	/^	void tab(DWORD t)$/;"	f	struct:stObjectLocation
tabKey	tmpcode/commond.h	/^		TabKey tabKey;$/;"	m	struct:stTabKeyPropertyUserCmd::TabKeyNum
tabKey	tmpcode/commond.h	/^	TabKey tabKey; $/;"	m	struct:stSetTabKeyPropertyUserCmd
tabKeyNum	tmpcode/commond.h	/^	}tabKeyNum[0];$/;"	m	struct:stTabKeyPropertyUserCmd	typeref:struct:stTabKeyPropertyUserCmd::TabKeyNum
tableID	tmpcode/commond.h	/^        DWORD tableID; $/;"	m	struct:rtTableListMapScreenUserCmd
tableID	tmpcode/commond.h	/^        DWORD tableID;$/;"	m	struct:req_ReplyTableMapScreenUserCmd
tableID	tmpcode/commond.h	/^        DWORD tableID;$/;"	m	struct:rtCallTuDiMapScreenUserCmd
tableID	tmpcode/commond.h	/^        DWORD tableID;\/\/≤Õ◊¿$/;"	m	struct:req_JoinTableMapScreenUserCmd
tableID	tmpcode/commond.h	/^        DWORD tableID;\/\/≤Õ◊¿$/;"	m	struct:req_TableListMapScreenUserCmd
tableName	base/zMetaData.h	/^	std::string tableName;  $/;"	m	class:DBFieldSet
table_end	roleRegServer/roleRegServer.h	/^	WORD table_end;	    \/\/±ÌµƒΩ· ¯$/;"	m	class:roleRegService
table_start	roleRegServer/roleRegServer.h	/^	WORD table_start;   \/\/±Ìµƒø™ º$/;"	m	class:roleRegService
tables	base/zMetaData.h	/^	TableManager tables;$/;"	m	class:DBMetaData
tagName	tmpcode/commond.h	/^        char tagName[16];        \/\/"œÍœ∏"µƒ√˚◊÷$/;"	m	struct:stActivityDataUserCmd::act
takeQuestUser	tmpcode/commond.h	/^	char takeQuestUser[MAX_NAMESIZE + 1];  \/\/\/ Ω”Ô⁄»À√˚◊÷$/;"	m	struct:stGetMemberListSeptGuardCmd
takeType	tmpcode/commond.h	/^		BYTE takeType;$/;"	m	struct:stSendSeptStoreDataCmd::__anon305
takeType	tmpcode/commond.h	/^	BYTE takeType;  \/\/0 ≥∑œ˙ 1 »´ÃÂ 2 ∏ˆ»À$/;"	m	struct:stSetObjectRightSeptStore
talk	tmpcode/commond.h	/^	BYTE talk[MAX_CHATINFO];$/;"	m	struct:stTalkLTQUserCmd
tankData	tmpcode/commond.h	/^	TankData tankData;      \/\/’Ω≥µ ˝æ›$/;"	m	struct:stRetOneTankCmd
tankData	tmpcode/commond.h	/^        TankData tankData;      \/\/’Ω≥µ ˝æ›$/;"	m	struct:stRetTankListCmd::__anon301
tankHole	tmpcode/commond.h	/^	TankHole tankHole[TANK_HOLE_MAX];           \/\/’Ω≥µµƒ4∏ˆ≈‰º˛œ‚«∂ø◊$/;"	m	struct:TankData
tankID	tmpcode/commond.h	/^	DWORD   tankID;                 \/\/’Ω≥µID  $/;"	m	struct:stUseMainPowerTankDamageCmd
tankID	tmpcode/commond.h	/^	DWORD tankID;                   $/;"	m	struct:stDestroyTankCmd
tankID	tmpcode/commond.h	/^	DWORD tankID;                   \/\/¥˝∏ƒ◊∞µƒ’Ω≥µid$/;"	m	struct:stCheckRebuildTankCmd
tankID	tmpcode/commond.h	/^	DWORD tankID;                   \/\/¥˝∏ƒ◊∞µƒ’Ω≥µid$/;"	m	struct:stCheckRebuildUnionTankCmd
tankID	tmpcode/commond.h	/^	DWORD tankID;  \/\/ ’Ω≥µid$/;"	m	struct:stRequestGetOnTank
tankID	tmpcode/commond.h	/^	DWORD tankID; $/;"	m	struct:stRemoveTankMapScreenStateUserCmd
tankID	tmpcode/commond.h	/^	DWORD tankID; $/;"	m	struct:stSetHpTankCmd
tankID	tmpcode/commond.h	/^	DWORD tankID; $/;"	m	struct:stTankNameCmd
tankID	tmpcode/commond.h	/^	DWORD tankID; $/;"	m	struct:stTransferTankDriverPowerCmd
tankID	tmpcode/commond.h	/^	DWORD tankID; $/;"	m	struct:stUnionTankNameCmd
tankID	tmpcode/commond.h	/^	DWORD tankID;$/;"	m	struct:stGetBackTankCmd
tankID	tmpcode/commond.h	/^	DWORD tankID;$/;"	m	struct:t_MapTankData
tankID	tmpcode/commond.h	/^	DWORD tankID;\/\/’Ω≥µID$/;"	m	struct:stNotifyGetOffTankCmd
tankID	tmpcode/commond.h	/^	DWORD tankID;\/\/’Ω≥µID$/;"	m	struct:stNotifyGetOnTankCmd
target	base/Command.h	/^  char target[16];$/;"	m	struct:Cmd::stRequestQuestUserCmd
target	tmpcode/commond.h	/^	char target[16]; \/\/ƒø±Í$/;"	m	struct:stRequestQuestUserCmd
targetDistance	ScenesServer/SceneNpc.h	/^  int targetDistance;\/\/‰∏éÂΩìÂâçÁõÆÊ†áÁöÑÊúÄÁü≠Ë∑ùÁ¶ª$/;"	m	class:SceneNpc
targetID	tmpcode/commond.h	/^        DWORD targetID;     \/\/À˘«Î«Ûµƒ»ŒŒÒÀ˘ Ù”√ªßid$/;"	m	struct:showPeronTaskUserCmd
targetType	base/Command.h	/^  DWORD targetType;\/\/\/ÁõÆÊ†áÁ±ªÂûã 0:Áé©ÂÆ∂ 1:NPC$/;"	m	struct:Cmd::stSetTargetPetCmd
targetType	tmpcode/commond.h	/^	DWORD targetType;\/\/\/ƒø±Í¿‡–Õ 0:ÕÊº“ 1:NPC$/;"	m	struct:stSetTargetPetCmd
target_zone	base/CharBase.h	/^  DWORD target_zone;	\/\/ƒø±Í«¯ID$/;"	m	struct:CharBase
target_zone	base/Command.h	/^    DWORD target_zone;$/;"	m	struct:Cmd::SelectUserInfo
target_zone	tmpcode/commond.h	/^	DWORD target_zone;                           \/\/\/ ƒø±Í«¯ID, µ±zone_state,Œ™1 ±£¨”––ß$/;"	m	struct:SelectUserInfo
task	SessionServer/Session.h	/^    SessionTask *task;$/;"	m	class:Session
taskID	ScenesServer/scriptTickTask.h	/^	QWORD taskID;$/;"	m	struct:scriptTask
taskMoney	tmpcode/commond.h	/^    DWORD taskMoney;    \/\/ £”‡ø…”√”⁄∑¢»ŒŒÒ◊ Ω$/;"	m	struct:CityInfo
taskNum	tmpcode/commond.h	/^	DWORD taskNum;            \/\/∑¢≤ºµƒ»ŒŒÒ◊‹ ˝$/;"	m	struct:stRequestCleanTaskUserCmd
taskPool	BillServer/BillServer.h	/^    zTCPTaskPool *taskPool;        \/**< TCPËøûÊé•Ê±†ÁöÑÊåáÈíà *\/$/;"	m	class:BillService
taskPool	GatewayServer/GatewayServer.cpp	/^zTCPTaskPool * GatewayService::taskPool = NULL;$/;"	m	class:GatewayService
taskPool	GatewayServer/GatewayServer.h	/^	static zTCPTaskPool *taskPool;        \/**< TCP¡¨Ω”≥ÿµƒ÷∏’Î *\/$/;"	m	class:GatewayService
taskPool	RecordServer/RecordServer.h	/^    zTCPTaskPool *taskPool;        \/**< TCP¡¨Ω”≥ÿµƒ÷∏’Î *\/$/;"	m	class:RecordService
taskPool	Robot/ClientManager.h	/^	zTCPClientTaskPool *taskPool;$/;"	m	class:ClientManager
taskPool	ScenesServer/ScenesServer.h	/^    zTCPTaskPool *taskPool;        \/**< TCP¡¨Ω”≥ÿµƒ÷∏’Î *\/$/;"	m	class:ScenesService
taskPool	SessionServer/SessionServer.h	/^    zTCPTaskPool *taskPool;        \/**< TCPËøûÊé•Ê±†ÁöÑÊåáÈíà *\/$/;"	m	class:SessionService
taskPool	SuperServer/SuperServer.h	/^    zTCPTaskPool *taskPool;        \/**< TCP¡¨Ω”≥ÿµƒ÷∏’Î *\/$/;"	m	class:SuperService
taskPool	roleChangeServer/roleChangeServer.h	/^	zTCPTaskPool *taskPool;$/;"	m	class:roleChangeService
taskPool	roleRegServer/roleRegServer.h	/^	zTCPTaskPool *taskPool;$/;"	m	class:roleRegService
taskThreads	base/zTCPClientTaskPool.h	/^	zThreadGroup taskThreads;$/;"	m	class:zTCPClientTaskPool
taskType	base/zType.h	/^enum taskType$/;"	g
taskUniqueContainer	FLServer/ServerManager.h	/^	ServerTaskContainer taskUniqueContainer;$/;"	m	class:ServerManager
taskUniqueContainer	SuperServer/ServerManager.h	/^    ServerTaskHashmap taskUniqueContainer;$/;"	m	class:ServerManager
tasks	ScenesServer/scriptTickTask.h	/^	QWORD tasks[taskType::end];$/;"	m	class:userScriptTaskContainer
tasks	base/zTCPClientTaskPool.h	/^	zTCPClientTaskContainer tasks;  \/**< »ŒŒÒ¡–±Ì *\/$/;"	m	class:zTCPClientTaskPool
taunt	base/Card.h	/^    BYTE taunt;		    \/\/≥∞∑Ì$/;"	m	struct:t_CardPK
taunt	base/zDatabase.h	/^    BYTE taunt;		    \/\/≥∞∑Ì(1,0)$/;"	m	struct:zCardB
taunt	base/zDatabase.h	/^    DWORD taunt;		\/\/≥∞∑Ì(1,0)$/;"	m	struct:CardBase
tavlue	tmpcode/commond.h	/^	WORD tavlue;$/;"	m	struct:stActiveShenLongReward
tavlue	tmpcode/commond.h	/^	WORD tavlue;$/;"	m	struct:t_RewardInfo
taxHistory	tmpcode/commond.h	/^	TaxHistory taxHistory[0];$/;"	m	struct:stReturnTaxHistory
taxHistory	tmpcode/commond.h	/^	TrafficTaxHistory taxHistory[0];$/;"	m	struct:stReturnTrafficTaxHistory
taxRate	tmpcode/commond.h	/^		BYTE taxRate;$/;"	m	struct:stReturnCountryTax::CityInfo
taxRate	tmpcode/commond.h	/^	BYTE taxRate;$/;"	m	struct:TaxHistory
taxRate	tmpcode/commond.h	/^	BYTE taxRate;$/;"	m	struct:stRetCurrentCityTax
taxRate	tmpcode/commond.h	/^	BYTE taxRate;$/;"	m	struct:stReturnCityTax
taxRate	tmpcode/commond.h	/^	BYTE taxRate;\/\/À∞¬ $/;"	m	struct:stSetUnionCityTax
taxRate	tmpcode/commond.h	/^	WORD taxRate;$/;"	m	struct:TrafficTaxHistory
taxRate	tmpcode/commond.h	/^	WORD taxRate;$/;"	m	struct:stReqSetTrafficTax
taxRateMorn	tmpcode/commond.h	/^		BYTE taxRateMorn;                       \/\/\/ “—æ≠…Ë÷√ªπŒ¥…˙–ßµƒÀ∞¬ $/;"	m	struct:stReturnCountryTax::CityInfo
taxValue	tmpcode/commond.h	/^	DWORD taxValue;$/;"	m	struct:TaxHistory
taxValue	tmpcode/commond.h	/^	int taxValue;$/;"	m	struct:TrafficTaxHistory
tcpServer	base/zMNetService.h	/^	zMTCPServer *tcpServer;        \/**< TCP∑˛ŒÒ∆˜ µ¿˝÷∏’Î *\/$/;"	m	class:zMNetService
tcpServer	base/zNetService.h	/^	zTCPServer *tcpServer;        \/**< TCP∑˛ŒÒ∆˜ µ¿˝÷∏’Î *\/$/;"	m	class:zNetService
team1Name	tmpcode/commond.h	/^	char  team1Name[MAX_NAMESIZE]; $/;"	m	struct:stPersonResultChallengeUserCmd
team1Name	tmpcode/commond.h	/^	char  team1Name[MAX_NAMESIZE]; $/;"	m	struct:stSeptPracResultChallengeUserCmd
team1Num	tmpcode/commond.h	/^	WORD team1Num;$/;"	m	struct:stInfoChallengeUserCmd
team2Name	tmpcode/commond.h	/^	char  team2Name[MAX_NAMESIZE];$/;"	m	struct:stPersonResultChallengeUserCmd
team2Name	tmpcode/commond.h	/^	char  team2Name[MAX_NAMESIZE];$/;"	m	struct:stSeptPracResultChallengeUserCmd
team2Num	tmpcode/commond.h	/^	WORD team2Num;$/;"	m	struct:stInfoChallengeUserCmd
teamID	base/Command.h	/^    DWORD teamID;$/;"	m	struct:Cmd::t_MapPKGameData
teamNum	tmpcode/commond.h	/^	WORD teamNum;$/;"	m	struct:stRetSeptTeamChallengeUserCmd
teamNum1	tmpcode/commond.h	/^	WORD teamNum1,teamNum2;$/;"	m	struct:stScoreChallengeUserCmd
teamNum2	tmpcode/commond.h	/^	WORD teamNum1,teamNum2;$/;"	m	struct:stScoreChallengeUserCmd
teamRecruitInfo	tmpcode/commond.h	/^	teamRecruitInfo()$/;"	f	struct:teamRecruitInfo
teamRecruitInfo	tmpcode/commond.h	/^struct teamRecruitInfo$/;"	s
teamType	tmpcode/commond.h	/^	BYTE teamType;                          \/\/◊È∂”¿‡–Õ$/;"	m	struct:stReqTeamInfoListUserCmd
teamType	tmpcode/commond.h	/^	BYTE teamType;                          \/\/◊È∂”¿‡–Õ$/;"	m	struct:teamRecruitInfo
teamType	tmpcode/commond.h	/^	BYTE teamType;$/;"	m	struct:stRetSeptTeamChallengeUserCmd
teamType	tmpcode/commond.h	/^	BYTE teamType;$/;"	m	struct:stRetSeptTeamDeathChallengeUserCmd
teamType	tmpcode/commond.h	/^	BYTE teamType;\/\/∂”ŒÈ–Ú∫≈$/;"	m	struct:stInfoSeptTeamChallengeUserCmd
teamappend	ScenesServer/ScenePk.h	/^      SWORD teamappend; \/\/ÁªÑÈòüÊîªÂáªÂä†ÊàêÔºåÂèòÈáèÈáåÂ≠òÊîæÁöÑÊòØÁªÑÈòüÈòüÈïøÁöÑID$/;"	m	struct:SkillState::__anon155::__anon156
teamid	SessionServer/Session.h	/^    DWORD teamid;$/;"	m	class:UserSession
teamid	tmpcode/commond.h	/^	DWORD teamid;				\/\/∂”ŒÈID$/;"	m	struct:teamRecruitInfo
teamid	tmpcode/commond.h	/^	DWORD teamid;                           \/\/∂”ŒÈID $/;"	m	struct:stReqAddTeamUserCmd
techID	tmpcode/commond.h	/^	DWORD techID;    \/\/\/ œ÷”–ø∆ººID$/;"	m	struct:commodityList
techID	tmpcode/commond.h	/^	DWORD techID;   \/\/Ω®÷˛œ‡πÿµƒø∆ºº$/;"	m	struct:stRetUnionProStateCmd
techLevel	tmpcode/commond.h	/^	BYTE  techLevel;        \/\/µ±«∞ø∆ººµ»º∂$/;"	m	struct:stRetMagicForgeSolideInfo
techLevel	tmpcode/commond.h	/^	DWORD techLevel;                \/\/\/ ∂‘”¶ø∆ººµ»º∂$/;"	m	struct:resourceRefine
techLevel	tmpcode/commond.h	/^	DWORD techLevel; \/\/\/ œ÷”–ø∆ººµ»º∂$/;"	m	struct:commodityList
techLevel	tmpcode/commond.h	/^	DWORD techLevel;$/;"	m	struct:stRetVisitResidentTower
techLevel	tmpcode/commond.h	/^        BYTE  techLevel;     \/\/µ±«∞ø∆ººµ»º∂$/;"	m	struct:stRetMagicForgeInfo
techPer	tmpcode/commond.h	/^        DWORD techPer;       \/\/≥…π¶¬  $/;"	m	struct:stRetMagicForgeInfo
tele	base/Command.h	/^  char tele[64];\/\/Âú∞ÂùÄ„ÄÅÁîµËØù$/;"	m	struct:Cmd::stMsgGmTool
tele	base/GmToolCommand.h	/^      char tele[101];$/;"	m	struct:Cmd::GmTool::t_Msg_GmTool
tele	base/GmToolCommand.h	/^      char tele[101];\/\/Âú∞ÂùÄ„ÄÅÁîµËØù$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
tempArchive	SessionServer/TempArchive.h	/^    TempArchive_map tempArchive;$/;"	m	class:GlobalTempArchiveIndex
tempID	base/Command.h	/^  DWORD tempID;\/\/npcÁöÑ‰∏¥Êó∂ID$/;"	m	struct:Cmd::t_MapPetData
tempID	base/SessionCommand.h	/^      DWORD tempID;$/;"	m	struct:Cmd::Session::t_delMail_SceneSession
tempID	base/SessionCommand.h	/^      DWORD tempID;$/;"	m	struct:Cmd::Session::t_getMailItem_SceneSession
tempID	base/SessionCommand.h	/^      DWORD tempID;$/;"	m	struct:Cmd::Session::t_getMailList_SceneSession
tempID	base/SessionCommand.h	/^      DWORD tempID;$/;"	m	struct:Cmd::Session::t_openMail_SceneSession
tempID	tmpcode/commond.h	/^	DWORD   tempID;                 \/\/NPCµƒtempID$/;"	m	struct:stRetBuyGoodsListBusiness
tempID	tmpcode/commond.h	/^	DWORD   tempID;                 \/\/NPCµƒtempID$/;"	m	struct:stRetCollectListBusiness
tempID	tmpcode/commond.h	/^	DWORD   tempID;                 \/\/NPCµƒtempID$/;"	m	struct:stRetSaleGoodsListBusiness
tempID	tmpcode/commond.h	/^	DWORD   tempID;         \/\/NPCµƒtempID$/;"	m	struct:stBuyBusinessGoods
tempID	tmpcode/commond.h	/^	DWORD   tempID;         \/\/NPCµƒtempID$/;"	m	struct:stSaleBusinessGoods
tempID	tmpcode/commond.h	/^	DWORD  tempID; \/\/ÛÙªµƒtempid$/;"	m	struct:reqAdjustCityBonfireExpCmd
tempID	tmpcode/commond.h	/^	DWORD  tempID; \/\/ÛÙªµƒtempid$/;"	m	struct:reqCallAllToCityBonfireCmd
tempID	tmpcode/commond.h	/^	DWORD  tempID; \/\/ÛÙªµƒtempid$/;"	m	struct:reqJoinCityBonfireCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;	\/\/ÛÙªtempID$/;"	m	struct:stReqGouhuoUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;                   \/\/\/ ŒËƒÔtempid$/;"	m	struct:stSetDancerProfileUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;           \/\/\/ ŒËƒÔtempid$/;"	m	struct:stEmployNpcAdUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;           \/\/\/ ŒËƒÔtempid$/;"	m	struct:stReqEmployNpcAdUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;     \/\/≤Èø¥»Àµƒ¡Ÿ ±id$/;"	m	struct:stRequestNineScreenUnionMemberCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;     \/\/—˚«Î’ﬂ¡Ÿ ±id$/;"	m	struct:stInviteRetTankCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;   \/\/ ¡Ÿ ±id£¨ øÕ->∑˛ ±ª—˚«Î’ﬂ£ª ∑˛->øÕ —˚«Î’ﬂ$/;"	m	struct:stInviteTankCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;  \/\/ «Î«Û’ﬂ¡Ÿ ±id $/;"	m	struct:stRequestGetOnTank
tempID	tmpcode/commond.h	/^	DWORD tempID;  \/\/«Î«Û’ﬂ¡Ÿ ±id$/;"	m	struct:stReplyRequestGetOnTank
tempID	tmpcode/commond.h	/^	DWORD tempID; $/;"	m	struct:stDancerStateUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID; $/;"	m	struct:stStateDancerUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;$/;"	m	struct:stAdBroadcastUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;$/;"	m	struct:stBuyDancerUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;$/;"	m	struct:stInviteDanceUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;$/;"	m	struct:stLiuXingHuoYuMagicUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;$/;"	m	struct:stRetCityDareMpUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;$/;"	m	struct:stReturnFromServerUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;$/;"	m	struct:stSetDancerUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;$/;"	m	struct:stTakeTotleEaningUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;$/;"	m	struct:stTalkWithDancerUserCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;\/\/ÕÊº“¡Ÿ ±ID$/;"	m	struct:stLetOffTankCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;\/\/ÕÊº“¡Ÿ ±ID$/;"	m	struct:stNotifyGetOffTankCmd
tempID	tmpcode/commond.h	/^	DWORD tempID;\/\/ÕÊº“¡Ÿ ±ID$/;"	m	struct:stNotifyGetOnTankCmd
tempID	tmpcode/commond.h	/^	DWORD tempID[0];$/;"	m	struct:stAnswerNineScreenSeptMemberCmd
tempID	tmpcode/commond.h	/^	DWORD tempID[0];$/;"	m	struct:stAnswerNineScreenUnionMemberCmd
tempID	tmpcode/commond.h	/^        DWORD tempID;   \/\/»ÀŒÔID$/;"	m	struct:rtChunYunInfo
tempID	tmpcode/commond.h	/^        DWORD tempID;$/;"	m	struct:stUnBindUserToOther
tempID	tmpcode/commond.h	/^    DWORD tempID;					\/\/npcµƒ¡Ÿ ±ID$/;"	m	struct:t_MapPetData
tempID	tmpcode/commond.h	/^    DWORD tempID;\/\/npcTempID$/;"	m	struct:stMagicEffectUserCmd
tempID	tmpcode/commond.h	/^    DWORD tempID;\/\/npcTempID$/;"	m	struct:stNpcDoActionUserCmd
tempID	tmpcode/commond.h	/^    DWORD tempID;\/\/npcTempID$/;"	m	struct:stNpcEmoteUserCmd
tempIDs	tmpcode/commond.h	/^    DWORD tempIDs[0];$/;"	m	struct:stBindUserToOther
temp__	ScenesServer/SceneUser.cpp	/^const int temp__ = zSocket::MAX_USERDATASIZE; $/;"	v
temp_id	base/Command.h	/^  DWORD temp_id; \/\/Áî®Êà∑‰∏¥Êó∂ID$/;"	m	struct:Cmd::stRequestSellBuyUserCmd
temp_id	base/Command.h	/^  DWORD temp_id; \/\/Áî®Êà∑‰∏¥Êó∂ID$/;"	m	struct:Cmd::stRequestSellInfoUserCmd
temp_id	base/SessionCommand.h	/^      DWORD temp_id;$/;"	m	struct:Cmd::Session::t_changeScene_SceneSession
temp_id	tmpcode/commond.h	/^	DWORD temp_id; \/\/”√ªß¡Ÿ ±ID$/;"	m	struct:stPrivateStoreNameUserCmd
temp_id	tmpcode/commond.h	/^	DWORD temp_id; \/\/”√ªß¡Ÿ ±ID$/;"	m	struct:stRequestSellBuyUserCmd
temp_id	tmpcode/commond.h	/^	DWORD temp_id; \/\/”√ªß¡Ÿ ±ID$/;"	m	struct:stRequestSellInfoUserCmd
temp_unsafety_state	ScenesServer/SceneUser.h	/^    DWORD temp_unsafety_state;$/;"	m	struct:SceneUser
tempid	FLServer/LoginTask.h	/^	DWORD tempid;$/;"	m	class:LoginTask
tempid	SuperServer/FLClient.h	/^    const WORD tempid;$/;"	m	class:FLClient
tempid	SuperServer/InfoClient.h	/^    const DWORD tempid;$/;"	m	class:InfoClient
tempid	SuperServer/RolechangeClient.h	/^    const DWORD tempid;$/;"	m	class:RolechangeClient
tempid	base/Command.h	/^	DWORD tempid;$/;"	m	struct:Cmd::stClearObjectOwnerMapScreenUserCmd
tempid	base/Command.h	/^      DWORD tempid;$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd::__anon77
tempid	base/SessionCommand.h	/^      DWORD tempid;$/;"	m	struct:Cmd::Session::t_forwardUser_GateSession
tempid	base/SessionCommand.h	/^      DWORD tempid;$/;"	m	struct:Cmd::Session::t_forwardUser_SceneSession
tempid	base/zEntry.h	/^	DWORD tempid;$/;"	m	struct:zEntryC
tempid	tmpcode/commond.h	/^				DWORD tempid;$/;"	m	struct:stClientNewMap::__anon213
tempid	tmpcode/commond.h	/^	DWORD     tempid;\/\/ÃØ÷˜ID$/;"	m	struct:t_PrivateStoreData
tempid	tmpcode/commond.h	/^	DWORD tempid; $/;"	m	struct:stBuildResidentTower
tempid	tmpcode/commond.h	/^	DWORD tempid; $/;"	m	struct:stGiveBusinessStateCmd
tempid	tmpcode/commond.h	/^	DWORD tempid; $/;"	m	struct:stNpcLimitMagicUserCmd
tempid	tmpcode/commond.h	/^	DWORD tempid;$/;"	m	struct:stMarriageSpreadFlowerCmd
tempid	tmpcode/commond.h	/^	DWORD tempid;\/\/≥ËŒÔµƒ¡Ÿ ±ID $/;"	m	struct:stRequestPetChangeFaceMagicUserCmd
tempid	tmpcode/commond.h	/^        DWORD tempid;                           \/\/∞⁄ÃØ’ﬂtempid$/;"	m	struct:stFoundFashionSkillStore
tempid	tmpcode/commond.h	/^        DWORD tempid;               \/\/∞⁄ÃØ’ﬂtmepid$/;"	m	struct:stRetShowSkillStoreInfo
tempid	tmpcode/commond.h	/^        DWORD tempid;  \/\/∞⁄ÃØ’ﬂtempid$/;"	m	struct:stBeginFoundSkillStore
tempid	tmpcode/commond.h	/^        DWORD tempid;  \/\/ÃØ÷˜id         $/;"	m	struct:t_SkillStoreData
tempid	tmpcode/commond.h	/^        DWORD tempid; \/\/∞⁄ÃØ’ﬂtempid$/;"	m	struct:stFoundItemSkillStore
tempid	tmpcode/commond.h	/^    DWORD   tempid;             \/\/∞⁄ÃØ’ﬂtempid$/;"	m	struct:stFoundLeechdomSkillStore
tempidAllocator	SuperServer/FLClient.cpp	/^WORD FLClient::tempidAllocator = 0;$/;"	m	class:FLClient
tempidAllocator	SuperServer/FLClient.h	/^    static WORD tempidAllocator;$/;"	m	class:FLClient
tempidAllocator	SuperServer/InfoClient.cpp	/^DWORD InfoClient::tempidAllocator = 0;$/;"	m	class:InfoClient
tempidAllocator	SuperServer/InfoClient.h	/^    static DWORD tempidAllocator;$/;"	m	class:InfoClient
tempidAllocator	SuperServer/RolechangeClient.cpp	/^DWORD RolechangeClient::tempidAllocator = 0;$/;"	m	class:RolechangeClient
tempidAllocator	SuperServer/RolechangeClient.h	/^    static DWORD tempidAllocator;$/;"	m	class:RolechangeClient
terminate	base/zService.h	/^	bool terminate;            \/**< ∑˛ŒÒΩ· ¯±Íº« *\/$/;"	m	class:zService
terminate	base/zTCPClientTask.h	/^	TerminateMethod terminate;            \/**<  «∑ÒΩ· ¯»ŒŒÒ *\/$/;"	m	class:zTCPClientTask
terminate	base/zTCPTask.h	/^	TerminateMethod terminate;            \/**<  «∑ÒΩ· ¯»ŒŒÒ *\/$/;"	m	class:zTCPTask
terminate_active	base/zTCPTask.h	/^		terminate_active,            \/**< øÕªß∂À÷˜∂Ø∂œø™¡¨Ω”£¨÷˜“™ «”…”⁄∑˛ŒÒ∆˜∂ÀºÏ≤‚µΩÃ◊Ω”ø⁄πÿ±’ªÚ’ﬂÃ◊Ω”ø⁄“Ï≥£ *\/$/;"	e	enum:zTCPTask::TerminateMethod
terminate_no	base/zTCPTask.h	/^		terminate_no,              \/**< √ª”–Ω· ¯»ŒŒÒ *\/$/;"	e	enum:zTCPTask::TerminateMethod
terminate_passive	base/zTCPTask.h	/^		terminate_passive,            \/**< ∑˛ŒÒ∆˜∂À÷˜∂Ø∂œø™¡¨Ω” *\/$/;"	e	enum:zTCPTask::TerminateMethod
terminate_wait	base/zTCPTask.h	/^	bool terminate_wait;              \/**< ∆‰À¸œﬂ≥Ã…Ë÷√µ»¥˝∂œø™¡¨Ω”◊¥Ã¨,”…poolœﬂ≥Ã…Ë÷√∂œø™¡¨Ω”◊¥Ã¨ *\/$/;"	m	class:zTCPTask
test	base/MsgDelegate.h	/^	void test()$/;"	f	struct:MSG_CENTER::_TEMP
text	base/Command.h	/^  char text[256];$/;"	m	struct:Cmd::stContentMail
text	base/Command.h	/^  char text[256];$/;"	m	struct:Cmd::stSendMail
text	base/Command.h	/^  char text[MAX_CHATINFO];$/;"	m	struct:Cmd::stAutoReplyUserCmd
text	base/Command.h	/^  char text[MAX_CHATINFO];$/;"	m	struct:Cmd::stDetailGift
text	base/SessionCommand.h	/^      char text[128];$/;"	m	struct:Cmd::Session::t_cityRushCust_SceneSession
text	base/SessionCommand.h	/^      char text[256];$/;"	m	struct:Cmd::Session::mailInfo
text	tmpcode/commond.h	/^	BYTE text[0];$/;"	m	struct:stHistoryTalkLTQUserCmd
text	tmpcode/commond.h	/^	char text[80];$/;"	m	struct:stSetTextLTQUserCmd
text	tmpcode/commond.h	/^	char text[80];\/\/π´∏Ê$/;"	m	struct:stLTQDataLTQUserCmd
text	tmpcode/commond.h	/^	char text[MARRIAGE_PRESS_SIZE];$/;"	m	struct:stMarriagePresentBlessCmd
text	tmpcode/commond.h	/^	char text[MAX_NOTICEINFO];$/;"	m	struct:stAddMerchNoticePrice
text	tmpcode/commond.h	/^        char text[20];  \/\/Ω¯∂»ÃıŒƒ±æÀµ√˜$/;"	m	struct:stBeginDisplayCartoonUserCmd
text	tmpcode/commond.h	/^        char text[MAX_ADVERT_SIZE];$/;"	m	struct:stUnionShop
text	tmpcode/commond.h	/^        char text[MAX_CHATINFO];$/;"	m	struct:stDetailGift
text	tmpcode/commond.h	/^    char text[256];$/;"	m	struct:stContentMail
text	tmpcode/commond.h	/^    char text[256];$/;"	m	struct:stSendMail
textSize	tmpcode/commond.h	/^	BYTE textSize;  \/\/ ¡ƒÃÏƒ⁄»›µƒ¥Û–°$/;"	m	struct:stHistoryTalkLTQUserCmd
tgyt_updefp	ScenesServer/ScenePk.h	/^      SWORD tgyt_updefp; \/\/ÈìÅÈ™®Âæ°‰Ωì‰∏ìÁî®ÊäÄËÉΩÊèêÂçáÁä∂ÊÄÅ$/;"	m	struct:SkillState::__anon155::__anon156
tgzh_updef	ScenesServer/ScenePk.h	/^      SWORD tgzh_updef; \/\/ÈìÅÈ™®‰πãÈ≠Ç‰∏ìÁî®ÊäÄËÉΩÊèêÂçáÁä∂ÊÄÅ$/;"	m	struct:SkillState::__anon155::__anon156
theOtherTempID	tmpcode/commond.h	/^    DWORD   theOtherTempID; \/\/∫Û◊˘µƒ»À£®√ª”–‘ÚŒ™0£©$/;"	m	struct:stSetStateMapScreenUserCmd
theTime	tmpcode/commond.h	/^	DWORD theTime;		\/\/∏√π¶ƒ‹µƒ £”‡ π”√ ±º‰£¨◊¢“‚£∫µ•ŒªŒ™°∞∑÷÷”°±$/;"	m	struct:t_NotifyAutoSkillMoneyTime
the_script	ScenesServer/script.cpp	/^ScriptQuest& the_script()$/;"	f
theurgy_dmdam	ScenesServer/ScenePk.h	/^      SWORD theurgy_dmdam;    \/\/Ê≥ïÊúØÊîªÂáªÂáèÂ∞ëÂõ∫ÂÆöÊï∞ÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
theurgy_dmdef	ScenesServer/ScenePk.h	/^      SWORD theurgy_dmdef; \/\/‰ªôÊúØÈôç‰ΩéÁâ©ÁêÜÈò≤Âæ°Âäõ$/;"	m	struct:SkillState::__anon155::__anon156
theurgy_dpdam	ScenesServer/ScenePk.h	/^      SWORD theurgy_dpdam;    \/\/Áâ©ÁêÜÊîªÂáªÂáèÂ∞ëÂõ∫ÂÆöÊï∞ÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
theurgy_dpdef	ScenesServer/ScenePk.h	/^      SWORD theurgy_dpdef; \/\/‰ªôÊúØÈôç‰ΩéÁâ©ÁêÜÈò≤Âæ°Âäõ$/;"	m	struct:SkillState::__anon155::__anon156
theurgy_umdam	ScenesServer/ScenePk.h	/^      SWORD theurgy_umdam; \/\/‰ªôÊúØÂ¢ûÂä†Ê≥ïÊúØÊîªÂáªÂäõ$/;"	m	struct:SkillState::__anon155::__anon156
theurgy_umdamp	ScenesServer/ScenePk.h	/^      SWORD theurgy_umdamp; \/\/‰ªôÊúØÂ¢ûÂä†Ê≥ïÊúØÊîªÂáªÂäõÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
theurgy_umdef	ScenesServer/ScenePk.h	/^      SWORD theurgy_umdef; \/\/‰ªôÊúØÂ¢ûÂä†Ê≥ïÊúØÈò≤Âæ°Âäõ$/;"	m	struct:SkillState::__anon155::__anon156
theurgy_umdefp	ScenesServer/ScenePk.h	/^      SWORD theurgy_umdefp; \/\/‰ªôÊúØÂ¢ûÂä†Ê≥ïÊúØÈò≤Âæ°ÂäõÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
theurgy_updam	ScenesServer/ScenePk.h	/^      SWORD theurgy_updam; \/\/‰ªôÊúØÂ¢ûÂä†Áâ©ÁêÜÊîªÂáªÂäõ$/;"	m	struct:SkillState::__anon155::__anon156
theurgy_updamp	ScenesServer/ScenePk.h	/^      SWORD theurgy_updamp; \/\/‰ªôÊúØÂ¢ûÂä†Áâ©ÁêÜÊîªÂáªÂäõÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
theurgy_updef	ScenesServer/ScenePk.h	/^      SWORD theurgy_updef; \/\/‰ªôÊúØÂ¢ûÂä†Áâ©ÁêÜÈò≤Âæ°Âäõ$/;"	m	struct:SkillState::__anon155::__anon156
theurgy_updefp	ScenesServer/ScenePk.h	/^      SWORD theurgy_updefp;\/\/‰ªôÊúØÂ¢ûÂä†Áâ©ÁêÜÈò≤Âæ°ÂäõÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
thingType	tmpcode/commond.h	/^	BYTE thingType;           \/\/‘˘ÀÕª®ªÚº¶µ∞¿‡–Õ∫≈$/;"	m	struct:stWatcherExpressWeekendZhenxuanUserCmd
thingType	tmpcode/commond.h	/^	BYTE thingType;$/;"	m	struct:stShowEffectWhenFlowerEggCmd
third	tmpcode/commond.h	/^			BYTE third;       \/\/¥Œ Ù–‘$/;"	m	struct:LingQiData::__anon325::__anon326
third	tmpcode/commond.h	/^			BYTE third;   \/\/¥Œ Ù–‘$/;"	m	struct:LingQiSimulate::__anon366::__anon367
third	tmpcode/commond.h	/^            BYTE third;       \/\/¥Œ Ù–‘$/;"	m	struct:LingQiWatchData::__anon339::__anon340
thirdPercent	tmpcode/commond.h	/^			BYTE thirdPercent;	$/;"	m	struct:LingQiData::__anon323::__anon324
thirdPercent	tmpcode/commond.h	/^			BYTE thirdPercent;      $/;"	m	struct:LingQiMaxCoefData::__anon333::__anon334
thirdPercent	tmpcode/commond.h	/^			BYTE thirdPercent;      $/;"	m	struct:LingQiSimulate::__anon364::__anon365
thirdPercent	tmpcode/commond.h	/^            BYTE thirdPercent;      $/;"	m	struct:LingQiWatchData::__anon337::__anon338
thisID	tmpcode/commond.h	/^	DWORD	thisID;$/;"	m	struct:stMoveFurnitureHomeUserCmd
thisID	tmpcode/commond.h	/^	DWORD	thisID;$/;"	m	struct:stMoveFurnitureInStorageUserCmd
thisID	tmpcode/commond.h	/^	DWORD	thisID;$/;"	m	struct:stNotifyAddFurnitureHomeUserCmd
thisID	tmpcode/commond.h	/^	DWORD thisID;$/;"	m	struct:FurnitureMapData
thisID	tmpcode/commond.h	/^	DWORD thisID;$/;"	m	struct:stRemoveFurnitureHomeUserCmd
thisID	tmpcode/commond.h	/^        DWORD thisID;$/;"	m	struct:stClearElecGemUserCmd
thisWK_exploit	tmpcode/commond.h	/^		DWORD thisWK_exploit;\/\/±æ÷‹’Ωπ¶$/;"	m	struct:t_ReturnThisWeek::__anon244
thisWK_killnum	tmpcode/commond.h	/^		DWORD thisWK_killnum;   \/\/±æ÷‹ª˝∑÷$/;"	m	struct:t_ReturnThisWeek::__anon244
thisWeekScore	tmpcode/commond.h	/^	DWORD thisWeekScore;            \/\/\/ ±æ÷‹∑±»Ÿ∑÷ ˝$/;"	m	struct:stRetMasterPerformInfoCmd
this_type	base/xml/xml_config.h	/^		typedef xml_config<Config> this_type;$/;"	t	class:xml_config
thread	base/zThread.h	/^	pthread_t thread;        \/**< Á∫øÁ®ãÁºñÂè∑ *\/$/;"	m	class:zThread
threadName	base/zThread.h	/^	std::string threadName;      \/**< Á∫øÁ®ãÂêçÁß∞ *\/$/;"	m	class:zThread
tianbing	ScenesServer/ScenePk.h	/^      SWORD tianbing;    \/\/Â§©ÂÖµÂ¢ûÂº∫$/;"	m	struct:SkillState::__anon155::__anon156
tick	base/zTCPTask.h	/^	bool tick;$/;"	m	class:zTCPTask
ticket	base/CharBase.h	/^  DWORD ticket;         \/\/ÁÇπÂà∏Êï∞$/;"	m	struct:CharBase
ticket	base/Command.h	/^  DWORD ticket; \/\/ÁÇπÂà∏Êï∞$/;"	m	struct:Cmd::t_MainUserData
ticket	base/SessionCommand.h	/^      DWORD ticket;\/\/  Â∫îËØ•ÂæóÂà∞ÁöÑÁÇπÂà∏$/;"	m	struct:Cmd::Session::t_OvermanTicketAdd
ticket	tmpcode/commond.h	/^	DWORD ticket; \/\/µ„»Ø ˝$/;"	m	struct:t_MainUserData
tid	BillServer/BillCallback.h	/^  char          tid[Cmd::UserServer::SEQ_MAX_LENGTH +1];    \/\/‰∫§ÊòìÂ∫èÂàóÂè∑ $/;"	m	struct:BillData
tid	BillServer/BillSessionManager.h	/^  char   tid[Cmd::UserServer::SEQ_MAX_LENGTH+1];                     \/\/\/ ‰∫§ÊòìÊµÅÊ∞¥Âè∑$/;"	m	struct:BillSession
tid	BillServer/BillUser.h	/^    char   tid[Cmd::UserServer::SEQ_MAX_LENGTH+1];                     \/\/\/ ‰∫§ÊòìÊµÅÊ∞¥Âè∑$/;"	m	class:BillUser
tid	base/UserCommand.h	/^      char      tid[SEQ_MAX_LENGTH +1];      \/\/‰∫§ÊòìÂ∫èÂàóÂè∑$/;"	m	struct:Cmd::UserServer::t_cmd_fillin
tid	base/UserCommand.h	/^      char      tid[SEQ_MAX_LENGTH +1];      \/\/‰∫§ÊòìÂ∫èÂàóÂè∑$/;"	m	struct:Cmd::UserServer::t_cmd_mcard
tid	base/UserCommand.h	/^      char      tid[SEQ_MAX_LENGTH +1];    \/\/‰∫§ÊòìÂ∫èÂàóÂè∑$/;"	m	struct:Cmd::UserServer::t_cmd_consume
tid	base/UserCommand.h	/^      char      tid[SEQ_MAX_LENGTH +1];    \/\/‰∫§ÊòìÂ∫èÂàóÂè∑$/;"	m	struct:Cmd::UserServer::t_cmd_pcard
tid	base/UserCommand.h	/^      char      tid[SEQ_MAX_LENGTH +1];    \/\/‰∫§ÊòìÂ∫èÂàóÂè∑$/;"	m	struct:Cmd::UserServer::t_cmd_qbalance
tid	base/UserCommand.h	/^      char    tid[SEQ_MAX_LENGTH + 1];  \/\/‰∫§ÊòìÂ∫èÂàóÂè∑$/;"	m	struct:Cmd::UserServer::t_cmd_ret
tightness	tmpcode/commond.h	/^		DWORD tightness;$/;"	m	struct:stForceRelationDataUserCmd::stForceInfo
time	BillServer/StockConsign.h	/^  DWORD time;$/;"	m	struct:ConsignTrait
time	ScenesServer/ScenePk.h	/^    BYTE  time;$/;"	m	struct:ScenePkState::attProtect
time	ScenesServer/script_func.h	/^    unsigned long long time;$/;"	m	struct:RecentMsg
time	SessionServer/SessionServer.h	/^  DWORD time;$/;"	m	struct:worldMsg
time	base/Command.h	/^        WORD time;\/\/Êó∂Èó¥$/;"	m	struct:Cmd::stSelectReturnStatesPropertyUserCmd::__anon93::__anon94::__anon95
time	base/Command.h	/^  BYTE time;     \/\/ Ââ©‰ΩôÁöÑÂà∑Êñ∞Êó∂Èó¥ÔºåÂ¶ÇÊûú‰∏∫0Ë°®Á§∫Âà∑Âá∫$/;"	m	struct:Cmd::stRefreshBossUserCmd
time	base/Command.h	/^  DWORD time;      \/\/ÊåÇÊú∫Ââ©‰ΩôÊó∂Èó¥(Áßí)$/;"	m	struct:Cmd::stAddWaitingCartoonCmd
time	base/Command.h	/^  DWORD time;      \/\/ÊåÇÊú∫Ââ©‰ΩôÊó∂Èó¥(Áßí)$/;"	m	struct:Cmd::t_CartoonData
time	base/Command.h	/^  DWORD time;\/\/ÂÖÖÂ§öÈïøÊó∂Èó¥(Áßí)$/;"	m	struct:Cmd::stChargeCartoonCmd
time	base/GmToolCommand.h	/^      DWORD time;$/;"	m	struct:Cmd::GmTool::t_Broadcast_GmTool
time	base/GmToolCommand.h	/^      DWORD time;\/\/Êó∂Èó¥$/;"	m	struct:Cmd::GmTool::t_Log_GmTool
time	base/SessionCommand.h	/^      DWORD time;$/;"	m	struct:Cmd::Session::t_MsgTime_GmTool
time	base/SessionCommand.h	/^      DWORD time;\/\/ÁßíÊï∞$/;"	m	struct:Cmd::Session::t_chargeCartoon_SceneSession
time	base/SessionCommand.h	/^      DWORD time;\/\/ÁßíÊï∞$/;"	m	struct:Cmd::Session::t_chargeNotifyCartoon_SceneSession
time	base/SessionCommand.h	/^      time_t time;$/;"	m	struct:Cmd::Session::t_shutdown_SceneSession
time	base/zDatabase.h	/^	    DWORD time;$/;"	m	struct:SkillElement::__anon34::__anon35
time	base/zDatabase.h	/^	WORD time;$/;"	m	struct:zObjectB::leechdom_t
time	tmpcode/commond.h	/^				WORD time;\/\/ ±º‰$/;"	m	struct:stSelectReturnStatesPropertyUserCmd::__anon230::__anon231::__anon232
time	tmpcode/commond.h	/^	  DWORD time;   \/\/µπº∆ ±µƒ√Î ˝$/;"	m	struct:stNotifyDaoJiShiUserCmd
time	tmpcode/commond.h	/^	 BYTE type,atk,def,hp,time;$/;"	m	struct:TankBuffValue
time	tmpcode/commond.h	/^	BYTE time; \/\/1: ÷‹“ª 2: ÷‹∂˛ 3: ÷‹»˝ 4: ÷‹Àƒ 5: ÷‹ŒÂ 6: ÷‹¡˘ 7: ÷‹»’$/;"	m	struct:stResidentData
time	tmpcode/commond.h	/^	DWORD time;						\/\/œ˚œ¢ ±º‰$/;"	m	struct:StoreNotice
time	tmpcode/commond.h	/^	DWORD time;                     \/\/…œŒª ±º‰$/;"	m	struct:CountryPastKing
time	tmpcode/commond.h	/^	DWORD time;             \/\/…œŒª ±º‰$/;"	m	struct:CountryGreatEvent
time	tmpcode/commond.h	/^	DWORD time;             \/\/ ‹œÆ ±º‰$/;"	m	struct:attGuardNpcRecordofSept
time	tmpcode/commond.h	/^	DWORD time;             \/\/œ˚œ¢ ±º‰$/;"	m	struct:FarmNotice
time	tmpcode/commond.h	/^	DWORD time;     \/\/…˝º∂À˘–Ë“™µƒ ±º‰$/;"	m	struct:stRetUnionNeedBuildProCmd
time	tmpcode/commond.h	/^	DWORD time;  \/\/  ±¥¡, time()÷µ$/;"	m	struct:stHistoryTalkLTQUserCmd
time	tmpcode/commond.h	/^	DWORD time;$/;"	m	struct:stAskJoinChallengeUserCmd
time	tmpcode/commond.h	/^	DWORD time;$/;"	m	struct:stCountdownQuestMapUserCmd
time	tmpcode/commond.h	/^	DWORD time;$/;"	m	struct:stNpcDareTimeCmd
time	tmpcode/commond.h	/^	DWORD time;$/;"	m	struct:stRetUnionProStateCmd
time	tmpcode/commond.h	/^	DWORD time;\/\/µπº∆ ± ±º‰$/;"	m	struct:stShouLieTimerCmd
time	tmpcode/commond.h	/^	DWORD time;\/\/√Î ˝$/;"	m	struct:stCountdownReliveUserCmd
time	tmpcode/commond.h	/^	DWORD time;\/\/»’÷æ∑¢…˙µƒ ±º‰$/;"	m	struct:HouseLog
time	tmpcode/commond.h	/^	WORD time;\/\/ ±º‰$/;"	m	struct:stDanceTime
time	tmpcode/commond.h	/^	time_t time;$/;"	m	struct:UnionNoticeInfo
time	tmpcode/commond.h	/^         WORD    time;                   \/\/ ’˘∂·’Ωø™ º£®≤ª «’Ω∂∑ø™ º£ª’˘∂·’Ω∑÷◊º±∏ ±º‰°¢’Ω∂∑ ±º‰“‘º∞Ω· ¯ ±º‰£©µΩµ±«∞µƒ ±º‰        $/;"	m	struct:stShowScoreSeptBattleUserCmd
time	tmpcode/commond.h	/^        DWORD   time;   \/\/µπº∆ ±µƒ√Î ˝$/;"	m	struct:stTimeCountUserCmd
time	tmpcode/commond.h	/^        DWORD time;  \/\/»Œ√¸ ±º‰$/;"	m	struct:OfficialItem
time	tmpcode/commond.h	/^        char time[16];           \/\/ªÓ∂Ø ±º‰$/;"	m	struct:stActivityDataUserCmd::act
time	tmpcode/commond.h	/^    DWORD   time;   \/\/µπº∆ ±µƒ√Î ˝$/;"	m	struct:stNotifyCountDownUserCmd
time	tmpcode/commond.h	/^    DWORD time;$/;"	m	struct:EquipSortObjItem
time	tmpcode/commond.h	/^    DWORD time;$/;"	m	struct:stJieZhanJiShiInfo
time	tmpcode/commond.h	/^    DWORD time;$/;"	m	struct:stRefreshTuanCaiJiCmd
time	tmpcode/commond.h	/^    WORD  time;     \/\/À——∞ ±º‰≥§∂»$/;"	m	struct:rtSearchGuardGoodsSeptCmd
timeAction	BillServer/BillClientManager.cpp	/^void BillClientManager::timeAction(const zTime &ct)$/;"	f	class:BillClientManager
timeAction	GatewayServer/SceneClientManager.cpp	/^void SceneClientManager::timeAction(const zTime &ct)$/;"	f	class:SceneClientManager
timeAction	Robot/Client.cpp	/^bool Client::timeAction()$/;"	f	class:Client
timeAction	Robot/ClientManager.cpp	/^void ClientManager::timeAction()$/;"	f	class:ClientManager
timeAction	SuperServer/BroadClientManager.cpp	/^void BroadClientManager::timeAction(const zTime &ct)$/;"	f	class:BroadClientManager
timeAction	SuperServer/FLClientManager.cpp	/^void FLClientManager::timeAction(const zTime &ct)$/;"	f	class:FLClientManager
timeAction	SuperServer/InfoClientManager.cpp	/^void InfoClientManager::timeAction(const zTime &ct)$/;"	f	class:InfoClientManager
timeAction	SuperServer/RolechangeClientManager.cpp	/^void RolechangeClientManager::timeAction(const zTime &ct)$/;"	f	class:RolechangeClientManager
timeAction	SuperServer/RoleregCache.cpp	/^void RoleregCache::timeAction(const zTime &ct)$/;"	f	class:RoleregCache
timeAction	SuperServer/RoleregClientManager.cpp	/^void RoleregClientManager::timeAction(const zTime &ct)$/;"	f	class:RoleregClientManager
timeLeft	tmpcode/commond.h	/^	 DWORD timeLeft;$/;"	m	struct:stStopServerTimeUserCmd
timeOfFireplaceUserCmd	tmpcode/commond.h	/^	timeOfFireplaceUserCmd()$/;"	f	struct:timeOfFireplaceUserCmd
timeOfFireplaceUserCmd	tmpcode/commond.h	/^struct timeOfFireplaceUserCmd: public stHouseUserCmd$/;"	s
timeSign	tmpcode/commond.h	/^	DWORD timeSign;$/;"	m	struct:stDragonChatInChallengeDragonUserCmd
timeeffect	base/Object.h	/^	BYTE timeeffect; \/\/ ±–ß◊¥Ã¨, 0 -- ∆’Õ®ŒÔ∆∑, √ª”– ±–ß–‘÷ ; 1 -- ”– ±–ß–‘÷ , ªπ√ªπ˝∆⁄; 2 -- ”– ±–ß–‘÷ , “—π˝∆⁄$/;"	m	struct:t_Object
timeeffect	base/zDatabase.h	/^    BYTE timeeffect;$/;"	m	struct:zObjectB
timeeffect	tmpcode/commond.h	/^        BYTE   timeeffect;   \/\/ ±–ßµƒ»°÷µ  $/;"	m	struct:stSetTimeUserCmd
timeout	BillServer/BillCallback.h	/^  time_t        timeout;                                    \/\/Ë∂ÖÊó∂Êó∂Èó¥Êà≥$/;"	m	struct:BillData
timeout	FLServer/LoginTask.h	/^	bool timeout(const zTime &ct)$/;"	f	class:LoginTask
timer	ScenesServer/ChallengeGame.cpp	/^void ChallengeGame::timer()$/;"	f	class:ChallengeGame
timer	ScenesServer/ChallengeGameManager.cpp	/^void ChallengeGameManager::timer()$/;"	f	class:ChallengeGameManager
timer	ScenesServer/SkillStatusManager.cpp	/^void SkillStatusManager::timer()$/;"	f	class:SkillStatusManager
timer	SessionServer/HeroCardManager.cpp	/^void HeroCardManager::timer()$/;"	f	class:HeroCardManager
times	base/SessionCommand.h	/^      DWORD times;$/;"	m	struct:Cmd::Session::t_Return_CallTimes_SceneSession
times	tmpcode/commond.h	/^	BYTE times;                         $/;"	m	struct:stHasExpressTimesWeekendZhenxuanUserCmd
times	tmpcode/commond.h	/^        } times[8];             \/\/‘›∂®Œ™◊Ó∂‡8∏ˆ ±∂Œ£¨»Ù ±º‰Œ™00:00-23:59‘Ú±Ì æŒ™»´ÃÏ$/;"	m	struct:stRetDailyWarningQuestUserCmd::quests	typeref:struct:stRetDailyWarningQuestUserCmd::quests::stTime
timestamp	BillServer/BillManager.h	/^  zTime timestamp;    \/**< Êó∂Èó¥Êà≥ *\/$/;"	m	struct:BillInfo
timestamp	BillServer/BillUser.h	/^    zTime timestamp;    \/**< Êó∂Èó¥Êà≥ *\/$/;"	m	class:BillUser
timestamp	GatewayServer/LoginSessionManager.h	/^		zTime timestamp;$/;"	m	struct:LoginSessionManager::LoginSession
tipInfoFireplaceUserCmd	tmpcode/commond.h	/^	tipInfoFireplaceUserCmd()$/;"	f	struct:tipInfoFireplaceUserCmd
tipInfoFireplaceUserCmd	tmpcode/commond.h	/^struct tipInfoFireplaceUserCmd: public stHouseUserCmd$/;"	s
tips	base/zDatabase.h	/^    char tips[32];$/;"	m	struct:zNpcB
tiredCard	base/xmlparser/battle.h	/^        xml_prop<DWORD>	tiredCard;$/;"	m	struct:BattleConfig::Limit
tiredType	base/zDatabase.h	/^    DWORD tiredType;$/;"	m	struct:zNpcB
tiretime	base/CharBase.h	/^  char tiretime[36+1];      \/\/\/ Áñ≤Âä≥Êó∂Èó¥Ê†áËÆ∞$/;"	m	struct:CharBase
title	ScenesServer/Quest.h	/^  const std::string& title() const$/;"	f	class:Quest
title	base/Command.h	/^  DWORD title;$/;"	m	struct:Cmd::t_UserData
title	base/Command.h	/^  char title[MAX_NAMESIZE];$/;"	m	struct:Cmd::stAddListMail
title	base/Command.h	/^  char title[MAX_NAMESIZE];$/;"	m	struct:Cmd::stContentMail
title	base/Command.h	/^  char title[MAX_NAMESIZE];$/;"	m	struct:Cmd::stSendMail
title	base/SessionCommand.h	/^      char title[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::mailInfo
title	base/SessionCommand.h	/^      char title[MAX_NAMESIZE]; \/\/ ÊâÄÂ±ûÂüéÂ∏ÇÂêçÁß∞$/;"	m	struct:Cmd::Session::t_sendUserArmyInfo_SceneSession
title	tmpcode/commond.h	/^			char title[64];   \/\/»ŒŒÒ√˚≥∆$/;"	m	struct:stRetAllIssuedQuestUserCmd::quest
title	tmpcode/commond.h	/^	DWORD	title;$/;"	m	struct:st_CharShow2
title	tmpcode/commond.h	/^	DWORD title;$/;"	m	struct:t_UserData
title	tmpcode/commond.h	/^	char title[MAX_NAMESIZE];               \/\/ø⁄∫≈$/;"	m	struct:teamRecruitInfo
title	tmpcode/commond.h	/^	char title[MAX_NAMESIZE];\/\/∑¢–≈÷˜Ã‚ KOK20080825$/;"	m	struct:stAddListMail
title	tmpcode/commond.h	/^        char title[24];          \/\/ªÓ∂Øµƒ±ÍÃ‚$/;"	m	struct:stActivityDataUserCmd::act
title	tmpcode/commond.h	/^        char title[64];   \/\/»ŒŒÒ√˚≥∆$/;"	m	struct:stRetConsignIssuedQuestUserCmd
title	tmpcode/commond.h	/^        char title[64];   \/\/»ŒŒÒ√˚≥∆$/;"	m	struct:stRetInfoIssuedQuestUserCmd
title	tmpcode/commond.h	/^        char title[64];$/;"	m	struct:stNotifyFinishedIssueQuestUserCmd
title	tmpcode/commond.h	/^        char title[MAX_NAMESIZE]; \/\/ªÓ∂Øµƒ±ÍÃ‚$/;"	m	struct:stCallBoardDataUserCmd
title	tmpcode/commond.h	/^    char title[MAX_NAMESIZE];$/;"	m	struct:stContentMail
title	tmpcode/commond.h	/^    char title[MAX_NAMESIZE];$/;"	m	struct:stSendMail
titleID	tmpcode/commond.h	/^	DWORD titleID;  \/\/\/ ID$/;"	m	struct:stReqChangeBackTitleCmd
titleID	tmpcode/commond.h	/^	DWORD titleID;$/;"	m	struct:stChangeTitleCmd
titleID	tmpcode/commond.h	/^	DWORD titleID;$/;"	m	struct:stReqTitleInfoCmd
titleQuest	tmpcode/commond.h	/^	TitleQuest titleQuest[0];$/;"	m	struct:stRetCourseOfKingCmd
titleType	base/Command.h	/^  WORD titleType;$/;"	m	struct:Cmd::t_UserData
titleType	tmpcode/commond.h	/^	WORD	titleType;\/\/≥∆∫≈¿‡–Õ(–¬º” ∏ˆ»À≥…æÕ∞Ò)$/;"	m	struct:st_CharShow2
titleType	tmpcode/commond.h	/^	WORD titleType;\/\/≥∆∫≈¿‡–Õ(–¬º” ∏ˆ»À≥…æÕ∞Ò)$/;"	m	struct:t_UserData
titles	base/Command.h	/^  actTitle titles[0];$/;"	m	struct:Cmd::stListGift
titles	tmpcode/commond.h	/^        actTitle titles[0];$/;"	m	struct:stListGift
tlogger	BillServer/BillClientManager.cpp	/^zLogger *BillClientManager::tlogger = NULL;$/;"	m	class:BillClientManager
tlogger	BillServer/BillClientManager.h	/^    static zLogger *tlogger;$/;"	m	class:BillClientManager
tmp	ScenesServer/Quest.h	/^    bool tmp() const$/;"	f	class:Vars::VAR
tmpSign	tmpcode/commond.h	/^	BYTE tmpSign;\/\/0£¨µØ≥ˆµ⁄“ª∏ˆ∂‘ª∞øÚ£¨1£¨µØ≥ˆµ⁄∂˛∏ˆ∂‘ª∞øÚ$/;"	m	struct:stCanSetUnionCityTax
tmxiaoguo	tmpcode/commond.h	/^	int     tmxiaoguo;$/;"	m	struct:_powerList
to	tmpcode/commond.h	/^    BYTE    to;$/;"	m	struct:stReqAccelkKeyPropertyUserCmd
toCountryID	base/Command.h	/^  DWORD toCountryID;$/;"	m	struct:Cmd::stActiveUnionCityDare
toCountryID	tmpcode/commond.h	/^	DWORD toCountryID;                      \/\/’–ƒº∑¢ÀÕƒø±ÍΩÁ”ÚID$/;"	m	struct:stSendCountryInviteQuestRoomUserCmd
toCountryID	tmpcode/commond.h	/^	DWORD toCountryID;$/;"	m	struct:stActiveUnionCityDare
toDie	ScenesServer/CardPk.cpp	/^bool zCard::toDie()$/;"	f	class:zCard
toDie	ScenesServer/SceneNpc.cpp	/^void SceneNpc::toDie(const DWORD &dwTempID)$/;"	f	class:SceneNpc
toDie	ScenesServer/SceneUser.cpp	/^void SceneUser::toDie(const DWORD &dwTempID)$/;"	f	class:SceneUser
toFeed	tmpcode/commond.h	/^	bool toFeed; \/\/ «∑ÒŒπ—¯ $/;"	m	struct:stFeedEquipLingQiUserCmd
toGameZone	base/RolechangeCommand.h	/^	GameZone_t toGameZone;$/;"	m	struct:Cmd::Rolechange::t_Check_Valid
toGameZone	base/RolechangeCommand.h	/^	GameZone_t toGameZone;$/;"	m	struct:Cmd::Rolechange::t_ForwardMsg_CommonCmd
toGameZone	base/RolechangeCommand.h	/^	GameZone_t toGameZone;$/;"	m	struct:Cmd::Rolechange::t_Ret_Check_Valid
toGameZone	base/RolechangeCommand.h	/^	GameZone_t toGameZone;$/;"	m	struct:Cmd::Rolechange::t_retSendUserToZone
toGameZone	base/RolechangeCommand.h	/^	GameZone_t toGameZone;$/;"	m	struct:Cmd::Rolechange::t_sendUserToZone
toGameZone	base/SessionCommand.h	/^	GameZone_t toGameZone;$/;"	m	struct:Cmd::Session::t_notifyEnterZone_SceneSession
toGameZone	base/SuperCommand.h	/^	GameZone_t toGameZone;$/;"	m	struct:Cmd::Super::t_ForwardMsg_Scene
toID	base/RecordCommand.h	/^      DWORD toID;$/;"	m	struct:Cmd::Record::t_userExist_SceneRecord
toID	base/RolechangeCommand.h	/^	DWORD toID;$/;"	m	struct:Cmd::Rolechange::t_OverZoneRet_ChatCmd
toID	base/RolechangeCommand.h	/^	DWORD toID;$/;"	m	struct:Cmd::Rolechange::t_OverZone_ChatCmd
toID	base/SessionCommand.h	/^      DWORD toID;$/;"	m	struct:Cmd::Session::mailInfo
toName	base/Command.h	/^  char toName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stSendMail
toName	base/RolechangeCommand.h	/^	char toName[MAX_NAMESIZE];$/;"	m	struct:Cmd::Rolechange::t_OverZoneRet_ChatCmd
toName	base/SessionCommand.h	/^      char toName[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::mailInfo
toName	tmpcode/commond.h	/^    char toName[MAX_NAMESIZE];$/;"	m	struct:rqSendAccelChat
toName	tmpcode/commond.h	/^    char toName[MAX_NAMESIZE];$/;"	m	struct:stSendMail
toRelationName	base/Command.h	/^    char toRelationName[MAX_NAMESIZE];  \/\/Ë¢´ÊåëÊàòËÄÖÂ∏Æ‰ºöÊàñÂ∏àÈó®ÊàñÂÆ∂ÊóèÂêçÁß∞$/;"	m	struct:Cmd::stActiveDareCmd
toState	tmpcode/commond.h	/^		BYTE toState;$/;"	m	struct:stChangeUnionResourceType::ResAssign
toUserID	base/SessionCommand.h	/^      DWORD toUserID; \/\/ ËΩ¨ÁßªÂà∞ÊüêÁé©ÂÆ∂$/;"	m	struct:Cmd::Session::t_ChangeGemState_SceneSession
toUserTempID	tmpcode/commond.h	/^	DWORD toUserTempID;     \/\/  ’ª®»ÀµƒID$/;"	m	struct:st_SendFlowerNoExpDataUserCmd
toUserTempID	tmpcode/commond.h	/^	DWORD toUserTempID;$/;"	m	struct:stSendFriendFlowerCmd
to_game_zone	base/RecordCommand.h	/^      DWORD to_game_zone;$/;"	m	struct:Cmd::Record::t_WriteUser_SceneRecord
to_love	tmpcode/commond.h	/^	char to_love[110]; \/\/ ∞Æ«È–˚—‘$/;"	m	struct:stPersonalSign
to_lower	base/zString.h	/^inline void to_lower(std::string &s)$/;"	f	namespace:Zebra
to_name	base/SessionCommand.h	/^      char to_name[MAX_NAMESIZE+1];    \/\/ Áâ©ÂìÅÊü•ËØ¢ËÄÖÂßìÂêç$/;"	m	struct:Cmd::Session::t_questionObject_SceneSession
to_name	base/SessionCommand.h	/^      char to_name[MAX_NAMESIZE+1];   \/\/ Áâ©ÂìÅÊü•ËØ¢ËÄÖÂßìÂêç$/;"	m	struct:Cmd::Session::t_returnObject_SceneSession
to_other	tmpcode/commond.h	/^	char to_other[110]; \/\/ Œ“∂‘ƒ„Àµ$/;"	m	struct:stPersonalSign
to_upper	base/zString.h	/^inline void to_upper(std::string &s)$/;"	f	namespace:Zebra
tobject_array	base/Command.h	/^    stTradeObject tobject_array[0];$/;"	m	struct:Cmd::stKokChatUserCmd
tobject_array	base/Command.h	/^  stTradeObject tobject_array[0]; \/\/ ‰∫§ÊòìÁâ©ÂìÅÂàóË°®$/;"	m	struct:Cmd::stChannelChatUserCmd
tobject_array	base/GmToolCommand.h	/^      stTradeObject tobject_array[0]; \/\/ ‰∫§ÊòìÁâ©ÂìÅÂàóË°®$/;"	m	struct:Cmd::GmTool::t_Chat_GmTool
tobject_array	tmpcode/commond.h	/^	stTradeObject tobject_array[0];  \/\/ ŒÔ∆∑¡–±Ì$/;"	m	struct:stTalkLTQUserCmd
today	base/Command.h	/^	bool	today;					\/\/ «∑Ò «ΩÒ»’∞Ò ˝æ›,trueŒ™ΩÒ»’,falseŒ™◊Ú»’$/;"	m	struct:Cmd::ListData
today	tmpcode/commond.h	/^	bool	today;					\/\/ «∑Ò «ΩÒ»’∞Ò ˝æ›,trueŒ™ΩÒ»’,falseŒ™◊Ú»’$/;"	m	struct:ListData
todayGamePoint	tmpcode/commond.h	/^	WORD todayGamePoint;   \/\/ΩÒ»’’˘∞‘µ„ ˝$/;"	m	struct:stRefreshUserInfoWeekendZhenxuanUserCmd
todayMaterial	tmpcode/commond.h	/^	DWORD todayMaterial;            \/\/ ΩÒÃÏ‘ˆº”µƒŒÔ◊ $/;"	m	struct:stSeptBaseInfoCmd
today_tax	tmpcode/commond.h	/^		int today_tax;$/;"	m	struct:stReturnCountryTax::CityInfo
todaysHeroAward	tmpcode/commond.h	/^	HeroAward todaysHeroAward;$/;"	m	struct:stRetRanksChatCmd
tong_obj_time	ScenesServer/zObject.h	/^    DWORD tong_obj_time;$/;"	m	class:EquipPack
tong_obj_times	ScenesServer/zObject.h	/^    DWORD tong_obj_times;$/;"	m	class:EquipPack
topLevel	tmpcode/commond.h	/^	WORD topLevel;$/;"	m	struct:stNotifyWenMingInfoUserCmd
topet	ScenesServer/ScenePk.h	/^      SWORD topet;    \/\/Âèò‰∏∫ÈöèÊú∫Â∞èÂä®Áâ©79$/;"	m	struct:SkillState::__anon155::__anon156
tosh	ScenesServer/SceneEntryPk.h	/^    bool tosh;        \/\/\/ ËÉ°Ë®Ä‰π±ËØ≠$/;"	m	struct:SceneEntryPk
totalChance	tmpcode/commond.h	/^    WORD totalChance;\/\/◊‹ª˙ª· ˝¡ø$/;"	m	struct:rtMobEscapeCountUserCmd
totalFishMeat	tmpcode/commond.h	/^	DWORD totalFishMeat;    \/\/\/ ”„»‚◊‹¡ø$/;"	m	struct:stCationInfoFishUserCmd
totalMaterial	tmpcode/commond.h	/^	DWORD totalMaterial;            \/\/ º“◊ÂŒÔ◊ $/;"	m	struct:stSeptBaseInfoCmd
totalNum	tmpcode/commond.h	/^		BYTE  totalNum;                 \/\/“ªÃÏø…÷¥––¥Œ ˝$/;"	m	struct:stRetDailyRandomQuestUserCmd::quests
totalNum	tmpcode/commond.h	/^        WORD totalNum;          \/\/ø…“‘ÕÍ≥…µƒ◊‹ ˝$/;"	m	struct:stRetDailyWarningQuestUserCmd::quests
totalRenqi	tmpcode/commond.h	/^	DWORD totalRenqi;       \/\/µ±«∞◊‹π≤µƒ»À∆¯÷µ$/;"	m	struct:HouseRoomData
totalRoundCount	ScenesServer/ChallengeGame.h	/^	DWORD totalRoundCount;		    \/\/◊‹ªÿ∫œ ˝º∆ ˝ $/;"	m	class:ChallengeGame
totalScore	tmpcode/commond.h	/^	DWORD totalScore;\/\/◊‹µ√∑÷$/;"	m	struct:stPictureEffectMapUserCmd
totalWeekNum	tmpcode/commond.h	/^		BYTE  totalWeekNum;             \/\/“ª÷‹ø…÷¥––¥Œ ˝$/;"	m	struct:stRetDailyRandomQuestUserCmd::quests
totalmoney	tmpcode/commond.h	/^	DWORD totalmoney;\/\/∂‡…Ÿ«Æ$/;"	m	struct:stReturnMergeServerTeamUserCmd
totelScore	tmpcode/commond.h	/^	DWORD totelScore;$/;"	m	struct:stSendUserScoreSeptPopoUserCmd
totleEarning	tmpcode/commond.h	/^	DWORD totleEarning;$/;"	m	struct:stDancerStateUserCmd
totleMoney	tmpcode/commond.h	/^	DWORD totleMoney;               \/\/\/ ∑÷∫Ï$/;"	m	struct:stSetDancerProfileUserCmd
toubu	tmpcode/commond.h	/^        DWORD toubu;    \/\/Õ∑≤ø$/;"	m	struct:CardMainData
toukui	tmpcode/commond.h	/^        DWORD toukui;   \/\/Õ∑ø¯$/;"	m	struct:CardMainData
towerID	tmpcode/commond.h	/^	DWORD towerID;$/;"	m	struct:stBuildResidentTower
towerID	tmpcode/commond.h	/^    DWORD towerID;$/;"	m	struct:stGetOffTowerTankCmd
towerID	tmpcode/commond.h	/^    DWORD towerID;$/;"	m	struct:stGetOnTowerTankCmd
trade	BillServer/StockConsign.cpp	/^bool ConsignGoldManager::trade()$/;"	f	class:ConsignGoldManager
trade	BillServer/StockConsign.cpp	/^bool ConsignGoldManager::trade(ConsignTrait &moneylist,DWORD &sysmoney)$/;"	f	class:ConsignGoldManager
trade	BillServer/StockConsign.cpp	/^bool ConsignMoneyManager::trade()$/;"	f	class:ConsignMoneyManager
trade	BillServer/StockConsign.cpp	/^bool ConsignMoneyManager::trade(ConsignTrait &goldlist,DWORD &sysmoney)$/;"	f	class:ConsignMoneyManager
trade_type	tmpcode/commond.h	/^        BYTE trade_type;      \/\/Ωª“◊¿‡–Õ,ƒ¨»œŒ™0,”√1±Ì æÀÊ…Ì…Ã≥«$/;"	m	struct:stBuyObjectNpcTradeUserCmd
tradelog	BillServer/BillServer.cpp	/^zLogger* BillService::tradelog = NULL;$/;"	m	class:BillService
tradelog	BillServer/BillServer.h	/^                static zLogger* tradelog;    $/;"	m	class:BillService
trafficID	tmpcode/commond.h	/^	DWORD trafficID;$/;"	m	struct:stReqTransportUserCmd
trafficMoney	tmpcode/commond.h	/^		int trafficMoney;       \/\/≥µ∑ÚÀ∞ ’÷ß$/;"	m	struct:stReturnCountryTax::CityInfo
trafficTax	tmpcode/commond.h	/^		DWORD trafficTax;       \/\/≥µ∑ÚÀ∞$/;"	m	struct:stReturnCountryTax::CityInfo
trafficTax	tmpcode/commond.h	/^	WORD trafficTax;$/;"	m	struct:stRetTrafficInfoUserCmd
trafficTaxSet	tmpcode/commond.h	/^		WORD trafficTaxSet;                     \/\/  …Ë÷√µƒ≥µ∑ÚÀ∞¬ ,µ´ªπŒ¥…˙–ß$/;"	m	struct:stReturnCountryTax::CityInfo
traffic_notice	tmpcode/commond.h	/^enum traffic_notice$/;"	g
trainTime	base/CharBase.h	/^  DWORD trainTime;      \/\/\/ Âú®ÁªÉÁ∫ßÂú∞ÂõæÈÄóÁïôÁöÑÊó∂Èó¥$/;"	m	struct:CharBase
trait	base/zDatabase.h	/^    DWORD  trait;        \/\/∆∑÷ $/;"	m	struct:zNpcB
transmit	tmpcode/commond.h	/^		DWORD transmit[0];\/\/¥´ÀÕ’Ûπ¶ƒ‹∏Ωº”Ω·ππ$/;"	m	union:rt_ObjVisitHouseUserCmd::__anon357
trapappend	ScenesServer/ScenePk.h	/^      SWORD trapappend;  \/\/ Èô∑Èò±Á≥ªÊ≥ïÊúØ‰º§ÂÆ≥ÊèêÂçáÊØî‰æãÂçÉÂàÜ‰πãÂá†$/;"	m	struct:SkillState::__anon155::__anon156
trapflag	ScenesServer/SceneEntryPk.h	/^    bool trapflag;  \/\/\/Èô∑Èò±Á≥ªÊ≥ïÊúØÂä†ÊàêÊ†áÂøó$/;"	m	struct:SceneEntryPk
travel_time	base/Command.h	/^  DWORD travel_time;$/;"	m	struct:Cmd::t_MainUserData
travel_time	tmpcode/commond.h	/^	DWORD travel_time; \/\/ Ω¯»Î¬√”Œ«¯µƒ ±º‰$/;"	m	struct:t_MainUserData
trend	base/Command.h	/^  BYTE trend;$/;"	m	struct:Cmd::stRelation
trend	tmpcode/commond.h	/^	BYTE  trend;  \/\/ ◊Ó–¬∫√”—∂ØÃ¨, TrendEventTypeEnum¿‡–Õ$/;"	m	struct:stRelation
trim	ScenesServer/zCard.cpp	/^bool CardSlot::trim(SceneUser *pUser, WORD startIndex)$/;"	f	class:CardSlot
trunkCount	base/zSocket.h	217;"	d
trunkSize	base/zSocket.h	/^const DWORD trunkSize = 64 * 1024;$/;"	v
tsfdam	ScenesServer/ScenePk.h	/^      SWORD tsfdam;    \/\/‰º§ÂÆ≥ËΩ¨ÁßªÊï∞ÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
tsfdamp	ScenesServer/ScenePk.h	/^      SWORD tsfdamp;    \/\/‰º§ÂÆ≥ËΩ¨ÁßªÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
tuDi	tmpcode/commond.h	/^        ShiTuInfo tuDi[0];\/\/ÕΩµ‹–≈œ¢$/;"	m	struct:rtTableListMapScreenUserCmd
tuDiCount	tmpcode/commond.h	/^        DWORD tuDiCount;$/;"	m	struct:rtTableListMapScreenUserCmd
tujianData	ScenesServer/SceneUser.h	/^    CardTujianData tujianData;$/;"	m	struct:SceneUser
tuling	ScenesServer/ScenePk.h	/^      SWORD tuling;      \/\/ÂúüÁÅµÂ¢ûÂº∫$/;"	m	struct:SkillState::__anon155::__anon156
tv	base/zTime.h	/^	struct tm tv;$/;"	m	class:zTime	typeref:struct:zTime::tm
type	GatewayServer/CountryInfo.h	/^		int   type;   \/\/ [ranqd Add] ∑˛ŒÒ∆˜¿‡–Õ£¨≤Œøºenum SERVER_TYPE$/;"	m	struct:CountryInfo::Info
type	GatewayServer/CountryInfo.h	/^		int  type;  \/\/[ranqd Add] π˙º“¿‡–Õ$/;"	m	struct:CountryInfo::CountryDic
type	Robot/LoadMap.h	/^  BYTE  type;  \/\/ Ê†ºÂ≠êÁ±ªÂûã$/;"	m	struct:stSrvMapTile
type	ScenesServer/LoadMap.h	/^  BYTE  type;  \/\/ Ê†ºÂ≠êÁ±ªÂûã$/;"	m	struct:stSrvMapTile
type	ScenesServer/SceneDefine.h	/^  DWORD type;                \/\/Áü©ÂΩ¢Âå∫ÂüüÁöÑÁ±ªÂûã$/;"	m	struct:ZoneTypeDef
type	ScenesServer/SceneNpc.h	/^  const SceneNpcType type;$/;"	m	class:SceneNpc
type	ScenesServer/SceneNpcAI.h	/^  SceneNpcAIType type;$/;"	m	struct:t_NpcAIDefine
type	ScenesServer/zCard.cpp	/^WORD CardSlot::type() const$/;"	f	class:CardSlot
type	ScenesServer/zObject.cpp	/^WORD Package::type() const$/;"	f	class:Package
type	SessionServer/CRelationManager.h	/^  BYTE  type;$/;"	m	struct:CRelation
type	SessionServer/CountryInfo.h	/^		int  type;  \/\/[ranqd Add] π˙º“¿‡–Õ$/;"	m	struct:CountryInfo::CountryDic
type	base/BattleUserCmd.h	/^	BYTE type;$/;"	m	struct:Cmd::stChangeZoneVerify
type	base/BattleUserCmd.h	/^	DWORD type; \/\/0,µÁ–≈ 1,Õ¯Õ®$/;"	m	struct:Cmd::stReqZoneList
type	base/BattleUserCmd.h	/^	DWORD type;$/;"	m	struct:Cmd::stRtnZoneList
type	base/BattleUserCmd.h	/^	WORD type;  \/\/◊™«¯¿‡–Õ$/;"	m	struct:Cmd::stReqChangeZoneUserCmd
type	base/BillCommand.h	/^      DWORD type;            \/\/\/Âç°Á±ªÂûã$/;"	m	struct:Cmd::Bill::stConSumeCardCard_Gateway
type	base/BillCommand.h	/^      DWORD type;            \/\/\/Âç°Á±ªÂûã$/;"	m	struct:Cmd::Bill::t_Return_ObjCard
type	base/CharBase.h	/^    DWORD type;$/;"	m	struct:CounterMember
type	base/CharBase.h	/^  DWORD type;$/;"	m	struct:BinaryArchiveMember
type	base/CharBase.h	/^  DWORD type;$/;"	m	struct:TempArchiveMember
type	base/CharBase.h	/^  WORD  type;              \/\/\/ ÊÄßÂà´$/;"	m	struct:CharBase
type	base/Command.h	/^	BYTE type;$/;"	m	struct:Cmd::MapData_ItemHeader
type	base/Command.h	/^	petType type;           \/\/Á±ªÂûã$/;"	m	struct:Cmd::t_PetData
type	base/Command.h	/^                BYTE type;                      \/\/0:∆ﬂΩÁ«ø’ﬂ£¨ 1£∫ΩÁ”Ú«ø’ﬂ$/;"	m	struct:Cmd::t_GetSortList::__anon127
type	base/Command.h	/^        WORD type; \/\/∞¸π¸±Í ∂ 0-÷˜∞¸π¸, 1-µ⁄“ª≤÷ø‚, 2-µ⁄∂˛≤÷ø‚$/;"	m	struct:Cmd::stSortObjectPropertyUserCmd
type	base/Command.h	/^    BYTE type;		\/\/≤Œº˚√∂æŸ$/;"	m	struct:Cmd::stRetUnlockChangeZone
type	base/Command.h	/^    BYTE type;$/;"	m	struct:Cmd::stDirtyUserUserCmd
type	base/Command.h	/^    BYTE type;$/;"	m	struct:Cmd::stRefCountObjectPropertyUserCmd
type	base/Command.h	/^    WORD type;            \/\/\/ ËßíËâ≤Á±ªÂûã$/;"	m	struct:Cmd::SelectUserInfo
type	base/Command.h	/^    enum enmUnStateType type;$/;"	m	struct:Cmd::stUnCombinUserCmd	typeref:enum:Cmd::stUnCombinUserCmd::enmUnStateType
type	base/Command.h	/^  BYTE  type;          \/\/  ÂÖ≥Á≥ªÁ±ªÂûã $/;"	m	struct:Cmd::stRelation
type	base/Command.h	/^  BYTE  type;    \/**<Á±ªÂûã enumMapDataType*\/$/;"	m	struct:Cmd::stClearStateMapScreenUserCmd
type	base/Command.h	/^  BYTE  type;    \/**<Á±ªÂûã enumMapDataType*\/$/;"	m	struct:Cmd::stSetStateMapScreenUserCmd
type	base/Command.h	/^  BYTE  type;$/;"	m	struct:Cmd::stRelationStatusCmd
type	base/Command.h	/^  BYTE type;  \/\/0:ÊôÆÈÄö 1ÔºöÁ≥ªÁªü$/;"	m	struct:Cmd::stAddListMail
type	base/Command.h	/^  BYTE type;$/;"	m	struct:Cmd::stGetListMail
type	base/Command.h	/^  BYTE type;$/;"	m	struct:Cmd::stGoldGiveTradeUserCmd
type	base/Command.h	/^  BYTE type;$/;"	m	struct:Cmd::stQueryAuction
type	base/Command.h	/^  BYTE type;\/\/ÂÆöÂçïÁ±ªÂûã$/;"	m	struct:Cmd::stMsgGmTool
type	base/Command.h	/^  DWORD type;$/;"	m	struct:Cmd::stConSumeCardCard
type	base/Command.h	/^  DWORD type;$/;"	m	struct:Cmd::stSendMail
type	base/Command.h	/^  WORD  type;              \/\/\/ ËÅå‰∏öÁ±ªÂûã$/;"	m	struct:Cmd::t_UserData
type	base/Command.h	/^  WORD type;$/;"	m	struct:Cmd::stDistributePointPropertyUserCmd
type	base/Command.h	/^  enumGameAccelKeyType type;$/;"	m	struct:Cmd::stGameAccelKey
type	base/Command.h	/^  enumPopEffect  type;$/;"	m	struct:Cmd::stObjectHpMpPopUserCmd
type	base/Command.h	/^  petType type;$/;"	m	struct:Cmd::stAddPetPetCmd
type	base/Command.h	/^  petType type;$/;"	m	struct:Cmd::stChangeNamePetCmd
type	base/Command.h	/^  petType type;$/;"	m	struct:Cmd::stDelPetPetCmd
type	base/Command.h	/^  petType type;$/;"	m	struct:Cmd::stHorseDataPetCmd
type	base/Command.h	/^  petType type;$/;"	m	struct:Cmd::stHpExpPetCmd
type	base/Command.h	/^  petType type;$/;"	m	struct:Cmd::stRefreshDataPetCmd
type	base/Command.h	/^  petType type;$/;"	m	struct:Cmd::stRequestDataPetCmd
type	base/Command.h	/^  petType type;$/;"	m	struct:Cmd::stSetAIPetCmd
type	base/Command.h	/^  petType type;\/\/\/ÂÆ†Áâ©Á±ªÂûã$/;"	m	struct:Cmd::stDelSkillPetCmd
type	base/Command.h	/^  petType type;\/\/\/ÂÆ†Áâ©Á±ªÂûã$/;"	m	struct:Cmd::stSetTargetPetCmd
type	base/GmToolCommand.h	/^      DWORD type;$/;"	m	struct:Cmd::GmTool::t_Msg_GmTool
type	base/GmToolCommand.h	/^      DWORD type;\/\/ÂÆöÂçïÁ±ªÂûã$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
type	base/Object.h	/^	DWORD type;	\/\/ŒÔ∆∑¿‡±id Add for Kok$/;"	m	struct:t_Object
type	base/RecordCommand.h	/^      DWORD type;            \/\/\/ Âç∏ËΩΩÁ±ªÂûã$/;"	m	struct:Cmd::Record::t_WriteUser_SceneRecord_Ok
type	base/RecordCommand.h	/^      DWORD type;$/;"	m	struct:Cmd::Record::t_WriteUser_SceneRecord
type	base/RecordCommand.h	/^      WORD  type;            \/\/\/ ËßíËâ≤Á±ªÂûã$/;"	m	struct:Cmd::Record::t_CreateChar_GateRecord
type	base/RolechangeCommand.h	/^	BYTE type;$/;"	m	struct:Cmd::Rolechange::t_Check_Valid
type	base/RolechangeCommand.h	/^	BYTE type;$/;"	m	struct:Cmd::Rolechange::t_Ret_Check_Valid
type	base/RolechangeCommand.h	/^	BYTE type;$/;"	m	struct:Cmd::Rolechange::t_retSendUserToZone
type	base/RolechangeCommand.h	/^	BYTE type;$/;"	m	struct:Cmd::Rolechange::t_sendUserToZone
type	base/RolechangeCommand.h	/^	DWORD type;	\/\/0,µÁ–≈«¯ 1,Õ¯Õ®«¯$/;"	m	struct:Cmd::Rolechange::t_Req_ZoneList
type	base/RolechangeCommand.h	/^	DWORD type;	\/\/0,µÁ–≈«¯ 1,Õ¯Õ®«¯$/;"	m	struct:Cmd::Rolechange::t_Rtn_ZoneList
type	base/RolechangeCommand.h	/^	DWORD type;$/;"	m	struct:Cmd::Rolechange::t_OverZoneRet_ChatCmd
type	base/RolechangeCommand.h	/^	DWORD type;$/;"	m	struct:Cmd::Rolechange::t_OverZone_ChatCmd
type	base/RolechangeCommand.h	/^	DWORD type;$/;"	m	struct:Cmd::Rolechange::t_retCheckZoneState
type	base/SceneCommand.h	/^      DWORD type;            \/\/\/ –∂‘ÿ¿‡–Õ$/;"	m	struct:Cmd::Scene::t_Unreg_LoginScene_Ok
type	base/SessionCommand.h	/^	  BYTE type;		\/\/∂‘’Ω¿‡–Õ$/;"	m	struct:Cmd::Session::t_CreateNewPkGame_SceneSession
type	base/SessionCommand.h	/^	  BYTE type;		\/\/∂‘’Ω¿‡–Õ$/;"	m	struct:Cmd::Session::t_ReqFightMatch_SceneSession
type	base/SessionCommand.h	/^	  BYTE type;		\/\/∂‘’Ω¿‡–Õ$/;"	m	struct:Cmd::Session::t_RetSceneuserPkGame_SceneSession
type	base/SessionCommand.h	/^	  BYTE type;	\/\/¿≠»À¿‡–Õ 1,∂‘’Ωƒ£ Ω¿≠»À$/;"	m	struct:Cmd::Session::t_TelePKGame_SceneSession
type	base/SessionCommand.h	/^	  BYTE type;$/;"	m	struct:Cmd::Session::t_PutOneGameIDBack_SceneSession
type	base/SessionCommand.h	/^	BYTE type;	\/\/0,µΩ’Ω«¯ 1,ªÿ‘≠«¯$/;"	m	struct:Cmd::Session::t_notifyEnterZone_SceneSession
type	base/SessionCommand.h	/^	BYTE type;$/;"	m	struct:Cmd::Session::t_RelationAddFriend
type	base/SessionCommand.h	/^      BYTE  type;    \/\/ Á´ûËµõÁ±ªÂûã$/;"	m	struct:Cmd::Session::t_createQuiz_SceneSession
type	base/SessionCommand.h	/^      BYTE  type; \/\/ type=0ÔºåÈÄÄÂá∫.type=1,ËøõÂÖ•$/;"	m	struct:Cmd::Session::t_exitQuiz_GateSession
type	base/SessionCommand.h	/^      BYTE type;          \/\/‰ª§ÁâåÁ±ªÂûã$/;"	m	struct:Cmd::Session::t_Check_CallTimes_SceneSession
type	base/SessionCommand.h	/^      BYTE type;          \/\/‰ª§ÁâåÁ±ªÂûã$/;"	m	struct:Cmd::Session::t_GoTo_Leader_Check_SceneSession
type	base/SessionCommand.h	/^      BYTE type;          \/\/‰ª§ÁâåÁ±ªÂûã$/;"	m	struct:Cmd::Session::t_GoTo_Leader_SceneSession
type	base/SessionCommand.h	/^      BYTE type;          \/\/‰ª§ÁâåÁ±ªÂûã$/;"	m	struct:Cmd::Session::t_Return_CallTimes_SceneSession
type	base/SessionCommand.h	/^      BYTE type;        \/\/ÂØπÊàòÁ±ªÂûã$/;"	m	struct:Cmd::Session::t_createDare_SceneSession
type	base/SessionCommand.h	/^      BYTE type;      \/\/\/ Á§æ‰ºöÂÖ≥Á≥ªÁ±ªÂûã$/;"	m	struct:Cmd::Session::t_sendUserRelationID
type	base/SessionCommand.h	/^      BYTE type;$/;"	m	struct:Cmd::Session::auctionInfo
type	base/SessionCommand.h	/^      BYTE type;$/;"	m	struct:Cmd::Session::mailInfo
type	base/SessionCommand.h	/^      BYTE type;$/;"	m	struct:Cmd::Session::t_queryAuction_SceneSession
type	base/SessionCommand.h	/^      BYTE type;\/\/0: Ë¢´Êä¢Âä´ 1:Êó∂Èó¥ÁªìÊùü $/;"	m	struct:Cmd::Session::t_guardFail_SceneSession
type	base/SessionCommand.h	/^      DWORD type;   \/\/0,…æ∫≈ 1,◊™«¯…æ≥˝$/;"	m	struct:Cmd::Session::t_DelChar_GateSession
type	base/SessionCommand.h	/^      bool type;  \/\/falseË°®Á§∫ÁªìÊùü,trueË°®Á§∫ÂºÄÂßã$/;"	m	struct:Cmd::Session::t_updateWinnerExp_SceneSession
type	base/SessionCommand.h	/^      saveType type;$/;"	m	struct:Cmd::Session::t_saveCartoon_SceneSession
type	base/xml/xml_parser_generator.h	/^	std::string type;$/;"	m	class:xml_prop_parser_generator
type	base/zDBConnPool.h	/^	int type;      \/**< ZEBRA ˝æ›¿‡–Õ *\/$/;"	m	struct:__anon153
type	base/zDatabase.h	/^    BYTE type;$/;"	m	struct:npcRecover
type	base/zDatabase.h	/^    DWORD type;		    \/\/¿‡–Õ$/;"	m	struct:CardBase
type	base/zDatabase.h	/^    DWORD type;		    \/\/¿‡–Õ$/;"	m	struct:zCardB
type	base/zMetaData.h	/^	int type;$/;"	m	class:DBField
type	base/zSocket.h	/^	typedef cmd_type type;$/;"	t	class:CmdBuffer_wrapper
type	base/zType.h	/^  DWORD type;$/;"	m	struct:t_NewLoginSession
type	tmpcode/commond.h	/^		BYTE  type;	\/\/0 - ‘⁄ΩÁ√Ê÷–º‰≤øŒªµƒÃ· æ£ª1 - ‘⁄ΩÁ√Ê”“≤‡±≥∞¸∞¥≈•≈‘µƒÃ· æ$/;"	m	struct:stQuestTipsUserCmd
type	tmpcode/commond.h	/^		BYTE  type;$/;"	m	struct:stRefCountObjectPropertyUserCmd
type	tmpcode/commond.h	/^		BYTE  type;\/\/0 ->ÀÈ∆¨  1->±¶ Ø$/;"	m	struct:stClearElecGemUserCmd
type	tmpcode/commond.h	/^		BYTE type;					\/\/¿‡–Õ$/;"	m	struct:stCallBoardDataUserCmd
type	tmpcode/commond.h	/^		BYTE type;            \/\/Ã¯ŒË¿‡–Õ£∫µ•»À£¨À´»À£¨£®PK£¨±»»¸µ»µ»..±£¡Ù£©.$/;"	m	struct:stAnswerDance
type	tmpcode/commond.h	/^		BYTE type;$/;"	m	struct:EquipSimulate::ActiveType
type	tmpcode/commond.h	/^		BYTE type;$/;"	m	struct:EquipSimulate::SocketType
type	tmpcode/commond.h	/^		DWORD type;	\/\/1 -- ∆’Õ®◊∞±∏∆∑÷ …˝º∂,  2 -- Ã◊◊∞◊∞±∏∆∑÷ …˝º∂$/;"	m	struct:stWatchFriendStoveUserCmd
type	tmpcode/commond.h	/^	    BYTE	  type;       \/\/Ã¯ŒË¿‡–Õ£∫µ•»À£¨À´»À£¨£®PK£¨±»»¸µ»µ»..±£¡Ù£©.$/;"	m	struct:stStopDance
type	tmpcode/commond.h	/^	    BYTE  type;            \/\/Ã¯ŒË¿‡–Õ£∫µ•»À£¨À´»À£¨£®PK£¨±»»¸µ»µ»..±£¡Ù£©.$/;"	m	struct:stAskDance
type	tmpcode/commond.h	/^	    BYTE  type;     \/\/≤•∑≈∂Øª≠¿‡–Õ,1:ŒÔ∆∑Ã˘Õº∂Øª≠;	 2:µ±Ω”µΩƒ≥–©»ŒŒÒ ±, Ã· æ∏¯ÕÊº“µƒ–≈ 4£∫¥¯–¬ ÷Ã· æ 5: ≤•∑≈Õº∆¨“˝µºπ¶ƒ‹ 7:µ√µΩ◊∞±∏Ãÿ–ß$/;"	m	struct:stBeginDisplayCartoonUserCmd
type	tmpcode/commond.h	/^	  BYTE  type;   \/\/ 0±Ì æ «π€≤Ï»´…Ì◊∞±∏∑µªÿ£¨1±Ì æπ€≤Ï»ÀŒÔ∑µªÿ$/;"	m	struct:st_WatchPlayer
type	tmpcode/commond.h	/^	  DWORD type;   \/\/µπº∆ ±µƒ–Œ Ω£∫1  Ω¯∂»Ãı  2   ˝◊÷µƒ–Œ Ω$/;"	m	struct:stNotifyDaoJiShiUserCmd
type	tmpcode/commond.h	/^	 BYTE type,atk,def,hp,time;$/;"	m	struct:TankBuffValue
type	tmpcode/commond.h	/^	 BYTE type;      \/\/0∏˘æ›≥…º®ªÒµ√◊ ∏Ò1–“‘À±ª—°÷–$/;"	m	struct:stTellWorldDTSUserCmd
type	tmpcode/commond.h	/^	 BYTE type;\/\/æ∆¿‡–Õ£∫∆°æ∆ 0£¨∫Ïæ∆2£¨Õ˛ øº…4$/;"	m	struct:stDineBarCmd
type	tmpcode/commond.h	/^	 QWORD	type;			\/\/≈‰º˛¿‡–Õ£¨¥”µÕ◊÷Ω⁄∆: $/;"	m	struct:TankHole
type	tmpcode/commond.h	/^	 WORD type;       \/\/∂˜¥Õ¿‡–Õ, »Á9–«,7‘¬µ»$/;"	m	struct:stActiveShenLongReward
type	tmpcode/commond.h	/^	BYTE	  type;       \/\/Ã¯ŒË¿‡–Õ£∫µ•»À£¨À´»À£¨£®PK£¨±»»¸µ»µ»..±£¡Ù£©.$/;"	m	struct:stStopDanceMapScreenUserCmd
type	tmpcode/commond.h	/^	BYTE	type;		\/**<¿‡–Õ enumMapDataType*\/$/;"	m	struct:stClearStateMapScreenUserCmd
type	tmpcode/commond.h	/^	BYTE	type;                         \/\/∑ø–Õ$/;"	m	struct:HomeMapData
type	tmpcode/commond.h	/^	BYTE    type;                   \/\/’Ω≥µ¿‡–Õ (∏ﬂ4Œª:±Ì æ’Ω≥µ—’…´£ªµÕ4Œª:±Ì æ’Ω≥µ¿‡–Õ÷µ)$/;"	m	struct:TankData
type	tmpcode/commond.h	/^	BYTE    type;           \/\/0,’˝≥££¨”– ±º‰£ª1,√ª”–ÕÊº“µΩ¥Ôœﬁ÷∆º∂±£ª2,”–ÕÊº“µΩ¥Ôœﬁ÷∆º∂±,µ´√ª◊ˆ∑‚”°ªÓ∂Ø$/;"	m	struct:stRetMaxLevelIconDataUserCmd
type	tmpcode/commond.h	/^	BYTE    type;$/;"	m	struct:stRelationStatusCmd
type	tmpcode/commond.h	/^	BYTE   type;  \/\/¿‡–Õ£¨0±Ì æ∆’Õ®ŒÔ∆∑”Î‘≠¿¥øÕªß∂Àœ‘ æ∑Ω Ω“ª—˘£¨1±Ì æ◊∞±∏¥À ±µƒŒÔ∆∑IDŒ™◊∞±∏µƒqwThisID$/;"	m	struct:GiftItem
type	tmpcode/commond.h	/^	BYTE  type;							\/\/\/ ƒø«∞Œ™»ÀŒÔ–‘± ∏ƒŒ™BYTE  (”≈ªØ20090605)$/;"	m	struct:t_UserData
type	tmpcode/commond.h	/^	BYTE  type;                                     \/\/      πÿœµ¿‡–Õ $/;"	m	struct:stRelation
type	tmpcode/commond.h	/^	BYTE  type;             \/\/∏ƒ√˚¿‡–Õ: 1-‘⁄º“◊Âπ‹¿ÌΩÁ√Ê∏ƒ√˚£ª0-‘⁄’Ω≥µƒ⁄∏ƒ√˚$/;"	m	struct:stTankNameCmd
type	tmpcode/commond.h	/^	BYTE  type;             \/\/∏ƒ√˚¿‡–Õ: 1-‘⁄”∂±¯Õ≈’Ω≥µπ‹¿ÌΩÁ√Ê∏ƒ√˚£ª0-‘⁄’Ω≥µƒ⁄∏ƒ√˚$/;"	m	struct:stUnionTankNameCmd
type	tmpcode/commond.h	/^	BYTE  type;             \/\/¿‡–Õ£¨≥«’Ωªπ «Õ‚Ωª 1≥…Œ™ΩÁÕı 2“ª∞„≥«÷˜ 3Ω·√À 4 Ω‚≥˝Ω·√À 5 ΩÁÕıœ¬Ã®$/;"	m	struct:CountryGreatEvent
type	tmpcode/commond.h	/^	BYTE  type;       \/\/π∫¬Ú¿‡–Õ°°°°≤Œº˚…œ√Ê√∂æŸ$/;"	m	struct:stReqBuildMagicForgeObject
type	tmpcode/commond.h	/^	BYTE  type;    \/\/ …Ë÷√¿‡–Õ$/;"	m	struct:stSetUnionMerchInfo
type	tmpcode/commond.h	/^	BYTE  type;  \/\/ 1-±Ì æ≤Èø¥◊‘º∫√˚∆¨£¨ƒ¨»œŒ™0$/;"	m	struct:rqAchievementCmd
type	tmpcode/commond.h	/^	BYTE  type; \/\/ Œ™0 ±±Ì æ∑¢ÀÕÀ˘”–¡™√Àπÿœµ, Œ™1 ±,±Ì æ‘ˆº”, Œ™2 ±,±Ì æ”Î ˝◊È÷–µƒæ¸Õ≈Ω‚≥˝√À‘º$/;"	m	struct:stUpdateUnionAlly
type	tmpcode/commond.h	/^	BYTE  type;$/;"	m	struct:stChangeTitleCmd
type	tmpcode/commond.h	/^	BYTE  type;$/;"	m	struct:stReqChangeBackTitleCmd
type	tmpcode/commond.h	/^	BYTE  type;$/;"	m	struct:stTeamMemberOfflineUserCmd
type	tmpcode/commond.h	/^	BYTE type;						\/\/œ˚œ¢¿‡–Õ(0»°ŒÔ∆∑ 1¥ÊŒÔ∆∑)$/;"	m	struct:StoreNotice
type	tmpcode/commond.h	/^	BYTE type;					\/\/0º“◊Â 1∞Ôª·$/;"	m	struct:stReqTankListCmd
type	tmpcode/commond.h	/^	BYTE type;				\/\/’Ω≥µ¿‡–Õ (∏ﬂ4Œª:±Ì æ’Ω≥µ—’…´£ªµÕ4Œª:±Ì æ’Ω≥µ¿‡–Õ÷µ)$/;"	m	struct:t_MapTankData
type	tmpcode/commond.h	/^	BYTE type;			\/\/ 0£∫«∞¡ΩÃı 1£∫À˘”–$/;"	m	struct:stRequestCountryEventDataUserCmd
type	tmpcode/commond.h	/^	BYTE type;			\/\/0-7ø®£¨1-24ø®,2-≥È»°∂ÓÕ‚◊œ…´7ø®$/;"	m	struct:rqDrawCardHappyCardBoxUserCmd
type	tmpcode/commond.h	/^	BYTE type;			\/\/ŒÔ∆∑¿‡–Õ$/;"	m	struct:HouseObjDef
type	tmpcode/commond.h	/^	BYTE type;		\/\/0Œ™ºı…Ÿ£¨1Œ™‘ˆº”$/;"	m	struct:stUpdateHouseRoomRenQiUserCmd
type	tmpcode/commond.h	/^	BYTE type;		\/\/\/ π∫¬Ú¿‡–Õ°°≤Œº˚…œ√Ê√∂æŸ$/;"	m	struct:stBuyUnionMacketObject
type	tmpcode/commond.h	/^	BYTE type;	\/\/0 - Õı’ﬂ¿˙≥Ã«Î«Û£ª1 - …Ã≥«÷–µƒ—´’¬∂“ªª«Î«Û$/;"	m	struct:stReqCourseOfKingCmd
type	tmpcode/commond.h	/^	BYTE type;	\/\/0:◊∞±∏…˝º∂1 1:◊∞±∏…˝º∂2$/;"	m	struct:stRetMagicForgeSolideInfo
type	tmpcode/commond.h	/^	BYTE type;	\/\/¿≠»Àµƒ¿‡–Õ, 1, º“◊Â◊‘––≥µ¿≠»À, 2.º“◊Â‘ÀÔ⁄¿≠»À$/;"	m	struct:stSeptGatherCmd
type	tmpcode/commond.h	/^	BYTE type;                              \/\/0: ±æ÷‹£¨ 1£∫…œ÷‹$/;"	m	struct:stReturnFlowerListUserCmd
type	tmpcode/commond.h	/^	BYTE type;                              \/\/0: ΩÒ»’£¨ 1£∫◊Ú»’$/;"	m	struct:stReturnDayFlowerListUserCmd
type	tmpcode/commond.h	/^	BYTE type;                              \/\/0Œ™≤È—ØÀ˘”–’– ’–≈œ¢£¨1Œ™∂”≥§«Î«Û◊‘º∫∂”ŒÈ’– ’–≈œ¢£¨“‘œ¬≤Œ ˝$/;"	m	struct:stReqTeamInfoListUserCmd
type	tmpcode/commond.h	/^	BYTE type;                              \/\/’– ’∑Ω Ω$/;"	m	struct:teamRecruitInfo
type	tmpcode/commond.h	/^	BYTE type;                      \/\/0: ±æ»’£¨ 1£∫◊Ú»’$/;"	m	struct:rqBlessListUserCmd
type	tmpcode/commond.h	/^	BYTE type;                      \/\/0: ±æ÷‹£¨ 1£∫…œ÷‹$/;"	m	struct:stRequestFlowerListUserCmd
type	tmpcode/commond.h	/^	BYTE type;                      \/\/0: ΩÒ»’£¨ 1£∫◊Ú»’$/;"	m	struct:stRequestDayFlowerListUserCmd
type	tmpcode/commond.h	/^	BYTE type;                      \/\/0±Ì æ’˝≥£µƒÃ˘ÕºŒÔ∆∑≤È—Ø£ª1±Ì æ≈ƒ¬ÙŒÔ∆∑≤È—Ø£ª2±Ì æ¡È∆˜≤È—Ø;3¬Ì∆•≤È—Ø;4æ´¡¶÷Æ”Ô°¢æ´¡È÷Æ∏Ë≤È—Ø;5:‘¬…Ò∆Ìµª°¢‘¬…Ò◊£∏£ ;6:»´…Ì◊∞±∏’π æ;7±Ì æººƒ‹’π æ;8±Ì æ”ªØ≥·∞Ú’π æ, 9:¡˙≥Ë’π æ 10:∏ˆ»À≥…æÕ∞Ò$/;"	m	struct:stQuestionObject
type	tmpcode/commond.h	/^	BYTE type;                      \/\/0 «µ⁄“ª¥Œ÷˜∂Ø¥Úø™£¨1÷–Õæ…œœﬂ∑¢ÀÕ$/;"	m	struct:stSendObjNewBoxPropertyUserCmd
type	tmpcode/commond.h	/^	BYTE type;                      \/\/\/ ÷µ”Ú«Îº˚…œenum$/;"	m	struct:stRequestAbjurationCitynCmd
type	tmpcode/commond.h	/^	BYTE type;                 \/\/1Œ™æ∫ººµ„ ˝≈≈––∞Ò£¨2Œ™¡¨ª˜ ˝≈≈––∞Ò$/;"	m	struct:stReqSortListWeekendZhenxuanUserCmd
type	tmpcode/commond.h	/^	BYTE type;                 \/\/1Œ™ÀÕª®£¨2Œ™‘“µ∞$/;"	m	struct:stWatcherExpressWeekendZhenxuanUserCmd
type	tmpcode/commond.h	/^	BYTE type;              \/\/1:ø™ º±»»¸£¨2:Ω˙º∂,3:≤¬÷–π⁄æ¸$/;"	m	struct:stNotifyBetDragonFightUserCmd
type	tmpcode/commond.h	/^	BYTE type;              \/\/1±Ì æ∑øŒ›£¨2±Ì æª®‘∞£¨3±Ì æπ§◊˜Ã®$/;"	m	struct:st_LevelUpNeedThingHouseUserCmd
type	tmpcode/commond.h	/^	BYTE type;              \/\/\/ 0£∫±Ì æπ´∏Ê∞Â…œµƒ£¨1£∫±Ì æOΩÁ√Ê…œµƒ$/;"	m	struct:RetNoticeUnionInfoCmd
type	tmpcode/commond.h	/^	BYTE type;              \/\/\/ ¿‡–Õ$/;"	m	struct:MasterPerformInfo
type	tmpcode/commond.h	/^	BYTE type;              \/\/\/ ¿‡–Õ$/;"	m	struct:stUserPerformInfo
type	tmpcode/commond.h	/^	BYTE type;              \/\/œ˚œ¢¿‡–Õ(0◊‘º∫∂‘◊‘º∫£¨1◊‘º∫∂‘À˚»À£¨2À˚»À∂‘◊‘º∫)$/;"	m	struct:FarmNotice
type	tmpcode/commond.h	/^	BYTE type;             \/\/∆’Õ®Ô⁄≥µ°¢º“◊ÂÔ⁄≥µ$/;"	m	struct:attGuardNpcRecordofSept
type	tmpcode/commond.h	/^	BYTE type;        \/\/1:±æΩÏµƒ£¨2:…œΩÏµƒ$/;"	m	struct:stRet32NameListUserCmd
type	tmpcode/commond.h	/^	BYTE type;        \/\/1:±æΩÏµƒ£¨2:…œΩÏµƒ$/;"	m	struct:stRetScore32WinnerUserCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/0 ∏ˆ»À≥…æÕ 1 ◊Â≥§≥…æÕ$/;"	m	struct:stRetPerformState
type	tmpcode/commond.h	/^	BYTE type;      \/\/0£¨÷˜∂ØøÕªß∂À«Î«Û; 1£∫∑˛ŒÒ∆˜∑¢∏¯øÕªß∂Àµƒ$/;"	m	struct:stReturnHealthyGameUserCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/0 ∑ø≤1∫Ï Ø2¡˙…ÒΩÁ”Ú$/;"	m	struct:stReqLeaveDTUserCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/1 º“◊Â¿≠Ô⁄ 2....∆‰À¸ªÓ∂Ø$/;"	m	struct:stSeptGuardVisitSeptCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/1£¨π€÷⁄»∑»œ£¨2£¨ÕÀ≥ˆ»∑»œ$/;"	m	struct:stRequestBeWatcherWeekendZhenxuanUserCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/\/ 0 “ª∞„ 1 ª™¿ˆ$/;"	m	struct:stMarriagePresentBlessCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/\/ 0:(«Î«Û’ﬂ «◊Â≥§)œ‘ æº®–ß£¨1£∫¡Ï»°º®–ß 2:(µ„¡¥Ω” ±)ø¥À˚»Àµƒ’π æ 3:(µ„¡¥Ω” ±)ø¥◊‘º∫µƒ’π æ 4:(«Î«Û’ﬂ”–º“◊Âµ´≤ª «◊Â≥§)«Î«Û±æº“◊Â◊Â≥§µƒº®–ß$/;"	m	struct:stReqMasterPerformCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/\/ 0£∫≤ªœ‘ æ£¨1£∫œ‘ æ$/;"	m	struct:stNoticeMasterPerformFlagCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/\/ 0£∫≤ªœ‘ æ£¨1£∫œ‘ æ$/;"	m	struct:stNoticeStopSeptFlag
type	tmpcode/commond.h	/^	BYTE type;      \/\/\/ 0£∫œ‘ æº®–ß£¨2£∫«Î«ÛÀ˚»À’π æ£¨3£∫«Î«Û◊‘º∫’π æ$/;"	m	struct:stRetMasterPerformInfoCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/\/ 0£∫—´’¬ªª”°º«£¨1£∫”°º«ªª—´’¬$/;"	m	struct:stRefreshChangeBackTitleCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/\/ 0£∫◊Â≥§  1£∫◊Â‘±$/;"	m	struct:t_AddSeptSuccessCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/\/ ≤Ÿ◊˜¿‡–Õ$/;"	m	struct:stCityFundUnionCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/\/ ¿‡–Õ0£∫∑«≥«÷˜   1£∫≥«÷˜π‹¿Ì$/;"	m	struct:stRequestTrafficTaxHistory
type	tmpcode/commond.h	/^	BYTE type;      \/\/\/ ¿‡–Õ0£∫∑«≥«÷˜   1£∫≥«÷˜π‹¿Ì(¥´µΩserver∫Û,serverΩ´client≥«÷˜À˘’º¡ÏΩÁ”Úµƒ≥« –À∞ ’¿˙ ∑ ˝æ›)$/;"	m	struct:stRequestTaxHistory
type	tmpcode/commond.h	/^	BYTE type;      \/\/\/ ¿‡–Õ0£∫∑«≥«÷˜   1£∫≥«÷˜π‹¿Ì(¥´µΩserver∫Û,serverΩ´client≥«÷˜À˘’º¡ÏΩÁ”Úµƒ≥« –À∞ ’«Èøˆ)$/;"	m	struct:stRequestCountryTax
type	tmpcode/commond.h	/^	BYTE type;      \/\/\/ œµÕ≥ªÚ «»’≥£(º˚…œ√Êµƒenum)$/;"	m	struct:UnionNoticeInfo
type	tmpcode/commond.h	/^	BYTE type;      \/\/type=1Œ™∑ø◊”£¨2Œ™ª®‘∞,3π§◊˜Ã®$/;"	m	struct:st_RequestLevelUpHouseUserCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/≥…æÕ¿‡±$/;"	m	struct:AwardInfo
type	tmpcode/commond.h	/^	BYTE type;      \/\/≥…æÕ¿‡–Õ$/;"	m	struct:stReqAchivementAwardUserCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/¿‡–Õ 0£¨»°œ˚—È÷§ £¨1 ∑µªÿ—È÷§Ω·π˚$/;"	m	struct:stSellObjListNpcTradeUserCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/¿‡–Õ 0£¨»°œ˚—È÷§ £¨1 ∑µªÿ—È÷§Ω·π˚$/;"	m	struct:stSellObjectNpcTradeUserCmd
type	tmpcode/commond.h	/^	BYTE type;      \/\/ŒÔ∆∑¿‡–Õ$/;"	m	struct:rt_ObjVisitHouseUserCmd
type	tmpcode/commond.h	/^	BYTE type;     \/\/÷˜≥«¿‡–Õ,1Œ™ ∑ø≤≤º¿◊≥«£¨2Œ™∫Ï Ø≥«£¨3Œ™√ﬂ¡˙≥«$/;"	m	struct:stUseCanSelectScrollPropertyUserCmd
type	tmpcode/commond.h	/^	BYTE type;    \/\/0±Ì æ◊™÷∞∑¢ÀÕ  1±Ì æ…œœﬂ∑¢ÀÕ$/;"	m	struct:stNotifyChangeJobDataUserCmd
type	tmpcode/commond.h	/^	BYTE type;   \/\/±»»¸¿‡–Õ$/;"	m	struct:stStartNewGameChallengeUserCmd
type	tmpcode/commond.h	/^	BYTE type;  $/;"	m	struct:stEndChatGm
type	tmpcode/commond.h	/^	BYTE type;  \/\/ 0 ±Ì æ∆’Õ® 1 ±Ì æ…Ã≥«¿Ô¥Úø™$/;"	m	struct:stNotifyGottenLifeAwardPromoterUserCmd
type	tmpcode/commond.h	/^	BYTE type;  \/\/1±Ì æ∑¢∏¯ ¶∏µ£¨nameŒ™ÕΩµ‹√˚◊÷£¨2±Ì æ∑¢∏¯ÕΩµ‹£¨nameŒ™ ¶∏µ√˚◊÷$/;"	m	struct:stNotifyOnlineInfoGrecommendUserCmd
type	tmpcode/commond.h	/^	BYTE type;  \/\/1±Ì æ∑¢∏¯ ¶∏µ£¨nameŒ™ÕΩµ‹√˚◊÷£¨2±Ì æ∑¢∏¯ÕΩµ‹£¨nameŒ™ ¶∏µ√˚◊÷$/;"	m	struct:stRefreshGRecommendRelationUserCmd
type	tmpcode/commond.h	/^	BYTE type;  \/\/1±Ì æ∑¢∏¯ ¶∏µ£¨nameŒ™ÕΩµ‹√˚◊÷£¨2±Ì æ∑¢∏¯ÕΩµ‹£¨nameŒ™ ¶∏µ√˚◊÷$/;"	m	struct:stRefreshSayHelloRecordUserCmd
type	tmpcode/commond.h	/^	BYTE type;  \/\/1±Ì æ ¶∏µ∑¢£¨nameŒ™ ¶∏µ√˚◊÷£¨2±Ì æÕΩµ‹∑¢£¨nameŒ™ÕΩµ‹√˚◊÷$/;"	m	struct:stCountryInviteGrecommendUserCmd
type	tmpcode/commond.h	/^	BYTE type; \/\/0±Ì æµ⁄“ª¥Œ(∏’¥”npcƒ«¡ÏµΩµ∞)£¨1±Ì æ∏¸–¬ ±º‰$/;"	m	struct:stGetLingQiEggPropertyUserCmd
type	tmpcode/commond.h	/^	BYTE type; \/\/1: ¥Û 2: –°$/;"	m	struct:stResidentData
type	tmpcode/commond.h	/^	BYTE type; \/\/1:ΩÒÃÏ 2:√˜ÃÏ $/;"	m	struct:stDare
type	tmpcode/commond.h	/^	BYTE type; \/\/1:‘§—°»¸ 2:æˆ»¸$/;"	m	struct:stReqRankZhenxuanUserCmd
type	tmpcode/commond.h	/^	BYTE type; \/\/1Œ™∑‚∫≈«∞£¨2Œ™∑‚∫≈µƒ’À∫≈$/;"	m	struct:stForbidSameIpUserCmd
type	tmpcode/commond.h	/^	BYTE type; \/\/type=1,À¿Õˆ£¨type=2,ÕÀ≥ˆ,type=3,ª˜…±$/;"	m	struct:stInfoSeptTeamChallengeUserCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:TitleQuest
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:reqJoinCityBonfireCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:rtCityFightRule
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stAddDecorationCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stAddObjectDaTaoShaUserCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stEndRecallSeptCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stInRecallSeptCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stInfoChallengeUserCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stMarriageSpreadFlowerCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stOpenMarrySetCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stRecallMasterVoteSeptCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stRecallVoteSeptCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stReqMarriageInteractionCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stReqRecallMasterInfo
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stRetRecallMasterInfo
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stScoreChallengeUserCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stSendQuestionGm
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stSetMarriageInteractionCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stShowEffectWhenFlowerEggCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stShowWindowUserCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stSimpleInfoChallengeUserCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:stStatueHPUserCmd
type	tmpcode/commond.h	/^	BYTE type;$/;"	m	struct:t_NeedMasterAffrimJoin
type	tmpcode/commond.h	/^	BYTE type;\/\/ ¿‡–Õ  enumMapDataType$/;"	m	struct:MapData_ItemHeader
type	tmpcode/commond.h	/^	BYTE type;\/\/0 ∆’Õ®¡˜≥Ã£¨1 »ŒŒÒΩ≈±æ$/;"	m	struct:stForceRelationDataUserCmd
type	tmpcode/commond.h	/^	BYTE type;\/\/0 ∆’Õ®¡˜≥Ã£¨1 »ŒŒÒΩ≈±æ$/;"	m	struct:stReqForceRelationDataUserCmd
type	tmpcode/commond.h	/^	BYTE type;\/\/0-º“◊Â,1-æ¸Õ≈$/;"	m	struct:stDestroyTankCmd
type	tmpcode/commond.h	/^	BYTE type;\/\/0:2D”Ô“Ù 1:3D”Ô“Ù$/;"	m	struct:stReqSoundTokenCmd
type	tmpcode/commond.h	/^	BYTE type;\/\/0:2D”Ô“Ù 1:3D”Ô“Ù$/;"	m	struct:stRtnSoundTokenCmd
type	tmpcode/commond.h	/^	BYTE type;\/\/0±æΩÏ£¨1±Ì æπÕ”∂æ¸±æΩÁ£¨2±Ì æπÕ”∂±¯πÕ”∂ΩÁ$/;"	m	struct:stRetDangerAreaUserCmd
type	tmpcode/commond.h	/^	BYTE type;\/\/0±Ì æ±‰…Ìπ÷ŒÔ£¨1±Ì æ±‰…Ì»ÀŒÔ$/;"	m	struct:stRequestPetChangeFaceMagicUserCmd
type	tmpcode/commond.h	/^	BYTE type;\/\/0±Ì æ±‰…Ìπ÷ŒÔ£¨1±Ì æ±‰…Ì»ÀŒÔ$/;"	m	struct:stSendChangeFaceNPCMagicUserCmd
type	tmpcode/commond.h	/^	BYTE type;\/\/0º“◊Â 1∞Ôª·$/;"	m	struct:stGetBackTankCmd
type	tmpcode/commond.h	/^	BYTE type;\/\/0º“◊Â 1æ¸Õ≈$/;"	m	struct:stGetTankCmd
type	tmpcode/commond.h	/^	BYTE type;\/\/\/\/0:ÕÀº“◊Â 1:ÕÀÕ≈ 2:ÕÀΩÁ”Ú 3:ªª»®œﬁ$/;"	m	struct:stRefreshSoundTokenCmd
type	tmpcode/commond.h	/^	ChallengeType type;\/\/ÃÙ’Ω¿‡–Õ$/;"	m	struct:stInviteChallengeUserCmd
type	tmpcode/commond.h	/^	ChallengeType type;\/\/ÃÙ’Ω¿‡–Õ$/;"	m	struct:stReqChallengeUserCmd
type	tmpcode/commond.h	/^	DWORD type;			\/\/0 À¢«∞’∞  1À¢ªÓ∂Ø$/;"	m	struct:rqDevelopUpdateUserCmd
type	tmpcode/commond.h	/^	DWORD type;             \/\/\/ ”„µƒ¿‡–Õ$/;"	m	struct:fishInfo
type	tmpcode/commond.h	/^	DWORD type;     \/\/\/ SPREAD_FLOWER_*** 9p?$/;"	m	struct:stMarriagePresentFlowerCmd
type	tmpcode/commond.h	/^	DWORD type;$/;"	m	struct:stConSumeCardCard
type	tmpcode/commond.h	/^	DWORD type;$/;"	m	struct:stZhongLiCityLive
type	tmpcode/commond.h	/^	DWORD type;\/\/1’˘∂·ÀÆæß 2BOSS’˘∂·$/;"	m	struct:stZhongLiCityTime
type	tmpcode/commond.h	/^	WORD type;                                              \/\/\/ Ω«…´–‘±$/;"	m	struct:SelectUserInfo
type	tmpcode/commond.h	/^	WORD type;$/;"	m	struct:stDistributePointPropertyUserCmd
type	tmpcode/commond.h	/^	WORD type;\/\/2 3 4  ±Ì æ∑¢ÀÕµ»º∂typeµƒø…—ßººƒ‹$/;"	m	struct:stSendCanLearnFakeSkillLingQiUserCmd
type	tmpcode/commond.h	/^	bool  type;     \/\/typeŒ™1£¨‘Útime±Ì æµ±«∞ ±º‰æ‡¿ÎNpc’˘∂·’Ωªπ”–∂‡≥§ ±º‰£ªtypeŒ™0£¨±Ì æ’Ω∂∑Ω· ¯£¨ §∏∫“—∑÷$/;"	m	struct:stNpcDareTimeCmd
type	tmpcode/commond.h	/^	bool type; \/\/¿‡–Õ$/;"	m	struct:stShowBombEffectUserCmd
type	tmpcode/commond.h	/^	enumGameAccelKeyType type;$/;"	m	struct:stGameAccelKey
type	tmpcode/commond.h	/^	petType type;           $/;"	m	struct:stSetAIPetCmd
type	tmpcode/commond.h	/^	petType type;           \/\/¿‡–Õ$/;"	m	struct:t_PetData
type	tmpcode/commond.h	/^	petType type;$/;"	m	struct:stDelPetPetCmd
type	tmpcode/commond.h	/^	petType type;$/;"	m	struct:stHpExpPetCmd
type	tmpcode/commond.h	/^	petType type;$/;"	m	struct:stRefreshDataPetCmd
type	tmpcode/commond.h	/^	petType type;\/\/\/≥ËŒÔ¿‡–Õ$/;"	m	struct:stSetTargetPetCmd
type	tmpcode/commond.h	/^                BYTE type;                      \/\/0:∆ﬂΩÁ«ø’ﬂ£¨ 1£∫ΩÁ”Ú«ø’ﬂ$/;"	m	struct:t_GetSortList::__anon241
type	tmpcode/commond.h	/^                DWORD type;$/;"	m	struct:stCrystalAllInfoDataUserCmd::cryState
type	tmpcode/commond.h	/^            BYTE type;\/\/0±Ì æ±æπ˙£¨1±Ì æπÕ”∂π˙$/;"	m	struct:stTransCrystalPropertyUserCmd::__anon233
type	tmpcode/commond.h	/^        BYTE      type;      \/\/Ã¯ŒË¿‡–Õ£∫µ•»À£¨À´»À£¨£®PK£¨±»»¸µ»µ»..±£¡Ù£©.$/;"	m	struct:t_MapDanceData
type	tmpcode/commond.h	/^        BYTE    type;         $/;"	m	struct:stTimeCountUserCmd
type	tmpcode/commond.h	/^        BYTE   type;\/\/∑µªÿ¿‡–Õ£¨0±Ì æ «π€≤Ï»´…Ì◊∞±∏∑µªÿ£¨1±Ì æπ€≤Ï»ÀŒÔ∑µªÿ$/;"	m	struct:stShowEquipUserPropertyUserCmd
type	tmpcode/commond.h	/^        BYTE  type;\/\/£∞±Ì æ…œœﬂ∑¢ÀÕ,1±Ì æ«Î«Û∑¢ÀÕ$/;"	m	struct:stReturnExchangeCardIDTradeUserCmd
type	tmpcode/commond.h	/^        BYTE type;                              \/\/0: ±æ÷‹£¨ 1£∫…œ÷‹$/;"	m	struct:rtBlessListUserCmd
type	tmpcode/commond.h	/^        BYTE type;                      \/\/\/ ÷∞ŒÒ≤Ÿ◊˜¿‡–Õ(»Œ√¸ªπ «Ω‚≥˝)$/;"	m	struct:stUnionSetPositionCmd
type	tmpcode/commond.h	/^        BYTE type;          \/\/«Î«Û0\/1; ”¶¥2; 0±Ì æ–Ë«Û∑¢ÀÕ»ŒŒÒ√Ë ˆ$/;"	m	struct:showPeronTaskUserCmd
type	tmpcode/commond.h	/^        BYTE type;   \/\/ 1±Ì æ ¶∏µ∏¯ÕΩµ‹∑¢œ˚œ¢(ÕÊº““—”–ÕΩµ‹), 2±Ì æÕΩµ‹∏¯ ¶∏µ∑¢œ˚œ¢(ÕΩµ‹“—”– ¶∏µ)$/;"	m	struct:recommendTaskUserCmd
type	tmpcode/commond.h	/^        BYTE type; \/\/ 0£¨º“◊ÂÔ⁄≥µ£¨1£¨∆’Õ®Ô⁄≥µ$/;"	m	struct:stProtectSeptGuardCmd
type	tmpcode/commond.h	/^        BYTE type; \/\/CLIENTOPT_VIEW ”Ω«£¨CLIENTOPT_SYSœµÕ≥…Ë∂®£¨ CLIENTOPT_SHORTCUTøÏΩ›¡–…Ë∂®£¨CLIENTOPT_HOTKEY»»º¸…Ë∂®$/;"	m	struct:stClientKOKOption
type	tmpcode/commond.h	/^        BYTE type; \/\/SVROPT_CHANNEL¡ƒÃÏ∆µµ¿ø™πÿ£¨SVROPT_PERSONALSW∏ˆ»À…Ë∂®ø™πÿ$/;"	m	struct:stServerKOKOption
type	tmpcode/commond.h	/^        BYTE type; \/\/ π”√ ≤√¥«Æ±“≥‰$/;"	m	struct:stChargeAccelcmdPropUserCmd
type	tmpcode/commond.h	/^        BYTE type;\/\/0±Ì æπ‹¿ÌΩÁ√Ê…æ≥˝£¨£±±Ì æ◊‘º∫…æ≥˝$/;"	m	struct:stDisMerceneryCountryCmd
type	tmpcode/commond.h	/^        BYTE type;\/\/0±Ì æÕ¨“‚πÕ”∂°¢1±Ì æΩ‚≥˝πÕ”∂°¢2±Ì æªÿæ¯…Í«Î$/;"	m	struct:stReturnMerceryManagerCountryCmd
type	tmpcode/commond.h	/^        BYTE type;\/\/æËœ◊÷÷¿‡:0-Ω®…Ë∑—£¨1-æËœ◊µΩÕ≈¿˚»Û°£$/;"	m	struct:stContributeMoneyUnionCmd
type	tmpcode/commond.h	/^        BYTE type;\/\/Ã¯ŒË¿‡–Õ£∫µ•»À£¨À´»À£¨£®PK£¨±»»¸µ»µ»..±£¡Ù£©.$/;"	m	struct:stSaveDance
type	tmpcode/commond.h	/^        DRAGON_DATA_TYPE type;$/;"	m	struct:stNotifyDataChangeDragonUserCmd
type	tmpcode/commond.h	/^        DWORD type;                      \/\/ŒÔ∆∑¿‡–Õ ,≤ªø…ƒ‹Œ™0$/;"	m	struct:stQueryAuction
type	tmpcode/commond.h	/^        WORD type; \/\/∞¸π¸±Í ∂ 0-÷˜∞¸π¸, 1-µ⁄“ª≤÷ø‚, 2-µ⁄∂˛≤÷ø‚$/;"	m	struct:stSortObjectPropertyUserCmd
type	tmpcode/commond.h	/^        petType type;$/;"	m	struct:stChangeHorseNameCmd
type	tmpcode/commond.h	/^     DWORD type;  \/\/(0 (s->c ,—ØŒ £©$/;"	m	struct:stRequestYingZhanUserCmd
type	tmpcode/commond.h	/^    BYTE    type;           \/**<¿‡–Õ enumMapDataType*\/$/;"	m	struct:stSetStateMapScreenUserCmd
type	tmpcode/commond.h	/^    BYTE    type;   $/;"	m	struct:stNotifyChangeJobOrZhuanzhiCmd
type	tmpcode/commond.h	/^    BYTE    type;   \/\/µΩº∆ ±¿‡–Õ£∫∆Ô¬Ì£¨ªª◊∞±∏ ....$/;"	m	struct:stNotifyCountDownUserCmd
type	tmpcode/commond.h	/^    BYTE    type;$/;"	m	struct:stAccekKeyPropertyUserCmd
type	tmpcode/commond.h	/^    BYTE  type;      \/\/0 …˝–« 1 …˝‘¬$/;"	m	struct:stUseRageNumUpgradeUserCmd
type	tmpcode/commond.h	/^    BYTE  type;      \/\/0 –« 1 ‘¬$/;"	m	struct:stUseStarStoneUserCmd
type	tmpcode/commond.h	/^    BYTE  type;     \/\/0«Î«Û≤Èø¥£ª1«Î«ÛΩªªªŒÔ∆∑$/;"	m	struct:stRequestNpcGoodsCmd
type	tmpcode/commond.h	/^    BYTE  type;   \/\/” º˛¿‡–Õ   0Œ™npc” £¨1Œ™ÀÊ…Ì” $/;"	m	struct:stGetListMail
type	tmpcode/commond.h	/^    BYTE  type;  \/\/«ø»ıΩÁ¿‡–Õ  0±Ì æ«øΩÁ,1±Ì æ»ıΩÁ,2±Ì æπÕ”∂±¯…Í«Î≤Èø¥«øΩÁ$/;"	m	struct:stReturnStrongWeakCountriesUserCmd
type	tmpcode/commond.h	/^    BYTE type;		\/\/ 0 : ÷±Ω”πÿ±’  1 : µØ≥ˆ∞¥≈•$/;"	m	struct:rtPictureHelpUserCmd
type	tmpcode/commond.h	/^    BYTE type;                              \/\/0: ±æ÷‹£¨ 1£∫…œ÷‹$/;"	m	struct:rtTempListUserCmd
type	tmpcode/commond.h	/^    BYTE type;                              \/\/0∑ø÷˜—˚«Î£ª1∂”≥§¥¥Ω®∑øº‰ ±œÚ∂”‘±∑¢ÀÕ—˚«Î$/;"	m	struct:stInviteQuestRoomUserCmd
type	tmpcode/commond.h	/^    BYTE type;                      \/\/0: ±æ÷‹£¨ 1£∫…œ÷‹$/;"	m	struct:rqTempListUserCmd
type	tmpcode/commond.h	/^    BYTE type;                      \/\/1¥˙±Ì≥«÷˜Õ¨“‚£¨0¥˙±Ìæ‹æ¯$/;"	m	struct:stTransferCountryKingToCityMasterCmd
type	tmpcode/commond.h	/^    BYTE type;              \/\/type:1,≥ËŒÔæ∫≤¬,2:ΩÁ”Úæ∫≤¬$/;"	m	struct:stNofityBetResultInChallengeDragonUserCmd
type	tmpcode/commond.h	/^    BYTE type;              \/\/∑÷Ω‚¿‡–Õ£∫0£¨ƒ¨»œ «∑÷Ω‚◊¯∆Ô◊‘¥¯µƒ£ª1£¨∑÷Ω‚∑≈»Îµƒ–ƒªÍµ¿æﬂ$/;"	m	struct:stBreakHorseSoulUserCmd
type	tmpcode/commond.h	/^    BYTE type;              \/\/◊¯∆Ô¿‡–Õ,∑÷Œ™£∫0 ±º‰≤ªø…ª÷∏¥£ª1~9∆‰À˚µƒ»Á¬Ì°¢ƒÒ°¢¡˙µ»£¨ ±º‰≥‰÷µ ±”√$/;"	m	struct:t_HorseData
type	tmpcode/commond.h	/^    BYTE type;      \/\/ ” º˛¿‡–Õ$/;"	m	struct:stAddListMail
type	tmpcode/commond.h	/^    BYTE type;      \/\/0, ß∞‹£¨1£¨≥…π¶$/;"	m	struct:stUseHorseTaoDiUserCmd
type	tmpcode/commond.h	/^    BYTE type;      \/\/0≤È—Ø ß∞‹£ª1≥ı º¬Ì≥µŒÔ∆∑£ª2≤È—ØŒÔ∆∑£ª3ΩªªªŒÔ∆∑£ª4Ωªªª ß∞‹$/;"	m	struct:stResultCheckGoodsCmd
type	tmpcode/commond.h	/^    BYTE type;      \/\/0øÕªß∂À“™µØ≥ˆ¥ÛÃ¸–≈œ¢£ª1øÕªß∂À◊‘––≈–∂œ£¨»Ù¥ÛÃ¸UI“—‘⁄‘Ú∏¸–¬£¨≤ª‘Ÿ‘Ú≤ªœ‘ æ$/;"	m	struct:stRoomInfoQuestRoomUserCmd
type	tmpcode/commond.h	/^    BYTE type;      \/\/1±Ì æœ‘ æŒÔ∆∑¿∏£ª0±Ì æ«Â¿ÌŒÔ∆∑¿∏$/;"	m	struct:stControlGoodsColumeCmd
type	tmpcode/commond.h	/^    BYTE type;      \/\/∑≈÷√¿‡–Õ 1°¢∑≈÷√¬Ìæ«÷–µƒ◊¯∆Ô£ª2°¢∑≈÷√¬Ì≈∆$/;"	m	struct:stHorseMaterialEvolveResultUserCmd
type	tmpcode/commond.h	/^    BYTE type;   \/\/0 ∏ƒ±‰—’…´ 1 »•µÙ±¶ Ø$/;"	m	struct:stUseElecHammerUserCmd
type	tmpcode/commond.h	/^    BYTE type;   \/\/«ø»ıΩÁ¿‡–Õ  0±Ì æ«øΩÁ,1±Ì æ»ıΩÁ,2±Ì æπÕ”∂±¯…Í«Î≤Èø¥«øΩÁ$/;"	m	struct:stRequestStrongWeakCountriesUserCmd
type	tmpcode/commond.h	/^    BYTE type;  \/\/0£¨∆’Õ®ŒÔ∆∑∫œ≥…£¨1£¨‘ø≥◊∫Õ…Ò Ø∫œ≥…$/;"	m	struct:stComposeItemPropertyUserCmd
type	tmpcode/commond.h	/^    BYTE type;  \/\/0£¨∆’Õ®ŒÔ∆∑∫œ≥…£¨1£¨‘ø≥◊∫Õ…Ò Ø∫œ≥…$/;"	m	struct:stNpcComposeItemPropertyUserCmd
type	tmpcode/commond.h	/^    BYTE type; \/\/À¢–¬≤ªÕ¨¿‡–Õ$/;"	m	struct:refreshUserDataCmd
type	tmpcode/commond.h	/^    BYTE type;$/;"	m	struct:rqEquipSortListUserCmd
type	tmpcode/commond.h	/^    BYTE type;$/;"	m	struct:rqRegEquipSortListUserCmd
type	tmpcode/commond.h	/^    BYTE type;$/;"	m	struct:rtEquipSortListUserCmd
type	tmpcode/commond.h	/^    BYTE type;$/;"	m	struct:stResponToGuardHelpUserCmd
type	tmpcode/commond.h	/^    BYTE type;\/\/$/;"	m	struct:AchievementItem
type	tmpcode/commond.h	/^    BYTE type;\/\/0-◊‘…Ì«Î«Û£ª1-±»Àπ€≤Ïµ√µΩ£ª4-≤Èø¥◊‘º∫√˚∆¨$/;"	m	struct:rtAchievementCmd
type	tmpcode/commond.h	/^    BYTE type;\/\/1£¨ÃÏø’≥«∑…¡˙£ª2£¨∑…¡˙œøπ»∑…¡˙$/;"	m	struct:stDragonFeilongRideCmd
type	tmpcode/commond.h	/^    BYTE type;\/\/type=1±Ì æø™ ºÀ≤“∆ÀÆæßµƒ¿‰»¥,–Ë“™µƒºÃ–¯ÃÌº”$/;"	m	struct:stStartColdDownPropertyUserCmd
type	tmpcode/commond.h	/^    BYTE type;\/\/∑≈÷√¿‡–Õ: 1°¢∑≈÷√¬Ìæ«÷–µƒ◊¯∆Ô£ª2°¢∑≈÷√¬Ì≈∆$/;"	m	struct:stPushHorseIntoEvolveMaterialUserCmd
type	tmpcode/commond.h	/^    DWORD type; \/\/task 16071: 1~6$/;"	m	struct:stJieZhanLive
type	tmpcode/commond.h	/^    DWORD type;\/\/0∑µªÿÕº–Œ—È÷§µΩøÕªß∂À 1øÕªß∂À∑¢Õº–ŒXY…œ¿¥$/;"	m	struct:stSendMail
type	tmpcode/commond.h	/^    WORD type;       \/\/∂˜¥Õ¿‡–Õ, »Á9–«,7‘¬µ»$/;"	m	struct:t_RewardInfo
type	tmpcode/commond.h	/^    WORD type; \/\/2 3 4 ±Ì æ∑¢ÀÕµ»º∂typeµƒø…—ßººƒ‹$/;"	m	struct:stRefreshCanLearnFakeSkillLingQiUserCmd
type	tmpcode/commond.h	/^    enumPopEffect   type;$/;"	m	struct:stObjectHpMpPopUserCmd
type	tmpcode/commond.h	/^    petType type;$/;"	m	struct:stHorseDataPetCmd
type	tmpcode/commond.h	/^  BYTE          type;   \/\/  ”¥∞¿‡–Õ$/;"	m	struct:stPopupUI
typeWeight	ScenesServer/zCard.cpp	/^DWORD CardSlot::typeWeight(WORD type)$/;"	f	class:CardSlot
typeWeight	ScenesServer/zObject.cpp	/^DWORD Package::typeWeight(WORD type)$/;"	f	class:Package
uattackspeed	ScenesServer/ScenePk.h	/^      SWORD uattackspeed;  \/\/ÊîªÂáªÈÄüÂ∫¶ÊèêÈ´òÁôΩÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
uclient	base/SceneCommand.h	/^      DWORD uclient;$/;"	m	struct:Cmd::Scene::t_Usleep_GateScene
udef	ScenesServer/ScenePk.h	/^      SWORD udef;      \/\/ Èò≤Âæ°ÊèêÂçáÂõ∫ÂÆöÂÄºÔºàÁâ©ÁêÜÂíåÊ≥ïÊúØÈÉΩÂçáÔºâ$/;"	m	struct:SkillState::__anon155::__anon156
uid	BillServer/BillCallback.h	/^  DWORD  uid;                                        \/\/UID $/;"	m	struct:BillData
uid	base/UserCommand.h	/^      DWORD   uid;                    \/\/UID$/;"	m	struct:Cmd::UserServer::t_cmd_mcard
uid	base/UserCommand.h	/^      DWORD   uid;                  \/\/UID$/;"	m	struct:Cmd::UserServer::t_cmd_consume
uid	base/UserCommand.h	/^      DWORD   uid;                  \/\/UID$/;"	m	struct:Cmd::UserServer::t_cmd_pcard
uid	base/UserCommand.h	/^      DWORD  uid;            \/\/UID$/;"	m	struct:Cmd::UserServer::t_cmd_qbalance
uid	base/UserCommand.h	/^      DWORD uid;                      \/\/uid$/;"	m	struct:Cmd::UserServer::t_cmd_fillin
uid	base/UserCommand.h	/^      int     uid;$/;"	m	struct:Cmd::UserServer::t_cmd_ret
uid	base/zType.h	/^    DWORD uid;$/;"	m	union:t_NewLoginSession::__anon10
ulogger	FLServer/FLServer.cpp	/^zLogger *FLService::ulogger = NULL;$/;"	m	class:FLService
ulogger	FLServer/FLServer.h	/^	static zLogger *ulogger;$/;"	m	class:FLService
ulogger	roleRegServer/roleRegServer.cpp	/^zLogger *roleRegService::ulogger = NULL;$/;"	m	class:roleRegService
ulogger	roleRegServer/roleRegServer.h	/^	static zLogger *ulogger;$/;"	m	class:roleRegService
umdam	ScenesServer/ScenePk.h	/^      SWORD umdam;    \/\/Ê≥ïÊúØÊîªÂáªÂ¢ûÂä†Âõ∫ÂÆöÊï∞ÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
umdamp	ScenesServer/ScenePk.h	/^      SWORD umdamp;    \/\/Ê≥ïÊúØÊîªÂáªÂ¢ûÂä†ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
umdef	ScenesServer/ScenePk.h	/^      SWORD umdef;    \/\/Ê≥ïÊúØÈò≤Âæ°Â¢ûÂä†Âõ∫ÂÆöÊï∞ÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
umdefp	ScenesServer/ScenePk.h	/^      SWORD umdefp;    \/\/Ê≥ïÊúØÈò≤Âæ°Â¢ûÂä†ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
unChaseUser	ScenesServer/SceneNpc.cpp	/^void SceneNpc::unChaseUser()$/;"	f	class:SceneNpc
unReging	ScenesServer/SceneUser.h	/^    bool unReging;$/;"	m	struct:SceneUser
uncheckCountryProcess	SessionServer/SessionServer.h	/^    bool uncheckCountryProcess;$/;"	m	class:SessionService
uncompressSaveData	ScenesServer/SceneUser.cpp	/^bool uncompressSaveData(SceneUser *pUser,const BYTE *data,const DWORD dataSize,BYTE * petData) $/;"	f
unionCaption	base/SessionCommand.h	/^      char unionCaption[MAX_NAMESIZE+1];$/;"	m	struct:Cmd::Session::t_sendUserRelationID
unionCountry	tmpcode/commond.h	/^		DWORD unionCountry;$/;"	m	struct:stReturnCountryTax::CityInfo
unionID	base/Command.h	/^                DWORD   unionID;                                        \/\/”∂±¯Õ≈ID $/;"	m	struct:Cmd::t_GetSortList::__anon127
unionID	tmpcode/commond.h	/^                DWORD   unionID;                                        \/\/”∂±¯Õ≈ID $/;"	m	struct:t_GetSortList::__anon241
unionID	tmpcode/commond.h	/^        DWORD unionID;$/;"	m	struct:stReqEnterUnionShop
unionID	tmpcode/commond.h	/^        DWORD unionID;$/;"	m	struct:stUnionShop
unionLevel	tmpcode/commond.h	/^		DWORD unionLevel;$/;"	m	struct:stUnionShop
unionLevel	tmpcode/commond.h	/^	DWORD unionLevel; \/\/≤ª¥Û”⁄$/;"	m	struct:stRetUnionInfo
unionMaster	ScenesServer/SceneUser.h	/^    bool  unionMaster; \/\/ ÊòØÂê¶‰∏∫Â∏Æ‰∏ª$/;"	m	struct:SceneUser
unionMaster	tmpcode/commond.h	/^		char unionMaster[MAX_NAMESIZE];$/;"	m	struct:stReturnCountryTax::CityInfo
unionMaster	tmpcode/commond.h	/^	char unionMaster[MAX_NAMESIZE + 1];$/;"	m	struct:stRetCurrentCityTax
unionName	ScenesServer/SceneUser.h	/^    char  unionName[MAX_NAMESIZE];          \/\/ Â∏Æ‰ºöÂêçÁß∞$/;"	m	struct:SceneUser
unionName	base/Command.h	/^	char	unionName[MAX_NAMESIZE+1];	\/\/æ¸Õ≈√˚$/;"	m	struct:Cmd::ListData
unionName	base/Command.h	/^    char unionName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stRtnCityOwnerListCmd::__anon115
unionName	base/Command.h	/^  char   unionName[MAX_NAMESIZE];    \/\/ Â∑•‰ºöÂêçÁß∞$/;"	m	struct:Cmd::stAddMemberToUnionCmd
unionName	base/Command.h	/^  char  unionName[MAX_NAMESIZE];         \/\/ Â∏Æ‰ºöÂêçÁß∞$/;"	m	struct:Cmd::stUnionBaseInfoCmd
unionName	base/Command.h	/^  char  unionName[MAX_NAMESIZE];         \/\/ Â∏Æ‰ºöÂêçÁß∞$/;"	m	struct:Cmd::stUnionSortInfo
unionName	base/Command.h	/^  char  unionName[MAX_NAMESIZE];  \/\/ ÊâÄÂ±ûÂ∏Æ‰ºö$/;"	m	struct:Cmd::stRelation
unionName	base/Command.h	/^  char  unionName[MAX_NAMESIZE];  \/\/ ÊâÄÂ±ûÂ∏Æ‰ºö$/;"	m	struct:Cmd::stRelationStatusCmd
unionName	base/Command.h	/^  char unionName [MAX_NAMESIZE];$/;"	m	struct:Cmd::stUnionRecord
unionName	base/Command.h	/^  char unionName [MAX_NAMESIZE];$/;"	m	struct:Cmd::stUnionVoteRecord
unionName	base/Command.h	/^  char unionName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stVoteListUnionCmd
unionName	base/Command.h	/^  char unionName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stVoteUnionCmd
unionName	base/SessionCommand.h	/^	char unionName[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_RelationAddFriend
unionName	tmpcode/commond.h	/^		char unionName[MAX_NAMESIZE];$/;"	m	struct:stReturnCountryTax::CityInfo
unionName	tmpcode/commond.h	/^	char	unionName[MAX_NAMESIZE+1];	\/\/æ¸Õ≈√˚$/;"	m	struct:ListData
unionName	tmpcode/commond.h	/^	char 	unionName[MAX_NAMESIZE];    \/\/ π§ª·√˚≥∆$/;"	m	struct:stAddMemberToUnionCmd
unionName	tmpcode/commond.h	/^	char  unionName[MAX_NAMESIZE];         \/\/ ”∂±¯Õ≈√˚≥∆$/;"	m	struct:stUnionSortInfo
unionName	tmpcode/commond.h	/^	char  unionName[MAX_NAMESIZE];  \/\/ À˘ Ù”∂±¯Õ≈$/;"	m	struct:stRelation
unionName	tmpcode/commond.h	/^	char  unionName[MAX_NAMESIZE];  \/\/ À˘ Ù”∂±¯Õ≈$/;"	m	struct:stRelationStatusCmd
unionName	tmpcode/commond.h	/^	char unionName[MAX_NAMESIZE + 1];$/;"	m	struct:stRetCurrentCityTax
unionName	tmpcode/commond.h	/^	char unionName[MAX_NAMESIZE];   \/\/≥–◊‚∑Ω”∂±¯Õ≈√˚≥∆$/;"	m	struct:ResidentHireList
unionName	tmpcode/commond.h	/^	char unionName[MAX_NAMESIZE];$/;"	m	struct:stReturnCityTax
unionName	tmpcode/commond.h	/^	char unionName[MAX_NAMESIZE];$/;"	m	struct:stUnionResidentHireList
unionName	tmpcode/commond.h	/^        char unionName[MAX_NAMESIZE+1];$/;"	m	struct:stUnionShop
unionName	tmpcode/commond.h	/^    char  unionName[MAX_NAMESIZE+1];$/;"	m	struct:stZhongLiCityDist
unionName	tmpcode/commond.h	/^    char unionName[MAX_NAMESIZE];   \/\/’º¡Ï”∂±¯Õ≈√˚◊÷$/;"	m	struct:CityInfo
unionid	SessionServer/Session.h	/^    DWORD unionid;$/;"	m	class:UserSession
unionid	base/CharBase.h	/^  DWORD unionid;            \/\/\/ Â∏Æ‰ºöID$/;"	m	struct:CharBase
unionid	tmpcode/commond.h	/^	DWORD unionid;                         \/\/ Õ≈id $/;"	m	struct:stUnionBaseInfoCmd
unionid	tmpcode/commond.h	/^        DWORD unionid;            \/\/∞Ôª·ID$/;"	m	struct:UnionCityDareItem
unionid	tmpcode/commond.h	/^        DWORD unionid;  \/\/”∂±¯Õ≈id$/;"	m	struct:CardMainData
unionmaster	base/SessionCommand.h	/^      bool  unionmaster;    \/\/\/ ÊòØÂê¶‰∏∫Â∏Æ‰∏ª$/;"	m	struct:Cmd::Session::t_sendUserRelationID
unionname	tmpcode/commond.h	/^	char	unionname[MAX_NAMESIZE];						\/\/ ∑ø÷˜À˘‘⁄Ÿ∏±¯Õ≈µƒ√˚≥∆$/;"	m	struct:stHomeItem
uniqueAdd	BillServer/BillTask.cpp	/^bool BillTask::uniqueAdd()$/;"	f	class:BillTask
uniqueAdd	BillServer/BillTaskManager.cpp	/^bool BillTaskManager::uniqueAdd(BillTask *task)$/;"	f	class:BillTaskManager
uniqueAdd	FLServer/LoginTask.cpp	/^bool LoginTask::uniqueAdd()$/;"	f	class:LoginTask
uniqueAdd	FLServer/ServerManager.cpp	/^bool ServerManager::uniqueAdd(ServerTask *task)$/;"	f	class:ServerManager
uniqueAdd	FLServer/ServerTask.cpp	/^bool ServerTask::uniqueAdd()$/;"	f	class:ServerTask
uniqueAdd	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::uniqueAdd()$/;"	f	class:GatewayTask
uniqueAdd	GatewayServer/GatewayTaskManager.cpp	/^bool GatewayTaskManager::uniqueAdd(GatewayTask *task)$/;"	f	class:GatewayTaskManager
uniqueAdd	ScenesServer/SceneTask.cpp	/^bool SceneTask::uniqueAdd()$/;"	f	class:SceneTask
uniqueAdd	ScenesServer/SceneTaskManager.cpp	/^bool SceneTaskManager::uniqueAdd(SceneTask *task)$/;"	f	class:SceneTaskManager
uniqueAdd	SessionServer/SessionTask.cpp	/^bool SessionTask::uniqueAdd()$/;"	f	class:SessionTask
uniqueAdd	SessionServer/SessionTaskManager.cpp	/^bool SessionTaskManager::uniqueAdd(SessionTask *task)$/;"	f	class:SessionTaskManager
uniqueAdd	SuperServer/ServerManager.cpp	/^bool ServerManager::uniqueAdd(ServerTask *task)$/;"	f	class:ServerManager
uniqueAdd	SuperServer/ServerTask.cpp	/^bool ServerTask::uniqueAdd()$/;"	f	class:ServerTask
uniqueAdd	base/zTCPTask.h	/^	virtual bool uniqueAdd()$/;"	f	class:zTCPTask
uniqueGet	ScenesServer/SceneTaskManager.cpp	/^SceneTask *SceneTaskManager::uniqueGet(WORD wdServerID)$/;"	f	class:SceneTaskManager
uniqueID	FLServer/LoginTask.cpp	/^DWORD LoginTask::uniqueID = 0;$/;"	m	class:LoginTask
uniqueID	FLServer/LoginTask.h	/^	static DWORD uniqueID;$/;"	m	class:LoginTask
uniqueID	ScenesServer/SceneNpc.h	/^  static zUniqueDWORDID uniqueID;$/;"	m	class:SceneNpc
uniqueID	tmpcode/commond.h	/^	WORD uniqueID;  \/\/Œ®“ªid$/;"	m	struct:stDelDecorationCmd
uniqueID	tmpcode/commond.h	/^	WORD uniqueID;$/;"	m	struct:stMoveDecorationCmd
uniqueID	tmpcode/commond.h	/^	WORD uniqueID;$/;"	m	struct:stNotifyDecorationUnionID
uniqueRemove	BillServer/BillTask.cpp	/^bool BillTask::uniqueRemove()$/;"	f	class:BillTask
uniqueRemove	BillServer/BillTaskManager.cpp	/^bool BillTaskManager::uniqueRemove(BillTask *task)$/;"	f	class:BillTaskManager
uniqueRemove	FLServer/LoginTask.cpp	/^bool LoginTask::uniqueRemove()$/;"	f	class:LoginTask
uniqueRemove	FLServer/ServerManager.cpp	/^bool ServerManager::uniqueRemove(ServerTask *task)$/;"	f	class:ServerManager
uniqueRemove	FLServer/ServerTask.cpp	/^bool ServerTask::uniqueRemove()$/;"	f	class:ServerTask
uniqueRemove	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::uniqueRemove()$/;"	f	class:GatewayTask
uniqueRemove	GatewayServer/GatewayTaskManager.cpp	/^bool GatewayTaskManager::uniqueRemove(GatewayTask *task)$/;"	f	class:GatewayTaskManager
uniqueRemove	ScenesServer/SceneTask.cpp	/^bool SceneTask::uniqueRemove()$/;"	f	class:SceneTask
uniqueRemove	ScenesServer/SceneTaskManager.cpp	/^bool SceneTaskManager::uniqueRemove(SceneTask *task)$/;"	f	class:SceneTaskManager
uniqueRemove	SessionServer/SessionTask.cpp	/^bool SessionTask::uniqueRemove()$/;"	f	class:SessionTask
uniqueRemove	SessionServer/SessionTaskManager.cpp	/^bool SessionTaskManager::uniqueRemove(SessionTask *task)$/;"	f	class:SessionTaskManager
uniqueRemove	SuperServer/ServerManager.cpp	/^bool ServerManager::uniqueRemove(ServerTask *task)$/;"	f	class:ServerManager
uniqueRemove	SuperServer/ServerTask.cpp	/^bool ServerTask::uniqueRemove()$/;"	f	class:ServerTask
uniqueRemove	base/zTCPTask.h	/^	virtual bool uniqueRemove()$/;"	f	class:zTCPTask
uniqueVerified	base/zTCPTask.h	/^	bool uniqueVerified;              \/**<  «∑ÒÕ®π˝¡ÀŒ®“ª–‘—È÷§ *\/$/;"	m	class:zTCPTask
uniqueVerify	SuperServer/ServerManager.cpp	/^bool ServerManager::uniqueVerify(const WORD wdServerID)$/;"	f	class:ServerManager
unitaryBattleKeepTime	ScenesServer/SceneEntryPk.h	/^    QWORD unitaryBattleKeepTime; \/\/‰∏ÄÂÖÉÈòµÊ≥ïÊåÅÁª≠Êó∂Èó¥$/;"	m	struct:SceneEntryPk
unitarybattle	ScenesServer/ScenePk.h	/^      SWORD unitarybattle; \/\/‰∏ÄÂÖÉÈòµÊ≥ïÊäïÈÄÅÂ∞èÊäÄËÉΩÂà∞ÈòüÈïøÊ≠£Âú®ÊîªÂáªÁöÑÊïå‰∫∫Ë∫´‰∏äÔºåÊ≠§‰∏∫ÊäïÈÄÅÁöÑÊäÄËÉΩID$/;"	m	struct:SkillState::__anon155::__anon156
unknownPower	tmpcode/commond.h	/^			WORD unknownPower;              \/\/ Œﬁ√˚÷Æ¡¶$/;"	m	struct:t_MainUserData::__anon220::__anon221
unloadAllScene	ScenesServer/SceneManager.cpp	/^void SceneManager::unloadAllScene()$/;"	f	class:SceneManager
unloadScene	ScenesServer/SceneManager.cpp	/^void SceneManager::unloadScene(Scene * &scene)$/;"	f	class:SceneManager
unloadScene	ScenesServer/SceneManager.cpp	/^void SceneManager::unloadScene(std::string &name)$/;"	f	class:SceneManager
unloadScript	ScenesServer/SceneNpcAI.cpp	/^void NpcAIController::unloadScript()$/;"	f	class:NpcAIController
unlock	base/zMutex.h	/^	inline void unlock()$/;"	f	class:zMutex
unlock	base/zRWLock.h	/^	inline void unlock()$/;"	f	class:zRWLock
unlock	base/zUser.h	/^	void unlock()$/;"	f	struct:zUser
unreg	GatewayServer/GateUser.cpp	/^void GateUser::unreg(bool out)$/;"	f	class:GateUser
unreg	ScenesServer/SceneUser.cpp	/^bool SceneUser::unreg(bool MoveScene)$/;"	f	class:SceneUser
unzip_size	base/zSocket.h	34;"	d
uom	ScenesServer/zObject.h	/^    UserObjectM uom;$/;"	m	class:Packages
upLevel	SessionServer/CSort.cpp	/^void CSortM::upLevel(UserSession *pUser)$/;"	f	class:CSortM
upNum	base/zMisc.h	/^    unsigned int upNum;$/;"	m	struct:odds_t
up_id	base/Command.h	/^    DWORD up_id;  \/\/ÂæÖÊâìÈÄ†Áâ©ÂìÅID,Áâ©ÂìÅÂîØ‰∏Äid$/;"	m	struct:Cmd::stFoundItemPropertyUserCmd
up_id	base/Command.h	/^  DWORD up_id; \/\/ÂæÖÂàÜËß£Ë£ÖÂ§áid,Áâ©ÂìÅÂîØ‰∏Äid$/;"	m	struct:Cmd::stDecomposePropertyUserCmd
up_id	base/Command.h	/^  DWORD up_id; \/\/ÂæÖÊâìÂ≠îË£ÖÂ§áid,Áâ©ÂìÅÂîØ‰∏Äid$/;"	m	struct:Cmd::stHolePropertyUserCmd
up_id	tmpcode/commond.h	/^		DWORD up_id; \/\/¥˝¥Úø◊◊∞±∏id, ŒÔ∆∑Œ®“ªid$/;"	m	struct:stHolePropertyUserCmd
up_id	tmpcode/commond.h	/^	DWORD   up_id;                          \/\/¥˝¥Ú‘ÏŒÔ∆∑ID(µ¿æﬂ±Ì÷–)$/;"	m	struct:stFoundSpecialItemPropertyUserCmd
up_id	tmpcode/commond.h	/^	DWORD up_id;		\/\/¥˝¥Ú‘ÏŒÔ∆∑ID, ŒÔ∆∑Œ®“ªid$/;"	m	struct:stHouseFurnitureItemPropertyUserCmd
up_id	tmpcode/commond.h	/^	DWORD up_id;	\/\/¥˝¥Ú‘ÏŒÔ∆∑ID, ŒÔ∆∑Œ®“ªid$/;"	m	struct:stFoundItemPropertyUserCmd
up_id	tmpcode/commond.h	/^	DWORD up_id;    \/\/¥˝¥Ú‘ÏŒÔ∆∑ID, ŒÔ∆∑Œ®“ªid$/;"	m	struct:stHouseRoomDeskItemPropertyUserCmd
up_id	tmpcode/commond.h	/^        DWORD    up_id;         \/\/“™º”–«µƒ◊∞±∏Œ®“ªid              $/;"	m	struct:stNpcUpgradePropertyUserCmd
up_id	tmpcode/commond.h	/^        DWORD up_id;    \/\/¥˝¥Ú‘ÏŒÔ∆∑ID$/;"	m	struct:stFoundItemSkillStore
up_id	tmpcode/commond.h	/^        DWORD up_id;   \/\/¥˝œ‚«∂◊∞±∏id,ŒÔ∆∑Œ®“ªid$/;"	m	struct:stEnchasePropertyUserCmd
up_id	tmpcode/commond.h	/^    DWORD    up_id;     \/\/“™º”–«µƒ◊∞±∏µƒŒÔ∆∑Œ®“ªid              $/;"	m	struct:stUseScrollUpPropertyUserCmd
up_id	tmpcode/commond.h	/^    DWORD up_id;    \/\/¥˝¥Ú‘ÏŒÔ∆∑ID, ŒÔ∆∑Œ®“ªid$/;"	m	struct:stHorseSoulItemPropertyUserCmd
up_id	tmpcode/commond.h	/^    DWORD up_id;   \/\/¥˝œ‚«∂◊∞±∏id,ŒÔ∆∑Œ®“ªid$/;"	m	struct:stPurplePropertyUserCmd
up_id	tmpcode/commond.h	/^    DWORD up_id;   \/\/◊∞±∏id,ŒÔ∆∑Œ®“ªid$/;"	m	struct:stPurpleRemovePropertyUserCmd
up_id	tmpcode/commond.h	/^    DWORD up_id; \/\/¥˝∑÷Ω‚◊∞±∏id, ŒÔ∆∑Œ®“ªid$/;"	m	struct:stDecomposePropertyUserCmd
upallattrib	ScenesServer/ScenePk.h	/^      SWORD upallattrib; \/\/ ÊèêÂçáÊâÄÊúâÂ±ûÊÄßÊï∞ÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
upattribcon	ScenesServer/ScenePk.h	/^      SWORD upattribcon; \/\/ ÊèêÂçá‰ΩìË¥®Â±ûÊÄßÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
upattribdex	ScenesServer/ScenePk.h	/^      SWORD upattribdex; \/\/ ÊèêÂçáÊïèÊç∑Â±ûÊÄßÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
upattribint	ScenesServer/ScenePk.h	/^      SWORD upattribint; \/\/ ÊèêÂçáÊô∫ÂäõÂ±ûÊÄßÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
upattribmen	ScenesServer/ScenePk.h	/^      SWORD upattribmen; \/\/ ÊèêÂçáÁ≤æÁ•ûÂ±ûÊÄßÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
upattribstr	ScenesServer/ScenePk.h	/^      SWORD upattribstr; \/\/ ÊèêÂçáÂäõÈáèÂ±ûÊÄßÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
upattribute	ScenesServer/ScenePk.h	/^      SWORD upattribute;  \/\/Â±ûÊÄßÁÇπÂ¢ûÂä†$/;"	m	struct:SkillState::__anon155::__anon156
upcon	ScenesServer/ScenePk.h	/^      SWORD upcon; \/\/ÊèêÂçá‰ΩìË¥®$/;"	m	struct:SkillState::__anon155::__anon156
updam	ScenesServer/ScenePk.h	/^      SWORD updam;    \/\/Áâ©ÁêÜÊîªÂáªÂ¢ûÂä†Âõ∫ÂÆöÊï∞ÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
updamp	ScenesServer/ScenePk.h	/^      SWORD updamp;    \/\/Áâ©ÁêÜÊîªÂáªÂ¢ûÂä†ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
update	BillServer/BillCache.cpp	/^void BillCache::update(const zTime &ct)$/;"	f	class:BillCache
update	BillServer/BillManager.cpp	/^void BillManager::update()$/;"	f	class:BillManager
update	BillServer/BillUserManager.cpp	/^void BillUserManager::update()$/;"	f	class:BillUserManager
update	BillServer/StockConsign.cpp	/^bool ConsignHistoryManager::update()$/;"	f	class:ConsignHistoryManager
update	GatewayServer/LoginSessionManager.cpp	/^void LoginSessionManager::update(const zRTime &ct)$/;"	f	class:LoginSessionManager
update	ScenesServer/Quest.cpp	/^int QuestList::update(SceneUser& user,bool refresh)$/;"	f	class:QuestList
update	ScenesServer/Quest.cpp	/^int Vars::update() const$/;"	f	class:Vars
update	ScenesServer/Quest.cpp	/^void Vars::update(int value)$/;"	f	class:Vars
update	ScenesServer/Quest.h	/^  void update()$/;"	f	class:GlobalVarImpl
update	ScenesServer/Quest.h	/^  void update()$/;"	f	class:UserVar
updateByGatewayID	BillServer/BillManager.cpp	/^void BillManager::updateByGatewayID(const WORD wdGatewayID)$/;"	f	class:BillManager
updateCharTest	RecordServer/RecordTask.cpp	/^bool RecordTask::updateCharTest(Cmd::Record::t_Update_CharTest_SceneRecord *rev)$/;"	f	class:RecordTask
updateConsort	SessionServer/Session.cpp	/^void UserSession::updateConsort()$/;"	f	class:UserSession
updateCount	ScenesServer/SceneUser.h	/^    BYTE updateCount;  \/\/Êõ¥Êñ∞ËÆ∞Êï∞$/;"	m	struct:SceneUser
updateCountryStar	SessionServer/Session.cpp	/^void UserSession::updateCountryStar()$/;"	f	class:UserSession
updateDBRecord	SessionServer/CRelationManager.cpp	/^void CRelationManager::updateDBRecord(const CRelation *relation)$/;"	f	class:CRelationManager
updateDurability	ScenesServer/zObject.cpp	/^void EquipPack::updateDurability(SceneUser *pThis,DWORD value)$/;"	f	class:EquipPack
updateGold	BillServer/BillManager.cpp	/^bool BillManager::updateGold(DWORD acc,double gold)$/;"	f	class:BillManager
updateHistory	BillServer/StockConsign.cpp	/^bool Consign::updateHistory(DWORD id,DWORD acc,DWORD num,DWORD commitprice,DWORD price,DWORD comtime,bool type,DWORD sysmoney)$/;"	f	class:Consign
updateMsgArray	ScenesServer/script_func.cpp	/^void updateMsgArray(int cmd, int para, int size, unsigned long long time\/*∫¡√Î ±º‰¥¡*\/, char *name)$/;"	f
updateNotify	ScenesServer/SceneUser.h	/^    DWORD updateNotify; \/\/hp,mp,sp Êõ¥Êñ∞ÈÄöÁü•$/;"	m	struct:SceneUser
updateOtherOfflineUserDBRecord	SessionServer/CRelationManager.cpp	/^void CRelationManager::updateOtherOfflineUserDBRecord(const CRelation *relation)$/;"	f	class:CRelationManager
updateSceneObject	ScenesServer/Scene.cpp	/^void Scene::updateSceneObject()$/;"	f	class:Scene
updateSessionGameCount	SessionServer/HeroCardManager.cpp	/^void HeroCardManager::updateSessionGameCount(WORD country, DWORD count)$/;"	f	class:HeroCardManager
updateUserData	ScenesServer/SceneUser.cpp	/^void SceneUser::updateUserData()$/;"	f	class:SceneUser
updateVipTime	BillServer/BillManager.cpp	/^bool BillManager::updateVipTime(DWORD acc,DWORD vip)$/;"	f	class:BillManager
updateZoneState	RecordServer/RecordTask.cpp	/^void RecordTask::updateZoneState(DWORD accid, DWORD userid, DWORD new_state)$/;"	f	class:RecordTask
updef	ScenesServer/ScenePk.h	/^      SWORD updef;    \/\/Áâ©ÁêÜÈò≤Âæ°Â¢ûÂä†Âõ∫ÂÆöÊï∞ÂÄº$/;"	m	struct:SkillState::__anon155::__anon156
updefp	ScenesServer/ScenePk.h	/^      SWORD updefp;    \/\/Áâ©ÁêÜÈò≤Âæ°Â¢ûÂä†ÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
updex	ScenesServer/ScenePk.h	/^      SWORD updex; \/\/ÊèêÂçáÊïèÊç∑$/;"	m	struct:SkillState::__anon155::__anon156
upgrade	ScenesServer/ScenePk.cpp	/^bool SceneUser::upgrade(DWORD num)$/;"	f	class:SceneUser
upgrade	base/Command.h	/^  BYTE upgrade;                         \/\/ Á≠âÁ∫ß$/;"	m	struct:Cmd::stTradeObject
upgrade	base/Object.h	/^	BYTE upgrade;\/\/ŒÔ∆∑…˝º∂µ»º∂$/;"	m	struct:t_Object
upgrade	tmpcode/commond.h	/^	BYTE upgrade;					\/\/ŒÔ∆∑µ»º∂$/;"	m	struct:StoreNotice
upgrade	tmpcode/commond.h	/^	BYTE upgrade; \/\/≥Â–«$/;"	m	struct:EquipSimulate
upgrade	tmpcode/commond.h	/^        BYTE upgrade;                         \/\/ µ»º∂ $/;"	m	struct:stTradeObject
upgradeSkill	ScenesServer/SceneSkill.cpp	/^bool SceneUser::upgradeSkill(DWORD dwSkillID,bool needSkillPoint)$/;"	f	class:SceneUser
upgradeType	tmpcode/commond.h	/^	BYTE  upgradeType;  \/\/Œ™1:±Ì æ π”√µ¿æﬂ…˝º∂«±ƒ‹$/;"	m	struct:stAddSkillPointPropertyUserCmd
upgrade_time	base/CharBase.h	/^  DWORD upgrade_time;\/\/ÂçáÁ∫ßÊó∂Èó¥$/;"	m	struct:CharTest
upgrade_usetime	base/CharBase.h	/^  DWORD upgrade_usetime;\/\/Êú¨Á∫ß‰ΩøÁî®Êó∂Èó¥$/;"	m	struct:CharTest
upint	ScenesServer/ScenePk.h	/^      SWORD upint; \/\/ÊèêÂçáÊô∫Âäõ$/;"	m	struct:SkillState::__anon155::__anon156
upperHand	ScenesServer/ChallengeGame.h	/^	DWORD upperHand;	\/\/º«¬ºœ» ÷µƒÕÊº“ID$/;"	m	class:ChallengeGame
upperHand	base/HeroCardCmd.h	/^	BYTE upperHand;	    \/\/1,œ» ÷ 0,∫Û ÷$/;"	m	struct:Cmd::stRetFirstHandCardUserCmd
upperRenqi	tmpcode/commond.h	/^	DWORD upperRenqi;       \/\/µ±«∞”…∑ø÷˜µ»º∂æˆ∂®µƒ»À∆¯…œœﬁ÷µ$/;"	m	struct:HouseRoomData
uppetdamage	ScenesServer/ScenePk.h	/^      SWORD uppetdamage; \/\/ÊèêÂçáÂè¨Âî§ÂÖΩÁöÑÊîªÂáªÂäõ$/;"	m	struct:SkillState::__anon155::__anon156
uppetdefence	ScenesServer/ScenePk.h	/^      SWORD uppetdefence; \/\/ÊèêÂçáÂè¨Âî§ÂÖΩÁöÑÈò≤Âæ°Âäõ$/;"	m	struct:SkillState::__anon155::__anon156
upstr	ScenesServer/ScenePk.h	/^      SWORD upstr;      \/\/ ÊèêÂçáÂäõÈáèÂ±ûÊÄßÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
url	base/zDBConnPool.h	/^	const std::string url;$/;"	m	struct:UrlInfo
useBusinessCount	tmpcode/commond.h	/^	WORD useBusinessCount;                  \/\/”∂±¯Õ≈“—≈‹…Ã¥Œ ˝$/;"	m	struct:stGetUnionBusinessmen
useFightState	ScenesServer/SceneEntryPk.h	/^enum useFightState$/;"	g
useGiftBag	ScenesServer/GiftBagManager.cpp	/^bool GiftBagManager::useGiftBag(SceneUser& user, zObject *obj)$/;"	f	class:GiftBagManager
useGold	tmpcode/commond.h	/^		BYTE  useGold; \/\/ π”√ÀÆæß±“$/;"	m	struct:stClearElecGemUserCmd
useGold	tmpcode/commond.h	/^		BYTE  useGold; \/\/ π”√ÀÆæß±“$/;"	m	struct:stEnchasePropertyUserCmd
useGold	tmpcode/commond.h	/^		BYTE  useGold; \/\/ π”√ÀÆæß±“$/;"	m	struct:stHolePropertyUserCmd
useGoldStuff	tmpcode/commond.h	/^    BYTE  useGoldStuff; \/\/1±Ì æ π”√ÀÆæß±“µ¿æﬂ$/;"	m	struct:stRemakePropertyUserCmd
useID	tmpcode/commond.h	/^	DWORD useID;\/\/ π”√∂“ªª»ØµƒID$/;"	m	struct:stExchanceEssenceUserCmd
useJob	base/CharBase.h	/^  DWORD useJob;        \/\/ sky ËßíËâ≤ËÅå‰∏ö(Êï∞ÊçÆÂ∫ì‰ΩçÁΩÆ‰ΩøÁî®ÂéüÊñáÈáá"GRACE"ÊÆµ)$/;"	m	struct:CharBase
useJob	base/Command.h	/^  DWORD useJob;				\/\/ sky ËÅå‰∏ö$/;"	m	struct:Cmd::stSeptRember
useJob	base/Command.h	/^  DWORD useJob;           \/\/ sky ËÅå‰∏ö$/;"	m	struct:Cmd::stBroadcastSeptMemberInfo
useJob	base/Command.h	/^  int  useJob; \/\/sky ËÅå‰∏ö$/;"	m	struct:Cmd::rank_elem
useLingShi	tmpcode/commond.h	/^		BYTE  useLingShi;  \/\/∏ﬂ¬Ø»€¡∂,”–º∏¬ ≥ˆÃ◊◊∞. 0 -- ’˝≥£»€¡∂; 1 -- ∏ﬂ¬Ø»€¡∂$/;"	m	struct:stPushMagicStoveUserCmd
useLingShi	tmpcode/commond.h	/^		BYTE  useLingShi;  \/\/∏ﬂ¬Ø»€¡∂,”–º∏¬ ≥ˆÃ◊◊∞. 0 -- ’˝≥£»€¡∂; 1 -- ∏ﬂ¬Ø»€¡∂; 2 -- ª∆Ã◊…˝º∂; 3 -- ◊œ◊∞»€¡∂$/;"	m	struct:stStoveDataUserCmd
useObj	tmpcode/commond.h	/^	DWORD useObj;	\/\/œ˚∫ƒµ¿æﬂ $/;"	m	struct:st_PlaceObjectHouseUserCmd
useObject	ScenesServer/SceneUser.cpp	/^bool SceneUser::useObject(zObject *obj, BYTE useType)$/;"	f	class:SceneUser
useRes	ScenesServer/SceneEntryPk.h	/^    bool useRes;    \/\/\/ ÂèØÂê¶‰ΩøÁî®Áâ©ÂìÅ$/;"	m	struct:SceneEntryPk
useSalary	tmpcode/commond.h	/^		BYTE     useSalary;  \/\/ 0 ±Ì æ”√Ω Ù±“,1±Ì æ”√ÀÆæß±“$/;"	m	struct:stNpcUpgradePropertyUserCmd
useSalary	tmpcode/commond.h	/^    BYTE     useSalary;  \/\/ 0 ±Ì æ”√Ω Ù±“,1±Ì æ”√ÀÆæß±“$/;"	m	struct:stUseScrollUpPropertyUserCmd
useSkill	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::useSkill(SceneEntryPk * target, DWORD id, WORD level) \/\/[sky]Ê∑ªÂä†ÊäÄËÉΩÁ≠âÁ∫ßÂèÇÊï∞$/;"	f	class:SceneNpc
useTime	tmpcode/commond.h	/^	DWORD useTime;		\/\/ŒÔ∆∑µ⁄“ª¥Œ π”√ ±∫Úµƒ ±º‰$/;"	m	struct:HouseObjDef
useTimesLimitPerDay	base/zDatabase.h	/^    WORD useTimesLimitPerDay;$/;"	m	struct:zObjectB
useType	base/Command.h	/^    BYTE useType;$/;"	m	struct:Cmd::stUseObjectPropertyUserCmd
useType	tmpcode/commond.h	/^	BYTE  useType;				\/\/ 0, ’˝≥£ π”√µ¿æﬂ£¨1,∂“ªª≤ƒ¡œ±£œ’»Ø$/;"	m	struct:stUseObjectPropertyUserCmd
usedNum	tmpcode/commond.h	/^	BYTE usedNum;  \/\/“—æ≠ π”√µƒ¥Œ ˝$/;"	m	struct:stChuanchengUsednumPropertyUserCmd
user	Robot/Client.h	/^    std::string user;$/;"	m	struct:ClientBase
user	ScenesServer/SceneUser.cpp	/^	SceneUser *user;$/;"	m	struct:GetAllRemovePosNpc
user	ScenesServer/SceneUser.cpp	/^	SceneUser *user;$/;"	m	struct:GetAllRemovePosUser
user	ScenesServer/scriptTickTask.h	/^	SceneUser *user;$/;"	m	struct:scriptTask
user	SessionServer/CRelationManager.h	/^  UserSession *user;$/;"	m	class:CRelationManager
user	base/zDBConnPool.h	/^	char user[MAX_USERSIZE];$/;"	m	struct:UrlInfo
user	tmpcode/commond.h	/^	DWORD user; \/\/”√ªßid$/;"	m	struct:stRemoveObjectTradeUserCmd
user	tmpcode/commond.h	/^	char user[MAX_NAMESIZE + 1];    \/\/\/ ∑¢∆’π æµƒÕÊº“√˚$/;"	m	struct:stReqMasterPerformCmd
user	tmpcode/commond.h	/^	char user[MAX_NAMESIZE + 1];$/;"	m	struct:UnionNoticeInfo
user	tmpcode/commond.h	/^         char  user[0][MAX_NAMESIZE-1];   \/\/±æ¥Œ∑¢ÀÕµƒ’ÛÕˆÕÊº“tempid$/;"	m	struct:stGuyDeadDaTaoShaUserCmd
userBaseSec	tmpcode/commond.h	/^	float userBaseSec;$/;"	m	struct:stBaseExpUserCmd
userCount	ScenesServer/Scene.h	/^    DWORD userCount;$/;"	m	class:Scene
userCountry	base/GmToolCommand.h	/^      char userCountry[MAX_NAMESIZE];\/\/‰∏æÊä•ËÄÖÂõΩÂÆ∂$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
userCountryID	tmpcode/commond.h	/^	WORD userCountryID;     \/\/’º¡Ï’ﬂΩÁ”ÚID$/;"	m	struct:stSendFlagInfoUserCmd
userID	ScenesServer/zCard.h	/^    DWORD userID;		\/\/πÈ Ù$/;"	m	struct:zCard
userID	base/Command.h	/^    DWORD userID;$/;"	m	struct:Cmd::stAddMapObjectMapScreenUserCmd
userID	base/Command.h	/^    DWORD userID;$/;"	m	struct:Cmd::t_MapPKGameData
userID	base/GmToolCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::GmTool::t_Msg_Reply_GmTool
userID	base/GmToolCommand.h	/^      DWORD userID;\/\/‰∏æÊä•ËÄÖID$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
userID	base/MiniCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Mini::t_Scene_Check_Draw
userID	base/MiniCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Mini::t_Scene_Deposit
userID	base/MiniCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Mini::t_Scene_Deposit_Ret
userID	base/MiniCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Mini::t_Scene_Draw_Ret
userID	base/MiniCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Mini::t_Scene_SetScene
userID	base/MiniCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Mini::t_UserDelete_Gateway
userID	base/MiniCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Mini::t_UserLogin_Gateway
userID	base/MiniCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Mini::t_UserLogout_Gateway
userID	base/SceneCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Scene::t_kickUser_GateScene
userID	base/SceneCommand.h	/^      DWORD userID;\/\/ÕÊº“ID$/;"	m	struct:Cmd::Scene::t_countryAndScene_GateScene
userID	base/SessionCommand.h	/^	  DWORD userID;		\/\/Ω«…´ID$/;"	m	struct:Cmd::Session::t_ReqFightMatch_SceneSession
userID	base/SessionCommand.h	/^	  DWORD userID;$/;"	m	struct:Cmd::Session::t_RetSceneuserPkGame_SceneSession
userID	base/SessionCommand.h	/^	  DWORD userID;$/;"	m	struct:Cmd::Session::t_TelePKGame_SceneSession
userID	base/SessionCommand.h	/^	DWORD userID;$/;"	m	struct:Cmd::Session::t_RelationAddFriend
userID	base/SessionCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Session::t_SpendGold_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Session::t_checkNewMail_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Session::t_drawCartoon_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Session::t_getMailItemConfirm_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Session::t_getMailItemReturn_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Session::t_guardFail_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Session::t_levelNotifyCartoon_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Session::t_loadCartoon_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Session::t_saleCartoon_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;$/;"	m	struct:Cmd::Session::t_turnBackMail_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/ID$/;"	m	struct:Cmd::Session::t_addCartoon_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/ID$/;"	m	struct:Cmd::Session::t_adoptCartoon_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/ID$/;"	m	struct:Cmd::Session::t_getBackCartoon_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/ID$/;"	m	struct:Cmd::Session::t_getListCartoon_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/‰∏¥Êó∂ID$/;"	m	struct:Cmd::Session::t_bidAuction_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/‰∏¥Êó∂ID$/;"	m	struct:Cmd::Session::t_cancelAuction_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/‰∏¥Êó∂ID$/;"	m	struct:Cmd::Session::t_checkBidAuction_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/‰∏¥Êó∂ID$/;"	m	struct:Cmd::Session::t_checkCancelAuction_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/‰∏¥Êó∂ID$/;"	m	struct:Cmd::Session::t_getListAuction_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/‰∏¥Êó∂ID$/;"	m	struct:Cmd::Session::t_queryAuction_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/‰∏¥Êó∂ID$/;"	m	struct:Cmd::Session::t_saleAuction_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/‰∏ª‰∫∫ID$/;"	m	struct:Cmd::Session::t_setRepairCartoon_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/ÂßîÊâò‰∫∫ID$/;"	m	struct:Cmd::Session::t_consignCartoon_SceneSession
userID	base/SessionCommand.h	/^      DWORD userID;\/\/Ë¢´ÂßîÊâò‰∫∫ID$/;"	m	struct:Cmd::Session::t_consignRetCartoon_SceneSession
userID	tmpcode/commond.h	/^		DWORD userID; $/;"	m	struct:stRetSeptTeamChallengeUserCmd::acceptedQuests
userID	tmpcode/commond.h	/^	DWORD   userID;					\/\/ ”√ªßid( ˝æ›ø‚¿Ôµƒ)$/;"	m	struct:stAddMapObjectMapScreenUserCmd
userID	tmpcode/commond.h	/^	DWORD id, userID;	\/\/»∫ID£¨Ω«…´ID$/;"	m	struct:stTalkLTQUserCmd
userID	tmpcode/commond.h	/^	DWORD userID;                       \/\/—˚«Î»ÀID$/;"	m	struct:stAddMemberToUnionCmd
userID	tmpcode/commond.h	/^	DWORD userID;                   \/\/…Í«Î»ÀID$/;"	m	struct:st_RejectApplyRoomerHouseUserCmd
userID	tmpcode/commond.h	/^	DWORD userID;   \/\/\/ ”√ªßID$/;"	m	struct:stCityFundUnionCmd
userID	tmpcode/commond.h	/^	DWORD userID; $/;"	m	struct:stInfoSeptTeamChallengeUserCmd
userID	tmpcode/commond.h	/^	DWORD userID; $/;"	m	struct:stTankNameCmd
userID	tmpcode/commond.h	/^	DWORD userID; $/;"	m	struct:stUnionTankNameCmd
userID	tmpcode/commond.h	/^	DWORD userID;$/;"	m	struct:UserInfoBySameIP
userID	tmpcode/commond.h	/^	DWORD userID;$/;"	m	struct:stBuyDancerUserCmd
userID	tmpcode/commond.h	/^	DWORD userID;$/;"	m	struct:stOfflineLTQUserCmd
userID	tmpcode/commond.h	/^	DWORD userID;$/;"	m	struct:stOnlineLTQUserCmd
userID	tmpcode/commond.h	/^	DWORD userID;$/;"	m	struct:stRequestUnionProStateCmd
userID	tmpcode/commond.h	/^	DWORD userID;$/;"	m	struct:stReturnAttGuardNpc
userID	tmpcode/commond.h	/^	DWORD userID;$/;"	m	struct:st_BanishRoomerHouseUserCmd
userID	tmpcode/commond.h	/^	DWORD userID;$/;"	m	struct:st_RejectBanishRoomerHouseUserCmd
userID	tmpcode/commond.h	/^	DWORD userID;\/\/ID$/;"	m	struct:stChangeColorLTQUserCmd
userID	tmpcode/commond.h	/^	DWORD userID;\/\/ID$/;"	m	struct:stChangeFaceLTQUserCmd
userID	tmpcode/commond.h	/^	DWORD userID;\/\/…Í«Î»ÀID$/;"	m	struct:stNotifyReqJoinLTQUserCmd
userID	tmpcode/commond.h	/^	DWORD userID;\/\/…Í«Î»ÀID$/;"	m	struct:stRetJoinLTQUserCmd
userID	tmpcode/commond.h	/^	DWORD userID;\/\/”√ªßID,Œ™0±Ì æ»∫Ω‚…¢$/;"	m	struct:stNotifyLeaveLTQUserCmd
userID	tmpcode/commond.h	/^        DWORD userID;$/;"	m	struct:CHUNYUNITEM
userID	tmpcode/commond.h	/^        DWORD userID;$/;"	m	struct:ShiTuInfo
userID	tmpcode/commond.h	/^        DWORD userID;$/;"	m	struct:reqKickUserChunYunCmd
userID	tmpcode/commond.h	/^    DWORD userID;   \/\/add by gjf;$/;"	m	struct:SeptGuardList
userID	tmpcode/commond.h	/^    DWORD userID;   \/\/ÕÊº“$/;"	m	struct:KeyHole
userID1	base/SessionCommand.h	/^	  DWORD userID1;$/;"	m	struct:Cmd::Session::t_CreateNewPkGame_SceneSession
userID2	base/SessionCommand.h	/^	  DWORD userID2;$/;"	m	struct:Cmd::Session::t_CreateNewPkGame_SceneSession
userId	tmpcode/commond.h	/^	DWORD userId;  \/\/ Àµª∞»ÀΩ«…´ID$/;"	m	struct:stHistoryTalkLTQUserCmd
userList	SessionServer/SessionChat.h	/^    std::list<DWORD> userList;$/;"	m	class:SessionChannel
userList	tmpcode/commond.h	/^	LTQUserData userList[0];$/;"	m	struct:stLTQDataLTQUserCmd
userMap	SessionServer/SessionServer.cpp	/^std::map<DWORD,BYTE> SessionService::userMap;$/;"	m	class:SessionService
userMap	SessionServer/SessionServer.h	/^    static std::map<DWORD,BYTE> userMap;$/;"	m	class:SessionService
userMobKill	tmpcode/commond.h	/^        MOB_KILL_CONTRIBUTE userMobKill[0];$/;"	m	struct:rtTopKillCountUserCmd
userName	base/Command.h	/^  char userName[MAX_NAMESIZE];$/;"	m	struct:Cmd::stChatGmTool
userName	base/GmToolCommand.h	/^      char userName[MAX_NAMESIZE];$/;"	m	struct:Cmd::GmTool::t_Chat_GmTool
userName	base/GmToolCommand.h	/^      char userName[MAX_NAMESIZE];$/;"	m	struct:Cmd::GmTool::t_Msg_GmTool
userName	base/GmToolCommand.h	/^      char userName[MAX_NAMESIZE];$/;"	m	struct:Cmd::GmTool::t_Msg_Reply_GmTool
userName	base/GmToolCommand.h	/^      char userName[MAX_NAMESIZE];$/;"	m	struct:Cmd::GmTool::t_Punish_GmTool
userName	base/GmToolCommand.h	/^      char userName[MAX_NAMESIZE];\/\/‰∏æÊä•ËÄÖ$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
userName	base/SessionCommand.h	/^      char userName[MAX_NAMESIZE];$/;"	m	struct:Cmd::Session::t_saveCartoon_SceneSession
userName	tmpcode/commond.h	/^		char userName[MAX_NAMESIZE];$/;"	m	struct:stSendSeptStoreDataCmd::__anon305
userName	tmpcode/commond.h	/^	BYTE userName[MAX_NAMESIZE];  \/\/ ±ªæŸ±®’ﬂ$/;"	m	struct:stReportChatCmd
userName	tmpcode/commond.h	/^	char userName[MAX_NAMESIZE + 1];$/;"	m	struct:stSeptGuardVisitSeptCmd
userName	tmpcode/commond.h	/^	char userName[MAX_NAMESIZE+1];$/;"	m	struct:stReqUserPerformCmd
userName	tmpcode/commond.h	/^	char userName[MAX_NAMESIZE];        \/\/ —˚«Î»À–’√˚$/;"	m	struct:stAddMemberToUnionCmd
userName	tmpcode/commond.h	/^	char userName[MAX_NAMESIZE];    \/\/ÕÊº“–’√˚$/;"	m	struct:StoreNotice
userName	tmpcode/commond.h	/^	char userName[MAX_NAMESIZE];    \/\/’º¡Ï’ﬂ√˚≥∆$/;"	m	struct:stSendFlagInfoUserCmd
userName	tmpcode/commond.h	/^	char userName[MAX_NAMESIZE];$/;"	m	struct:stDancerStateUserCmd
userName	tmpcode/commond.h	/^	char userName[MAX_NAMESIZE];$/;"	m	struct:stInviteDanceUserCmd
userName	tmpcode/commond.h	/^	char userName[MAX_NAMESIZE];$/;"	m	struct:stSetObjectRightSeptStore
userName	tmpcode/commond.h	/^            char userName[MAX_NAMESIZE+1];$/;"	m	struct:stNofityBetResultInChallengeDragonUserCmd::WinnerInfo
userName	tmpcode/commond.h	/^        char userName[MAX_NAMESIZE+1];$/;"	m	struct:CardMainData
userName	tmpcode/commond.h	/^        char userName[MAX_NAMESIZE+1];$/;"	m	struct:stNewUnionMerchListInfo
userName	tmpcode/commond.h	/^        char userName[MAX_NAMESIZE];$/;"	m	struct:CHUNYUNITEM
userName	tmpcode/commond.h	/^        char userName[MAX_NAMESIZE];$/;"	m	struct:ShiTuInfo
userName_1	tmpcode/commond.h	/^	char userName_1[MAX_NAMESIZE + 1];      \/\/\/ Ω·ªÈµƒµ⁄“ª∑Ω$/;"	m	struct:stMarriagePresentFlowerCmd
userName_2	tmpcode/commond.h	/^	char userName_2[MAX_NAMESIZE + 1];      \/\/\/ Ω·ªÈµƒµ⁄∂˛∑Ω$/;"	m	struct:stMarriagePresentFlowerCmd
userNum	tmpcode/commond.h	/^	DWORD userNum;                  \/\/ ◊Ó¥Û»À ˝$/;"	m	struct:stSeptBaseInfoCmd
userNum	tmpcode/commond.h	/^	DWORD userNum;$/;"	m	struct:stLTQDataLTQUserCmd
userScriptTaskContainer	ScenesServer/scriptTickTask.h	/^	userScriptTaskContainer()$/;"	f	class:userScriptTaskContainer
userScriptTaskContainer	ScenesServer/scriptTickTask.h	/^class userScriptTaskContainer$/;"	c
userTaskPool	FLServer/FLServer.h	/^	zTCPTaskPool *userTaskPool;$/;"	m	class:FLService
userTempID	base/SessionCommand.h	/^      DWORD userTempID;  $/;"	m	struct:Cmd::Session::t_GoTo_Leader_Check_SceneSession
userTempID	tmpcode/commond.h	/^	 DWORD userTempID;         \/\/øÕªß∂À≤È—Øµƒ»ÀµƒTEMPID$/;"	m	struct:stReqSeptNameCmd
userTempID	tmpcode/commond.h	/^	 DWORD userTempID;$/;"	m	struct:stReqUnionNameCmd
userTempID	tmpcode/commond.h	/^	 DWORD userTempID;$/;"	m	struct:stRtnSeptNameCmd
userTempID	tmpcode/commond.h	/^	 DWORD userTempID;$/;"	m	struct:stRtnUnionNameCmd
userTempID	tmpcode/commond.h	/^	DWORD userTempID;       \/\/±ª«˝∏œ’ﬂµƒtempid$/;"	m	struct:st_DriveAwayHouseUserCmd
userTempID	tmpcode/commond.h	/^	DWORD userTempID;       \/\/”√ªßTempID$/;"	m	struct:stShowSingUserCmd
userTempID	tmpcode/commond.h	/^	DWORD userTempID;$/;"	m	struct:stClearFlowerEffectNine
userTempID	tmpcode/commond.h	/^	DWORD userTempID;$/;"	m	struct:stNotifyCatchBeginUserCmd
userTempID	tmpcode/commond.h	/^	DWORD userTempID;$/;"	m	struct:stRetCatchEndUserCmd
userTempID	tmpcode/commond.h	/^	DWORD userTempID;$/;"	m	struct:stRetCityDareSuccessUserCmd
userTempID	tmpcode/commond.h	/^	DWORD userTempID;$/;"	m	struct:stTotemActionEndCmd
userTempID	tmpcode/commond.h	/^    DWORD userTempID;$/;"	m	struct:stNotifyCatchLingQiBeginUserCmd
userTempID	tmpcode/commond.h	/^    DWORD userTempID;$/;"	m	struct:stRetCatchLingQiEndUserCmd
userTempId	tmpcode/commond.h	/^	DWORD userTempId;$/;"	m	struct:stShowEffectWhenFlowerEggCmd
userTempid	tmpcode/commond.h	/^		DWORD userTempid;       \/\/≥…‘±tempid$/;"	m	struct:stRetSeptAvatarInfo::stAvatarInfo
userTempid	tmpcode/commond.h	/^	DWORD userTempid;$/;"	m	struct:stSendCrystalFlowerUserCmd
userTempid	tmpcode/commond.h	/^        DWORD userTempid;$/;"	m	struct:stSendMutualGiftUserCmd
userType	base/zType.h	/^  WORD userType;$/;"	m	struct:t_NewLoginSession
userType	tmpcode/commond.h	/^	BYTE userType;  \/\/\/ 0 –¬¿… 1 –¬ƒÔ 2 À´∑Ω$/;"	m	struct:stMarriagePresentBlessCmd
userUnionName	tmpcode/commond.h	/^	char userUnionName[MAX_NAMESIZE];\/\/…œ“ªÀ∞¬ …Ë∂®’ﬂÀ˘ Ù”∂±¯Õ≈$/;"	m	struct:stCanSetUnionCityTax
userUniqeID	GatewayServer/GateUserManager.h	/^	zUniqueDWORDID *userUniqeID;$/;"	m	class:GateUserManager
user_canSend	ScenesServer/SceneUser.cpp	/^	inline const bool user_canSend() const$/;"	f	struct:GetEnvryOneAndSend
user_count	SessionServer/Session.h	/^    static DWORD user_count;$/;"	m	class:UserSession
user_count	SessionServer/SessionManager.cpp	/^DWORD UserSession::user_count=0;$/;"	m	class:UserSession
user_getSendBuffer	ScenesServer/SceneUser.cpp	/^	inline const BYTE *user_getSendBuffer()$/;"	f	struct:GetEnvryOneAndSend
user_getSize	ScenesServer/SceneUser.cpp	/^	inline const int user_getSize() const$/;"	f	struct:GetEnvryOneAndSend
user_id	base/Command.h	/^  DWORD user_id; \/\/Áî®Êà∑‰∏¥Êó∂id$/;"	m	struct:Cmd::stAddObjectTradeUserCmd
user_id	base/Command.h	/^  DWORD user_id; \/\/Áî®Êà∑‰∏¥Êó∂id$/;"	m	struct:Cmd::stRemoveObjectTradeUserCmd
user_id	base/RecordCommand.h	/^      DWORD user_id;          \/\/\/ Êé®Ëçê‰∫∫ID$/;"	m	struct:Cmd::Record::t_chkUserExist_SessionRecord
user_id	tmpcode/commond.h	/^	DWORD user_id; \/\/”√ªß¡Ÿ ±id$/;"	m	struct:stAddBetObjectChallengeUserCmd
user_id	tmpcode/commond.h	/^	DWORD user_id; \/\/”√ªß¡Ÿ ±id$/;"	m	struct:stAddObjectTradeUserCmd
user_id	tmpcode/commond.h	/^	DWORD user_id; \/\/”√ªß¡Ÿ ±id$/;"	m	struct:stRemoveBetObjectChallengeUserCmd
user_level	base/Command.h	/^  WORD    user_level;$/;"	m	struct:Cmd::stRelationStatusCmd
user_level	base/Command.h	/^  WORD  user_level;              \/\/ ÂÖ≥Á≥ª‰∫∫Á≠âÁ∫ß$/;"	m	struct:Cmd::stRelation
user_level	base/RecordCommand.h	/^      DWORD user_level;        \/\/\/ Êé®Ëçê‰∫∫Á≠âÁ∫ß$/;"	m	struct:Cmd::Record::t_chkUserExist_SessionRecord
user_level	base/SessionCommand.h	/^	WORD user_level;$/;"	m	struct:Cmd::Session::t_RelationAddFriend
user_level	tmpcode/commond.h	/^	WORD    user_level;$/;"	m	struct:stRelationStatusCmd
user_level	tmpcode/commond.h	/^	WORD  user_level;              \/\/ πÿœµ»Àµ»º∂$/;"	m	struct:stRelation
user_outofbound	ScenesServer/SceneUser.cpp	/^	inline const bool user_outofbound() const$/;"	f	struct:GetEnvryOneAndSend
user_parser	base/zArg.h	/^    argsParser user_parser;$/;"	m	class:zArg
user_port	FLServer/FLServer.h	/^	WORD user_port;$/;"	m	class:FLService
userid	base/Command.h	/^    DWORD userid;$/;"	m	union:Cmd::stRelationStatusCmd::__anon125
userid	base/RolechangeCommand.h	/^	DWORD userid;$/;"	m	struct:Cmd::Rolechange::t_Check_Valid
userid	base/RolechangeCommand.h	/^	DWORD userid;$/;"	m	struct:Cmd::Rolechange::t_Req_ZoneList
userid	base/RolechangeCommand.h	/^	DWORD userid;$/;"	m	struct:Cmd::Rolechange::t_Ret_Check_Valid
userid	base/RolechangeCommand.h	/^	DWORD userid;$/;"	m	struct:Cmd::Rolechange::t_Rtn_ZoneList
userid	base/RolechangeCommand.h	/^	DWORD userid;$/;"	m	struct:Cmd::Rolechange::t_retSendUserToZone
userid	base/RolechangeCommand.h	/^	DWORD userid;$/;"	m	struct:Cmd::Rolechange::t_sendUserToZone
userid	base/SessionCommand.h	/^	    DWORD userid;$/;"	m	union:Cmd::Session::t_RelationAddFriend::__anon45
userid	base/SessionCommand.h	/^	DWORD userid;$/;"	m	struct:Cmd::Session::t_notifyEnterZone_SceneSession
userid	base/SuperCommand.h	/^	  DWORD userid;$/;"	m	struct:Cmd::Super::t_ChangeZoneDel_Gateway
userid	tmpcode/commond.h	/^		DWORD userid;$/;"	m	union:stRelationStatusCmd::__anon236
userinfo	GatewayServer/GateUser.h	/^	Cmd::SelectUserInfo userinfo[Cmd::MAX_CHARINFO];$/;"	m	class:GateSelectUserSession
userlevel	base/RolechangeCommand.h	/^	DWORD userlevel;$/;"	m	struct:Cmd::Rolechange::t_Check_Valid
userlevel	tmpcode/commond.h	/^	WORD userlevel;\/\/”√ªßµ»º∂$/;"	m	struct:stShowAllSkillUserPropertyUserCmd
userlist	ScenesServer/Chat.h	/^                std::vector<zEntryC> userlist;$/;"	m	class:Channel
usermsgParse	BillServer/BillUser.cpp	/^bool BillUser::usermsgParse(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:BillUser
usermsgParse	ScenesServer/SceneTask.cpp	/^bool SceneTask::usermsgParse(SceneUser *pUser,const Cmd::t_NullCmd *pNullCmd,const DWORD cmdLen)$/;"	f	class:SceneTask
usermsgParseBill	ScenesServer/SceneTask.cpp	/^bool SceneTask::usermsgParseBill(SceneUser *pUser,const Cmd::t_NullCmd *pNullCmd,const DWORD cmdLen)$/;"	f	class:SceneTask
usermsgParseScene	BillServer/BillUser.cpp	/^bool BillUser::usermsgParseScene(const Cmd::t_NullCmd *pNullCmd,const DWORD nCmdLen)$/;"	f	class:BillUser
username	tmpcode/commond.h	/^        char username[MAX_NAMESIZE+1];  \/\/Ω”»°»À£¨µ»¥˝÷–µƒ»ŒŒÒ‘ÚusernameŒ™ø’°£$/;"	m	struct:stRetInfoIssuedQuestUserCmd
userskillnum	tmpcode/commond.h	/^	WORD userskillnum;\/\/ººƒ‹∏ˆ ˝,∞¸∫¨«±ƒ‹$/;"	m	struct:stShowAllSkillUserPropertyUserCmd
usingState	tmpcode/commond.h	/^	BYTE usingState;        \/\/ π”√◊¥Ã¨( π”√÷–:1;ø’œ–÷–:2;…˝º∂÷–:3)$/;"	m	struct:DecayHouseSession
usleep	base/zThread.h	/^	static void usleep(const long usec)$/;"	f	class:zThread
usleep_time	base/zTCPClient.h	/^	unsigned long usleep_time;$/;"	m	class:zTCPBufferClient
usleep_time	base/zTCPClientTaskPool.h	/^	unsigned long usleep_time;                                        \/**< —≠ª∑µ»¥˝ ±º‰ *\/$/;"	m	class:zTCPClientTaskPool
usleep_time	base/zTCPTaskPool.h	/^	static unsigned long usleep_time;                    \/**< —≠ª∑µ»¥˝ ±º‰ *\/$/;"	m	class:zTCPTaskPool
utask	base/SceneCommand.h	/^      DWORD utask;$/;"	m	struct:Cmd::Scene::t_Usleep_GateScene
uuid	base/Command.h	/^  unsigned char uuid[25];$/;"	m	struct:Cmd::stUserRequestLoginCmd
uuid	tmpcode/commond.h	/^	unsigned char uuid[25];$/;"	m	struct:stUserRequestLoginCmd
vChange	base/Command.h	/^  int vChange;        \/**< >0 :Âä†    <0 :Êâ£*\/$/;"	m	struct:Cmd::stObjectHpMpPopUserCmd
vChange	tmpcode/commond.h	/^    int vChange;                            \/**< >0 :º”             <0 :ø€*\/$/;"	m	struct:stObjectHpMpPopUserCmd
v_lastSampleTime	GatewayServer/GatewayTask.h	/^	DWORD v_lastSampleTime;$/;"	m	class:GatewayTask
v_samplePackets	GatewayServer/GatewayTask.h	/^	DWORD v_samplePackets;$/;"	m	class:GatewayTask
valType	base/zMetaData.h	/^	typedef FIELD::value_type valType;$/;"	t	class:DBRecord
val_bin	base/zMetaData.h	/^	std::vector<char> val_bin;$/;"	m	class:DBVarType
val_byte	base/zMetaData.h	/^	BYTE val_byte;$/;"	m	class:DBVarType
val_double	base/zMetaData.h	/^	double val_double;$/;"	m	class:DBVarType
val_dword	base/zMetaData.h	/^	DWORD val_dword;$/;"	m	class:DBVarType
val_float	base/zMetaData.h	/^	float val_float;$/;"	m	class:DBVarType
val_int	base/zMetaData.h	/^	int val_int;$/;"	m	class:DBVarType
val_long	base/zMetaData.h	/^	long val_long;$/;"	m	class:DBVarType
val_pstr	base/zMetaData.h	/^	const char* val_pstr;$/;"	m	class:DBVarType
val_qword	base/zMetaData.h	/^	QWORD val_qword;$/;"	m	class:DBVarType
val_short	base/zMetaData.h	/^	short val_short;$/;"	m	class:DBVarType
val_sqword	base/zMetaData.h	/^	SQWORD val_sqword;$/;"	m	class:DBVarType
val_us	base/zMetaData.h	/^	WORD val_us;$/;"	m	class:DBVarType
valid	base/zMetaData.h	/^	bool valid;$/;"	m	class:DBVarType
validTime	tmpcode/commond.h	/^	DWORD validTime;	\/\/ŒÔ∆∑”––ß ±≥§:µ•Œª√Î£¨0±Ì æŒﬁœﬁ≥§ ±º‰$/;"	m	struct:HouseObjDef
validTime	tmpcode/commond.h	/^        DWORD validTime;$/;"	m	struct:rtNotifyEnterUserCmd
validate	GatewayServer/GatewayServer.h	/^	virtual bool validate()$/;"	f	class:GatewayService
validate	base/zService.h	/^	virtual bool validate()$/;"	f	class:zService
value	ScenesServer/Quest.h	/^    const std::string& value() const$/;"	f	class:Vars::VAR
value	ScenesServer/QuestCondition.h	/^  void value(const std::string& key,T& value)$/;"	f	class:ScenesParser
value	ScenesServer/SkillStatusManager.h	/^  DWORD value;$/;"	m	struct:SkillStatusElement
value	base/Command.h	/^      DWORD value;$/;"	m	union:Cmd::stSelectReturnStatesPropertyUserCmd::__anon93::__anon94
value	base/Command.h	/^    BYTE value[0];$/;"	m	struct:Cmd::stQuestVarsUserCmd::Var
value	base/xml/xml_node_content.h	/^	value_type value;$/;"	m	class:xml_content
value	base/xml/xml_node_prop.h	/^	value_type  value;$/;"	m	class:xml_prop
value	base/xml/xml_parser_generator.h	/^	std::string value;$/;"	m	class:xml_prop_parser_generator
value	base/zDatabase.h	/^	    DWORD value;$/;"	m	struct:SkillElement::__anon34::__anon35
value	tmpcode/commond.h	/^			DWORD value;$/;"	m	union:stSelectReturnStatesPropertyUserCmd::__anon230::__anon231
value	tmpcode/commond.h	/^		BYTE value;$/;"	m	struct:EquipSimulate::ActiveType
value	tmpcode/commond.h	/^		BYTE value[0];        $/;"	m	struct:stQuestVarsUserCmd::Var
value	tmpcode/commond.h	/^		SWORD value;$/;"	m	struct:EquipSimulate::SocketType
value	tmpcode/commond.h	/^	 DWORD	value;		\/\/≈‰º˛µƒ Ù–‘÷µ£¨¥”µÕ◊÷Ω⁄∆:$/;"	m	struct:TankHole
value	tmpcode/commond.h	/^	DWORD	value;$/;"	m	struct:_powerList
value	tmpcode/commond.h	/^	DWORD value;                    \/\/˜»¡¶÷µ$/;"	m	struct:BlessSortData
value	tmpcode/commond.h	/^	DWORD value;    \/\/\/ »ˆª®°¢¿≠»À±Ì æ¿‡–Õ, »ˆ∫Ï∞¸±Ì æ√ø∏ˆ∫Ï∞¸µƒ«Æ ˝$/;"	m	struct:stSetMarriageInteractionCmd
value	tmpcode/commond.h	/^	DWORD value;$/;"	m	struct:stAddHonorZhanGong
value	tmpcode/commond.h	/^	DWORD value;$/;"	m	struct:stSendHonorZhanGong
value	tmpcode/commond.h	/^                BYTE value[0];  $/;"	m	struct:showPeronTaskUserCmd::Var
value	tmpcode/commond.h	/^        DWORD value;                            \/\/◊‘º∫µƒ◊£∏£÷µ$/;"	m	struct:rtBlessListUserCmd
value	tmpcode/commond.h	/^    DWORD value;                            \/\/◊‘º∫µƒ◊£∏£÷µ$/;"	m	struct:rtTempListUserCmd
value	tmpcode/commond.h	/^    DWORD value;                    \/\/˜»¡¶÷µ$/;"	m	struct:TempSortData
value	tmpcode/commond.h	/^    DWORD value;$/;"	m	struct:AchievementItem
value	tmpcode/commond.h	/^    DWORD value;$/;"	m	struct:EquipSortObjItem
value	tmpcode/commond.h	/^    DWORD value;\/\/÷∏ ˝$/;"	m	struct:rtGetAchievementHonorCmd
value2	ScenesServer/SkillStatusManager.h	/^  DWORD value2;$/;"	m	struct:SkillStatusElement
value2	base/zDatabase.h	/^	    DWORD value2;$/;"	m	struct:SkillElement::__anon34::__anon35
value2	tmpcode/commond.h	/^	int		value2;$/;"	m	struct:_powerList
valueType	base/zMetaData.h	/^	typedef TableManager::value_type valueType;$/;"	t	class:DBMetaData
value_is_str	base/xml/xml_parser_generator.h	/^	bool value_is_str;$/;"	m	class:xml_prop_parser_generator
value_type	BillServer/BillCache.h	/^    typedef CacheContainer::value_type value_type;$/;"	t	class:BillCache
value_type	FLServer/UserTask.h	/^	typedef NetUser_multimap::value_type value_type;$/;"	t	class:UserContainer
value_type	GatewayServer/SceneClientManager.h	/^	typedef SceneClient_map::value_type value_type;$/;"	t	class:SceneClientManager
value_type	ScenesServer/QuestAction.h	/^    typedef T value_type;$/;"	t	class:Op::Add
value_type	ScenesServer/QuestAction.h	/^    typedef T value_type;$/;"	t	class:Op::Div
value_type	ScenesServer/QuestAction.h	/^    typedef T value_type;$/;"	t	class:Op::GetP
value_type	ScenesServer/QuestAction.h	/^    typedef T value_type;$/;"	t	class:Op::Mul
value_type	ScenesServer/QuestAction.h	/^    typedef T value_type;$/;"	t	class:Op::Pow
value_type	ScenesServer/QuestAction.h	/^    typedef T value_type;$/;"	t	class:Op::Set
value_type	ScenesServer/QuestAction.h	/^    typedef T value_type;$/;"	t	class:Op::Sub
value_type	ScenesServer/QuestAction.h	/^  typedef int value_type;$/;"	t	class:AddBindItemAction
value_type	ScenesServer/QuestAction.h	/^  typedef int value_type;$/;"	t	class:AddItemAction
value_type	ScenesServer/QuestAction.h	/^  typedef int value_type;$/;"	t	class:RemoveItemAction
value_type	ScenesServer/QuestAction.h	/^  typedef typename Operation::value_type value_type;$/;"	t	class:CountrysVarAction
value_type	ScenesServer/QuestAction.h	/^  typedef typename Operation::value_type value_type;$/;"	t	class:GlobalAction
value_type	ScenesServer/QuestAction.h	/^  typedef typename Operation::value_type value_type;$/;"	t	class:VarAction
value_type	ScenesServer/QuestCondition.h	/^    typedef T value_type;$/;"	t	class:Op::Differ
value_type	ScenesServer/QuestCondition.h	/^    typedef T value_type;$/;"	t	class:Op::Equal
value_type	ScenesServer/QuestCondition.h	/^    typedef T value_type;$/;"	t	class:Op::Great
value_type	ScenesServer/QuestCondition.h	/^    typedef T value_type;$/;"	t	class:Op::Less
value_type	ScenesServer/QuestCondition.h	/^  typedef int value_type;$/;"	t	class:ItemCondition
value_type	ScenesServer/QuestCondition.h	/^  typedef typename Operation::value_type value_type;$/;"	t	class:GlobalCondition
value_type	ScenesServer/QuestCondition.h	/^  typedef typename Operation::value_type value_type;$/;"	t	class:HeroLevelCondition
value_type	ScenesServer/QuestCondition.h	/^  typedef typename Operation::value_type value_type;$/;"	t	class:LevelCondition
value_type	ScenesServer/QuestCondition.h	/^  typedef typename Operation::value_type value_type;$/;"	t	class:VarCondition
value_type	SuperServer/BroadClientManager.h	/^    typedef BroadClientContainer::value_type value_type;$/;"	t	class:BroadClientManager
value_type	SuperServer/FLClientManager.h	/^    typedef FLClientContainer::value_type value_type;$/;"	t	class:FLClientManager
value_type	SuperServer/InfoClientManager.h	/^    typedef InfoClient_map::value_type value_type;$/;"	t	class:InfoClientManager
value_type	SuperServer/RolechangeClientManager.h	/^    typedef RolechangeClient_map::value_type value_type;$/;"	t	class:RolechangeClientManager
value_type	base/xml/xml_node_container.h	/^	    typedef typename Container::value_type	value_type;$/;"	t	class:detail::xml_node_map_container
value_type	base/xml/xml_node_container.h	/^	    typedef typename Container::value_type  value_type;$/;"	t	class:detail::xml_node_seq_container
value_type	base/xml/xml_node_content.h	/^	typedef T   value_type;$/;"	t	class:xml_content
value_type	base/xml/xml_node_prop.h	/^	typedef T   value_type;$/;"	t	class:xml_prop
value_type	roleChangeServer/ChangeTask.h	/^	typedef NetInfo_multimap::value_type value_type;$/;"	t	class:RoleContainer
varCount	tmpcode/commond.h	/^        DWORD varCount;     \/\/»ŒŒÒ±‰¡ø◊‹≥§∂»$/;"	m	struct:showPeronTaskUserCmd
varName	tmpcode/commond.h	/^        char  varName[MAX_NAMESIZE];$/;"	m	struct:stRetDailyWarningQuestUserCmd::quests
var_iterator	ScenesServer/Quest.h	/^  typedef VARS::iterator var_iterator;$/;"	t	class:Vars
vars	ScenesServer/Quest.cpp	/^Vars* QuestList::vars(DWORD id) const$/;"	f	class:QuestList
vars	ScenesServer/Quest.cpp	/^Vars* UserVar::vars(DWORD id,QWORD key) const$/;"	f	class:UserVar
vars	ScenesServer/Quest.h	/^    Vars* vars(QWORD key) const$/;"	f	class:UserVar::VAR
vars	ScenesServer/Quest.h	/^  Vars* vars(QWORD id) const$/;"	f	class:GlobalVarImpl
vars_iterator	ScenesServer/Quest.h	/^  typedef VARS::iterator vars_iterator;$/;"	t	class:GlobalVarImpl
vars_iterator	ScenesServer/Quest.h	/^  typedef VARS::iterator vars_iterator;$/;"	t	class:UserVar
ventureType	tmpcode/commond.h	/^		BYTE  ventureType;              \/\/ «∑Ò√∞œ’»ŒŒÒ£¨1Œ™ «£¨2≤ª «$/;"	m	struct:stRetDailyRandomQuestUserCmd::quests
ver	Robot/LoadMap.h	/^  DWORD ver;        \/**< ÁâàÊú¨ MAP_VERSION *\/$/;"	m	struct:stMapFileHeader
ver	ScenesServer/LoadMap.h	/^  DWORD ver;        \/**< ÁâàÊú¨ MAP_VERSION *\/$/;"	m	struct:stMapFileHeader
ver	base/CharBase.h	/^    BYTE ver;$/;"	m	struct:CounterMember
verify	BillServer/BillManager.cpp	/^bool BillManager::verify(const t_NewLoginSession &session)$/;"	f	class:BillManager
verify	GatewayServer/LoginSessionManager.cpp	/^bool LoginSessionManager::verify(const DWORD loginTempID,const DWORD accid,char *numPassword,DES_cblock *key)$/;"	f	class:LoginSessionManager
verify	RecordServer/RecordSessionManager.cpp	/^bool RecordSessionManager::verify(const DWORD accid,const DWORD id,const WORD wdServerID)$/;"	f	class:RecordSessionManager
verify	SuperServer/ServerTask.cpp	/^bool ServerTask::verify(WORD wdType,const char *pstrIP)$/;"	f	class:ServerTask
verify	base/zTCPTask.h	/^		verify    =  1,            \/**< ¡¨Ω”—È÷§◊¥Ã¨ *\/$/;"	e	enum:zTCPTask::zTCPTask_State
verifyACCID	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::verifyACCID(const Cmd::stNullUserCmd *pNullCmd)$/;"	f	class:GatewayTask
verifyConn	BillServer/BillTask.cpp	/^int BillTask::verifyConn()$/;"	f	class:BillTask
verifyConn	FLServer/LoginTask.cpp	/^int LoginTask::verifyConn()$/;"	f	class:LoginTask
verifyConn	FLServer/ServerTask.cpp	/^int ServerTask::verifyConn()$/;"	f	class:ServerTask
verifyConn	FLServer/UserTask.cpp	/^int UserTask::verifyConn()$/;"	f	class:UserTask
verifyConn	GatewayServer/GatewayTask.cpp	/^int GatewayTask::verifyConn()$/;"	f	class:GatewayTask
verifyConn	RecordServer/RecordTask.cpp	/^int RecordTask::verifyConn()$/;"	f	class:RecordTask
verifyConn	ScenesServer/SceneTask.cpp	/^int SceneTask::verifyConn()$/;"	f	class:SceneTask
verifyConn	SessionServer/SessionTask.cpp	/^int SessionTask::verifyConn()$/;"	f	class:SessionTask
verifyConn	SuperServer/ServerTask.cpp	/^int ServerTask::verifyConn()$/;"	f	class:ServerTask
verifyConn	base/zTCPTask.h	/^	virtual int verifyConn()$/;"	f	class:zTCPTask
verifyConn	roleChangeServer/ChangeTask.cpp	/^int ChangeTask::verifyConn()$/;"	f	class:ChangeTask
verifyConn	roleRegServer/RoleTask.cpp	/^int RoleTask::verifyConn()$/;"	f	class:RoleTask
verifyLogin	BillServer/BillTask.cpp	/^bool BillTask::verifyLogin(const Cmd::Bill::t_LoginBill *ptCmd)$/;"	f	class:BillTask
verifyLogin	RecordServer/RecordTask.cpp	/^bool RecordTask::verifyLogin(const Cmd::Record::t_LoginRecord *ptCmd)$/;"	f	class:RecordTask
verifyLogin	ScenesServer/SceneTask.cpp	/^bool SceneTask::verifyLogin(const Cmd::Scene::t_LoginScene *ptCmd)$/;"	f	class:SceneTask
verifyLogin	SessionServer/SessionTask.cpp	/^bool SessionTask::verifyLogin(const Cmd::Session::t_LoginSession *ptCmd)$/;"	f	class:SessionTask
verifyNpcAction	ScenesServer/NpcTrade.cpp	/^bool NpcTrade::verifyNpcAction(const DWORD npcid,const NpcItem &item)$/;"	f	class:NpcTrade
verifyReturn	FLServer/LoginManager.cpp	/^void LoginManager::verifyReturn(const DWORD loginTempID,const BYTE retcode,const t_NewLoginSession &session)$/;"	f	class:LoginManager
verifyStr	tmpcode/commond.h	/^	WORD verifyStr[3];\/\/∑µªÿµƒ—È÷§¬Î÷–Œƒ$/;"	m	struct:stSellObjListNpcTradeUserCmd
verifyStr	tmpcode/commond.h	/^	WORD verifyStr[3];\/\/∑µªÿµƒ—È÷§¬Î÷–Œƒ$/;"	m	struct:stSellObjectNpcTradeUserCmd
verifyThreads	base/zTCPTaskPool.h	/^	zThreadGroup verifyThreads;                \/**< —È÷§œﬂ≥Ã£¨ø…“‘”–∂‡∏ˆ *\/$/;"	m	class:zTCPTaskPool
verifyTypeOK	SuperServer/ServerTask.cpp	/^bool ServerTask::verifyTypeOK(const WORD wdType,std::vector<ServerTask *> &sv)$/;"	f	class:ServerTask
verifyVer	FLServer/GYListManager.cpp	/^bool GYListManager::verifyVer(const GameZone_t &gameZone,DWORD verify_client_version,BYTE &retcode)$/;"	f	class:GYListManager
verifyVersion	GatewayServer/GatewayTask.cpp	/^bool GatewayTask::verifyVersion(const Cmd::stNullUserCmd *pNullCmd)$/;"	f	class:GatewayTask
verifyVersion	base/RolechangeCommand.h	/^	DWORD verifyVersion;$/;"	m	struct:Cmd::Rolechange::t_Check_Valid
verify_client_version	FLServer/LoginTask.h	/^	DWORD verify_client_version;$/;"	m	class:LoginTask
verify_client_version	GatewayServer/GatewayServer.h	/^	DWORD verify_client_version;$/;"	m	class:GatewayService
verify_version	RecordServer/RecordServer.h	/^    DWORD verify_version;	\/\/◊™«¯—È÷§∞Ê±æ∫≈$/;"	m	class:RecordService
verify_version	ScenesServer/ScenesServer.h	/^    DWORD verify_version;$/;"	m	class:ScenesService
verionFlag	tmpcode/commond.h	/^	bool verionFlag;   \/\/øÕªß∂À–¬æ…±Í æ ƒ¨»œŒ™æ…(ªÓ∂Ø”√)$/;"	m	struct:stLoginSelectUserCmd
veriry_ok	BillServer/BillTask.h	/^    bool veriry_ok;$/;"	m	class:BillTask
veriry_ok	ScenesServer/SceneTask.h	/^    bool veriry_ok;$/;"	m	class:SceneTask
version	base/Command.h	/^  DWORD version;$/;"	m	struct:Cmd::stUserVerifyVerCmd
version	base/ZlibObject.h	/^    DWORD version;$/;"	m	struct:ZlibObject
version	tmpcode/commond.h	/^	DWORD version;$/;"	m	struct:stUserVerifyVerCmd
versionCmd	Robot/Client.cpp	/^bool Client::versionCmd()$/;"	f	class:Client
versionCmd	Robot/LoginClient.cpp	/^bool LoginClient::versionCmd()$/;"	f	class:LoginClient
versionCode	base/SceneCommand.h	/^      DWORD versionCode;          \/\/\/ ∞Ê±æ–£—È¬Î$/;"	m	struct:Cmd::Scene::t_ChangeVerifyVersion
versionFlag	base/Command.h	/^  bool versionFlag;$/;"	m	struct:Cmd::stLoginSelectUserCmd
versionVerified	GatewayServer/GatewayTask.h	/^	bool versionVerified;$/;"	m	class:GatewayTask
vip_time	BillServer/BillManager.h	/^  DWORD vip_time;    \/**< vipÂà∞ÊúüÊó∂Èó¥ *\/$/;"	m	struct:BillInfo
vip_time	BillServer/BillUser.h	/^    DWORD vip_time;    \/**< vipÂà∞ÊúüÊó∂Èó¥ *\/$/;"	m	class:BillUser
vip_user	GatewayServer/GatewayTask.h	/^	bool vip_user;$/;"	m	class:GatewayTask
visitCount	tmpcode/commond.h	/^	DWORD	visitCount;                    \/\/∑√Œ ¡ø $/;"	m	struct:HomeMapData
visitNpc	ScenesServer/SceneUser.h	/^    void visitNpc(const DWORD npcID,const DWORD npcTempID)$/;"	f	struct:SceneUser
vit	base/Command.h	/^	DWORD vit;               \/\/‰ΩìË¥®$/;"	m	struct:Cmd::t_PetData
vit	tmpcode/commond.h	/^	WORD vit;               \/\/ÃÂ÷ $/;"	m	struct:t_PetData
voteDragonIndex	tmpcode/commond.h	/^	BYTE voteDragonIndex;   \/\/¡˙≥Ë∂‘œÛ–Ú∫≈$/;"	m	struct:stRetVoteInChallengeDragonUserCmd
voteDragonIndex	tmpcode/commond.h	/^	BYTE voteDragonIndex;   \/\/¡˙≥Ë∂‘œÛ–Ú∫≈,=0 «Î«Û£¨32«øµƒ¡˙≥Ëπÿ◊¢∂»(server->client)$/;"	m	struct:stVoteInChallengeDragonUserCmd
voteInfo	tmpcode/commond.h	/^	struct voteInfo$/;"	s	struct:stRetRecallMasterInfo
voteName	tmpcode/commond.h	/^		char voteName[MAX_NAMESIZE];$/;"	m	struct:stRetRecallMasterInfo::voteInfo
voteNum	tmpcode/commond.h	/^	WORD voteNum;$/;"	m	struct:stRetRecallMasterInfo
voteType	tmpcode/commond.h	/^	BYTE voteType;          \/\/0 ±«Î«Û∏√¡˙≥Ë∫√∆¿∂»∫Õπÿ◊¢∂»£¨1Œ™ÀÕœ ª®£¨2Œ™‘“º¶µ∞$/;"	m	struct:stVoteInChallengeDragonUserCmd
voteType	tmpcode/commond.h	/^	BYTE voteType;          \/\/—∫◊¢¿‡–Õ:1:æ∫≤¬π⁄æ¸≥ËŒÔ£¨2:æ∫≤¬π⁄æ¸ΩÁ”Ú$/;"	m	struct:stReqBetInChallengeDragonUserCmd
voteType	tmpcode/commond.h	/^	BYTE voteType;$/;"	m	struct:stNotifyLastBetWinDragonUserCmd
vts	base/zThread.h	/^	Container vts;                \/**< Á∫øÁ®ãÂêëÈáè *\/$/;"	m	class:zThreadGroup
w	tmpcode/commond.h	/^	WORD w;$/;"	m	struct:rtPictureHelpUserCmd
wBonusNum	tmpcode/commond.h	/^	WORD wBonusNum;  \/\/ Ω±¿¯∏ˆ ˝$/;"	m	struct:stReturnGoodsBonusInfoCmd
wCount	tmpcode/commond.h	/^	WORD wCount;  \/\/ ¥´ÀÕµÿµ„∏ˆ ˝$/;"	m	struct:stTransportObjectConfigUserCmd
wCountryLevel	tmpcode/commond.h	/^			WORD wCountryLevel;$/;"	m	struct:stRetRanksChatCmd::__anon246::__anon247
wCountrySept	tmpcode/commond.h	/^			WORD wCountrySept;$/;"	m	struct:stRetRanksChatCmd::__anon246::__anon247
wCountryUnion	tmpcode/commond.h	/^			WORD wCountryUnion;$/;"	m	struct:stRetRanksChatCmd::__anon246::__anon247
wDays	tmpcode/commond.h	/^	DWORD wDays;  \/\/ “—Ω®…ËÃÏ ˝$/;"	m	struct:stRetCityHeartState
wElectricAbsb	tmpcode/commond.h	/^	WORD wElectricAbsb;$/;"	m	struct:t_MainUserData
wEventClass	tmpcode/commond.h	/^	WORD wEventClass;  \/\/ EventClassEnum$/;"	m	struct:stBigEventUserCmd
wEventSubType	tmpcode/commond.h	/^	WORD wEventSubType;  \/\/ XxxEventEnum$/;"	m	struct:stBigEventUserCmd
wFireAbsb	tmpcode/commond.h	/^	WORD wFireAbsb;$/;"	m	struct:t_MainUserData
wHoursLeft	tmpcode/commond.h	/^	WORD wHoursLeft;  \/\/  £”‡–° ± ˝, ∞¥…·»Î»°’˚$/;"	m	struct:stReturnCountryTransportLimitUserCmd
wIceAbsb	tmpcode/commond.h	/^	WORD wIceAbsb;$/;"	m	struct:t_MainUserData
wJob	tmpcode/commond.h	/^	WORD wJob;                                      \/\/÷∞“µ$/;"	m	struct:stTeamMemberData
wLastWeekFlower	tmpcode/commond.h	/^			WORD wLastWeekFlower;$/;"	m	struct:stRetRanksChatCmd::__anon246::__anon247
wLevel	tmpcode/commond.h	/^	WORD wLevel;                            \/\/µ»º∂$/;"	m	struct:stTeamMemberData
wLevel	tmpcode/commond.h	/^	WORD wLevel;             \/\/◊ÓµÕ◊∞±∏µ»º∂	$/;"	m	struct:stReturnQuestionJinglingZhige
wMsg	SessionServer/SessionServer.cpp	/^std::map<BYTE,worldMsg> SessionService::wMsg;$/;"	m	class:SessionService
wMsg	SessionServer/SessionServer.h	/^    static std::map<BYTE,worldMsg> wMsg;$/;"	m	class:SessionService
wNeedBuyNum	tmpcode/commond.h	/^	WORD wNeedBuyNum;  \/\/ –Ë“™π∫¬Ú∏ˆ ˝$/;"	m	struct:stReturnGoodsBonusInfoCmd
wNeedLevel	tmpcode/commond.h	/^	 WORD wNeedLevel;$/;"	m	struct:stReqTeamInfoCmd
wNeedLevel	tmpcode/commond.h	/^	 WORD wNeedLevel;$/;"	m	struct:stRetTeamInfoCmd
wNeedSpace	tmpcode/commond.h	/^	WORD  wNeedSpace;   \/\/ –Ë“™±≥∞¸ø’∏Ò$/;"	m	struct:Exchange2GiftItem
wNeedSpace	tmpcode/commond.h	/^	WORD wNeedSpace;  \/\/ Ω±¿¯ŒÔ∆∑–Ë“™∞¸π¸ø’º‰$/;"	m	struct:stReturnGoodsBonusInfoCmd
wNewJob	tmpcode/commond.h	/^    WORD   wNewJob;$/;"	m	struct:stChangeUserJobPropertyUserCmd
wParamNum	tmpcode/commond.h	/^	WORD wParamNum;  \/\/ ≤Œ ˝∏ˆ ˝$/;"	m	struct:stBigEventUserCmd
wPieceNum	tmpcode/commond.h	/^	WORD wPieceNum;  \/\/ …œ¥Œ π”√µƒ∏ˆ ˝$/;"	m	struct:stReturnPrevSealMagicUserCmd
wProgress	tmpcode/commond.h	/^	BYTE wProgress;  \/\/ Ω®…Ë∂»∞Ÿ∑÷±»÷µ, 0..100$/;"	m	struct:stRetCityHeartState
wQualityMeterialNum	tmpcode/commond.h	/^	DWORD wQualityMeterialNum;  \/\/ º” ˝∆∑÷ ±£¡Ù≤ƒ¡œ ˝¡ø$/;"	m	struct:stEquipUpgradePropertyUserCmd
wTheWeekFlower	tmpcode/commond.h	/^			WORD wTheWeekFlower;$/;"	m	struct:stRetRanksChatCmd::__anon246::__anon247
wThunderAbsb	tmpcode/commond.h	/^	WORD wThunderAbsb;$/;"	m	struct:t_MainUserData
wTodayLeftTimes	tmpcode/commond.h	/^	WORD wTodayLeftTimes;  \/\/ ±æ»’ £”‡ π”√¥Œ ˝$/;"	m	struct:stTransportObjectConfigUserCmd
wTodaysHero	tmpcode/commond.h	/^			WORD wTodaysHero;$/;"	m	struct:stRetRanksChatCmd::__anon246::__anon247
wTotalScore	tmpcode/commond.h	/^	WORD wTotalScore;	\/\/ ◊‹ª˝∑÷                            $/;"	m	struct:stDanceGameScore
wUsePieceNum	tmpcode/commond.h	/^	WORD wUsePieceNum;  \/\/ ¥˝ Õ∑≈µƒÀÈ∆¨∏ˆ ˝$/;"	m	struct:stSealMagicUserCmd
wWindAbsb	tmpcode/commond.h	/^	WORD wWindAbsb;	\/\/ Wind absorbility$/;"	m	struct:t_MainUserData
wWorldLevel	tmpcode/commond.h	/^			WORD wWorldLevel;$/;"	m	struct:stRetRanksChatCmd::__anon246::__anon247
wWorldSept	tmpcode/commond.h	/^			WORD wWorldSept;$/;"	m	struct:stRetRanksChatCmd::__anon246::__anon247
wWorldUnion	tmpcode/commond.h	/^			WORD wWorldUnion;$/;"	m	struct:stRetRanksChatCmd::__anon246::__anon247
wYesterdaysHero	tmpcode/commond.h	/^			WORD wYesterdaysHero;$/;"	m	struct:stRetRanksChatCmd::__anon246::__anon247
wait	base/zCond.h	/^	void wait(zMutex &mutex)$/;"	f	class:zCond
wait	base/zSyncEvent.h	/^	void wait()$/;"	f	class:zSyncEvent
waitPlayState	GatewayServer/GateUser.h	/^	void waitPlayState()$/;"	f	class:GateUser
waitRecycle	ScenesServer/SceneUser.cpp	/^zRTime& SceneUser::waitRecycle()$/;"	f	class:SceneUser
waitSync	FLServer/ServerTask.cpp	/^int ServerTask::waitSync()$/;"	f	class:ServerTask
waitSync	FLServer/UserTask.cpp	/^int UserTask::waitSync()$/;"	f	class:UserTask
waitSync	GatewayServer/GatewayTask.cpp	/^int GatewayTask::waitSync()$/;"	f	class:GatewayTask
waitSync	ScenesServer/SceneTask.cpp	/^int SceneTask::waitSync()$/;"	f	class:SceneTask
waitSync	SuperServer/ServerTask.cpp	/^int ServerTask::waitSync()$/;"	f	class:ServerTask
waitSync	base/zTCPTask.h	/^	virtual int waitSync()$/;"	f	class:zTCPTask
waitSync	roleChangeServer/ChangeTask.cpp	/^int ChangeTask::waitSync()$/;"	f	class:ChangeTask
waitSync	roleRegServer/RoleTask.cpp	/^int RoleTask::waitSync()$/;"	f	class:RoleTask
waitUnregState	GatewayServer/GateUser.h	/^	void waitUnregState()$/;"	f	class:GateUser
wait_gomap_name	ScenesServer/SceneUser.h	/^    char wait_gomap_name[MAX_NAMESIZE];$/;"	m	struct:SceneUser
waitingCharInfo	Robot/Client.h	/^    bool waitingCharInfo;$/;"	m	struct:ClientBase
wakeUpAllAttend	ScenesServer/ChallengeGame.cpp	/^bool ChallengeGame::wakeUpAllAttend()$/;"	f	class:ChallengeGame
warState	tmpcode/commond.h	/^	bool  warState;   \/\/ «∑ÒΩ¯––’Ω’˘µƒ±Í÷æ  trueŒ™’Ê$/;"	m	struct:UnionCityDareInfo
warp	ScenesServer/SceneNpc.cpp	/^bool SceneNpc::warp(const zPos &newPos,bool ignore)$/;"	f	class:SceneNpc
watchTrap	ScenesServer/SceneEntryPk.h	/^    bool watchTrap;    \/\/\/ ËßÇÂØüÈô∑Èò±$/;"	m	struct:SceneEntryPk
watchType	tmpcode/commond.h	/^	BYTE watchType; $/;"	m	struct:stWatchFriendUserCmd
watcherNum	tmpcode/commond.h	/^	WORD watcherNum;$/;"	m	struct:stInfoChallengeUserCmd
watcherNum	tmpcode/commond.h	/^	WORD watcherNum;$/;"	m	struct:stWatcherNumChallengeUserCmd
water	tmpcode/commond.h	/^	BYTE water;			\/\/ÀÆ∑÷$/;"	m	struct:stLandItem
waterPower	tmpcode/commond.h	/^			WORD waterPower;                \/\/ ÀÆ…Ò÷Æ¡¶$/;"	m	struct:t_MainUserData::__anon220::__anon221
wdAddPkPoints	tmpcode/commond.h	/^		WORD wdAddPkPoints[5];$/;"	m	union:LingQiPkData::__anon329
wdAward	tmpcode/commond.h	/^	WORD wdAward[AWARD_SECTION_NUMS];       \/\/Ω±¿¯  $/;"	m	struct:stRtnSponserAwardCallBackUserCmd
wdCommitPrice	base/Command.h	/^  DWORD wdCommitPrice;$/;"	m	struct:Cmd::ConsignSelfHistoryType
wdCommitPrice	tmpcode/commond.h	/^	DWORD wdCommitPrice;$/;"	m	struct:ConsignSelfHistoryType
wdCon	base/CharBase.h	/^      WORD wdCon;  \/\/‰ΩìË¥®$/;"	m	struct:CharBase::__anon14::__anon15
wdCon	base/CharBase.h	/^      WORD wdCon;  \/\/‰ΩìË¥®$/;"	m	struct:CharState::__anon17::__anon18
wdCon	base/Command.h	/^      DWORD wdCon;  \/\/‰ΩìË¥®$/;"	m	struct:Cmd::t_MainUserData::__anon72::__anon73
wdCon	tmpcode/commond.h	/^			WORD wdCon;	\/\/ÃÂ÷ $/;"	m	struct:t_MainUserData::__anon216::__anon217
wdCostForce	tmpcode/commond.h	/^    WORD wdCostForce;    \/*ººƒ‹œ˚∫ƒ¡Ï”Ú÷Æ¡¶µƒ¿‡–Õ÷µ *\/$/;"	m	struct:stCostForcePropertyUserCmd
wdCountry	base/SessionCommand.h	/^      WORD wdCountry;$/;"	m	struct:Cmd::Session::t_regUser_GateSession
wdCrazyPower	tmpcode/commond.h	/^        WORD wdCrazyPower;                              \/\/∑Ë…Ò÷Æ¡¶$/;"	m	struct:stSetForceDataUserCmd
wdDataLen	tmpcode/commond.h	/^	DWORD wdDataLen;  \/\/  ˝æ›◊‹≥§∂»$/;"	m	struct:stBigEventUserCmd
wdDegree	base/SessionCommand.h	/^      WORD  wdDegree;$/;"	m	struct:Cmd::Session::stCountMember
wdDegree	base/SessionCommand.h	/^      WORD  wdDegree;$/;"	m	struct:Cmd::Session::stRequestReturnMember
wdDex	base/CharBase.h	/^      WORD wdDex;  \/\/ÊïèÊç∑$/;"	m	struct:CharBase::__anon14::__anon15
wdDex	base/CharBase.h	/^      WORD wdDex;  \/\/ÊïèÊç∑$/;"	m	struct:CharState::__anon17::__anon18
wdDex	base/Command.h	/^      DWORD wdDex;  \/\/ÊïèÊç∑$/;"	m	struct:Cmd::t_MainUserData::__anon72::__anon73
wdDex	tmpcode/commond.h	/^			WORD wdDex;	\/\/√ÙΩ›$/;"	m	struct:t_MainUserData::__anon216::__anon217
wdDragonPower	tmpcode/commond.h	/^        WORD wdDragonPower;                             \/\/¡˙…Ò÷Æ¡¶$/;"	m	struct:stSetForceDataUserCmd
wdEarthPower	tmpcode/commond.h	/^        WORD wdEarthPower;                              \/\/µÿ…Ò÷Æ¡¶$/;"	m	struct:stSetForceDataUserCmd
wdEvolvePoints	tmpcode/commond.h	/^		WORD wdEvolvePoints[4];$/;"	m	union:LingQiEvolveData::__anon335
wdEvolvePoints	tmpcode/commond.h	/^		WORD wdEvolvePoints[4];$/;"	m	union:LingQiSimulate::__anon368
wdFace	base/Command.h	/^  WORD wdFace;          \/\/ËÇñÂÉè$/;"	m	struct:Cmd::stTeamMemberData
wdFace	tmpcode/commond.h	/^	WORD wdFace;					\/\/–§œÒ$/;"	m	struct:stTeamMemberData
wdFirePower	tmpcode/commond.h	/^        WORD wdFirePower;                               \/\/ª…Ò÷Æ¡¶$/;"	m	struct:stSetForceDataUserCmd
wdForceSetup	tmpcode/commond.h	/^        WORD wdForceSetup[FORCESKILL_NUM\/2]; \/\/«∞√Ê“ª∞Î¡Ï”Ú÷Æ¡¶ººƒ‹–Ë“™…Ë÷√£¨∫Û√Êƒ¨»œ»´—°$/;"	m	struct:stForceSetupDataUserCmd
wdForceSkillIndex	tmpcode/commond.h	/^    DWORD wdForceSkillIndex; \/*¡Ï”Ú÷Æ¡¶ººƒ‹±‡∫≈*\/$/;"	m	struct:stCostForcePropertyUserCmd
wdGatewayID	BillServer/BillManager.h	/^  WORD wdGatewayID;    \/**< ÁôªÈôÜÁöÑÁΩëÂÖ≥ÁºñÂè∑ *\/$/;"	m	struct:BillInfo
wdGatewayID	base/zType.h	/^  WORD wdGatewayID;$/;"	m	struct:t_NewLoginSession
wdHP	ScenesServer/SceneNpc.h	/^  DWORD wdHP;$/;"	m	struct:t_expRec
wdInt	base/CharBase.h	/^      WORD wdInt;  \/\/Êô∫Âäõ$/;"	m	struct:CharBase::__anon14::__anon15
wdInt	base/CharBase.h	/^      WORD wdInt;  \/\/Êô∫Âäõ$/;"	m	struct:CharState::__anon17::__anon18
wdInt	base/Command.h	/^      DWORD wdInt;  \/\/Êô∫Âäõ$/;"	m	struct:Cmd::t_MainUserData::__anon72::__anon73
wdInt	tmpcode/commond.h	/^			WORD wdInt;	\/\/÷«¡¶$/;"	m	struct:t_MainUserData::__anon216::__anon217
wdKar	base/Command.h	/^      DWORD wdKar;$/;"	m	struct:Cmd::t_MainUserData::__anon72::__anon73
wdKar	tmpcode/commond.h	/^			WORD wdKar;	\/\/‘À∆¯$/;"	m	struct:t_MainUserData::__anon216::__anon217
wdLevel	base/Command.h	/^  WORD  wdLevel;                       \/\/ Â∏Æ‰ºöÁ∫ßÂà´$/;"	m	struct:Cmd::stUnionBaseInfoCmd
wdLevel	base/Command.h	/^  WORD wdLevel;        \/**< ÊäÄËÉΩÁ≠âÁ∫ß *\/$/;"	m	struct:Cmd::stAddUserSkillPropertyUserCmd
wdLevel	base/Command.h	/^  WORD wdLevel;        \/**< ÊäÄËÉΩÁ≠âÁ∫ß *\/$/;"	m	struct:Cmd::stUpgradeUserSkillPropertyUserCmd
wdLevel	base/SessionCommand.h	/^      WORD  wdLevel;      \/\/ Á±ªÂûãÔºå0‰∏∫Êé•ÂèóÊåëÊàòÁöÑÔºå1ÂèØÊé•ÂèóÊåëÊàòÁöÑ,3,ÊâÄÊúâÂõΩÂÆ∂ÊåëÊàò‰ø°ÊÅØ$/;"	m	struct:Cmd::Session::t_changeUserData_SceneSession
wdLevel	base/SessionCommand.h	/^      WORD wdLevel;$/;"	m	struct:Cmd::Session::t_regUser_GateSession
wdLevel	base/Union.h	/^  WORD    wdLevel;                        \/\/ Â∏Æ‰ºöÁ∫ßÂà´$/;"	m	struct:UnionDef::stUnionInfo
wdLevel	tmpcode/commond.h	/^	WORD  wdLevel;                       \/\/ ”∂±¯Õ≈º∂±$/;"	m	struct:stUnionBaseInfoCmd
wdLevel	tmpcode/commond.h	/^	WORD wdLevel;				\/**< ººƒ‹µ»º∂ *\/$/;"	m	struct:stAddUserSkillPropertyUserCmd
wdLightPower	tmpcode/commond.h	/^        WORD wdLightPower;                              \/\/π‚…Ò÷Æ¡¶$/;"	m	struct:stSetForceDataUserCmd
wdLoginID	base/FLCommand.h	/^      WORD wdLoginID;$/;"	m	struct:Cmd::FL::t_idinuse_Session
wdLoginID	base/SuperCommand.h	/^      WORD wdLoginID;$/;"	m	struct:Cmd::Super::t_idinuse_Bill
wdLoginID	base/zType.h	/^  WORD wdLoginID;$/;"	m	struct:t_NewLoginSession
wdMagicType	base/Command.h	/^  WORD wdMagicType;      \/**< È≠îÊ≥ïÁºñÂè∑ *\/$/;"	m	struct:Cmd::stAttackMagicUserCmd
wdMagicType	tmpcode/commond.h	/^	WORD wdMagicType;			\/**< ƒß∑®¿‡–Õ *\/$/;"	m	struct:stAttackMagicUserCmd
wdMagicType	tmpcode/commond.h	/^    WORD wdMagicType;                       \/**< ƒß∑®¿‡–Õ *\/$/;"	m	struct:stSingMagicUserCmd
wdMarsPower	tmpcode/commond.h	/^        WORD wdMarsPower;                               \/\/’Ω…Ò÷Æ¡¶$/;"	m	struct:stSetForceDataUserCmd
wdMaxLevel	tmpcode/commond.h	/^                WORD wdMaxLevel;                \/\/◊Ó∏ﬂµƒ«±ƒ‹µ»º∂$/;"	m	struct:stRetPotentialSkillBuildUserCmd::SkillItem
wdMaxVigourValue	tmpcode/commond.h	/^	WORD wdMaxVigourValue;$/;"	m	struct:stShowVigourValueQuestUserCmd
wdMen	base/CharBase.h	/^      WORD wdMen;  \/\/Á≤æÁ•û$/;"	m	struct:CharBase::__anon14::__anon15
wdMen	base/CharBase.h	/^      WORD wdMen;  \/\/Á≤æÁ•û$/;"	m	struct:CharState::__anon17::__anon18
wdMen	base/Command.h	/^      DWORD wdMen;  \/\/Á≤æÁ•û$/;"	m	struct:Cmd::t_MainUserData::__anon72::__anon73
wdMen	tmpcode/commond.h	/^			WORD wdMen;	\/\/æ´…Ò$/;"	m	struct:t_MainUserData::__anon216::__anon217
wdMineLevel	tmpcode/commond.h	/^                WORD wdMineLevel;               \/\/◊‘º∫µƒ«±ƒ‹µ»º∂$/;"	m	struct:stRetPotentialSkillBuildUserCmd::SkillItem
wdNetType	base/Command.h	/^  WORD wdNetType;$/;"	m	struct:Cmd::stUserRefrainLoginCmd
wdNetType	base/Command.h	/^  WORD wdNetType;$/;"	m	struct:Cmd::stUserRequestLoginCmd
wdNetType	base/zType.h	/^  WORD wdNetType;$/;"	m	struct:t_NewLoginSession
wdNetType	tmpcode/commond.h	/^	WORD wdNetType;             \/**< Õ¯πÿÕ¯¬Á¿‡–Õ£¨0µÁ–≈£¨1Õ¯Õ® *\/$/;"	m	struct:stUserRequestLoginCmd
wdNetType	tmpcode/commond.h	/^	WORD wdNetType;             \/**< Õ¯πÿÕ¯¬Á¿‡–Õ£¨0µÁ–≈£¨1Õ¯Õ® *\/$/;"	m	struct:stUserRequestMtcardCmd
wdNum	base/Command.h	/^  DWORD wdNum;$/;"	m	struct:Cmd::ConsignSelfHistoryType
wdNum	tmpcode/commond.h	/^	DWORD wdNum;$/;"	m	struct:ConsignSelfHistoryType
wdNumOnline	FLServer/GYListManager.h	/^	WORD wdNumOnline;      \/**< ÁΩëÂÖ≥Âú®Á∫ø‰∫∫Êï∞ *\/$/;"	m	struct:GYList
wdNumOnline	base/FLCommand.h	/^      WORD wdNumOnline;      \/**< ÁΩëÂÖ≥Âú®Á∫ø‰∫∫Êï∞ *\/$/;"	m	struct:Cmd::FL::t_GYList_FL
wdNumOnline	base/SuperCommand.h	/^      WORD wdNumOnline;      \/**< ÁΩëÂÖ≥Âú®Á∫ø‰∫∫Êï∞ *\/$/;"	m	struct:Cmd::Super::t_GYList_Gateway
wdNumber	base/Command.h	/^  DWORD wdNumber;                         \/**< Êï∞Èáè *\/$/;"	m	struct:Cmd::t_MapObjectData
wdNumber	tmpcode/commond.h	/^	DWORD wdNumber;                         \/**<  ˝¡ø *\/$/;"	m	struct:t_MapObjectData
wdOccupation	base/Command.h	/^  WORD wdOccupation;          \/\/ ÊàêÂëòËÅå‰∏ö$/;"	m	struct:Cmd::stBroadcastSeptMemberInfo
wdOccupation	base/Command.h	/^  WORD wdOccupation;        \/\/ ÊàêÂëòËÅå‰∏ö$/;"	m	struct:Cmd::stBroadcastMemberInfo
wdOccupation	base/Sept.h	/^  WORD    wdOccupation;        \/\/ ª·‘±µƒ÷∞“µ$/;"	m	struct:SeptDef::stSeptMemberInfo
wdOccupation	base/SessionCommand.h	/^      WORD wdOccupation;$/;"	m	struct:Cmd::Session::t_regUser_GateSession
wdOccupation	base/Union.h	/^  WORD    wdOccupation;          \/\/ ‰ºöÂëòÁöÑËÅå‰∏ö$/;"	m	struct:UnionDef::stUnionMemberInfo
wdOccupation	tmpcode/commond.h	/^	WORD wdOccupation;				\/\/ ≥…‘±÷∞“µ$/;"	m	struct:stBroadcastMemberInfo
wdOccupation	tmpcode/commond.h	/^	WORD wdOccupation;                   \/\/ ≥…‘±÷∞“µ$/;"	m	struct:stBroadcastSeptMemberInfo
wdOnlineUser	base/Command.h	/^  WORD wdOnlineUser;          \/**< Â§ßÈôÜÂú®Á∫ø‰∫∫Êï∞ *\/$/;"	m	struct:Cmd::t_LandMass
wdOriginal	tmpcode/commond.h	/^		WORD wdOriginal[5];$/;"	m	union:LingQiData::__anon321
wdOriginal	tmpcode/commond.h	/^		WORD wdOriginal[5];$/;"	m	union:LingQiSimulate::__anon362
wdOriginal	tmpcode/commond.h	/^    WORD wdOriginal[5];$/;"	m	struct:LingQiWatchData
wdOriginalMax	tmpcode/commond.h	/^		WORD wdOriginalMax[5];$/;"	m	union:LingQiMaxCoefData::__anon331
wdPoint	tmpcode/commond.h	/^	WORD wdPoint;    \/\/µ±«∞–°Œ›≤ƒ¡œµ„ ˝$/;"	m	struct:stMaterialDecayHouseUserCmd
wdPort	FLServer/GYListManager.h	/^	WORD wdPort;        \/**< ÊúçÂä°Âô®Á´ØÂè£ *\/$/;"	m	struct:GYList
wdPort	Robot/Client.h	/^	WORD wdPort;$/;"	m	class:Client
wdPort	Robot/LoginClient.h	/^    WORD wdPort;$/;"	m	class:LoginClient
wdPort	SuperServer/ServerTask.h	/^    WORD wdPort;            \/**< ∑˛ŒÒ∆˜ƒ⁄Õ¯∂Àø⁄ *\/$/;"	m	class:ServerTask
wdPort	SuperServer/SuperServer.h	/^    WORD wdPort;            \/**< ∑˛ŒÒ∆˜ƒ⁄Õ¯∂Àø⁄ *\/$/;"	m	class:SuperService
wdPort	base/Command.h	/^    WORD wdPort;$/;"	m	struct:Cmd::stReturnClientIP
wdPort	base/Command.h	/^  WORD wdPort;$/;"	m	struct:Cmd::stServerReturnLoginSuccessCmd
wdPort	base/FLCommand.h	/^      WORD wdPort;        \/**< ÊúçÂä°Âô®Á´ØÂè£ *\/$/;"	m	struct:Cmd::FL::t_GYList_FL
wdPort	base/SuperCommand.h	/^      WORD wdPort;        \/**< ÊúçÂä°Âô®Á´ØÂè£ *\/$/;"	m	struct:Cmd::Super::t_GYList_Gateway
wdPort	base/SuperCommand.h	/^      WORD wdPort;$/;"	m	struct:Cmd::Super::ServerEntry
wdPort	base/SuperCommand.h	/^      WORD wdPort;$/;"	m	struct:Cmd::Super::t_Startup_Response
wdPort	base/zSubNetService.h	/^	WORD wdPort;            \/**< ÊúçÂä°Âô®ÂÜÖÁΩëÁ´ØÂè£ *\/$/;"	m	class:zSubNetService
wdPort	base/zType.h	/^  WORD wdPort;$/;"	m	struct:t_NewLoginSession
wdPort	tmpcode/commond.h	/^	WORD wdPort;$/;"	m	struct:stServerReturnLoginSuccessCmd
wdPower	base/Union.h	/^  WORD    wdPower;          \/\/ ‰ºöÂëòÊùÉÈôê$/;"	m	struct:UnionDef::stUnionMemberInfo
wdPrice	base/Command.h	/^  DWORD wdPrice;$/;"	m	struct:Cmd::ConsignSelfHistoryType
wdPrice	tmpcode/commond.h	/^	DWORD wdPrice;$/;"	m	struct:ConsignSelfHistoryType
wdProperty	base/CharBase.h	/^    WORD wdProperty[5];$/;"	m	union:CharBase::__anon14
wdProperty	base/CharBase.h	/^    WORD wdProperty[5];$/;"	m	union:CharState::__anon17
wdProperty	base/Command.h	/^    DWORD wdProperty[6];$/;"	m	union:Cmd::t_MainUserData::__anon72
wdProperty	tmpcode/commond.h	/^		WORD wdProperty[6];$/;"	m	union:t_MainUserData::__anon216
wdRefffxxx	base/Command.h	/^  WORD wdRefffxxx[8];$/;"	m	struct:Cmd::t_MainUserData
wdRegionForce	tmpcode/commond.h	/^		WORD wdRegionForce[8];$/;"	m	union:t_MainUserData::__anon220
wdServerID	BillServer/BillTask.h	/^    WORD wdServerID;          \/**< ÊúçÂä°Âô®ÁºñÂè∑,‰∏Ä‰∏™Âå∫ÂîØ‰∏ÄÁöÑ *\/$/;"	m	class:BillTask
wdServerID	FLServer/GYListManager.h	/^	WORD wdServerID;      \/**< ÊúçÂä°Âô®ÁºñÂè∑ *\/$/;"	m	struct:GYList
wdServerID	GatewayServer/BillClient.h	/^	WORD wdServerID;$/;"	m	class:BillClient
wdServerID	GatewayServer/MiniClient.h	/^	WORD wdServerID;$/;"	m	class:MiniClient
wdServerID	GatewayServer/SceneClient.h	/^	WORD wdServerID;$/;"	m	class:SceneClient
wdServerID	RecordServer/RecordSessionManager.h	/^  WORD  wdServerID;    \/\/\/ ∑˛ŒÒ∆˜±‡∫≈$/;"	m	struct:RecordSession
wdServerID	RecordServer/RecordTask.h	/^    WORD wdServerID;          \/**< ∑˛ŒÒ∆˜±‡∫≈,“ª∏ˆ«¯Œ®“ªµƒ *\/$/;"	m	class:RecordTask
wdServerID	ScenesServer/MiniClient.h	/^    WORD wdServerID;$/;"	m	class:MiniClient
wdServerID	ScenesServer/SceneTask.h	/^    WORD wdServerID;$/;"	m	class:SceneTask
wdServerID	SessionServer/SessionTask.h	/^    WORD wdServerID;$/;"	m	class:SessionTask
wdServerID	SuperServer/RoleregCache.h	/^      WORD wdServerID;      \/**< ∑˛ŒÒ∆˜±‡∫≈ *\/$/;"	m	struct:RoleregCache::Data
wdServerID	SuperServer/ServerTask.h	/^    WORD wdServerID;          \/**< ∑˛ŒÒ∆˜±‡∫≈£¨“ª∏ˆ«¯Œ®“ªµƒ *\/$/;"	m	class:ServerTask
wdServerID	SuperServer/SuperServer.h	/^    WORD wdServerID;          \/**< ∑˛ŒÒ∆˜±‡∫≈£¨“ª∏ˆ«¯Œ®“ªµƒ *\/$/;"	m	class:SuperService
wdServerID	base/BillCommand.h	/^      WORD wdServerID;$/;"	m	struct:Cmd::Bill::t_LoginBill
wdServerID	base/FLCommand.h	/^      WORD wdServerID;      \/**< ÊúçÂä°Âô®ÁºñÂè∑ *\/$/;"	m	struct:Cmd::FL::t_GYList_FL
wdServerID	base/MiniCommand.h	/^      WORD wdServerID;$/;"	m	struct:Cmd::Mini::t_LoginMini
wdServerID	base/RecordCommand.h	/^      WORD wdServerID;$/;"	m	struct:Cmd::Record::t_LoginRecord
wdServerID	base/RoleregCommand.h	/^      WORD wdServerID;      \/**< ÊúçÂä°Âô®ÁºñÂè∑ *\/$/;"	m	struct:Cmd::RoleReg::t_Charname_reg_withID
wdServerID	base/SceneCommand.h	/^      WORD wdServerID;$/;"	m	struct:Cmd::Scene::t_LoginScene
wdServerID	base/SessionCommand.h	/^      WORD wdServerID;$/;"	m	struct:Cmd::Session::t_LoginSession
wdServerID	base/SuperCommand.h	/^      WORD wdServerID;      \/**< ÊúçÂä°Âô®ÁºñÂè∑ *\/$/;"	m	struct:Cmd::Super::t_Charname_Gateway
wdServerID	base/SuperCommand.h	/^      WORD wdServerID;      \/**< ÊúçÂä°Âô®ÁºñÂè∑ *\/$/;"	m	struct:Cmd::Super::t_GYList_Gateway
wdServerID	base/SuperCommand.h	/^      WORD wdServerID;$/;"	m	struct:Cmd::Super::ServerEntry
wdServerID	base/SuperCommand.h	/^      WORD wdServerID;$/;"	m	struct:Cmd::Super::t_Startup_OK
wdServerID	base/SuperCommand.h	/^      WORD wdServerID;$/;"	m	struct:Cmd::Super::t_Startup_Response
wdServerID	base/zSubNetService.h	/^	WORD wdServerID;          \/**< ÊúçÂä°Âô®ÁºñÂè∑Ôºå‰∏Ä‰∏™Âå∫ÂîØ‰∏ÄÁöÑ *\/$/;"	m	class:zSubNetService
wdServerID	roleRegServer/RoleregCommand.h	/^      WORD wdServerID;      \/**< ÊúçÂä°Âô®ÁºñÂè∑ *\/$/;"	m	struct:Cmd::RoleReg::t_Charname_reg_withID
wdServerType	BillServer/BillTask.h	/^    WORD wdServerType;          \/**< ÊúçÂä°Âô®Á±ªÂûã *\/$/;"	m	class:BillTask
wdServerType	RecordServer/RecordTask.h	/^    WORD wdServerType;          \/**< ∑˛ŒÒ∆˜¿‡–Õ *\/$/;"	m	class:RecordTask
wdServerType	ScenesServer/SceneTask.h	/^    WORD wdServerType;$/;"	m	class:SceneTask
wdServerType	SessionServer/SessionTask.h	/^    WORD wdServerType;$/;"	m	class:SessionTask
wdServerType	SuperServer/ServerTask.h	/^    WORD wdServerType;          \/**< ∑˛ŒÒ∆˜¿‡–Õ£¨¥¥Ω®¿‡ µ¿˝µƒ ±∫Ú“—æ≠»∑∂® *\/$/;"	m	class:ServerTask
wdServerType	SuperServer/SuperServer.h	/^    WORD wdServerType;          \/**< ∑˛ŒÒ∆˜¿‡–Õ£¨¥¥Ω®¿‡ µ¿˝µƒ ±∫Ú“—æ≠»∑∂® *\/$/;"	m	class:SuperService
wdServerType	base/BillCommand.h	/^      WORD wdServerType;$/;"	m	struct:Cmd::Bill::t_LoginBill
wdServerType	base/MiniCommand.h	/^      WORD wdServerType;$/;"	m	struct:Cmd::Mini::t_LoginMini
wdServerType	base/RecordCommand.h	/^      WORD wdServerType;$/;"	m	struct:Cmd::Record::t_LoginRecord
wdServerType	base/SceneCommand.h	/^      WORD wdServerType;$/;"	m	struct:Cmd::Scene::t_LoginScene
wdServerType	base/SessionCommand.h	/^      WORD wdServerType;$/;"	m	struct:Cmd::Session::t_LoginSession
wdServerType	base/SuperCommand.h	/^      WORD wdServerType;$/;"	m	struct:Cmd::Super::ServerEntry
wdServerType	base/SuperCommand.h	/^      WORD wdServerType;$/;"	m	struct:Cmd::Super::t_Startup_Request
wdServerType	base/zSubNetService.h	/^	WORD wdServerType;          \/**< ÊúçÂä°Âô®Á±ªÂûãÔºåÂàõÂª∫Á±ªÂÆû‰æãÁöÑÊó∂ÂÄôÂ∑≤ÁªèÁ°ÆÂÆö *\/$/;"	m	class:zSubNetService
wdSize	tmpcode/commond.h	/^	WORD wdSize;    \/\/ ÕΩµ‹ ˝ƒø$/;"	m	struct:stRtnGRecommendRelationUserCmd
wdSkillID	tmpcode/commond.h	/^	WORD wdSkillID;         \/**<ƒß∑®¿‡–Õ*\/		$/;"	m	struct:stToDefAttackMagicUserCmd
wdSkillID	tmpcode/commond.h	/^	WORD wdSkillID;         \/**<ƒß∑®¿‡–Õ*\/$/;"	m	struct:stToAttAttackMagicUserCmd
wdSkillID	tmpcode/commond.h	/^	WORD wdSkillID;         \/**<ƒß∑®¿‡–Õ*\/$/;"	m	struct:stToNineAttackMagicUserCmd
wdSkillID	tmpcode/commond.h	/^	WORD wdSkillID;         \/**<ƒß∑®¿‡–Õ*\/$/;"	m	struct:stToNineShowMagicUserCmd
wdState	base/Command.h	/^  WORD  wdState;  \/\/\/ ÈúÄË¶ÅÂèñÊ∂àÁöÑÁä∂ÊÄÅ$/;"	m	struct:Cmd::stClearStateMapScreenUserCmd
wdState	base/Command.h	/^  WORD  wdState;  \/\/\/ ÈúÄË¶ÅËÆæÁΩÆÁöÑÁä∂ÊÄÅ$/;"	m	struct:Cmd::stSetStateMapScreenUserCmd
wdState	tmpcode/commond.h	/^	WORD	wdState;	\/\/\/ –Ë“™»°œ˚µƒ◊¥Ã¨$/;"	m	struct:stClearStateMapScreenUserCmd
wdState	tmpcode/commond.h	/^    WORD    wdState;        \/\/\/ –Ë“™…Ë÷√µƒ◊¥Ã¨$/;"	m	struct:stSetStateMapScreenUserCmd
wdStdCon	base/Command.h	/^      WORD wdStdCon;  \/\/‰ΩìË¥®$/;"	m	struct:Cmd::t_MainUserData::__anon74::__anon75
wdStdCon	tmpcode/commond.h	/^			WORD wdStdCon;	\/\/ÃÂ÷ $/;"	m	struct:t_MainUserData::__anon218::__anon219
wdStdDex	base/Command.h	/^      WORD wdStdDex;  \/\/ÊïèÊç∑$/;"	m	struct:Cmd::t_MainUserData::__anon74::__anon75
wdStdDex	tmpcode/commond.h	/^			WORD wdStdDex;	\/\/√ÙΩ›$/;"	m	struct:t_MainUserData::__anon218::__anon219
wdStdInt	base/Command.h	/^      WORD wdStdInt;  \/\/Êô∫Âäõ$/;"	m	struct:Cmd::t_MainUserData::__anon74::__anon75
wdStdInt	tmpcode/commond.h	/^			WORD wdStdInt;	\/\/÷«¡¶$/;"	m	struct:t_MainUserData::__anon218::__anon219
wdStdKar	base/Command.h	/^      WORD wdStdKar;$/;"	m	struct:Cmd::t_MainUserData::__anon74::__anon75
wdStdKar	tmpcode/commond.h	/^			WORD wdStdKar;	\/\/‘À∆¯$/;"	m	struct:t_MainUserData::__anon218::__anon219
wdStdMen	base/Command.h	/^      WORD wdStdMen;  \/\/Á≤æÁ•û$/;"	m	struct:Cmd::t_MainUserData::__anon74::__anon75
wdStdMen	tmpcode/commond.h	/^			WORD wdStdMen;	\/\/æ´…Ò$/;"	m	struct:t_MainUserData::__anon218::__anon219
wdStdProperty	base/Command.h	/^    WORD wdStdProperty[6];$/;"	m	union:Cmd::t_MainUserData::__anon74
wdStdProperty	tmpcode/commond.h	/^		WORD wdStdProperty[6];$/;"	m	union:t_MainUserData::__anon218
wdStdStr	base/Command.h	/^      WORD wdStdStr;  \/\/‰ΩìÂäõ$/;"	m	struct:Cmd::t_MainUserData::__anon74::__anon75
wdStdStr	tmpcode/commond.h	/^			WORD wdStdStr;	\/\/ÃÂ¡¶$/;"	m	struct:t_MainUserData::__anon218::__anon219
wdStr	base/CharBase.h	/^      WORD wdStr;  \/\/‰ΩìÂäõ$/;"	m	struct:CharBase::__anon14::__anon15
wdStr	base/CharBase.h	/^      WORD wdStr;  \/\/‰ΩìÂäõ$/;"	m	struct:CharState::__anon17::__anon18
wdStr	base/Command.h	/^      DWORD wdStr;  \/\/‰ΩìÂäõ$/;"	m	struct:Cmd::t_MainUserData::__anon72::__anon73
wdStr	tmpcode/commond.h	/^			WORD wdStr;	\/\/ÃÂ¡¶$/;"	m	struct:t_MainUserData::__anon216::__anon217
wdTire	ScenesServer/SceneUser.h	/^    WORD wdTire;$/;"	m	struct:SceneUser
wdTire	base/Command.h	/^  WORD wdTire; \/\/\/ Áñ≤Âä≥Áä∂ÊÄÅ 0‰∏∫Èùû 1‰∏∫Áñ≤Âä≥$/;"	m	struct:Cmd::t_MainUserData
wdTire	tmpcode/commond.h	/^	WORD wdTire; \/\/\/ ∆£¿Õ◊¥Ã¨ 0Œ™∑« 1Œ™∆£¿Õ$/;"	m	struct:t_MainUserData
wdTirePer	ScenesServer/SceneUser.h	/^    WORD wdTirePer;$/;"	m	struct:SceneUser
wdTirePer	base/Command.h	/^  WORD wdTirePer;$/;"	m	struct:Cmd::t_MainUserData
wdTirePer	tmpcode/commond.h	/^	WORD wdTirePer; 	\/\/\/ ∆£¿Õ∞Ÿ∑÷±»$/;"	m	struct:t_MainUserData
wdUnknownPower	tmpcode/commond.h	/^        WORD wdUnknownPower;                            \/\/Œﬁ√˚÷Æ¡¶$/;"	m	struct:stSetForceDataUserCmd
wdUpNum	base/Command.h	/^  WORD wdUpNum;        \/**< ÊäÄËÉΩÁ≠âÁ∫ßÊèêÂçáÁÇπÊï∞ *\/$/;"	m	struct:Cmd::stAddUserSkillPropertyUserCmd
wdUpNum	tmpcode/commond.h	/^	WORD wdUpNum;				\/**< ººƒ‹µ»º∂Ã·…˝µ„ ˝ *\/$/;"	m	struct:stAddUserSkillPropertyUserCmd
wdUserLevel	tmpcode/commond.h	/^	WORD wdUserLevel; \/\/»ÀŒÔµ»º∂$/;"	m	struct:stDevoteUserLevelPropertyUserCmd
wdValue	ScenesServer/ScenePk.h	/^    WORD wdValue[12];$/;"	m	union:PkPreValue::__anon157
wdVigourValue	tmpcode/commond.h	/^	WORD wdVigourValue;$/;"	m	struct:stShowVigourValueQuestUserCmd
wdVoteNumber	base/Command.h	/^  WORD wdVoteNumber;$/;"	m	struct:Cmd::stSeptVoteRecord
wdVoteNumber	base/Command.h	/^  WORD wdVoteNumber;$/;"	m	struct:Cmd::stUnionVoteRecord
wdWaterPower	tmpcode/commond.h	/^        WORD wdWaterPower;                              \/\/ÀÆ…Ò÷Æ¡¶$/;"	m	struct:stSetForceDataUserCmd
wday	tmpcode/commond.h	/^        BYTE wday; \/\/ 0 -- –«∆⁄ÃÏ, 1->6 ∑÷± « –«∆⁄“ª->–«∆⁄¡˘$/;"	m	struct:stTopicActiveUserCmd
wdgroup	base/Command.h	/^  WORD wdgroup;$/;"	m	struct:Cmd::stRelation
wdgroup	tmpcode/commond.h	/^	WORD wdgroup;  \/\/∑÷◊È±‡∫≈    $/;"	m	struct:stRelationStatusCmd
wdgroup	tmpcode/commond.h	/^	WORD wdgroup;  \/\/∑÷◊È±‡∫≈$/;"	m	struct:stRelation
weak_keys	base/EncDec/mydes.cpp	/^static DES_cblock weak_keys[NUM_WEAK_KEY]={	$/;"	v
weakenTime	tmpcode/commond.h	/^	DWORD   weakenTime;     \/\/æ‡BOSS»ıªØ ±º‰(s)$/;"	m	struct:stRetMaxLevelIconDataUserCmd
weaponEquip	tmpcode/commond.h	/^            DWORD weaponEquip;      \/\/Œ‰∆˜id$/;"	m	struct:t_DragonData::DragonEquip
weaponId	tmpcode/commond.h	/^		DWORD weaponId;      \/\/Œ‰∆˜id$/;"	m	struct:stRet32NameListUserCmd::__anon373
weaponType	tmpcode/commond.h	/^            BYTE  weaponType;       \/\/Œ‰∆˜¿‡–Õ$/;"	m	struct:t_DragonData::DragonEquip
weaponumdamp	ScenesServer/ScenePk.h	/^      SWORD weaponumdamp; \/\/ÊèêÂçáÊ≠¶Âô®Ê≥ïÊúØÊîªÂáªÂäõÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
weaponupdamp	ScenesServer/ScenePk.h	/^      SWORD weaponupdamp; \/\/ÊèêÂçáÊ≠¶Âô®Áâ©ÁêÜÊîªÂáªÂäõÁôæÂàÜÊØî$/;"	m	struct:SkillState::__anon155::__anon156
weekContribute	tmpcode/commond.h	/^		DWORD weekContribute;                           \/\/ ∏ˆ»À±æ÷‹”∂±¯Õ≈π±œ◊∂»$/;"	m	struct:stUnionRember
weekCount	tmpcode/commond.h	/^	DWORD weekCount;        \/\/\/ ±æ÷‹¥Œ ˝$/;"	m	struct:stUserPerformInfo
weekCount	tmpcode/commond.h	/^	DWORD weekCount;        \/\/\/ ±æ÷‹“—µ√µ„ ˝$/;"	m	struct:MasterPerformInfo
weekCsMoney	tmpcode/commond.h	/^        DWORD weekCsMoney; \/\/±æ÷‹µ±«∞Ω®…Ë∑—”√$/;"	m	struct:stRtEarningInfoUnionCmd
weekCtr	tmpcode/commond.h	/^        DWORD weekCtr;      \/\/±æ÷‹π±œ◊∂»◊‹∫Õ$/;"	m	struct:stRtEarningInfoUnionCmd
weekCtrMoney	tmpcode/commond.h	/^        DWORD weekCtrMoney; \/\/±æ÷‹µ±«∞¿˚»Û$/;"	m	struct:stRtEarningInfoUnionCmd
weekDay	ScenesServer/Scene.h	/^      int weekDay;\/\/ÊòüÊúüÂá†$/;"	m	struct:Scene::FixedRush
weekRenqi	tmpcode/commond.h	/^	DWORD weekRenqi;        \/\/±æ÷‹ª˝‘‹»À∆¯$/;"	m	struct:HouseRoomData
weekScore	tmpcode/commond.h	/^	DWORD weekScore;        \/\/\/ ±æ÷‹µ„ ˝$/;"	m	struct:stUserPerformInfo
weekScore	tmpcode/commond.h	/^	DWORD weekScore;        \/\/\/ ±æ÷‹“—µ√µΩ∑÷ ˝$/;"	m	struct:MasterPerformInfo
week_tax	tmpcode/commond.h	/^		int week_tax;$/;"	m	struct:stReturnCountryTax::CityInfo
weekcontribute	tmpcode/commond.h	/^	DWORD weekcontribute;$/;"	m	struct:stBroadcastMemberInfo
weight	base/Command.h	/^    BYTE weight;$/;"	m	struct:Cmd::SelectUserInfo
weight	base/Command.h	/^  BYTE weight;$/;"	m	struct:Cmd::stCreateSelectUserCmd
weight	base/Command.h	/^  BYTE weight;$/;"	m	struct:Cmd::t_MainUserData
weight	base/Command.h	/^  BYTE weight;$/;"	m	struct:Cmd::t_UserData
wglog	ScenesServer/SceneUser.h	/^    char wglog[MAX_CHATINFO];$/;"	m	struct:SceneUser
wglog_len	ScenesServer/SceneUser.h	/^    DWORD wglog_len;$/;"	m	struct:SceneUser
wglogger	ScenesServer/ScenesServer.cpp	/^zLogger * ScenesService::wglogger = NULL;$/;"	m	class:ScenesService
wglogger	ScenesServer/ScenesServer.h	/^    static zLogger* wglogger;$/;"	m	class:ScenesService
who	base/HeroCardCmd.h	/^	    BYTE who;$/;"	m	struct:Cmd::stAddBattleCardListPropertyUserCmd::__anon47
who	base/HeroCardCmd.h	/^	BYTE who;	    \/\/1,◊‘º∫ 2,∂‘∑Ω$/;"	m	struct:Cmd::stAddBattleCardPropertyUserCmd
who	base/HeroCardCmd.h	/^	BYTE who;	\/\/1,◊‘º∫ 2,∂‘∑Ω$/;"	m	struct:Cmd::stRetRefreshCardAllStateUserCmd
who	base/HeroCardCmd.h	/^	BYTE who;   \/\/1,◊‘º∫ 2,∂‘∑Ω$/;"	m	struct:Cmd::stRetClearCardOneStateUserCmd
who	base/HeroCardCmd.h	/^	BYTE who;   \/\/1,◊‘º∫ 2,∂‘∑Ω$/;"	m	struct:Cmd::stRetNotifyHandIsFullUserCmd
who	base/HeroCardCmd.h	/^	BYTE who;   \/\/1,◊‘º∫ 2,∂‘∑Ω$/;"	m	struct:Cmd::stRetSetCardOneStateUserCmd
wholefile_flag	tools/xmlpg.cpp	/^    int wholefile_flag;$/;"	m	struct:Args
width	Robot/LoadMap.h	/^  DWORD width;      \/**< ÂÆΩÂ∫¶ *\/$/;"	m	struct:stMapFileHeader
width	ScenesServer/LoadMap.h	/^  DWORD width;      \/**< ÂÆΩÂ∫¶ *\/$/;"	m	struct:stMapFileHeader
width	ScenesServer/SceneDefine.h	/^	WORD  width;              \/\/Áü©ÂΩ¢ÂÆΩ$/;"	m	struct:t_NpcDefine
width	ScenesServer/SceneDefine.h	/^  WORD  width;              \/\/Áü©ÂΩ¢ÂÆΩ$/;"	m	struct:ZoneTypeDef
width	ScenesServer/WayPoint.h	/^	int  width; \/\/ Âå∫ÂüüÂÆΩÂ∫¶$/;"	m	struct:zZone
width	ScenesServer/zCard.h	/^    virtual WORD width() const$/;"	f	class:CardSlot
width	ScenesServer/zObject.h	/^    virtual WORD width() const$/;"	f	class:Package
width	ScenesServer/zSceneEntryIndex.h	/^    const DWORD width() const { return sceneWH.x; }$/;"	f	class:zSceneEntryIndex
width	base/Command.h	/^    DWORD width;    \/**< Âú∫ÊôØÂÆΩ *\/$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd
width	base/Object.h	/^	BYTE width;  \/\/øÌ∂»$/;"	m	struct:t_Object
width	base/zDatabase.h	/^    BYTE width;$/;"	m	struct:zObjectB
width	tmpcode/commond.h	/^		BYTE width;	      \/\/ ≈÷ ›$/;"	m	struct:stCreateSelectUserCmd
width	tmpcode/commond.h	/^	    DWORD width;		\/**< ≥°æ∞øÌ *\/$/;"	m	struct:stClientNewMap
width	tmpcode/commond.h	/^	BYTE width;   \/\/»ÀŒÔ≈÷ ›$/;"	m	struct:st_CharShow2
width	tmpcode/commond.h	/^	BYTE width;$/;"	m	struct:SelectUserInfo
width	tmpcode/commond.h	/^	BYTE width;$/;"	m	struct:t_MainUserData
width	tmpcode/commond.h	/^	BYTE width;$/;"	m	struct:t_UserData
win	base/HeroCardCmd.h	/^	BYTE win;	    \/\/1”Æ, 0 ‰$/;"	m	struct:Cmd::stRetBattleGameResultUserCmd
winCount	tmpcode/commond.h	/^	DWORD winCount;    \/\/¡¨ §¥Œ ˝$/;"	m	struct:stBuyWineState
winNum	tmpcode/commond.h	/^    DWORD winNum; \/\/ §¿˚¥Œ ˝$/;"	m	struct:stJieZhanState
winPart	tmpcode/commond.h	/^        BYTE winPart;$/;"	m	struct:stSendResultListLuoRiCmd
winRate	tmpcode/commond.h	/^		BYTE winRate;$/;"	m	struct:stRetBetInChallengeDragonUserCmd::RetBetInfo
winTimes	tmpcode/commond.h	/^	WORD winTimes;          \/\/ÃÙ’Ω §¿˚¥Œ ˝$/;"	m	struct:t_DragonData
windfury	base/Card.h	/^    BYTE windfury;	    \/\/∑Á≈≠$/;"	m	struct:t_CardPK
windfury	base/zDatabase.h	/^    BYTE windfury;	    \/\/∑Á≈≠(1,0)$/;"	m	struct:zCardB
windfury	base/zDatabase.h	/^    DWORD windfury;		\/\/∑Á≈≠(1,0)$/;"	m	struct:CardBase
wineType	tmpcode/commond.h	/^	DWORD wineType;     \/\/æ∆µƒ¿‡–Õ$/;"	m	struct:stBuyWineState
wineType	tmpcode/commond.h	/^	DWORD wineType;    \/\/æ∆µƒ¿‡–Õ   $/;"	m	struct:stGuessBarkeeperState
winner16	tmpcode/commond.h	/^	BYTE winner16[16]; \/\/16«ø$/;"	m	struct:stRetScore32WinnerUserCmd
winner2	tmpcode/commond.h	/^	BYTE winner2[2];   \/\/2«ø$/;"	m	struct:stRetScore32WinnerUserCmd
winner4	tmpcode/commond.h	/^	BYTE winner4[4];   \/\/4«ø$/;"	m	struct:stRetScore32WinnerUserCmd
winner8	tmpcode/commond.h	/^	BYTE winner8[8];   \/\/8«ø$/;"	m	struct:stRetScore32WinnerUserCmd
winnerDefend	tmpcode/commond.h	/^	DWORD winnerDefend; \/\/”Æ∑Ω¡˙∑¿æﬂ$/;"	m	struct:stDetailFightContentUserCmd
winnerExp	ScenesServer/Scene.h	/^    DWORD winnerExp(DWORD exp) const$/;"	f	class:Scene
winnerJewelry	tmpcode/commond.h	/^	DWORD winnerJewelry; \/\/”Æ∑Ω¡˙ ◊ Œ$/;"	m	struct:stDetailFightContentUserCmd
winnerModel	tmpcode/commond.h	/^	DWORD winnerModel;  \/\/”Æ∑Ω¡˙ƒ£–Õ$/;"	m	struct:stDetailFightContentUserCmd
winnerWeapon	tmpcode/commond.h	/^	DWORD winnerWeapon; \/\/”Æ∑Ω¡˙Œ‰∆˜$/;"	m	struct:stDetailFightContentUserCmd
winner_exp	ScenesServer/Scene.h	/^    bool winner_exp; $/;"	m	class:Scene
winners	base/Command.h	/^  char winners[0];$/;"	m	struct:Cmd::stWinnerGift
winners	tmpcode/commond.h	/^        char winners[0];$/;"	m	struct:stWinnerGift
word	tmpcode/commond.h	/^	char word[21];			\/\/∑øº‰ø⁄∫≈£ª◊Ó∂‡ Æ∏ˆ∫∫◊÷$/;"	m	struct:RoomInfo
word	tmpcode/commond.h	/^    char word[21];                  \/\/∑øº‰ø⁄∫≈£ª◊Ó∂‡ Æ∏ˆ∫∫◊÷$/;"	m	struct:stOneRoomAllInfoQuestRoomUserCmd
word	tmpcode/commond.h	/^    char word[21];                  \/\/ø⁄∫≈$/;"	m	struct:stCreateQuestRoomUserCmd
worldLevel	tmpcode/commond.h	/^	WORD worldLevel;$/;"	m	struct:stNotifyWenMingInfoUserCmd
worldMsg	SessionServer/SessionServer.h	/^  worldMsg()$/;"	f	struct:worldMsg
worldMsg	SessionServer/SessionServer.h	/^struct worldMsg$/;"	s
wpm	ScenesServer/Scene.h	/^    WayPointM wpm;$/;"	m	class:Scene
wps	ScenesServer/WayPoint.h	/^    std::vector<WayPoint> wps;$/;"	m	class:WayPointM
wr_buf	base/zSocket.h	/^	inline BYTE *wr_buf()$/;"	f	class:ByteBuffer
wr_count	base/zRWLock.h	/^	unsigned int wr_count;$/;"	m	class:zRWLock
wr_flip	base/zSocket.h	/^	inline void wr_flip(const DWORD size)$/;"	f	class:ByteBuffer
wr_msec	base/zSocket.h	/^	int wr_msec;                \/**< –¥»Î≥¨ ±£¨∫¡√Î *\/$/;"	m	class:zSocket
wr_reserve	base/zSocket.h	/^inline void t_BufferCmdQueue::wr_reserve(const DWORD size)$/;"	f	class:t_BufferCmdQueue
wr_reserve	base/zSocket.h	/^inline void t_StackCmdQueue::wr_reserve(const DWORD size)$/;"	f	class:t_StackCmdQueue
wr_size	base/zSocket.h	/^	inline DWORD wr_size()$/;"	f	class:ByteBuffer
writeBackTimer	ScenesServer/ScenesServer.h	/^    int writeBackTimer;$/;"	m	class:ScenesService
writeCharTest	ScenesServer/SceneUser.cpp	/^void SceneUser::writeCharTest(Cmd::Record::enumWriteBackTest_Type type)$/;"	f	class:SceneUser
writeOfflineNotify	SessionServer/CRelationManager.cpp	/^void CRelationManager::writeOfflineNotify(const CRelation *relation)$/;"	f	class:CRelationManager
writeTempArchive	SessionServer/TempArchive.cpp	/^bool GlobalTempArchiveIndex::writeTempArchive(DWORD id,char *data,DWORD  dwSize)$/;"	f	class:GlobalTempArchiveIndex
writeback_type	base/RecordCommand.h	/^      DWORD writeback_type;        \/\/\/ ÂõûÂÜôÊ°£Ê°àÁ±ªÂûã$/;"	m	struct:Cmd::Record::t_WriteUser_SceneRecord
wrlock	GatewayServer/ScreenIndex.h	/^	zRWLock wrlock;$/;"	m	class:ScreenIndex
wrlock	base/zRWLock.h	/^	inline void wrlock()$/;"	f	class:zRWLock
x	ScenesServer/SceneUser.h	/^	int x;							\/\/sky ÂùêÊ†áx$/;"	m	struct:stUserBattfieldData
x	base/CharBase.h	/^  DWORD x;              \/\/\/ ËßíËâ≤ÊâÄÂú®ÂùêÊ†áx$/;"	m	struct:CharBase
x	base/Command.h	/^            WORD x; \/\/ŒÔ∆∑x◊¯±Í$/;"	m	struct:Cmd::stSortObjectPropertyUserCmd::__anon91
x	base/Command.h	/^      DWORD id,x,y;$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd::__anon77
x	base/Command.h	/^    BYTE x;  \/\/Áâ©ÂìÅÊîæÁΩÆ‰ΩçÁΩÆxÂùêÊ†á$/;"	m	struct:Cmd::stAddObjectSellListUserCmd::__anon103
x	base/Command.h	/^    BYTE x;  \/\/Áâ©ÂìÅÊîæÁΩÆ‰ΩçÁΩÆxÂùêÊ†á$/;"	m	struct:Cmd::stRequestAddObjectSellUserCmd::__anon104
x	base/Command.h	/^    DWORD x,y;          \/\/ ÂùêÊ†á$/;"	m	struct:Cmd::stMainUserReliveReliveUserCmd
x	base/Command.h	/^    DWORD x;$/;"	m	struct:Cmd::stBackOffMagicUserCmd
x	base/Command.h	/^    DWORD x;$/;"	m	struct:Cmd::stPickUpItemPropertyUserCmd
x	base/Command.h	/^    WORD x;          \/**< ÁõÆÁöÑÂùêÊ†á *\/$/;"	m	struct:Cmd::stNpcMoveMoveUserCmd
x	base/Command.h	/^    WORD x;          \/**< ÁõÆÁöÑÂùêÊ†á *\/$/;"	m	struct:Cmd::stUserMoveMoveUserCmd
x	base/Command.h	/^    WORD x;    \/\/ÊâÄÂú®‰ΩçÁΩÆ$/;"	m	struct:Cmd::stRtnNpcOwnerListCmd::__anon116
x	base/Command.h	/^    WORD x;$/;"	m	struct:Cmd::stUserInstantJumpMoveUserCmd
x	base/Command.h	/^    WORD x;$/;"	m	struct:Cmd::t_MapNpcData
x	base/Command.h	/^  BYTE x;  \/\/Áâ©ÂìÅÊîæÁΩÆ‰ΩçÁΩÆxÂùêÊ†á$/;"	m	struct:Cmd::stAddObjectSellUserCmd
x	base/Command.h	/^  BYTE x;  \/\/Áâ©ÂìÅÊîæÁΩÆ‰ΩçÁΩÆxÂùêÊ†á$/;"	m	struct:Cmd::stAddObjectTradeUserCmd
x	base/Command.h	/^  DWORD x;$/;"	m	struct:Cmd::stRelationStatusCmd
x	base/Command.h	/^  DWORD x;$/;"	m	struct:Cmd::t_MapBuildingData
x	base/Command.h	/^  DWORD x;$/;"	m	struct:Cmd::t_MapObjectData
x	base/Command.h	/^  WORD  x;            \/\/ÂùêÊ†áx$/;"	m	struct:Cmd::stDareCallDuty
x	base/Command.h	/^  WORD x;          \/**< ÂùêÊ†á*\/$/;"	m	struct:Cmd::stNpcPosition
x	base/Command.h	/^  WORD x;          \/**< ÂùêÊ†á*\/$/;"	m	struct:Cmd::t_MapBuildingDataPos
x	base/Command.h	/^  WORD x;          \/**< ÂùêÊ†á*\/$/;"	m	struct:Cmd::t_MapNpcDataPosState
x	base/Command.h	/^  WORD x;          \/**< ÂùêÊ†á*\/$/;"	m	struct:Cmd::t_MapUserDataPos
x	base/Command.h	/^  WORD x;          \/**< ÂùêÊ†á*\/$/;"	m	struct:Cmd::t_MapUserDataPosState
x	base/Command.h	/^  WORD x;$/;"	m	struct:Cmd::stKillBossUserCmd
x	base/Command.h	/^  WORD x;$/;"	m	struct:Cmd::stRequestCountryHelpUserCmd
x	base/Command.h	/^  int x,y;$/;"	m	struct:Cmd::stTeamMemberPosition
x	base/Object.h	/^	WORD  x;		\/\/––$/;"	m	struct:stObjectLocation
x	base/SessionCommand.h	/^		DWORD x;$/;"	m	struct:Cmd::Session::CampPos
x	base/SessionCommand.h	/^	  DWORD x,y;	$/;"	m	struct:Cmd::Session::t_TelePKGame_SceneSession
x	base/SessionCommand.h	/^	DWORD x;$/;"	m	struct:Cmd::Session::t_RelationAddFriend
x	base/SessionCommand.h	/^      DWORD x;$/;"	m	struct:Cmd::Session::t_SummonGemNPC_SceneSession
x	base/SessionCommand.h	/^      DWORD x;$/;"	m	struct:Cmd::Session::t_changeScene_SceneSession
x	base/SessionCommand.h	/^      DWORD x;\/\/xyÁî®Êù•‰º†ÈÄíÈôÑÂä†ÁöÑÂèÇÊï∞$/;"	m	struct:Cmd::Session::t_gmCommand_SceneSession
x	base/SessionCommand.h	/^      WORD x;            \/\/ÂùêÊ†áx  $/;"	m	struct:Cmd::Session::t_GoTo_Leader_Check_SceneSession
x	base/SessionCommand.h	/^      WORD x;            \/\/ÂùêÊ†áx  $/;"	m	struct:Cmd::Session::t_GoTo_Leader_SceneSession
x	base/zSceneEntry.h	/^	DWORD x;    \/**< ∫·◊¯±Í*\/$/;"	m	struct:zPos
x	base/zSceneEntry.h	/^	int x;    \/**< ∫·◊¯±Í*\/$/;"	m	struct:zAdjust
x	tmpcode/commond.h	/^				DWORD id, x, y;$/;"	m	struct:stClientNewMap::__anon213
x	tmpcode/commond.h	/^		BYTE x;  \/\/ŒÔ∆∑∑≈÷√Œª÷√x◊¯±Í$/;"	m	struct:stAddObjectSellListUserCmd::__anon280
x	tmpcode/commond.h	/^		BYTE x;  \/\/ŒÔ∆∑∑≈÷√Œª÷√x◊¯±Í$/;"	m	struct:stRequestAddObjectSellUserCmd::tSellObject
x	tmpcode/commond.h	/^		BYTE x;$/;"	m	struct:stSendSeptStoreDataCmd::__anon305
x	tmpcode/commond.h	/^		DWORD x;						\/\/Ω®÷˛µƒx◊¯±Í$/;"	m	struct:stRetUnionBuildInfo::__anon269
x	tmpcode/commond.h	/^		DWORD x;$/;"	m	struct:stRetDangerAreaUserCmd::__anon253
x	tmpcode/commond.h	/^		DWORD x;$/;"	m	struct:stRetValidQuestUserCmd::con
x	tmpcode/commond.h	/^	BYTE x;  \/\/ŒÔ∆∑∑≈÷√Œª÷√x◊¯±Í$/;"	m	struct:stAddBetObjectChallengeUserCmd
x	tmpcode/commond.h	/^	BYTE x;  \/\/ŒÔ∆∑∑≈÷√Œª÷√x◊¯±Í$/;"	m	struct:stAddObjectSellUserCmd
x	tmpcode/commond.h	/^	BYTE x;  \/\/ŒÔ∆∑∑≈÷√Œª÷√x◊¯±Í$/;"	m	struct:stAddObjectTradeUserCmd
x	tmpcode/commond.h	/^	BYTE x; $/;"	m	struct:stReqFetchSeptStoreCmd
x	tmpcode/commond.h	/^	BYTE x;$/;"	m	struct:stAddObjectSeptStoreCmd
x	tmpcode/commond.h	/^	BYTE x;$/;"	m	struct:stRemoveObjectSeptStore
x	tmpcode/commond.h	/^	BYTE x;$/;"	m	struct:stReqPutSeptStoreCmd
x	tmpcode/commond.h	/^	BYTE x;$/;"	m	struct:stSetObjectRightSeptStore
x	tmpcode/commond.h	/^	DWORD	x;$/;"	m	struct:FurnitureMapData
x	tmpcode/commond.h	/^	DWORD	x;$/;"	m	struct:stFlagMoveSCUserCmd
x	tmpcode/commond.h	/^	DWORD	x;$/;"	m	struct:stMoveFurnitureHomeUserCmd
x	tmpcode/commond.h	/^	DWORD	x;$/;"	m	struct:stNotifyAddFurnitureHomeUserCmd
x	tmpcode/commond.h	/^	DWORD   x;\/\/◊¯±Í$/;"	m	struct:st_CharShow2
x	tmpcode/commond.h	/^	DWORD  x;$/;"	m	struct:decoration
x	tmpcode/commond.h	/^	DWORD x, y;  \/\/ ◊˘±Í$/;"	m	struct:stKillForeignerUserCmd
x	tmpcode/commond.h	/^	DWORD x, y;$/;"	m	struct:stUnionUpBuild
x	tmpcode/commond.h	/^	DWORD x,y;                                      \/\/ ◊¯±Í$/;"	m	struct:stMainUserReliveReliveUserCmd
x	tmpcode/commond.h	/^	DWORD x;                     \/\/◊¯±Íx$/;"	m	struct:stNotifyTransPropertyUserCmd
x	tmpcode/commond.h	/^	DWORD x;        \/\/npcÀ˘‘⁄Œª÷√$/;"	m	struct:TitleInfo
x	tmpcode/commond.h	/^	DWORD x;    \/\/≥»À◊¯±Í$/;"	m	struct:stRelationStatusCmd
x	tmpcode/commond.h	/^	DWORD x;$/;"	m	struct:stBackOffMagicUserCmd
x	tmpcode/commond.h	/^	DWORD x;$/;"	m	struct:stPickUpItemPropertyUserCmd
x	tmpcode/commond.h	/^	DWORD x;$/;"	m	struct:t_MapObjectData
x	tmpcode/commond.h	/^	WORD	x;						\/\/◊¯±Íx$/;"	m	struct:stDareCallDuty
x	tmpcode/commond.h	/^	WORD  x;			\/\/◊Û…œΩ«Œª÷√$/;"	m	struct:HouseObjDef
x	tmpcode/commond.h	/^	WORD  x;$/;"	m	struct:stMoveDecorationCmd
x	tmpcode/commond.h	/^	WORD x;					\/**< ◊¯±Í*\/$/;"	m	struct:t_MapNPCData
x	tmpcode/commond.h	/^	WORD x;					\/**< ◊¯±Í*\/$/;"	m	struct:t_MapUserDataPos
x	tmpcode/commond.h	/^	WORD x;					\/**< ◊¯±Í*\/$/;"	m	struct:t_MapUserDataPosState
x	tmpcode/commond.h	/^	WORD x;			\/\/∞⁄∑≈Œª÷√$/;"	m	struct:st_PlaceObjectHouseUserCmd
x	tmpcode/commond.h	/^	WORD x;                                 \/**< ƒøµƒ◊¯±Í *\/$/;"	m	struct:stNpcMoveMoveUserCmd
x	tmpcode/commond.h	/^	WORD x;                 \/**< ◊¯±Í*\/$/;"	m	struct:npcState
x	tmpcode/commond.h	/^	WORD x; $/;"	m	struct:stNotifyDecorationUnionID
x	tmpcode/commond.h	/^	WORD x; $/;"	m	struct:stRequestCountryHelpUserCmd
x	tmpcode/commond.h	/^	WORD x; \/\/ƒø±ÍŒª÷√$/;"	m	struct:req_TransmitHouseUserCmd
x	tmpcode/commond.h	/^	WORD x;$/;"	m	struct:rtPictureHelpUserCmd
x	tmpcode/commond.h	/^	WORD x;$/;"	m	struct:stAddDecorationCmd
x	tmpcode/commond.h	/^	WORD x;$/;"	m	struct:stSitDownChairUserCmd
x	tmpcode/commond.h	/^	int x,y;$/;"	m	struct:stTeamMemberPosition
x	tmpcode/commond.h	/^                 WORD x;$/;"	m	struct:stAddUnsafeRegionDTSUserCmd::__anon309
x	tmpcode/commond.h	/^            WORD x; \/\/ŒÔ∆∑x◊¯±Í$/;"	m	struct:stSortObjectPropertyUserCmd::__anon344
x	tmpcode/commond.h	/^        WORD    x;                                              \/\/◊¯±Íx $/;"	m	struct:stMercenaryCallDuty
x	tmpcode/commond.h	/^        WORD x; $/;"	m	struct:stMercenaryCountryHelpUserCmd
x	tmpcode/commond.h	/^        WORD x;$/;"	m	struct:OneQuestInfo
x	tmpcode/commond.h	/^    WORD    x;   $/;"	m	struct:stMapMagicEffectUserCmd
x	tmpcode/commond.h	/^    WORD x; \/\/“™∫œ≥…µƒ≤ƒ¡œ‘⁄÷˜∞¸π¸÷–µƒŒª÷√$/;"	m	struct:stNpcComposeItemPropertyUserCmd
x	tmpcode/commond.h	/^    WORD x;$/;"	m	struct:stCallPrivateGuardHelpUserCmd
x	tmpcode/commond.h	/^    WORD x;$/;"	m	struct:stCallSeptGuardHelpUserCmd
x	tmpcode/commond.h	/^    WORD x;$/;"	m	struct:stResponToGuardHelpUserCmd
x1	base/Command.h	/^  DWORD x1;$/;"	m	struct:Cmd::t_MainUserData
x1	base/Command.h	/^  int x1;$/;"	m	struct:Cmd::stSendMail
x1	tmpcode/commond.h	/^	int x1;$/;"	m	struct:stAnswerBeTradeImageUserCmd
x1	tmpcode/commond.h	/^	int x1;$/;"	m	struct:stRequestTradeNewUserCmd
x1	tmpcode/commond.h	/^    int x1;$/;"	m	struct:stSendMail
x2	base/Command.h	/^  DWORD x2;$/;"	m	struct:Cmd::t_MainUserData
x2Time	tmpcode/commond.h	/^	bool x2Time;	\/\/ «∑ÒÀ´±∂ø€ ±º‰$/;"	m	struct:t_AutoSkill_Start
x3	base/Command.h	/^  DWORD x3;$/;"	m	struct:Cmd::t_MainUserData
x4	base/Command.h	/^  DWORD x4;$/;"	m	struct:Cmd::t_MainUserData
x5	base/Command.h	/^  DWORD x5;$/;"	m	struct:Cmd::t_MainUserData
xBody	base/Command.h	/^	BYTE xBody;$/;"	m	struct:Cmd::t_NpcData
xBody	tmpcode/commond.h	/^	BYTE  xBody;  $/;"	m	struct:stSendChangeFaceNPCMagicUserCmd
xBody	tmpcode/commond.h	/^    BYTE  xBody;                    \/\/\/ 20081029$/;"	m	struct:t_NPCData
xCountryID	tmpcode/commond.h	/^    DWORD xCountryID;   \/\/ π•ª˜π˙º“x$/;"	m	struct:stJieZhanState
xCountryID	tmpcode/commond.h	/^    DWORD xCountryID;   \/\/ π•ª˜π˙º“x$/;"	m	struct:stJieZhanXuanZhan
xCountryID	tmpcode/commond.h	/^    DWORD xCountryID;$/;"	m	struct:stPutJieZhanAsk
xCountryID	tmpcode/commond.h	/^    DWORD xCountryID;$/;"	m	struct:stPutJieZhanSure
xCountryID	tmpcode/commond.h	/^    DWORD xCountryID;$/;"	m	struct:stRefreshJieZhanInfo
xDes	base/Command.h	/^  WORD xDes;          \/**< ÁõÆÊ†áÁÇπ *\/$/;"	m	struct:Cmd::stAttackMagicUserCmd
xDes	tmpcode/commond.h	/^	WORD xDes;					\/**< ƒø±Íµ„ *\/$/;"	m	struct:stAttackMagicUserCmd
xLeftTime	tmpcode/commond.h	/^    DWORD xLeftTime;$/;"	m	struct:stRefreshJieZhanInfo
xResult	tmpcode/commond.h	/^    DWORD xResult;      \/\/ ΩÁ’ΩΩ·π˚: 0 ŒﬁΩ·π˚, 1 ’Ω §, 2 ’Ω∞‹$/;"	m	struct:stJieZhanState
xResult	tmpcode/commond.h	/^    DWORD xResult;$/;"	m	struct:stRefreshJieZhanInfo
xTime	tmpcode/commond.h	/^    DWORD xTime;        \/\/ –˚’Ω ±º‰$/;"	m	struct:stJieZhanState
xTime	tmpcode/commond.h	/^    DWORD xTime;        \/\/ –˚’Ω ±º‰$/;"	m	struct:stJieZhanXuanZhan
xTime	tmpcode/commond.h	/^    DWORD xTime;$/;"	m	struct:stRefreshJieZhanInfo
xTimeS	tmpcode/commond.h	/^    DWORD xTimeS;       \/\/ –˚’Ω ±º‰Stamp$/;"	m	struct:stJieZhanState
xbody	ScenesServer/SceneNpc.h	/^  BYTE xbody;$/;"	m	class:SceneNpc
xml	base/xml/xml_utility.h	/^	zXMLParser& xml;$/;"	m	struct:detail::argument_parse
xml_config	base/xml/xml_config.h	/^		xml_config(const std::string& filename = ""):_filename(filename)$/;"	f	class:xml_config
xml_config	base/xml/xml_config.h	/^class xml_config : public xml_node<Config>, public xml_config_base$/;"	c
xml_config_base	base/xml/xml_config.h	/^struct xml_config_base$/;"	s
xml_content	base/xml/xml_node_content.h	/^	    inline xml_content(const xml_content<T2>& prop):value(prop.value){$/;"	f	class:xml_content
xml_content	base/xml/xml_node_content.h	/^	xml_content() {$/;"	f	class:xml_content
xml_content	base/xml/xml_node_content.h	/^	xml_content(const T& v): value(v){$/;"	f	class:xml_content
xml_content	base/xml/xml_node_content.h	/^class xml_content$/;"	c
xml_node	base/xml/xml_node.h	/^		xml_node(const std::string nodename=""):name(nodename) {}$/;"	f	class:xml_node
xml_node	base/xml/xml_node.h	/^class xml_node : public T$/;"	c
xml_node_base	base/xml/xml_node.h	/^class xml_node_base$/;"	c
xml_node_deque	base/xml/xml_node_seq.h	/^template <typename T> struct xml_node_deque:$/;"	s
xml_node_list	base/xml/xml_node_seq.h	/^template <typename T> struct xml_node_list:$/;"	s
xml_node_map	base/xml/xml_node_map.h	/^template <typename Key, typename T> struct xml_node_map :$/;"	s
xml_node_map_container	base/xml/xml_node_container.h	/^	class xml_node_map_container : public Container$/;"	c	namespace:detail
xml_node_map_parser_generator	base/xml/xml_parser_generator.h	/^	xml_node_map_parser_generator(const std::string& maptype, xml_prop_parser_generator* keyppg)$/;"	f	class:xml_node_map_parser_generator
xml_node_map_parser_generator	base/xml/xml_parser_generator.h	/^class xml_node_map_parser_generator : public xml_node_parser_generator$/;"	c
xml_node_multimap	base/xml/xml_node_map.h	/^template <typename Key, typename T> struct xml_node_multimap :$/;"	s
xml_node_multiset	base/xml/xml_node_set.h	/^template <typename T> struct xml_node_multiset:$/;"	s
xml_node_parser_generator	base/xml/xml_parser_generator.h	/^class xml_node_parser_generator$/;"	c
xml_node_seq_container	base/xml/xml_node_container.h	/^	class xml_node_seq_container : public Container$/;"	c	namespace:detail
xml_node_seq_parser_generator	base/xml/xml_parser_generator.h	/^	xml_node_seq_parser_generator(const std::string conttype)$/;"	f	class:xml_node_seq_parser_generator
xml_node_seq_parser_generator	base/xml/xml_parser_generator.h	/^class xml_node_seq_parser_generator : public xml_node_parser_generator$/;"	c
xml_node_set	base/xml/xml_node_set.h	/^template <typename T> struct xml_node_set:$/;"	s
xml_node_set_parser_generator	base/xml/xml_parser_generator.h	/^	xml_node_set_parser_generator(const std::string settype, xml_prop_parser_generator* keyppg = NULL)$/;"	f	class:xml_node_set_parser_generator
xml_node_set_parser_generator	base/xml/xml_parser_generator.h	/^class xml_node_set_parser_generator : public xml_node_parser_generator$/;"	c
xml_node_vector	base/xml/xml_node_seq.h	/^template <typename T> struct xml_node_vector:$/;"	s
xml_parser_begin	base/xml/xml_node_help_define.h	4;"	d
xml_parser_begin	base/xml/xml_node_help_undef.h	4;"	d
xml_parser_content	base/xml/xml_node_help_define.h	87;"	d
xml_parser_content	base/xml/xml_node_help_undef.h	10;"	d
xml_parser_content_init	base/xml/xml_node_help_define.h	117;"	d
xml_parser_content_init	base/xml/xml_node_help_undef.h	12;"	d
xml_parser_end	base/xml/xml_node_help_define.h	225;"	d
xml_parser_end	base/xml/xml_node_help_undef.h	18;"	d
xml_parser_generator_base	base/xml/xml_parser_generator.h	/^class xml_parser_generator_base$/;"	c
xml_parser_map_node	base/xml/xml_node_help_define.h	186;"	d
xml_parser_map_node	base/xml/xml_node_help_undef.h	16;"	d
xml_parser_node	base/xml/xml_node_help_define.h	148;"	d
xml_parser_node	base/xml/xml_node_help_undef.h	14;"	d
xml_parser_prop	base/xml/xml_node_help_define.h	17;"	d
xml_parser_prop	base/xml/xml_node_help_undef.h	6;"	d
xml_parser_prop_init	base/xml/xml_node_help_define.h	52;"	d
xml_parser_prop_init	base/xml/xml_node_help_undef.h	8;"	d
xml_prop	base/xml/xml_node_prop.h	/^	    xml_prop(const xml_prop<T2, P2>& prop)$/;"	f	class:xml_prop
xml_prop	base/xml/xml_node_prop.h	/^	xml_prop()$/;"	f	class:xml_prop
xml_prop	base/xml/xml_node_prop.h	/^	xml_prop(const P&n, const T& v)$/;"	f	class:xml_prop
xml_prop	base/xml/xml_node_prop.h	/^	xml_prop(const T& v):value(v)$/;"	f	class:xml_prop
xml_prop	base/xml/xml_node_prop.h	/^class xml_prop$/;"	c
xml_prop2value	base/xml/xml_prop2value.h	/^	struct xml_prop2value$/;"	s	namespace:detail
xml_prop_parser_generator	base/xml/xml_parser_generator.h	/^	xml_prop_parser_generator(const std::string& propname)$/;"	f	class:xml_prop_parser_generator
xml_prop_parser_generator	base/xml/xml_parser_generator.h	/^class xml_prop_parser_generator$/;"	c
xmlfile	tools/codepg.cpp	/^    char* xmlfile;$/;"	m	struct:Args
xmlfile	tools/xmlpg.cpp	/^    char* xmlfile;$/;"	m	struct:Args
xmlpg_argp	tools/codepg.cpp	/^static struct argp xmlpg_argp = $/;"	v	typeref:struct:argp
xmlpg_argp	tools/xmlpg.cpp	/^static struct argp xmlpg_argp = $/;"	v	typeref:struct:argp
xpos	base/Object.h	/^	WORD xpos() const$/;"	f	struct:stObjectLocation
xuanZhan	tmpcode/commond.h	/^    stJieZhanXuanZhan xuanZhan[10];$/;"	m	struct:stJieZhanHisList
xxxType	base/Command.h	/^  BYTE xxxType;$/;"	m	struct:Cmd::stQuestInfoUserCmd
xxxxxx	base/Command.h	/^  BYTE xxxxxx;$/;"	m	struct:Cmd::t_UserData
xxxxxyyyy	base/Command.h	/^  WORD xxxxxyyyy;$/;"	m	struct:Cmd::t_MainUserData
y	ScenesServer/SceneUser.h	/^	int y;							\/\/sky ÂùêÊ†áy$/;"	m	struct:stUserBattfieldData
y	base/CharBase.h	/^  DWORD y;              \/\/\/ ËßíËâ≤ÊâÄÂú®ÂùêÊ†áy$/;"	m	struct:CharBase
y	base/Command.h	/^            WORD y; \/\/ŒÔ∆∑y◊¯±Í$/;"	m	struct:Cmd::stSortObjectPropertyUserCmd::__anon91
y	base/Command.h	/^      DWORD id,x,y;$/;"	m	struct:Cmd::stMapScreenSizeDataUserCmd::__anon77
y	base/Command.h	/^    BYTE y; \/\/Áâ©ÂìÅÊîæÁΩÆ‰ΩçÁΩÆyÂùêÊ†á$/;"	m	struct:Cmd::stAddObjectSellListUserCmd::__anon103
y	base/Command.h	/^    BYTE y; \/\/Áâ©ÂìÅÊîæÁΩÆ‰ΩçÁΩÆyÂùêÊ†á$/;"	m	struct:Cmd::stRequestAddObjectSellUserCmd::__anon104
y	base/Command.h	/^    DWORD x,y;          \/\/ ÂùêÊ†á$/;"	m	struct:Cmd::stMainUserReliveReliveUserCmd
y	base/Command.h	/^    DWORD y;$/;"	m	struct:Cmd::stBackOffMagicUserCmd
y	base/Command.h	/^    DWORD y;$/;"	m	struct:Cmd::stPickUpItemPropertyUserCmd
y	base/Command.h	/^    WORD y;    \/\/ÊâÄÂú®‰ΩçÁΩÆ$/;"	m	struct:Cmd::stRtnNpcOwnerListCmd::__anon116
y	base/Command.h	/^    WORD y;$/;"	m	struct:Cmd::stNpcMoveMoveUserCmd
y	base/Command.h	/^    WORD y;$/;"	m	struct:Cmd::stUserInstantJumpMoveUserCmd
y	base/Command.h	/^    WORD y;$/;"	m	struct:Cmd::stUserMoveMoveUserCmd
y	base/Command.h	/^    WORD y;$/;"	m	struct:Cmd::t_MapNpcData
y	base/Command.h	/^  BYTE y; \/\/Áâ©ÂìÅÊîæÁΩÆ‰ΩçÁΩÆyÂùêÊ†á$/;"	m	struct:Cmd::stAddObjectSellUserCmd
y	base/Command.h	/^  BYTE y; \/\/Áâ©ÂìÅÊîæÁΩÆ‰ΩçÁΩÆyÂùêÊ†á$/;"	m	struct:Cmd::stAddObjectTradeUserCmd
y	base/Command.h	/^  DWORD y;$/;"	m	struct:Cmd::stRelationStatusCmd
y	base/Command.h	/^  DWORD y;$/;"	m	struct:Cmd::t_MapBuildingData
y	base/Command.h	/^  DWORD y;$/;"	m	struct:Cmd::t_MapObjectData
y	base/Command.h	/^  WORD  y;            \/\/ÂùêÊ†áy$/;"	m	struct:Cmd::stDareCallDuty
y	base/Command.h	/^  WORD y;        $/;"	m	struct:Cmd::stNpcPosition
y	base/Command.h	/^  WORD y;        $/;"	m	struct:Cmd::t_MapBuildingDataPos
y	base/Command.h	/^  WORD y;        $/;"	m	struct:Cmd::t_MapNpcDataPosState
y	base/Command.h	/^  WORD y;        $/;"	m	struct:Cmd::t_MapUserDataPos
y	base/Command.h	/^  WORD y;        $/;"	m	struct:Cmd::t_MapUserDataPosState
y	base/Command.h	/^  WORD y;$/;"	m	struct:Cmd::stKillBossUserCmd
y	base/Command.h	/^  WORD y;$/;"	m	struct:Cmd::stRequestCountryHelpUserCmd
y	base/Command.h	/^  int x,y;$/;"	m	struct:Cmd::stTeamMemberPosition
y	base/Object.h	/^	WORD  y;		\/\/¡–$/;"	m	struct:stObjectLocation
y	base/SessionCommand.h	/^		DWORD y;$/;"	m	struct:Cmd::Session::CampPos
y	base/SessionCommand.h	/^	  DWORD x,y;	$/;"	m	struct:Cmd::Session::t_TelePKGame_SceneSession
y	base/SessionCommand.h	/^	DWORD y;$/;"	m	struct:Cmd::Session::t_RelationAddFriend
y	base/SessionCommand.h	/^      DWORD y;$/;"	m	struct:Cmd::Session::t_SummonGemNPC_SceneSession
y	base/SessionCommand.h	/^      DWORD y;$/;"	m	struct:Cmd::Session::t_changeScene_SceneSession
y	base/SessionCommand.h	/^      DWORD y;$/;"	m	struct:Cmd::Session::t_gmCommand_SceneSession
y	base/SessionCommand.h	/^      WORD y;            \/\/ÂùêÊ†áy$/;"	m	struct:Cmd::Session::t_GoTo_Leader_Check_SceneSession
y	base/SessionCommand.h	/^      WORD y;            \/\/ÂùêÊ†áy$/;"	m	struct:Cmd::Session::t_GoTo_Leader_SceneSession
y	base/zSceneEntry.h	/^	DWORD y;    \/**< ◊›◊¯±Í*\/$/;"	m	struct:zPos
y	base/zSceneEntry.h	/^	int y;    \/**< ◊›◊¯±Í*\/$/;"	m	struct:zAdjust
y	tmpcode/commond.h	/^				 WORD y;$/;"	m	struct:stAddUnsafeRegionDTSUserCmd::__anon309
y	tmpcode/commond.h	/^				DWORD id, x, y;$/;"	m	struct:stClientNewMap::__anon213
y	tmpcode/commond.h	/^		BYTE y; \/\/ŒÔ∆∑∑≈÷√Œª÷√y◊¯±Í$/;"	m	struct:stAddObjectSellListUserCmd::__anon280
y	tmpcode/commond.h	/^		BYTE y; \/\/ŒÔ∆∑∑≈÷√Œª÷√y◊¯±Í$/;"	m	struct:stRequestAddObjectSellUserCmd::tSellObject
y	tmpcode/commond.h	/^		BYTE y;$/;"	m	struct:stSendSeptStoreDataCmd::__anon305
y	tmpcode/commond.h	/^		DWORD y;						\/\/Ω®÷˛µƒy◊¯±Í$/;"	m	struct:stRetUnionBuildInfo::__anon269
y	tmpcode/commond.h	/^		DWORD y;$/;"	m	struct:stRetDangerAreaUserCmd::__anon253
y	tmpcode/commond.h	/^		DWORD y;$/;"	m	struct:stRetValidQuestUserCmd::con
y	tmpcode/commond.h	/^	BYTE y; \/\/ŒÔ∆∑∑≈÷√Œª÷√y◊¯±Í$/;"	m	struct:stAddBetObjectChallengeUserCmd
y	tmpcode/commond.h	/^	BYTE y; \/\/ŒÔ∆∑∑≈÷√Œª÷√y◊¯±Í$/;"	m	struct:stAddObjectSellUserCmd
y	tmpcode/commond.h	/^	BYTE y; \/\/ŒÔ∆∑∑≈÷√Œª÷√y◊¯±Í$/;"	m	struct:stAddObjectTradeUserCmd
y	tmpcode/commond.h	/^	BYTE y;$/;"	m	struct:stAddObjectSeptStoreCmd
y	tmpcode/commond.h	/^	BYTE y;$/;"	m	struct:stRemoveObjectSeptStore
y	tmpcode/commond.h	/^	BYTE y;$/;"	m	struct:stReqFetchSeptStoreCmd
y	tmpcode/commond.h	/^	BYTE y;$/;"	m	struct:stReqPutSeptStoreCmd
y	tmpcode/commond.h	/^	BYTE y;$/;"	m	struct:stSetObjectRightSeptStore
y	tmpcode/commond.h	/^	DWORD	y;$/;"	m	struct:FurnitureMapData
y	tmpcode/commond.h	/^	DWORD	y;$/;"	m	struct:stFlagMoveSCUserCmd
y	tmpcode/commond.h	/^	DWORD	y;$/;"	m	struct:stMoveFurnitureHomeUserCmd
y	tmpcode/commond.h	/^	DWORD	y;$/;"	m	struct:stNotifyAddFurnitureHomeUserCmd
y	tmpcode/commond.h	/^	DWORD   y;\/\/$/;"	m	struct:st_CharShow2
y	tmpcode/commond.h	/^	DWORD  y;$/;"	m	struct:decoration
y	tmpcode/commond.h	/^	DWORD x, y;  \/\/ ◊˘±Í$/;"	m	struct:stKillForeignerUserCmd
y	tmpcode/commond.h	/^	DWORD x, y;$/;"	m	struct:stUnionUpBuild
y	tmpcode/commond.h	/^	DWORD x,y;                                      \/\/ ◊¯±Í$/;"	m	struct:stMainUserReliveReliveUserCmd
y	tmpcode/commond.h	/^	DWORD y;                     \/\/◊¯±Íy$/;"	m	struct:stNotifyTransPropertyUserCmd
y	tmpcode/commond.h	/^	DWORD y;     $/;"	m	struct:stRelationStatusCmd
y	tmpcode/commond.h	/^	DWORD y;$/;"	m	struct:TitleInfo
y	tmpcode/commond.h	/^	DWORD y;$/;"	m	struct:stBackOffMagicUserCmd
y	tmpcode/commond.h	/^	DWORD y;$/;"	m	struct:stPickUpItemPropertyUserCmd
y	tmpcode/commond.h	/^	DWORD y;$/;"	m	struct:t_MapObjectData
y	tmpcode/commond.h	/^	WORD	y;						\/\/◊¯±Íy$/;"	m	struct:stDareCallDuty
y	tmpcode/commond.h	/^	WORD  y;			\/\/Œª÷√$/;"	m	struct:HouseObjDef
y	tmpcode/commond.h	/^	WORD  y;$/;"	m	struct:stMoveDecorationCmd
y	tmpcode/commond.h	/^	WORD y;				$/;"	m	struct:t_MapNPCData
y	tmpcode/commond.h	/^	WORD y;				$/;"	m	struct:t_MapUserDataPos
y	tmpcode/commond.h	/^	WORD y;				$/;"	m	struct:t_MapUserDataPosState
y	tmpcode/commond.h	/^	WORD y;	 $/;"	m	struct:st_PlaceObjectHouseUserCmd
y	tmpcode/commond.h	/^	WORD y;	\/\/$/;"	m	struct:stNpcComposeItemPropertyUserCmd
y	tmpcode/commond.h	/^	WORD y; $/;"	m	struct:stNotifyDecorationUnionID
y	tmpcode/commond.h	/^	WORD y; $/;"	m	struct:stRequestCountryHelpUserCmd
y	tmpcode/commond.h	/^	WORD y;$/;"	m	struct:npcState
y	tmpcode/commond.h	/^	WORD y;$/;"	m	struct:req_TransmitHouseUserCmd
y	tmpcode/commond.h	/^	WORD y;$/;"	m	struct:rtPictureHelpUserCmd
y	tmpcode/commond.h	/^	WORD y;$/;"	m	struct:stAddDecorationCmd
y	tmpcode/commond.h	/^	WORD y;$/;"	m	struct:stNpcMoveMoveUserCmd
y	tmpcode/commond.h	/^	WORD y;$/;"	m	struct:stSitDownChairUserCmd
y	tmpcode/commond.h	/^	int x,y;$/;"	m	struct:stTeamMemberPosition
y	tmpcode/commond.h	/^            WORD y; \/\/ŒÔ∆∑y◊¯±Í$/;"	m	struct:stSortObjectPropertyUserCmd::__anon344
y	tmpcode/commond.h	/^        WORD    y;                                              \/\/◊¯±Íy $/;"	m	struct:stMercenaryCallDuty
y	tmpcode/commond.h	/^        WORD y; $/;"	m	struct:stMercenaryCountryHelpUserCmd
y	tmpcode/commond.h	/^        WORD y;$/;"	m	struct:OneQuestInfo
y	tmpcode/commond.h	/^    WORD    y;$/;"	m	struct:stMapMagicEffectUserCmd
y	tmpcode/commond.h	/^    WORD y;         $/;"	m	struct:stResponToGuardHelpUserCmd
y	tmpcode/commond.h	/^    WORD y;$/;"	m	struct:stCallPrivateGuardHelpUserCmd
y	tmpcode/commond.h	/^    WORD y;$/;"	m	struct:stCallSeptGuardHelpUserCmd
y1	base/Command.h	/^  int y1;$/;"	m	struct:Cmd::stSendMail
y1	tmpcode/commond.h	/^	int y1;$/;"	m	struct:stAnswerBeTradeImageUserCmd
y1	tmpcode/commond.h	/^	int y1;$/;"	m	struct:stRequestTradeNewUserCmd
y1	tmpcode/commond.h	/^    int y1;$/;"	m	struct:stSendMail
yBody	base/Command.h	/^	BYTE yBody;$/;"	m	struct:Cmd::t_NpcData
yBody	tmpcode/commond.h	/^	BYTE  yBody;  $/;"	m	struct:stSendChangeFaceNPCMagicUserCmd
yBody	tmpcode/commond.h	/^    BYTE  yBody;  $/;"	m	struct:t_NPCData
yDes	base/Command.h	/^  WORD yDes;          \/**< ÁõÆÊ†áÁÇπ *\/$/;"	m	struct:Cmd::stAttackMagicUserCmd
yDes	tmpcode/commond.h	/^	WORD yDes;					\/**< ƒø±Íµ„ *\/$/;"	m	struct:stAttackMagicUserCmd
yardLevel	tmpcode/commond.h	/^	DWORD	yardLevel;                     \/\/∫Û‘∫µ»º∂$/;"	m	struct:HomeMapData
yardLevel	tmpcode/commond.h	/^	DWORD yardLevel;$/;"	m	struct:stModifyHomeDataUserCmd
ybody	ScenesServer/SceneNpc.h	/^  BYTE ybody;$/;"	m	class:SceneNpc
year	tmpcode/commond.h	/^        WORD    year;           \/\/≥ˆ…˙ƒÍ∑›$/;"	m	struct:stNameCard
year	tmpcode/commond.h	/^    WORD year;$/;"	m	struct:stCityQuestEarnInfo
year_animal	tmpcode/commond.h	/^	BYTE year_animal; \/\/ …˙–§,0±£√‹£¨1-12,…˙–§$/;"	m	struct:stPersonalSign
yes_trafficMoney	tmpcode/commond.h	/^		int yes_trafficMoney;$/;"	m	struct:stReturnCountryTax::CityInfo
yes_trafficTax	tmpcode/commond.h	/^		WORD yes_trafficTax;$/;"	m	struct:stReturnCountryTax::CityInfo
yesterday_tax	tmpcode/commond.h	/^		int yesterday_tax;$/;"	m	struct:stReturnCountryTax::CityInfo
yesterdaysHeroAward	tmpcode/commond.h	/^	HeroAward yesterdaysHeroAward;$/;"	m	struct:stRetRanksChatCmd
ypos	base/Object.h	/^	WORD ypos() const$/;"	f	struct:stObjectLocation
yyId	tmpcode/commond.h	/^        QWORD   yyId;           \/\/yy∫≈  $/;"	m	struct:stNameCard
zAStar	base/zAStar.h	/^class zAStar$/;"	c
zAdjust	base/zSceneEntry.h	/^struct zAdjust$/;"	s
zArg	base/zArg.h	/^class zArg : private zNoncopyable$/;"	c
zBody	base/Command.h	/^	BYTE zBody;$/;"	m	struct:Cmd::t_NpcData
zBody	tmpcode/commond.h	/^	BYTE  zBody; $/;"	m	struct:stSendChangeFaceNPCMagicUserCmd
zBody	tmpcode/commond.h	/^    BYTE  zBody;$/;"	m	struct:t_NPCData
zCard	ScenesServer/zCard.cpp	/^zCard::zCard():zEntry()$/;"	f	class:zCard
zCard	ScenesServer/zCard.h	/^struct zCard:zEntry$/;"	s
zCardB	base/zDatabase.h	/^struct zCardB : public zEntry$/;"	s
zCmdCheck	base/zMisc.h	/^	zCmdCheck()$/;"	f	class:zCmdCheck
zCmdCheck	base/zMisc.h	/^class zCmdCheck : public zNoncopyable$/;"	c
zCond	base/zCond.h	/^	zCond()$/;"	f	class:zCond
zCond	base/zCond.h	/^class zCond : private zNoncopyable$/;"	c
zConfile	base/zConfile.h	/^class zConfile$/;"	c
zCountryID	tmpcode/commond.h	/^    DWORD zCountryID;   \/\/ ±ªπ˙º“zπ•ª˜, ∑¿ ÿzπ˙$/;"	m	struct:stJieZhanState
zCountryID	tmpcode/commond.h	/^    DWORD zCountryID;$/;"	m	struct:stRefreshJieZhanInfo
zDBConnPool	base/zDBConnPool.h	/^class zDBConnPool$/;"	c
zDataBM	base/zDatabaseManager.h	/^	zDataBM()$/;"	f	class:zDataBM
zDataBM	base/zDatabaseManager.h	/^class  zDataBM:public zDataManager$/;"	c
zDataManager	base/zDatabaseManager.h	/^typedef zEntryManager<zEntryID,zMultiEntryName> zDataManager;$/;"	t
zDatabaseCallBack	base/zDatabaseManager.h	/^class zDatabaseCallBack$/;"	c
zEntry	base/zEntry.h	/^	zEntry():zEntryC()$/;"	f	struct:zEntry
zEntry	base/zEntry.h	/^struct zEntry:public zEntryC,private zNoncopyable$/;"	s
zEntryC	base/zEntry.h	/^	zEntryC()$/;"	f	struct:zEntryC
zEntryC	base/zEntry.h	/^struct zEntryC$/;"	s
zEntryCallback	base/zEntry.h	/^struct zEntryCallback$/;"	s
zEntryID	base/zEntryManager.h	/^class zEntryID:public LimitHash<DWORD,zEntry *>$/;"	c
zEntryManager	base/zEntryManager.h	/^	zEntryManager() { }$/;"	f	class:zEntryManager
zEntryManager	base/zEntryManager.h	/^class zEntryManager:protected e1,protected e2,protected e3$/;"	c
zEntryName	base/zEntryManager.h	/^class zEntryName:public LimitHash<const char *,zEntry *>$/;"	c
zEntryNone	base/zEntryManager.h	/^class zEntryNone$/;"	c
zEntryTempID	base/zEntryManager.h	/^	zEntryTempID() {}$/;"	f	class:zEntryTempID
zEntryTempID	base/zEntryManager.h	/^class zEntryTempID:public LimitHash<DWORD,zEntry *>$/;"	c
zLeftTime	tmpcode/commond.h	/^    DWORD zLeftTime;$/;"	m	struct:stRefreshJieZhanInfo
zLevel	base/zLogger.h	/^	class zLevel$/;"	c	class:zLogger
zLevelInt	base/zLogger.h	/^	    enum zLevelInt$/;"	g	class:zLogger::zLevel
zLogger	base/zLogger.h	/^class zLogger$/;"	c
zMNetService	base/zMNetService.h	/^	zMNetService(const std::string &name) : zService(name)$/;"	f	class:zMNetService
zMNetService	base/zMNetService.h	/^class zMNetService : public zService$/;"	c
zMTCPServer	base/zMTCPServer.h	/^class zMTCPServer : private zNoncopyable$/;"	c
zMisc	base/zMisc.h	/^class zMisc$/;"	c
zMultiEntryName	base/zEntryManager.h	/^class zMultiEntryName:public MultiHash<\/*const char **\/const char *,zEntry *>$/;"	c
zMutex	base/zMutex.h	/^	zMutex(int kind = PTHREAD_MUTEX_FAST_NP) $/;"	f	class:zMutex
zMutex	base/zMutex.h	/^class zMutex : private zNoncopyable$/;"	c
zMutex_scope_lock	base/zMutex.h	/^	zMutex_scope_lock(zMutex &m) : mlock(m)$/;"	f	class:zMutex_scope_lock
zMutex_scope_lock	base/zMutex.h	/^class zMutex_scope_lock : private zNoncopyable$/;"	c
zNetService	base/zNetService.h	/^	zNetService(const std::string &name) : zService(name)$/;"	f	class:zNetService
zNetService	base/zNetService.h	/^class zNetService : public zService$/;"	c
zNoncopyable	base/zNoncopyable.h	/^    zNoncopyable() {};$/;"	f	class:zNoncopyable
zNoncopyable	base/zNoncopyable.h	/^class zNoncopyable$/;"	c
zNpcB	base/zDatabase.h	/^    zNpcB() : zEntry()$/;"	f	struct:zNpcB
zNpcB	base/zDatabase.h	/^struct zNpcB : public zEntry$/;"	s
zObject	ScenesServer/zObject.cpp	/^zObject::zObject():zEntry()$/;"	f	class:zObject
zObject	ScenesServer/zObject.h	/^struct zObject:zEntry$/;"	s
zObjectB	base/zDatabase.h	/^struct zObjectB : public zEntry$/;"	s
zPathPoint	base/zAStar.h	/^	struct zPathPoint$/;"	s	class:zAStar
zPathQueue	base/zAStar.h	/^		zPathQueue(const zPathQueue &queue)$/;"	f	struct:zAStar::zPathQueue
zPathQueue	base/zAStar.h	/^		zPathQueue(zPathPoint *node,int cost)$/;"	f	struct:zAStar::zPathQueue
zPathQueue	base/zAStar.h	/^	struct zPathQueue$/;"	s	class:zAStar
zPathQueueHead	base/zAStar.h	/^	typedef std::list<zPathQueue> zPathQueueHead;$/;"	t	class:zAStar
zPoint	ScenesServer/WayPoint.h	/^	zPoint() : pos()$/;"	f	struct:zPoint
zPoint	ScenesServer/WayPoint.h	/^	zPoint(const zPoint &point)$/;"	f	struct:zPoint
zPoint	ScenesServer/WayPoint.h	/^struct zPoint$/;"	s
zPos	base/zSceneEntry.h	/^	zPos()$/;"	f	struct:zPos
zPos	base/zSceneEntry.h	/^	zPos(const DWORD x,const DWORD y)$/;"	f	struct:zPos
zPos	base/zSceneEntry.h	/^	zPos(const zPos &pos)$/;"	f	struct:zPos
zPos	base/zSceneEntry.h	/^struct zPos$/;"	s
zPos2zPosI	ScenesServer/zSceneEntryIndex.h	/^    zPosI &zPos2zPosI(const zPos &p,zPosI &pi) const$/;"	f	class:zSceneEntryIndex
zPos2zPosI	base/zSceneEntry.h	/^	static void zPos2zPosI(const zPos &screenWH,const zPos &pos,zPosI &posi)$/;"	f	struct:zSceneEntry
zPosI	base/zSceneEntry.h	/^typedef DWORD zPosI;$/;"	t
zPosIValidate	ScenesServer/zSceneEntryIndex.h	/^    const bool zPosIValidate(const zPosI &posi) const { return posi < screenMax; }$/;"	f	class:zSceneEntryIndex
zPosIVector	ScenesServer/zSceneEntryIndex.h	/^typedef std::vector<unsigned int> zPosIVector;$/;"	t
zPosIVector	base/zSceneEntry.h	/^typedef std::vector<zPosI> zPosIVector;$/;"	t
zPosIndex	ScenesServer/SceneDefine.h	/^typedef std::vector<zPos> zPosIndex;$/;"	t
zPosRevaluate	ScenesServer/zSceneEntryIndex.h	/^    const void zPosRevaluate(zPos &pos) const$/;"	f	class:zSceneEntryIndex
zPosShortRange	ScenesServer/zSceneEntryIndex.h	/^    const bool zPosShortRange(const zPos &pos1,const zPos &pos2,const int radius) const$/;"	f	class:zSceneEntryIndex
zPosShortRange	ScenesServer/zSceneEntryIndex.h	/^    const bool zPosShortRange(const zPos &pos1,const zPos &pos2,const int wide,const int height) const$/;"	f	class:zSceneEntryIndex
zPosValidate	ScenesServer/zSceneEntryIndex.h	/^    const bool zPosValidate(const zPos &pos) const { return pos.x < sceneWH.x && pos.y < sceneWH.y; }$/;"	f	class:zSceneEntryIndex
zPosVector	base/zSceneEntry.h	/^typedef std::vector<zPos> zPosVector;$/;"	t
zProcessor	base/zSocket.h	/^class zProcessor$/;"	c
zProperties	base/zProperties.h	/^class zProperties$/;"	c
zRTime	base/zTime.h	/^	zRTime(const int delay = 0)$/;"	f	class:zRTime
zRTime	base/zTime.h	/^	zRTime(const zRTime &rt)$/;"	f	class:zRTime
zRTime	base/zTime.h	/^class zRTime$/;"	c
zRWLock	base/zRWLock.h	/^	zRWLock():rd_count(0),wr_count(0)$/;"	f	class:zRWLock
zRWLock	base/zRWLock.h	/^class zRWLock : private zNoncopyable$/;"	c
zRWLock_scope_rdlock	base/zRWLock.h	/^	zRWLock_scope_rdlock(zRWLock &m) : rwlock(m)$/;"	f	class:zRWLock_scope_rdlock
zRWLock_scope_rdlock	base/zRWLock.h	/^class zRWLock_scope_rdlock : private zNoncopyable$/;"	c
zRWLock_scope_wrlock	base/zRWLock.h	/^	zRWLock_scope_wrlock(zRWLock &m) : rwlock(m)$/;"	f	class:zRWLock_scope_wrlock
zRWLock_scope_wrlock	base/zRWLock.h	/^class zRWLock_scope_wrlock : private zNoncopyable$/;"	c
zRegex	base/zRegex.h	/^class zRegex$/;"	c
zRegion	ScenesServer/SceneDefine.h	/^  zRegion()$/;"	f	struct:zRegion
zRegion	ScenesServer/SceneDefine.h	/^  zRegion(const zRegion &reg)$/;"	f	struct:zRegion
zRegion	ScenesServer/SceneDefine.h	/^struct zRegion$/;"	s
zResult	tmpcode/commond.h	/^    DWORD zResult;      \/\/ ΩÁ’ΩΩ·π˚: 0 ŒﬁΩ·π˚, 1 ’Ω §, 2 ’Ω∞‹$/;"	m	struct:stJieZhanState
zResult	tmpcode/commond.h	/^    DWORD zResult;$/;"	m	struct:stRefreshJieZhanInfo
zScene	base/zScene.h	/^	zScene():running_state(SCENE_RUNNINGSTATE_NORMAL){}$/;"	f	struct:zScene
zScene	base/zScene.h	/^struct zScene:public zEntry$/;"	s
zSceneEntry	base/zSceneEntry.h	/^	zSceneEntry(SceneEntryType type,const SceneEntryState state = SceneEntry_Normal):sceneentrytype(type),sceneentrystate(state)$/;"	f	struct:zSceneEntry
zSceneEntry	base/zSceneEntry.h	/^struct zSceneEntry:public zEntry$/;"	s
zSceneEntryCallBack	ScenesServer/zSceneEntryIndex.h	/^struct zSceneEntryCallBack$/;"	s
zSceneEntryIndex	ScenesServer/zSceneEntryIndex.h	/^    zSceneEntryIndex() {}$/;"	f	class:zSceneEntryIndex
zSceneEntryIndex	ScenesServer/zSceneEntryIndex.h	/^class zSceneEntryIndex : private zNoncopyable$/;"	c
zSceneManager	base/zSceneManager.h	/^	zSceneManager()$/;"	f	class:zSceneManager
zSceneManager	base/zSceneManager.h	/^class zSceneManager:public zEntryManager<zEntryID,zEntryTempID,zEntryName>$/;"	c
zSceneObject	ScenesServer/zObject.h	/^  zSceneObject(zObject *obj,const zRTime &ct):zSceneEntry(SceneEntry_Object),ct(ct)$/;"	f	struct:zSceneObject
zSceneObject	ScenesServer/zObject.h	/^struct zSceneObject:public zSceneEntry$/;"	s
zService	base/zService.h	/^	zService(const std::string &name) : name(name)$/;"	f	class:zService
zService	base/zService.h	/^class zService : private zNoncopyable$/;"	c
zSkill	ScenesServer/Skill.cpp	/^zSkill::zSkill() : zEntry()$/;"	f	class:zSkill
zSkill	ScenesServer/Skill.h	/^struct zSkill : zEntry$/;"	s
zSkillB	base/zDatabase.h	/^    zSkillB() : zEntry()$/;"	f	struct:zSkillB
zSkillB	base/zDatabase.h	/^struct zSkillB : public zEntry$/;"	s
zSocket	base/zSocket.h	/^class zSocket : private zNoncopyable$/;"	c
zSubNetService	base/zSubNetService.h	/^class zSubNetService : public zNetService$/;"	c
zSyncEvent	base/zSyncEvent.h	/^	zSyncEvent(const bool initstate = false) :state(initstate) {};$/;"	f	class:zSyncEvent
zSyncEvent	base/zSyncEvent.h	/^class zSyncEvent : private zNoncopyable$/;"	c
zTCPBufferClient	base/zTCPClient.h	/^	zTCPBufferClient($/;"	f	class:zTCPBufferClient
zTCPBufferClient	base/zTCPClient.h	/^class zTCPBufferClient : public zTCPClient$/;"	c
zTCPClient	base/zTCPClient.h	/^	zTCPClient($/;"	f	class:zTCPClient
zTCPClient	base/zTCPClient.h	/^class zTCPClient : public zThread,public zProcessor$/;"	c
zTCPClientTask	base/zTCPClientTask.h	/^	zTCPClientTask($/;"	f	class:zTCPClientTask
zTCPClientTask	base/zTCPClientTask.h	/^class zTCPClientTask : public zProcessor,private zNoncopyable$/;"	c
zTCPClientTaskContainer	base/zTCPClientTaskPool.h	/^	typedef std::list<zTCPClientTask *> zTCPClientTaskContainer;$/;"	t	class:zTCPClientTaskPool
zTCPClientTaskPool	base/zTCPClientTaskPool.h	/^	explicit zTCPClientTaskPool(const DWORD connPerThread=512,const unsigned long us=50000L) : connPerThread(connPerThread)$/;"	f	class:zTCPClientTaskPool
zTCPClientTaskPool	base/zTCPClientTaskPool.h	/^class zTCPClientTaskPool : private zNoncopyable$/;"	c
zTCPClientTask_IT	base/zTCPClientTaskPool.h	/^	typedef zTCPClientTaskContainer::iterator zTCPClientTask_IT;$/;"	t	class:zTCPClientTaskPool
zTCPServer	base/zTCPServer.h	/^class zTCPServer : private zNoncopyable$/;"	c
zTCPTask	base/zTCPTask.h	/^	zTCPTask($/;"	f	class:zTCPTask
zTCPTask	base/zTCPTask.h	/^class zTCPTask : public zProcessor,private zNoncopyable$/;"	c
zTCPTaskPool	base/zTCPTaskPool.h	/^	explicit zTCPTaskPool(const int maxConns,const int state,const unsigned long us=50000L) : maxConns(maxConns),state(state)$/;"	f	class:zTCPTaskPool
zTCPTaskPool	base/zTCPTaskPool.h	/^class zTCPTaskPool : private zNoncopyable$/;"	c
zTCPTask_State	base/zTCPTask.h	/^	enum zTCPTask_State$/;"	g	class:zTCPTask
zThread	base/zThread.h	/^	zThread(const std::string &name = std::string("zThread"),const bool joinable = true) $/;"	f	class:zThread
zThread	base/zThread.h	/^class zThread : private zNoncopyable$/;"	c
zThreadGroup	base/zThread.h	/^class zThreadGroup : private zNoncopyable$/;"	c
zTiles	Robot/LoadMap.h	/^typedef std::vector<Tile> zTiles;$/;"	t
zTiles	ScenesServer/LoadMap.h	/^typedef std::vector<Tile> zTiles;$/;"	t
zTime	base/zTime.h	/^	zTime()$/;"	f	class:zTime
zTime	base/zTime.h	/^	zTime(const zTime &ct)$/;"	f	class:zTime
zTime	base/zTime.h	/^class zTime$/;"	c
zTime	tmpcode/commond.h	/^    DWORD zTime;        \/\/ ±ª–˚’Ω ±º‰$/;"	m	struct:stJieZhanState
zTime	tmpcode/commond.h	/^    DWORD zTime;$/;"	m	struct:stRefreshJieZhanInfo
zTimeS	tmpcode/commond.h	/^    DWORD zTimeS;       \/\/ ±ª–˚’Ω ±º‰Stamp$/;"	m	struct:stJieZhanState
zUniqueDWORDID	SessionServer/SessionChat.h	/^typedef zUniqueID<DWORD> zUniqueDWORDID;$/;"	t
zUniqueDWORDID	base/zUniqueID.h	/^typedef zUniqueID<DWORD> zUniqueDWORDID;$/;"	t
zUniqueID	base/zUniqueID.h	/^	zUniqueID()$/;"	f	class:zUniqueID
zUniqueID	base/zUniqueID.h	/^	zUniqueID(T startID)$/;"	f	class:zUniqueID
zUniqueID	base/zUniqueID.h	/^	zUniqueID(T startID,T endID)$/;"	f	class:zUniqueID
zUniqueID	base/zUniqueID.h	/^class zUniqueID:private zNoncopyable$/;"	c
zUser	base/zUser.h	/^	zUser():zSceneEntry(SceneEntry_Player)$/;"	f	struct:zUser
zUser	base/zUser.h	/^struct zUser:public zSceneEntry$/;"	s
zUserManager	base/zUserManager.h	/^	zUserManager()$/;"	f	class:zUserManager
zUserManager	base/zUserManager.h	/^class zUserManager:public zEntryManager< zEntryID,zEntryTempID,zEntryName>$/;"	c
zXMLParser	base/zXMLParser.h	/^class zXMLParser$/;"	c
zZone	ScenesServer/WayPoint.h	/^	zZone()$/;"	f	struct:zZone
zZone	ScenesServer/WayPoint.h	/^struct zZone{$/;"	s
zbody	ScenesServer/SceneNpc.h	/^  BYTE zbody;$/;"	m	class:SceneNpc
zhanling	tmpcode/commond.h	/^		WORD  zhanling;$/;"	m	struct:stReturnScoreListZhenxuanUserCmd::NameAndScore
zip	GatewayServer/ScreenIndex.cpp	/^  bool zip;$/;"	m	struct:SendNineExec
zlevel	base/zLogger.h	/^	    log4cxx::LevelPtr zlevel;$/;"	m	class:zLogger::zLevel
zone	SuperServer/RoleregCache.cpp	/^	WORD zone; \/\/”Œœ∑«¯±‡∫≈$/;"	m	struct:RoleData
zone	base/BattleUserCmd.h	/^	DWORD zone;$/;"	m	struct:Cmd::stReqChangeZoneUserCmd
zone	base/BattleUserCmd.h	/^	DWORD zone;$/;"	m	struct:Cmd::stReqEnterBattleUserCmd
zone	base/BroadCommand.h	/^      WORD zone;$/;"	m	struct:Cmd::BroadServer::t_Startup_Request
zone	base/Command.h	/^  WORD zone;              \/**< Ê∏∏ÊàèÂå∫ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stUserRefrainLoginCmd
zone	base/Command.h	/^  WORD zone;              \/**< Ê∏∏ÊàèÂå∫ÁºñÂè∑ *\/$/;"	m	struct:Cmd::stUserRequestLoginCmd
zone	base/GmToolCommand.h	/^      GameZone_t zone;$/;"	m	struct:Cmd::GmTool::t_Broadcast_GmTool
zone	base/GmToolCommand.h	/^      GameZone_t zone;$/;"	m	struct:Cmd::GmTool::t_Chat_GmTool
zone	base/GmToolCommand.h	/^      GameZone_t zone;$/;"	m	struct:Cmd::GmTool::t_Msg_GmTool
zone	base/GmToolCommand.h	/^      GameZone_t zone;$/;"	m	struct:Cmd::GmTool::t_Msg_Reply_GmTool
zone	base/GmToolCommand.h	/^      GameZone_t zone;$/;"	m	struct:Cmd::GmTool::t_Punish_GmTool
zone	base/GmToolCommand.h	/^      GameZone_t zone;\/\/Âå∫$/;"	m	struct:Cmd::GmTool::t_Log_GmTool
zone	base/GmToolCommand.h	/^      GameZone_t zone;\/\/Âå∫$/;"	m	struct:Cmd::GmTool::t_NewMsg_GmTool
zone	base/zType.h	/^      WORD zone;$/;"	m	struct:GameZone_t::__anon8::__anon9
zone	roleRegServer/RoleTask.h	/^    unsigned short zone;$/;"	m	struct:RoleData
zone	tmpcode/commond.h	/^	WORD zone;							\/**< ”Œœ∑«¯±‡∫≈ *\/$/;"	m	struct:stUserRequestLoginCmd
zone	tmpcode/commond.h	/^	WORD zone;                          \/**< ”Œœ∑«¯±‡∫≈ *\/$/;"	m	struct:stUserRequestMtcardCmd
zoneGameVersion	FLServer/GYListManager.h	/^	DWORD zoneGameVersion;$/;"	m	struct:GYList
zoneGameVersion	base/FLCommand.h	/^      DWORD zoneGameVersion;$/;"	m	struct:Cmd::FL::t_GYList_FL
zoneGameVersion	base/SuperCommand.h	/^      DWORD zoneGameVersion;$/;"	m	struct:Cmd::Super::t_GYList_Gateway
zoneInfo	roleChangeServer/ChangeTask.h	/^	ZoneInfo_map zoneInfo;$/;"	m	class:RoleContainer
zoneName	SuperServer/SuperServer.h	/^    std::string zoneName;$/;"	m	class:SuperService
zoneTypeDef	ScenesServer/Scene.h	/^    ZoneTypeDefVector zoneTypeDef;$/;"	m	class:Scene
zoneUser	FLServer/UserTask.h	/^	ZoneUser_map zoneUser;$/;"	m	class:UserContainer
zone_id	base/BattleUserCmd.h	/^	DWORD zone_id;$/;"	m	struct:Cmd::stChangeZoneVerify
zone_id	base/BattleUserCmd.h	/^	DWORD zone_id;$/;"	m	struct:Cmd::zone_info
zone_id	base/Command.h	/^  DWORD zone_id;$/;"	m	struct:Cmd::stPingList
zone_id	base/RolechangeCommand.h	/^	DWORD zone_id;$/;"	m	struct:Cmd::Rolechange::t_zone_info
zone_info	base/BattleUserCmd.h	/^	zone_info()$/;"	f	struct:Cmd::zone_info
zone_info	base/BattleUserCmd.h	/^    struct zone_info$/;"	s	namespace:Cmd
zone_level	base/BattleUserCmd.h	/^	DWORD zone_level;$/;"	m	struct:Cmd::zone_info
zone_state	base/CharBase.h	/^  DWORD zone_state;	\/\/◊™«¯◊¥Ã¨,≤Œº˚√∂æŸ$/;"	m	struct:CharBase
zone_state	base/Command.h	/^    DWORD zone_state;$/;"	m	struct:Cmd::SelectUserInfo
zone_state	tmpcode/commond.h	/^	DWORD zone_state;                           \/\/\/ ◊¥Ã¨0,2 ±ø…“‘µ«¬º£¨$/;"	m	struct:SelectUserInfo
zs	base/CharBase.h	/^  DWORD  zs;                   \/\/\/ËΩ¨ÁîüÊ¨°Êï∞$/;"	m	struct:CharBase
~Action	ScenesServer/QuestAction.h	/^  virtual ~Action() { }$/;"	f	class:Action
~AddBindItemAction	ScenesServer/QuestAction.h	/^  virtual ~AddBindItemAction() { }$/;"	f	class:AddBindItemAction
~AddHeroExpAction	ScenesServer/QuestAction.h	/^  virtual ~AddHeroExpAction() { }$/;"	f	class:AddHeroExpAction
~AddItemAction	ScenesServer/QuestAction.h	/^  virtual ~AddItemAction() { }$/;"	f	class:AddItemAction
~BattleSlot	ScenesServer/zCard.cpp	/^BattleSlot::~BattleSlot()$/;"	f	class:BattleSlot
~BillCache	BillServer/BillCache.cpp	/^BillCache::~BillCache()$/;"	f	class:BillCache
~BillClient	BillServer/BillClient.cpp	/^BillClient::~BillClient() {}$/;"	f	class:BillClient
~BillClientManager	BillServer/BillClientManager.cpp	/^BillClientManager::~BillClientManager()$/;"	f	class:BillClientManager
~BillManager	BillServer/BillManager.h	/^    ~BillManager() {};$/;"	f	class:BillManager
~BillService	BillServer/BillServer.h	/^    ~BillService()$/;"	f	class:BillService
~BillSessionManager	BillServer/BillSessionManager.h	/^    ~BillSessionManager()$/;"	f	class:BillSessionManager
~BillTask	BillServer/BillTask.h	/^    ~BillTask() {};$/;"	f	class:BillTask
~BillTaskManager	BillServer/BillTaskManager.h	/^    ~BillTaskManager() {};$/;"	f	class:BillTaskManager
~BillTimeTick	BillServer/TimeTick.h	/^    ~BillTimeTick() {};$/;"	f	class:BillTimeTick
~BillUserManager	BillServer/BillUserManager.cpp	/^BillUserManager::~BillUserManager()$/;"	f	class:BillUserManager
~BroadClient	SuperServer/BroadClient.cpp	/^BroadClient::~BroadClient()$/;"	f	class:BroadClient
~BroadClientManager	SuperServer/BroadClientManager.cpp	/^BroadClientManager::~BroadClientManager()$/;"	f	class:BroadClientManager
~BulletinAction	ScenesServer/QuestAction.h	/^  virtual ~BulletinAction() { }  $/;"	f	class:BulletinAction
~CGraceUser	SessionServer/SessionManager.cpp	/^    ~CGraceUser()$/;"	f	class:CGraceUser
~CRelationManager	SessionServer/CRelationManager.cpp	/^CRelationManager::~CRelationManager()$/;"	f	class:CRelationManager
~CSortM	SessionServer/CSort.cpp	/^CSortM::~CSortM()$/;"	f	class:CSortM
~Callback	base/zThread.h	/^		virtual ~Callback(){};$/;"	f	struct:zThreadGroup::Callback
~CardSlot	ScenesServer/zCard.cpp	/^CardSlot::~CardSlot()$/;"	f	class:CardSlot
~CardSlotCallback	ScenesServer/zCard.h	/^  virtual ~CardSlotCallback(){};$/;"	f	struct:CardSlotCallback
~CardSlots	ScenesServer/zCard.cpp	/^CardSlots::~CardSlots()$/;"	f	class:CardSlots
~CardTujianManager	ScenesServer/CardTujianManager.cpp	/^CardTujianManager::~CardTujianManager()$/;"	f	class:CardTujianManager
~ChallengeGame	ScenesServer/ChallengeGame.cpp	/^ChallengeGame::~ChallengeGame()$/;"	f	class:ChallengeGame
~ChallengeGameManager	ScenesServer/ChallengeGameManager.cpp	/^ChallengeGameManager::~ChallengeGameManager()$/;"	f	class:ChallengeGameManager
~ChangeTask	roleChangeServer/ChangeTask.h	/^	~ChangeTask() {$/;"	f	class:ChangeTask
~ChannelM	ScenesServer/Chat.cpp	/^ChannelM::~ChannelM()$/;"	f	class:ChannelM
~CheckedBuf	base/zMisc.h	/^	~CheckedBuf()$/;"	f	class:CheckedBuf
~CheckerTable	GatewayServer/CmdChecker.cpp	/^CheckerTable::~CheckerTable()$/;"	f	class:CheckerTable
~Client	Robot/Client.cpp	/^Client::~Client()$/;"	f	class:Client
~ClientExec	Robot/ClientManager.h	/^    virtual ~ClientExec() {}$/;"	f	struct:ClientExec
~ClientManager	Robot/ClientManager.h	/^	~ClientManager() {};$/;"	f	class:ClientManager
~ClientService	Robot/ClientService.h	/^    ~ClientService()$/;"	f	class:ClientService
~ClientTimeTick	Robot/TimeTick.h	/^	~ClientTimeTick() {};$/;"	f	class:ClientTimeTick
~CmdChecker	GatewayServer/CmdChecker.h	/^	~CmdChecker()$/;"	f	class:CmdChecker
~Compare	ScenesServer/QuestMaker.h	/^    virtual ~Compare() { }$/;"	f	class:MakeFunction::Compare
~Compare	SessionServer/SessionManager.h	/^      virtual ~Compare(){}$/;"	f	struct:UserSessionManager::Compare
~Condition	ScenesServer/QuestCondition.h	/^  virtual ~Condition() { }$/;"	f	class:Condition
~Consign	BillServer/StockConsign.h	/^    virtual ~Consign()$/;"	f	class:Consign
~ConsignGoldManager	BillServer/StockConsign.cpp	/^ConsignGoldManager::~ConsignGoldManager()$/;"	f	class:ConsignGoldManager
~ConsignHistoryManager	BillServer/StockConsign.cpp	/^ConsignHistoryManager::~ConsignHistoryManager()$/;"	f	class:ConsignHistoryManager
~ConsignMoneyManager	BillServer/StockConsign.cpp	/^ConsignMoneyManager::~ConsignMoneyManager()$/;"	f	class:ConsignMoneyManager
~Content	ScenesServer/QuestMaker.h	/^    virtual ~Content() { }$/;"	f	class:MakeFunction::Content
~CounterManager	ScenesServer/CounterManager.cpp	/^CounterManager::~CounterManager()$/;"	f	class:CounterManager
~CountryInfo	GatewayServer/CountryInfo.h	/^	~CountryInfo(){}$/;"	f	class:CountryInfo
~CountryInfo	SessionServer/CountryInfo.h	/^	~CountryInfo(){}$/;"	f	class:CountryInfo
~CountrysVarAction	ScenesServer/QuestAction.h	/^  virtual ~CountrysVarAction()$/;"	f	class:CountrysVarAction
~CountrysVarCondition	ScenesServer/QuestCondition.h	/^  virtual ~CountrysVarCondition()$/;"	f	class:CountrysVarCondition
~DBField	base/zMetaData.h	/^	~DBField(){}$/;"	f	class:DBField
~DBRecord	base/zMetaData.h	/^	virtual ~DBRecord()$/;"	f	class:DBRecord
~Embranchment	ScenesServer/QuestEvent.cpp	/^Event::Embranchment::~Embranchment()$/;"	f	class:Event::Embranchment
~EquipPack	ScenesServer/zObject.cpp	/^EquipPack::~EquipPack()$/;"	f	class:EquipPack
~EquipSlot	ScenesServer/zCard.cpp	/^EquipSlot::~EquipSlot()$/;"	f	class:EquipSlot
~Event	ScenesServer/QuestEvent.cpp	/^Event::~Event()$/;"	f	class:Event
~EventManager	ScenesServer/QuestEvent.h	/^  ~EventManager()$/;"	f	class:EventManager
~EventTable	ScenesServer/QuestTable.cpp	/^EventTable::~EventTable()$/;"	f	class:EventTable
~FLClient	SuperServer/FLClient.cpp	/^FLClient::~FLClient()$/;"	f	class:FLClient
~FLClientManager	SuperServer/FLClientManager.cpp	/^FLClientManager::~FLClientManager()$/;"	f	class:FLClientManager
~FLService	FLServer/FLServer.cpp	/^FLService::~FLService()$/;"	f	class:FLService
~FLTimeTick	FLServer/TimeTick.h	/^	~FLTimeTick() {};$/;"	f	class:FLTimeTick
~GYListManager	FLServer/GYListManager.h	/^	~GYListManager()$/;"	f	class:GYListManager
~GameCardM	ScenesServer/CardManager.cpp	/^GameCardM::~GameCardM()$/;"	f	class:GameCardM
~GangScene	ScenesServer/Scene.cpp	/^GangScene::~GangScene()$/;"	f	class:GangScene
~GateUser	GatewayServer/GateUser.cpp	/^GateUser::~GateUser()$/;"	f	class:GateUser
~GateUserAccountID	GatewayServer/GateUserManager.h	/^	virtual ~GateUserAccountID() {}$/;"	f	class:GateUserAccountID
~GateUserManager	GatewayServer/GateUserManager.cpp	/^GateUserManager::~GateUserManager()$/;"	f	class:GateUserManager
~GatewayService	GatewayServer/GatewayServer.h	/^	~GatewayService()$/;"	f	class:GatewayService
~GatewayTask	GatewayServer/GatewayTask.cpp	/^GatewayTask::~GatewayTask()$/;"	f	class:GatewayTask
~GatewayTaskManager	GatewayServer/GatewayTaskManager.cpp	/^GatewayTaskManager::~GatewayTaskManager()$/;"	f	class:GatewayTaskManager
~GatewayTimeTick	GatewayServer/TimeTick.h	/^	~GatewayTimeTick() {};$/;"	f	class:GatewayTimeTick
~GiftBagManager	ScenesServer/GiftBagManager.cpp	/^GiftBagManager::~GiftBagManager()$/;"	f	class:GiftBagManager
~GlobalAction	ScenesServer/QuestAction.h	/^  virtual ~GlobalAction()$/;"	f	class:GlobalAction
~GlobalCardIndex	ScenesServer/CardManager.cpp	/^GlobalCardIndex::~GlobalCardIndex()$/;"	f	class:GlobalCardIndex
~GlobalCondition	ScenesServer/QuestCondition.h	/^  virtual ~GlobalCondition()$/;"	f	class:GlobalCondition
~GlobalObjectIndex	ScenesServer/ObjectManager.cpp	/^GlobalObjectIndex::~GlobalObjectIndex()$/;"	f	class:GlobalObjectIndex
~GlobalTempArchiveIndex	SessionServer/TempArchive.cpp	/^GlobalTempArchiveIndex::~GlobalTempArchiveIndex()$/;"	f	class:GlobalTempArchiveIndex
~GlobalVarImpl	ScenesServer/Quest.h	/^  ~GlobalVarImpl()$/;"	f	class:GlobalVarImpl
~GroupCardManager	ScenesServer/GroupCardManager.cpp	/^GroupCardManager::~GroupCardManager()$/;"	f	class:GroupCardManager
~HandSlot	ScenesServer/zCard.cpp	/^HandSlot::~HandSlot()$/;"	f	class:HandSlot
~HeroCardManager	SessionServer/HeroCardManager.cpp	/^HeroCardManager::~HeroCardManager()$/;"	f	class:HeroCardManager
~HeroInfoManager	ScenesServer/HeroInfoManager.cpp	/^HeroInfoManager::~HeroInfoManager()$/;"	f	class:HeroInfoManager
~HeroLevelCondition	ScenesServer/QuestCondition.h	/^  virtual ~HeroLevelCondition()$/;"	f	class:HeroLevelCondition
~HeroSlot	ScenesServer/zCard.cpp	/^HeroSlot::~HeroSlot()$/;"	f	class:HeroSlot
~ICmdChecker	GatewayServer/CmdChecker.h	/^	virtual ~ICmdChecker() { }$/;"	f	class:ICmdChecker
~InfoClient	SuperServer/InfoClient.cpp	/^InfoClient::~InfoClient()$/;"	f	class:InfoClient
~InfoClientManager	SuperServer/InfoClientManager.cpp	/^InfoClientManager::~InfoClientManager()$/;"	f	class:InfoClientManager
~ItemCondition	ScenesServer/QuestCondition.h	/^  virtual ~ItemCondition()$/;"	f	class:ItemCondition
~LevelCondition	ScenesServer/QuestCondition.h	/^  virtual ~LevelCondition()$/;"	f	class:LevelCondition
~LimitHash	base/zEntryManager.h	/^	~LimitHash()$/;"	f	class:LimitHash
~LogAction	ScenesServer/QuestAction.h	/^  virtual ~LogAction() { }  $/;"	f	class:LogAction
~LoginManager	FLServer/LoginManager.h	/^	~LoginManager() {};$/;"	f	class:LoginManager
~LoginSessionManager	GatewayServer/LoginSessionManager.h	/^	~LoginSessionManager() {};$/;"	f	class:LoginSessionManager
~LoginTask	FLServer/LoginTask.h	/^	~LoginTask() {$/;"	f	class:LoginTask
~LuaScript	ScenesServer/script.cpp	/^LuaScript::~LuaScript()$/;"	f	class:LuaScript
~LuaVM	ScenesServer/script.cpp	/^LuaVM::~LuaVM()$/;"	f	class:LuaVM
~MainMenuAction	ScenesServer/QuestAction.h	/^  virtual ~MainMenuAction() { }  $/;"	f	class:MainMenuAction
~MainPack	ScenesServer/zObject.cpp	/^MainPack::~MainPack()$/;"	f	class:MainPack
~Maker	ScenesServer/QuestMaker.h	/^    virtual ~Maker() { }$/;"	f	class:MakeFunction::Maker
~MarketSystemManager	ScenesServer/MarketSystemManager.cpp	/^MarketSystemManager::~MarketSystemManager()$/;"	f	class:MarketSystemManager
~MenuAction	ScenesServer/QuestAction.h	/^  virtual ~MenuAction() { }  $/;"	f	class:MenuAction
~MessageQueue	base/MessageQueue.h	/^	virtual ~MessageQueue(){};$/;"	f	class:MessageQueue
~MsgQueue	base/zMisc.h	/^	~MsgQueue()$/;"	f	class:MsgQueue
~MultiHash	base/zEntryManager.h	/^	~MultiHash()$/;"	f	class:MultiHash
~NewbieLimit	SessionServer/NewbieLimit.cpp	/^NewbieLimit::~NewbieLimit(void)$/;"	f	class:NewbieLimit
~Notify1Action	ScenesServer/QuestAction.h	/^  virtual ~Notify1Action() { }  $/;"	f	class:Notify1Action
~NotifyAction	ScenesServer/QuestAction.h	/^  virtual ~NotifyAction() { }  $/;"	f	class:NotifyAction
~NpcTrade	ScenesServer/NpcTrade.h	/^    ~NpcTrade()$/;"	f	class:NpcTrade
~ObjectPack	ScenesServer/zObject.cpp	/^ObjectPack::~ObjectPack()$/;"	f	class:ObjectPack
~Package	ScenesServer/zObject.cpp	/^Package::~Package()$/;"	f	class:Package
~PackageCallback	ScenesServer/zObject.h	/^  virtual ~PackageCallback(){};$/;"	f	struct:PackageCallback
~Packages	ScenesServer/zObject.cpp	/^Packages::~Packages()$/;"	f	class:Packages
~PetPack	ScenesServer/zObject.cpp	/^PetPack::~PetPack() {}$/;"	f	class:PetPack
~ProductFactory	ScenesServer/QuestMaker.h	/^  ~ProductFactory()$/;"	f	class:ProductFactory
~Prop	ScenesServer/QuestMaker.h	/^    virtual ~Prop() { }$/;"	f	class:MakeFunction::Prop
~QuestList	ScenesServer/Quest.h	/^  ~QuestList()$/;"	f	class:QuestList
~QuestTable	ScenesServer/QuestTable.cpp	/^QuestTable::~QuestTable()$/;"	f	class:QuestTable
~RecordService	RecordServer/RecordServer.h	/^    ~RecordService()$/;"	f	class:RecordService
~RecordSessionManager	RecordServer/RecordSessionManager.h	/^    ~RecordSessionManager()$/;"	f	class:RecordSessionManager
~RecordTask	RecordServer/RecordTask.h	/^    virtual ~RecordTask() {};$/;"	f	class:RecordTask
~RemoveItemAction	ScenesServer/QuestAction.h	/^  virtual ~RemoveItemAction() { }$/;"	f	class:RemoveItemAction
~RoleContainer	roleChangeServer/ChangeTask.h	/^	~RoleContainer()$/;"	f	class:RoleContainer
~RoleDataContainer	SuperServer/RoleregCache.cpp	/^	~RoleDataContainer()$/;"	f	class:RoleDataContainer
~RoleTask	roleRegServer/RoleTask.h	/^	~RoleTask() {$/;"	f	class:RoleTask
~RolechangeClient	SuperServer/RolechangeClient.cpp	/^RolechangeClient::~RolechangeClient()$/;"	f	class:RolechangeClient
~RolechangeClientManager	SuperServer/RolechangeClientManager.cpp	/^RolechangeClientManager::~RolechangeClientManager()$/;"	f	class:RolechangeClientManager
~RoleregCache	SuperServer/RoleregCache.h	/^    ~RoleregCache() {};$/;"	f	class:RoleregCache
~RoleregClient	SuperServer/RoleregClient.cpp	/^RoleregClient::~RoleregClient()$/;"	f	class:RoleregClient
~RoleregClientManager	SuperServer/RoleregClientManager.cpp	/^RoleregClientManager::~RoleregClientManager()$/;"	f	class:RoleregClientManager
~Scene	ScenesServer/Scene.cpp	/^Scene::~Scene()$/;"	f	class:Scene
~SceneCallBack	ScenesServer/SceneManager.h	/^  virtual ~SceneCallBack(){};$/;"	f	struct:SceneCallBack
~SceneClient	GatewayServer/SceneClient.h	/^	~SceneClient()$/;"	f	class:SceneClient
~SceneClientManager	GatewayServer/SceneClientManager.cpp	/^SceneClientManager::~SceneClientManager()$/;"	f	class:SceneClientManager
~SceneEntryPk	ScenesServer/SceneEntryPk.h	/^    virtual ~SceneEntryPk(){};$/;"	f	struct:SceneEntryPk
~SceneManager	ScenesServer/SceneManager.cpp	/^SceneManager::~SceneManager()$/;"	f	class:SceneManager
~SceneMsgCmdHandle	ScenesServer/SceneMsgCmdHandle.cpp	/^SceneMsgCmdHandle::~SceneMsgCmdHandle()$/;"	f	class:SceneMsgCmdHandle
~SceneNpc	ScenesServer/SceneNpc.cpp	/^SceneNpc::~SceneNpc()$/;"	f	class:SceneNpc
~SceneNpcManager	ScenesServer/SceneNpcManager.cpp	/^SceneNpcManager::~SceneNpcManager()$/;"	f	class:SceneNpcManager
~SceneRecycle	ScenesServer/Recycle.h	/^	~SceneRecycle() {}$/;"	f	class:SceneRecycle
~SceneRecycleUserManager	ScenesServer/SceneUserManager.h	/^    ~SceneRecycleUserManager(){}$/;"	f	class:SceneRecycleUserManager
~SceneSessionManager	SessionServer/SessionManager.cpp	/^SceneSessionManager::~SceneSessionManager()$/;"	f	class:SceneSessionManager
~SceneTask	ScenesServer/SceneTask.cpp	/^SceneTask::~SceneTask()$/;"	f	class:SceneTask
~SceneTaskManager	ScenesServer/SceneTaskManager.h	/^    ~SceneTaskManager() {};$/;"	f	class:SceneTaskManager
~SceneTimeTick	ScenesServer/TimeTick.h	/^    ~SceneTimeTick() {};$/;"	f	class:SceneTimeTick
~SceneUser	ScenesServer/SceneUser.cpp	/^SceneUser::~SceneUser()$/;"	f	class:SceneUser
~SceneUserManager	ScenesServer/SceneUserManager.cpp	/^SceneUserManager::~SceneUserManager()$/;"	f	class:SceneUserManager
~ScenesService	ScenesServer/ScenesServer.h	/^    virtual ~ScenesService()$/;"	f	class:ScenesService
~ScriptQuest	ScenesServer/script.h	/^  ~ScriptQuest() { }$/;"	f	class:ScriptQuest
~ScriptingSystemLua	ScenesServer/script.cpp	/^ScriptingSystemLua::~ScriptingSystemLua()$/;"	f	class:ScriptingSystemLua
~ServerACL	base/ServerACL.h	/^	~ServerACL() {};$/;"	f	class:ServerACL
~ServerManager	FLServer/ServerManager.h	/^	~ServerManager() {};$/;"	f	class:ServerManager
~ServerManager	SuperServer/ServerManager.h	/^    ~ServerManager() {};$/;"	f	class:ServerManager
~ServerTask	FLServer/ServerTask.h	/^	~ServerTask() {$/;"	f	class:ServerTask
~ServerTask	SuperServer/ServerTask.h	/^    virtual ~ServerTask() {};$/;"	f	class:ServerTask
~SessionChannelManager	SessionServer/SessionChat.cpp	/^SessionChannelManager::~SessionChannelManager()$/;"	f	class:SessionChannelManager
~SessionService	SessionServer/SessionServer.h	/^    ~SessionService()$/;"	f	class:SessionService
~SessionTask	SessionServer/SessionTask.cpp	/^SessionTask::~SessionTask()$/;"	f	class:SessionTask
~SessionTaskManager	SessionServer/SessionTaskManager.h	/^    ~SessionTaskManager() {};$/;"	f	class:SessionTaskManager
~SessionTimeTick	SessionServer/TimeTick.h	/^    ~SessionTimeTick() {};$/;"	f	class:SessionTimeTick
~Singleton	base/zSingleton.h	/^		~Singleton(void)$/;"	f	class:Singleton
~SingletonBase	BillServer/BillCallback.h	/^    virtual ~SingletonBase() {}$/;"	f	class:SingletonBase
~SkillSlot	ScenesServer/zCard.cpp	/^SkillSlot::~SkillSlot()$/;"	f	class:SkillSlot
~SkillStatusManager	ScenesServer/SkillStatusManager.cpp	/^SkillStatusManager::~SkillStatusManager()$/;"	f	class:SkillStatusManager
~StaticScene	ScenesServer/Scene.cpp	/^StaticScene::~StaticScene()$/;"	f	class:StaticScene
~StorePack	ScenesServer/zObject.cpp	/^StorePack::~StorePack()$/;"	f	class:StorePack
~SubMenuAction	ScenesServer/QuestAction.h	/^  virtual ~SubMenuAction() { }  $/;"	f	class:SubMenuAction
~SuperService	SuperServer/SuperServer.h	/^    ~SuperService()$/;"	f	class:SuperService
~SuperTimeTick	SuperServer/TimeTick.h	/^    ~SuperTimeTick() {};$/;"	f	class:SuperTimeTick
~TeamCondition	ScenesServer/QuestCondition.h	/^  virtual ~TeamCondition() { }$/;"	f	class:TeamCondition
~TombSlot	ScenesServer/zCard.cpp	/^TombSlot::~TombSlot()$/;"	f	class:TombSlot
~TraceLogAction	ScenesServer/QuestAction.h	/^	~TraceLogAction()$/;"	f	class:TraceLogAction
~Update	ScenesServer/QuestMaker.h	/^    virtual ~Update() { }$/;"	f	class:MakeFunction::Update
~UserCardCompare	ScenesServer/CardManager.h	/^    virtual ~UserCardCompare() {}$/;"	f	class:UserCardCompare
~UserCardExec	ScenesServer/CardManager.h	/^    virtual ~UserCardExec() {}$/;"	f	class:UserCardExec
~UserConfigM	FLServer/UserHttpPub.cpp	/^UserConfigM::~UserConfigM()$/;"	f	class:UserConfigM
~UserContainer	FLServer/UserTask.h	/^	~UserContainer()$/;"	f	class:UserContainer
~UserObjectCompare	ScenesServer/ObjectManager.h	/^    virtual ~UserObjectCompare() {}$/;"	f	class:UserObjectCompare
~UserObjectExec	ScenesServer/ObjectManager.h	/^    virtual ~UserObjectExec() {}$/;"	f	class:UserObjectExec
~UserObjectM	ScenesServer/ObjectManager.cpp	/^UserObjectM::~UserObjectM()$/;"	f	class:UserObjectM
~UserSession	SessionServer/Session.cpp	/^UserSession::~UserSession()$/;"	f	class:UserSession
~UserSessionManager	SessionServer/SessionManager.cpp	/^UserSessionManager::~UserSessionManager()$/;"	f	class:UserSessionManager
~UserSkillM	ScenesServer/SkillManager.cpp	/^UserSkillM::~UserSkillM()$/;"	f	class:UserSkillM
~UserTask	FLServer/UserTask.h	/^	~UserTask() {$/;"	f	class:UserTask
~UserVar	ScenesServer/Quest.h	/^  ~UserVar()$/;"	f	class:UserVar
~VAR	ScenesServer/Quest.h	/^    ~VAR()$/;"	f	class:Vars::VAR
~VarAction	ScenesServer/QuestAction.h	/^  virtual ~VarAction()$/;"	f	class:VarAction
~VarCondition	ScenesServer/QuestCondition.h	/^  virtual ~VarCondition()$/;"	f	class:VarCondition
~Vars	ScenesServer/Quest.h	/^  ~Vars()$/;"	f	class:Vars
~VarsCallback	ScenesServer/Quest.h	/^      virtual ~VarsCallback() {}$/;"	f	struct:Vars::VarsCallback
~Void	ScenesServer/QuestMaker.h	/^    virtual ~Void() { }$/;"	f	class:MakeFunction::Void
~execEntry	base/zEntryManager.h	/^	virtual ~execEntry(){}$/;"	f	struct:execEntry
~removeEntry_Pred	base/zEntryManager.h	/^	virtual ~removeEntry_Pred(){}$/;"	f	struct:removeEntry_Pred
~roleChangeService	roleChangeServer/roleChangeServer.cpp	/^roleChangeService::~roleChangeService()$/;"	f	class:roleChangeService
~roleRegService	roleRegServer/roleRegServer.cpp	/^roleRegService::~roleRegService()$/;"	f	class:roleRegService
~scriptTaskManagement	ScenesServer/scriptTickTask.h	/^	~scriptTaskManagement(){}$/;"	f	class:scriptTaskManagement
~specialNpcCallBack	ScenesServer/SceneNpcManager.h	/^    virtual ~specialNpcCallBack(){};$/;"	f	struct:specialNpcCallBack
~userScriptTaskContainer	ScenesServer/scriptTickTask.h	/^	~userScriptTaskContainer()$/;"	f	class:userScriptTaskContainer
~xml_config_base	base/xml/xml_config.h	/^	virtual ~xml_config_base() {}$/;"	f	struct:xml_config_base
~xml_node_base	base/xml/xml_node.h	/^		virtual ~xml_node_base() {}$/;"	f	class:xml_node_base
~xml_node_map_parser_generator	base/xml/xml_parser_generator.h	/^	virtual ~xml_node_map_parser_generator()$/;"	f	class:xml_node_map_parser_generator
~xml_node_parser_generator	base/xml/xml_parser_generator.h	/^	virtual ~xml_node_parser_generator() $/;"	f	class:xml_node_parser_generator
~xml_node_set_parser_generator	base/xml/xml_parser_generator.h	/^	~xml_node_set_parser_generator()$/;"	f	class:xml_node_set_parser_generator
~xml_parser_generator_base	base/xml/xml_parser_generator.h	/^	virtual ~xml_parser_generator_base() { }$/;"	f	class:xml_parser_generator_base
~xml_prop_parser_generator	base/xml/xml_parser_generator.h	/^	virtual ~xml_prop_parser_generator()$/;"	f	class:xml_prop_parser_generator
~zCard	ScenesServer/zCard.cpp	/^zCard::~zCard()$/;"	f	class:zCard
~zCmdCheck	base/zMisc.h	/^	virtual ~zCmdCheck()$/;"	f	class:zCmdCheck
~zCond	base/zCond.h	/^	~zCond()$/;"	f	class:zCond
~zDBConnPool	base/zDBConnPool.h	/^	virtual ~zDBConnPool()$/;"	f	class:zDBConnPool
~zDataBM	base/zDatabaseManager.h	/^	~zDataBM()$/;"	f	class:zDataBM
~zDatabaseCallBack	base/zDatabaseManager.h	/^	virtual ~zDatabaseCallBack(){};$/;"	f	class:zDatabaseCallBack
~zEntry	base/zEntry.h	/^	virtual ~zEntry(){};$/;"	f	struct:zEntry
~zEntryCallback	base/zEntry.h	/^	virtual ~zEntryCallback(){};$/;"	f	struct:zEntryCallback
~zEntryManager	base/zEntryManager.h	/^	~zEntryManager() { };$/;"	f	class:zEntryManager
~zEntryTempID	base/zEntryManager.h	/^	virtual ~zEntryTempID() {}$/;"	f	class:zEntryTempID
~zMNetService	base/zMNetService.h	/^	virtual ~zMNetService() { instance = NULL; };$/;"	f	class:zMNetService
~zMutex	base/zMutex.h	/^	~zMutex()$/;"	f	class:zMutex
~zMutex_scope_lock	base/zMutex.h	/^	~zMutex_scope_lock()$/;"	f	class:zMutex_scope_lock
~zNetService	base/zNetService.h	/^	virtual ~zNetService() { instance = NULL; };$/;"	f	class:zNetService
~zNoncopyable	base/zNoncopyable.h	/^    ~zNoncopyable() {};$/;"	f	class:zNoncopyable
~zObject	ScenesServer/zObject.cpp	/^zObject::~zObject()$/;"	f	class:zObject
~zProcessor	base/zSocket.h	/^		virtual ~zProcessor()  {};$/;"	f	class:zProcessor
~zRWLock	base/zRWLock.h	/^	~zRWLock()$/;"	f	class:zRWLock
~zRWLock_scope_rdlock	base/zRWLock.h	/^	~zRWLock_scope_rdlock()$/;"	f	class:zRWLock_scope_rdlock
~zRWLock_scope_wrlock	base/zRWLock.h	/^	~zRWLock_scope_wrlock()$/;"	f	class:zRWLock_scope_wrlock
~zSceneEntryCallBack	ScenesServer/zSceneEntryIndex.h	/^  virtual ~zSceneEntryCallBack(){};$/;"	f	struct:zSceneEntryCallBack
~zSceneEntryIndex	ScenesServer/zSceneEntryIndex.h	/^    virtual ~zSceneEntryIndex() {}$/;"	f	class:zSceneEntryIndex
~zSceneManager	base/zSceneManager.h	/^	virtual ~zSceneManager()$/;"	f	class:zSceneManager
~zSceneObject	ScenesServer/zObject.h	/^  ~zSceneObject()$/;"	f	struct:zSceneObject
~zService	base/zService.h	/^	virtual ~zService() { serviceInst = NULL; };$/;"	f	class:zService
~zSkill	ScenesServer/Skill.cpp	/^zSkill::~zSkill()$/;"	f	class:zSkill
~zSyncEvent	base/zSyncEvent.h	/^	~zSyncEvent() {};$/;"	f	class:zSyncEvent
~zTCPClient	base/zTCPClient.h	/^	~zTCPClient() $/;"	f	class:zTCPClient
~zTCPClientTask	base/zTCPClientTask.h	/^	virtual ~zTCPClientTask() $/;"	f	class:zTCPClientTask
~zTCPTask	base/zTCPTask.h	/^	virtual ~zTCPTask() $/;"	f	class:zTCPTask
~zTCPTaskPool	base/zTCPTaskPool.h	/^	~zTCPTaskPool()$/;"	f	class:zTCPTaskPool
~zThread	base/zThread.h	/^	virtual ~zThread()$/;"	f	class:zThread
~zUniqueID	base/zUniqueID.h	/^	~zUniqueID()$/;"	f	class:zUniqueID
~zUserManager	base/zUserManager.h	/^	virtual ~zUserManager()$/;"	f	class:zUserManager
