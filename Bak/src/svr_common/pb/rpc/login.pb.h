// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: login.proto

#ifndef PROTOBUF_login_2eproto__INCLUDED
#define PROTOBUF_login_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace rpc {
class HeartBeatMsg;
class HeartBeatMsgDefaultTypeInternal;
extern HeartBeatMsgDefaultTypeInternal _HeartBeatMsg_default_instance_;
class LoginRequest;
class LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class LoginRequest_Giant;
class LoginRequest_GiantDefaultTypeInternal;
extern LoginRequest_GiantDefaultTypeInternal _LoginRequest_Giant_default_instance_;
class LoginResponse;
class LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
class SwitchAccMsg;
class SwitchAccMsgDefaultTypeInternal;
extern SwitchAccMsgDefaultTypeInternal _SwitchAccMsg_default_instance_;
class SwitchAccResponse;
class SwitchAccResponseDefaultTypeInternal;
extern SwitchAccResponseDefaultTypeInternal _SwitchAccResponse_default_instance_;
}  // namespace rpc

namespace rpc {

namespace protobuf_login_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_login_2eproto

enum LoginResponse_LoginResult {
  LoginResponse_LoginResult_OK = 0,
  LoginResponse_LoginResult_ERR_SERVER_FULL = 1,
  LoginResponse_LoginResult_ERR_VERIFY_FAIL = 2,
  LoginResponse_LoginResult_ERR_MULTI_LOGIN = 3
};
bool LoginResponse_LoginResult_IsValid(int value);
const LoginResponse_LoginResult LoginResponse_LoginResult_LoginResult_MIN = LoginResponse_LoginResult_OK;
const LoginResponse_LoginResult LoginResponse_LoginResult_LoginResult_MAX = LoginResponse_LoginResult_ERR_MULTI_LOGIN;
const int LoginResponse_LoginResult_LoginResult_ARRAYSIZE = LoginResponse_LoginResult_LoginResult_MAX + 1;

const ::google::protobuf::EnumDescriptor* LoginResponse_LoginResult_descriptor();
inline const ::std::string& LoginResponse_LoginResult_Name(LoginResponse_LoginResult value) {
  return ::google::protobuf::internal::NameOfEnum(
    LoginResponse_LoginResult_descriptor(), value);
}
inline bool LoginResponse_LoginResult_Parse(
    const ::std::string& name, LoginResponse_LoginResult* value) {
  return ::google::protobuf::internal::ParseNamedEnum<LoginResponse_LoginResult>(
    LoginResponse_LoginResult_descriptor(), name, value);
}
// ===================================================================

class LoginRequest_Giant : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.LoginRequest_Giant) */ {
 public:
  LoginRequest_Giant();
  virtual ~LoginRequest_Giant();

  LoginRequest_Giant(const LoginRequest_Giant& from);

  inline LoginRequest_Giant& operator=(const LoginRequest_Giant& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest_Giant& default_instance();

  static inline const LoginRequest_Giant* internal_default_instance() {
    return reinterpret_cast<const LoginRequest_Giant*>(
               &_LoginRequest_Giant_default_instance_);
  }

  void Swap(LoginRequest_Giant* other);

  // implements Message ----------------------------------------------

  inline LoginRequest_Giant* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginRequest_Giant* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRequest_Giant& from);
  void MergeFrom(const LoginRequest_Giant& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRequest_Giant* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string entities_str = 1;
  bool has_entities_str() const;
  void clear_entities_str();
  static const int kEntitiesStrFieldNumber = 1;
  const ::std::string& entities_str() const;
  void set_entities_str(const ::std::string& value);
  #if LANG_CXX11
  void set_entities_str(::std::string&& value);
  #endif
  void set_entities_str(const char* value);
  void set_entities_str(const char* value, size_t size);
  ::std::string* mutable_entities_str();
  ::std::string* release_entities_str();
  void set_allocated_entities_str(::std::string* entities_str);

  // optional string sign = 2;
  bool has_sign() const;
  void clear_sign();
  static const int kSignFieldNumber = 2;
  const ::std::string& sign() const;
  void set_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_sign(::std::string&& value);
  #endif
  void set_sign(const char* value);
  void set_sign(const char* value, size_t size);
  ::std::string* mutable_sign();
  ::std::string* release_sign();
  void set_allocated_sign(::std::string* sign);

  // optional uint32 majorv = 3;
  bool has_majorv() const;
  void clear_majorv();
  static const int kMajorvFieldNumber = 3;
  ::google::protobuf::uint32 majorv() const;
  void set_majorv(::google::protobuf::uint32 value);

  // optional uint32 secondv = 4;
  bool has_secondv() const;
  void clear_secondv();
  static const int kSecondvFieldNumber = 4;
  ::google::protobuf::uint32 secondv() const;
  void set_secondv(::google::protobuf::uint32 value);

  // optional uint32 patchv = 5;
  bool has_patchv() const;
  void clear_patchv();
  static const int kPatchvFieldNumber = 5;
  ::google::protobuf::uint32 patchv() const;
  void set_patchv(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:rpc.LoginRequest_Giant)
 private:
  void set_has_entities_str();
  void clear_has_entities_str();
  void set_has_sign();
  void clear_has_sign();
  void set_has_majorv();
  void clear_has_majorv();
  void set_has_secondv();
  void clear_has_secondv();
  void set_has_patchv();
  void clear_has_patchv();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entities_str_;
  ::google::protobuf::internal::ArenaStringPtr sign_;
  ::google::protobuf::uint32 majorv_;
  ::google::protobuf::uint32 secondv_;
  ::google::protobuf::uint32 patchv_;
  friend struct  protobuf_login_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
               &_LoginRequest_default_instance_);
  }

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string password = 2;
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 2;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const char* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // @@protoc_insertion_point(class_scope:rpc.LoginRequest)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_password();
  void clear_has_password();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  friend struct  protobuf_login_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.LoginResponse) */ {
 public:
  LoginResponse();
  virtual ~LoginResponse();

  LoginResponse(const LoginResponse& from);

  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginResponse& default_instance();

  static inline const LoginResponse* internal_default_instance() {
    return reinterpret_cast<const LoginResponse*>(
               &_LoginResponse_default_instance_);
  }

  void Swap(LoginResponse* other);

  // implements Message ----------------------------------------------

  inline LoginResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginResponse& from);
  void MergeFrom(const LoginResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef LoginResponse_LoginResult LoginResult;
  static const LoginResult OK =
    LoginResponse_LoginResult_OK;
  static const LoginResult ERR_SERVER_FULL =
    LoginResponse_LoginResult_ERR_SERVER_FULL;
  static const LoginResult ERR_VERIFY_FAIL =
    LoginResponse_LoginResult_ERR_VERIFY_FAIL;
  static const LoginResult ERR_MULTI_LOGIN =
    LoginResponse_LoginResult_ERR_MULTI_LOGIN;
  static inline bool LoginResult_IsValid(int value) {
    return LoginResponse_LoginResult_IsValid(value);
  }
  static const LoginResult LoginResult_MIN =
    LoginResponse_LoginResult_LoginResult_MIN;
  static const LoginResult LoginResult_MAX =
    LoginResponse_LoginResult_LoginResult_MAX;
  static const int LoginResult_ARRAYSIZE =
    LoginResponse_LoginResult_LoginResult_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  LoginResult_descriptor() {
    return LoginResponse_LoginResult_descriptor();
  }
  static inline const ::std::string& LoginResult_Name(LoginResult value) {
    return LoginResponse_LoginResult_Name(value);
  }
  static inline bool LoginResult_Parse(const ::std::string& name,
      LoginResult* value) {
    return LoginResponse_LoginResult_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional string error_str = 2;
  bool has_error_str() const;
  void clear_error_str();
  static const int kErrorStrFieldNumber = 2;
  const ::std::string& error_str() const;
  void set_error_str(const ::std::string& value);
  #if LANG_CXX11
  void set_error_str(::std::string&& value);
  #endif
  void set_error_str(const char* value);
  void set_error_str(const char* value, size_t size);
  ::std::string* mutable_error_str();
  ::std::string* release_error_str();
  void set_allocated_error_str(::std::string* error_str);

  // optional string account = 3;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 3;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string header_imgurl = 5;
  bool has_header_imgurl() const;
  void clear_header_imgurl();
  static const int kHeaderImgurlFieldNumber = 5;
  const ::std::string& header_imgurl() const;
  void set_header_imgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_header_imgurl(::std::string&& value);
  #endif
  void set_header_imgurl(const char* value);
  void set_header_imgurl(const char* value, size_t size);
  ::std::string* mutable_header_imgurl();
  ::std::string* release_header_imgurl();
  void set_allocated_header_imgurl(::std::string* header_imgurl);

  // optional string short_url = 7;
  bool has_short_url() const;
  void clear_short_url();
  static const int kShortUrlFieldNumber = 7;
  const ::std::string& short_url() const;
  void set_short_url(const ::std::string& value);
  #if LANG_CXX11
  void set_short_url(::std::string&& value);
  #endif
  void set_short_url(const char* value);
  void set_short_url(const char* value, size_t size);
  ::std::string* mutable_short_url();
  ::std::string* release_short_url();
  void set_allocated_short_url(::std::string* short_url);

  // optional .rpc.LoginResponse.LoginResult result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::rpc::LoginResponse_LoginResult result() const;
  void set_result(::rpc::LoginResponse_LoginResult value);

  // optional uint32 header_imgid = 4;
  bool has_header_imgid() const;
  void clear_header_imgid();
  static const int kHeaderImgidFieldNumber = 4;
  ::google::protobuf::uint32 header_imgid() const;
  void set_header_imgid(::google::protobuf::uint32 value);

  // optional uint32 level = 6;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 6;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 is_purgatory_unlock = 8;
  bool has_is_purgatory_unlock() const;
  void clear_is_purgatory_unlock();
  static const int kIsPurgatoryUnlockFieldNumber = 8;
  ::google::protobuf::uint32 is_purgatory_unlock() const;
  void set_is_purgatory_unlock(::google::protobuf::uint32 value);

  // optional uint32 uid = 9;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 9;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional uint32 is_team_unlock = 10;
  bool has_is_team_unlock() const;
  void clear_is_team_unlock();
  static const int kIsTeamUnlockFieldNumber = 10;
  ::google::protobuf::uint32 is_team_unlock() const;
  void set_is_team_unlock(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:rpc.LoginResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_error_str();
  void clear_has_error_str();
  void set_has_account();
  void clear_has_account();
  void set_has_header_imgid();
  void clear_has_header_imgid();
  void set_has_header_imgurl();
  void clear_has_header_imgurl();
  void set_has_level();
  void clear_has_level();
  void set_has_short_url();
  void clear_has_short_url();
  void set_has_is_purgatory_unlock();
  void clear_has_is_purgatory_unlock();
  void set_has_uid();
  void clear_has_uid();
  void set_has_is_team_unlock();
  void clear_has_is_team_unlock();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr error_str_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr header_imgurl_;
  ::google::protobuf::internal::ArenaStringPtr short_url_;
  int result_;
  ::google::protobuf::uint32 header_imgid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 is_purgatory_unlock_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 is_team_unlock_;
  friend struct  protobuf_login_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SwitchAccMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.SwitchAccMsg) */ {
 public:
  SwitchAccMsg();
  virtual ~SwitchAccMsg();

  SwitchAccMsg(const SwitchAccMsg& from);

  inline SwitchAccMsg& operator=(const SwitchAccMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchAccMsg& default_instance();

  static inline const SwitchAccMsg* internal_default_instance() {
    return reinterpret_cast<const SwitchAccMsg*>(
               &_SwitchAccMsg_default_instance_);
  }

  void Swap(SwitchAccMsg* other);

  // implements Message ----------------------------------------------

  inline SwitchAccMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  SwitchAccMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SwitchAccMsg& from);
  void MergeFrom(const SwitchAccMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SwitchAccMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string entities_str = 1;
  bool has_entities_str() const;
  void clear_entities_str();
  static const int kEntitiesStrFieldNumber = 1;
  const ::std::string& entities_str() const;
  void set_entities_str(const ::std::string& value);
  #if LANG_CXX11
  void set_entities_str(::std::string&& value);
  #endif
  void set_entities_str(const char* value);
  void set_entities_str(const char* value, size_t size);
  ::std::string* mutable_entities_str();
  ::std::string* release_entities_str();
  void set_allocated_entities_str(::std::string* entities_str);

  // optional string sign = 2;
  bool has_sign() const;
  void clear_sign();
  static const int kSignFieldNumber = 2;
  const ::std::string& sign() const;
  void set_sign(const ::std::string& value);
  #if LANG_CXX11
  void set_sign(::std::string&& value);
  #endif
  void set_sign(const char* value);
  void set_sign(const char* value, size_t size);
  ::std::string* mutable_sign();
  ::std::string* release_sign();
  void set_allocated_sign(::std::string* sign);

  // @@protoc_insertion_point(class_scope:rpc.SwitchAccMsg)
 private:
  void set_has_entities_str();
  void clear_has_entities_str();
  void set_has_sign();
  void clear_has_sign();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr entities_str_;
  ::google::protobuf::internal::ArenaStringPtr sign_;
  friend struct  protobuf_login_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class SwitchAccResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.SwitchAccResponse) */ {
 public:
  SwitchAccResponse();
  virtual ~SwitchAccResponse();

  SwitchAccResponse(const SwitchAccResponse& from);

  inline SwitchAccResponse& operator=(const SwitchAccResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SwitchAccResponse& default_instance();

  static inline const SwitchAccResponse* internal_default_instance() {
    return reinterpret_cast<const SwitchAccResponse*>(
               &_SwitchAccResponse_default_instance_);
  }

  void Swap(SwitchAccResponse* other);

  // implements Message ----------------------------------------------

  inline SwitchAccResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  SwitchAccResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const SwitchAccResponse& from);
  void MergeFrom(const SwitchAccResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(SwitchAccResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 2;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string header_imgurl = 4;
  bool has_header_imgurl() const;
  void clear_header_imgurl();
  static const int kHeaderImgurlFieldNumber = 4;
  const ::std::string& header_imgurl() const;
  void set_header_imgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_header_imgurl(::std::string&& value);
  #endif
  void set_header_imgurl(const char* value);
  void set_header_imgurl(const char* value, size_t size);
  ::std::string* mutable_header_imgurl();
  ::std::string* release_header_imgurl();
  void set_allocated_header_imgurl(::std::string* header_imgurl);

  // optional string short_url = 6;
  bool has_short_url() const;
  void clear_short_url();
  static const int kShortUrlFieldNumber = 6;
  const ::std::string& short_url() const;
  void set_short_url(const ::std::string& value);
  #if LANG_CXX11
  void set_short_url(::std::string&& value);
  #endif
  void set_short_url(const char* value);
  void set_short_url(const char* value, size_t size);
  ::std::string* mutable_short_url();
  ::std::string* release_short_url();
  void set_allocated_short_url(::std::string* short_url);

  // optional uint32 result = 1;
  bool has_result() const;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // optional uint32 header_imgid = 3;
  bool has_header_imgid() const;
  void clear_header_imgid();
  static const int kHeaderImgidFieldNumber = 3;
  ::google::protobuf::uint32 header_imgid() const;
  void set_header_imgid(::google::protobuf::uint32 value);

  // optional uint32 level = 5;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 5;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 is_purgatory_unlock = 7;
  bool has_is_purgatory_unlock() const;
  void clear_is_purgatory_unlock();
  static const int kIsPurgatoryUnlockFieldNumber = 7;
  ::google::protobuf::uint32 is_purgatory_unlock() const;
  void set_is_purgatory_unlock(::google::protobuf::uint32 value);

  // optional uint32 uid = 8;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 8;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional uint32 is_team_unlock = 9;
  bool has_is_team_unlock() const;
  void clear_is_team_unlock();
  static const int kIsTeamUnlockFieldNumber = 9;
  ::google::protobuf::uint32 is_team_unlock() const;
  void set_is_team_unlock(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:rpc.SwitchAccResponse)
 private:
  void set_has_result();
  void clear_has_result();
  void set_has_account();
  void clear_has_account();
  void set_has_header_imgid();
  void clear_has_header_imgid();
  void set_has_header_imgurl();
  void clear_has_header_imgurl();
  void set_has_level();
  void clear_has_level();
  void set_has_short_url();
  void clear_has_short_url();
  void set_has_is_purgatory_unlock();
  void clear_has_is_purgatory_unlock();
  void set_has_uid();
  void clear_has_uid();
  void set_has_is_team_unlock();
  void clear_has_is_team_unlock();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr header_imgurl_;
  ::google::protobuf::internal::ArenaStringPtr short_url_;
  ::google::protobuf::uint32 result_;
  ::google::protobuf::uint32 header_imgid_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 is_purgatory_unlock_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 is_team_unlock_;
  friend struct  protobuf_login_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HeartBeatMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpc.HeartBeatMsg) */ {
 public:
  HeartBeatMsg();
  virtual ~HeartBeatMsg();

  HeartBeatMsg(const HeartBeatMsg& from);

  inline HeartBeatMsg& operator=(const HeartBeatMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HeartBeatMsg& default_instance();

  static inline const HeartBeatMsg* internal_default_instance() {
    return reinterpret_cast<const HeartBeatMsg*>(
               &_HeartBeatMsg_default_instance_);
  }

  void Swap(HeartBeatMsg* other);

  // implements Message ----------------------------------------------

  inline HeartBeatMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  HeartBeatMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HeartBeatMsg& from);
  void MergeFrom(const HeartBeatMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HeartBeatMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:rpc.HeartBeatMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  friend struct  protobuf_login_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequest_Giant

// optional string entities_str = 1;
inline bool LoginRequest_Giant::has_entities_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRequest_Giant::set_has_entities_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRequest_Giant::clear_has_entities_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRequest_Giant::clear_entities_str() {
  entities_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entities_str();
}
inline const ::std::string& LoginRequest_Giant::entities_str() const {
  // @@protoc_insertion_point(field_get:rpc.LoginRequest_Giant.entities_str)
  return entities_str_.GetNoArena();
}
inline void LoginRequest_Giant::set_entities_str(const ::std::string& value) {
  set_has_entities_str();
  entities_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.LoginRequest_Giant.entities_str)
}
#if LANG_CXX11
inline void LoginRequest_Giant::set_entities_str(::std::string&& value) {
  set_has_entities_str();
  entities_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.LoginRequest_Giant.entities_str)
}
#endif
inline void LoginRequest_Giant::set_entities_str(const char* value) {
  set_has_entities_str();
  entities_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.LoginRequest_Giant.entities_str)
}
inline void LoginRequest_Giant::set_entities_str(const char* value, size_t size) {
  set_has_entities_str();
  entities_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.LoginRequest_Giant.entities_str)
}
inline ::std::string* LoginRequest_Giant::mutable_entities_str() {
  set_has_entities_str();
  // @@protoc_insertion_point(field_mutable:rpc.LoginRequest_Giant.entities_str)
  return entities_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest_Giant::release_entities_str() {
  // @@protoc_insertion_point(field_release:rpc.LoginRequest_Giant.entities_str)
  clear_has_entities_str();
  return entities_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest_Giant::set_allocated_entities_str(::std::string* entities_str) {
  if (entities_str != NULL) {
    set_has_entities_str();
  } else {
    clear_has_entities_str();
  }
  entities_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entities_str);
  // @@protoc_insertion_point(field_set_allocated:rpc.LoginRequest_Giant.entities_str)
}

// optional string sign = 2;
inline bool LoginRequest_Giant::has_sign() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRequest_Giant::set_has_sign() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRequest_Giant::clear_has_sign() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRequest_Giant::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sign();
}
inline const ::std::string& LoginRequest_Giant::sign() const {
  // @@protoc_insertion_point(field_get:rpc.LoginRequest_Giant.sign)
  return sign_.GetNoArena();
}
inline void LoginRequest_Giant::set_sign(const ::std::string& value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.LoginRequest_Giant.sign)
}
#if LANG_CXX11
inline void LoginRequest_Giant::set_sign(::std::string&& value) {
  set_has_sign();
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.LoginRequest_Giant.sign)
}
#endif
inline void LoginRequest_Giant::set_sign(const char* value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.LoginRequest_Giant.sign)
}
inline void LoginRequest_Giant::set_sign(const char* value, size_t size) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.LoginRequest_Giant.sign)
}
inline ::std::string* LoginRequest_Giant::mutable_sign() {
  set_has_sign();
  // @@protoc_insertion_point(field_mutable:rpc.LoginRequest_Giant.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest_Giant::release_sign() {
  // @@protoc_insertion_point(field_release:rpc.LoginRequest_Giant.sign)
  clear_has_sign();
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest_Giant::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    set_has_sign();
  } else {
    clear_has_sign();
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:rpc.LoginRequest_Giant.sign)
}

// optional uint32 majorv = 3;
inline bool LoginRequest_Giant::has_majorv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginRequest_Giant::set_has_majorv() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginRequest_Giant::clear_has_majorv() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginRequest_Giant::clear_majorv() {
  majorv_ = 0u;
  clear_has_majorv();
}
inline ::google::protobuf::uint32 LoginRequest_Giant::majorv() const {
  // @@protoc_insertion_point(field_get:rpc.LoginRequest_Giant.majorv)
  return majorv_;
}
inline void LoginRequest_Giant::set_majorv(::google::protobuf::uint32 value) {
  set_has_majorv();
  majorv_ = value;
  // @@protoc_insertion_point(field_set:rpc.LoginRequest_Giant.majorv)
}

// optional uint32 secondv = 4;
inline bool LoginRequest_Giant::has_secondv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginRequest_Giant::set_has_secondv() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginRequest_Giant::clear_has_secondv() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginRequest_Giant::clear_secondv() {
  secondv_ = 0u;
  clear_has_secondv();
}
inline ::google::protobuf::uint32 LoginRequest_Giant::secondv() const {
  // @@protoc_insertion_point(field_get:rpc.LoginRequest_Giant.secondv)
  return secondv_;
}
inline void LoginRequest_Giant::set_secondv(::google::protobuf::uint32 value) {
  set_has_secondv();
  secondv_ = value;
  // @@protoc_insertion_point(field_set:rpc.LoginRequest_Giant.secondv)
}

// optional uint32 patchv = 5;
inline bool LoginRequest_Giant::has_patchv() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginRequest_Giant::set_has_patchv() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginRequest_Giant::clear_has_patchv() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginRequest_Giant::clear_patchv() {
  patchv_ = 0u;
  clear_has_patchv();
}
inline ::google::protobuf::uint32 LoginRequest_Giant::patchv() const {
  // @@protoc_insertion_point(field_get:rpc.LoginRequest_Giant.patchv)
  return patchv_;
}
inline void LoginRequest_Giant::set_patchv(::google::protobuf::uint32 value) {
  set_has_patchv();
  patchv_ = value;
  // @@protoc_insertion_point(field_set:rpc.LoginRequest_Giant.patchv)
}

// -------------------------------------------------------------------

// LoginRequest

// optional string account = 1;
inline bool LoginRequest::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginRequest::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginRequest::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginRequest::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& LoginRequest::account() const {
  // @@protoc_insertion_point(field_get:rpc.LoginRequest.account)
  return account_.GetNoArena();
}
inline void LoginRequest::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.LoginRequest.account)
}
#if LANG_CXX11
inline void LoginRequest::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.LoginRequest.account)
}
#endif
inline void LoginRequest::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.LoginRequest.account)
}
inline void LoginRequest::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.LoginRequest.account)
}
inline ::std::string* LoginRequest::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:rpc.LoginRequest.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_account() {
  // @@protoc_insertion_point(field_release:rpc.LoginRequest.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:rpc.LoginRequest.account)
}

// optional string password = 2;
inline bool LoginRequest::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginRequest::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
inline const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:rpc.LoginRequest.password)
  return password_.GetNoArena();
}
inline void LoginRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.LoginRequest.password)
}
#if LANG_CXX11
inline void LoginRequest::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.LoginRequest.password)
}
#endif
inline void LoginRequest::set_password(const char* value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.LoginRequest.password)
}
inline void LoginRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.LoginRequest.password)
}
inline ::std::string* LoginRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:rpc.LoginRequest.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:rpc.LoginRequest.password)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:rpc.LoginRequest.password)
}

// -------------------------------------------------------------------

// LoginResponse

// optional .rpc.LoginResponse.LoginResult result = 1;
inline bool LoginResponse::has_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void LoginResponse::set_has_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void LoginResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void LoginResponse::clear_result() {
  result_ = 0;
  clear_has_result();
}
inline ::rpc::LoginResponse_LoginResult LoginResponse::result() const {
  // @@protoc_insertion_point(field_get:rpc.LoginResponse.result)
  return static_cast< ::rpc::LoginResponse_LoginResult >(result_);
}
inline void LoginResponse::set_result(::rpc::LoginResponse_LoginResult value) {
  assert(::rpc::LoginResponse_LoginResult_IsValid(value));
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:rpc.LoginResponse.result)
}

// optional string error_str = 2;
inline bool LoginResponse::has_error_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LoginResponse::set_has_error_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LoginResponse::clear_has_error_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LoginResponse::clear_error_str() {
  error_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_str();
}
inline const ::std::string& LoginResponse::error_str() const {
  // @@protoc_insertion_point(field_get:rpc.LoginResponse.error_str)
  return error_str_.GetNoArena();
}
inline void LoginResponse::set_error_str(const ::std::string& value) {
  set_has_error_str();
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.LoginResponse.error_str)
}
#if LANG_CXX11
inline void LoginResponse::set_error_str(::std::string&& value) {
  set_has_error_str();
  error_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.LoginResponse.error_str)
}
#endif
inline void LoginResponse::set_error_str(const char* value) {
  set_has_error_str();
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.LoginResponse.error_str)
}
inline void LoginResponse::set_error_str(const char* value, size_t size) {
  set_has_error_str();
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.LoginResponse.error_str)
}
inline ::std::string* LoginResponse::mutable_error_str() {
  set_has_error_str();
  // @@protoc_insertion_point(field_mutable:rpc.LoginResponse.error_str)
  return error_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_error_str() {
  // @@protoc_insertion_point(field_release:rpc.LoginResponse.error_str)
  clear_has_error_str();
  return error_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_error_str(::std::string* error_str) {
  if (error_str != NULL) {
    set_has_error_str();
  } else {
    clear_has_error_str();
  }
  error_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_str);
  // @@protoc_insertion_point(field_set_allocated:rpc.LoginResponse.error_str)
}

// optional string account = 3;
inline bool LoginResponse::has_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LoginResponse::set_has_account() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LoginResponse::clear_has_account() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LoginResponse::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& LoginResponse::account() const {
  // @@protoc_insertion_point(field_get:rpc.LoginResponse.account)
  return account_.GetNoArena();
}
inline void LoginResponse::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.LoginResponse.account)
}
#if LANG_CXX11
inline void LoginResponse::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.LoginResponse.account)
}
#endif
inline void LoginResponse::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.LoginResponse.account)
}
inline void LoginResponse::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.LoginResponse.account)
}
inline ::std::string* LoginResponse::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:rpc.LoginResponse.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_account() {
  // @@protoc_insertion_point(field_release:rpc.LoginResponse.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:rpc.LoginResponse.account)
}

// optional uint32 header_imgid = 4;
inline bool LoginResponse::has_header_imgid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void LoginResponse::set_has_header_imgid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void LoginResponse::clear_has_header_imgid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void LoginResponse::clear_header_imgid() {
  header_imgid_ = 0u;
  clear_has_header_imgid();
}
inline ::google::protobuf::uint32 LoginResponse::header_imgid() const {
  // @@protoc_insertion_point(field_get:rpc.LoginResponse.header_imgid)
  return header_imgid_;
}
inline void LoginResponse::set_header_imgid(::google::protobuf::uint32 value) {
  set_has_header_imgid();
  header_imgid_ = value;
  // @@protoc_insertion_point(field_set:rpc.LoginResponse.header_imgid)
}

// optional string header_imgurl = 5;
inline bool LoginResponse::has_header_imgurl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LoginResponse::set_has_header_imgurl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LoginResponse::clear_has_header_imgurl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LoginResponse::clear_header_imgurl() {
  header_imgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_header_imgurl();
}
inline const ::std::string& LoginResponse::header_imgurl() const {
  // @@protoc_insertion_point(field_get:rpc.LoginResponse.header_imgurl)
  return header_imgurl_.GetNoArena();
}
inline void LoginResponse::set_header_imgurl(const ::std::string& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.LoginResponse.header_imgurl)
}
#if LANG_CXX11
inline void LoginResponse::set_header_imgurl(::std::string&& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.LoginResponse.header_imgurl)
}
#endif
inline void LoginResponse::set_header_imgurl(const char* value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.LoginResponse.header_imgurl)
}
inline void LoginResponse::set_header_imgurl(const char* value, size_t size) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.LoginResponse.header_imgurl)
}
inline ::std::string* LoginResponse::mutable_header_imgurl() {
  set_has_header_imgurl();
  // @@protoc_insertion_point(field_mutable:rpc.LoginResponse.header_imgurl)
  return header_imgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_header_imgurl() {
  // @@protoc_insertion_point(field_release:rpc.LoginResponse.header_imgurl)
  clear_has_header_imgurl();
  return header_imgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_header_imgurl(::std::string* header_imgurl) {
  if (header_imgurl != NULL) {
    set_has_header_imgurl();
  } else {
    clear_has_header_imgurl();
  }
  header_imgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header_imgurl);
  // @@protoc_insertion_point(field_set_allocated:rpc.LoginResponse.header_imgurl)
}

// optional uint32 level = 6;
inline bool LoginResponse::has_level() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void LoginResponse::set_has_level() {
  _has_bits_[0] |= 0x00000040u;
}
inline void LoginResponse::clear_has_level() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void LoginResponse::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 LoginResponse::level() const {
  // @@protoc_insertion_point(field_get:rpc.LoginResponse.level)
  return level_;
}
inline void LoginResponse::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:rpc.LoginResponse.level)
}

// optional string short_url = 7;
inline bool LoginResponse::has_short_url() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void LoginResponse::set_has_short_url() {
  _has_bits_[0] |= 0x00000008u;
}
inline void LoginResponse::clear_has_short_url() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void LoginResponse::clear_short_url() {
  short_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_short_url();
}
inline const ::std::string& LoginResponse::short_url() const {
  // @@protoc_insertion_point(field_get:rpc.LoginResponse.short_url)
  return short_url_.GetNoArena();
}
inline void LoginResponse::set_short_url(const ::std::string& value) {
  set_has_short_url();
  short_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.LoginResponse.short_url)
}
#if LANG_CXX11
inline void LoginResponse::set_short_url(::std::string&& value) {
  set_has_short_url();
  short_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.LoginResponse.short_url)
}
#endif
inline void LoginResponse::set_short_url(const char* value) {
  set_has_short_url();
  short_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.LoginResponse.short_url)
}
inline void LoginResponse::set_short_url(const char* value, size_t size) {
  set_has_short_url();
  short_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.LoginResponse.short_url)
}
inline ::std::string* LoginResponse::mutable_short_url() {
  set_has_short_url();
  // @@protoc_insertion_point(field_mutable:rpc.LoginResponse.short_url)
  return short_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginResponse::release_short_url() {
  // @@protoc_insertion_point(field_release:rpc.LoginResponse.short_url)
  clear_has_short_url();
  return short_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginResponse::set_allocated_short_url(::std::string* short_url) {
  if (short_url != NULL) {
    set_has_short_url();
  } else {
    clear_has_short_url();
  }
  short_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_url);
  // @@protoc_insertion_point(field_set_allocated:rpc.LoginResponse.short_url)
}

// optional uint32 is_purgatory_unlock = 8;
inline bool LoginResponse::has_is_purgatory_unlock() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void LoginResponse::set_has_is_purgatory_unlock() {
  _has_bits_[0] |= 0x00000080u;
}
inline void LoginResponse::clear_has_is_purgatory_unlock() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void LoginResponse::clear_is_purgatory_unlock() {
  is_purgatory_unlock_ = 0u;
  clear_has_is_purgatory_unlock();
}
inline ::google::protobuf::uint32 LoginResponse::is_purgatory_unlock() const {
  // @@protoc_insertion_point(field_get:rpc.LoginResponse.is_purgatory_unlock)
  return is_purgatory_unlock_;
}
inline void LoginResponse::set_is_purgatory_unlock(::google::protobuf::uint32 value) {
  set_has_is_purgatory_unlock();
  is_purgatory_unlock_ = value;
  // @@protoc_insertion_point(field_set:rpc.LoginResponse.is_purgatory_unlock)
}

// optional uint32 uid = 9;
inline bool LoginResponse::has_uid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void LoginResponse::set_has_uid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void LoginResponse::clear_has_uid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void LoginResponse::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 LoginResponse::uid() const {
  // @@protoc_insertion_point(field_get:rpc.LoginResponse.uid)
  return uid_;
}
inline void LoginResponse::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:rpc.LoginResponse.uid)
}

// optional uint32 is_team_unlock = 10;
inline bool LoginResponse::has_is_team_unlock() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void LoginResponse::set_has_is_team_unlock() {
  _has_bits_[0] |= 0x00000200u;
}
inline void LoginResponse::clear_has_is_team_unlock() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void LoginResponse::clear_is_team_unlock() {
  is_team_unlock_ = 0u;
  clear_has_is_team_unlock();
}
inline ::google::protobuf::uint32 LoginResponse::is_team_unlock() const {
  // @@protoc_insertion_point(field_get:rpc.LoginResponse.is_team_unlock)
  return is_team_unlock_;
}
inline void LoginResponse::set_is_team_unlock(::google::protobuf::uint32 value) {
  set_has_is_team_unlock();
  is_team_unlock_ = value;
  // @@protoc_insertion_point(field_set:rpc.LoginResponse.is_team_unlock)
}

// -------------------------------------------------------------------

// SwitchAccMsg

// optional string entities_str = 1;
inline bool SwitchAccMsg::has_entities_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SwitchAccMsg::set_has_entities_str() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SwitchAccMsg::clear_has_entities_str() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SwitchAccMsg::clear_entities_str() {
  entities_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_entities_str();
}
inline const ::std::string& SwitchAccMsg::entities_str() const {
  // @@protoc_insertion_point(field_get:rpc.SwitchAccMsg.entities_str)
  return entities_str_.GetNoArena();
}
inline void SwitchAccMsg::set_entities_str(const ::std::string& value) {
  set_has_entities_str();
  entities_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.SwitchAccMsg.entities_str)
}
#if LANG_CXX11
inline void SwitchAccMsg::set_entities_str(::std::string&& value) {
  set_has_entities_str();
  entities_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.SwitchAccMsg.entities_str)
}
#endif
inline void SwitchAccMsg::set_entities_str(const char* value) {
  set_has_entities_str();
  entities_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.SwitchAccMsg.entities_str)
}
inline void SwitchAccMsg::set_entities_str(const char* value, size_t size) {
  set_has_entities_str();
  entities_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.SwitchAccMsg.entities_str)
}
inline ::std::string* SwitchAccMsg::mutable_entities_str() {
  set_has_entities_str();
  // @@protoc_insertion_point(field_mutable:rpc.SwitchAccMsg.entities_str)
  return entities_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SwitchAccMsg::release_entities_str() {
  // @@protoc_insertion_point(field_release:rpc.SwitchAccMsg.entities_str)
  clear_has_entities_str();
  return entities_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SwitchAccMsg::set_allocated_entities_str(::std::string* entities_str) {
  if (entities_str != NULL) {
    set_has_entities_str();
  } else {
    clear_has_entities_str();
  }
  entities_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), entities_str);
  // @@protoc_insertion_point(field_set_allocated:rpc.SwitchAccMsg.entities_str)
}

// optional string sign = 2;
inline bool SwitchAccMsg::has_sign() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SwitchAccMsg::set_has_sign() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SwitchAccMsg::clear_has_sign() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SwitchAccMsg::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sign();
}
inline const ::std::string& SwitchAccMsg::sign() const {
  // @@protoc_insertion_point(field_get:rpc.SwitchAccMsg.sign)
  return sign_.GetNoArena();
}
inline void SwitchAccMsg::set_sign(const ::std::string& value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.SwitchAccMsg.sign)
}
#if LANG_CXX11
inline void SwitchAccMsg::set_sign(::std::string&& value) {
  set_has_sign();
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.SwitchAccMsg.sign)
}
#endif
inline void SwitchAccMsg::set_sign(const char* value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.SwitchAccMsg.sign)
}
inline void SwitchAccMsg::set_sign(const char* value, size_t size) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.SwitchAccMsg.sign)
}
inline ::std::string* SwitchAccMsg::mutable_sign() {
  set_has_sign();
  // @@protoc_insertion_point(field_mutable:rpc.SwitchAccMsg.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SwitchAccMsg::release_sign() {
  // @@protoc_insertion_point(field_release:rpc.SwitchAccMsg.sign)
  clear_has_sign();
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SwitchAccMsg::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    set_has_sign();
  } else {
    clear_has_sign();
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:rpc.SwitchAccMsg.sign)
}

// -------------------------------------------------------------------

// SwitchAccResponse

// optional uint32 result = 1;
inline bool SwitchAccResponse::has_result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SwitchAccResponse::set_has_result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SwitchAccResponse::clear_has_result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SwitchAccResponse::clear_result() {
  result_ = 0u;
  clear_has_result();
}
inline ::google::protobuf::uint32 SwitchAccResponse::result() const {
  // @@protoc_insertion_point(field_get:rpc.SwitchAccResponse.result)
  return result_;
}
inline void SwitchAccResponse::set_result(::google::protobuf::uint32 value) {
  set_has_result();
  result_ = value;
  // @@protoc_insertion_point(field_set:rpc.SwitchAccResponse.result)
}

// optional string account = 2;
inline bool SwitchAccResponse::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SwitchAccResponse::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SwitchAccResponse::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SwitchAccResponse::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& SwitchAccResponse::account() const {
  // @@protoc_insertion_point(field_get:rpc.SwitchAccResponse.account)
  return account_.GetNoArena();
}
inline void SwitchAccResponse::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.SwitchAccResponse.account)
}
#if LANG_CXX11
inline void SwitchAccResponse::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.SwitchAccResponse.account)
}
#endif
inline void SwitchAccResponse::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.SwitchAccResponse.account)
}
inline void SwitchAccResponse::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.SwitchAccResponse.account)
}
inline ::std::string* SwitchAccResponse::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:rpc.SwitchAccResponse.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SwitchAccResponse::release_account() {
  // @@protoc_insertion_point(field_release:rpc.SwitchAccResponse.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SwitchAccResponse::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:rpc.SwitchAccResponse.account)
}

// optional uint32 header_imgid = 3;
inline bool SwitchAccResponse::has_header_imgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void SwitchAccResponse::set_has_header_imgid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void SwitchAccResponse::clear_has_header_imgid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void SwitchAccResponse::clear_header_imgid() {
  header_imgid_ = 0u;
  clear_has_header_imgid();
}
inline ::google::protobuf::uint32 SwitchAccResponse::header_imgid() const {
  // @@protoc_insertion_point(field_get:rpc.SwitchAccResponse.header_imgid)
  return header_imgid_;
}
inline void SwitchAccResponse::set_header_imgid(::google::protobuf::uint32 value) {
  set_has_header_imgid();
  header_imgid_ = value;
  // @@protoc_insertion_point(field_set:rpc.SwitchAccResponse.header_imgid)
}

// optional string header_imgurl = 4;
inline bool SwitchAccResponse::has_header_imgurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SwitchAccResponse::set_has_header_imgurl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SwitchAccResponse::clear_has_header_imgurl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SwitchAccResponse::clear_header_imgurl() {
  header_imgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_header_imgurl();
}
inline const ::std::string& SwitchAccResponse::header_imgurl() const {
  // @@protoc_insertion_point(field_get:rpc.SwitchAccResponse.header_imgurl)
  return header_imgurl_.GetNoArena();
}
inline void SwitchAccResponse::set_header_imgurl(const ::std::string& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.SwitchAccResponse.header_imgurl)
}
#if LANG_CXX11
inline void SwitchAccResponse::set_header_imgurl(::std::string&& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.SwitchAccResponse.header_imgurl)
}
#endif
inline void SwitchAccResponse::set_header_imgurl(const char* value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.SwitchAccResponse.header_imgurl)
}
inline void SwitchAccResponse::set_header_imgurl(const char* value, size_t size) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.SwitchAccResponse.header_imgurl)
}
inline ::std::string* SwitchAccResponse::mutable_header_imgurl() {
  set_has_header_imgurl();
  // @@protoc_insertion_point(field_mutable:rpc.SwitchAccResponse.header_imgurl)
  return header_imgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SwitchAccResponse::release_header_imgurl() {
  // @@protoc_insertion_point(field_release:rpc.SwitchAccResponse.header_imgurl)
  clear_has_header_imgurl();
  return header_imgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SwitchAccResponse::set_allocated_header_imgurl(::std::string* header_imgurl) {
  if (header_imgurl != NULL) {
    set_has_header_imgurl();
  } else {
    clear_has_header_imgurl();
  }
  header_imgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header_imgurl);
  // @@protoc_insertion_point(field_set_allocated:rpc.SwitchAccResponse.header_imgurl)
}

// optional uint32 level = 5;
inline bool SwitchAccResponse::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void SwitchAccResponse::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void SwitchAccResponse::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void SwitchAccResponse::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 SwitchAccResponse::level() const {
  // @@protoc_insertion_point(field_get:rpc.SwitchAccResponse.level)
  return level_;
}
inline void SwitchAccResponse::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:rpc.SwitchAccResponse.level)
}

// optional string short_url = 6;
inline bool SwitchAccResponse::has_short_url() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SwitchAccResponse::set_has_short_url() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SwitchAccResponse::clear_has_short_url() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SwitchAccResponse::clear_short_url() {
  short_url_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_short_url();
}
inline const ::std::string& SwitchAccResponse::short_url() const {
  // @@protoc_insertion_point(field_get:rpc.SwitchAccResponse.short_url)
  return short_url_.GetNoArena();
}
inline void SwitchAccResponse::set_short_url(const ::std::string& value) {
  set_has_short_url();
  short_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpc.SwitchAccResponse.short_url)
}
#if LANG_CXX11
inline void SwitchAccResponse::set_short_url(::std::string&& value) {
  set_has_short_url();
  short_url_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpc.SwitchAccResponse.short_url)
}
#endif
inline void SwitchAccResponse::set_short_url(const char* value) {
  set_has_short_url();
  short_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpc.SwitchAccResponse.short_url)
}
inline void SwitchAccResponse::set_short_url(const char* value, size_t size) {
  set_has_short_url();
  short_url_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpc.SwitchAccResponse.short_url)
}
inline ::std::string* SwitchAccResponse::mutable_short_url() {
  set_has_short_url();
  // @@protoc_insertion_point(field_mutable:rpc.SwitchAccResponse.short_url)
  return short_url_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SwitchAccResponse::release_short_url() {
  // @@protoc_insertion_point(field_release:rpc.SwitchAccResponse.short_url)
  clear_has_short_url();
  return short_url_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SwitchAccResponse::set_allocated_short_url(::std::string* short_url) {
  if (short_url != NULL) {
    set_has_short_url();
  } else {
    clear_has_short_url();
  }
  short_url_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), short_url);
  // @@protoc_insertion_point(field_set_allocated:rpc.SwitchAccResponse.short_url)
}

// optional uint32 is_purgatory_unlock = 7;
inline bool SwitchAccResponse::has_is_purgatory_unlock() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void SwitchAccResponse::set_has_is_purgatory_unlock() {
  _has_bits_[0] |= 0x00000040u;
}
inline void SwitchAccResponse::clear_has_is_purgatory_unlock() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void SwitchAccResponse::clear_is_purgatory_unlock() {
  is_purgatory_unlock_ = 0u;
  clear_has_is_purgatory_unlock();
}
inline ::google::protobuf::uint32 SwitchAccResponse::is_purgatory_unlock() const {
  // @@protoc_insertion_point(field_get:rpc.SwitchAccResponse.is_purgatory_unlock)
  return is_purgatory_unlock_;
}
inline void SwitchAccResponse::set_is_purgatory_unlock(::google::protobuf::uint32 value) {
  set_has_is_purgatory_unlock();
  is_purgatory_unlock_ = value;
  // @@protoc_insertion_point(field_set:rpc.SwitchAccResponse.is_purgatory_unlock)
}

// optional uint32 uid = 8;
inline bool SwitchAccResponse::has_uid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void SwitchAccResponse::set_has_uid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void SwitchAccResponse::clear_has_uid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void SwitchAccResponse::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 SwitchAccResponse::uid() const {
  // @@protoc_insertion_point(field_get:rpc.SwitchAccResponse.uid)
  return uid_;
}
inline void SwitchAccResponse::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:rpc.SwitchAccResponse.uid)
}

// optional uint32 is_team_unlock = 9;
inline bool SwitchAccResponse::has_is_team_unlock() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void SwitchAccResponse::set_has_is_team_unlock() {
  _has_bits_[0] |= 0x00000100u;
}
inline void SwitchAccResponse::clear_has_is_team_unlock() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void SwitchAccResponse::clear_is_team_unlock() {
  is_team_unlock_ = 0u;
  clear_has_is_team_unlock();
}
inline ::google::protobuf::uint32 SwitchAccResponse::is_team_unlock() const {
  // @@protoc_insertion_point(field_get:rpc.SwitchAccResponse.is_team_unlock)
  return is_team_unlock_;
}
inline void SwitchAccResponse::set_is_team_unlock(::google::protobuf::uint32 value) {
  set_has_is_team_unlock();
  is_team_unlock_ = value;
  // @@protoc_insertion_point(field_set:rpc.SwitchAccResponse.is_team_unlock)
}

// -------------------------------------------------------------------

// HeartBeatMsg

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace rpc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::rpc::LoginResponse_LoginResult> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpc::LoginResponse_LoginResult>() {
  return ::rpc::LoginResponse_LoginResult_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_login_2eproto__INCLUDED
