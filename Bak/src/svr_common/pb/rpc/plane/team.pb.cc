// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plane/team.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "plane/team.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace plane {
class EnterRoomResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EnterRoomResponse> {
} _EnterRoomResponse_default_instance_;
class EnterTeamMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EnterTeamMsg> {
} _EnterTeamMsg_default_instance_;
class OneTeamMemberDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OneTeamMember> {
} _OneTeamMember_default_instance_;
class AddTeamMemberMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddTeamMemberMsg> {
} _AddTeamMemberMsg_default_instance_;
class RemoveTeamMemberMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RemoveTeamMemberMsg> {
} _RemoveTeamMemberMsg_default_instance_;
class EnterTeamResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<EnterTeamResponse> {
} _EnterTeamResponse_default_instance_;
class OneFriendDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OneFriendData> {
} _OneFriendData_default_instance_;
class OnePageFriendDataMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OnePageFriendDataMsg> {
} _OnePageFriendDataMsg_default_instance_;
class TeamEnterRoomResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TeamEnterRoomResponse> {
} _TeamEnterRoomResponse_default_instance_;
class NicknameMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NicknameMsg> {
} _NicknameMsg_default_instance_;
class InviteMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InviteMsg> {
} _InviteMsg_default_instance_;
class NewNickNameMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<NewNickNameMsg> {
} _NewNickNameMsg_default_instance_;
class PageNumMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PageNumMsg> {
} _PageNumMsg_default_instance_;
class AddMemberInRoomMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddMemberInRoomMsg> {
} _AddMemberInRoomMsg_default_instance_;
class OneTeamRankDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OneTeamRankData> {
} _OneTeamRankData_default_instance_;
class TeamRankDataMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TeamRankDataMsg> {
} _TeamRankDataMsg_default_instance_;

namespace protobuf_plane_2fteam_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[16];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResponse, ms_and_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResponse, leftseconds_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResponse, players_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResponse, foods_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResponse, planes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResponse, mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterRoomResponse, voice_token_),
  1,
  2,
  ~0u,
  ~0u,
  ~0u,
  3,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTeamMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTeamMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTeamMsg, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTeamMsg, nickname_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneTeamMember, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneTeamMember, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneTeamMember, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneTeamMember, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneTeamMember, header_imgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneTeamMember, header_imgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneTeamMember, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneTeamMember, nickname_),
  0,
  3,
  4,
  1,
  5,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddTeamMemberMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddTeamMemberMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddTeamMemberMsg, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddTeamMemberMsg, member_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveTeamMemberMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveTeamMemberMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveTeamMemberMsg, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveTeamMemberMsg, uid_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTeamResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTeamResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTeamResponse, teamname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTeamResponse, total_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTeamResponse, leader_uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTeamResponse, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EnterTeamResponse, voice_token_),
  0,
  2,
  3,
  ~0u,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFriendData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFriendData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFriendData, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFriendData, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFriendData, header_imgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFriendData, header_imgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFriendData, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFriendData, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFriendData, state_),
  0,
  2,
  3,
  1,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFriendDataMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFriendDataMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFriendDataMsg, total_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFriendDataMsg, page_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFriendDataMsg, datas_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamEnterRoomResponse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamEnterRoomResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamEnterRoomResponse, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamEnterRoomResponse, members_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NicknameMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NicknameMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NicknameMsg, nickname_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteMsg, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteMsg, inviter_acc_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewNickNameMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewNickNameMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewNickNameMsg, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NewNickNameMsg, nickname_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PageNumMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PageNumMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PageNumMsg, page_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMemberInRoomMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMemberInRoomMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMemberInRoomMsg, member_num_before_add_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddMemberInRoomMsg, uids_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneTeamRankData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneTeamRankData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneTeamRankData, team_skinid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneTeamRankData, member_num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamRankDataMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamRankDataMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamRankDataMsg, my_team_rank_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamRankDataMsg, my_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamRankDataMsg, my_teamskinid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamRankDataMsg, my_team_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamRankDataMsg, datas_),
  0,
  1,
  2,
  3,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 11, sizeof(EnterRoomResponse)},
  { 18, 24, sizeof(EnterTeamMsg)},
  { 26, 36, sizeof(OneTeamMember)},
  { 42, 48, sizeof(AddTeamMemberMsg)},
  { 50, 56, sizeof(RemoveTeamMemberMsg)},
  { 58, 67, sizeof(EnterTeamResponse)},
  { 72, 83, sizeof(OneFriendData)},
  { 90, 97, sizeof(OnePageFriendDataMsg)},
  { 100, 106, sizeof(TeamEnterRoomResponse)},
  { 108, 113, sizeof(NicknameMsg)},
  { 114, 120, sizeof(InviteMsg)},
  { 122, 128, sizeof(NewNickNameMsg)},
  { 130, 135, sizeof(PageNumMsg)},
  { 136, 142, sizeof(AddMemberInRoomMsg)},
  { 144, 150, sizeof(OneTeamRankData)},
  { 152, 161, sizeof(TeamRankDataMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterRoomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterTeamMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneTeamMember_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddTeamMemberMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoveTeamMemberMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_EnterTeamResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneFriendData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OnePageFriendDataMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TeamEnterRoomResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NicknameMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InviteMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_NewNickNameMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PageNumMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddMemberInRoomMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneTeamRankData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TeamRankDataMsg_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "plane/team.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 16);
}

}  // namespace

void TableStruct::Shutdown() {
  _EnterRoomResponse_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _EnterTeamMsg_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _OneTeamMember_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _AddTeamMemberMsg_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _RemoveTeamMemberMsg_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _EnterTeamResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _OneFriendData_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _OnePageFriendDataMsg_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _TeamEnterRoomResponse_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _NicknameMsg_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _InviteMsg_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _NewNickNameMsg_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _PageNumMsg_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _AddMemberInRoomMsg_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _OneTeamRankData_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _TeamRankDataMsg_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::rpc::protobuf_empty_5fmsg_2eproto::InitDefaults();
  ::plane::protobuf_plane_2fplane_5fmsg_2eproto::InitDefaults();
  _EnterRoomResponse_default_instance_.DefaultConstruct();
  _EnterTeamMsg_default_instance_.DefaultConstruct();
  _OneTeamMember_default_instance_.DefaultConstruct();
  _AddTeamMemberMsg_default_instance_.DefaultConstruct();
  _RemoveTeamMemberMsg_default_instance_.DefaultConstruct();
  _EnterTeamResponse_default_instance_.DefaultConstruct();
  _OneFriendData_default_instance_.DefaultConstruct();
  _OnePageFriendDataMsg_default_instance_.DefaultConstruct();
  _TeamEnterRoomResponse_default_instance_.DefaultConstruct();
  _NicknameMsg_default_instance_.DefaultConstruct();
  _InviteMsg_default_instance_.DefaultConstruct();
  _NewNickNameMsg_default_instance_.DefaultConstruct();
  _PageNumMsg_default_instance_.DefaultConstruct();
  _AddMemberInRoomMsg_default_instance_.DefaultConstruct();
  _OneTeamRankData_default_instance_.DefaultConstruct();
  _TeamRankDataMsg_default_instance_.DefaultConstruct();
  _EnterRoomResponse_default_instance_.get_mutable()->ms_and_id_ = const_cast< ::plane::MsAndId*>(
      ::plane::MsAndId::internal_default_instance());
  _AddTeamMemberMsg_default_instance_.get_mutable()->member_ = const_cast< ::plane::OneTeamMember*>(
      ::plane::OneTeamMember::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\020plane/team.proto\022\005plane\032\017empty_msg.pro"
      "to\032\025plane/plane_msg.proto\"\342\001\n\021EnterRoomR"
      "esponse\022!\n\tms_and_id\030\001 \001(\0132\016.plane.MsAnd"
      "Id\022\023\n\013leftseconds\030\002 \001(\r\022\"\n\007players\030\003 \003(\013"
      "2\021.plane.PlayerInfo\022\035\n\005foods\030\004 \003(\0132\016.pla"
      "ne.FoodMsg\022/\n\006planes\030\005 \003(\0132\037.plane.Batch"
      "AddEnergyPlaneBcMsg\022\014\n\004mode\030\006 \001(\r\022\023\n\013voi"
      "ce_token\030\007 \001(\t\"0\n\014EnterTeamMsg\022\016\n\006teamid"
      "\030\001 \001(\r\022\020\n\010nickname\030\002 \001(\t\"y\n\rOneTeamMembe"
      "r\022\017\n\007account\030\001 \001(\t\022\013\n\003uid\030\002 \001(\r\022\024\n\014heade"
      "r_imgid\030\003 \001(\r\022\025\n\rheader_imgurl\030\004 \001(\t\022\013\n\003"
      "sex\030\005 \001(\r\022\020\n\010nickname\030\006 \001(\t\"E\n\020AddTeamMe"
      "mberMsg\022\013\n\003pos\030\001 \001(\r\022$\n\006member\030\002 \001(\0132\024.p"
      "lane.OneTeamMember\"/\n\023RemoveTeamMemberMs"
      "g\022\013\n\003pos\030\001 \001(\r\022\013\n\003uid\030\002 \001(\r\"\210\001\n\021EnterTea"
      "mResponse\022\020\n\010teamname\030\001 \001(\t\022\021\n\ttotal_num"
      "\030\002 \001(\r\022\022\n\nleader_uid\030\003 \001(\r\022%\n\007members\030\004 "
      "\003(\0132\024.plane.OneTeamMember\022\023\n\013voice_token"
      "\030\005 \001(\t\"\205\001\n\rOneFriendData\022\017\n\007account\030\001 \001("
      "\t\022\013\n\003uid\030\002 \001(\r\022\024\n\014header_imgid\030\003 \001(\r\022\025\n\r"
      "header_imgurl\030\004 \001(\t\022\013\n\003sex\030\005 \001(\r\022\r\n\005leve"
      "l\030\006 \001(\r\022\r\n\005state\030\007 \001(\r\"`\n\024OnePageFriendD"
      "ataMsg\022\021\n\ttotal_num\030\001 \001(\r\022\020\n\010page_num\030\002 "
      "\001(\r\022#\n\005datas\030\003 \003(\0132\024.plane.OneFriendData"
      "\"8\n\025TeamEnterRoomResponse\022\016\n\006teamid\030\001 \001("
      "\r\022\017\n\007members\030\002 \003(\r\"\037\n\013NicknameMsg\022\020\n\010nic"
      "kname\030\001 \001(\t\"0\n\tInviteMsg\022\016\n\006teamid\030\001 \001(\r"
      "\022\023\n\013inviter_acc\030\002 \001(\t\"/\n\016NewNickNameMsg\022"
      "\013\n\003pos\030\001 \001(\r\022\020\n\010nickname\030\002 \001(\t\"\032\n\nPageNu"
      "mMsg\022\014\n\004page\030\001 \001(\r\"A\n\022AddMemberInRoomMsg"
      "\022\035\n\025member_num_before_add\030\001 \001(\r\022\014\n\004uids\030"
      "\002 \003(\r\":\n\017OneTeamRankData\022\023\n\013team_skinid\030"
      "\001 \001(\r\022\022\n\nmember_num\030\002 \001(\r\"\214\001\n\017TeamRankDa"
      "taMsg\022\024\n\014my_team_rank\030\001 \001(\r\022\020\n\010my_score\030"
      "\002 \001(\r\022\025\n\rmy_teamskinid\030\003 \001(\r\022\023\n\013my_team_"
      "num\030\004 \001(\r\022%\n\005datas\030\005 \003(\0132\026.plane.OneTeam"
      "RankData2\271\002\n\004Team\022:\n\tEnterTeam\022\023.plane.E"
      "nterTeamMsg\032\030.plane.EnterTeamResponse\022)\n"
      "\tLeaveTeam\022\r.rpc.EmptyMsg\032\r.rpc.EmptyMsg"
      "\0222\n\016InviteJoinTeam\022\021.plane.UidListMsg\032\r."
      "rpc.EmptyMsg\022-\n\rTeamEnterRoom\022\r.rpc.Empt"
      "yMsg\032\r.rpc.EmptyMsg\0223\n\016ChangeNickname\022\022."
      "plane.NicknameMsg\032\r.rpc.EmptyMsg\0222\n\016View"
      "FriendList\022\021.plane.PageNumMsg\032\r.rpc.Empt"
      "yMsg2\355\005\n\010TeamPush\022B\n\027NotifyEnterRoomResp"
      "onse\022\030.plane.EnterRoomResponse\032\r.rpc.Emp"
      "tyMsg\022=\n\023NotifyAddTeamMember\022\027.plane.Add"
      "TeamMemberMsg\032\r.rpc.EmptyMsg\022C\n\026NotifyRe"
      "moveTeamMember\022\032.plane.RemoveTeamMemberM"
      "sg\032\r.rpc.EmptyMsg\0220\n\020NotifyAbadonTeam\022\r."
      "rpc.EmptyMsg\032\r.rpc.EmptyMsg\022/\n\014AskAgreeJ"
      "oin\022\020.plane.InviteMsg\032\r.rpc.EmptyMsg\022E\n\027"
      "NotifyOnePageFriendData\022\033.plane.OnePageF"
      "riendDataMsg\032\r.rpc.EmptyMsg\022A\n\025NotifyAdd"
      "MemberInRoom\022\031.plane.AddMemberInRoomMsg\032"
      "\r.rpc.EmptyMsg\022B\n\023NotifyTeamEnterRoom\022\034."
      "plane.TeamEnterRoomResponse\032\r.rpc.EmptyM"
      "sg\022C\n\033NotifyMemberNicknameChanged\022\025.plan"
      "e.NewNickNameMsg\032\r.rpc.EmptyMsg\022;\n\022Notif"
      "yTeamRankData\022\026.plane.TeamRankDataMsg\032\r."
      "rpc.EmptyMsg\0222\n\022NotifyPlayerInGame\022\r.rpc"
      ".EmptyMsg\032\r.rpc.EmptyMsg\0222\n\022NotifyPlayer"
      "NoGame\022\r.rpc.EmptyMsg\032\r.rpc.EmptyMsg"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2516);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "plane/team.proto", &protobuf_RegisterTypes);
  ::rpc::protobuf_empty_5fmsg_2eproto::AddDescriptors();
  ::plane::protobuf_plane_2fplane_5fmsg_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_plane_2fteam_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterRoomResponse::kMsAndIdFieldNumber;
const int EnterRoomResponse::kLeftsecondsFieldNumber;
const int EnterRoomResponse::kPlayersFieldNumber;
const int EnterRoomResponse::kFoodsFieldNumber;
const int EnterRoomResponse::kPlanesFieldNumber;
const int EnterRoomResponse::kModeFieldNumber;
const int EnterRoomResponse::kVoiceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterRoomResponse::EnterRoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.EnterRoomResponse)
}
EnterRoomResponse::EnterRoomResponse(const EnterRoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      players_(from.players_),
      foods_(from.foods_),
      planes_(from.planes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  voice_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_voice_token()) {
    voice_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_token_);
  }
  if (from.has_ms_and_id()) {
    ms_and_id_ = new ::plane::MsAndId(*from.ms_and_id_);
  } else {
    ms_and_id_ = NULL;
  }
  ::memcpy(&leftseconds_, &from.leftseconds_,
    reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&leftseconds_) + sizeof(mode_));
  // @@protoc_insertion_point(copy_constructor:plane.EnterRoomResponse)
}

void EnterRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  voice_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ms_and_id_, 0, reinterpret_cast<char*>(&mode_) -
    reinterpret_cast<char*>(&ms_and_id_) + sizeof(mode_));
}

EnterRoomResponse::~EnterRoomResponse() {
  // @@protoc_insertion_point(destructor:plane.EnterRoomResponse)
  SharedDtor();
}

void EnterRoomResponse::SharedDtor() {
  voice_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete ms_and_id_;
  }
}

void EnterRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterRoomResponse::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[0].descriptor;
}

const EnterRoomResponse& EnterRoomResponse::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterRoomResponse* EnterRoomResponse::New(::google::protobuf::Arena* arena) const {
  EnterRoomResponse* n = new EnterRoomResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.EnterRoomResponse)
  players_.Clear();
  foods_.Clear();
  planes_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_voice_token()) {
      GOOGLE_DCHECK(!voice_token_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*voice_token_.UnsafeRawStringPointer())->clear();
    }
    if (has_ms_and_id()) {
      GOOGLE_DCHECK(ms_and_id_ != NULL);
      ms_and_id_->::plane::MsAndId::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&leftseconds_, 0, reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&leftseconds_) + sizeof(mode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnterRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.EnterRoomResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .plane.MsAndId ms_and_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_ms_and_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 leftseconds = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_leftseconds();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leftseconds_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .plane.PlayerInfo players = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_players()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .plane.FoodMsg foods = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(34u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_foods()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .plane.BatchAddEnergyPlaneBcMsg planes = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(42u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_planes()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional uint32 mode = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(48u)) {
          set_has_mode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &mode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string voice_token = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voice_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->voice_token().data(), this->voice_token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.EnterRoomResponse.voice_token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.EnterRoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.EnterRoomResponse)
  return false;
#undef DO_
}

void EnterRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.EnterRoomResponse)
  // optional .plane.MsAndId ms_and_id = 1;
  if (has_ms_and_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->ms_and_id_, output);
  }

  // optional uint32 leftseconds = 2;
  if (has_leftseconds()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->leftseconds(), output);
  }

  // repeated .plane.PlayerInfo players = 3;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->players(i), output);
  }

  // repeated .plane.FoodMsg foods = 4;
  for (unsigned int i = 0, n = this->foods_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->foods(i), output);
  }

  // repeated .plane.BatchAddEnergyPlaneBcMsg planes = 5;
  for (unsigned int i = 0, n = this->planes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->planes(i), output);
  }

  // optional uint32 mode = 6;
  if (has_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->mode(), output);
  }

  // optional string voice_token = 7;
  if (has_voice_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voice_token().data(), this->voice_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.EnterRoomResponse.voice_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->voice_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.EnterRoomResponse)
}

::google::protobuf::uint8* EnterRoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.EnterRoomResponse)
  // optional .plane.MsAndId ms_and_id = 1;
  if (has_ms_and_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->ms_and_id_, false, target);
  }

  // optional uint32 leftseconds = 2;
  if (has_leftseconds()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->leftseconds(), target);
  }

  // repeated .plane.PlayerInfo players = 3;
  for (unsigned int i = 0, n = this->players_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->players(i), false, target);
  }

  // repeated .plane.FoodMsg foods = 4;
  for (unsigned int i = 0, n = this->foods_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->foods(i), false, target);
  }

  // repeated .plane.BatchAddEnergyPlaneBcMsg planes = 5;
  for (unsigned int i = 0, n = this->planes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->planes(i), false, target);
  }

  // optional uint32 mode = 6;
  if (has_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->mode(), target);
  }

  // optional string voice_token = 7;
  if (has_voice_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voice_token().data(), this->voice_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.EnterRoomResponse.voice_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->voice_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.EnterRoomResponse)
  return target;
}

size_t EnterRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.EnterRoomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.PlayerInfo players = 3;
  {
    unsigned int count = this->players_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->players(i));
    }
  }

  // repeated .plane.FoodMsg foods = 4;
  {
    unsigned int count = this->foods_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->foods(i));
    }
  }

  // repeated .plane.BatchAddEnergyPlaneBcMsg planes = 5;
  {
    unsigned int count = this->planes_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->planes(i));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string voice_token = 7;
    if (has_voice_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->voice_token());
    }

    // optional .plane.MsAndId ms_and_id = 1;
    if (has_ms_and_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->ms_and_id_);
    }

    // optional uint32 leftseconds = 2;
    if (has_leftseconds()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->leftseconds());
    }

    // optional uint32 mode = 6;
    if (has_mode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->mode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.EnterRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterRoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterRoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.EnterRoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.EnterRoomResponse)
    MergeFrom(*source);
  }
}

void EnterRoomResponse::MergeFrom(const EnterRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.EnterRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  players_.MergeFrom(from.players_);
  foods_.MergeFrom(from.foods_);
  planes_.MergeFrom(from.planes_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_voice_token()) {
      set_has_voice_token();
      voice_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_token_);
    }
    if (from.has_ms_and_id()) {
      mutable_ms_and_id()->::plane::MsAndId::MergeFrom(from.ms_and_id());
    }
    if (from.has_leftseconds()) {
      set_leftseconds(from.leftseconds());
    }
    if (from.has_mode()) {
      set_mode(from.mode());
    }
  }
}

void EnterRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.EnterRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterRoomResponse::CopyFrom(const EnterRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.EnterRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterRoomResponse::IsInitialized() const {
  return true;
}

void EnterRoomResponse::Swap(EnterRoomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterRoomResponse::InternalSwap(EnterRoomResponse* other) {
  players_.UnsafeArenaSwap(&other->players_);
  foods_.UnsafeArenaSwap(&other->foods_);
  planes_.UnsafeArenaSwap(&other->planes_);
  voice_token_.Swap(&other->voice_token_);
  std::swap(ms_and_id_, other->ms_and_id_);
  std::swap(leftseconds_, other->leftseconds_);
  std::swap(mode_, other->mode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterRoomResponse::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterRoomResponse

// optional .plane.MsAndId ms_and_id = 1;
bool EnterRoomResponse::has_ms_and_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnterRoomResponse::set_has_ms_and_id() {
  _has_bits_[0] |= 0x00000002u;
}
void EnterRoomResponse::clear_has_ms_and_id() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnterRoomResponse::clear_ms_and_id() {
  if (ms_and_id_ != NULL) ms_and_id_->::plane::MsAndId::Clear();
  clear_has_ms_and_id();
}
const ::plane::MsAndId& EnterRoomResponse::ms_and_id() const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.ms_and_id)
  return ms_and_id_ != NULL ? *ms_and_id_
                         : *::plane::MsAndId::internal_default_instance();
}
::plane::MsAndId* EnterRoomResponse::mutable_ms_and_id() {
  set_has_ms_and_id();
  if (ms_and_id_ == NULL) {
    ms_and_id_ = new ::plane::MsAndId;
  }
  // @@protoc_insertion_point(field_mutable:plane.EnterRoomResponse.ms_and_id)
  return ms_and_id_;
}
::plane::MsAndId* EnterRoomResponse::release_ms_and_id() {
  // @@protoc_insertion_point(field_release:plane.EnterRoomResponse.ms_and_id)
  clear_has_ms_and_id();
  ::plane::MsAndId* temp = ms_and_id_;
  ms_and_id_ = NULL;
  return temp;
}
void EnterRoomResponse::set_allocated_ms_and_id(::plane::MsAndId* ms_and_id) {
  delete ms_and_id_;
  ms_and_id_ = ms_and_id;
  if (ms_and_id) {
    set_has_ms_and_id();
  } else {
    clear_has_ms_and_id();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.EnterRoomResponse.ms_and_id)
}

// optional uint32 leftseconds = 2;
bool EnterRoomResponse::has_leftseconds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EnterRoomResponse::set_has_leftseconds() {
  _has_bits_[0] |= 0x00000004u;
}
void EnterRoomResponse::clear_has_leftseconds() {
  _has_bits_[0] &= ~0x00000004u;
}
void EnterRoomResponse::clear_leftseconds() {
  leftseconds_ = 0u;
  clear_has_leftseconds();
}
::google::protobuf::uint32 EnterRoomResponse::leftseconds() const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.leftseconds)
  return leftseconds_;
}
void EnterRoomResponse::set_leftseconds(::google::protobuf::uint32 value) {
  set_has_leftseconds();
  leftseconds_ = value;
  // @@protoc_insertion_point(field_set:plane.EnterRoomResponse.leftseconds)
}

// repeated .plane.PlayerInfo players = 3;
int EnterRoomResponse::players_size() const {
  return players_.size();
}
void EnterRoomResponse::clear_players() {
  players_.Clear();
}
const ::plane::PlayerInfo& EnterRoomResponse::players(int index) const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.players)
  return players_.Get(index);
}
::plane::PlayerInfo* EnterRoomResponse::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:plane.EnterRoomResponse.players)
  return players_.Mutable(index);
}
::plane::PlayerInfo* EnterRoomResponse::add_players() {
  // @@protoc_insertion_point(field_add:plane.EnterRoomResponse.players)
  return players_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::PlayerInfo >*
EnterRoomResponse::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:plane.EnterRoomResponse.players)
  return &players_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::PlayerInfo >&
EnterRoomResponse::players() const {
  // @@protoc_insertion_point(field_list:plane.EnterRoomResponse.players)
  return players_;
}

// repeated .plane.FoodMsg foods = 4;
int EnterRoomResponse::foods_size() const {
  return foods_.size();
}
void EnterRoomResponse::clear_foods() {
  foods_.Clear();
}
const ::plane::FoodMsg& EnterRoomResponse::foods(int index) const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.foods)
  return foods_.Get(index);
}
::plane::FoodMsg* EnterRoomResponse::mutable_foods(int index) {
  // @@protoc_insertion_point(field_mutable:plane.EnterRoomResponse.foods)
  return foods_.Mutable(index);
}
::plane::FoodMsg* EnterRoomResponse::add_foods() {
  // @@protoc_insertion_point(field_add:plane.EnterRoomResponse.foods)
  return foods_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::FoodMsg >*
EnterRoomResponse::mutable_foods() {
  // @@protoc_insertion_point(field_mutable_list:plane.EnterRoomResponse.foods)
  return &foods_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::FoodMsg >&
EnterRoomResponse::foods() const {
  // @@protoc_insertion_point(field_list:plane.EnterRoomResponse.foods)
  return foods_;
}

// repeated .plane.BatchAddEnergyPlaneBcMsg planes = 5;
int EnterRoomResponse::planes_size() const {
  return planes_.size();
}
void EnterRoomResponse::clear_planes() {
  planes_.Clear();
}
const ::plane::BatchAddEnergyPlaneBcMsg& EnterRoomResponse::planes(int index) const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.planes)
  return planes_.Get(index);
}
::plane::BatchAddEnergyPlaneBcMsg* EnterRoomResponse::mutable_planes(int index) {
  // @@protoc_insertion_point(field_mutable:plane.EnterRoomResponse.planes)
  return planes_.Mutable(index);
}
::plane::BatchAddEnergyPlaneBcMsg* EnterRoomResponse::add_planes() {
  // @@protoc_insertion_point(field_add:plane.EnterRoomResponse.planes)
  return planes_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::BatchAddEnergyPlaneBcMsg >*
EnterRoomResponse::mutable_planes() {
  // @@protoc_insertion_point(field_mutable_list:plane.EnterRoomResponse.planes)
  return &planes_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::BatchAddEnergyPlaneBcMsg >&
EnterRoomResponse::planes() const {
  // @@protoc_insertion_point(field_list:plane.EnterRoomResponse.planes)
  return planes_;
}

// optional uint32 mode = 6;
bool EnterRoomResponse::has_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void EnterRoomResponse::set_has_mode() {
  _has_bits_[0] |= 0x00000008u;
}
void EnterRoomResponse::clear_has_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
void EnterRoomResponse::clear_mode() {
  mode_ = 0u;
  clear_has_mode();
}
::google::protobuf::uint32 EnterRoomResponse::mode() const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.mode)
  return mode_;
}
void EnterRoomResponse::set_mode(::google::protobuf::uint32 value) {
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:plane.EnterRoomResponse.mode)
}

// optional string voice_token = 7;
bool EnterRoomResponse::has_voice_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnterRoomResponse::set_has_voice_token() {
  _has_bits_[0] |= 0x00000001u;
}
void EnterRoomResponse::clear_has_voice_token() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnterRoomResponse::clear_voice_token() {
  voice_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voice_token();
}
const ::std::string& EnterRoomResponse::voice_token() const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.voice_token)
  return voice_token_.GetNoArena();
}
void EnterRoomResponse::set_voice_token(const ::std::string& value) {
  set_has_voice_token();
  voice_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.EnterRoomResponse.voice_token)
}
#if LANG_CXX11
void EnterRoomResponse::set_voice_token(::std::string&& value) {
  set_has_voice_token();
  voice_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.EnterRoomResponse.voice_token)
}
#endif
void EnterRoomResponse::set_voice_token(const char* value) {
  set_has_voice_token();
  voice_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.EnterRoomResponse.voice_token)
}
void EnterRoomResponse::set_voice_token(const char* value, size_t size) {
  set_has_voice_token();
  voice_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.EnterRoomResponse.voice_token)
}
::std::string* EnterRoomResponse::mutable_voice_token() {
  set_has_voice_token();
  // @@protoc_insertion_point(field_mutable:plane.EnterRoomResponse.voice_token)
  return voice_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnterRoomResponse::release_voice_token() {
  // @@protoc_insertion_point(field_release:plane.EnterRoomResponse.voice_token)
  clear_has_voice_token();
  return voice_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnterRoomResponse::set_allocated_voice_token(::std::string* voice_token) {
  if (voice_token != NULL) {
    set_has_voice_token();
  } else {
    clear_has_voice_token();
  }
  voice_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice_token);
  // @@protoc_insertion_point(field_set_allocated:plane.EnterRoomResponse.voice_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterTeamMsg::kTeamidFieldNumber;
const int EnterTeamMsg::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterTeamMsg::EnterTeamMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.EnterTeamMsg)
}
EnterTeamMsg::EnterTeamMsg(const EnterTeamMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  teamid_ = from.teamid_;
  // @@protoc_insertion_point(copy_constructor:plane.EnterTeamMsg)
}

void EnterTeamMsg::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  teamid_ = 0u;
}

EnterTeamMsg::~EnterTeamMsg() {
  // @@protoc_insertion_point(destructor:plane.EnterTeamMsg)
  SharedDtor();
}

void EnterTeamMsg::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnterTeamMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterTeamMsg::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[1].descriptor;
}

const EnterTeamMsg& EnterTeamMsg::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterTeamMsg* EnterTeamMsg::New(::google::protobuf::Arena* arena) const {
  EnterTeamMsg* n = new EnterTeamMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterTeamMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.EnterTeamMsg)
  if (has_nickname()) {
    GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*nickname_.UnsafeRawStringPointer())->clear();
  }
  teamid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnterTeamMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.EnterTeamMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 teamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_teamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.EnterTeamMsg.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.EnterTeamMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.EnterTeamMsg)
  return false;
#undef DO_
}

void EnterTeamMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.EnterTeamMsg)
  // optional uint32 teamid = 1;
  if (has_teamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->teamid(), output);
  }

  // optional string nickname = 2;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.EnterTeamMsg.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.EnterTeamMsg)
}

::google::protobuf::uint8* EnterTeamMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.EnterTeamMsg)
  // optional uint32 teamid = 1;
  if (has_teamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->teamid(), target);
  }

  // optional string nickname = 2;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.EnterTeamMsg.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.EnterTeamMsg)
  return target;
}

size_t EnterTeamMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.EnterTeamMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string nickname = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional uint32 teamid = 1;
    if (has_teamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->teamid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterTeamMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.EnterTeamMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterTeamMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterTeamMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.EnterTeamMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.EnterTeamMsg)
    MergeFrom(*source);
  }
}

void EnterTeamMsg::MergeFrom(const EnterTeamMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.EnterTeamMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_nickname()) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (from.has_teamid()) {
      set_teamid(from.teamid());
    }
  }
}

void EnterTeamMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.EnterTeamMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterTeamMsg::CopyFrom(const EnterTeamMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.EnterTeamMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterTeamMsg::IsInitialized() const {
  return true;
}

void EnterTeamMsg::Swap(EnterTeamMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterTeamMsg::InternalSwap(EnterTeamMsg* other) {
  nickname_.Swap(&other->nickname_);
  std::swap(teamid_, other->teamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterTeamMsg::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterTeamMsg

// optional uint32 teamid = 1;
bool EnterTeamMsg::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnterTeamMsg::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
void EnterTeamMsg::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnterTeamMsg::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
::google::protobuf::uint32 EnterTeamMsg::teamid() const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamMsg.teamid)
  return teamid_;
}
void EnterTeamMsg::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:plane.EnterTeamMsg.teamid)
}

// optional string nickname = 2;
bool EnterTeamMsg::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnterTeamMsg::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
void EnterTeamMsg::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnterTeamMsg::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& EnterTeamMsg::nickname() const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamMsg.nickname)
  return nickname_.GetNoArena();
}
void EnterTeamMsg::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.EnterTeamMsg.nickname)
}
#if LANG_CXX11
void EnterTeamMsg::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.EnterTeamMsg.nickname)
}
#endif
void EnterTeamMsg::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.EnterTeamMsg.nickname)
}
void EnterTeamMsg::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.EnterTeamMsg.nickname)
}
::std::string* EnterTeamMsg::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:plane.EnterTeamMsg.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnterTeamMsg::release_nickname() {
  // @@protoc_insertion_point(field_release:plane.EnterTeamMsg.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnterTeamMsg::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:plane.EnterTeamMsg.nickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneTeamMember::kAccountFieldNumber;
const int OneTeamMember::kUidFieldNumber;
const int OneTeamMember::kHeaderImgidFieldNumber;
const int OneTeamMember::kHeaderImgurlFieldNumber;
const int OneTeamMember::kSexFieldNumber;
const int OneTeamMember::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneTeamMember::OneTeamMember()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OneTeamMember)
}
OneTeamMember::OneTeamMember(const OneTeamMember& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  header_imgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_header_imgurl()) {
    header_imgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.header_imgurl_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&uid_, &from.uid_,
    reinterpret_cast<char*>(&sex_) -
    reinterpret_cast<char*>(&uid_) + sizeof(sex_));
  // @@protoc_insertion_point(copy_constructor:plane.OneTeamMember)
}

void OneTeamMember::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_imgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, reinterpret_cast<char*>(&sex_) -
    reinterpret_cast<char*>(&uid_) + sizeof(sex_));
}

OneTeamMember::~OneTeamMember() {
  // @@protoc_insertion_point(destructor:plane.OneTeamMember)
  SharedDtor();
}

void OneTeamMember::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_imgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OneTeamMember::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneTeamMember::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[2].descriptor;
}

const OneTeamMember& OneTeamMember::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneTeamMember* OneTeamMember::New(::google::protobuf::Arena* arena) const {
  OneTeamMember* n = new OneTeamMember;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneTeamMember::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OneTeamMember)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_header_imgurl()) {
      GOOGLE_DCHECK(!header_imgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*header_imgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_nickname()) {
      GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*nickname_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 56u) {
    ::memset(&uid_, 0, reinterpret_cast<char*>(&sex_) -
      reinterpret_cast<char*>(&uid_) + sizeof(sex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneTeamMember::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OneTeamMember)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.OneTeamMember.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 uid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 header_imgid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_header_imgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &header_imgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string header_imgurl = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_header_imgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->header_imgurl().data(), this->header_imgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.OneTeamMember.header_imgurl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sex = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.OneTeamMember.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OneTeamMember)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OneTeamMember)
  return false;
#undef DO_
}

void OneTeamMember::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OneTeamMember)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneTeamMember.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional uint32 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uid(), output);
  }

  // optional uint32 header_imgid = 3;
  if (has_header_imgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->header_imgid(), output);
  }

  // optional string header_imgurl = 4;
  if (has_header_imgurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->header_imgurl().data(), this->header_imgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneTeamMember.header_imgurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->header_imgurl(), output);
  }

  // optional uint32 sex = 5;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sex(), output);
  }

  // optional string nickname = 6;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneTeamMember.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->nickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OneTeamMember)
}

::google::protobuf::uint8* OneTeamMember::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OneTeamMember)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneTeamMember.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional uint32 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uid(), target);
  }

  // optional uint32 header_imgid = 3;
  if (has_header_imgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->header_imgid(), target);
  }

  // optional string header_imgurl = 4;
  if (has_header_imgurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->header_imgurl().data(), this->header_imgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneTeamMember.header_imgurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->header_imgurl(), target);
  }

  // optional uint32 sex = 5;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sex(), target);
  }

  // optional string nickname = 6;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneTeamMember.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->nickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OneTeamMember)
  return target;
}

size_t OneTeamMember::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OneTeamMember)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string header_imgurl = 4;
    if (has_header_imgurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->header_imgurl());
    }

    // optional string nickname = 6;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional uint32 uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // optional uint32 header_imgid = 3;
    if (has_header_imgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->header_imgid());
    }

    // optional uint32 sex = 5;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sex());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneTeamMember::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OneTeamMember)
  GOOGLE_DCHECK_NE(&from, this);
  const OneTeamMember* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneTeamMember>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OneTeamMember)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OneTeamMember)
    MergeFrom(*source);
  }
}

void OneTeamMember::MergeFrom(const OneTeamMember& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OneTeamMember)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 63u) {
    if (from.has_account()) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (from.has_header_imgurl()) {
      set_has_header_imgurl();
      header_imgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.header_imgurl_);
    }
    if (from.has_nickname()) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_header_imgid()) {
      set_header_imgid(from.header_imgid());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
  }
}

void OneTeamMember::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OneTeamMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneTeamMember::CopyFrom(const OneTeamMember& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OneTeamMember)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneTeamMember::IsInitialized() const {
  return true;
}

void OneTeamMember::Swap(OneTeamMember* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneTeamMember::InternalSwap(OneTeamMember* other) {
  account_.Swap(&other->account_);
  header_imgurl_.Swap(&other->header_imgurl_);
  nickname_.Swap(&other->nickname_);
  std::swap(uid_, other->uid_);
  std::swap(header_imgid_, other->header_imgid_);
  std::swap(sex_, other->sex_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneTeamMember::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneTeamMember

// optional string account = 1;
bool OneTeamMember::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneTeamMember::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void OneTeamMember::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneTeamMember::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& OneTeamMember::account() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamMember.account)
  return account_.GetNoArena();
}
void OneTeamMember::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneTeamMember.account)
}
#if LANG_CXX11
void OneTeamMember::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneTeamMember.account)
}
#endif
void OneTeamMember::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneTeamMember.account)
}
void OneTeamMember::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneTeamMember.account)
}
::std::string* OneTeamMember::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:plane.OneTeamMember.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OneTeamMember::release_account() {
  // @@protoc_insertion_point(field_release:plane.OneTeamMember.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OneTeamMember::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:plane.OneTeamMember.account)
}

// optional uint32 uid = 2;
bool OneTeamMember::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OneTeamMember::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
void OneTeamMember::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
void OneTeamMember::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
::google::protobuf::uint32 OneTeamMember::uid() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamMember.uid)
  return uid_;
}
void OneTeamMember::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneTeamMember.uid)
}

// optional uint32 header_imgid = 3;
bool OneTeamMember::has_header_imgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OneTeamMember::set_has_header_imgid() {
  _has_bits_[0] |= 0x00000010u;
}
void OneTeamMember::clear_has_header_imgid() {
  _has_bits_[0] &= ~0x00000010u;
}
void OneTeamMember::clear_header_imgid() {
  header_imgid_ = 0u;
  clear_has_header_imgid();
}
::google::protobuf::uint32 OneTeamMember::header_imgid() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamMember.header_imgid)
  return header_imgid_;
}
void OneTeamMember::set_header_imgid(::google::protobuf::uint32 value) {
  set_has_header_imgid();
  header_imgid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneTeamMember.header_imgid)
}

// optional string header_imgurl = 4;
bool OneTeamMember::has_header_imgurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OneTeamMember::set_has_header_imgurl() {
  _has_bits_[0] |= 0x00000002u;
}
void OneTeamMember::clear_has_header_imgurl() {
  _has_bits_[0] &= ~0x00000002u;
}
void OneTeamMember::clear_header_imgurl() {
  header_imgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_header_imgurl();
}
const ::std::string& OneTeamMember::header_imgurl() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamMember.header_imgurl)
  return header_imgurl_.GetNoArena();
}
void OneTeamMember::set_header_imgurl(const ::std::string& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneTeamMember.header_imgurl)
}
#if LANG_CXX11
void OneTeamMember::set_header_imgurl(::std::string&& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneTeamMember.header_imgurl)
}
#endif
void OneTeamMember::set_header_imgurl(const char* value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneTeamMember.header_imgurl)
}
void OneTeamMember::set_header_imgurl(const char* value, size_t size) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneTeamMember.header_imgurl)
}
::std::string* OneTeamMember::mutable_header_imgurl() {
  set_has_header_imgurl();
  // @@protoc_insertion_point(field_mutable:plane.OneTeamMember.header_imgurl)
  return header_imgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OneTeamMember::release_header_imgurl() {
  // @@protoc_insertion_point(field_release:plane.OneTeamMember.header_imgurl)
  clear_has_header_imgurl();
  return header_imgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OneTeamMember::set_allocated_header_imgurl(::std::string* header_imgurl) {
  if (header_imgurl != NULL) {
    set_has_header_imgurl();
  } else {
    clear_has_header_imgurl();
  }
  header_imgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header_imgurl);
  // @@protoc_insertion_point(field_set_allocated:plane.OneTeamMember.header_imgurl)
}

// optional uint32 sex = 5;
bool OneTeamMember::has_sex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void OneTeamMember::set_has_sex() {
  _has_bits_[0] |= 0x00000020u;
}
void OneTeamMember::clear_has_sex() {
  _has_bits_[0] &= ~0x00000020u;
}
void OneTeamMember::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
::google::protobuf::uint32 OneTeamMember::sex() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamMember.sex)
  return sex_;
}
void OneTeamMember::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:plane.OneTeamMember.sex)
}

// optional string nickname = 6;
bool OneTeamMember::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OneTeamMember::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
void OneTeamMember::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
void OneTeamMember::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& OneTeamMember::nickname() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamMember.nickname)
  return nickname_.GetNoArena();
}
void OneTeamMember::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneTeamMember.nickname)
}
#if LANG_CXX11
void OneTeamMember::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneTeamMember.nickname)
}
#endif
void OneTeamMember::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneTeamMember.nickname)
}
void OneTeamMember::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneTeamMember.nickname)
}
::std::string* OneTeamMember::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:plane.OneTeamMember.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OneTeamMember::release_nickname() {
  // @@protoc_insertion_point(field_release:plane.OneTeamMember.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OneTeamMember::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:plane.OneTeamMember.nickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddTeamMemberMsg::kPosFieldNumber;
const int AddTeamMemberMsg::kMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddTeamMemberMsg::AddTeamMemberMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.AddTeamMemberMsg)
}
AddTeamMemberMsg::AddTeamMemberMsg(const AddTeamMemberMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_member()) {
    member_ = new ::plane::OneTeamMember(*from.member_);
  } else {
    member_ = NULL;
  }
  pos_ = from.pos_;
  // @@protoc_insertion_point(copy_constructor:plane.AddTeamMemberMsg)
}

void AddTeamMemberMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&member_, 0, reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&member_) + sizeof(pos_));
}

AddTeamMemberMsg::~AddTeamMemberMsg() {
  // @@protoc_insertion_point(destructor:plane.AddTeamMemberMsg)
  SharedDtor();
}

void AddTeamMemberMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete member_;
  }
}

void AddTeamMemberMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddTeamMemberMsg::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[3].descriptor;
}

const AddTeamMemberMsg& AddTeamMemberMsg::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddTeamMemberMsg* AddTeamMemberMsg::New(::google::protobuf::Arena* arena) const {
  AddTeamMemberMsg* n = new AddTeamMemberMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddTeamMemberMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.AddTeamMemberMsg)
  if (has_member()) {
    GOOGLE_DCHECK(member_ != NULL);
    member_->::plane::OneTeamMember::Clear();
  }
  pos_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddTeamMemberMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.AddTeamMemberMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pos = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .plane.OneTeamMember member = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.AddTeamMemberMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.AddTeamMemberMsg)
  return false;
#undef DO_
}

void AddTeamMemberMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.AddTeamMemberMsg)
  // optional uint32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional .plane.OneTeamMember member = 2;
  if (has_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->member_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.AddTeamMemberMsg)
}

::google::protobuf::uint8* AddTeamMemberMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.AddTeamMemberMsg)
  // optional uint32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional .plane.OneTeamMember member = 2;
  if (has_member()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->member_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.AddTeamMemberMsg)
  return target;
}

size_t AddTeamMemberMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.AddTeamMemberMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .plane.OneTeamMember member = 2;
    if (has_member()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->member_);
    }

    // optional uint32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddTeamMemberMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.AddTeamMemberMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AddTeamMemberMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddTeamMemberMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.AddTeamMemberMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.AddTeamMemberMsg)
    MergeFrom(*source);
  }
}

void AddTeamMemberMsg::MergeFrom(const AddTeamMemberMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.AddTeamMemberMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_member()) {
      mutable_member()->::plane::OneTeamMember::MergeFrom(from.member());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
}

void AddTeamMemberMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.AddTeamMemberMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddTeamMemberMsg::CopyFrom(const AddTeamMemberMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.AddTeamMemberMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddTeamMemberMsg::IsInitialized() const {
  return true;
}

void AddTeamMemberMsg::Swap(AddTeamMemberMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddTeamMemberMsg::InternalSwap(AddTeamMemberMsg* other) {
  std::swap(member_, other->member_);
  std::swap(pos_, other->pos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddTeamMemberMsg::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddTeamMemberMsg

// optional uint32 pos = 1;
bool AddTeamMemberMsg::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AddTeamMemberMsg::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void AddTeamMemberMsg::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void AddTeamMemberMsg::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
::google::protobuf::uint32 AddTeamMemberMsg::pos() const {
  // @@protoc_insertion_point(field_get:plane.AddTeamMemberMsg.pos)
  return pos_;
}
void AddTeamMemberMsg::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:plane.AddTeamMemberMsg.pos)
}

// optional .plane.OneTeamMember member = 2;
bool AddTeamMemberMsg::has_member() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddTeamMemberMsg::set_has_member() {
  _has_bits_[0] |= 0x00000001u;
}
void AddTeamMemberMsg::clear_has_member() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddTeamMemberMsg::clear_member() {
  if (member_ != NULL) member_->::plane::OneTeamMember::Clear();
  clear_has_member();
}
const ::plane::OneTeamMember& AddTeamMemberMsg::member() const {
  // @@protoc_insertion_point(field_get:plane.AddTeamMemberMsg.member)
  return member_ != NULL ? *member_
                         : *::plane::OneTeamMember::internal_default_instance();
}
::plane::OneTeamMember* AddTeamMemberMsg::mutable_member() {
  set_has_member();
  if (member_ == NULL) {
    member_ = new ::plane::OneTeamMember;
  }
  // @@protoc_insertion_point(field_mutable:plane.AddTeamMemberMsg.member)
  return member_;
}
::plane::OneTeamMember* AddTeamMemberMsg::release_member() {
  // @@protoc_insertion_point(field_release:plane.AddTeamMemberMsg.member)
  clear_has_member();
  ::plane::OneTeamMember* temp = member_;
  member_ = NULL;
  return temp;
}
void AddTeamMemberMsg::set_allocated_member(::plane::OneTeamMember* member) {
  delete member_;
  member_ = member;
  if (member) {
    set_has_member();
  } else {
    clear_has_member();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.AddTeamMemberMsg.member)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveTeamMemberMsg::kPosFieldNumber;
const int RemoveTeamMemberMsg::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveTeamMemberMsg::RemoveTeamMemberMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.RemoveTeamMemberMsg)
}
RemoveTeamMemberMsg::RemoveTeamMemberMsg(const RemoveTeamMemberMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pos_, &from.pos_,
    reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&pos_) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:plane.RemoveTeamMemberMsg)
}

void RemoveTeamMemberMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pos_, 0, reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&pos_) + sizeof(uid_));
}

RemoveTeamMemberMsg::~RemoveTeamMemberMsg() {
  // @@protoc_insertion_point(destructor:plane.RemoveTeamMemberMsg)
  SharedDtor();
}

void RemoveTeamMemberMsg::SharedDtor() {
}

void RemoveTeamMemberMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveTeamMemberMsg::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[4].descriptor;
}

const RemoveTeamMemberMsg& RemoveTeamMemberMsg::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoveTeamMemberMsg* RemoveTeamMemberMsg::New(::google::protobuf::Arena* arena) const {
  RemoveTeamMemberMsg* n = new RemoveTeamMemberMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveTeamMemberMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.RemoveTeamMemberMsg)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&pos_, 0, reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&pos_) + sizeof(uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RemoveTeamMemberMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.RemoveTeamMemberMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pos = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 uid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.RemoveTeamMemberMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.RemoveTeamMemberMsg)
  return false;
#undef DO_
}

void RemoveTeamMemberMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.RemoveTeamMemberMsg)
  // optional uint32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional uint32 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.RemoveTeamMemberMsg)
}

::google::protobuf::uint8* RemoveTeamMemberMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.RemoveTeamMemberMsg)
  // optional uint32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional uint32 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.RemoveTeamMemberMsg)
  return target;
}

size_t RemoveTeamMemberMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.RemoveTeamMemberMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveTeamMemberMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.RemoveTeamMemberMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveTeamMemberMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveTeamMemberMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.RemoveTeamMemberMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.RemoveTeamMemberMsg)
    MergeFrom(*source);
  }
}

void RemoveTeamMemberMsg::MergeFrom(const RemoveTeamMemberMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.RemoveTeamMemberMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
}

void RemoveTeamMemberMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.RemoveTeamMemberMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveTeamMemberMsg::CopyFrom(const RemoveTeamMemberMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.RemoveTeamMemberMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveTeamMemberMsg::IsInitialized() const {
  return true;
}

void RemoveTeamMemberMsg::Swap(RemoveTeamMemberMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveTeamMemberMsg::InternalSwap(RemoveTeamMemberMsg* other) {
  std::swap(pos_, other->pos_);
  std::swap(uid_, other->uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveTeamMemberMsg::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveTeamMemberMsg

// optional uint32 pos = 1;
bool RemoveTeamMemberMsg::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RemoveTeamMemberMsg::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
void RemoveTeamMemberMsg::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
void RemoveTeamMemberMsg::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
::google::protobuf::uint32 RemoveTeamMemberMsg::pos() const {
  // @@protoc_insertion_point(field_get:plane.RemoveTeamMemberMsg.pos)
  return pos_;
}
void RemoveTeamMemberMsg::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:plane.RemoveTeamMemberMsg.pos)
}

// optional uint32 uid = 2;
bool RemoveTeamMemberMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RemoveTeamMemberMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
void RemoveTeamMemberMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
void RemoveTeamMemberMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
::google::protobuf::uint32 RemoveTeamMemberMsg::uid() const {
  // @@protoc_insertion_point(field_get:plane.RemoveTeamMemberMsg.uid)
  return uid_;
}
void RemoveTeamMemberMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.RemoveTeamMemberMsg.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EnterTeamResponse::kTeamnameFieldNumber;
const int EnterTeamResponse::kTotalNumFieldNumber;
const int EnterTeamResponse::kLeaderUidFieldNumber;
const int EnterTeamResponse::kMembersFieldNumber;
const int EnterTeamResponse::kVoiceTokenFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EnterTeamResponse::EnterTeamResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.EnterTeamResponse)
}
EnterTeamResponse::EnterTeamResponse(const EnterTeamResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  teamname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_teamname()) {
    teamname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teamname_);
  }
  voice_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_voice_token()) {
    voice_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_token_);
  }
  ::memcpy(&total_num_, &from.total_num_,
    reinterpret_cast<char*>(&leader_uid_) -
    reinterpret_cast<char*>(&total_num_) + sizeof(leader_uid_));
  // @@protoc_insertion_point(copy_constructor:plane.EnterTeamResponse)
}

void EnterTeamResponse::SharedCtor() {
  _cached_size_ = 0;
  teamname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voice_token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_num_, 0, reinterpret_cast<char*>(&leader_uid_) -
    reinterpret_cast<char*>(&total_num_) + sizeof(leader_uid_));
}

EnterTeamResponse::~EnterTeamResponse() {
  // @@protoc_insertion_point(destructor:plane.EnterTeamResponse)
  SharedDtor();
}

void EnterTeamResponse::SharedDtor() {
  teamname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voice_token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EnterTeamResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EnterTeamResponse::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[5].descriptor;
}

const EnterTeamResponse& EnterTeamResponse::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

EnterTeamResponse* EnterTeamResponse::New(::google::protobuf::Arena* arena) const {
  EnterTeamResponse* n = new EnterTeamResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void EnterTeamResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.EnterTeamResponse)
  members_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    if (has_teamname()) {
      GOOGLE_DCHECK(!teamname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*teamname_.UnsafeRawStringPointer())->clear();
    }
    if (has_voice_token()) {
      GOOGLE_DCHECK(!voice_token_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*voice_token_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    ::memset(&total_num_, 0, reinterpret_cast<char*>(&leader_uid_) -
      reinterpret_cast<char*>(&total_num_) + sizeof(leader_uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool EnterTeamResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.EnterTeamResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string teamname = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_teamname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->teamname().data(), this->teamname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.EnterTeamResponse.teamname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_num = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_total_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 leader_uid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_leader_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leader_uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .plane.OneTeamMember members = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(34u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional string voice_token = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voice_token()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->voice_token().data(), this->voice_token().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.EnterTeamResponse.voice_token");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.EnterTeamResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.EnterTeamResponse)
  return false;
#undef DO_
}

void EnterTeamResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.EnterTeamResponse)
  // optional string teamname = 1;
  if (has_teamname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->teamname().data(), this->teamname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.EnterTeamResponse.teamname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->teamname(), output);
  }

  // optional uint32 total_num = 2;
  if (has_total_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->total_num(), output);
  }

  // optional uint32 leader_uid = 3;
  if (has_leader_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->leader_uid(), output);
  }

  // repeated .plane.OneTeamMember members = 4;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->members(i), output);
  }

  // optional string voice_token = 5;
  if (has_voice_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voice_token().data(), this->voice_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.EnterTeamResponse.voice_token");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->voice_token(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.EnterTeamResponse)
}

::google::protobuf::uint8* EnterTeamResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.EnterTeamResponse)
  // optional string teamname = 1;
  if (has_teamname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->teamname().data(), this->teamname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.EnterTeamResponse.teamname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->teamname(), target);
  }

  // optional uint32 total_num = 2;
  if (has_total_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->total_num(), target);
  }

  // optional uint32 leader_uid = 3;
  if (has_leader_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->leader_uid(), target);
  }

  // repeated .plane.OneTeamMember members = 4;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->members(i), false, target);
  }

  // optional string voice_token = 5;
  if (has_voice_token()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voice_token().data(), this->voice_token().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.EnterTeamResponse.voice_token");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->voice_token(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.EnterTeamResponse)
  return target;
}

size_t EnterTeamResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.EnterTeamResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OneTeamMember members = 4;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional string teamname = 1;
    if (has_teamname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->teamname());
    }

    // optional string voice_token = 5;
    if (has_voice_token()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->voice_token());
    }

    // optional uint32 total_num = 2;
    if (has_total_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_num());
    }

    // optional uint32 leader_uid = 3;
    if (has_leader_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->leader_uid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EnterTeamResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.EnterTeamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const EnterTeamResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const EnterTeamResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.EnterTeamResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.EnterTeamResponse)
    MergeFrom(*source);
  }
}

void EnterTeamResponse::MergeFrom(const EnterTeamResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.EnterTeamResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  members_.MergeFrom(from.members_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_teamname()) {
      set_has_teamname();
      teamname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.teamname_);
    }
    if (from.has_voice_token()) {
      set_has_voice_token();
      voice_token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voice_token_);
    }
    if (from.has_total_num()) {
      set_total_num(from.total_num());
    }
    if (from.has_leader_uid()) {
      set_leader_uid(from.leader_uid());
    }
  }
}

void EnterTeamResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.EnterTeamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnterTeamResponse::CopyFrom(const EnterTeamResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.EnterTeamResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnterTeamResponse::IsInitialized() const {
  return true;
}

void EnterTeamResponse::Swap(EnterTeamResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void EnterTeamResponse::InternalSwap(EnterTeamResponse* other) {
  members_.UnsafeArenaSwap(&other->members_);
  teamname_.Swap(&other->teamname_);
  voice_token_.Swap(&other->voice_token_);
  std::swap(total_num_, other->total_num_);
  std::swap(leader_uid_, other->leader_uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EnterTeamResponse::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterTeamResponse

// optional string teamname = 1;
bool EnterTeamResponse::has_teamname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void EnterTeamResponse::set_has_teamname() {
  _has_bits_[0] |= 0x00000001u;
}
void EnterTeamResponse::clear_has_teamname() {
  _has_bits_[0] &= ~0x00000001u;
}
void EnterTeamResponse::clear_teamname() {
  teamname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_teamname();
}
const ::std::string& EnterTeamResponse::teamname() const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamResponse.teamname)
  return teamname_.GetNoArena();
}
void EnterTeamResponse::set_teamname(const ::std::string& value) {
  set_has_teamname();
  teamname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.EnterTeamResponse.teamname)
}
#if LANG_CXX11
void EnterTeamResponse::set_teamname(::std::string&& value) {
  set_has_teamname();
  teamname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.EnterTeamResponse.teamname)
}
#endif
void EnterTeamResponse::set_teamname(const char* value) {
  set_has_teamname();
  teamname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.EnterTeamResponse.teamname)
}
void EnterTeamResponse::set_teamname(const char* value, size_t size) {
  set_has_teamname();
  teamname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.EnterTeamResponse.teamname)
}
::std::string* EnterTeamResponse::mutable_teamname() {
  set_has_teamname();
  // @@protoc_insertion_point(field_mutable:plane.EnterTeamResponse.teamname)
  return teamname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnterTeamResponse::release_teamname() {
  // @@protoc_insertion_point(field_release:plane.EnterTeamResponse.teamname)
  clear_has_teamname();
  return teamname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnterTeamResponse::set_allocated_teamname(::std::string* teamname) {
  if (teamname != NULL) {
    set_has_teamname();
  } else {
    clear_has_teamname();
  }
  teamname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), teamname);
  // @@protoc_insertion_point(field_set_allocated:plane.EnterTeamResponse.teamname)
}

// optional uint32 total_num = 2;
bool EnterTeamResponse::has_total_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void EnterTeamResponse::set_has_total_num() {
  _has_bits_[0] |= 0x00000004u;
}
void EnterTeamResponse::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000004u;
}
void EnterTeamResponse::clear_total_num() {
  total_num_ = 0u;
  clear_has_total_num();
}
::google::protobuf::uint32 EnterTeamResponse::total_num() const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamResponse.total_num)
  return total_num_;
}
void EnterTeamResponse::set_total_num(::google::protobuf::uint32 value) {
  set_has_total_num();
  total_num_ = value;
  // @@protoc_insertion_point(field_set:plane.EnterTeamResponse.total_num)
}

// optional uint32 leader_uid = 3;
bool EnterTeamResponse::has_leader_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void EnterTeamResponse::set_has_leader_uid() {
  _has_bits_[0] |= 0x00000008u;
}
void EnterTeamResponse::clear_has_leader_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
void EnterTeamResponse::clear_leader_uid() {
  leader_uid_ = 0u;
  clear_has_leader_uid();
}
::google::protobuf::uint32 EnterTeamResponse::leader_uid() const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamResponse.leader_uid)
  return leader_uid_;
}
void EnterTeamResponse::set_leader_uid(::google::protobuf::uint32 value) {
  set_has_leader_uid();
  leader_uid_ = value;
  // @@protoc_insertion_point(field_set:plane.EnterTeamResponse.leader_uid)
}

// repeated .plane.OneTeamMember members = 4;
int EnterTeamResponse::members_size() const {
  return members_.size();
}
void EnterTeamResponse::clear_members() {
  members_.Clear();
}
const ::plane::OneTeamMember& EnterTeamResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamResponse.members)
  return members_.Get(index);
}
::plane::OneTeamMember* EnterTeamResponse::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:plane.EnterTeamResponse.members)
  return members_.Mutable(index);
}
::plane::OneTeamMember* EnterTeamResponse::add_members() {
  // @@protoc_insertion_point(field_add:plane.EnterTeamResponse.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneTeamMember >*
EnterTeamResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:plane.EnterTeamResponse.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneTeamMember >&
EnterTeamResponse::members() const {
  // @@protoc_insertion_point(field_list:plane.EnterTeamResponse.members)
  return members_;
}

// optional string voice_token = 5;
bool EnterTeamResponse::has_voice_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void EnterTeamResponse::set_has_voice_token() {
  _has_bits_[0] |= 0x00000002u;
}
void EnterTeamResponse::clear_has_voice_token() {
  _has_bits_[0] &= ~0x00000002u;
}
void EnterTeamResponse::clear_voice_token() {
  voice_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voice_token();
}
const ::std::string& EnterTeamResponse::voice_token() const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamResponse.voice_token)
  return voice_token_.GetNoArena();
}
void EnterTeamResponse::set_voice_token(const ::std::string& value) {
  set_has_voice_token();
  voice_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.EnterTeamResponse.voice_token)
}
#if LANG_CXX11
void EnterTeamResponse::set_voice_token(::std::string&& value) {
  set_has_voice_token();
  voice_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.EnterTeamResponse.voice_token)
}
#endif
void EnterTeamResponse::set_voice_token(const char* value) {
  set_has_voice_token();
  voice_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.EnterTeamResponse.voice_token)
}
void EnterTeamResponse::set_voice_token(const char* value, size_t size) {
  set_has_voice_token();
  voice_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.EnterTeamResponse.voice_token)
}
::std::string* EnterTeamResponse::mutable_voice_token() {
  set_has_voice_token();
  // @@protoc_insertion_point(field_mutable:plane.EnterTeamResponse.voice_token)
  return voice_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EnterTeamResponse::release_voice_token() {
  // @@protoc_insertion_point(field_release:plane.EnterTeamResponse.voice_token)
  clear_has_voice_token();
  return voice_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EnterTeamResponse::set_allocated_voice_token(::std::string* voice_token) {
  if (voice_token != NULL) {
    set_has_voice_token();
  } else {
    clear_has_voice_token();
  }
  voice_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice_token);
  // @@protoc_insertion_point(field_set_allocated:plane.EnterTeamResponse.voice_token)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneFriendData::kAccountFieldNumber;
const int OneFriendData::kUidFieldNumber;
const int OneFriendData::kHeaderImgidFieldNumber;
const int OneFriendData::kHeaderImgurlFieldNumber;
const int OneFriendData::kSexFieldNumber;
const int OneFriendData::kLevelFieldNumber;
const int OneFriendData::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneFriendData::OneFriendData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OneFriendData)
}
OneFriendData::OneFriendData(const OneFriendData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  header_imgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_header_imgurl()) {
    header_imgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.header_imgurl_);
  }
  ::memcpy(&uid_, &from.uid_,
    reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&uid_) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:plane.OneFriendData)
}

void OneFriendData::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_imgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&uid_) + sizeof(state_));
}

OneFriendData::~OneFriendData() {
  // @@protoc_insertion_point(destructor:plane.OneFriendData)
  SharedDtor();
}

void OneFriendData::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_imgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OneFriendData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneFriendData::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[6].descriptor;
}

const OneFriendData& OneFriendData::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneFriendData* OneFriendData::New(::google::protobuf::Arena* arena) const {
  OneFriendData* n = new OneFriendData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneFriendData::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OneFriendData)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_header_imgurl()) {
      GOOGLE_DCHECK(!header_imgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*header_imgurl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 124u) {
    ::memset(&uid_, 0, reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&uid_) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneFriendData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OneFriendData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.OneFriendData.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 uid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 header_imgid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_header_imgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &header_imgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string header_imgurl = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_header_imgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->header_imgurl().data(), this->header_imgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.OneFriendData.header_imgurl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sex = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(48u)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 state = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(56u)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OneFriendData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OneFriendData)
  return false;
#undef DO_
}

void OneFriendData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OneFriendData)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneFriendData.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional uint32 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->uid(), output);
  }

  // optional uint32 header_imgid = 3;
  if (has_header_imgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->header_imgid(), output);
  }

  // optional string header_imgurl = 4;
  if (has_header_imgurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->header_imgurl().data(), this->header_imgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneFriendData.header_imgurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->header_imgurl(), output);
  }

  // optional uint32 sex = 5;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sex(), output);
  }

  // optional uint32 level = 6;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->level(), output);
  }

  // optional uint32 state = 7;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OneFriendData)
}

::google::protobuf::uint8* OneFriendData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OneFriendData)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneFriendData.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional uint32 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->uid(), target);
  }

  // optional uint32 header_imgid = 3;
  if (has_header_imgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->header_imgid(), target);
  }

  // optional string header_imgurl = 4;
  if (has_header_imgurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->header_imgurl().data(), this->header_imgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneFriendData.header_imgurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->header_imgurl(), target);
  }

  // optional uint32 sex = 5;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sex(), target);
  }

  // optional uint32 level = 6;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->level(), target);
  }

  // optional uint32 state = 7;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OneFriendData)
  return target;
}

size_t OneFriendData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OneFriendData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string header_imgurl = 4;
    if (has_header_imgurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->header_imgurl());
    }

    // optional uint32 uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // optional uint32 header_imgid = 3;
    if (has_header_imgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->header_imgid());
    }

    // optional uint32 sex = 5;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sex());
    }

    // optional uint32 level = 6;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 state = 7;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneFriendData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OneFriendData)
  GOOGLE_DCHECK_NE(&from, this);
  const OneFriendData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneFriendData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OneFriendData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OneFriendData)
    MergeFrom(*source);
  }
}

void OneFriendData::MergeFrom(const OneFriendData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OneFriendData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 127u) {
    if (from.has_account()) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (from.has_header_imgurl()) {
      set_has_header_imgurl();
      header_imgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.header_imgurl_);
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_header_imgid()) {
      set_header_imgid(from.header_imgid());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
}

void OneFriendData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OneFriendData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneFriendData::CopyFrom(const OneFriendData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OneFriendData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneFriendData::IsInitialized() const {
  return true;
}

void OneFriendData::Swap(OneFriendData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneFriendData::InternalSwap(OneFriendData* other) {
  account_.Swap(&other->account_);
  header_imgurl_.Swap(&other->header_imgurl_);
  std::swap(uid_, other->uid_);
  std::swap(header_imgid_, other->header_imgid_);
  std::swap(sex_, other->sex_);
  std::swap(level_, other->level_);
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneFriendData::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneFriendData

// optional string account = 1;
bool OneFriendData::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneFriendData::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void OneFriendData::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneFriendData::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& OneFriendData::account() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.account)
  return account_.GetNoArena();
}
void OneFriendData::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneFriendData.account)
}
#if LANG_CXX11
void OneFriendData::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneFriendData.account)
}
#endif
void OneFriendData::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneFriendData.account)
}
void OneFriendData::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneFriendData.account)
}
::std::string* OneFriendData::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:plane.OneFriendData.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OneFriendData::release_account() {
  // @@protoc_insertion_point(field_release:plane.OneFriendData.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OneFriendData::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:plane.OneFriendData.account)
}

// optional uint32 uid = 2;
bool OneFriendData::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OneFriendData::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
void OneFriendData::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
void OneFriendData::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
::google::protobuf::uint32 OneFriendData::uid() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.uid)
  return uid_;
}
void OneFriendData::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFriendData.uid)
}

// optional uint32 header_imgid = 3;
bool OneFriendData::has_header_imgid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OneFriendData::set_has_header_imgid() {
  _has_bits_[0] |= 0x00000008u;
}
void OneFriendData::clear_has_header_imgid() {
  _has_bits_[0] &= ~0x00000008u;
}
void OneFriendData::clear_header_imgid() {
  header_imgid_ = 0u;
  clear_has_header_imgid();
}
::google::protobuf::uint32 OneFriendData::header_imgid() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.header_imgid)
  return header_imgid_;
}
void OneFriendData::set_header_imgid(::google::protobuf::uint32 value) {
  set_has_header_imgid();
  header_imgid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFriendData.header_imgid)
}

// optional string header_imgurl = 4;
bool OneFriendData::has_header_imgurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OneFriendData::set_has_header_imgurl() {
  _has_bits_[0] |= 0x00000002u;
}
void OneFriendData::clear_has_header_imgurl() {
  _has_bits_[0] &= ~0x00000002u;
}
void OneFriendData::clear_header_imgurl() {
  header_imgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_header_imgurl();
}
const ::std::string& OneFriendData::header_imgurl() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.header_imgurl)
  return header_imgurl_.GetNoArena();
}
void OneFriendData::set_header_imgurl(const ::std::string& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneFriendData.header_imgurl)
}
#if LANG_CXX11
void OneFriendData::set_header_imgurl(::std::string&& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneFriendData.header_imgurl)
}
#endif
void OneFriendData::set_header_imgurl(const char* value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneFriendData.header_imgurl)
}
void OneFriendData::set_header_imgurl(const char* value, size_t size) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneFriendData.header_imgurl)
}
::std::string* OneFriendData::mutable_header_imgurl() {
  set_has_header_imgurl();
  // @@protoc_insertion_point(field_mutable:plane.OneFriendData.header_imgurl)
  return header_imgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OneFriendData::release_header_imgurl() {
  // @@protoc_insertion_point(field_release:plane.OneFriendData.header_imgurl)
  clear_has_header_imgurl();
  return header_imgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OneFriendData::set_allocated_header_imgurl(::std::string* header_imgurl) {
  if (header_imgurl != NULL) {
    set_has_header_imgurl();
  } else {
    clear_has_header_imgurl();
  }
  header_imgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header_imgurl);
  // @@protoc_insertion_point(field_set_allocated:plane.OneFriendData.header_imgurl)
}

// optional uint32 sex = 5;
bool OneFriendData::has_sex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OneFriendData::set_has_sex() {
  _has_bits_[0] |= 0x00000010u;
}
void OneFriendData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000010u;
}
void OneFriendData::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
::google::protobuf::uint32 OneFriendData::sex() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.sex)
  return sex_;
}
void OneFriendData::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFriendData.sex)
}

// optional uint32 level = 6;
bool OneFriendData::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void OneFriendData::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
void OneFriendData::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
void OneFriendData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
::google::protobuf::uint32 OneFriendData::level() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.level)
  return level_;
}
void OneFriendData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFriendData.level)
}

// optional uint32 state = 7;
bool OneFriendData::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void OneFriendData::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
void OneFriendData::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
void OneFriendData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
::google::protobuf::uint32 OneFriendData::state() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.state)
  return state_;
}
void OneFriendData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFriendData.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnePageFriendDataMsg::kTotalNumFieldNumber;
const int OnePageFriendDataMsg::kPageNumFieldNumber;
const int OnePageFriendDataMsg::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnePageFriendDataMsg::OnePageFriendDataMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OnePageFriendDataMsg)
}
OnePageFriendDataMsg::OnePageFriendDataMsg(const OnePageFriendDataMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      datas_(from.datas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_num_, &from.total_num_,
    reinterpret_cast<char*>(&page_num_) -
    reinterpret_cast<char*>(&total_num_) + sizeof(page_num_));
  // @@protoc_insertion_point(copy_constructor:plane.OnePageFriendDataMsg)
}

void OnePageFriendDataMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&total_num_, 0, reinterpret_cast<char*>(&page_num_) -
    reinterpret_cast<char*>(&total_num_) + sizeof(page_num_));
}

OnePageFriendDataMsg::~OnePageFriendDataMsg() {
  // @@protoc_insertion_point(destructor:plane.OnePageFriendDataMsg)
  SharedDtor();
}

void OnePageFriendDataMsg::SharedDtor() {
}

void OnePageFriendDataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnePageFriendDataMsg::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[7].descriptor;
}

const OnePageFriendDataMsg& OnePageFriendDataMsg::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

OnePageFriendDataMsg* OnePageFriendDataMsg::New(::google::protobuf::Arena* arena) const {
  OnePageFriendDataMsg* n = new OnePageFriendDataMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnePageFriendDataMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OnePageFriendDataMsg)
  datas_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&total_num_, 0, reinterpret_cast<char*>(&page_num_) -
      reinterpret_cast<char*>(&total_num_) + sizeof(page_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OnePageFriendDataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OnePageFriendDataMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 total_num = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_total_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 page_num = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_page_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .plane.OneFriendData datas = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OnePageFriendDataMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OnePageFriendDataMsg)
  return false;
#undef DO_
}

void OnePageFriendDataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OnePageFriendDataMsg)
  // optional uint32 total_num = 1;
  if (has_total_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->total_num(), output);
  }

  // optional uint32 page_num = 2;
  if (has_page_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->page_num(), output);
  }

  // repeated .plane.OneFriendData datas = 3;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->datas(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OnePageFriendDataMsg)
}

::google::protobuf::uint8* OnePageFriendDataMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OnePageFriendDataMsg)
  // optional uint32 total_num = 1;
  if (has_total_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->total_num(), target);
  }

  // optional uint32 page_num = 2;
  if (has_page_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->page_num(), target);
  }

  // repeated .plane.OneFriendData datas = 3;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->datas(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OnePageFriendDataMsg)
  return target;
}

size_t OnePageFriendDataMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OnePageFriendDataMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OneFriendData datas = 3;
  {
    unsigned int count = this->datas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->datas(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_num = 1;
    if (has_total_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_num());
    }

    // optional uint32 page_num = 2;
    if (has_page_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnePageFriendDataMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OnePageFriendDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const OnePageFriendDataMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnePageFriendDataMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OnePageFriendDataMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OnePageFriendDataMsg)
    MergeFrom(*source);
  }
}

void OnePageFriendDataMsg::MergeFrom(const OnePageFriendDataMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OnePageFriendDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datas_.MergeFrom(from.datas_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_total_num()) {
      set_total_num(from.total_num());
    }
    if (from.has_page_num()) {
      set_page_num(from.page_num());
    }
  }
}

void OnePageFriendDataMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OnePageFriendDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnePageFriendDataMsg::CopyFrom(const OnePageFriendDataMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OnePageFriendDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnePageFriendDataMsg::IsInitialized() const {
  return true;
}

void OnePageFriendDataMsg::Swap(OnePageFriendDataMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnePageFriendDataMsg::InternalSwap(OnePageFriendDataMsg* other) {
  datas_.UnsafeArenaSwap(&other->datas_);
  std::swap(total_num_, other->total_num_);
  std::swap(page_num_, other->page_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnePageFriendDataMsg::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnePageFriendDataMsg

// optional uint32 total_num = 1;
bool OnePageFriendDataMsg::has_total_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OnePageFriendDataMsg::set_has_total_num() {
  _has_bits_[0] |= 0x00000001u;
}
void OnePageFriendDataMsg::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void OnePageFriendDataMsg::clear_total_num() {
  total_num_ = 0u;
  clear_has_total_num();
}
::google::protobuf::uint32 OnePageFriendDataMsg::total_num() const {
  // @@protoc_insertion_point(field_get:plane.OnePageFriendDataMsg.total_num)
  return total_num_;
}
void OnePageFriendDataMsg::set_total_num(::google::protobuf::uint32 value) {
  set_has_total_num();
  total_num_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePageFriendDataMsg.total_num)
}

// optional uint32 page_num = 2;
bool OnePageFriendDataMsg::has_page_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OnePageFriendDataMsg::set_has_page_num() {
  _has_bits_[0] |= 0x00000002u;
}
void OnePageFriendDataMsg::clear_has_page_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void OnePageFriendDataMsg::clear_page_num() {
  page_num_ = 0u;
  clear_has_page_num();
}
::google::protobuf::uint32 OnePageFriendDataMsg::page_num() const {
  // @@protoc_insertion_point(field_get:plane.OnePageFriendDataMsg.page_num)
  return page_num_;
}
void OnePageFriendDataMsg::set_page_num(::google::protobuf::uint32 value) {
  set_has_page_num();
  page_num_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePageFriendDataMsg.page_num)
}

// repeated .plane.OneFriendData datas = 3;
int OnePageFriendDataMsg::datas_size() const {
  return datas_.size();
}
void OnePageFriendDataMsg::clear_datas() {
  datas_.Clear();
}
const ::plane::OneFriendData& OnePageFriendDataMsg::datas(int index) const {
  // @@protoc_insertion_point(field_get:plane.OnePageFriendDataMsg.datas)
  return datas_.Get(index);
}
::plane::OneFriendData* OnePageFriendDataMsg::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:plane.OnePageFriendDataMsg.datas)
  return datas_.Mutable(index);
}
::plane::OneFriendData* OnePageFriendDataMsg::add_datas() {
  // @@protoc_insertion_point(field_add:plane.OnePageFriendDataMsg.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneFriendData >*
OnePageFriendDataMsg::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:plane.OnePageFriendDataMsg.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneFriendData >&
OnePageFriendDataMsg::datas() const {
  // @@protoc_insertion_point(field_list:plane.OnePageFriendDataMsg.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamEnterRoomResponse::kTeamidFieldNumber;
const int TeamEnterRoomResponse::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamEnterRoomResponse::TeamEnterRoomResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.TeamEnterRoomResponse)
}
TeamEnterRoomResponse::TeamEnterRoomResponse(const TeamEnterRoomResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      members_(from.members_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  teamid_ = from.teamid_;
  // @@protoc_insertion_point(copy_constructor:plane.TeamEnterRoomResponse)
}

void TeamEnterRoomResponse::SharedCtor() {
  _cached_size_ = 0;
  teamid_ = 0u;
}

TeamEnterRoomResponse::~TeamEnterRoomResponse() {
  // @@protoc_insertion_point(destructor:plane.TeamEnterRoomResponse)
  SharedDtor();
}

void TeamEnterRoomResponse::SharedDtor() {
}

void TeamEnterRoomResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamEnterRoomResponse::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[8].descriptor;
}

const TeamEnterRoomResponse& TeamEnterRoomResponse::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

TeamEnterRoomResponse* TeamEnterRoomResponse::New(::google::protobuf::Arena* arena) const {
  TeamEnterRoomResponse* n = new TeamEnterRoomResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamEnterRoomResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.TeamEnterRoomResponse)
  members_.Clear();
  teamid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TeamEnterRoomResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.TeamEnterRoomResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 teamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_teamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 members = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_members())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_members())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.TeamEnterRoomResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.TeamEnterRoomResponse)
  return false;
#undef DO_
}

void TeamEnterRoomResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.TeamEnterRoomResponse)
  // optional uint32 teamid = 1;
  if (has_teamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->teamid(), output);
  }

  // repeated uint32 members = 2;
  for (int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->members(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.TeamEnterRoomResponse)
}

::google::protobuf::uint8* TeamEnterRoomResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.TeamEnterRoomResponse)
  // optional uint32 teamid = 1;
  if (has_teamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->teamid(), target);
  }

  // repeated uint32 members = 2;
  for (int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->members(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.TeamEnterRoomResponse)
  return target;
}

size_t TeamEnterRoomResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.TeamEnterRoomResponse)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 members = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->members_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->members_size());
    total_size += data_size;
  }

  // optional uint32 teamid = 1;
  if (has_teamid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->teamid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamEnterRoomResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.TeamEnterRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamEnterRoomResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamEnterRoomResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.TeamEnterRoomResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.TeamEnterRoomResponse)
    MergeFrom(*source);
  }
}

void TeamEnterRoomResponse::MergeFrom(const TeamEnterRoomResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.TeamEnterRoomResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  members_.MergeFrom(from.members_);
  if (from.has_teamid()) {
    set_teamid(from.teamid());
  }
}

void TeamEnterRoomResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.TeamEnterRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamEnterRoomResponse::CopyFrom(const TeamEnterRoomResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.TeamEnterRoomResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamEnterRoomResponse::IsInitialized() const {
  return true;
}

void TeamEnterRoomResponse::Swap(TeamEnterRoomResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamEnterRoomResponse::InternalSwap(TeamEnterRoomResponse* other) {
  members_.UnsafeArenaSwap(&other->members_);
  std::swap(teamid_, other->teamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamEnterRoomResponse::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamEnterRoomResponse

// optional uint32 teamid = 1;
bool TeamEnterRoomResponse::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TeamEnterRoomResponse::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
void TeamEnterRoomResponse::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
void TeamEnterRoomResponse::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
::google::protobuf::uint32 TeamEnterRoomResponse::teamid() const {
  // @@protoc_insertion_point(field_get:plane.TeamEnterRoomResponse.teamid)
  return teamid_;
}
void TeamEnterRoomResponse::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:plane.TeamEnterRoomResponse.teamid)
}

// repeated uint32 members = 2;
int TeamEnterRoomResponse::members_size() const {
  return members_.size();
}
void TeamEnterRoomResponse::clear_members() {
  members_.Clear();
}
::google::protobuf::uint32 TeamEnterRoomResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:plane.TeamEnterRoomResponse.members)
  return members_.Get(index);
}
void TeamEnterRoomResponse::set_members(int index, ::google::protobuf::uint32 value) {
  members_.Set(index, value);
  // @@protoc_insertion_point(field_set:plane.TeamEnterRoomResponse.members)
}
void TeamEnterRoomResponse::add_members(::google::protobuf::uint32 value) {
  members_.Add(value);
  // @@protoc_insertion_point(field_add:plane.TeamEnterRoomResponse.members)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TeamEnterRoomResponse::members() const {
  // @@protoc_insertion_point(field_list:plane.TeamEnterRoomResponse.members)
  return members_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TeamEnterRoomResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:plane.TeamEnterRoomResponse.members)
  return &members_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NicknameMsg::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NicknameMsg::NicknameMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.NicknameMsg)
}
NicknameMsg::NicknameMsg(const NicknameMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  // @@protoc_insertion_point(copy_constructor:plane.NicknameMsg)
}

void NicknameMsg::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

NicknameMsg::~NicknameMsg() {
  // @@protoc_insertion_point(destructor:plane.NicknameMsg)
  SharedDtor();
}

void NicknameMsg::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NicknameMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NicknameMsg::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[9].descriptor;
}

const NicknameMsg& NicknameMsg::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

NicknameMsg* NicknameMsg::New(::google::protobuf::Arena* arena) const {
  NicknameMsg* n = new NicknameMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NicknameMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.NicknameMsg)
  if (has_nickname()) {
    GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*nickname_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NicknameMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.NicknameMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string nickname = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.NicknameMsg.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.NicknameMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.NicknameMsg)
  return false;
#undef DO_
}

void NicknameMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.NicknameMsg)
  // optional string nickname = 1;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.NicknameMsg.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->nickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.NicknameMsg)
}

::google::protobuf::uint8* NicknameMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.NicknameMsg)
  // optional string nickname = 1;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.NicknameMsg.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->nickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.NicknameMsg)
  return target;
}

size_t NicknameMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.NicknameMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string nickname = 1;
  if (has_nickname()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NicknameMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.NicknameMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const NicknameMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NicknameMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.NicknameMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.NicknameMsg)
    MergeFrom(*source);
  }
}

void NicknameMsg::MergeFrom(const NicknameMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.NicknameMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_nickname()) {
    set_has_nickname();
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
}

void NicknameMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.NicknameMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NicknameMsg::CopyFrom(const NicknameMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.NicknameMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NicknameMsg::IsInitialized() const {
  return true;
}

void NicknameMsg::Swap(NicknameMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NicknameMsg::InternalSwap(NicknameMsg* other) {
  nickname_.Swap(&other->nickname_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NicknameMsg::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NicknameMsg

// optional string nickname = 1;
bool NicknameMsg::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NicknameMsg::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
void NicknameMsg::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
void NicknameMsg::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& NicknameMsg::nickname() const {
  // @@protoc_insertion_point(field_get:plane.NicknameMsg.nickname)
  return nickname_.GetNoArena();
}
void NicknameMsg::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.NicknameMsg.nickname)
}
#if LANG_CXX11
void NicknameMsg::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.NicknameMsg.nickname)
}
#endif
void NicknameMsg::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.NicknameMsg.nickname)
}
void NicknameMsg::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.NicknameMsg.nickname)
}
::std::string* NicknameMsg::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:plane.NicknameMsg.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NicknameMsg::release_nickname() {
  // @@protoc_insertion_point(field_release:plane.NicknameMsg.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NicknameMsg::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:plane.NicknameMsg.nickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InviteMsg::kTeamidFieldNumber;
const int InviteMsg::kInviterAccFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InviteMsg::InviteMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.InviteMsg)
}
InviteMsg::InviteMsg(const InviteMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  inviter_acc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_inviter_acc()) {
    inviter_acc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inviter_acc_);
  }
  teamid_ = from.teamid_;
  // @@protoc_insertion_point(copy_constructor:plane.InviteMsg)
}

void InviteMsg::SharedCtor() {
  _cached_size_ = 0;
  inviter_acc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  teamid_ = 0u;
}

InviteMsg::~InviteMsg() {
  // @@protoc_insertion_point(destructor:plane.InviteMsg)
  SharedDtor();
}

void InviteMsg::SharedDtor() {
  inviter_acc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InviteMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InviteMsg::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[10].descriptor;
}

const InviteMsg& InviteMsg::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

InviteMsg* InviteMsg::New(::google::protobuf::Arena* arena) const {
  InviteMsg* n = new InviteMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InviteMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.InviteMsg)
  if (has_inviter_acc()) {
    GOOGLE_DCHECK(!inviter_acc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*inviter_acc_.UnsafeRawStringPointer())->clear();
  }
  teamid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InviteMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.InviteMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 teamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_teamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string inviter_acc = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_inviter_acc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->inviter_acc().data(), this->inviter_acc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.InviteMsg.inviter_acc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.InviteMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.InviteMsg)
  return false;
#undef DO_
}

void InviteMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.InviteMsg)
  // optional uint32 teamid = 1;
  if (has_teamid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->teamid(), output);
  }

  // optional string inviter_acc = 2;
  if (has_inviter_acc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inviter_acc().data(), this->inviter_acc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.InviteMsg.inviter_acc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->inviter_acc(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.InviteMsg)
}

::google::protobuf::uint8* InviteMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.InviteMsg)
  // optional uint32 teamid = 1;
  if (has_teamid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->teamid(), target);
  }

  // optional string inviter_acc = 2;
  if (has_inviter_acc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->inviter_acc().data(), this->inviter_acc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.InviteMsg.inviter_acc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->inviter_acc(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.InviteMsg)
  return target;
}

size_t InviteMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.InviteMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string inviter_acc = 2;
    if (has_inviter_acc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->inviter_acc());
    }

    // optional uint32 teamid = 1;
    if (has_teamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->teamid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InviteMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.InviteMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const InviteMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InviteMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.InviteMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.InviteMsg)
    MergeFrom(*source);
  }
}

void InviteMsg::MergeFrom(const InviteMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.InviteMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_inviter_acc()) {
      set_has_inviter_acc();
      inviter_acc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.inviter_acc_);
    }
    if (from.has_teamid()) {
      set_teamid(from.teamid());
    }
  }
}

void InviteMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.InviteMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InviteMsg::CopyFrom(const InviteMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.InviteMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InviteMsg::IsInitialized() const {
  return true;
}

void InviteMsg::Swap(InviteMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InviteMsg::InternalSwap(InviteMsg* other) {
  inviter_acc_.Swap(&other->inviter_acc_);
  std::swap(teamid_, other->teamid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InviteMsg::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InviteMsg

// optional uint32 teamid = 1;
bool InviteMsg::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InviteMsg::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
void InviteMsg::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
void InviteMsg::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
::google::protobuf::uint32 InviteMsg::teamid() const {
  // @@protoc_insertion_point(field_get:plane.InviteMsg.teamid)
  return teamid_;
}
void InviteMsg::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:plane.InviteMsg.teamid)
}

// optional string inviter_acc = 2;
bool InviteMsg::has_inviter_acc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InviteMsg::set_has_inviter_acc() {
  _has_bits_[0] |= 0x00000001u;
}
void InviteMsg::clear_has_inviter_acc() {
  _has_bits_[0] &= ~0x00000001u;
}
void InviteMsg::clear_inviter_acc() {
  inviter_acc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_inviter_acc();
}
const ::std::string& InviteMsg::inviter_acc() const {
  // @@protoc_insertion_point(field_get:plane.InviteMsg.inviter_acc)
  return inviter_acc_.GetNoArena();
}
void InviteMsg::set_inviter_acc(const ::std::string& value) {
  set_has_inviter_acc();
  inviter_acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.InviteMsg.inviter_acc)
}
#if LANG_CXX11
void InviteMsg::set_inviter_acc(::std::string&& value) {
  set_has_inviter_acc();
  inviter_acc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.InviteMsg.inviter_acc)
}
#endif
void InviteMsg::set_inviter_acc(const char* value) {
  set_has_inviter_acc();
  inviter_acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.InviteMsg.inviter_acc)
}
void InviteMsg::set_inviter_acc(const char* value, size_t size) {
  set_has_inviter_acc();
  inviter_acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.InviteMsg.inviter_acc)
}
::std::string* InviteMsg::mutable_inviter_acc() {
  set_has_inviter_acc();
  // @@protoc_insertion_point(field_mutable:plane.InviteMsg.inviter_acc)
  return inviter_acc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InviteMsg::release_inviter_acc() {
  // @@protoc_insertion_point(field_release:plane.InviteMsg.inviter_acc)
  clear_has_inviter_acc();
  return inviter_acc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InviteMsg::set_allocated_inviter_acc(::std::string* inviter_acc) {
  if (inviter_acc != NULL) {
    set_has_inviter_acc();
  } else {
    clear_has_inviter_acc();
  }
  inviter_acc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inviter_acc);
  // @@protoc_insertion_point(field_set_allocated:plane.InviteMsg.inviter_acc)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NewNickNameMsg::kPosFieldNumber;
const int NewNickNameMsg::kNicknameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NewNickNameMsg::NewNickNameMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.NewNickNameMsg)
}
NewNickNameMsg::NewNickNameMsg(const NewNickNameMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_nickname()) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  pos_ = from.pos_;
  // @@protoc_insertion_point(copy_constructor:plane.NewNickNameMsg)
}

void NewNickNameMsg::SharedCtor() {
  _cached_size_ = 0;
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pos_ = 0u;
}

NewNickNameMsg::~NewNickNameMsg() {
  // @@protoc_insertion_point(destructor:plane.NewNickNameMsg)
  SharedDtor();
}

void NewNickNameMsg::SharedDtor() {
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NewNickNameMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NewNickNameMsg::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[11].descriptor;
}

const NewNickNameMsg& NewNickNameMsg::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

NewNickNameMsg* NewNickNameMsg::New(::google::protobuf::Arena* arena) const {
  NewNickNameMsg* n = new NewNickNameMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void NewNickNameMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.NewNickNameMsg)
  if (has_nickname()) {
    GOOGLE_DCHECK(!nickname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*nickname_.UnsafeRawStringPointer())->clear();
  }
  pos_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool NewNickNameMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.NewNickNameMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pos = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string nickname = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.NewNickNameMsg.nickname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.NewNickNameMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.NewNickNameMsg)
  return false;
#undef DO_
}

void NewNickNameMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.NewNickNameMsg)
  // optional uint32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional string nickname = 2;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.NewNickNameMsg.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->nickname(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.NewNickNameMsg)
}

::google::protobuf::uint8* NewNickNameMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.NewNickNameMsg)
  // optional uint32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional string nickname = 2;
  if (has_nickname()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.NewNickNameMsg.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->nickname(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.NewNickNameMsg)
  return target;
}

size_t NewNickNameMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.NewNickNameMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string nickname = 2;
    if (has_nickname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->nickname());
    }

    // optional uint32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NewNickNameMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.NewNickNameMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const NewNickNameMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NewNickNameMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.NewNickNameMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.NewNickNameMsg)
    MergeFrom(*source);
  }
}

void NewNickNameMsg::MergeFrom(const NewNickNameMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.NewNickNameMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_nickname()) {
      set_has_nickname();
      nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
}

void NewNickNameMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.NewNickNameMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NewNickNameMsg::CopyFrom(const NewNickNameMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.NewNickNameMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NewNickNameMsg::IsInitialized() const {
  return true;
}

void NewNickNameMsg::Swap(NewNickNameMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NewNickNameMsg::InternalSwap(NewNickNameMsg* other) {
  nickname_.Swap(&other->nickname_);
  std::swap(pos_, other->pos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata NewNickNameMsg::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// NewNickNameMsg

// optional uint32 pos = 1;
bool NewNickNameMsg::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void NewNickNameMsg::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void NewNickNameMsg::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void NewNickNameMsg::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
::google::protobuf::uint32 NewNickNameMsg::pos() const {
  // @@protoc_insertion_point(field_get:plane.NewNickNameMsg.pos)
  return pos_;
}
void NewNickNameMsg::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:plane.NewNickNameMsg.pos)
}

// optional string nickname = 2;
bool NewNickNameMsg::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void NewNickNameMsg::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
void NewNickNameMsg::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
void NewNickNameMsg::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
const ::std::string& NewNickNameMsg::nickname() const {
  // @@protoc_insertion_point(field_get:plane.NewNickNameMsg.nickname)
  return nickname_.GetNoArena();
}
void NewNickNameMsg::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.NewNickNameMsg.nickname)
}
#if LANG_CXX11
void NewNickNameMsg::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.NewNickNameMsg.nickname)
}
#endif
void NewNickNameMsg::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.NewNickNameMsg.nickname)
}
void NewNickNameMsg::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.NewNickNameMsg.nickname)
}
::std::string* NewNickNameMsg::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:plane.NewNickNameMsg.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* NewNickNameMsg::release_nickname() {
  // @@protoc_insertion_point(field_release:plane.NewNickNameMsg.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void NewNickNameMsg::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:plane.NewNickNameMsg.nickname)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PageNumMsg::kPageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PageNumMsg::PageNumMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.PageNumMsg)
}
PageNumMsg::PageNumMsg(const PageNumMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  page_ = from.page_;
  // @@protoc_insertion_point(copy_constructor:plane.PageNumMsg)
}

void PageNumMsg::SharedCtor() {
  _cached_size_ = 0;
  page_ = 0u;
}

PageNumMsg::~PageNumMsg() {
  // @@protoc_insertion_point(destructor:plane.PageNumMsg)
  SharedDtor();
}

void PageNumMsg::SharedDtor() {
}

void PageNumMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PageNumMsg::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[12].descriptor;
}

const PageNumMsg& PageNumMsg::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

PageNumMsg* PageNumMsg::New(::google::protobuf::Arena* arena) const {
  PageNumMsg* n = new PageNumMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PageNumMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.PageNumMsg)
  page_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PageNumMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.PageNumMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 page = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_page();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.PageNumMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.PageNumMsg)
  return false;
#undef DO_
}

void PageNumMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.PageNumMsg)
  // optional uint32 page = 1;
  if (has_page()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->page(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.PageNumMsg)
}

::google::protobuf::uint8* PageNumMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.PageNumMsg)
  // optional uint32 page = 1;
  if (has_page()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->page(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.PageNumMsg)
  return target;
}

size_t PageNumMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.PageNumMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 page = 1;
  if (has_page()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->page());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PageNumMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.PageNumMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PageNumMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PageNumMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.PageNumMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.PageNumMsg)
    MergeFrom(*source);
  }
}

void PageNumMsg::MergeFrom(const PageNumMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.PageNumMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_page()) {
    set_page(from.page());
  }
}

void PageNumMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.PageNumMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PageNumMsg::CopyFrom(const PageNumMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.PageNumMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PageNumMsg::IsInitialized() const {
  return true;
}

void PageNumMsg::Swap(PageNumMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PageNumMsg::InternalSwap(PageNumMsg* other) {
  std::swap(page_, other->page_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PageNumMsg::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PageNumMsg

// optional uint32 page = 1;
bool PageNumMsg::has_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PageNumMsg::set_has_page() {
  _has_bits_[0] |= 0x00000001u;
}
void PageNumMsg::clear_has_page() {
  _has_bits_[0] &= ~0x00000001u;
}
void PageNumMsg::clear_page() {
  page_ = 0u;
  clear_has_page();
}
::google::protobuf::uint32 PageNumMsg::page() const {
  // @@protoc_insertion_point(field_get:plane.PageNumMsg.page)
  return page_;
}
void PageNumMsg::set_page(::google::protobuf::uint32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:plane.PageNumMsg.page)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddMemberInRoomMsg::kMemberNumBeforeAddFieldNumber;
const int AddMemberInRoomMsg::kUidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddMemberInRoomMsg::AddMemberInRoomMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.AddMemberInRoomMsg)
}
AddMemberInRoomMsg::AddMemberInRoomMsg(const AddMemberInRoomMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      uids_(from.uids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  member_num_before_add_ = from.member_num_before_add_;
  // @@protoc_insertion_point(copy_constructor:plane.AddMemberInRoomMsg)
}

void AddMemberInRoomMsg::SharedCtor() {
  _cached_size_ = 0;
  member_num_before_add_ = 0u;
}

AddMemberInRoomMsg::~AddMemberInRoomMsg() {
  // @@protoc_insertion_point(destructor:plane.AddMemberInRoomMsg)
  SharedDtor();
}

void AddMemberInRoomMsg::SharedDtor() {
}

void AddMemberInRoomMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddMemberInRoomMsg::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[13].descriptor;
}

const AddMemberInRoomMsg& AddMemberInRoomMsg::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddMemberInRoomMsg* AddMemberInRoomMsg::New(::google::protobuf::Arena* arena) const {
  AddMemberInRoomMsg* n = new AddMemberInRoomMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddMemberInRoomMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.AddMemberInRoomMsg)
  uids_.Clear();
  member_num_before_add_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddMemberInRoomMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.AddMemberInRoomMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 member_num_before_add = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_member_num_before_add();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &member_num_before_add_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 uids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_uids())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.AddMemberInRoomMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.AddMemberInRoomMsg)
  return false;
#undef DO_
}

void AddMemberInRoomMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.AddMemberInRoomMsg)
  // optional uint32 member_num_before_add = 1;
  if (has_member_num_before_add()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->member_num_before_add(), output);
  }

  // repeated uint32 uids = 2;
  for (int i = 0, n = this->uids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->uids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.AddMemberInRoomMsg)
}

::google::protobuf::uint8* AddMemberInRoomMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.AddMemberInRoomMsg)
  // optional uint32 member_num_before_add = 1;
  if (has_member_num_before_add()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->member_num_before_add(), target);
  }

  // repeated uint32 uids = 2;
  for (int i = 0, n = this->uids_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->uids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.AddMemberInRoomMsg)
  return target;
}

size_t AddMemberInRoomMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.AddMemberInRoomMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 uids = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->uids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->uids_size());
    total_size += data_size;
  }

  // optional uint32 member_num_before_add = 1;
  if (has_member_num_before_add()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->member_num_before_add());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddMemberInRoomMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.AddMemberInRoomMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AddMemberInRoomMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddMemberInRoomMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.AddMemberInRoomMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.AddMemberInRoomMsg)
    MergeFrom(*source);
  }
}

void AddMemberInRoomMsg::MergeFrom(const AddMemberInRoomMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.AddMemberInRoomMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uids_.MergeFrom(from.uids_);
  if (from.has_member_num_before_add()) {
    set_member_num_before_add(from.member_num_before_add());
  }
}

void AddMemberInRoomMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.AddMemberInRoomMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddMemberInRoomMsg::CopyFrom(const AddMemberInRoomMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.AddMemberInRoomMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddMemberInRoomMsg::IsInitialized() const {
  return true;
}

void AddMemberInRoomMsg::Swap(AddMemberInRoomMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddMemberInRoomMsg::InternalSwap(AddMemberInRoomMsg* other) {
  uids_.UnsafeArenaSwap(&other->uids_);
  std::swap(member_num_before_add_, other->member_num_before_add_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddMemberInRoomMsg::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddMemberInRoomMsg

// optional uint32 member_num_before_add = 1;
bool AddMemberInRoomMsg::has_member_num_before_add() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddMemberInRoomMsg::set_has_member_num_before_add() {
  _has_bits_[0] |= 0x00000001u;
}
void AddMemberInRoomMsg::clear_has_member_num_before_add() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddMemberInRoomMsg::clear_member_num_before_add() {
  member_num_before_add_ = 0u;
  clear_has_member_num_before_add();
}
::google::protobuf::uint32 AddMemberInRoomMsg::member_num_before_add() const {
  // @@protoc_insertion_point(field_get:plane.AddMemberInRoomMsg.member_num_before_add)
  return member_num_before_add_;
}
void AddMemberInRoomMsg::set_member_num_before_add(::google::protobuf::uint32 value) {
  set_has_member_num_before_add();
  member_num_before_add_ = value;
  // @@protoc_insertion_point(field_set:plane.AddMemberInRoomMsg.member_num_before_add)
}

// repeated uint32 uids = 2;
int AddMemberInRoomMsg::uids_size() const {
  return uids_.size();
}
void AddMemberInRoomMsg::clear_uids() {
  uids_.Clear();
}
::google::protobuf::uint32 AddMemberInRoomMsg::uids(int index) const {
  // @@protoc_insertion_point(field_get:plane.AddMemberInRoomMsg.uids)
  return uids_.Get(index);
}
void AddMemberInRoomMsg::set_uids(int index, ::google::protobuf::uint32 value) {
  uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:plane.AddMemberInRoomMsg.uids)
}
void AddMemberInRoomMsg::add_uids(::google::protobuf::uint32 value) {
  uids_.Add(value);
  // @@protoc_insertion_point(field_add:plane.AddMemberInRoomMsg.uids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AddMemberInRoomMsg::uids() const {
  // @@protoc_insertion_point(field_list:plane.AddMemberInRoomMsg.uids)
  return uids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AddMemberInRoomMsg::mutable_uids() {
  // @@protoc_insertion_point(field_mutable_list:plane.AddMemberInRoomMsg.uids)
  return &uids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneTeamRankData::kTeamSkinidFieldNumber;
const int OneTeamRankData::kMemberNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneTeamRankData::OneTeamRankData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OneTeamRankData)
}
OneTeamRankData::OneTeamRankData(const OneTeamRankData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&team_skinid_, &from.team_skinid_,
    reinterpret_cast<char*>(&member_num_) -
    reinterpret_cast<char*>(&team_skinid_) + sizeof(member_num_));
  // @@protoc_insertion_point(copy_constructor:plane.OneTeamRankData)
}

void OneTeamRankData::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&team_skinid_, 0, reinterpret_cast<char*>(&member_num_) -
    reinterpret_cast<char*>(&team_skinid_) + sizeof(member_num_));
}

OneTeamRankData::~OneTeamRankData() {
  // @@protoc_insertion_point(destructor:plane.OneTeamRankData)
  SharedDtor();
}

void OneTeamRankData::SharedDtor() {
}

void OneTeamRankData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneTeamRankData::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[14].descriptor;
}

const OneTeamRankData& OneTeamRankData::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneTeamRankData* OneTeamRankData::New(::google::protobuf::Arena* arena) const {
  OneTeamRankData* n = new OneTeamRankData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneTeamRankData::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OneTeamRankData)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&team_skinid_, 0, reinterpret_cast<char*>(&member_num_) -
      reinterpret_cast<char*>(&team_skinid_) + sizeof(member_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneTeamRankData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OneTeamRankData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 team_skinid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_team_skinid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &team_skinid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 member_num = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_member_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &member_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OneTeamRankData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OneTeamRankData)
  return false;
#undef DO_
}

void OneTeamRankData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OneTeamRankData)
  // optional uint32 team_skinid = 1;
  if (has_team_skinid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->team_skinid(), output);
  }

  // optional uint32 member_num = 2;
  if (has_member_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->member_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OneTeamRankData)
}

::google::protobuf::uint8* OneTeamRankData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OneTeamRankData)
  // optional uint32 team_skinid = 1;
  if (has_team_skinid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->team_skinid(), target);
  }

  // optional uint32 member_num = 2;
  if (has_member_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->member_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OneTeamRankData)
  return target;
}

size_t OneTeamRankData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OneTeamRankData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 team_skinid = 1;
    if (has_team_skinid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->team_skinid());
    }

    // optional uint32 member_num = 2;
    if (has_member_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->member_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneTeamRankData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OneTeamRankData)
  GOOGLE_DCHECK_NE(&from, this);
  const OneTeamRankData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneTeamRankData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OneTeamRankData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OneTeamRankData)
    MergeFrom(*source);
  }
}

void OneTeamRankData::MergeFrom(const OneTeamRankData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OneTeamRankData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_team_skinid()) {
      set_team_skinid(from.team_skinid());
    }
    if (from.has_member_num()) {
      set_member_num(from.member_num());
    }
  }
}

void OneTeamRankData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OneTeamRankData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneTeamRankData::CopyFrom(const OneTeamRankData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OneTeamRankData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneTeamRankData::IsInitialized() const {
  return true;
}

void OneTeamRankData::Swap(OneTeamRankData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneTeamRankData::InternalSwap(OneTeamRankData* other) {
  std::swap(team_skinid_, other->team_skinid_);
  std::swap(member_num_, other->member_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneTeamRankData::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneTeamRankData

// optional uint32 team_skinid = 1;
bool OneTeamRankData::has_team_skinid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneTeamRankData::set_has_team_skinid() {
  _has_bits_[0] |= 0x00000001u;
}
void OneTeamRankData::clear_has_team_skinid() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneTeamRankData::clear_team_skinid() {
  team_skinid_ = 0u;
  clear_has_team_skinid();
}
::google::protobuf::uint32 OneTeamRankData::team_skinid() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamRankData.team_skinid)
  return team_skinid_;
}
void OneTeamRankData::set_team_skinid(::google::protobuf::uint32 value) {
  set_has_team_skinid();
  team_skinid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneTeamRankData.team_skinid)
}

// optional uint32 member_num = 2;
bool OneTeamRankData::has_member_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OneTeamRankData::set_has_member_num() {
  _has_bits_[0] |= 0x00000002u;
}
void OneTeamRankData::clear_has_member_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void OneTeamRankData::clear_member_num() {
  member_num_ = 0u;
  clear_has_member_num();
}
::google::protobuf::uint32 OneTeamRankData::member_num() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamRankData.member_num)
  return member_num_;
}
void OneTeamRankData::set_member_num(::google::protobuf::uint32 value) {
  set_has_member_num();
  member_num_ = value;
  // @@protoc_insertion_point(field_set:plane.OneTeamRankData.member_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamRankDataMsg::kMyTeamRankFieldNumber;
const int TeamRankDataMsg::kMyScoreFieldNumber;
const int TeamRankDataMsg::kMyTeamskinidFieldNumber;
const int TeamRankDataMsg::kMyTeamNumFieldNumber;
const int TeamRankDataMsg::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamRankDataMsg::TeamRankDataMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fteam_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.TeamRankDataMsg)
}
TeamRankDataMsg::TeamRankDataMsg(const TeamRankDataMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      datas_(from.datas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&my_team_rank_, &from.my_team_rank_,
    reinterpret_cast<char*>(&my_team_num_) -
    reinterpret_cast<char*>(&my_team_rank_) + sizeof(my_team_num_));
  // @@protoc_insertion_point(copy_constructor:plane.TeamRankDataMsg)
}

void TeamRankDataMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&my_team_rank_, 0, reinterpret_cast<char*>(&my_team_num_) -
    reinterpret_cast<char*>(&my_team_rank_) + sizeof(my_team_num_));
}

TeamRankDataMsg::~TeamRankDataMsg() {
  // @@protoc_insertion_point(destructor:plane.TeamRankDataMsg)
  SharedDtor();
}

void TeamRankDataMsg::SharedDtor() {
}

void TeamRankDataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamRankDataMsg::descriptor() {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[15].descriptor;
}

const TeamRankDataMsg& TeamRankDataMsg::default_instance() {
  protobuf_plane_2fteam_2eproto::InitDefaults();
  return *internal_default_instance();
}

TeamRankDataMsg* TeamRankDataMsg::New(::google::protobuf::Arena* arena) const {
  TeamRankDataMsg* n = new TeamRankDataMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamRankDataMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.TeamRankDataMsg)
  datas_.Clear();
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&my_team_rank_, 0, reinterpret_cast<char*>(&my_team_num_) -
      reinterpret_cast<char*>(&my_team_rank_) + sizeof(my_team_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool TeamRankDataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.TeamRankDataMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 my_team_rank = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_my_team_rank();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &my_team_rank_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 my_score = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_my_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &my_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 my_teamskinid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_my_teamskinid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &my_teamskinid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 my_team_num = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {
          set_has_my_team_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &my_team_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .plane.OneTeamRankData datas = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(42u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.TeamRankDataMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.TeamRankDataMsg)
  return false;
#undef DO_
}

void TeamRankDataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.TeamRankDataMsg)
  // optional uint32 my_team_rank = 1;
  if (has_my_team_rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->my_team_rank(), output);
  }

  // optional uint32 my_score = 2;
  if (has_my_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->my_score(), output);
  }

  // optional uint32 my_teamskinid = 3;
  if (has_my_teamskinid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->my_teamskinid(), output);
  }

  // optional uint32 my_team_num = 4;
  if (has_my_team_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->my_team_num(), output);
  }

  // repeated .plane.OneTeamRankData datas = 5;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->datas(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.TeamRankDataMsg)
}

::google::protobuf::uint8* TeamRankDataMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.TeamRankDataMsg)
  // optional uint32 my_team_rank = 1;
  if (has_my_team_rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->my_team_rank(), target);
  }

  // optional uint32 my_score = 2;
  if (has_my_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->my_score(), target);
  }

  // optional uint32 my_teamskinid = 3;
  if (has_my_teamskinid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->my_teamskinid(), target);
  }

  // optional uint32 my_team_num = 4;
  if (has_my_team_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->my_team_num(), target);
  }

  // repeated .plane.OneTeamRankData datas = 5;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->datas(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.TeamRankDataMsg)
  return target;
}

size_t TeamRankDataMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.TeamRankDataMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OneTeamRankData datas = 5;
  {
    unsigned int count = this->datas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->datas(i));
    }
  }

  if (_has_bits_[0 / 32] & 15u) {
    // optional uint32 my_team_rank = 1;
    if (has_my_team_rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->my_team_rank());
    }

    // optional uint32 my_score = 2;
    if (has_my_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->my_score());
    }

    // optional uint32 my_teamskinid = 3;
    if (has_my_teamskinid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->my_teamskinid());
    }

    // optional uint32 my_team_num = 4;
    if (has_my_team_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->my_team_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamRankDataMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.TeamRankDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamRankDataMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamRankDataMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.TeamRankDataMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.TeamRankDataMsg)
    MergeFrom(*source);
  }
}

void TeamRankDataMsg::MergeFrom(const TeamRankDataMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.TeamRankDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datas_.MergeFrom(from.datas_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_my_team_rank()) {
      set_my_team_rank(from.my_team_rank());
    }
    if (from.has_my_score()) {
      set_my_score(from.my_score());
    }
    if (from.has_my_teamskinid()) {
      set_my_teamskinid(from.my_teamskinid());
    }
    if (from.has_my_team_num()) {
      set_my_team_num(from.my_team_num());
    }
  }
}

void TeamRankDataMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.TeamRankDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamRankDataMsg::CopyFrom(const TeamRankDataMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.TeamRankDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamRankDataMsg::IsInitialized() const {
  return true;
}

void TeamRankDataMsg::Swap(TeamRankDataMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamRankDataMsg::InternalSwap(TeamRankDataMsg* other) {
  datas_.UnsafeArenaSwap(&other->datas_);
  std::swap(my_team_rank_, other->my_team_rank_);
  std::swap(my_score_, other->my_score_);
  std::swap(my_teamskinid_, other->my_teamskinid_);
  std::swap(my_team_num_, other->my_team_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamRankDataMsg::GetMetadata() const {
  protobuf_plane_2fteam_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fteam_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamRankDataMsg

// optional uint32 my_team_rank = 1;
bool TeamRankDataMsg::has_my_team_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void TeamRankDataMsg::set_has_my_team_rank() {
  _has_bits_[0] |= 0x00000001u;
}
void TeamRankDataMsg::clear_has_my_team_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
void TeamRankDataMsg::clear_my_team_rank() {
  my_team_rank_ = 0u;
  clear_has_my_team_rank();
}
::google::protobuf::uint32 TeamRankDataMsg::my_team_rank() const {
  // @@protoc_insertion_point(field_get:plane.TeamRankDataMsg.my_team_rank)
  return my_team_rank_;
}
void TeamRankDataMsg::set_my_team_rank(::google::protobuf::uint32 value) {
  set_has_my_team_rank();
  my_team_rank_ = value;
  // @@protoc_insertion_point(field_set:plane.TeamRankDataMsg.my_team_rank)
}

// optional uint32 my_score = 2;
bool TeamRankDataMsg::has_my_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void TeamRankDataMsg::set_has_my_score() {
  _has_bits_[0] |= 0x00000002u;
}
void TeamRankDataMsg::clear_has_my_score() {
  _has_bits_[0] &= ~0x00000002u;
}
void TeamRankDataMsg::clear_my_score() {
  my_score_ = 0u;
  clear_has_my_score();
}
::google::protobuf::uint32 TeamRankDataMsg::my_score() const {
  // @@protoc_insertion_point(field_get:plane.TeamRankDataMsg.my_score)
  return my_score_;
}
void TeamRankDataMsg::set_my_score(::google::protobuf::uint32 value) {
  set_has_my_score();
  my_score_ = value;
  // @@protoc_insertion_point(field_set:plane.TeamRankDataMsg.my_score)
}

// optional uint32 my_teamskinid = 3;
bool TeamRankDataMsg::has_my_teamskinid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void TeamRankDataMsg::set_has_my_teamskinid() {
  _has_bits_[0] |= 0x00000004u;
}
void TeamRankDataMsg::clear_has_my_teamskinid() {
  _has_bits_[0] &= ~0x00000004u;
}
void TeamRankDataMsg::clear_my_teamskinid() {
  my_teamskinid_ = 0u;
  clear_has_my_teamskinid();
}
::google::protobuf::uint32 TeamRankDataMsg::my_teamskinid() const {
  // @@protoc_insertion_point(field_get:plane.TeamRankDataMsg.my_teamskinid)
  return my_teamskinid_;
}
void TeamRankDataMsg::set_my_teamskinid(::google::protobuf::uint32 value) {
  set_has_my_teamskinid();
  my_teamskinid_ = value;
  // @@protoc_insertion_point(field_set:plane.TeamRankDataMsg.my_teamskinid)
}

// optional uint32 my_team_num = 4;
bool TeamRankDataMsg::has_my_team_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void TeamRankDataMsg::set_has_my_team_num() {
  _has_bits_[0] |= 0x00000008u;
}
void TeamRankDataMsg::clear_has_my_team_num() {
  _has_bits_[0] &= ~0x00000008u;
}
void TeamRankDataMsg::clear_my_team_num() {
  my_team_num_ = 0u;
  clear_has_my_team_num();
}
::google::protobuf::uint32 TeamRankDataMsg::my_team_num() const {
  // @@protoc_insertion_point(field_get:plane.TeamRankDataMsg.my_team_num)
  return my_team_num_;
}
void TeamRankDataMsg::set_my_team_num(::google::protobuf::uint32 value) {
  set_has_my_team_num();
  my_team_num_ = value;
  // @@protoc_insertion_point(field_set:plane.TeamRankDataMsg.my_team_num)
}

// repeated .plane.OneTeamRankData datas = 5;
int TeamRankDataMsg::datas_size() const {
  return datas_.size();
}
void TeamRankDataMsg::clear_datas() {
  datas_.Clear();
}
const ::plane::OneTeamRankData& TeamRankDataMsg::datas(int index) const {
  // @@protoc_insertion_point(field_get:plane.TeamRankDataMsg.datas)
  return datas_.Get(index);
}
::plane::OneTeamRankData* TeamRankDataMsg::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:plane.TeamRankDataMsg.datas)
  return datas_.Mutable(index);
}
::plane::OneTeamRankData* TeamRankDataMsg::add_datas() {
  // @@protoc_insertion_point(field_add:plane.TeamRankDataMsg.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneTeamRankData >*
TeamRankDataMsg::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:plane.TeamRankDataMsg.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneTeamRankData >&
TeamRankDataMsg::datas() const {
  // @@protoc_insertion_point(field_list:plane.TeamRankDataMsg.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace plane

// @@protoc_insertion_point(global_scope)
