// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plane/object.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "plane/object.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace plane {
class ObjectMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ObjectMsg> {
} _ObjectMsg_default_instance_;
class AddOneObjectMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AddOneObjectMsg> {
} _AddOneObjectMsg_default_instance_;
class BatchAddObjectsMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BatchAddObjectsMsg> {
} _BatchAddObjectsMsg_default_instance_;
class RemoveOneObjectMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RemoveOneObjectMsg> {
} _RemoveOneObjectMsg_default_instance_;
class BatchRemoveObjectsMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BatchRemoveObjectsMsg> {
} _BatchRemoveObjectsMsg_default_instance_;
class UpdateObjectMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UpdateObjectMsg> {
} _UpdateObjectMsg_default_instance_;
class UseObjectMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UseObjectMsg> {
} _UseObjectMsg_default_instance_;
class ShopIDMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShopIDMsg> {
} _ShopIDMsg_default_instance_;
class OneShopItemDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OneShopItem> {
} _OneShopItem_default_instance_;
class AllShopItemMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AllShopItemMsg> {
} _AllShopItemMsg_default_instance_;
class BuyMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BuyMsg> {
} _BuyMsg_default_instance_;
class AllMoneyMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AllMoneyMsg> {
} _AllMoneyMsg_default_instance_;
class SetOneMoneyMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetOneMoneyMsg> {
} _SetOneMoneyMsg_default_instance_;
class MessageBoxMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageBoxMsg> {
} _MessageBoxMsg_default_instance_;
class OneSkinIndexMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OneSkinIndexMsg> {
} _OneSkinIndexMsg_default_instance_;
class BatchSkinIndexMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BatchSkinIndexMsg> {
} _BatchSkinIndexMsg_default_instance_;
class OneSkinMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OneSkinMsg> {
} _OneSkinMsg_default_instance_;
class BatchSkinMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BatchSkinMsg> {
} _BatchSkinMsg_default_instance_;
class UseSkinResultMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UseSkinResultMsg> {
} _UseSkinResultMsg_default_instance_;
class OneBulletMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OneBulletMsg> {
} _OneBulletMsg_default_instance_;
class BatchBulletMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<BatchBulletMsg> {
} _BatchBulletMsg_default_instance_;
class OnlineSendSkinMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OnlineSendSkinMsg> {
} _OnlineSendSkinMsg_default_instance_;

namespace protobuf_plane_2fobject_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[22];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMsg, baseid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMsg, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMsg, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMsg, num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMsg, bind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ObjectMsg, upgrade_),
  2,
  1,
  0,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOneObjectMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOneObjectMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AddOneObjectMsg, addobj_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchAddObjectsMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchAddObjectsMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchAddObjectsMsg, is_request_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchAddObjectsMsg, addobjs_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveOneObjectMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveOneObjectMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RemoveOneObjectMsg, uid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchRemoveObjectsMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchRemoveObjectsMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchRemoveObjectsMsg, uids_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateObjectMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateObjectMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateObjectMsg, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateObjectMsg, newnum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateObjectMsg, newbind_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UpdateObjectMsg, newupgrade_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseObjectMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseObjectMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseObjectMsg, uid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopIDMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopIDMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShopIDMsg, shopid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneShopItem, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneShopItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneShopItem, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneShopItem, baseid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneShopItem, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneShopItem, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneShopItem, plastic_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllShopItemMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllShopItemMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllShopItemMsg, reqshopid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllShopItemMsg, allitems_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMsg, shopid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BuyMsg, pos_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllMoneyMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllMoneyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllMoneyMsg, money_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllMoneyMsg, ticket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllMoneyMsg, plastic_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOneMoneyMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOneMoneyMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOneMoneyMsg, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetOneMoneyMsg, newnum_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageBoxMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageBoxMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageBoxMsg, content_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneSkinIndexMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneSkinIndexMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneSkinIndexMsg, index_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSkinIndexMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSkinIndexMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSkinIndexMsg, allindexs_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneSkinMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneSkinMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneSkinMsg, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneSkinMsg, disappear_ts_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSkinMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSkinMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchSkinMsg, skins_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseSkinResultMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseSkinResultMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseSkinResultMsg, use_result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UseSkinResultMsg, new_skinindex_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneBulletMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneBulletMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneBulletMsg, baseid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneBulletMsg, disappear_ts_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchBulletMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchBulletMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BatchBulletMsg, bullets_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineSendSkinMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineSendSkinMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineSendSkinMsg, cur_skinindex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineSendSkinMsg, allskins_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineSendSkinMsg, cur_bulletid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnlineSendSkinMsg, bullets_),
  0,
  ~0u,
  1,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 10, sizeof(ObjectMsg)},
  { 16, 21, sizeof(AddOneObjectMsg)},
  { 22, 28, sizeof(BatchAddObjectsMsg)},
  { 30, 35, sizeof(RemoveOneObjectMsg)},
  { 36, 41, sizeof(BatchRemoveObjectsMsg)},
  { 42, 50, sizeof(UpdateObjectMsg)},
  { 54, 59, sizeof(UseObjectMsg)},
  { 60, 65, sizeof(ShopIDMsg)},
  { 66, 75, sizeof(OneShopItem)},
  { 80, 86, sizeof(AllShopItemMsg)},
  { 88, 94, sizeof(BuyMsg)},
  { 96, 103, sizeof(AllMoneyMsg)},
  { 106, 112, sizeof(SetOneMoneyMsg)},
  { 114, 119, sizeof(MessageBoxMsg)},
  { 120, 125, sizeof(OneSkinIndexMsg)},
  { 126, 131, sizeof(BatchSkinIndexMsg)},
  { 132, 138, sizeof(OneSkinMsg)},
  { 140, 145, sizeof(BatchSkinMsg)},
  { 146, 152, sizeof(UseSkinResultMsg)},
  { 154, 160, sizeof(OneBulletMsg)},
  { 162, 167, sizeof(BatchBulletMsg)},
  { 168, 176, sizeof(OnlineSendSkinMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ObjectMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AddOneObjectMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BatchAddObjectsMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RemoveOneObjectMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BatchRemoveObjectsMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UpdateObjectMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UseObjectMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShopIDMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneShopItem_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllShopItemMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BuyMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllMoneyMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetOneMoneyMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageBoxMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneSkinIndexMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BatchSkinIndexMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneSkinMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BatchSkinMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UseSkinResultMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneBulletMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_BatchBulletMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OnlineSendSkinMsg_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "plane/object.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 22);
}

}  // namespace

void TableStruct::Shutdown() {
  _ObjectMsg_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _AddOneObjectMsg_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _BatchAddObjectsMsg_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _RemoveOneObjectMsg_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _BatchRemoveObjectsMsg_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _UpdateObjectMsg_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _UseObjectMsg_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ShopIDMsg_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _OneShopItem_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _AllShopItemMsg_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _BuyMsg_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _AllMoneyMsg_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _SetOneMoneyMsg_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _MessageBoxMsg_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _OneSkinIndexMsg_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _BatchSkinIndexMsg_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _OneSkinMsg_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _BatchSkinMsg_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _UseSkinResultMsg_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _OneBulletMsg_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _BatchBulletMsg_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _OnlineSendSkinMsg_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::rpc::protobuf_empty_5fmsg_2eproto::InitDefaults();
  _ObjectMsg_default_instance_.DefaultConstruct();
  _AddOneObjectMsg_default_instance_.DefaultConstruct();
  _BatchAddObjectsMsg_default_instance_.DefaultConstruct();
  _RemoveOneObjectMsg_default_instance_.DefaultConstruct();
  _BatchRemoveObjectsMsg_default_instance_.DefaultConstruct();
  _UpdateObjectMsg_default_instance_.DefaultConstruct();
  _UseObjectMsg_default_instance_.DefaultConstruct();
  _ShopIDMsg_default_instance_.DefaultConstruct();
  _OneShopItem_default_instance_.DefaultConstruct();
  _AllShopItemMsg_default_instance_.DefaultConstruct();
  _BuyMsg_default_instance_.DefaultConstruct();
  _AllMoneyMsg_default_instance_.DefaultConstruct();
  _SetOneMoneyMsg_default_instance_.DefaultConstruct();
  _MessageBoxMsg_default_instance_.DefaultConstruct();
  _OneSkinIndexMsg_default_instance_.DefaultConstruct();
  _BatchSkinIndexMsg_default_instance_.DefaultConstruct();
  _OneSkinMsg_default_instance_.DefaultConstruct();
  _BatchSkinMsg_default_instance_.DefaultConstruct();
  _UseSkinResultMsg_default_instance_.DefaultConstruct();
  _OneBulletMsg_default_instance_.DefaultConstruct();
  _BatchBulletMsg_default_instance_.DefaultConstruct();
  _OnlineSendSkinMsg_default_instance_.DefaultConstruct();
  _AddOneObjectMsg_default_instance_.get_mutable()->addobj_ = const_cast< ::plane::ObjectMsg*>(
      ::plane::ObjectMsg::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022plane/object.proto\022\005plane\032\017empty_msg.p"
      "roto\"b\n\tObjectMsg\022\016\n\006baseid\030\001 \001(\r\022\013\n\003uid"
      "\030\002 \001(\004\022\014\n\004name\030\003 \001(\t\022\013\n\003num\030\004 \001(\r\022\014\n\004bin"
      "d\030\005 \001(\r\022\017\n\007upgrade\030\006 \001(\r\"3\n\017AddOneObject"
      "Msg\022 \n\006addobj\030\001 \001(\0132\020.plane.ObjectMsg\"K\n"
      "\022BatchAddObjectsMsg\022\022\n\nis_request\030\001 \001(\r\022"
      "!\n\007addobjs\030\002 \003(\0132\020.plane.ObjectMsg\"!\n\022Re"
      "moveOneObjectMsg\022\013\n\003uid\030\001 \001(\004\"%\n\025BatchRe"
      "moveObjectsMsg\022\014\n\004uids\030\001 \003(\004\"S\n\017UpdateOb"
      "jectMsg\022\013\n\003uid\030\001 \001(\004\022\016\n\006newnum\030\002 \001(\r\022\017\n\007"
      "newbind\030\003 \001(\r\022\022\n\nnewupgrade\030\004 \001(\r\"\033\n\014Use"
      "ObjectMsg\022\013\n\003uid\030\001 \001(\004\"\033\n\tShopIDMsg\022\016\n\006s"
      "hopid\030\001 \001(\r\"Z\n\013OneShopItem\022\013\n\003pos\030\001 \001(\r\022"
      "\016\n\006baseid\030\002 \001(\r\022\r\n\005money\030\003 \001(\r\022\016\n\006ticket"
      "\030\004 \001(\r\022\017\n\007plastic\030\005 \001(\r\"I\n\016AllShopItemMs"
      "g\022\021\n\treqshopid\030\001 \001(\r\022$\n\010allitems\030\002 \003(\0132\022"
      ".plane.OneShopItem\"%\n\006BuyMsg\022\016\n\006shopid\030\001"
      " \001(\r\022\013\n\003pos\030\002 \001(\r\"=\n\013AllMoneyMsg\022\r\n\005mone"
      "y\030\001 \001(\r\022\016\n\006ticket\030\002 \001(\r\022\017\n\007plastic\030\003 \001(\r"
      "\"\200\001\n\016SetOneMoneyMsg\022-\n\004type\030\001 \001(\0162\037.plan"
      "e.SetOneMoneyMsg.MoneyType\022\016\n\006newnum\030\002 \001"
      "(\r\"/\n\tMoneyType\022\t\n\005MONEY\020\000\022\n\n\006TICKET\020\001\022\013"
      "\n\007PLASTIC\020\002\" \n\rMessageBoxMsg\022\017\n\007content\030"
      "\001 \001(\t\" \n\017OneSkinIndexMsg\022\r\n\005index\030\001 \001(\r\""
      "&\n\021BatchSkinIndexMsg\022\021\n\tallindexs\030\001 \003(\r\""
      "1\n\nOneSkinMsg\022\r\n\005index\030\001 \001(\r\022\024\n\014disappea"
      "r_ts\030\002 \001(\r\"0\n\014BatchSkinMsg\022 \n\005skins\030\001 \003("
      "\0132\021.plane.OneSkinMsg\"=\n\020UseSkinResultMsg"
      "\022\022\n\nuse_result\030\001 \001(\r\022\025\n\rnew_skinindex\030\002 "
      "\001(\r\"4\n\014OneBulletMsg\022\016\n\006baseid\030\001 \001(\r\022\024\n\014d"
      "isappear_ts\030\002 \001(\r\"6\n\016BatchBulletMsg\022$\n\007b"
      "ullets\030\001 \003(\0132\023.plane.OneBulletMsg\"\213\001\n\021On"
      "lineSendSkinMsg\022\025\n\rcur_skinindex\030\001 \001(\r\022#"
      "\n\010allskins\030\002 \003(\0132\021.plane.OneSkinMsg\022\024\n\014c"
      "ur_bulletid\030\003 \001(\r\022$\n\007bullets\030\004 \003(\0132\023.pla"
      "ne.OneBulletMsg2\360\002\n\006Object\0221\n\021RequestBag"
      "Objects\022\r.rpc.EmptyMsg\032\r.rpc.EmptyMsg\022/\n"
      "\tUseObject\022\023.plane.UseObjectMsg\032\r.rpc.Em"
      "ptyMsg\0222\n\017ReqShopItemList\022\020.plane.ShopID"
      "Msg\032\r.rpc.EmptyMsg\022-\n\rReqByShopItem\022\r.pl"
      "ane.BuyMsg\032\r.rpc.EmptyMsg\0223\n\nReqUseSkin\022"
      "\026.plane.OneSkinIndexMsg\032\r.rpc.EmptyMsg\0223"
      "\n\nActiveSkin\022\026.plane.OneSkinIndexMsg\032\r.r"
      "pc.EmptyMsg\0225\n\014ReqUseBullet\022\026.plane.OneS"
      "kinIndexMsg\032\r.rpc.EmptyMsg2\247\010\n\nObjectPus"
      "h\022;\n\017BatchAddObjects\022\031.plane.BatchAddObj"
      "ectsMsg\032\r.rpc.EmptyMsg\0225\n\014AddOneObject\022\026"
      ".plane.AddOneObjectMsg\032\r.rpc.EmptyMsg\022;\n"
      "\017RemoveOneObject\022\031.plane.RemoveOneObject"
      "Msg\032\r.rpc.EmptyMsg\022A\n\022BatchRemoveObjects"
      "\022\034.plane.BatchRemoveObjectsMsg\032\r.rpc.Emp"
      "tyMsg\0228\n\017UpdateOneObject\022\026.plane.UpdateO"
      "bjectMsg\032\r.rpc.EmptyMsg\0229\n\021NotifyAllShop"
      "Item\022\025.plane.AllShopItemMsg\032\r.rpc.EmptyM"
      "sg\0227\n\022NotifyAllMoneyInfo\022\022.plane.AllMone"
      "yMsg\032\r.rpc.EmptyMsg\022:\n\022UpdateOneMoenyInf"
      "o\022\025.plane.SetOneMoneyMsg\032\r.rpc.EmptyMsg\022"
      "4\n\rPopMessageBox\022\024.plane.MessageBoxMsg\032\r"
      ".rpc.EmptyMsg\022=\n\022OnlineSendAllSkins\022\030.pl"
      "ane.OnlineSendSkinMsg\032\r.rpc.EmptyMsg\022.\n\n"
      "AddOneSkin\022\021.plane.OneSkinMsg\032\r.rpc.Empt"
      "yMsg\0223\n\rBatchAddSkins\022\023.plane.BatchSkinM"
      "sg\032\r.rpc.EmptyMsg\0222\n\014AddOneBullet\022\023.plan"
      "e.OneBulletMsg\032\r.rpc.EmptyMsg\0226\n\rRemoveO"
      "neSkin\022\026.plane.OneSkinIndexMsg\032\r.rpc.Emp"
      "tyMsg\022;\n\020BatchRemoveSkins\022\030.plane.BatchS"
      "kinIndexMsg\032\r.rpc.EmptyMsg\0228\n\017RemoveOneB"
      "ullet\022\026.plane.OneSkinIndexMsg\032\r.rpc.Empt"
      "yMsg\022=\n\023NotifyUseSkinResult\022\027.plane.UseS"
      "kinResultMsg\032\r.rpc.EmptyMsg\022\?\n\025NotifyUse"
      "BulletResult\022\027.plane.UseSkinResultMsg\032\r."
      "rpc.EmptyMsg"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2852);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "plane/object.proto", &protobuf_RegisterTypes);
  ::rpc::protobuf_empty_5fmsg_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_plane_2fobject_2eproto

const ::google::protobuf::EnumDescriptor* SetOneMoneyMsg_MoneyType_descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_enum_descriptors[0];
}
bool SetOneMoneyMsg_MoneyType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const SetOneMoneyMsg_MoneyType SetOneMoneyMsg::MONEY;
const SetOneMoneyMsg_MoneyType SetOneMoneyMsg::TICKET;
const SetOneMoneyMsg_MoneyType SetOneMoneyMsg::PLASTIC;
const SetOneMoneyMsg_MoneyType SetOneMoneyMsg::MoneyType_MIN;
const SetOneMoneyMsg_MoneyType SetOneMoneyMsg::MoneyType_MAX;
const int SetOneMoneyMsg::MoneyType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ObjectMsg::kBaseidFieldNumber;
const int ObjectMsg::kUidFieldNumber;
const int ObjectMsg::kNameFieldNumber;
const int ObjectMsg::kNumFieldNumber;
const int ObjectMsg::kBindFieldNumber;
const int ObjectMsg::kUpgradeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ObjectMsg::ObjectMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.ObjectMsg)
}
ObjectMsg::ObjectMsg(const ObjectMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&uid_, &from.uid_,
    reinterpret_cast<char*>(&upgrade_) -
    reinterpret_cast<char*>(&uid_) + sizeof(upgrade_));
  // @@protoc_insertion_point(copy_constructor:plane.ObjectMsg)
}

void ObjectMsg::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, reinterpret_cast<char*>(&upgrade_) -
    reinterpret_cast<char*>(&uid_) + sizeof(upgrade_));
}

ObjectMsg::~ObjectMsg() {
  // @@protoc_insertion_point(destructor:plane.ObjectMsg)
  SharedDtor();
}

void ObjectMsg::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ObjectMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ObjectMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[0].descriptor;
}

const ObjectMsg& ObjectMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

ObjectMsg* ObjectMsg::New(::google::protobuf::Arena* arena) const {
  ObjectMsg* n = new ObjectMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ObjectMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.ObjectMsg)
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    ::memset(&uid_, 0, reinterpret_cast<char*>(&upgrade_) -
      reinterpret_cast<char*>(&uid_) + sizeof(upgrade_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ObjectMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.ObjectMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 baseid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_baseid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &baseid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 uid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.ObjectMsg.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 bind = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u)) {
          set_has_bind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 upgrade = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(48u)) {
          set_has_upgrade();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &upgrade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.ObjectMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.ObjectMsg)
  return false;
#undef DO_
}

void ObjectMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.ObjectMsg)
  // optional uint32 baseid = 1;
  if (has_baseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->baseid(), output);
  }

  // optional uint64 uid = 2;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->uid(), output);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.ObjectMsg.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->name(), output);
  }

  // optional uint32 num = 4;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->num(), output);
  }

  // optional uint32 bind = 5;
  if (has_bind()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->bind(), output);
  }

  // optional uint32 upgrade = 6;
  if (has_upgrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->upgrade(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.ObjectMsg)
}

::google::protobuf::uint8* ObjectMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.ObjectMsg)
  // optional uint32 baseid = 1;
  if (has_baseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->baseid(), target);
  }

  // optional uint64 uid = 2;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->uid(), target);
  }

  // optional string name = 3;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.ObjectMsg.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->name(), target);
  }

  // optional uint32 num = 4;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->num(), target);
  }

  // optional uint32 bind = 5;
  if (has_bind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->bind(), target);
  }

  // optional uint32 upgrade = 6;
  if (has_upgrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->upgrade(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.ObjectMsg)
  return target;
}

size_t ObjectMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.ObjectMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string name = 3;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 uid = 2;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional uint32 baseid = 1;
    if (has_baseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->baseid());
    }

    // optional uint32 num = 4;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

    // optional uint32 bind = 5;
    if (has_bind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->bind());
    }

    // optional uint32 upgrade = 6;
    if (has_upgrade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->upgrade());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ObjectMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.ObjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ObjectMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.ObjectMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.ObjectMsg)
    MergeFrom(*source);
  }
}

void ObjectMsg::MergeFrom(const ObjectMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.ObjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 63u) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_baseid()) {
      set_baseid(from.baseid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
    if (from.has_bind()) {
      set_bind(from.bind());
    }
    if (from.has_upgrade()) {
      set_upgrade(from.upgrade());
    }
  }
}

void ObjectMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.ObjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectMsg::CopyFrom(const ObjectMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.ObjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectMsg::IsInitialized() const {
  return true;
}

void ObjectMsg::Swap(ObjectMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ObjectMsg::InternalSwap(ObjectMsg* other) {
  name_.Swap(&other->name_);
  std::swap(uid_, other->uid_);
  std::swap(baseid_, other->baseid_);
  std::swap(num_, other->num_);
  std::swap(bind_, other->bind_);
  std::swap(upgrade_, other->upgrade_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ObjectMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ObjectMsg

// optional uint32 baseid = 1;
bool ObjectMsg::has_baseid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ObjectMsg::set_has_baseid() {
  _has_bits_[0] |= 0x00000004u;
}
void ObjectMsg::clear_has_baseid() {
  _has_bits_[0] &= ~0x00000004u;
}
void ObjectMsg::clear_baseid() {
  baseid_ = 0u;
  clear_has_baseid();
}
::google::protobuf::uint32 ObjectMsg::baseid() const {
  // @@protoc_insertion_point(field_get:plane.ObjectMsg.baseid)
  return baseid_;
}
void ObjectMsg::set_baseid(::google::protobuf::uint32 value) {
  set_has_baseid();
  baseid_ = value;
  // @@protoc_insertion_point(field_set:plane.ObjectMsg.baseid)
}

// optional uint64 uid = 2;
bool ObjectMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ObjectMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
void ObjectMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
void ObjectMsg::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
::google::protobuf::uint64 ObjectMsg::uid() const {
  // @@protoc_insertion_point(field_get:plane.ObjectMsg.uid)
  return uid_;
}
void ObjectMsg::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.ObjectMsg.uid)
}

// optional string name = 3;
bool ObjectMsg::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ObjectMsg::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void ObjectMsg::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void ObjectMsg::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& ObjectMsg::name() const {
  // @@protoc_insertion_point(field_get:plane.ObjectMsg.name)
  return name_.GetNoArena();
}
void ObjectMsg::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.ObjectMsg.name)
}
#if LANG_CXX11
void ObjectMsg::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.ObjectMsg.name)
}
#endif
void ObjectMsg::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.ObjectMsg.name)
}
void ObjectMsg::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.ObjectMsg.name)
}
::std::string* ObjectMsg::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:plane.ObjectMsg.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ObjectMsg::release_name() {
  // @@protoc_insertion_point(field_release:plane.ObjectMsg.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ObjectMsg::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:plane.ObjectMsg.name)
}

// optional uint32 num = 4;
bool ObjectMsg::has_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void ObjectMsg::set_has_num() {
  _has_bits_[0] |= 0x00000008u;
}
void ObjectMsg::clear_has_num() {
  _has_bits_[0] &= ~0x00000008u;
}
void ObjectMsg::clear_num() {
  num_ = 0u;
  clear_has_num();
}
::google::protobuf::uint32 ObjectMsg::num() const {
  // @@protoc_insertion_point(field_get:plane.ObjectMsg.num)
  return num_;
}
void ObjectMsg::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:plane.ObjectMsg.num)
}

// optional uint32 bind = 5;
bool ObjectMsg::has_bind() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void ObjectMsg::set_has_bind() {
  _has_bits_[0] |= 0x00000010u;
}
void ObjectMsg::clear_has_bind() {
  _has_bits_[0] &= ~0x00000010u;
}
void ObjectMsg::clear_bind() {
  bind_ = 0u;
  clear_has_bind();
}
::google::protobuf::uint32 ObjectMsg::bind() const {
  // @@protoc_insertion_point(field_get:plane.ObjectMsg.bind)
  return bind_;
}
void ObjectMsg::set_bind(::google::protobuf::uint32 value) {
  set_has_bind();
  bind_ = value;
  // @@protoc_insertion_point(field_set:plane.ObjectMsg.bind)
}

// optional uint32 upgrade = 6;
bool ObjectMsg::has_upgrade() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void ObjectMsg::set_has_upgrade() {
  _has_bits_[0] |= 0x00000020u;
}
void ObjectMsg::clear_has_upgrade() {
  _has_bits_[0] &= ~0x00000020u;
}
void ObjectMsg::clear_upgrade() {
  upgrade_ = 0u;
  clear_has_upgrade();
}
::google::protobuf::uint32 ObjectMsg::upgrade() const {
  // @@protoc_insertion_point(field_get:plane.ObjectMsg.upgrade)
  return upgrade_;
}
void ObjectMsg::set_upgrade(::google::protobuf::uint32 value) {
  set_has_upgrade();
  upgrade_ = value;
  // @@protoc_insertion_point(field_set:plane.ObjectMsg.upgrade)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AddOneObjectMsg::kAddobjFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AddOneObjectMsg::AddOneObjectMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.AddOneObjectMsg)
}
AddOneObjectMsg::AddOneObjectMsg(const AddOneObjectMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_addobj()) {
    addobj_ = new ::plane::ObjectMsg(*from.addobj_);
  } else {
    addobj_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:plane.AddOneObjectMsg)
}

void AddOneObjectMsg::SharedCtor() {
  _cached_size_ = 0;
  addobj_ = NULL;
}

AddOneObjectMsg::~AddOneObjectMsg() {
  // @@protoc_insertion_point(destructor:plane.AddOneObjectMsg)
  SharedDtor();
}

void AddOneObjectMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete addobj_;
  }
}

void AddOneObjectMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AddOneObjectMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[1].descriptor;
}

const AddOneObjectMsg& AddOneObjectMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

AddOneObjectMsg* AddOneObjectMsg::New(::google::protobuf::Arena* arena) const {
  AddOneObjectMsg* n = new AddOneObjectMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AddOneObjectMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.AddOneObjectMsg)
  if (has_addobj()) {
    GOOGLE_DCHECK(addobj_ != NULL);
    addobj_->::plane::ObjectMsg::Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AddOneObjectMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.AddOneObjectMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .plane.ObjectMsg addobj = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_addobj()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.AddOneObjectMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.AddOneObjectMsg)
  return false;
#undef DO_
}

void AddOneObjectMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.AddOneObjectMsg)
  // optional .plane.ObjectMsg addobj = 1;
  if (has_addobj()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->addobj_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.AddOneObjectMsg)
}

::google::protobuf::uint8* AddOneObjectMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.AddOneObjectMsg)
  // optional .plane.ObjectMsg addobj = 1;
  if (has_addobj()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->addobj_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.AddOneObjectMsg)
  return target;
}

size_t AddOneObjectMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.AddOneObjectMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional .plane.ObjectMsg addobj = 1;
  if (has_addobj()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->addobj_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AddOneObjectMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.AddOneObjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AddOneObjectMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AddOneObjectMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.AddOneObjectMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.AddOneObjectMsg)
    MergeFrom(*source);
  }
}

void AddOneObjectMsg::MergeFrom(const AddOneObjectMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.AddOneObjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_addobj()) {
    mutable_addobj()->::plane::ObjectMsg::MergeFrom(from.addobj());
  }
}

void AddOneObjectMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.AddOneObjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddOneObjectMsg::CopyFrom(const AddOneObjectMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.AddOneObjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddOneObjectMsg::IsInitialized() const {
  return true;
}

void AddOneObjectMsg::Swap(AddOneObjectMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AddOneObjectMsg::InternalSwap(AddOneObjectMsg* other) {
  std::swap(addobj_, other->addobj_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AddOneObjectMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AddOneObjectMsg

// optional .plane.ObjectMsg addobj = 1;
bool AddOneObjectMsg::has_addobj() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AddOneObjectMsg::set_has_addobj() {
  _has_bits_[0] |= 0x00000001u;
}
void AddOneObjectMsg::clear_has_addobj() {
  _has_bits_[0] &= ~0x00000001u;
}
void AddOneObjectMsg::clear_addobj() {
  if (addobj_ != NULL) addobj_->::plane::ObjectMsg::Clear();
  clear_has_addobj();
}
const ::plane::ObjectMsg& AddOneObjectMsg::addobj() const {
  // @@protoc_insertion_point(field_get:plane.AddOneObjectMsg.addobj)
  return addobj_ != NULL ? *addobj_
                         : *::plane::ObjectMsg::internal_default_instance();
}
::plane::ObjectMsg* AddOneObjectMsg::mutable_addobj() {
  set_has_addobj();
  if (addobj_ == NULL) {
    addobj_ = new ::plane::ObjectMsg;
  }
  // @@protoc_insertion_point(field_mutable:plane.AddOneObjectMsg.addobj)
  return addobj_;
}
::plane::ObjectMsg* AddOneObjectMsg::release_addobj() {
  // @@protoc_insertion_point(field_release:plane.AddOneObjectMsg.addobj)
  clear_has_addobj();
  ::plane::ObjectMsg* temp = addobj_;
  addobj_ = NULL;
  return temp;
}
void AddOneObjectMsg::set_allocated_addobj(::plane::ObjectMsg* addobj) {
  delete addobj_;
  addobj_ = addobj;
  if (addobj) {
    set_has_addobj();
  } else {
    clear_has_addobj();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.AddOneObjectMsg.addobj)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchAddObjectsMsg::kIsRequestFieldNumber;
const int BatchAddObjectsMsg::kAddobjsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchAddObjectsMsg::BatchAddObjectsMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.BatchAddObjectsMsg)
}
BatchAddObjectsMsg::BatchAddObjectsMsg(const BatchAddObjectsMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      addobjs_(from.addobjs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_request_ = from.is_request_;
  // @@protoc_insertion_point(copy_constructor:plane.BatchAddObjectsMsg)
}

void BatchAddObjectsMsg::SharedCtor() {
  _cached_size_ = 0;
  is_request_ = 0u;
}

BatchAddObjectsMsg::~BatchAddObjectsMsg() {
  // @@protoc_insertion_point(destructor:plane.BatchAddObjectsMsg)
  SharedDtor();
}

void BatchAddObjectsMsg::SharedDtor() {
}

void BatchAddObjectsMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchAddObjectsMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[2].descriptor;
}

const BatchAddObjectsMsg& BatchAddObjectsMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

BatchAddObjectsMsg* BatchAddObjectsMsg::New(::google::protobuf::Arena* arena) const {
  BatchAddObjectsMsg* n = new BatchAddObjectsMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchAddObjectsMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.BatchAddObjectsMsg)
  addobjs_.Clear();
  is_request_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BatchAddObjectsMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.BatchAddObjectsMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 is_request = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_is_request();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_request_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .plane.ObjectMsg addobjs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_addobjs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.BatchAddObjectsMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.BatchAddObjectsMsg)
  return false;
#undef DO_
}

void BatchAddObjectsMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.BatchAddObjectsMsg)
  // optional uint32 is_request = 1;
  if (has_is_request()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->is_request(), output);
  }

  // repeated .plane.ObjectMsg addobjs = 2;
  for (unsigned int i = 0, n = this->addobjs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->addobjs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.BatchAddObjectsMsg)
}

::google::protobuf::uint8* BatchAddObjectsMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.BatchAddObjectsMsg)
  // optional uint32 is_request = 1;
  if (has_is_request()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->is_request(), target);
  }

  // repeated .plane.ObjectMsg addobjs = 2;
  for (unsigned int i = 0, n = this->addobjs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->addobjs(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.BatchAddObjectsMsg)
  return target;
}

size_t BatchAddObjectsMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.BatchAddObjectsMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.ObjectMsg addobjs = 2;
  {
    unsigned int count = this->addobjs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->addobjs(i));
    }
  }

  // optional uint32 is_request = 1;
  if (has_is_request()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->is_request());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchAddObjectsMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.BatchAddObjectsMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchAddObjectsMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchAddObjectsMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.BatchAddObjectsMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.BatchAddObjectsMsg)
    MergeFrom(*source);
  }
}

void BatchAddObjectsMsg::MergeFrom(const BatchAddObjectsMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.BatchAddObjectsMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  addobjs_.MergeFrom(from.addobjs_);
  if (from.has_is_request()) {
    set_is_request(from.is_request());
  }
}

void BatchAddObjectsMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.BatchAddObjectsMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchAddObjectsMsg::CopyFrom(const BatchAddObjectsMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.BatchAddObjectsMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchAddObjectsMsg::IsInitialized() const {
  return true;
}

void BatchAddObjectsMsg::Swap(BatchAddObjectsMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchAddObjectsMsg::InternalSwap(BatchAddObjectsMsg* other) {
  addobjs_.UnsafeArenaSwap(&other->addobjs_);
  std::swap(is_request_, other->is_request_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchAddObjectsMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchAddObjectsMsg

// optional uint32 is_request = 1;
bool BatchAddObjectsMsg::has_is_request() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BatchAddObjectsMsg::set_has_is_request() {
  _has_bits_[0] |= 0x00000001u;
}
void BatchAddObjectsMsg::clear_has_is_request() {
  _has_bits_[0] &= ~0x00000001u;
}
void BatchAddObjectsMsg::clear_is_request() {
  is_request_ = 0u;
  clear_has_is_request();
}
::google::protobuf::uint32 BatchAddObjectsMsg::is_request() const {
  // @@protoc_insertion_point(field_get:plane.BatchAddObjectsMsg.is_request)
  return is_request_;
}
void BatchAddObjectsMsg::set_is_request(::google::protobuf::uint32 value) {
  set_has_is_request();
  is_request_ = value;
  // @@protoc_insertion_point(field_set:plane.BatchAddObjectsMsg.is_request)
}

// repeated .plane.ObjectMsg addobjs = 2;
int BatchAddObjectsMsg::addobjs_size() const {
  return addobjs_.size();
}
void BatchAddObjectsMsg::clear_addobjs() {
  addobjs_.Clear();
}
const ::plane::ObjectMsg& BatchAddObjectsMsg::addobjs(int index) const {
  // @@protoc_insertion_point(field_get:plane.BatchAddObjectsMsg.addobjs)
  return addobjs_.Get(index);
}
::plane::ObjectMsg* BatchAddObjectsMsg::mutable_addobjs(int index) {
  // @@protoc_insertion_point(field_mutable:plane.BatchAddObjectsMsg.addobjs)
  return addobjs_.Mutable(index);
}
::plane::ObjectMsg* BatchAddObjectsMsg::add_addobjs() {
  // @@protoc_insertion_point(field_add:plane.BatchAddObjectsMsg.addobjs)
  return addobjs_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::ObjectMsg >*
BatchAddObjectsMsg::mutable_addobjs() {
  // @@protoc_insertion_point(field_mutable_list:plane.BatchAddObjectsMsg.addobjs)
  return &addobjs_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::ObjectMsg >&
BatchAddObjectsMsg::addobjs() const {
  // @@protoc_insertion_point(field_list:plane.BatchAddObjectsMsg.addobjs)
  return addobjs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RemoveOneObjectMsg::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RemoveOneObjectMsg::RemoveOneObjectMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.RemoveOneObjectMsg)
}
RemoveOneObjectMsg::RemoveOneObjectMsg(const RemoveOneObjectMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:plane.RemoveOneObjectMsg)
}

void RemoveOneObjectMsg::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
}

RemoveOneObjectMsg::~RemoveOneObjectMsg() {
  // @@protoc_insertion_point(destructor:plane.RemoveOneObjectMsg)
  SharedDtor();
}

void RemoveOneObjectMsg::SharedDtor() {
}

void RemoveOneObjectMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RemoveOneObjectMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[3].descriptor;
}

const RemoveOneObjectMsg& RemoveOneObjectMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

RemoveOneObjectMsg* RemoveOneObjectMsg::New(::google::protobuf::Arena* arena) const {
  RemoveOneObjectMsg* n = new RemoveOneObjectMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RemoveOneObjectMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.RemoveOneObjectMsg)
  uid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RemoveOneObjectMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.RemoveOneObjectMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 uid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.RemoveOneObjectMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.RemoveOneObjectMsg)
  return false;
#undef DO_
}

void RemoveOneObjectMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.RemoveOneObjectMsg)
  // optional uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.RemoveOneObjectMsg)
}

::google::protobuf::uint8* RemoveOneObjectMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.RemoveOneObjectMsg)
  // optional uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.RemoveOneObjectMsg)
  return target;
}

size_t RemoveOneObjectMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.RemoveOneObjectMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint64 uid = 1;
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RemoveOneObjectMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.RemoveOneObjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const RemoveOneObjectMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RemoveOneObjectMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.RemoveOneObjectMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.RemoveOneObjectMsg)
    MergeFrom(*source);
  }
}

void RemoveOneObjectMsg::MergeFrom(const RemoveOneObjectMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.RemoveOneObjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_uid()) {
    set_uid(from.uid());
  }
}

void RemoveOneObjectMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.RemoveOneObjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RemoveOneObjectMsg::CopyFrom(const RemoveOneObjectMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.RemoveOneObjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOneObjectMsg::IsInitialized() const {
  return true;
}

void RemoveOneObjectMsg::Swap(RemoveOneObjectMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RemoveOneObjectMsg::InternalSwap(RemoveOneObjectMsg* other) {
  std::swap(uid_, other->uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RemoveOneObjectMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RemoveOneObjectMsg

// optional uint64 uid = 1;
bool RemoveOneObjectMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RemoveOneObjectMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void RemoveOneObjectMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void RemoveOneObjectMsg::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
::google::protobuf::uint64 RemoveOneObjectMsg::uid() const {
  // @@protoc_insertion_point(field_get:plane.RemoveOneObjectMsg.uid)
  return uid_;
}
void RemoveOneObjectMsg::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.RemoveOneObjectMsg.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchRemoveObjectsMsg::kUidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchRemoveObjectsMsg::BatchRemoveObjectsMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.BatchRemoveObjectsMsg)
}
BatchRemoveObjectsMsg::BatchRemoveObjectsMsg(const BatchRemoveObjectsMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      uids_(from.uids_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:plane.BatchRemoveObjectsMsg)
}

void BatchRemoveObjectsMsg::SharedCtor() {
  _cached_size_ = 0;
}

BatchRemoveObjectsMsg::~BatchRemoveObjectsMsg() {
  // @@protoc_insertion_point(destructor:plane.BatchRemoveObjectsMsg)
  SharedDtor();
}

void BatchRemoveObjectsMsg::SharedDtor() {
}

void BatchRemoveObjectsMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchRemoveObjectsMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[4].descriptor;
}

const BatchRemoveObjectsMsg& BatchRemoveObjectsMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

BatchRemoveObjectsMsg* BatchRemoveObjectsMsg::New(::google::protobuf::Arena* arena) const {
  BatchRemoveObjectsMsg* n = new BatchRemoveObjectsMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchRemoveObjectsMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.BatchRemoveObjectsMsg)
  uids_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BatchRemoveObjectsMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.BatchRemoveObjectsMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint64 uids = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 8u, input, this->mutable_uids())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_uids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.BatchRemoveObjectsMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.BatchRemoveObjectsMsg)
  return false;
#undef DO_
}

void BatchRemoveObjectsMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.BatchRemoveObjectsMsg)
  // repeated uint64 uids = 1;
  for (int i = 0, n = this->uids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      1, this->uids(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.BatchRemoveObjectsMsg)
}

::google::protobuf::uint8* BatchRemoveObjectsMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.BatchRemoveObjectsMsg)
  // repeated uint64 uids = 1;
  for (int i = 0, n = this->uids_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64ToArray(1, this->uids(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.BatchRemoveObjectsMsg)
  return target;
}

size_t BatchRemoveObjectsMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.BatchRemoveObjectsMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint64 uids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->uids_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->uids_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchRemoveObjectsMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.BatchRemoveObjectsMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchRemoveObjectsMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchRemoveObjectsMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.BatchRemoveObjectsMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.BatchRemoveObjectsMsg)
    MergeFrom(*source);
  }
}

void BatchRemoveObjectsMsg::MergeFrom(const BatchRemoveObjectsMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.BatchRemoveObjectsMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uids_.MergeFrom(from.uids_);
}

void BatchRemoveObjectsMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.BatchRemoveObjectsMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchRemoveObjectsMsg::CopyFrom(const BatchRemoveObjectsMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.BatchRemoveObjectsMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchRemoveObjectsMsg::IsInitialized() const {
  return true;
}

void BatchRemoveObjectsMsg::Swap(BatchRemoveObjectsMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchRemoveObjectsMsg::InternalSwap(BatchRemoveObjectsMsg* other) {
  uids_.UnsafeArenaSwap(&other->uids_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchRemoveObjectsMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchRemoveObjectsMsg

// repeated uint64 uids = 1;
int BatchRemoveObjectsMsg::uids_size() const {
  return uids_.size();
}
void BatchRemoveObjectsMsg::clear_uids() {
  uids_.Clear();
}
::google::protobuf::uint64 BatchRemoveObjectsMsg::uids(int index) const {
  // @@protoc_insertion_point(field_get:plane.BatchRemoveObjectsMsg.uids)
  return uids_.Get(index);
}
void BatchRemoveObjectsMsg::set_uids(int index, ::google::protobuf::uint64 value) {
  uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:plane.BatchRemoveObjectsMsg.uids)
}
void BatchRemoveObjectsMsg::add_uids(::google::protobuf::uint64 value) {
  uids_.Add(value);
  // @@protoc_insertion_point(field_add:plane.BatchRemoveObjectsMsg.uids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
BatchRemoveObjectsMsg::uids() const {
  // @@protoc_insertion_point(field_list:plane.BatchRemoveObjectsMsg.uids)
  return uids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
BatchRemoveObjectsMsg::mutable_uids() {
  // @@protoc_insertion_point(field_mutable_list:plane.BatchRemoveObjectsMsg.uids)
  return &uids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UpdateObjectMsg::kUidFieldNumber;
const int UpdateObjectMsg::kNewnumFieldNumber;
const int UpdateObjectMsg::kNewbindFieldNumber;
const int UpdateObjectMsg::kNewupgradeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UpdateObjectMsg::UpdateObjectMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.UpdateObjectMsg)
}
UpdateObjectMsg::UpdateObjectMsg(const UpdateObjectMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    reinterpret_cast<char*>(&newupgrade_) -
    reinterpret_cast<char*>(&uid_) + sizeof(newupgrade_));
  // @@protoc_insertion_point(copy_constructor:plane.UpdateObjectMsg)
}

void UpdateObjectMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&uid_, 0, reinterpret_cast<char*>(&newupgrade_) -
    reinterpret_cast<char*>(&uid_) + sizeof(newupgrade_));
}

UpdateObjectMsg::~UpdateObjectMsg() {
  // @@protoc_insertion_point(destructor:plane.UpdateObjectMsg)
  SharedDtor();
}

void UpdateObjectMsg::SharedDtor() {
}

void UpdateObjectMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UpdateObjectMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[5].descriptor;
}

const UpdateObjectMsg& UpdateObjectMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

UpdateObjectMsg* UpdateObjectMsg::New(::google::protobuf::Arena* arena) const {
  UpdateObjectMsg* n = new UpdateObjectMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UpdateObjectMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.UpdateObjectMsg)
  if (_has_bits_[0 / 32] & 15u) {
    ::memset(&uid_, 0, reinterpret_cast<char*>(&newupgrade_) -
      reinterpret_cast<char*>(&uid_) + sizeof(newupgrade_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UpdateObjectMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.UpdateObjectMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 uid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 newnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_newnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &newnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 newbind = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_newbind();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &newbind_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 newupgrade = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {
          set_has_newupgrade();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &newupgrade_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.UpdateObjectMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.UpdateObjectMsg)
  return false;
#undef DO_
}

void UpdateObjectMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.UpdateObjectMsg)
  // optional uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  // optional uint32 newnum = 2;
  if (has_newnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->newnum(), output);
  }

  // optional uint32 newbind = 3;
  if (has_newbind()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->newbind(), output);
  }

  // optional uint32 newupgrade = 4;
  if (has_newupgrade()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->newupgrade(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.UpdateObjectMsg)
}

::google::protobuf::uint8* UpdateObjectMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.UpdateObjectMsg)
  // optional uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  // optional uint32 newnum = 2;
  if (has_newnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->newnum(), target);
  }

  // optional uint32 newbind = 3;
  if (has_newbind()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->newbind(), target);
  }

  // optional uint32 newupgrade = 4;
  if (has_newupgrade()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->newupgrade(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.UpdateObjectMsg)
  return target;
}

size_t UpdateObjectMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.UpdateObjectMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional uint64 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->uid());
    }

    // optional uint32 newnum = 2;
    if (has_newnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->newnum());
    }

    // optional uint32 newbind = 3;
    if (has_newbind()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->newbind());
    }

    // optional uint32 newupgrade = 4;
    if (has_newupgrade()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->newupgrade());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UpdateObjectMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.UpdateObjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateObjectMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UpdateObjectMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.UpdateObjectMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.UpdateObjectMsg)
    MergeFrom(*source);
  }
}

void UpdateObjectMsg::MergeFrom(const UpdateObjectMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.UpdateObjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 15u) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_newnum()) {
      set_newnum(from.newnum());
    }
    if (from.has_newbind()) {
      set_newbind(from.newbind());
    }
    if (from.has_newupgrade()) {
      set_newupgrade(from.newupgrade());
    }
  }
}

void UpdateObjectMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.UpdateObjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateObjectMsg::CopyFrom(const UpdateObjectMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.UpdateObjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateObjectMsg::IsInitialized() const {
  return true;
}

void UpdateObjectMsg::Swap(UpdateObjectMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UpdateObjectMsg::InternalSwap(UpdateObjectMsg* other) {
  std::swap(uid_, other->uid_);
  std::swap(newnum_, other->newnum_);
  std::swap(newbind_, other->newbind_);
  std::swap(newupgrade_, other->newupgrade_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UpdateObjectMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UpdateObjectMsg

// optional uint64 uid = 1;
bool UpdateObjectMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UpdateObjectMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void UpdateObjectMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UpdateObjectMsg::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
::google::protobuf::uint64 UpdateObjectMsg::uid() const {
  // @@protoc_insertion_point(field_get:plane.UpdateObjectMsg.uid)
  return uid_;
}
void UpdateObjectMsg::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.UpdateObjectMsg.uid)
}

// optional uint32 newnum = 2;
bool UpdateObjectMsg::has_newnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UpdateObjectMsg::set_has_newnum() {
  _has_bits_[0] |= 0x00000002u;
}
void UpdateObjectMsg::clear_has_newnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void UpdateObjectMsg::clear_newnum() {
  newnum_ = 0u;
  clear_has_newnum();
}
::google::protobuf::uint32 UpdateObjectMsg::newnum() const {
  // @@protoc_insertion_point(field_get:plane.UpdateObjectMsg.newnum)
  return newnum_;
}
void UpdateObjectMsg::set_newnum(::google::protobuf::uint32 value) {
  set_has_newnum();
  newnum_ = value;
  // @@protoc_insertion_point(field_set:plane.UpdateObjectMsg.newnum)
}

// optional uint32 newbind = 3;
bool UpdateObjectMsg::has_newbind() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UpdateObjectMsg::set_has_newbind() {
  _has_bits_[0] |= 0x00000004u;
}
void UpdateObjectMsg::clear_has_newbind() {
  _has_bits_[0] &= ~0x00000004u;
}
void UpdateObjectMsg::clear_newbind() {
  newbind_ = 0u;
  clear_has_newbind();
}
::google::protobuf::uint32 UpdateObjectMsg::newbind() const {
  // @@protoc_insertion_point(field_get:plane.UpdateObjectMsg.newbind)
  return newbind_;
}
void UpdateObjectMsg::set_newbind(::google::protobuf::uint32 value) {
  set_has_newbind();
  newbind_ = value;
  // @@protoc_insertion_point(field_set:plane.UpdateObjectMsg.newbind)
}

// optional uint32 newupgrade = 4;
bool UpdateObjectMsg::has_newupgrade() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UpdateObjectMsg::set_has_newupgrade() {
  _has_bits_[0] |= 0x00000008u;
}
void UpdateObjectMsg::clear_has_newupgrade() {
  _has_bits_[0] &= ~0x00000008u;
}
void UpdateObjectMsg::clear_newupgrade() {
  newupgrade_ = 0u;
  clear_has_newupgrade();
}
::google::protobuf::uint32 UpdateObjectMsg::newupgrade() const {
  // @@protoc_insertion_point(field_get:plane.UpdateObjectMsg.newupgrade)
  return newupgrade_;
}
void UpdateObjectMsg::set_newupgrade(::google::protobuf::uint32 value) {
  set_has_newupgrade();
  newupgrade_ = value;
  // @@protoc_insertion_point(field_set:plane.UpdateObjectMsg.newupgrade)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseObjectMsg::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseObjectMsg::UseObjectMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.UseObjectMsg)
}
UseObjectMsg::UseObjectMsg(const UseObjectMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:plane.UseObjectMsg)
}

void UseObjectMsg::SharedCtor() {
  _cached_size_ = 0;
  uid_ = GOOGLE_ULONGLONG(0);
}

UseObjectMsg::~UseObjectMsg() {
  // @@protoc_insertion_point(destructor:plane.UseObjectMsg)
  SharedDtor();
}

void UseObjectMsg::SharedDtor() {
}

void UseObjectMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseObjectMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[6].descriptor;
}

const UseObjectMsg& UseObjectMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

UseObjectMsg* UseObjectMsg::New(::google::protobuf::Arena* arena) const {
  UseObjectMsg* n = new UseObjectMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseObjectMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.UseObjectMsg)
  uid_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UseObjectMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.UseObjectMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint64 uid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.UseObjectMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.UseObjectMsg)
  return false;
#undef DO_
}

void UseObjectMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.UseObjectMsg)
  // optional uint64 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.UseObjectMsg)
}

::google::protobuf::uint8* UseObjectMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.UseObjectMsg)
  // optional uint64 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.UseObjectMsg)
  return target;
}

size_t UseObjectMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.UseObjectMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint64 uid = 1;
  if (has_uid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseObjectMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.UseObjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const UseObjectMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseObjectMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.UseObjectMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.UseObjectMsg)
    MergeFrom(*source);
  }
}

void UseObjectMsg::MergeFrom(const UseObjectMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.UseObjectMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_uid()) {
    set_uid(from.uid());
  }
}

void UseObjectMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.UseObjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseObjectMsg::CopyFrom(const UseObjectMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.UseObjectMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseObjectMsg::IsInitialized() const {
  return true;
}

void UseObjectMsg::Swap(UseObjectMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseObjectMsg::InternalSwap(UseObjectMsg* other) {
  std::swap(uid_, other->uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseObjectMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseObjectMsg

// optional uint64 uid = 1;
bool UseObjectMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UseObjectMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void UseObjectMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void UseObjectMsg::clear_uid() {
  uid_ = GOOGLE_ULONGLONG(0);
  clear_has_uid();
}
::google::protobuf::uint64 UseObjectMsg::uid() const {
  // @@protoc_insertion_point(field_get:plane.UseObjectMsg.uid)
  return uid_;
}
void UseObjectMsg::set_uid(::google::protobuf::uint64 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.UseObjectMsg.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShopIDMsg::kShopidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShopIDMsg::ShopIDMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.ShopIDMsg)
}
ShopIDMsg::ShopIDMsg(const ShopIDMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  shopid_ = from.shopid_;
  // @@protoc_insertion_point(copy_constructor:plane.ShopIDMsg)
}

void ShopIDMsg::SharedCtor() {
  _cached_size_ = 0;
  shopid_ = 0u;
}

ShopIDMsg::~ShopIDMsg() {
  // @@protoc_insertion_point(destructor:plane.ShopIDMsg)
  SharedDtor();
}

void ShopIDMsg::SharedDtor() {
}

void ShopIDMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShopIDMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[7].descriptor;
}

const ShopIDMsg& ShopIDMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShopIDMsg* ShopIDMsg::New(::google::protobuf::Arena* arena) const {
  ShopIDMsg* n = new ShopIDMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShopIDMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.ShopIDMsg)
  shopid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShopIDMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.ShopIDMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 shopid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_shopid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.ShopIDMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.ShopIDMsg)
  return false;
#undef DO_
}

void ShopIDMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.ShopIDMsg)
  // optional uint32 shopid = 1;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shopid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.ShopIDMsg)
}

::google::protobuf::uint8* ShopIDMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.ShopIDMsg)
  // optional uint32 shopid = 1;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shopid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.ShopIDMsg)
  return target;
}

size_t ShopIDMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.ShopIDMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 shopid = 1;
  if (has_shopid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->shopid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShopIDMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.ShopIDMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ShopIDMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShopIDMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.ShopIDMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.ShopIDMsg)
    MergeFrom(*source);
  }
}

void ShopIDMsg::MergeFrom(const ShopIDMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.ShopIDMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_shopid()) {
    set_shopid(from.shopid());
  }
}

void ShopIDMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.ShopIDMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShopIDMsg::CopyFrom(const ShopIDMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.ShopIDMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShopIDMsg::IsInitialized() const {
  return true;
}

void ShopIDMsg::Swap(ShopIDMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShopIDMsg::InternalSwap(ShopIDMsg* other) {
  std::swap(shopid_, other->shopid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShopIDMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShopIDMsg

// optional uint32 shopid = 1;
bool ShopIDMsg::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShopIDMsg::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
void ShopIDMsg::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShopIDMsg::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
::google::protobuf::uint32 ShopIDMsg::shopid() const {
  // @@protoc_insertion_point(field_get:plane.ShopIDMsg.shopid)
  return shopid_;
}
void ShopIDMsg::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
  // @@protoc_insertion_point(field_set:plane.ShopIDMsg.shopid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneShopItem::kPosFieldNumber;
const int OneShopItem::kBaseidFieldNumber;
const int OneShopItem::kMoneyFieldNumber;
const int OneShopItem::kTicketFieldNumber;
const int OneShopItem::kPlasticFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneShopItem::OneShopItem()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OneShopItem)
}
OneShopItem::OneShopItem(const OneShopItem& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&pos_, &from.pos_,
    reinterpret_cast<char*>(&plastic_) -
    reinterpret_cast<char*>(&pos_) + sizeof(plastic_));
  // @@protoc_insertion_point(copy_constructor:plane.OneShopItem)
}

void OneShopItem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pos_, 0, reinterpret_cast<char*>(&plastic_) -
    reinterpret_cast<char*>(&pos_) + sizeof(plastic_));
}

OneShopItem::~OneShopItem() {
  // @@protoc_insertion_point(destructor:plane.OneShopItem)
  SharedDtor();
}

void OneShopItem::SharedDtor() {
}

void OneShopItem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneShopItem::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[8].descriptor;
}

const OneShopItem& OneShopItem::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneShopItem* OneShopItem::New(::google::protobuf::Arena* arena) const {
  OneShopItem* n = new OneShopItem;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneShopItem::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OneShopItem)
  if (_has_bits_[0 / 32] & 31u) {
    ::memset(&pos_, 0, reinterpret_cast<char*>(&plastic_) -
      reinterpret_cast<char*>(&pos_) + sizeof(plastic_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneShopItem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OneShopItem)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 pos = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 baseid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_baseid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &baseid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 money = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ticket = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {
          set_has_ticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 plastic = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u)) {
          set_has_plastic();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &plastic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OneShopItem)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OneShopItem)
  return false;
#undef DO_
}

void OneShopItem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OneShopItem)
  // optional uint32 pos = 1;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->pos(), output);
  }

  // optional uint32 baseid = 2;
  if (has_baseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->baseid(), output);
  }

  // optional uint32 money = 3;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->money(), output);
  }

  // optional uint32 ticket = 4;
  if (has_ticket()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->ticket(), output);
  }

  // optional uint32 plastic = 5;
  if (has_plastic()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->plastic(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OneShopItem)
}

::google::protobuf::uint8* OneShopItem::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OneShopItem)
  // optional uint32 pos = 1;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->pos(), target);
  }

  // optional uint32 baseid = 2;
  if (has_baseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->baseid(), target);
  }

  // optional uint32 money = 3;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->money(), target);
  }

  // optional uint32 ticket = 4;
  if (has_ticket()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->ticket(), target);
  }

  // optional uint32 plastic = 5;
  if (has_plastic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->plastic(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OneShopItem)
  return target;
}

size_t OneShopItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OneShopItem)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional uint32 pos = 1;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

    // optional uint32 baseid = 2;
    if (has_baseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->baseid());
    }

    // optional uint32 money = 3;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->money());
    }

    // optional uint32 ticket = 4;
    if (has_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ticket());
    }

    // optional uint32 plastic = 5;
    if (has_plastic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->plastic());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneShopItem::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OneShopItem)
  GOOGLE_DCHECK_NE(&from, this);
  const OneShopItem* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneShopItem>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OneShopItem)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OneShopItem)
    MergeFrom(*source);
  }
}

void OneShopItem::MergeFrom(const OneShopItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OneShopItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_pos()) {
      set_pos(from.pos());
    }
    if (from.has_baseid()) {
      set_baseid(from.baseid());
    }
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_ticket()) {
      set_ticket(from.ticket());
    }
    if (from.has_plastic()) {
      set_plastic(from.plastic());
    }
  }
}

void OneShopItem::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OneShopItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneShopItem::CopyFrom(const OneShopItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OneShopItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneShopItem::IsInitialized() const {
  return true;
}

void OneShopItem::Swap(OneShopItem* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneShopItem::InternalSwap(OneShopItem* other) {
  std::swap(pos_, other->pos_);
  std::swap(baseid_, other->baseid_);
  std::swap(money_, other->money_);
  std::swap(ticket_, other->ticket_);
  std::swap(plastic_, other->plastic_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneShopItem::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneShopItem

// optional uint32 pos = 1;
bool OneShopItem::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneShopItem::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
void OneShopItem::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneShopItem::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
::google::protobuf::uint32 OneShopItem::pos() const {
  // @@protoc_insertion_point(field_get:plane.OneShopItem.pos)
  return pos_;
}
void OneShopItem::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:plane.OneShopItem.pos)
}

// optional uint32 baseid = 2;
bool OneShopItem::has_baseid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OneShopItem::set_has_baseid() {
  _has_bits_[0] |= 0x00000002u;
}
void OneShopItem::clear_has_baseid() {
  _has_bits_[0] &= ~0x00000002u;
}
void OneShopItem::clear_baseid() {
  baseid_ = 0u;
  clear_has_baseid();
}
::google::protobuf::uint32 OneShopItem::baseid() const {
  // @@protoc_insertion_point(field_get:plane.OneShopItem.baseid)
  return baseid_;
}
void OneShopItem::set_baseid(::google::protobuf::uint32 value) {
  set_has_baseid();
  baseid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneShopItem.baseid)
}

// optional uint32 money = 3;
bool OneShopItem::has_money() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OneShopItem::set_has_money() {
  _has_bits_[0] |= 0x00000004u;
}
void OneShopItem::clear_has_money() {
  _has_bits_[0] &= ~0x00000004u;
}
void OneShopItem::clear_money() {
  money_ = 0u;
  clear_has_money();
}
::google::protobuf::uint32 OneShopItem::money() const {
  // @@protoc_insertion_point(field_get:plane.OneShopItem.money)
  return money_;
}
void OneShopItem::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:plane.OneShopItem.money)
}

// optional uint32 ticket = 4;
bool OneShopItem::has_ticket() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OneShopItem::set_has_ticket() {
  _has_bits_[0] |= 0x00000008u;
}
void OneShopItem::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000008u;
}
void OneShopItem::clear_ticket() {
  ticket_ = 0u;
  clear_has_ticket();
}
::google::protobuf::uint32 OneShopItem::ticket() const {
  // @@protoc_insertion_point(field_get:plane.OneShopItem.ticket)
  return ticket_;
}
void OneShopItem::set_ticket(::google::protobuf::uint32 value) {
  set_has_ticket();
  ticket_ = value;
  // @@protoc_insertion_point(field_set:plane.OneShopItem.ticket)
}

// optional uint32 plastic = 5;
bool OneShopItem::has_plastic() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OneShopItem::set_has_plastic() {
  _has_bits_[0] |= 0x00000010u;
}
void OneShopItem::clear_has_plastic() {
  _has_bits_[0] &= ~0x00000010u;
}
void OneShopItem::clear_plastic() {
  plastic_ = 0u;
  clear_has_plastic();
}
::google::protobuf::uint32 OneShopItem::plastic() const {
  // @@protoc_insertion_point(field_get:plane.OneShopItem.plastic)
  return plastic_;
}
void OneShopItem::set_plastic(::google::protobuf::uint32 value) {
  set_has_plastic();
  plastic_ = value;
  // @@protoc_insertion_point(field_set:plane.OneShopItem.plastic)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllShopItemMsg::kReqshopidFieldNumber;
const int AllShopItemMsg::kAllitemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllShopItemMsg::AllShopItemMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.AllShopItemMsg)
}
AllShopItemMsg::AllShopItemMsg(const AllShopItemMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      allitems_(from.allitems_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  reqshopid_ = from.reqshopid_;
  // @@protoc_insertion_point(copy_constructor:plane.AllShopItemMsg)
}

void AllShopItemMsg::SharedCtor() {
  _cached_size_ = 0;
  reqshopid_ = 0u;
}

AllShopItemMsg::~AllShopItemMsg() {
  // @@protoc_insertion_point(destructor:plane.AllShopItemMsg)
  SharedDtor();
}

void AllShopItemMsg::SharedDtor() {
}

void AllShopItemMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllShopItemMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[9].descriptor;
}

const AllShopItemMsg& AllShopItemMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllShopItemMsg* AllShopItemMsg::New(::google::protobuf::Arena* arena) const {
  AllShopItemMsg* n = new AllShopItemMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllShopItemMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.AllShopItemMsg)
  allitems_.Clear();
  reqshopid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AllShopItemMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.AllShopItemMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 reqshopid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_reqshopid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &reqshopid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .plane.OneShopItem allitems = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_allitems()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.AllShopItemMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.AllShopItemMsg)
  return false;
#undef DO_
}

void AllShopItemMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.AllShopItemMsg)
  // optional uint32 reqshopid = 1;
  if (has_reqshopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->reqshopid(), output);
  }

  // repeated .plane.OneShopItem allitems = 2;
  for (unsigned int i = 0, n = this->allitems_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->allitems(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.AllShopItemMsg)
}

::google::protobuf::uint8* AllShopItemMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.AllShopItemMsg)
  // optional uint32 reqshopid = 1;
  if (has_reqshopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->reqshopid(), target);
  }

  // repeated .plane.OneShopItem allitems = 2;
  for (unsigned int i = 0, n = this->allitems_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->allitems(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.AllShopItemMsg)
  return target;
}

size_t AllShopItemMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.AllShopItemMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OneShopItem allitems = 2;
  {
    unsigned int count = this->allitems_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->allitems(i));
    }
  }

  // optional uint32 reqshopid = 1;
  if (has_reqshopid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->reqshopid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllShopItemMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.AllShopItemMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AllShopItemMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllShopItemMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.AllShopItemMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.AllShopItemMsg)
    MergeFrom(*source);
  }
}

void AllShopItemMsg::MergeFrom(const AllShopItemMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.AllShopItemMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  allitems_.MergeFrom(from.allitems_);
  if (from.has_reqshopid()) {
    set_reqshopid(from.reqshopid());
  }
}

void AllShopItemMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.AllShopItemMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllShopItemMsg::CopyFrom(const AllShopItemMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.AllShopItemMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllShopItemMsg::IsInitialized() const {
  return true;
}

void AllShopItemMsg::Swap(AllShopItemMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllShopItemMsg::InternalSwap(AllShopItemMsg* other) {
  allitems_.UnsafeArenaSwap(&other->allitems_);
  std::swap(reqshopid_, other->reqshopid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllShopItemMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllShopItemMsg

// optional uint32 reqshopid = 1;
bool AllShopItemMsg::has_reqshopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AllShopItemMsg::set_has_reqshopid() {
  _has_bits_[0] |= 0x00000001u;
}
void AllShopItemMsg::clear_has_reqshopid() {
  _has_bits_[0] &= ~0x00000001u;
}
void AllShopItemMsg::clear_reqshopid() {
  reqshopid_ = 0u;
  clear_has_reqshopid();
}
::google::protobuf::uint32 AllShopItemMsg::reqshopid() const {
  // @@protoc_insertion_point(field_get:plane.AllShopItemMsg.reqshopid)
  return reqshopid_;
}
void AllShopItemMsg::set_reqshopid(::google::protobuf::uint32 value) {
  set_has_reqshopid();
  reqshopid_ = value;
  // @@protoc_insertion_point(field_set:plane.AllShopItemMsg.reqshopid)
}

// repeated .plane.OneShopItem allitems = 2;
int AllShopItemMsg::allitems_size() const {
  return allitems_.size();
}
void AllShopItemMsg::clear_allitems() {
  allitems_.Clear();
}
const ::plane::OneShopItem& AllShopItemMsg::allitems(int index) const {
  // @@protoc_insertion_point(field_get:plane.AllShopItemMsg.allitems)
  return allitems_.Get(index);
}
::plane::OneShopItem* AllShopItemMsg::mutable_allitems(int index) {
  // @@protoc_insertion_point(field_mutable:plane.AllShopItemMsg.allitems)
  return allitems_.Mutable(index);
}
::plane::OneShopItem* AllShopItemMsg::add_allitems() {
  // @@protoc_insertion_point(field_add:plane.AllShopItemMsg.allitems)
  return allitems_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneShopItem >*
AllShopItemMsg::mutable_allitems() {
  // @@protoc_insertion_point(field_mutable_list:plane.AllShopItemMsg.allitems)
  return &allitems_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneShopItem >&
AllShopItemMsg::allitems() const {
  // @@protoc_insertion_point(field_list:plane.AllShopItemMsg.allitems)
  return allitems_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BuyMsg::kShopidFieldNumber;
const int BuyMsg::kPosFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BuyMsg::BuyMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.BuyMsg)
}
BuyMsg::BuyMsg(const BuyMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&shopid_, &from.shopid_,
    reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&shopid_) + sizeof(pos_));
  // @@protoc_insertion_point(copy_constructor:plane.BuyMsg)
}

void BuyMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&shopid_, 0, reinterpret_cast<char*>(&pos_) -
    reinterpret_cast<char*>(&shopid_) + sizeof(pos_));
}

BuyMsg::~BuyMsg() {
  // @@protoc_insertion_point(destructor:plane.BuyMsg)
  SharedDtor();
}

void BuyMsg::SharedDtor() {
}

void BuyMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BuyMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[10].descriptor;
}

const BuyMsg& BuyMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

BuyMsg* BuyMsg::New(::google::protobuf::Arena* arena) const {
  BuyMsg* n = new BuyMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BuyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.BuyMsg)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&shopid_, 0, reinterpret_cast<char*>(&pos_) -
      reinterpret_cast<char*>(&shopid_) + sizeof(pos_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BuyMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.BuyMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 shopid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_shopid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &shopid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 pos = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_pos();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &pos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.BuyMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.BuyMsg)
  return false;
#undef DO_
}

void BuyMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.BuyMsg)
  // optional uint32 shopid = 1;
  if (has_shopid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->shopid(), output);
  }

  // optional uint32 pos = 2;
  if (has_pos()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->pos(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.BuyMsg)
}

::google::protobuf::uint8* BuyMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.BuyMsg)
  // optional uint32 shopid = 1;
  if (has_shopid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->shopid(), target);
  }

  // optional uint32 pos = 2;
  if (has_pos()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->pos(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.BuyMsg)
  return target;
}

size_t BuyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.BuyMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 shopid = 1;
    if (has_shopid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->shopid());
    }

    // optional uint32 pos = 2;
    if (has_pos()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->pos());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BuyMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.BuyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const BuyMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BuyMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.BuyMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.BuyMsg)
    MergeFrom(*source);
  }
}

void BuyMsg::MergeFrom(const BuyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.BuyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_shopid()) {
      set_shopid(from.shopid());
    }
    if (from.has_pos()) {
      set_pos(from.pos());
    }
  }
}

void BuyMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.BuyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BuyMsg::CopyFrom(const BuyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.BuyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BuyMsg::IsInitialized() const {
  return true;
}

void BuyMsg::Swap(BuyMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BuyMsg::InternalSwap(BuyMsg* other) {
  std::swap(shopid_, other->shopid_);
  std::swap(pos_, other->pos_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BuyMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BuyMsg

// optional uint32 shopid = 1;
bool BuyMsg::has_shopid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void BuyMsg::set_has_shopid() {
  _has_bits_[0] |= 0x00000001u;
}
void BuyMsg::clear_has_shopid() {
  _has_bits_[0] &= ~0x00000001u;
}
void BuyMsg::clear_shopid() {
  shopid_ = 0u;
  clear_has_shopid();
}
::google::protobuf::uint32 BuyMsg::shopid() const {
  // @@protoc_insertion_point(field_get:plane.BuyMsg.shopid)
  return shopid_;
}
void BuyMsg::set_shopid(::google::protobuf::uint32 value) {
  set_has_shopid();
  shopid_ = value;
  // @@protoc_insertion_point(field_set:plane.BuyMsg.shopid)
}

// optional uint32 pos = 2;
bool BuyMsg::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void BuyMsg::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void BuyMsg::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void BuyMsg::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
::google::protobuf::uint32 BuyMsg::pos() const {
  // @@protoc_insertion_point(field_get:plane.BuyMsg.pos)
  return pos_;
}
void BuyMsg::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:plane.BuyMsg.pos)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllMoneyMsg::kMoneyFieldNumber;
const int AllMoneyMsg::kTicketFieldNumber;
const int AllMoneyMsg::kPlasticFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllMoneyMsg::AllMoneyMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.AllMoneyMsg)
}
AllMoneyMsg::AllMoneyMsg(const AllMoneyMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&money_, &from.money_,
    reinterpret_cast<char*>(&plastic_) -
    reinterpret_cast<char*>(&money_) + sizeof(plastic_));
  // @@protoc_insertion_point(copy_constructor:plane.AllMoneyMsg)
}

void AllMoneyMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&money_, 0, reinterpret_cast<char*>(&plastic_) -
    reinterpret_cast<char*>(&money_) + sizeof(plastic_));
}

AllMoneyMsg::~AllMoneyMsg() {
  // @@protoc_insertion_point(destructor:plane.AllMoneyMsg)
  SharedDtor();
}

void AllMoneyMsg::SharedDtor() {
}

void AllMoneyMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllMoneyMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[11].descriptor;
}

const AllMoneyMsg& AllMoneyMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllMoneyMsg* AllMoneyMsg::New(::google::protobuf::Arena* arena) const {
  AllMoneyMsg* n = new AllMoneyMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllMoneyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.AllMoneyMsg)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&money_, 0, reinterpret_cast<char*>(&plastic_) -
      reinterpret_cast<char*>(&money_) + sizeof(plastic_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AllMoneyMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.AllMoneyMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 money = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_money();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &money_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ticket = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_ticket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ticket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 plastic = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_plastic();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &plastic_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.AllMoneyMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.AllMoneyMsg)
  return false;
#undef DO_
}

void AllMoneyMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.AllMoneyMsg)
  // optional uint32 money = 1;
  if (has_money()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->money(), output);
  }

  // optional uint32 ticket = 2;
  if (has_ticket()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ticket(), output);
  }

  // optional uint32 plastic = 3;
  if (has_plastic()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->plastic(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.AllMoneyMsg)
}

::google::protobuf::uint8* AllMoneyMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.AllMoneyMsg)
  // optional uint32 money = 1;
  if (has_money()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->money(), target);
  }

  // optional uint32 ticket = 2;
  if (has_ticket()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ticket(), target);
  }

  // optional uint32 plastic = 3;
  if (has_plastic()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->plastic(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.AllMoneyMsg)
  return target;
}

size_t AllMoneyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.AllMoneyMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 money = 1;
    if (has_money()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->money());
    }

    // optional uint32 ticket = 2;
    if (has_ticket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ticket());
    }

    // optional uint32 plastic = 3;
    if (has_plastic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->plastic());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllMoneyMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.AllMoneyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AllMoneyMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllMoneyMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.AllMoneyMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.AllMoneyMsg)
    MergeFrom(*source);
  }
}

void AllMoneyMsg::MergeFrom(const AllMoneyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.AllMoneyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_money()) {
      set_money(from.money());
    }
    if (from.has_ticket()) {
      set_ticket(from.ticket());
    }
    if (from.has_plastic()) {
      set_plastic(from.plastic());
    }
  }
}

void AllMoneyMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.AllMoneyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllMoneyMsg::CopyFrom(const AllMoneyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.AllMoneyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllMoneyMsg::IsInitialized() const {
  return true;
}

void AllMoneyMsg::Swap(AllMoneyMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllMoneyMsg::InternalSwap(AllMoneyMsg* other) {
  std::swap(money_, other->money_);
  std::swap(ticket_, other->ticket_);
  std::swap(plastic_, other->plastic_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllMoneyMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllMoneyMsg

// optional uint32 money = 1;
bool AllMoneyMsg::has_money() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AllMoneyMsg::set_has_money() {
  _has_bits_[0] |= 0x00000001u;
}
void AllMoneyMsg::clear_has_money() {
  _has_bits_[0] &= ~0x00000001u;
}
void AllMoneyMsg::clear_money() {
  money_ = 0u;
  clear_has_money();
}
::google::protobuf::uint32 AllMoneyMsg::money() const {
  // @@protoc_insertion_point(field_get:plane.AllMoneyMsg.money)
  return money_;
}
void AllMoneyMsg::set_money(::google::protobuf::uint32 value) {
  set_has_money();
  money_ = value;
  // @@protoc_insertion_point(field_set:plane.AllMoneyMsg.money)
}

// optional uint32 ticket = 2;
bool AllMoneyMsg::has_ticket() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void AllMoneyMsg::set_has_ticket() {
  _has_bits_[0] |= 0x00000002u;
}
void AllMoneyMsg::clear_has_ticket() {
  _has_bits_[0] &= ~0x00000002u;
}
void AllMoneyMsg::clear_ticket() {
  ticket_ = 0u;
  clear_has_ticket();
}
::google::protobuf::uint32 AllMoneyMsg::ticket() const {
  // @@protoc_insertion_point(field_get:plane.AllMoneyMsg.ticket)
  return ticket_;
}
void AllMoneyMsg::set_ticket(::google::protobuf::uint32 value) {
  set_has_ticket();
  ticket_ = value;
  // @@protoc_insertion_point(field_set:plane.AllMoneyMsg.ticket)
}

// optional uint32 plastic = 3;
bool AllMoneyMsg::has_plastic() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void AllMoneyMsg::set_has_plastic() {
  _has_bits_[0] |= 0x00000004u;
}
void AllMoneyMsg::clear_has_plastic() {
  _has_bits_[0] &= ~0x00000004u;
}
void AllMoneyMsg::clear_plastic() {
  plastic_ = 0u;
  clear_has_plastic();
}
::google::protobuf::uint32 AllMoneyMsg::plastic() const {
  // @@protoc_insertion_point(field_get:plane.AllMoneyMsg.plastic)
  return plastic_;
}
void AllMoneyMsg::set_plastic(::google::protobuf::uint32 value) {
  set_has_plastic();
  plastic_ = value;
  // @@protoc_insertion_point(field_set:plane.AllMoneyMsg.plastic)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetOneMoneyMsg::kTypeFieldNumber;
const int SetOneMoneyMsg::kNewnumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetOneMoneyMsg::SetOneMoneyMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.SetOneMoneyMsg)
}
SetOneMoneyMsg::SetOneMoneyMsg(const SetOneMoneyMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&newnum_) -
    reinterpret_cast<char*>(&type_) + sizeof(newnum_));
  // @@protoc_insertion_point(copy_constructor:plane.SetOneMoneyMsg)
}

void SetOneMoneyMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&type_, 0, reinterpret_cast<char*>(&newnum_) -
    reinterpret_cast<char*>(&type_) + sizeof(newnum_));
}

SetOneMoneyMsg::~SetOneMoneyMsg() {
  // @@protoc_insertion_point(destructor:plane.SetOneMoneyMsg)
  SharedDtor();
}

void SetOneMoneyMsg::SharedDtor() {
}

void SetOneMoneyMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetOneMoneyMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[12].descriptor;
}

const SetOneMoneyMsg& SetOneMoneyMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetOneMoneyMsg* SetOneMoneyMsg::New(::google::protobuf::Arena* arena) const {
  SetOneMoneyMsg* n = new SetOneMoneyMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetOneMoneyMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.SetOneMoneyMsg)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&type_, 0, reinterpret_cast<char*>(&newnum_) -
      reinterpret_cast<char*>(&type_) + sizeof(newnum_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SetOneMoneyMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.SetOneMoneyMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .plane.SetOneMoneyMsg.MoneyType type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::plane::SetOneMoneyMsg_MoneyType_IsValid(value)) {
            set_type(static_cast< ::plane::SetOneMoneyMsg_MoneyType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 newnum = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_newnum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &newnum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.SetOneMoneyMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.SetOneMoneyMsg)
  return false;
#undef DO_
}

void SetOneMoneyMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.SetOneMoneyMsg)
  // optional .plane.SetOneMoneyMsg.MoneyType type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional uint32 newnum = 2;
  if (has_newnum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->newnum(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.SetOneMoneyMsg)
}

::google::protobuf::uint8* SetOneMoneyMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.SetOneMoneyMsg)
  // optional .plane.SetOneMoneyMsg.MoneyType type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional uint32 newnum = 2;
  if (has_newnum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->newnum(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.SetOneMoneyMsg)
  return target;
}

size_t SetOneMoneyMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.SetOneMoneyMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .plane.SetOneMoneyMsg.MoneyType type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional uint32 newnum = 2;
    if (has_newnum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->newnum());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetOneMoneyMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.SetOneMoneyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SetOneMoneyMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetOneMoneyMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.SetOneMoneyMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.SetOneMoneyMsg)
    MergeFrom(*source);
  }
}

void SetOneMoneyMsg::MergeFrom(const SetOneMoneyMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.SetOneMoneyMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_newnum()) {
      set_newnum(from.newnum());
    }
  }
}

void SetOneMoneyMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.SetOneMoneyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetOneMoneyMsg::CopyFrom(const SetOneMoneyMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.SetOneMoneyMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetOneMoneyMsg::IsInitialized() const {
  return true;
}

void SetOneMoneyMsg::Swap(SetOneMoneyMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetOneMoneyMsg::InternalSwap(SetOneMoneyMsg* other) {
  std::swap(type_, other->type_);
  std::swap(newnum_, other->newnum_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetOneMoneyMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetOneMoneyMsg

// optional .plane.SetOneMoneyMsg.MoneyType type = 1;
bool SetOneMoneyMsg::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SetOneMoneyMsg::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void SetOneMoneyMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void SetOneMoneyMsg::clear_type() {
  type_ = 0;
  clear_has_type();
}
::plane::SetOneMoneyMsg_MoneyType SetOneMoneyMsg::type() const {
  // @@protoc_insertion_point(field_get:plane.SetOneMoneyMsg.type)
  return static_cast< ::plane::SetOneMoneyMsg_MoneyType >(type_);
}
void SetOneMoneyMsg::set_type(::plane::SetOneMoneyMsg_MoneyType value) {
  assert(::plane::SetOneMoneyMsg_MoneyType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:plane.SetOneMoneyMsg.type)
}

// optional uint32 newnum = 2;
bool SetOneMoneyMsg::has_newnum() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SetOneMoneyMsg::set_has_newnum() {
  _has_bits_[0] |= 0x00000002u;
}
void SetOneMoneyMsg::clear_has_newnum() {
  _has_bits_[0] &= ~0x00000002u;
}
void SetOneMoneyMsg::clear_newnum() {
  newnum_ = 0u;
  clear_has_newnum();
}
::google::protobuf::uint32 SetOneMoneyMsg::newnum() const {
  // @@protoc_insertion_point(field_get:plane.SetOneMoneyMsg.newnum)
  return newnum_;
}
void SetOneMoneyMsg::set_newnum(::google::protobuf::uint32 value) {
  set_has_newnum();
  newnum_ = value;
  // @@protoc_insertion_point(field_set:plane.SetOneMoneyMsg.newnum)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageBoxMsg::kContentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageBoxMsg::MessageBoxMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.MessageBoxMsg)
}
MessageBoxMsg::MessageBoxMsg(const MessageBoxMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  // @@protoc_insertion_point(copy_constructor:plane.MessageBoxMsg)
}

void MessageBoxMsg::SharedCtor() {
  _cached_size_ = 0;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

MessageBoxMsg::~MessageBoxMsg() {
  // @@protoc_insertion_point(destructor:plane.MessageBoxMsg)
  SharedDtor();
}

void MessageBoxMsg::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageBoxMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageBoxMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[13].descriptor;
}

const MessageBoxMsg& MessageBoxMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageBoxMsg* MessageBoxMsg::New(::google::protobuf::Arena* arena) const {
  MessageBoxMsg* n = new MessageBoxMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageBoxMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.MessageBoxMsg)
  if (has_content()) {
    GOOGLE_DCHECK(!content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*content_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageBoxMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.MessageBoxMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string content = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_content()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->content().data(), this->content().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.MessageBoxMsg.content");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.MessageBoxMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.MessageBoxMsg)
  return false;
#undef DO_
}

void MessageBoxMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.MessageBoxMsg)
  // optional string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.MessageBoxMsg.content");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->content(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.MessageBoxMsg)
}

::google::protobuf::uint8* MessageBoxMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.MessageBoxMsg)
  // optional string content = 1;
  if (has_content()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->content().data(), this->content().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.MessageBoxMsg.content");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->content(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.MessageBoxMsg)
  return target;
}

size_t MessageBoxMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.MessageBoxMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string content = 1;
  if (has_content()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->content());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageBoxMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.MessageBoxMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageBoxMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageBoxMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.MessageBoxMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.MessageBoxMsg)
    MergeFrom(*source);
  }
}

void MessageBoxMsg::MergeFrom(const MessageBoxMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.MessageBoxMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_content()) {
    set_has_content();
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
}

void MessageBoxMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.MessageBoxMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageBoxMsg::CopyFrom(const MessageBoxMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.MessageBoxMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageBoxMsg::IsInitialized() const {
  return true;
}

void MessageBoxMsg::Swap(MessageBoxMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageBoxMsg::InternalSwap(MessageBoxMsg* other) {
  content_.Swap(&other->content_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageBoxMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageBoxMsg

// optional string content = 1;
bool MessageBoxMsg::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessageBoxMsg::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
void MessageBoxMsg::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessageBoxMsg::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
const ::std::string& MessageBoxMsg::content() const {
  // @@protoc_insertion_point(field_get:plane.MessageBoxMsg.content)
  return content_.GetNoArena();
}
void MessageBoxMsg::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.MessageBoxMsg.content)
}
#if LANG_CXX11
void MessageBoxMsg::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.MessageBoxMsg.content)
}
#endif
void MessageBoxMsg::set_content(const char* value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.MessageBoxMsg.content)
}
void MessageBoxMsg::set_content(const char* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.MessageBoxMsg.content)
}
::std::string* MessageBoxMsg::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:plane.MessageBoxMsg.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageBoxMsg::release_content() {
  // @@protoc_insertion_point(field_release:plane.MessageBoxMsg.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageBoxMsg::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:plane.MessageBoxMsg.content)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneSkinIndexMsg::kIndexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneSkinIndexMsg::OneSkinIndexMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OneSkinIndexMsg)
}
OneSkinIndexMsg::OneSkinIndexMsg(const OneSkinIndexMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:plane.OneSkinIndexMsg)
}

void OneSkinIndexMsg::SharedCtor() {
  _cached_size_ = 0;
  index_ = 0u;
}

OneSkinIndexMsg::~OneSkinIndexMsg() {
  // @@protoc_insertion_point(destructor:plane.OneSkinIndexMsg)
  SharedDtor();
}

void OneSkinIndexMsg::SharedDtor() {
}

void OneSkinIndexMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneSkinIndexMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[14].descriptor;
}

const OneSkinIndexMsg& OneSkinIndexMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneSkinIndexMsg* OneSkinIndexMsg::New(::google::protobuf::Arena* arena) const {
  OneSkinIndexMsg* n = new OneSkinIndexMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneSkinIndexMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OneSkinIndexMsg)
  index_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneSkinIndexMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OneSkinIndexMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OneSkinIndexMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OneSkinIndexMsg)
  return false;
#undef DO_
}

void OneSkinIndexMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OneSkinIndexMsg)
  // optional uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OneSkinIndexMsg)
}

::google::protobuf::uint8* OneSkinIndexMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OneSkinIndexMsg)
  // optional uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OneSkinIndexMsg)
  return target;
}

size_t OneSkinIndexMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OneSkinIndexMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 index = 1;
  if (has_index()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneSkinIndexMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OneSkinIndexMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const OneSkinIndexMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneSkinIndexMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OneSkinIndexMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OneSkinIndexMsg)
    MergeFrom(*source);
  }
}

void OneSkinIndexMsg::MergeFrom(const OneSkinIndexMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OneSkinIndexMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_index()) {
    set_index(from.index());
  }
}

void OneSkinIndexMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OneSkinIndexMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneSkinIndexMsg::CopyFrom(const OneSkinIndexMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OneSkinIndexMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneSkinIndexMsg::IsInitialized() const {
  return true;
}

void OneSkinIndexMsg::Swap(OneSkinIndexMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneSkinIndexMsg::InternalSwap(OneSkinIndexMsg* other) {
  std::swap(index_, other->index_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneSkinIndexMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneSkinIndexMsg

// optional uint32 index = 1;
bool OneSkinIndexMsg::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneSkinIndexMsg::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void OneSkinIndexMsg::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneSkinIndexMsg::clear_index() {
  index_ = 0u;
  clear_has_index();
}
::google::protobuf::uint32 OneSkinIndexMsg::index() const {
  // @@protoc_insertion_point(field_get:plane.OneSkinIndexMsg.index)
  return index_;
}
void OneSkinIndexMsg::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:plane.OneSkinIndexMsg.index)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchSkinIndexMsg::kAllindexsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchSkinIndexMsg::BatchSkinIndexMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.BatchSkinIndexMsg)
}
BatchSkinIndexMsg::BatchSkinIndexMsg(const BatchSkinIndexMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      allindexs_(from.allindexs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:plane.BatchSkinIndexMsg)
}

void BatchSkinIndexMsg::SharedCtor() {
  _cached_size_ = 0;
}

BatchSkinIndexMsg::~BatchSkinIndexMsg() {
  // @@protoc_insertion_point(destructor:plane.BatchSkinIndexMsg)
  SharedDtor();
}

void BatchSkinIndexMsg::SharedDtor() {
}

void BatchSkinIndexMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchSkinIndexMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[15].descriptor;
}

const BatchSkinIndexMsg& BatchSkinIndexMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

BatchSkinIndexMsg* BatchSkinIndexMsg::New(::google::protobuf::Arena* arena) const {
  BatchSkinIndexMsg* n = new BatchSkinIndexMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchSkinIndexMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.BatchSkinIndexMsg)
  allindexs_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BatchSkinIndexMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.BatchSkinIndexMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 allindexs = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_allindexs())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_allindexs())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.BatchSkinIndexMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.BatchSkinIndexMsg)
  return false;
#undef DO_
}

void BatchSkinIndexMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.BatchSkinIndexMsg)
  // repeated uint32 allindexs = 1;
  for (int i = 0, n = this->allindexs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->allindexs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.BatchSkinIndexMsg)
}

::google::protobuf::uint8* BatchSkinIndexMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.BatchSkinIndexMsg)
  // repeated uint32 allindexs = 1;
  for (int i = 0, n = this->allindexs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->allindexs(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.BatchSkinIndexMsg)
  return target;
}

size_t BatchSkinIndexMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.BatchSkinIndexMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 allindexs = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->allindexs_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->allindexs_size());
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchSkinIndexMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.BatchSkinIndexMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchSkinIndexMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchSkinIndexMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.BatchSkinIndexMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.BatchSkinIndexMsg)
    MergeFrom(*source);
  }
}

void BatchSkinIndexMsg::MergeFrom(const BatchSkinIndexMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.BatchSkinIndexMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  allindexs_.MergeFrom(from.allindexs_);
}

void BatchSkinIndexMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.BatchSkinIndexMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchSkinIndexMsg::CopyFrom(const BatchSkinIndexMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.BatchSkinIndexMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchSkinIndexMsg::IsInitialized() const {
  return true;
}

void BatchSkinIndexMsg::Swap(BatchSkinIndexMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchSkinIndexMsg::InternalSwap(BatchSkinIndexMsg* other) {
  allindexs_.UnsafeArenaSwap(&other->allindexs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchSkinIndexMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchSkinIndexMsg

// repeated uint32 allindexs = 1;
int BatchSkinIndexMsg::allindexs_size() const {
  return allindexs_.size();
}
void BatchSkinIndexMsg::clear_allindexs() {
  allindexs_.Clear();
}
::google::protobuf::uint32 BatchSkinIndexMsg::allindexs(int index) const {
  // @@protoc_insertion_point(field_get:plane.BatchSkinIndexMsg.allindexs)
  return allindexs_.Get(index);
}
void BatchSkinIndexMsg::set_allindexs(int index, ::google::protobuf::uint32 value) {
  allindexs_.Set(index, value);
  // @@protoc_insertion_point(field_set:plane.BatchSkinIndexMsg.allindexs)
}
void BatchSkinIndexMsg::add_allindexs(::google::protobuf::uint32 value) {
  allindexs_.Add(value);
  // @@protoc_insertion_point(field_add:plane.BatchSkinIndexMsg.allindexs)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BatchSkinIndexMsg::allindexs() const {
  // @@protoc_insertion_point(field_list:plane.BatchSkinIndexMsg.allindexs)
  return allindexs_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BatchSkinIndexMsg::mutable_allindexs() {
  // @@protoc_insertion_point(field_mutable_list:plane.BatchSkinIndexMsg.allindexs)
  return &allindexs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneSkinMsg::kIndexFieldNumber;
const int OneSkinMsg::kDisappearTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneSkinMsg::OneSkinMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OneSkinMsg)
}
OneSkinMsg::OneSkinMsg(const OneSkinMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&index_, &from.index_,
    reinterpret_cast<char*>(&disappear_ts_) -
    reinterpret_cast<char*>(&index_) + sizeof(disappear_ts_));
  // @@protoc_insertion_point(copy_constructor:plane.OneSkinMsg)
}

void OneSkinMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&index_, 0, reinterpret_cast<char*>(&disappear_ts_) -
    reinterpret_cast<char*>(&index_) + sizeof(disappear_ts_));
}

OneSkinMsg::~OneSkinMsg() {
  // @@protoc_insertion_point(destructor:plane.OneSkinMsg)
  SharedDtor();
}

void OneSkinMsg::SharedDtor() {
}

void OneSkinMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneSkinMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[16].descriptor;
}

const OneSkinMsg& OneSkinMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneSkinMsg* OneSkinMsg::New(::google::protobuf::Arena* arena) const {
  OneSkinMsg* n = new OneSkinMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneSkinMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OneSkinMsg)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&index_, 0, reinterpret_cast<char*>(&disappear_ts_) -
      reinterpret_cast<char*>(&index_) + sizeof(disappear_ts_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneSkinMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OneSkinMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 index = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_index();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 disappear_ts = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_disappear_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &disappear_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OneSkinMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OneSkinMsg)
  return false;
#undef DO_
}

void OneSkinMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OneSkinMsg)
  // optional uint32 index = 1;
  if (has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->index(), output);
  }

  // optional uint32 disappear_ts = 2;
  if (has_disappear_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->disappear_ts(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OneSkinMsg)
}

::google::protobuf::uint8* OneSkinMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OneSkinMsg)
  // optional uint32 index = 1;
  if (has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->index(), target);
  }

  // optional uint32 disappear_ts = 2;
  if (has_disappear_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->disappear_ts(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OneSkinMsg)
  return target;
}

size_t OneSkinMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OneSkinMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 index = 1;
    if (has_index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->index());
    }

    // optional uint32 disappear_ts = 2;
    if (has_disappear_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->disappear_ts());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneSkinMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OneSkinMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const OneSkinMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneSkinMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OneSkinMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OneSkinMsg)
    MergeFrom(*source);
  }
}

void OneSkinMsg::MergeFrom(const OneSkinMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OneSkinMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_index()) {
      set_index(from.index());
    }
    if (from.has_disappear_ts()) {
      set_disappear_ts(from.disappear_ts());
    }
  }
}

void OneSkinMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OneSkinMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneSkinMsg::CopyFrom(const OneSkinMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OneSkinMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneSkinMsg::IsInitialized() const {
  return true;
}

void OneSkinMsg::Swap(OneSkinMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneSkinMsg::InternalSwap(OneSkinMsg* other) {
  std::swap(index_, other->index_);
  std::swap(disappear_ts_, other->disappear_ts_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneSkinMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneSkinMsg

// optional uint32 index = 1;
bool OneSkinMsg::has_index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneSkinMsg::set_has_index() {
  _has_bits_[0] |= 0x00000001u;
}
void OneSkinMsg::clear_has_index() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneSkinMsg::clear_index() {
  index_ = 0u;
  clear_has_index();
}
::google::protobuf::uint32 OneSkinMsg::index() const {
  // @@protoc_insertion_point(field_get:plane.OneSkinMsg.index)
  return index_;
}
void OneSkinMsg::set_index(::google::protobuf::uint32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:plane.OneSkinMsg.index)
}

// optional uint32 disappear_ts = 2;
bool OneSkinMsg::has_disappear_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OneSkinMsg::set_has_disappear_ts() {
  _has_bits_[0] |= 0x00000002u;
}
void OneSkinMsg::clear_has_disappear_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
void OneSkinMsg::clear_disappear_ts() {
  disappear_ts_ = 0u;
  clear_has_disappear_ts();
}
::google::protobuf::uint32 OneSkinMsg::disappear_ts() const {
  // @@protoc_insertion_point(field_get:plane.OneSkinMsg.disappear_ts)
  return disappear_ts_;
}
void OneSkinMsg::set_disappear_ts(::google::protobuf::uint32 value) {
  set_has_disappear_ts();
  disappear_ts_ = value;
  // @@protoc_insertion_point(field_set:plane.OneSkinMsg.disappear_ts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchSkinMsg::kSkinsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchSkinMsg::BatchSkinMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.BatchSkinMsg)
}
BatchSkinMsg::BatchSkinMsg(const BatchSkinMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      skins_(from.skins_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:plane.BatchSkinMsg)
}

void BatchSkinMsg::SharedCtor() {
  _cached_size_ = 0;
}

BatchSkinMsg::~BatchSkinMsg() {
  // @@protoc_insertion_point(destructor:plane.BatchSkinMsg)
  SharedDtor();
}

void BatchSkinMsg::SharedDtor() {
}

void BatchSkinMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchSkinMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[17].descriptor;
}

const BatchSkinMsg& BatchSkinMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

BatchSkinMsg* BatchSkinMsg::New(::google::protobuf::Arena* arena) const {
  BatchSkinMsg* n = new BatchSkinMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchSkinMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.BatchSkinMsg)
  skins_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BatchSkinMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.BatchSkinMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .plane.OneSkinMsg skins = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_skins()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.BatchSkinMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.BatchSkinMsg)
  return false;
#undef DO_
}

void BatchSkinMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.BatchSkinMsg)
  // repeated .plane.OneSkinMsg skins = 1;
  for (unsigned int i = 0, n = this->skins_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->skins(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.BatchSkinMsg)
}

::google::protobuf::uint8* BatchSkinMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.BatchSkinMsg)
  // repeated .plane.OneSkinMsg skins = 1;
  for (unsigned int i = 0, n = this->skins_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->skins(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.BatchSkinMsg)
  return target;
}

size_t BatchSkinMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.BatchSkinMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OneSkinMsg skins = 1;
  {
    unsigned int count = this->skins_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->skins(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchSkinMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.BatchSkinMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchSkinMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchSkinMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.BatchSkinMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.BatchSkinMsg)
    MergeFrom(*source);
  }
}

void BatchSkinMsg::MergeFrom(const BatchSkinMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.BatchSkinMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  skins_.MergeFrom(from.skins_);
}

void BatchSkinMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.BatchSkinMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchSkinMsg::CopyFrom(const BatchSkinMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.BatchSkinMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchSkinMsg::IsInitialized() const {
  return true;
}

void BatchSkinMsg::Swap(BatchSkinMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchSkinMsg::InternalSwap(BatchSkinMsg* other) {
  skins_.UnsafeArenaSwap(&other->skins_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchSkinMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchSkinMsg

// repeated .plane.OneSkinMsg skins = 1;
int BatchSkinMsg::skins_size() const {
  return skins_.size();
}
void BatchSkinMsg::clear_skins() {
  skins_.Clear();
}
const ::plane::OneSkinMsg& BatchSkinMsg::skins(int index) const {
  // @@protoc_insertion_point(field_get:plane.BatchSkinMsg.skins)
  return skins_.Get(index);
}
::plane::OneSkinMsg* BatchSkinMsg::mutable_skins(int index) {
  // @@protoc_insertion_point(field_mutable:plane.BatchSkinMsg.skins)
  return skins_.Mutable(index);
}
::plane::OneSkinMsg* BatchSkinMsg::add_skins() {
  // @@protoc_insertion_point(field_add:plane.BatchSkinMsg.skins)
  return skins_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneSkinMsg >*
BatchSkinMsg::mutable_skins() {
  // @@protoc_insertion_point(field_mutable_list:plane.BatchSkinMsg.skins)
  return &skins_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneSkinMsg >&
BatchSkinMsg::skins() const {
  // @@protoc_insertion_point(field_list:plane.BatchSkinMsg.skins)
  return skins_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UseSkinResultMsg::kUseResultFieldNumber;
const int UseSkinResultMsg::kNewSkinindexFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UseSkinResultMsg::UseSkinResultMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.UseSkinResultMsg)
}
UseSkinResultMsg::UseSkinResultMsg(const UseSkinResultMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&use_result_, &from.use_result_,
    reinterpret_cast<char*>(&new_skinindex_) -
    reinterpret_cast<char*>(&use_result_) + sizeof(new_skinindex_));
  // @@protoc_insertion_point(copy_constructor:plane.UseSkinResultMsg)
}

void UseSkinResultMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&use_result_, 0, reinterpret_cast<char*>(&new_skinindex_) -
    reinterpret_cast<char*>(&use_result_) + sizeof(new_skinindex_));
}

UseSkinResultMsg::~UseSkinResultMsg() {
  // @@protoc_insertion_point(destructor:plane.UseSkinResultMsg)
  SharedDtor();
}

void UseSkinResultMsg::SharedDtor() {
}

void UseSkinResultMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UseSkinResultMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[18].descriptor;
}

const UseSkinResultMsg& UseSkinResultMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

UseSkinResultMsg* UseSkinResultMsg::New(::google::protobuf::Arena* arena) const {
  UseSkinResultMsg* n = new UseSkinResultMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UseSkinResultMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.UseSkinResultMsg)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&use_result_, 0, reinterpret_cast<char*>(&new_skinindex_) -
      reinterpret_cast<char*>(&use_result_) + sizeof(new_skinindex_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UseSkinResultMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.UseSkinResultMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 use_result = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_use_result();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &use_result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 new_skinindex = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_new_skinindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &new_skinindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.UseSkinResultMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.UseSkinResultMsg)
  return false;
#undef DO_
}

void UseSkinResultMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.UseSkinResultMsg)
  // optional uint32 use_result = 1;
  if (has_use_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->use_result(), output);
  }

  // optional uint32 new_skinindex = 2;
  if (has_new_skinindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->new_skinindex(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.UseSkinResultMsg)
}

::google::protobuf::uint8* UseSkinResultMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.UseSkinResultMsg)
  // optional uint32 use_result = 1;
  if (has_use_result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->use_result(), target);
  }

  // optional uint32 new_skinindex = 2;
  if (has_new_skinindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->new_skinindex(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.UseSkinResultMsg)
  return target;
}

size_t UseSkinResultMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.UseSkinResultMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 use_result = 1;
    if (has_use_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->use_result());
    }

    // optional uint32 new_skinindex = 2;
    if (has_new_skinindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->new_skinindex());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UseSkinResultMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.UseSkinResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const UseSkinResultMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UseSkinResultMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.UseSkinResultMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.UseSkinResultMsg)
    MergeFrom(*source);
  }
}

void UseSkinResultMsg::MergeFrom(const UseSkinResultMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.UseSkinResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_use_result()) {
      set_use_result(from.use_result());
    }
    if (from.has_new_skinindex()) {
      set_new_skinindex(from.new_skinindex());
    }
  }
}

void UseSkinResultMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.UseSkinResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UseSkinResultMsg::CopyFrom(const UseSkinResultMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.UseSkinResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UseSkinResultMsg::IsInitialized() const {
  return true;
}

void UseSkinResultMsg::Swap(UseSkinResultMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UseSkinResultMsg::InternalSwap(UseSkinResultMsg* other) {
  std::swap(use_result_, other->use_result_);
  std::swap(new_skinindex_, other->new_skinindex_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UseSkinResultMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UseSkinResultMsg

// optional uint32 use_result = 1;
bool UseSkinResultMsg::has_use_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UseSkinResultMsg::set_has_use_result() {
  _has_bits_[0] |= 0x00000001u;
}
void UseSkinResultMsg::clear_has_use_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void UseSkinResultMsg::clear_use_result() {
  use_result_ = 0u;
  clear_has_use_result();
}
::google::protobuf::uint32 UseSkinResultMsg::use_result() const {
  // @@protoc_insertion_point(field_get:plane.UseSkinResultMsg.use_result)
  return use_result_;
}
void UseSkinResultMsg::set_use_result(::google::protobuf::uint32 value) {
  set_has_use_result();
  use_result_ = value;
  // @@protoc_insertion_point(field_set:plane.UseSkinResultMsg.use_result)
}

// optional uint32 new_skinindex = 2;
bool UseSkinResultMsg::has_new_skinindex() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UseSkinResultMsg::set_has_new_skinindex() {
  _has_bits_[0] |= 0x00000002u;
}
void UseSkinResultMsg::clear_has_new_skinindex() {
  _has_bits_[0] &= ~0x00000002u;
}
void UseSkinResultMsg::clear_new_skinindex() {
  new_skinindex_ = 0u;
  clear_has_new_skinindex();
}
::google::protobuf::uint32 UseSkinResultMsg::new_skinindex() const {
  // @@protoc_insertion_point(field_get:plane.UseSkinResultMsg.new_skinindex)
  return new_skinindex_;
}
void UseSkinResultMsg::set_new_skinindex(::google::protobuf::uint32 value) {
  set_has_new_skinindex();
  new_skinindex_ = value;
  // @@protoc_insertion_point(field_set:plane.UseSkinResultMsg.new_skinindex)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneBulletMsg::kBaseidFieldNumber;
const int OneBulletMsg::kDisappearTsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneBulletMsg::OneBulletMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OneBulletMsg)
}
OneBulletMsg::OneBulletMsg(const OneBulletMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&baseid_, &from.baseid_,
    reinterpret_cast<char*>(&disappear_ts_) -
    reinterpret_cast<char*>(&baseid_) + sizeof(disappear_ts_));
  // @@protoc_insertion_point(copy_constructor:plane.OneBulletMsg)
}

void OneBulletMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseid_, 0, reinterpret_cast<char*>(&disappear_ts_) -
    reinterpret_cast<char*>(&baseid_) + sizeof(disappear_ts_));
}

OneBulletMsg::~OneBulletMsg() {
  // @@protoc_insertion_point(destructor:plane.OneBulletMsg)
  SharedDtor();
}

void OneBulletMsg::SharedDtor() {
}

void OneBulletMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneBulletMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[19].descriptor;
}

const OneBulletMsg& OneBulletMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneBulletMsg* OneBulletMsg::New(::google::protobuf::Arena* arena) const {
  OneBulletMsg* n = new OneBulletMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneBulletMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OneBulletMsg)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&baseid_, 0, reinterpret_cast<char*>(&disappear_ts_) -
      reinterpret_cast<char*>(&baseid_) + sizeof(disappear_ts_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneBulletMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OneBulletMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 baseid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_baseid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &baseid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 disappear_ts = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_disappear_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &disappear_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OneBulletMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OneBulletMsg)
  return false;
#undef DO_
}

void OneBulletMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OneBulletMsg)
  // optional uint32 baseid = 1;
  if (has_baseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->baseid(), output);
  }

  // optional uint32 disappear_ts = 2;
  if (has_disappear_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->disappear_ts(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OneBulletMsg)
}

::google::protobuf::uint8* OneBulletMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OneBulletMsg)
  // optional uint32 baseid = 1;
  if (has_baseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->baseid(), target);
  }

  // optional uint32 disappear_ts = 2;
  if (has_disappear_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->disappear_ts(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OneBulletMsg)
  return target;
}

size_t OneBulletMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OneBulletMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 baseid = 1;
    if (has_baseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->baseid());
    }

    // optional uint32 disappear_ts = 2;
    if (has_disappear_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->disappear_ts());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneBulletMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OneBulletMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const OneBulletMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneBulletMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OneBulletMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OneBulletMsg)
    MergeFrom(*source);
  }
}

void OneBulletMsg::MergeFrom(const OneBulletMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OneBulletMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_baseid()) {
      set_baseid(from.baseid());
    }
    if (from.has_disappear_ts()) {
      set_disappear_ts(from.disappear_ts());
    }
  }
}

void OneBulletMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OneBulletMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneBulletMsg::CopyFrom(const OneBulletMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OneBulletMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneBulletMsg::IsInitialized() const {
  return true;
}

void OneBulletMsg::Swap(OneBulletMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneBulletMsg::InternalSwap(OneBulletMsg* other) {
  std::swap(baseid_, other->baseid_);
  std::swap(disappear_ts_, other->disappear_ts_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneBulletMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneBulletMsg

// optional uint32 baseid = 1;
bool OneBulletMsg::has_baseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneBulletMsg::set_has_baseid() {
  _has_bits_[0] |= 0x00000001u;
}
void OneBulletMsg::clear_has_baseid() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneBulletMsg::clear_baseid() {
  baseid_ = 0u;
  clear_has_baseid();
}
::google::protobuf::uint32 OneBulletMsg::baseid() const {
  // @@protoc_insertion_point(field_get:plane.OneBulletMsg.baseid)
  return baseid_;
}
void OneBulletMsg::set_baseid(::google::protobuf::uint32 value) {
  set_has_baseid();
  baseid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneBulletMsg.baseid)
}

// optional uint32 disappear_ts = 2;
bool OneBulletMsg::has_disappear_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OneBulletMsg::set_has_disappear_ts() {
  _has_bits_[0] |= 0x00000002u;
}
void OneBulletMsg::clear_has_disappear_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
void OneBulletMsg::clear_disappear_ts() {
  disappear_ts_ = 0u;
  clear_has_disappear_ts();
}
::google::protobuf::uint32 OneBulletMsg::disappear_ts() const {
  // @@protoc_insertion_point(field_get:plane.OneBulletMsg.disappear_ts)
  return disappear_ts_;
}
void OneBulletMsg::set_disappear_ts(::google::protobuf::uint32 value) {
  set_has_disappear_ts();
  disappear_ts_ = value;
  // @@protoc_insertion_point(field_set:plane.OneBulletMsg.disappear_ts)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BatchBulletMsg::kBulletsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BatchBulletMsg::BatchBulletMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.BatchBulletMsg)
}
BatchBulletMsg::BatchBulletMsg(const BatchBulletMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      bullets_(from.bullets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:plane.BatchBulletMsg)
}

void BatchBulletMsg::SharedCtor() {
  _cached_size_ = 0;
}

BatchBulletMsg::~BatchBulletMsg() {
  // @@protoc_insertion_point(destructor:plane.BatchBulletMsg)
  SharedDtor();
}

void BatchBulletMsg::SharedDtor() {
}

void BatchBulletMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BatchBulletMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[20].descriptor;
}

const BatchBulletMsg& BatchBulletMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

BatchBulletMsg* BatchBulletMsg::New(::google::protobuf::Arena* arena) const {
  BatchBulletMsg* n = new BatchBulletMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void BatchBulletMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.BatchBulletMsg)
  bullets_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool BatchBulletMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.BatchBulletMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .plane.OneBulletMsg bullets = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_bullets()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.BatchBulletMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.BatchBulletMsg)
  return false;
#undef DO_
}

void BatchBulletMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.BatchBulletMsg)
  // repeated .plane.OneBulletMsg bullets = 1;
  for (unsigned int i = 0, n = this->bullets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bullets(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.BatchBulletMsg)
}

::google::protobuf::uint8* BatchBulletMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.BatchBulletMsg)
  // repeated .plane.OneBulletMsg bullets = 1;
  for (unsigned int i = 0, n = this->bullets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->bullets(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.BatchBulletMsg)
  return target;
}

size_t BatchBulletMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.BatchBulletMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OneBulletMsg bullets = 1;
  {
    unsigned int count = this->bullets_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bullets(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void BatchBulletMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.BatchBulletMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const BatchBulletMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BatchBulletMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.BatchBulletMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.BatchBulletMsg)
    MergeFrom(*source);
  }
}

void BatchBulletMsg::MergeFrom(const BatchBulletMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.BatchBulletMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bullets_.MergeFrom(from.bullets_);
}

void BatchBulletMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.BatchBulletMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BatchBulletMsg::CopyFrom(const BatchBulletMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.BatchBulletMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BatchBulletMsg::IsInitialized() const {
  return true;
}

void BatchBulletMsg::Swap(BatchBulletMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BatchBulletMsg::InternalSwap(BatchBulletMsg* other) {
  bullets_.UnsafeArenaSwap(&other->bullets_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BatchBulletMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BatchBulletMsg

// repeated .plane.OneBulletMsg bullets = 1;
int BatchBulletMsg::bullets_size() const {
  return bullets_.size();
}
void BatchBulletMsg::clear_bullets() {
  bullets_.Clear();
}
const ::plane::OneBulletMsg& BatchBulletMsg::bullets(int index) const {
  // @@protoc_insertion_point(field_get:plane.BatchBulletMsg.bullets)
  return bullets_.Get(index);
}
::plane::OneBulletMsg* BatchBulletMsg::mutable_bullets(int index) {
  // @@protoc_insertion_point(field_mutable:plane.BatchBulletMsg.bullets)
  return bullets_.Mutable(index);
}
::plane::OneBulletMsg* BatchBulletMsg::add_bullets() {
  // @@protoc_insertion_point(field_add:plane.BatchBulletMsg.bullets)
  return bullets_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneBulletMsg >*
BatchBulletMsg::mutable_bullets() {
  // @@protoc_insertion_point(field_mutable_list:plane.BatchBulletMsg.bullets)
  return &bullets_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneBulletMsg >&
BatchBulletMsg::bullets() const {
  // @@protoc_insertion_point(field_list:plane.BatchBulletMsg.bullets)
  return bullets_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnlineSendSkinMsg::kCurSkinindexFieldNumber;
const int OnlineSendSkinMsg::kAllskinsFieldNumber;
const int OnlineSendSkinMsg::kCurBulletidFieldNumber;
const int OnlineSendSkinMsg::kBulletsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnlineSendSkinMsg::OnlineSendSkinMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fobject_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OnlineSendSkinMsg)
}
OnlineSendSkinMsg::OnlineSendSkinMsg(const OnlineSendSkinMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      allskins_(from.allskins_),
      bullets_(from.bullets_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&cur_skinindex_, &from.cur_skinindex_,
    reinterpret_cast<char*>(&cur_bulletid_) -
    reinterpret_cast<char*>(&cur_skinindex_) + sizeof(cur_bulletid_));
  // @@protoc_insertion_point(copy_constructor:plane.OnlineSendSkinMsg)
}

void OnlineSendSkinMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&cur_skinindex_, 0, reinterpret_cast<char*>(&cur_bulletid_) -
    reinterpret_cast<char*>(&cur_skinindex_) + sizeof(cur_bulletid_));
}

OnlineSendSkinMsg::~OnlineSendSkinMsg() {
  // @@protoc_insertion_point(destructor:plane.OnlineSendSkinMsg)
  SharedDtor();
}

void OnlineSendSkinMsg::SharedDtor() {
}

void OnlineSendSkinMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnlineSendSkinMsg::descriptor() {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[21].descriptor;
}

const OnlineSendSkinMsg& OnlineSendSkinMsg::default_instance() {
  protobuf_plane_2fobject_2eproto::InitDefaults();
  return *internal_default_instance();
}

OnlineSendSkinMsg* OnlineSendSkinMsg::New(::google::protobuf::Arena* arena) const {
  OnlineSendSkinMsg* n = new OnlineSendSkinMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnlineSendSkinMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OnlineSendSkinMsg)
  allskins_.Clear();
  bullets_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&cur_skinindex_, 0, reinterpret_cast<char*>(&cur_bulletid_) -
      reinterpret_cast<char*>(&cur_skinindex_) + sizeof(cur_bulletid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OnlineSendSkinMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OnlineSendSkinMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 cur_skinindex = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_cur_skinindex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_skinindex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .plane.OneSkinMsg allskins = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_allskins()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // optional uint32 cur_bulletid = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_cur_bulletid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &cur_bulletid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .plane.OneBulletMsg bullets = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(34u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_bullets()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OnlineSendSkinMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OnlineSendSkinMsg)
  return false;
#undef DO_
}

void OnlineSendSkinMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OnlineSendSkinMsg)
  // optional uint32 cur_skinindex = 1;
  if (has_cur_skinindex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->cur_skinindex(), output);
  }

  // repeated .plane.OneSkinMsg allskins = 2;
  for (unsigned int i = 0, n = this->allskins_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->allskins(i), output);
  }

  // optional uint32 cur_bulletid = 3;
  if (has_cur_bulletid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->cur_bulletid(), output);
  }

  // repeated .plane.OneBulletMsg bullets = 4;
  for (unsigned int i = 0, n = this->bullets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bullets(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OnlineSendSkinMsg)
}

::google::protobuf::uint8* OnlineSendSkinMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OnlineSendSkinMsg)
  // optional uint32 cur_skinindex = 1;
  if (has_cur_skinindex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->cur_skinindex(), target);
  }

  // repeated .plane.OneSkinMsg allskins = 2;
  for (unsigned int i = 0, n = this->allskins_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->allskins(i), false, target);
  }

  // optional uint32 cur_bulletid = 3;
  if (has_cur_bulletid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->cur_bulletid(), target);
  }

  // repeated .plane.OneBulletMsg bullets = 4;
  for (unsigned int i = 0, n = this->bullets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, this->bullets(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OnlineSendSkinMsg)
  return target;
}

size_t OnlineSendSkinMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OnlineSendSkinMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OneSkinMsg allskins = 2;
  {
    unsigned int count = this->allskins_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->allskins(i));
    }
  }

  // repeated .plane.OneBulletMsg bullets = 4;
  {
    unsigned int count = this->bullets_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bullets(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 cur_skinindex = 1;
    if (has_cur_skinindex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cur_skinindex());
    }

    // optional uint32 cur_bulletid = 3;
    if (has_cur_bulletid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->cur_bulletid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnlineSendSkinMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OnlineSendSkinMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const OnlineSendSkinMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnlineSendSkinMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OnlineSendSkinMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OnlineSendSkinMsg)
    MergeFrom(*source);
  }
}

void OnlineSendSkinMsg::MergeFrom(const OnlineSendSkinMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OnlineSendSkinMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  allskins_.MergeFrom(from.allskins_);
  bullets_.MergeFrom(from.bullets_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_cur_skinindex()) {
      set_cur_skinindex(from.cur_skinindex());
    }
    if (from.has_cur_bulletid()) {
      set_cur_bulletid(from.cur_bulletid());
    }
  }
}

void OnlineSendSkinMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OnlineSendSkinMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnlineSendSkinMsg::CopyFrom(const OnlineSendSkinMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OnlineSendSkinMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnlineSendSkinMsg::IsInitialized() const {
  return true;
}

void OnlineSendSkinMsg::Swap(OnlineSendSkinMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnlineSendSkinMsg::InternalSwap(OnlineSendSkinMsg* other) {
  allskins_.UnsafeArenaSwap(&other->allskins_);
  bullets_.UnsafeArenaSwap(&other->bullets_);
  std::swap(cur_skinindex_, other->cur_skinindex_);
  std::swap(cur_bulletid_, other->cur_bulletid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnlineSendSkinMsg::GetMetadata() const {
  protobuf_plane_2fobject_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fobject_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnlineSendSkinMsg

// optional uint32 cur_skinindex = 1;
bool OnlineSendSkinMsg::has_cur_skinindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OnlineSendSkinMsg::set_has_cur_skinindex() {
  _has_bits_[0] |= 0x00000001u;
}
void OnlineSendSkinMsg::clear_has_cur_skinindex() {
  _has_bits_[0] &= ~0x00000001u;
}
void OnlineSendSkinMsg::clear_cur_skinindex() {
  cur_skinindex_ = 0u;
  clear_has_cur_skinindex();
}
::google::protobuf::uint32 OnlineSendSkinMsg::cur_skinindex() const {
  // @@protoc_insertion_point(field_get:plane.OnlineSendSkinMsg.cur_skinindex)
  return cur_skinindex_;
}
void OnlineSendSkinMsg::set_cur_skinindex(::google::protobuf::uint32 value) {
  set_has_cur_skinindex();
  cur_skinindex_ = value;
  // @@protoc_insertion_point(field_set:plane.OnlineSendSkinMsg.cur_skinindex)
}

// repeated .plane.OneSkinMsg allskins = 2;
int OnlineSendSkinMsg::allskins_size() const {
  return allskins_.size();
}
void OnlineSendSkinMsg::clear_allskins() {
  allskins_.Clear();
}
const ::plane::OneSkinMsg& OnlineSendSkinMsg::allskins(int index) const {
  // @@protoc_insertion_point(field_get:plane.OnlineSendSkinMsg.allskins)
  return allskins_.Get(index);
}
::plane::OneSkinMsg* OnlineSendSkinMsg::mutable_allskins(int index) {
  // @@protoc_insertion_point(field_mutable:plane.OnlineSendSkinMsg.allskins)
  return allskins_.Mutable(index);
}
::plane::OneSkinMsg* OnlineSendSkinMsg::add_allskins() {
  // @@protoc_insertion_point(field_add:plane.OnlineSendSkinMsg.allskins)
  return allskins_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneSkinMsg >*
OnlineSendSkinMsg::mutable_allskins() {
  // @@protoc_insertion_point(field_mutable_list:plane.OnlineSendSkinMsg.allskins)
  return &allskins_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneSkinMsg >&
OnlineSendSkinMsg::allskins() const {
  // @@protoc_insertion_point(field_list:plane.OnlineSendSkinMsg.allskins)
  return allskins_;
}

// optional uint32 cur_bulletid = 3;
bool OnlineSendSkinMsg::has_cur_bulletid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OnlineSendSkinMsg::set_has_cur_bulletid() {
  _has_bits_[0] |= 0x00000002u;
}
void OnlineSendSkinMsg::clear_has_cur_bulletid() {
  _has_bits_[0] &= ~0x00000002u;
}
void OnlineSendSkinMsg::clear_cur_bulletid() {
  cur_bulletid_ = 0u;
  clear_has_cur_bulletid();
}
::google::protobuf::uint32 OnlineSendSkinMsg::cur_bulletid() const {
  // @@protoc_insertion_point(field_get:plane.OnlineSendSkinMsg.cur_bulletid)
  return cur_bulletid_;
}
void OnlineSendSkinMsg::set_cur_bulletid(::google::protobuf::uint32 value) {
  set_has_cur_bulletid();
  cur_bulletid_ = value;
  // @@protoc_insertion_point(field_set:plane.OnlineSendSkinMsg.cur_bulletid)
}

// repeated .plane.OneBulletMsg bullets = 4;
int OnlineSendSkinMsg::bullets_size() const {
  return bullets_.size();
}
void OnlineSendSkinMsg::clear_bullets() {
  bullets_.Clear();
}
const ::plane::OneBulletMsg& OnlineSendSkinMsg::bullets(int index) const {
  // @@protoc_insertion_point(field_get:plane.OnlineSendSkinMsg.bullets)
  return bullets_.Get(index);
}
::plane::OneBulletMsg* OnlineSendSkinMsg::mutable_bullets(int index) {
  // @@protoc_insertion_point(field_mutable:plane.OnlineSendSkinMsg.bullets)
  return bullets_.Mutable(index);
}
::plane::OneBulletMsg* OnlineSendSkinMsg::add_bullets() {
  // @@protoc_insertion_point(field_add:plane.OnlineSendSkinMsg.bullets)
  return bullets_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneBulletMsg >*
OnlineSendSkinMsg::mutable_bullets() {
  // @@protoc_insertion_point(field_mutable_list:plane.OnlineSendSkinMsg.bullets)
  return &bullets_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneBulletMsg >&
OnlineSendSkinMsg::bullets() const {
  // @@protoc_insertion_point(field_list:plane.OnlineSendSkinMsg.bullets)
  return bullets_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace plane

// @@protoc_insertion_point(global_scope)
