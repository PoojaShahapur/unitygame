// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plane/plane_msg.proto

#ifndef PROTOBUF_plane_2fplane_5fmsg_2eproto__INCLUDED
#define PROTOBUF_plane_2fplane_5fmsg_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace plane {
class BatchAddEnergyPlaneBcMsg;
class BatchAddEnergyPlaneBcMsgDefaultTypeInternal;
extern BatchAddEnergyPlaneBcMsgDefaultTypeInternal _BatchAddEnergyPlaneBcMsg_default_instance_;
class BatchAddFoodBcMsg;
class BatchAddFoodBcMsgDefaultTypeInternal;
extern BatchAddFoodBcMsgDefaultTypeInternal _BatchAddFoodBcMsg_default_instance_;
class FoodMsg;
class FoodMsgDefaultTypeInternal;
extern FoodMsgDefaultTypeInternal _FoodMsg_default_instance_;
class FrameHitBcMsg;
class FrameHitBcMsgDefaultTypeInternal;
extern FrameHitBcMsgDefaultTypeInternal _FrameHitBcMsg_default_instance_;
class MoveInfo;
class MoveInfoDefaultTypeInternal;
extern MoveInfoDefaultTypeInternal _MoveInfo_default_instance_;
class MoveToMsg;
class MoveToMsgDefaultTypeInternal;
extern MoveToMsgDefaultTypeInternal _MoveToMsg_default_instance_;
class MsAndId;
class MsAndIdDefaultTypeInternal;
extern MsAndIdDefaultTypeInternal _MsAndId_default_instance_;
class OneBatchPlane;
class OneBatchPlaneDefaultTypeInternal;
extern OneBatchPlaneDefaultTypeInternal _OneBatchPlane_default_instance_;
class OneBulletGroupHit;
class OneBulletGroupHitDefaultTypeInternal;
extern OneBulletGroupHitDefaultTypeInternal _OneBulletGroupHit_default_instance_;
class OneEnergyHit;
class OneEnergyHitDefaultTypeInternal;
extern OneEnergyHitDefaultTypeInternal _OneEnergyHit_default_instance_;
class OnePlaneHit;
class OnePlaneHitDefaultTypeInternal;
extern OnePlaneHitDefaultTypeInternal _OnePlaneHit_default_instance_;
class OneResultData;
class OneResultDataDefaultTypeInternal;
extern OneResultDataDefaultTypeInternal _OneResultData_default_instance_;
class PlaneDieMsg;
class PlaneDieMsgDefaultTypeInternal;
extern PlaneDieMsgDefaultTypeInternal _PlaneDieMsg_default_instance_;
class PlaneMsg;
class PlaneMsgDefaultTypeInternal;
extern PlaneMsgDefaultTypeInternal _PlaneMsg_default_instance_;
class PlayerInfo;
class PlayerInfoDefaultTypeInternal;
extern PlayerInfoDefaultTypeInternal _PlayerInfo_default_instance_;
class ResultDataMsg;
class ResultDataMsgDefaultTypeInternal;
extern ResultDataMsgDefaultTypeInternal _ResultDataMsg_default_instance_;
class TurnToMsg;
class TurnToMsgDefaultTypeInternal;
extern TurnToMsgDefaultTypeInternal _TurnToMsg_default_instance_;
class UidListMsg;
class UidListMsgDefaultTypeInternal;
extern UidListMsgDefaultTypeInternal _UidListMsg_default_instance_;
class UidMsg;
class UidMsgDefaultTypeInternal;
extern UidMsgDefaultTypeInternal _UidMsg_default_instance_;
}  // namespace plane

namespace plane {

namespace protobuf_plane_2fplane_5fmsg_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_plane_2fplane_5fmsg_2eproto

// ===================================================================

class MsAndId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.MsAndId) */ {
 public:
  MsAndId();
  virtual ~MsAndId();

  MsAndId(const MsAndId& from);

  inline MsAndId& operator=(const MsAndId& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MsAndId& default_instance();

  static inline const MsAndId* internal_default_instance() {
    return reinterpret_cast<const MsAndId*>(
               &_MsAndId_default_instance_);
  }

  void Swap(MsAndId* other);

  // implements Message ----------------------------------------------

  inline MsAndId* New() const PROTOBUF_FINAL { return New(NULL); }

  MsAndId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MsAndId& from);
  void MergeFrom(const MsAndId& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MsAndId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 ms = 1;
  bool has_ms() const;
  void clear_ms();
  static const int kMsFieldNumber = 1;
  ::google::protobuf::uint32 ms() const;
  void set_ms(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.MsAndId)
 private:
  void set_has_ms();
  void clear_has_ms();
  void set_has_id();
  void clear_has_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 ms_;
  ::google::protobuf::uint32 id_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MoveToMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.MoveToMsg) */ {
 public:
  MoveToMsg();
  virtual ~MoveToMsg();

  MoveToMsg(const MoveToMsg& from);

  inline MoveToMsg& operator=(const MoveToMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveToMsg& default_instance();

  static inline const MoveToMsg* internal_default_instance() {
    return reinterpret_cast<const MoveToMsg*>(
               &_MoveToMsg_default_instance_);
  }

  void Swap(MoveToMsg* other);

  // implements Message ----------------------------------------------

  inline MoveToMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  MoveToMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MoveToMsg& from);
  void MergeFrom(const MoveToMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MoveToMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 small_plane_ids = 5;
  int small_plane_ids_size() const;
  void clear_small_plane_ids();
  static const int kSmallPlaneIdsFieldNumber = 5;
  ::google::protobuf::uint32 small_plane_ids(int index) const;
  void set_small_plane_ids(int index, ::google::protobuf::uint32 value);
  void add_small_plane_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      small_plane_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_small_plane_ids();

  // optional uint32 angle = 1;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 1;
  ::google::protobuf::uint32 angle() const;
  void set_angle(::google::protobuf::uint32 value);

  // optional uint32 score = 2;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 2;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 x = 3;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 3;
  ::google::protobuf::uint32 x() const;
  void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 4;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 4;
  ::google::protobuf::uint32 y() const;
  void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.MoveToMsg)
 private:
  void set_has_angle();
  void clear_has_angle();
  void set_has_score();
  void clear_has_score();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > small_plane_ids_;
  ::google::protobuf::uint32 angle_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.PlayerInfo) */ {
 public:
  PlayerInfo();
  virtual ~PlayerInfo();

  PlayerInfo(const PlayerInfo& from);

  inline PlayerInfo& operator=(const PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInfo& default_instance();

  static inline const PlayerInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerInfo*>(
               &_PlayerInfo_default_instance_);
  }

  void Swap(PlayerInfo* other);

  // implements Message ----------------------------------------------

  inline PlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerInfo& from);
  void MergeFrom(const PlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .plane.MoveToMsg move = 3;
  bool has_move() const;
  void clear_move();
  static const int kMoveFieldNumber = 3;
  const ::plane::MoveToMsg& move() const;
  ::plane::MoveToMsg* mutable_move();
  ::plane::MoveToMsg* release_move();
  void set_allocated_move(::plane::MoveToMsg* move);

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 speed = 4;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 4;
  ::google::protobuf::uint32 speed() const;
  void set_speed(::google::protobuf::uint32 value);

  // optional uint32 skinid = 5;
  bool has_skinid() const;
  void clear_skinid();
  static const int kSkinidFieldNumber = 5;
  ::google::protobuf::uint32 skinid() const;
  void set_skinid(::google::protobuf::uint32 value);

  // optional uint32 bulletskinid = 6;
  bool has_bulletskinid() const;
  void clear_bulletskinid();
  static const int kBulletskinidFieldNumber = 6;
  ::google::protobuf::uint32 bulletskinid() const;
  void set_bulletskinid(::google::protobuf::uint32 value);

  // optional uint32 random_formation_id = 7;
  bool has_random_formation_id() const;
  void clear_random_formation_id();
  static const int kRandomFormationIdFieldNumber = 7;
  ::google::protobuf::uint32 random_formation_id() const;
  void set_random_formation_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.PlayerInfo)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_name();
  void clear_has_name();
  void set_has_move();
  void clear_has_move();
  void set_has_speed();
  void clear_has_speed();
  void set_has_skinid();
  void clear_has_skinid();
  void set_has_bulletskinid();
  void clear_has_bulletskinid();
  void set_has_random_formation_id();
  void clear_has_random_formation_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::plane::MoveToMsg* move_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 skinid_;
  ::google::protobuf::uint32 bulletskinid_;
  ::google::protobuf::uint32 random_formation_id_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MoveInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.MoveInfo) */ {
 public:
  MoveInfo();
  virtual ~MoveInfo();

  MoveInfo(const MoveInfo& from);

  inline MoveInfo& operator=(const MoveInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveInfo& default_instance();

  static inline const MoveInfo* internal_default_instance() {
    return reinterpret_cast<const MoveInfo*>(
               &_MoveInfo_default_instance_);
  }

  void Swap(MoveInfo* other);

  // implements Message ----------------------------------------------

  inline MoveInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  MoveInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MoveInfo& from);
  void MergeFrom(const MoveInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MoveInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_stop = 1;
  bool has_is_stop() const;
  void clear_is_stop();
  static const int kIsStopFieldNumber = 1;
  bool is_stop() const;
  void set_is_stop(bool value);

  // optional uint32 angle = 2;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 2;
  ::google::protobuf::uint32 angle() const;
  void set_angle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.MoveInfo)
 private:
  void set_has_is_stop();
  void clear_has_is_stop();
  void set_has_angle();
  void clear_has_angle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  bool is_stop_;
  ::google::protobuf::uint32 angle_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FoodMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.FoodMsg) */ {
 public:
  FoodMsg();
  virtual ~FoodMsg();

  FoodMsg(const FoodMsg& from);

  inline FoodMsg& operator=(const FoodMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FoodMsg& default_instance();

  static inline const FoodMsg* internal_default_instance() {
    return reinterpret_cast<const FoodMsg*>(
               &_FoodMsg_default_instance_);
  }

  void Swap(FoodMsg* other);

  // implements Message ----------------------------------------------

  inline FoodMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  FoodMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FoodMsg& from);
  void MergeFrom(const FoodMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FoodMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 food_id = 1;
  bool has_food_id() const;
  void clear_food_id();
  static const int kFoodIdFieldNumber = 1;
  ::google::protobuf::uint32 food_id() const;
  void set_food_id(::google::protobuf::uint32 value);

  // optional uint32 x = 3;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 3;
  ::google::protobuf::uint32 x() const;
  void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 4;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 4;
  ::google::protobuf::uint32 y() const;
  void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.FoodMsg)
 private:
  void set_has_food_id();
  void clear_has_food_id();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 food_id_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchAddEnergyPlaneBcMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.BatchAddEnergyPlaneBcMsg) */ {
 public:
  BatchAddEnergyPlaneBcMsg();
  virtual ~BatchAddEnergyPlaneBcMsg();

  BatchAddEnergyPlaneBcMsg(const BatchAddEnergyPlaneBcMsg& from);

  inline BatchAddEnergyPlaneBcMsg& operator=(const BatchAddEnergyPlaneBcMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchAddEnergyPlaneBcMsg& default_instance();

  static inline const BatchAddEnergyPlaneBcMsg* internal_default_instance() {
    return reinterpret_cast<const BatchAddEnergyPlaneBcMsg*>(
               &_BatchAddEnergyPlaneBcMsg_default_instance_);
  }

  void Swap(BatchAddEnergyPlaneBcMsg* other);

  // implements Message ----------------------------------------------

  inline BatchAddEnergyPlaneBcMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchAddEnergyPlaneBcMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchAddEnergyPlaneBcMsg& from);
  void MergeFrom(const BatchAddEnergyPlaneBcMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchAddEnergyPlaneBcMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .plane.OneBatchPlane add_planes = 3;
  int add_planes_size() const;
  void clear_add_planes();
  static const int kAddPlanesFieldNumber = 3;
  const ::plane::OneBatchPlane& add_planes(int index) const;
  ::plane::OneBatchPlane* mutable_add_planes(int index);
  ::plane::OneBatchPlane* add_add_planes();
  ::google::protobuf::RepeatedPtrField< ::plane::OneBatchPlane >*
      mutable_add_planes();
  const ::google::protobuf::RepeatedPtrField< ::plane::OneBatchPlane >&
      add_planes() const;

  // optional uint32 skinid = 1;
  bool has_skinid() const;
  void clear_skinid();
  static const int kSkinidFieldNumber = 1;
  ::google::protobuf::uint32 skinid() const;
  void set_skinid(::google::protobuf::uint32 value);

  // optional uint32 dir_angle = 2;
  bool has_dir_angle() const;
  void clear_dir_angle();
  static const int kDirAngleFieldNumber = 2;
  ::google::protobuf::uint32 dir_angle() const;
  void set_dir_angle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.BatchAddEnergyPlaneBcMsg)
 private:
  void set_has_skinid();
  void clear_has_skinid();
  void set_has_dir_angle();
  void clear_has_dir_angle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::plane::OneBatchPlane > add_planes_;
  ::google::protobuf::uint32 skinid_;
  ::google::protobuf::uint32 dir_angle_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OneBatchPlane : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.OneBatchPlane) */ {
 public:
  OneBatchPlane();
  virtual ~OneBatchPlane();

  OneBatchPlane(const OneBatchPlane& from);

  inline OneBatchPlane& operator=(const OneBatchPlane& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneBatchPlane& default_instance();

  static inline const OneBatchPlane* internal_default_instance() {
    return reinterpret_cast<const OneBatchPlane*>(
               &_OneBatchPlane_default_instance_);
  }

  void Swap(OneBatchPlane* other);

  // implements Message ----------------------------------------------

  inline OneBatchPlane* New() const PROTOBUF_FINAL { return New(NULL); }

  OneBatchPlane* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OneBatchPlane& from);
  void MergeFrom(const OneBatchPlane& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OneBatchPlane* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 plane_id = 1;
  bool has_plane_id() const;
  void clear_plane_id();
  static const int kPlaneIdFieldNumber = 1;
  ::google::protobuf::uint32 plane_id() const;
  void set_plane_id(::google::protobuf::uint32 value);

  // optional uint32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::uint32 x() const;
  void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::uint32 y() const;
  void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.OneBatchPlane)
 private:
  void set_has_plane_id();
  void clear_has_plane_id();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 plane_id_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TurnToMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.TurnToMsg) */ {
 public:
  TurnToMsg();
  virtual ~TurnToMsg();

  TurnToMsg(const TurnToMsg& from);

  inline TurnToMsg& operator=(const TurnToMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnToMsg& default_instance();

  static inline const TurnToMsg* internal_default_instance() {
    return reinterpret_cast<const TurnToMsg*>(
               &_TurnToMsg_default_instance_);
  }

  void Swap(TurnToMsg* other);

  // implements Message ----------------------------------------------

  inline TurnToMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  TurnToMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TurnToMsg& from);
  void MergeFrom(const TurnToMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TurnToMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 angle = 1;
  bool has_angle() const;
  void clear_angle();
  static const int kAngleFieldNumber = 1;
  ::google::protobuf::uint32 angle() const;
  void set_angle(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.TurnToMsg)
 private:
  void set_has_angle();
  void clear_has_angle();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 angle_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlaneMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.PlaneMsg) */ {
 public:
  PlaneMsg();
  virtual ~PlaneMsg();

  PlaneMsg(const PlaneMsg& from);

  inline PlaneMsg& operator=(const PlaneMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaneMsg& default_instance();

  static inline const PlaneMsg* internal_default_instance() {
    return reinterpret_cast<const PlaneMsg*>(
               &_PlaneMsg_default_instance_);
  }

  void Swap(PlaneMsg* other);

  // implements Message ----------------------------------------------

  inline PlaneMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  PlaneMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaneMsg& from);
  void MergeFrom(const PlaneMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaneMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 plane_id = 1;
  bool has_plane_id() const;
  void clear_plane_id();
  static const int kPlaneIdFieldNumber = 1;
  ::google::protobuf::uint32 plane_id() const;
  void set_plane_id(::google::protobuf::uint32 value);

  // optional uint32 move_speed = 2;
  bool has_move_speed() const;
  void clear_move_speed();
  static const int kMoveSpeedFieldNumber = 2;
  ::google::protobuf::uint32 move_speed() const;
  void set_move_speed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.PlaneMsg)
 private:
  void set_has_plane_id();
  void clear_has_plane_id();
  void set_has_move_speed();
  void clear_has_move_speed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 plane_id_;
  ::google::protobuf::uint32 move_speed_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OneResultData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.OneResultData) */ {
 public:
  OneResultData();
  virtual ~OneResultData();

  OneResultData(const OneResultData& from);

  inline OneResultData& operator=(const OneResultData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneResultData& default_instance();

  static inline const OneResultData* internal_default_instance() {
    return reinterpret_cast<const OneResultData*>(
               &_OneResultData_default_instance_);
  }

  void Swap(OneResultData* other);

  // implements Message ----------------------------------------------

  inline OneResultData* New() const PROTOBUF_FINAL { return New(NULL); }

  OneResultData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OneResultData& from);
  void MergeFrom(const OneResultData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OneResultData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional string username = 3;
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 3;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // optional uint32 playerid = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // optional uint32 killnum = 4;
  bool has_killnum() const;
  void clear_killnum();
  static const int kKillnumFieldNumber = 4;
  ::google::protobuf::uint32 killnum() const;
  void set_killnum(::google::protobuf::uint32 value);

  // optional uint32 score = 5;
  bool has_score() const;
  void clear_score();
  static const int kScoreFieldNumber = 5;
  ::google::protobuf::uint32 score() const;
  void set_score(::google::protobuf::uint32 value);

  // optional uint32 reward_sugar = 6;
  bool has_reward_sugar() const;
  void clear_reward_sugar();
  static const int kRewardSugarFieldNumber = 6;
  ::google::protobuf::uint32 reward_sugar() const;
  void set_reward_sugar(::google::protobuf::uint32 value);

  // optional uint32 reward_cookie = 7;
  bool has_reward_cookie() const;
  void clear_reward_cookie();
  static const int kRewardCookieFieldNumber = 7;
  ::google::protobuf::uint32 reward_cookie() const;
  void set_reward_cookie(::google::protobuf::uint32 value);

  // optional uint32 is_ai = 8;
  bool has_is_ai() const;
  void clear_is_ai();
  static const int kIsAiFieldNumber = 8;
  ::google::protobuf::uint32 is_ai() const;
  void set_is_ai(::google::protobuf::uint32 value);

  // optional uint32 uid = 9;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 9;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional uint32 avatarid = 10;
  bool has_avatarid() const;
  void clear_avatarid();
  static const int kAvataridFieldNumber = 10;
  ::google::protobuf::uint32 avatarid() const;
  void set_avatarid(::google::protobuf::uint32 value);

  // optional uint32 header_imgurl = 11;
  bool has_header_imgurl() const;
  void clear_header_imgurl();
  static const int kHeaderImgurlFieldNumber = 11;
  ::google::protobuf::uint32 header_imgurl() const;
  void set_header_imgurl(::google::protobuf::uint32 value);

  // optional uint32 sex = 12;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 12;
  ::google::protobuf::uint32 sex() const;
  void set_sex(::google::protobuf::uint32 value);

  // optional uint32 rank = 13;
  bool has_rank() const;
  void clear_rank();
  static const int kRankFieldNumber = 13;
  ::google::protobuf::uint32 rank() const;
  void set_rank(::google::protobuf::uint32 value);

  // optional uint32 is_mvp = 14;
  bool has_is_mvp() const;
  void clear_is_mvp();
  static const int kIsMvpFieldNumber = 14;
  ::google::protobuf::uint32 is_mvp() const;
  void set_is_mvp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.OneResultData)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_username();
  void clear_has_username();
  void set_has_killnum();
  void clear_has_killnum();
  void set_has_score();
  void clear_has_score();
  void set_has_reward_sugar();
  void clear_has_reward_sugar();
  void set_has_reward_cookie();
  void clear_has_reward_cookie();
  void set_has_is_ai();
  void clear_has_is_ai();
  void set_has_uid();
  void clear_has_uid();
  void set_has_avatarid();
  void clear_has_avatarid();
  void set_has_header_imgurl();
  void clear_has_header_imgurl();
  void set_has_sex();
  void clear_has_sex();
  void set_has_rank();
  void clear_has_rank();
  void set_has_is_mvp();
  void clear_has_is_mvp();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 killnum_;
  ::google::protobuf::uint32 score_;
  ::google::protobuf::uint32 reward_sugar_;
  ::google::protobuf::uint32 reward_cookie_;
  ::google::protobuf::uint32 is_ai_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 avatarid_;
  ::google::protobuf::uint32 header_imgurl_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 rank_;
  ::google::protobuf::uint32 is_mvp_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ResultDataMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.ResultDataMsg) */ {
 public:
  ResultDataMsg();
  virtual ~ResultDataMsg();

  ResultDataMsg(const ResultDataMsg& from);

  inline ResultDataMsg& operator=(const ResultDataMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ResultDataMsg& default_instance();

  static inline const ResultDataMsg* internal_default_instance() {
    return reinterpret_cast<const ResultDataMsg*>(
               &_ResultDataMsg_default_instance_);
  }

  void Swap(ResultDataMsg* other);

  // implements Message ----------------------------------------------

  inline ResultDataMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ResultDataMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ResultDataMsg& from);
  void MergeFrom(const ResultDataMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ResultDataMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .plane.OneResultData datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::plane::OneResultData& datas(int index) const;
  ::plane::OneResultData* mutable_datas(int index);
  ::plane::OneResultData* add_datas();
  ::google::protobuf::RepeatedPtrField< ::plane::OneResultData >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::plane::OneResultData >&
      datas() const;

  // @@protoc_insertion_point(class_scope:plane.ResultDataMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::plane::OneResultData > datas_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlaneDieMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.PlaneDieMsg) */ {
 public:
  PlaneDieMsg();
  virtual ~PlaneDieMsg();

  PlaneDieMsg(const PlaneDieMsg& from);

  inline PlaneDieMsg& operator=(const PlaneDieMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaneDieMsg& default_instance();

  static inline const PlaneDieMsg* internal_default_instance() {
    return reinterpret_cast<const PlaneDieMsg*>(
               &_PlaneDieMsg_default_instance_);
  }

  void Swap(PlaneDieMsg* other);

  // implements Message ----------------------------------------------

  inline PlaneDieMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  PlaneDieMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaneDieMsg& from);
  void MergeFrom(const PlaneDieMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaneDieMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 planeid = 1;
  bool has_planeid() const;
  void clear_planeid();
  static const int kPlaneidFieldNumber = 1;
  ::google::protobuf::uint32 planeid() const;
  void set_planeid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.PlaneDieMsg)
 private:
  void set_has_planeid();
  void clear_has_planeid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 planeid_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FrameHitBcMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.FrameHitBcMsg) */ {
 public:
  FrameHitBcMsg();
  virtual ~FrameHitBcMsg();

  FrameHitBcMsg(const FrameHitBcMsg& from);

  inline FrameHitBcMsg& operator=(const FrameHitBcMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FrameHitBcMsg& default_instance();

  static inline const FrameHitBcMsg* internal_default_instance() {
    return reinterpret_cast<const FrameHitBcMsg*>(
               &_FrameHitBcMsg_default_instance_);
  }

  void Swap(FrameHitBcMsg* other);

  // implements Message ----------------------------------------------

  inline FrameHitBcMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  FrameHitBcMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FrameHitBcMsg& from);
  void MergeFrom(const FrameHitBcMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FrameHitBcMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .plane.OneBulletGroupHit hits = 1;
  int hits_size() const;
  void clear_hits();
  static const int kHitsFieldNumber = 1;
  const ::plane::OneBulletGroupHit& hits(int index) const;
  ::plane::OneBulletGroupHit* mutable_hits(int index);
  ::plane::OneBulletGroupHit* add_hits();
  ::google::protobuf::RepeatedPtrField< ::plane::OneBulletGroupHit >*
      mutable_hits();
  const ::google::protobuf::RepeatedPtrField< ::plane::OneBulletGroupHit >&
      hits() const;

  // @@protoc_insertion_point(class_scope:plane.FrameHitBcMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::plane::OneBulletGroupHit > hits_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OneBulletGroupHit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.OneBulletGroupHit) */ {
 public:
  OneBulletGroupHit();
  virtual ~OneBulletGroupHit();

  OneBulletGroupHit(const OneBulletGroupHit& from);

  inline OneBulletGroupHit& operator=(const OneBulletGroupHit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneBulletGroupHit& default_instance();

  static inline const OneBulletGroupHit* internal_default_instance() {
    return reinterpret_cast<const OneBulletGroupHit*>(
               &_OneBulletGroupHit_default_instance_);
  }

  void Swap(OneBulletGroupHit* other);

  // implements Message ----------------------------------------------

  inline OneBulletGroupHit* New() const PROTOBUF_FINAL { return New(NULL); }

  OneBulletGroupHit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OneBulletGroupHit& from);
  void MergeFrom(const OneBulletGroupHit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OneBulletGroupHit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .plane.OneEnergyHit eneryhits = 2;
  int eneryhits_size() const;
  void clear_eneryhits();
  static const int kEneryhitsFieldNumber = 2;
  const ::plane::OneEnergyHit& eneryhits(int index) const;
  ::plane::OneEnergyHit* mutable_eneryhits(int index);
  ::plane::OneEnergyHit* add_eneryhits();
  ::google::protobuf::RepeatedPtrField< ::plane::OneEnergyHit >*
      mutable_eneryhits();
  const ::google::protobuf::RepeatedPtrField< ::plane::OneEnergyHit >&
      eneryhits() const;

  // repeated .plane.OnePlaneHit planehits = 3;
  int planehits_size() const;
  void clear_planehits();
  static const int kPlanehitsFieldNumber = 3;
  const ::plane::OnePlaneHit& planehits(int index) const;
  ::plane::OnePlaneHit* mutable_planehits(int index);
  ::plane::OnePlaneHit* add_planehits();
  ::google::protobuf::RepeatedPtrField< ::plane::OnePlaneHit >*
      mutable_planehits();
  const ::google::protobuf::RepeatedPtrField< ::plane::OnePlaneHit >&
      planehits() const;

  // optional uint32 bulletgroupid = 1;
  bool has_bulletgroupid() const;
  void clear_bulletgroupid();
  static const int kBulletgroupidFieldNumber = 1;
  ::google::protobuf::uint32 bulletgroupid() const;
  void set_bulletgroupid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.OneBulletGroupHit)
 private:
  void set_has_bulletgroupid();
  void clear_has_bulletgroupid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::plane::OneEnergyHit > eneryhits_;
  ::google::protobuf::RepeatedPtrField< ::plane::OnePlaneHit > planehits_;
  ::google::protobuf::uint32 bulletgroupid_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OneEnergyHit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.OneEnergyHit) */ {
 public:
  OneEnergyHit();
  virtual ~OneEnergyHit();

  OneEnergyHit(const OneEnergyHit& from);

  inline OneEnergyHit& operator=(const OneEnergyHit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneEnergyHit& default_instance();

  static inline const OneEnergyHit* internal_default_instance() {
    return reinterpret_cast<const OneEnergyHit*>(
               &_OneEnergyHit_default_instance_);
  }

  void Swap(OneEnergyHit* other);

  // implements Message ----------------------------------------------

  inline OneEnergyHit* New() const PROTOBUF_FINAL { return New(NULL); }

  OneEnergyHit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OneEnergyHit& from);
  void MergeFrom(const OneEnergyHit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OneEnergyHit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bulletid = 1;
  bool has_bulletid() const;
  void clear_bulletid();
  static const int kBulletidFieldNumber = 1;
  ::google::protobuf::uint32 bulletid() const;
  void set_bulletid(::google::protobuf::uint32 value);

  // optional uint32 id = 2;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 type = 3;
  bool has_type() const;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // optional uint32 playerid = 4;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 4;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // optional uint32 planeid = 5;
  bool has_planeid() const;
  void clear_planeid();
  static const int kPlaneidFieldNumber = 5;
  ::google::protobuf::uint32 planeid() const;
  void set_planeid(::google::protobuf::uint32 value);

  // optional uint32 speed = 6;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 6;
  ::google::protobuf::uint32 speed() const;
  void set_speed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.OneEnergyHit)
 private:
  void set_has_bulletid();
  void clear_has_bulletid();
  void set_has_id();
  void clear_has_id();
  void set_has_type();
  void clear_has_type();
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_planeid();
  void clear_has_planeid();
  void set_has_speed();
  void clear_has_speed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 bulletid_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 planeid_;
  ::google::protobuf::uint32 speed_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OnePlaneHit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.OnePlaneHit) */ {
 public:
  OnePlaneHit();
  virtual ~OnePlaneHit();

  OnePlaneHit(const OnePlaneHit& from);

  inline OnePlaneHit& operator=(const OnePlaneHit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnePlaneHit& default_instance();

  static inline const OnePlaneHit* internal_default_instance() {
    return reinterpret_cast<const OnePlaneHit*>(
               &_OnePlaneHit_default_instance_);
  }

  void Swap(OnePlaneHit* other);

  // implements Message ----------------------------------------------

  inline OnePlaneHit* New() const PROTOBUF_FINAL { return New(NULL); }

  OnePlaneHit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnePlaneHit& from);
  void MergeFrom(const OnePlaneHit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnePlaneHit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bulletid = 1;
  bool has_bulletid() const;
  void clear_bulletid();
  static const int kBulletidFieldNumber = 1;
  ::google::protobuf::uint32 bulletid() const;
  void set_bulletid(::google::protobuf::uint32 value);

  // optional uint32 hit_playerid = 2;
  bool has_hit_playerid() const;
  void clear_hit_playerid();
  static const int kHitPlayeridFieldNumber = 2;
  ::google::protobuf::uint32 hit_playerid() const;
  void set_hit_playerid(::google::protobuf::uint32 value);

  // optional uint32 hit_planeid = 3;
  bool has_hit_planeid() const;
  void clear_hit_planeid();
  static const int kHitPlaneidFieldNumber = 3;
  ::google::protobuf::uint32 hit_planeid() const;
  void set_hit_planeid(::google::protobuf::uint32 value);

  // optional uint32 ownerspeed = 4;
  bool has_ownerspeed() const;
  void clear_ownerspeed();
  static const int kOwnerspeedFieldNumber = 4;
  ::google::protobuf::uint32 ownerspeed() const;
  void set_ownerspeed(::google::protobuf::uint32 value);

  // optional uint32 attackerid = 5;
  bool has_attackerid() const;
  void clear_attackerid();
  static const int kAttackeridFieldNumber = 5;
  ::google::protobuf::uint32 attackerid() const;
  void set_attackerid(::google::protobuf::uint32 value);

  // optional uint32 addplaneid = 6;
  bool has_addplaneid() const;
  void clear_addplaneid();
  static const int kAddplaneidFieldNumber = 6;
  ::google::protobuf::uint32 addplaneid() const;
  void set_addplaneid(::google::protobuf::uint32 value);

  // optional uint32 speed = 7;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 7;
  ::google::protobuf::uint32 speed() const;
  void set_speed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.OnePlaneHit)
 private:
  void set_has_bulletid();
  void clear_has_bulletid();
  void set_has_hit_playerid();
  void clear_has_hit_playerid();
  void set_has_hit_planeid();
  void clear_has_hit_planeid();
  void set_has_ownerspeed();
  void clear_has_ownerspeed();
  void set_has_attackerid();
  void clear_has_attackerid();
  void set_has_addplaneid();
  void clear_has_addplaneid();
  void set_has_speed();
  void clear_has_speed();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 bulletid_;
  ::google::protobuf::uint32 hit_playerid_;
  ::google::protobuf::uint32 hit_planeid_;
  ::google::protobuf::uint32 ownerspeed_;
  ::google::protobuf::uint32 attackerid_;
  ::google::protobuf::uint32 addplaneid_;
  ::google::protobuf::uint32 speed_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchAddFoodBcMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.BatchAddFoodBcMsg) */ {
 public:
  BatchAddFoodBcMsg();
  virtual ~BatchAddFoodBcMsg();

  BatchAddFoodBcMsg(const BatchAddFoodBcMsg& from);

  inline BatchAddFoodBcMsg& operator=(const BatchAddFoodBcMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchAddFoodBcMsg& default_instance();

  static inline const BatchAddFoodBcMsg* internal_default_instance() {
    return reinterpret_cast<const BatchAddFoodBcMsg*>(
               &_BatchAddFoodBcMsg_default_instance_);
  }

  void Swap(BatchAddFoodBcMsg* other);

  // implements Message ----------------------------------------------

  inline BatchAddFoodBcMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchAddFoodBcMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchAddFoodBcMsg& from);
  void MergeFrom(const BatchAddFoodBcMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchAddFoodBcMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .plane.FoodMsg foods = 1;
  int foods_size() const;
  void clear_foods();
  static const int kFoodsFieldNumber = 1;
  const ::plane::FoodMsg& foods(int index) const;
  ::plane::FoodMsg* mutable_foods(int index);
  ::plane::FoodMsg* add_foods();
  ::google::protobuf::RepeatedPtrField< ::plane::FoodMsg >*
      mutable_foods();
  const ::google::protobuf::RepeatedPtrField< ::plane::FoodMsg >&
      foods() const;

  // @@protoc_insertion_point(class_scope:plane.BatchAddFoodBcMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::plane::FoodMsg > foods_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UidMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.UidMsg) */ {
 public:
  UidMsg();
  virtual ~UidMsg();

  UidMsg(const UidMsg& from);

  inline UidMsg& operator=(const UidMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UidMsg& default_instance();

  static inline const UidMsg* internal_default_instance() {
    return reinterpret_cast<const UidMsg*>(
               &_UidMsg_default_instance_);
  }

  void Swap(UidMsg* other);

  // implements Message ----------------------------------------------

  inline UidMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  UidMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UidMsg& from);
  void MergeFrom(const UidMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UidMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.UidMsg)
 private:
  void set_has_uid();
  void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 uid_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UidListMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.UidListMsg) */ {
 public:
  UidListMsg();
  virtual ~UidListMsg();

  UidListMsg(const UidListMsg& from);

  inline UidListMsg& operator=(const UidListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UidListMsg& default_instance();

  static inline const UidListMsg* internal_default_instance() {
    return reinterpret_cast<const UidListMsg*>(
               &_UidListMsg_default_instance_);
  }

  void Swap(UidListMsg* other);

  // implements Message ----------------------------------------------

  inline UidListMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  UidListMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UidListMsg& from);
  void MergeFrom(const UidListMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UidListMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uids = 1;
  int uids_size() const;
  void clear_uids();
  static const int kUidsFieldNumber = 1;
  ::google::protobuf::uint32 uids(int index) const;
  void set_uids(int index, ::google::protobuf::uint32 value);
  void add_uids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uids();

  // @@protoc_insertion_point(class_scope:plane.UidListMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uids_;
  friend struct  protobuf_plane_2fplane_5fmsg_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MsAndId

// optional uint32 ms = 1;
inline bool MsAndId::has_ms() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MsAndId::set_has_ms() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MsAndId::clear_has_ms() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MsAndId::clear_ms() {
  ms_ = 0u;
  clear_has_ms();
}
inline ::google::protobuf::uint32 MsAndId::ms() const {
  // @@protoc_insertion_point(field_get:plane.MsAndId.ms)
  return ms_;
}
inline void MsAndId::set_ms(::google::protobuf::uint32 value) {
  set_has_ms();
  ms_ = value;
  // @@protoc_insertion_point(field_set:plane.MsAndId.ms)
}

// optional uint32 id = 2;
inline bool MsAndId::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MsAndId::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MsAndId::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MsAndId::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 MsAndId::id() const {
  // @@protoc_insertion_point(field_get:plane.MsAndId.id)
  return id_;
}
inline void MsAndId::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:plane.MsAndId.id)
}

// -------------------------------------------------------------------

// MoveToMsg

// optional uint32 angle = 1;
inline bool MoveToMsg::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveToMsg::set_has_angle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveToMsg::clear_has_angle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveToMsg::clear_angle() {
  angle_ = 0u;
  clear_has_angle();
}
inline ::google::protobuf::uint32 MoveToMsg::angle() const {
  // @@protoc_insertion_point(field_get:plane.MoveToMsg.angle)
  return angle_;
}
inline void MoveToMsg::set_angle(::google::protobuf::uint32 value) {
  set_has_angle();
  angle_ = value;
  // @@protoc_insertion_point(field_set:plane.MoveToMsg.angle)
}

// optional uint32 score = 2;
inline bool MoveToMsg::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveToMsg::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveToMsg::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveToMsg::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 MoveToMsg::score() const {
  // @@protoc_insertion_point(field_get:plane.MoveToMsg.score)
  return score_;
}
inline void MoveToMsg::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:plane.MoveToMsg.score)
}

// optional uint32 x = 3;
inline bool MoveToMsg::has_x() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MoveToMsg::set_has_x() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MoveToMsg::clear_has_x() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MoveToMsg::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 MoveToMsg::x() const {
  // @@protoc_insertion_point(field_get:plane.MoveToMsg.x)
  return x_;
}
inline void MoveToMsg::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:plane.MoveToMsg.x)
}

// optional uint32 y = 4;
inline bool MoveToMsg::has_y() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MoveToMsg::set_has_y() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MoveToMsg::clear_has_y() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MoveToMsg::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 MoveToMsg::y() const {
  // @@protoc_insertion_point(field_get:plane.MoveToMsg.y)
  return y_;
}
inline void MoveToMsg::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:plane.MoveToMsg.y)
}

// repeated uint32 small_plane_ids = 5;
inline int MoveToMsg::small_plane_ids_size() const {
  return small_plane_ids_.size();
}
inline void MoveToMsg::clear_small_plane_ids() {
  small_plane_ids_.Clear();
}
inline ::google::protobuf::uint32 MoveToMsg::small_plane_ids(int index) const {
  // @@protoc_insertion_point(field_get:plane.MoveToMsg.small_plane_ids)
  return small_plane_ids_.Get(index);
}
inline void MoveToMsg::set_small_plane_ids(int index, ::google::protobuf::uint32 value) {
  small_plane_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:plane.MoveToMsg.small_plane_ids)
}
inline void MoveToMsg::add_small_plane_ids(::google::protobuf::uint32 value) {
  small_plane_ids_.Add(value);
  // @@protoc_insertion_point(field_add:plane.MoveToMsg.small_plane_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MoveToMsg::small_plane_ids() const {
  // @@protoc_insertion_point(field_list:plane.MoveToMsg.small_plane_ids)
  return small_plane_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MoveToMsg::mutable_small_plane_ids() {
  // @@protoc_insertion_point(field_mutable_list:plane.MoveToMsg.small_plane_ids)
  return &small_plane_ids_;
}

// -------------------------------------------------------------------

// PlayerInfo

// optional uint32 id = 1;
inline bool PlayerInfo::has_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerInfo::set_has_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerInfo::clear_has_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerInfo::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 PlayerInfo::id() const {
  // @@protoc_insertion_point(field_get:plane.PlayerInfo.id)
  return id_;
}
inline void PlayerInfo::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:plane.PlayerInfo.id)
}

// optional string name = 2;
inline bool PlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:plane.PlayerInfo.name)
  return name_.GetNoArena();
}
inline void PlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.PlayerInfo.name)
}
#if LANG_CXX11
inline void PlayerInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.PlayerInfo.name)
}
#endif
inline void PlayerInfo::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.PlayerInfo.name)
}
inline void PlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.PlayerInfo.name)
}
inline ::std::string* PlayerInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:plane.PlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerInfo::release_name() {
  // @@protoc_insertion_point(field_release:plane.PlayerInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:plane.PlayerInfo.name)
}

// optional .plane.MoveToMsg move = 3;
inline bool PlayerInfo::has_move() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerInfo::set_has_move() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerInfo::clear_has_move() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerInfo::clear_move() {
  if (move_ != NULL) move_->::plane::MoveToMsg::Clear();
  clear_has_move();
}
inline const ::plane::MoveToMsg& PlayerInfo::move() const {
  // @@protoc_insertion_point(field_get:plane.PlayerInfo.move)
  return move_ != NULL ? *move_
                         : *::plane::MoveToMsg::internal_default_instance();
}
inline ::plane::MoveToMsg* PlayerInfo::mutable_move() {
  set_has_move();
  if (move_ == NULL) {
    move_ = new ::plane::MoveToMsg;
  }
  // @@protoc_insertion_point(field_mutable:plane.PlayerInfo.move)
  return move_;
}
inline ::plane::MoveToMsg* PlayerInfo::release_move() {
  // @@protoc_insertion_point(field_release:plane.PlayerInfo.move)
  clear_has_move();
  ::plane::MoveToMsg* temp = move_;
  move_ = NULL;
  return temp;
}
inline void PlayerInfo::set_allocated_move(::plane::MoveToMsg* move) {
  delete move_;
  move_ = move;
  if (move) {
    set_has_move();
  } else {
    clear_has_move();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.PlayerInfo.move)
}

// optional uint32 speed = 4;
inline bool PlayerInfo::has_speed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerInfo::set_has_speed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerInfo::clear_has_speed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerInfo::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 PlayerInfo::speed() const {
  // @@protoc_insertion_point(field_get:plane.PlayerInfo.speed)
  return speed_;
}
inline void PlayerInfo::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:plane.PlayerInfo.speed)
}

// optional uint32 skinid = 5;
inline bool PlayerInfo::has_skinid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerInfo::set_has_skinid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerInfo::clear_has_skinid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerInfo::clear_skinid() {
  skinid_ = 0u;
  clear_has_skinid();
}
inline ::google::protobuf::uint32 PlayerInfo::skinid() const {
  // @@protoc_insertion_point(field_get:plane.PlayerInfo.skinid)
  return skinid_;
}
inline void PlayerInfo::set_skinid(::google::protobuf::uint32 value) {
  set_has_skinid();
  skinid_ = value;
  // @@protoc_insertion_point(field_set:plane.PlayerInfo.skinid)
}

// optional uint32 bulletskinid = 6;
inline bool PlayerInfo::has_bulletskinid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerInfo::set_has_bulletskinid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerInfo::clear_has_bulletskinid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerInfo::clear_bulletskinid() {
  bulletskinid_ = 0u;
  clear_has_bulletskinid();
}
inline ::google::protobuf::uint32 PlayerInfo::bulletskinid() const {
  // @@protoc_insertion_point(field_get:plane.PlayerInfo.bulletskinid)
  return bulletskinid_;
}
inline void PlayerInfo::set_bulletskinid(::google::protobuf::uint32 value) {
  set_has_bulletskinid();
  bulletskinid_ = value;
  // @@protoc_insertion_point(field_set:plane.PlayerInfo.bulletskinid)
}

// optional uint32 random_formation_id = 7;
inline bool PlayerInfo::has_random_formation_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerInfo::set_has_random_formation_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerInfo::clear_has_random_formation_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerInfo::clear_random_formation_id() {
  random_formation_id_ = 0u;
  clear_has_random_formation_id();
}
inline ::google::protobuf::uint32 PlayerInfo::random_formation_id() const {
  // @@protoc_insertion_point(field_get:plane.PlayerInfo.random_formation_id)
  return random_formation_id_;
}
inline void PlayerInfo::set_random_formation_id(::google::protobuf::uint32 value) {
  set_has_random_formation_id();
  random_formation_id_ = value;
  // @@protoc_insertion_point(field_set:plane.PlayerInfo.random_formation_id)
}

// -------------------------------------------------------------------

// MoveInfo

// optional bool is_stop = 1;
inline bool MoveInfo::has_is_stop() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveInfo::set_has_is_stop() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveInfo::clear_has_is_stop() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveInfo::clear_is_stop() {
  is_stop_ = false;
  clear_has_is_stop();
}
inline bool MoveInfo::is_stop() const {
  // @@protoc_insertion_point(field_get:plane.MoveInfo.is_stop)
  return is_stop_;
}
inline void MoveInfo::set_is_stop(bool value) {
  set_has_is_stop();
  is_stop_ = value;
  // @@protoc_insertion_point(field_set:plane.MoveInfo.is_stop)
}

// optional uint32 angle = 2;
inline bool MoveInfo::has_angle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveInfo::set_has_angle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveInfo::clear_has_angle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveInfo::clear_angle() {
  angle_ = 0u;
  clear_has_angle();
}
inline ::google::protobuf::uint32 MoveInfo::angle() const {
  // @@protoc_insertion_point(field_get:plane.MoveInfo.angle)
  return angle_;
}
inline void MoveInfo::set_angle(::google::protobuf::uint32 value) {
  set_has_angle();
  angle_ = value;
  // @@protoc_insertion_point(field_set:plane.MoveInfo.angle)
}

// -------------------------------------------------------------------

// FoodMsg

// optional uint32 food_id = 1;
inline bool FoodMsg::has_food_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FoodMsg::set_has_food_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FoodMsg::clear_has_food_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FoodMsg::clear_food_id() {
  food_id_ = 0u;
  clear_has_food_id();
}
inline ::google::protobuf::uint32 FoodMsg::food_id() const {
  // @@protoc_insertion_point(field_get:plane.FoodMsg.food_id)
  return food_id_;
}
inline void FoodMsg::set_food_id(::google::protobuf::uint32 value) {
  set_has_food_id();
  food_id_ = value;
  // @@protoc_insertion_point(field_set:plane.FoodMsg.food_id)
}

// optional uint32 x = 3;
inline bool FoodMsg::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FoodMsg::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FoodMsg::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FoodMsg::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 FoodMsg::x() const {
  // @@protoc_insertion_point(field_get:plane.FoodMsg.x)
  return x_;
}
inline void FoodMsg::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:plane.FoodMsg.x)
}

// optional uint32 y = 4;
inline bool FoodMsg::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FoodMsg::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FoodMsg::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FoodMsg::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 FoodMsg::y() const {
  // @@protoc_insertion_point(field_get:plane.FoodMsg.y)
  return y_;
}
inline void FoodMsg::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:plane.FoodMsg.y)
}

// -------------------------------------------------------------------

// BatchAddEnergyPlaneBcMsg

// optional uint32 skinid = 1;
inline bool BatchAddEnergyPlaneBcMsg::has_skinid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchAddEnergyPlaneBcMsg::set_has_skinid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchAddEnergyPlaneBcMsg::clear_has_skinid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchAddEnergyPlaneBcMsg::clear_skinid() {
  skinid_ = 0u;
  clear_has_skinid();
}
inline ::google::protobuf::uint32 BatchAddEnergyPlaneBcMsg::skinid() const {
  // @@protoc_insertion_point(field_get:plane.BatchAddEnergyPlaneBcMsg.skinid)
  return skinid_;
}
inline void BatchAddEnergyPlaneBcMsg::set_skinid(::google::protobuf::uint32 value) {
  set_has_skinid();
  skinid_ = value;
  // @@protoc_insertion_point(field_set:plane.BatchAddEnergyPlaneBcMsg.skinid)
}

// optional uint32 dir_angle = 2;
inline bool BatchAddEnergyPlaneBcMsg::has_dir_angle() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void BatchAddEnergyPlaneBcMsg::set_has_dir_angle() {
  _has_bits_[0] |= 0x00000002u;
}
inline void BatchAddEnergyPlaneBcMsg::clear_has_dir_angle() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void BatchAddEnergyPlaneBcMsg::clear_dir_angle() {
  dir_angle_ = 0u;
  clear_has_dir_angle();
}
inline ::google::protobuf::uint32 BatchAddEnergyPlaneBcMsg::dir_angle() const {
  // @@protoc_insertion_point(field_get:plane.BatchAddEnergyPlaneBcMsg.dir_angle)
  return dir_angle_;
}
inline void BatchAddEnergyPlaneBcMsg::set_dir_angle(::google::protobuf::uint32 value) {
  set_has_dir_angle();
  dir_angle_ = value;
  // @@protoc_insertion_point(field_set:plane.BatchAddEnergyPlaneBcMsg.dir_angle)
}

// repeated .plane.OneBatchPlane add_planes = 3;
inline int BatchAddEnergyPlaneBcMsg::add_planes_size() const {
  return add_planes_.size();
}
inline void BatchAddEnergyPlaneBcMsg::clear_add_planes() {
  add_planes_.Clear();
}
inline const ::plane::OneBatchPlane& BatchAddEnergyPlaneBcMsg::add_planes(int index) const {
  // @@protoc_insertion_point(field_get:plane.BatchAddEnergyPlaneBcMsg.add_planes)
  return add_planes_.Get(index);
}
inline ::plane::OneBatchPlane* BatchAddEnergyPlaneBcMsg::mutable_add_planes(int index) {
  // @@protoc_insertion_point(field_mutable:plane.BatchAddEnergyPlaneBcMsg.add_planes)
  return add_planes_.Mutable(index);
}
inline ::plane::OneBatchPlane* BatchAddEnergyPlaneBcMsg::add_add_planes() {
  // @@protoc_insertion_point(field_add:plane.BatchAddEnergyPlaneBcMsg.add_planes)
  return add_planes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::OneBatchPlane >*
BatchAddEnergyPlaneBcMsg::mutable_add_planes() {
  // @@protoc_insertion_point(field_mutable_list:plane.BatchAddEnergyPlaneBcMsg.add_planes)
  return &add_planes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::OneBatchPlane >&
BatchAddEnergyPlaneBcMsg::add_planes() const {
  // @@protoc_insertion_point(field_list:plane.BatchAddEnergyPlaneBcMsg.add_planes)
  return add_planes_;
}

// -------------------------------------------------------------------

// OneBatchPlane

// optional uint32 plane_id = 1;
inline bool OneBatchPlane::has_plane_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneBatchPlane::set_has_plane_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneBatchPlane::clear_has_plane_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneBatchPlane::clear_plane_id() {
  plane_id_ = 0u;
  clear_has_plane_id();
}
inline ::google::protobuf::uint32 OneBatchPlane::plane_id() const {
  // @@protoc_insertion_point(field_get:plane.OneBatchPlane.plane_id)
  return plane_id_;
}
inline void OneBatchPlane::set_plane_id(::google::protobuf::uint32 value) {
  set_has_plane_id();
  plane_id_ = value;
  // @@protoc_insertion_point(field_set:plane.OneBatchPlane.plane_id)
}

// optional uint32 x = 2;
inline bool OneBatchPlane::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneBatchPlane::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneBatchPlane::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneBatchPlane::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 OneBatchPlane::x() const {
  // @@protoc_insertion_point(field_get:plane.OneBatchPlane.x)
  return x_;
}
inline void OneBatchPlane::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:plane.OneBatchPlane.x)
}

// optional uint32 y = 3;
inline bool OneBatchPlane::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneBatchPlane::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneBatchPlane::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneBatchPlane::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 OneBatchPlane::y() const {
  // @@protoc_insertion_point(field_get:plane.OneBatchPlane.y)
  return y_;
}
inline void OneBatchPlane::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:plane.OneBatchPlane.y)
}

// -------------------------------------------------------------------

// TurnToMsg

// optional uint32 angle = 1;
inline bool TurnToMsg::has_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnToMsg::set_has_angle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnToMsg::clear_has_angle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnToMsg::clear_angle() {
  angle_ = 0u;
  clear_has_angle();
}
inline ::google::protobuf::uint32 TurnToMsg::angle() const {
  // @@protoc_insertion_point(field_get:plane.TurnToMsg.angle)
  return angle_;
}
inline void TurnToMsg::set_angle(::google::protobuf::uint32 value) {
  set_has_angle();
  angle_ = value;
  // @@protoc_insertion_point(field_set:plane.TurnToMsg.angle)
}

// -------------------------------------------------------------------

// PlaneMsg

// optional uint32 plane_id = 1;
inline bool PlaneMsg::has_plane_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaneMsg::set_has_plane_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaneMsg::clear_has_plane_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaneMsg::clear_plane_id() {
  plane_id_ = 0u;
  clear_has_plane_id();
}
inline ::google::protobuf::uint32 PlaneMsg::plane_id() const {
  // @@protoc_insertion_point(field_get:plane.PlaneMsg.plane_id)
  return plane_id_;
}
inline void PlaneMsg::set_plane_id(::google::protobuf::uint32 value) {
  set_has_plane_id();
  plane_id_ = value;
  // @@protoc_insertion_point(field_set:plane.PlaneMsg.plane_id)
}

// optional uint32 move_speed = 2;
inline bool PlaneMsg::has_move_speed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaneMsg::set_has_move_speed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaneMsg::clear_has_move_speed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaneMsg::clear_move_speed() {
  move_speed_ = 0u;
  clear_has_move_speed();
}
inline ::google::protobuf::uint32 PlaneMsg::move_speed() const {
  // @@protoc_insertion_point(field_get:plane.PlaneMsg.move_speed)
  return move_speed_;
}
inline void PlaneMsg::set_move_speed(::google::protobuf::uint32 value) {
  set_has_move_speed();
  move_speed_ = value;
  // @@protoc_insertion_point(field_set:plane.PlaneMsg.move_speed)
}

// -------------------------------------------------------------------

// OneResultData

// optional uint32 playerid = 1;
inline bool OneResultData::has_playerid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneResultData::set_has_playerid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneResultData::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneResultData::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 OneResultData::playerid() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.playerid)
  return playerid_;
}
inline void OneResultData::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneResultData.playerid)
}

// optional string nickname = 2;
inline bool OneResultData::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneResultData::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneResultData::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneResultData::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& OneResultData::nickname() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.nickname)
  return nickname_.GetNoArena();
}
inline void OneResultData::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneResultData.nickname)
}
#if LANG_CXX11
inline void OneResultData::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneResultData.nickname)
}
#endif
inline void OneResultData::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneResultData.nickname)
}
inline void OneResultData::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneResultData.nickname)
}
inline ::std::string* OneResultData::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:plane.OneResultData.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OneResultData::release_nickname() {
  // @@protoc_insertion_point(field_release:plane.OneResultData.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OneResultData::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:plane.OneResultData.nickname)
}

// optional string username = 3;
inline bool OneResultData::has_username() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneResultData::set_has_username() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneResultData::clear_has_username() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneResultData::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
inline const ::std::string& OneResultData::username() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.username)
  return username_.GetNoArena();
}
inline void OneResultData::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneResultData.username)
}
#if LANG_CXX11
inline void OneResultData::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneResultData.username)
}
#endif
inline void OneResultData::set_username(const char* value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneResultData.username)
}
inline void OneResultData::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneResultData.username)
}
inline ::std::string* OneResultData::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:plane.OneResultData.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OneResultData::release_username() {
  // @@protoc_insertion_point(field_release:plane.OneResultData.username)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OneResultData::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:plane.OneResultData.username)
}

// optional uint32 killnum = 4;
inline bool OneResultData::has_killnum() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneResultData::set_has_killnum() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneResultData::clear_has_killnum() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneResultData::clear_killnum() {
  killnum_ = 0u;
  clear_has_killnum();
}
inline ::google::protobuf::uint32 OneResultData::killnum() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.killnum)
  return killnum_;
}
inline void OneResultData::set_killnum(::google::protobuf::uint32 value) {
  set_has_killnum();
  killnum_ = value;
  // @@protoc_insertion_point(field_set:plane.OneResultData.killnum)
}

// optional uint32 score = 5;
inline bool OneResultData::has_score() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OneResultData::set_has_score() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OneResultData::clear_has_score() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OneResultData::clear_score() {
  score_ = 0u;
  clear_has_score();
}
inline ::google::protobuf::uint32 OneResultData::score() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.score)
  return score_;
}
inline void OneResultData::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:plane.OneResultData.score)
}

// optional uint32 reward_sugar = 6;
inline bool OneResultData::has_reward_sugar() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OneResultData::set_has_reward_sugar() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OneResultData::clear_has_reward_sugar() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OneResultData::clear_reward_sugar() {
  reward_sugar_ = 0u;
  clear_has_reward_sugar();
}
inline ::google::protobuf::uint32 OneResultData::reward_sugar() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.reward_sugar)
  return reward_sugar_;
}
inline void OneResultData::set_reward_sugar(::google::protobuf::uint32 value) {
  set_has_reward_sugar();
  reward_sugar_ = value;
  // @@protoc_insertion_point(field_set:plane.OneResultData.reward_sugar)
}

// optional uint32 reward_cookie = 7;
inline bool OneResultData::has_reward_cookie() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OneResultData::set_has_reward_cookie() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OneResultData::clear_has_reward_cookie() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OneResultData::clear_reward_cookie() {
  reward_cookie_ = 0u;
  clear_has_reward_cookie();
}
inline ::google::protobuf::uint32 OneResultData::reward_cookie() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.reward_cookie)
  return reward_cookie_;
}
inline void OneResultData::set_reward_cookie(::google::protobuf::uint32 value) {
  set_has_reward_cookie();
  reward_cookie_ = value;
  // @@protoc_insertion_point(field_set:plane.OneResultData.reward_cookie)
}

// optional uint32 is_ai = 8;
inline bool OneResultData::has_is_ai() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OneResultData::set_has_is_ai() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OneResultData::clear_has_is_ai() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OneResultData::clear_is_ai() {
  is_ai_ = 0u;
  clear_has_is_ai();
}
inline ::google::protobuf::uint32 OneResultData::is_ai() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.is_ai)
  return is_ai_;
}
inline void OneResultData::set_is_ai(::google::protobuf::uint32 value) {
  set_has_is_ai();
  is_ai_ = value;
  // @@protoc_insertion_point(field_set:plane.OneResultData.is_ai)
}

// optional uint32 uid = 9;
inline bool OneResultData::has_uid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void OneResultData::set_has_uid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void OneResultData::clear_has_uid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void OneResultData::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 OneResultData::uid() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.uid)
  return uid_;
}
inline void OneResultData::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneResultData.uid)
}

// optional uint32 avatarid = 10;
inline bool OneResultData::has_avatarid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void OneResultData::set_has_avatarid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void OneResultData::clear_has_avatarid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void OneResultData::clear_avatarid() {
  avatarid_ = 0u;
  clear_has_avatarid();
}
inline ::google::protobuf::uint32 OneResultData::avatarid() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.avatarid)
  return avatarid_;
}
inline void OneResultData::set_avatarid(::google::protobuf::uint32 value) {
  set_has_avatarid();
  avatarid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneResultData.avatarid)
}

// optional uint32 header_imgurl = 11;
inline bool OneResultData::has_header_imgurl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void OneResultData::set_has_header_imgurl() {
  _has_bits_[0] |= 0x00000400u;
}
inline void OneResultData::clear_has_header_imgurl() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void OneResultData::clear_header_imgurl() {
  header_imgurl_ = 0u;
  clear_has_header_imgurl();
}
inline ::google::protobuf::uint32 OneResultData::header_imgurl() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.header_imgurl)
  return header_imgurl_;
}
inline void OneResultData::set_header_imgurl(::google::protobuf::uint32 value) {
  set_has_header_imgurl();
  header_imgurl_ = value;
  // @@protoc_insertion_point(field_set:plane.OneResultData.header_imgurl)
}

// optional uint32 sex = 12;
inline bool OneResultData::has_sex() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void OneResultData::set_has_sex() {
  _has_bits_[0] |= 0x00000800u;
}
inline void OneResultData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void OneResultData::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 OneResultData::sex() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.sex)
  return sex_;
}
inline void OneResultData::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:plane.OneResultData.sex)
}

// optional uint32 rank = 13;
inline bool OneResultData::has_rank() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void OneResultData::set_has_rank() {
  _has_bits_[0] |= 0x00001000u;
}
inline void OneResultData::clear_has_rank() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void OneResultData::clear_rank() {
  rank_ = 0u;
  clear_has_rank();
}
inline ::google::protobuf::uint32 OneResultData::rank() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.rank)
  return rank_;
}
inline void OneResultData::set_rank(::google::protobuf::uint32 value) {
  set_has_rank();
  rank_ = value;
  // @@protoc_insertion_point(field_set:plane.OneResultData.rank)
}

// optional uint32 is_mvp = 14;
inline bool OneResultData::has_is_mvp() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void OneResultData::set_has_is_mvp() {
  _has_bits_[0] |= 0x00002000u;
}
inline void OneResultData::clear_has_is_mvp() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void OneResultData::clear_is_mvp() {
  is_mvp_ = 0u;
  clear_has_is_mvp();
}
inline ::google::protobuf::uint32 OneResultData::is_mvp() const {
  // @@protoc_insertion_point(field_get:plane.OneResultData.is_mvp)
  return is_mvp_;
}
inline void OneResultData::set_is_mvp(::google::protobuf::uint32 value) {
  set_has_is_mvp();
  is_mvp_ = value;
  // @@protoc_insertion_point(field_set:plane.OneResultData.is_mvp)
}

// -------------------------------------------------------------------

// ResultDataMsg

// repeated .plane.OneResultData datas = 1;
inline int ResultDataMsg::datas_size() const {
  return datas_.size();
}
inline void ResultDataMsg::clear_datas() {
  datas_.Clear();
}
inline const ::plane::OneResultData& ResultDataMsg::datas(int index) const {
  // @@protoc_insertion_point(field_get:plane.ResultDataMsg.datas)
  return datas_.Get(index);
}
inline ::plane::OneResultData* ResultDataMsg::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:plane.ResultDataMsg.datas)
  return datas_.Mutable(index);
}
inline ::plane::OneResultData* ResultDataMsg::add_datas() {
  // @@protoc_insertion_point(field_add:plane.ResultDataMsg.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::OneResultData >*
ResultDataMsg::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:plane.ResultDataMsg.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::OneResultData >&
ResultDataMsg::datas() const {
  // @@protoc_insertion_point(field_list:plane.ResultDataMsg.datas)
  return datas_;
}

// -------------------------------------------------------------------

// PlaneDieMsg

// optional uint32 planeid = 1;
inline bool PlaneDieMsg::has_planeid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaneDieMsg::set_has_planeid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaneDieMsg::clear_has_planeid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaneDieMsg::clear_planeid() {
  planeid_ = 0u;
  clear_has_planeid();
}
inline ::google::protobuf::uint32 PlaneDieMsg::planeid() const {
  // @@protoc_insertion_point(field_get:plane.PlaneDieMsg.planeid)
  return planeid_;
}
inline void PlaneDieMsg::set_planeid(::google::protobuf::uint32 value) {
  set_has_planeid();
  planeid_ = value;
  // @@protoc_insertion_point(field_set:plane.PlaneDieMsg.planeid)
}

// -------------------------------------------------------------------

// FrameHitBcMsg

// repeated .plane.OneBulletGroupHit hits = 1;
inline int FrameHitBcMsg::hits_size() const {
  return hits_.size();
}
inline void FrameHitBcMsg::clear_hits() {
  hits_.Clear();
}
inline const ::plane::OneBulletGroupHit& FrameHitBcMsg::hits(int index) const {
  // @@protoc_insertion_point(field_get:plane.FrameHitBcMsg.hits)
  return hits_.Get(index);
}
inline ::plane::OneBulletGroupHit* FrameHitBcMsg::mutable_hits(int index) {
  // @@protoc_insertion_point(field_mutable:plane.FrameHitBcMsg.hits)
  return hits_.Mutable(index);
}
inline ::plane::OneBulletGroupHit* FrameHitBcMsg::add_hits() {
  // @@protoc_insertion_point(field_add:plane.FrameHitBcMsg.hits)
  return hits_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::OneBulletGroupHit >*
FrameHitBcMsg::mutable_hits() {
  // @@protoc_insertion_point(field_mutable_list:plane.FrameHitBcMsg.hits)
  return &hits_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::OneBulletGroupHit >&
FrameHitBcMsg::hits() const {
  // @@protoc_insertion_point(field_list:plane.FrameHitBcMsg.hits)
  return hits_;
}

// -------------------------------------------------------------------

// OneBulletGroupHit

// optional uint32 bulletgroupid = 1;
inline bool OneBulletGroupHit::has_bulletgroupid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneBulletGroupHit::set_has_bulletgroupid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneBulletGroupHit::clear_has_bulletgroupid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneBulletGroupHit::clear_bulletgroupid() {
  bulletgroupid_ = 0u;
  clear_has_bulletgroupid();
}
inline ::google::protobuf::uint32 OneBulletGroupHit::bulletgroupid() const {
  // @@protoc_insertion_point(field_get:plane.OneBulletGroupHit.bulletgroupid)
  return bulletgroupid_;
}
inline void OneBulletGroupHit::set_bulletgroupid(::google::protobuf::uint32 value) {
  set_has_bulletgroupid();
  bulletgroupid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneBulletGroupHit.bulletgroupid)
}

// repeated .plane.OneEnergyHit eneryhits = 2;
inline int OneBulletGroupHit::eneryhits_size() const {
  return eneryhits_.size();
}
inline void OneBulletGroupHit::clear_eneryhits() {
  eneryhits_.Clear();
}
inline const ::plane::OneEnergyHit& OneBulletGroupHit::eneryhits(int index) const {
  // @@protoc_insertion_point(field_get:plane.OneBulletGroupHit.eneryhits)
  return eneryhits_.Get(index);
}
inline ::plane::OneEnergyHit* OneBulletGroupHit::mutable_eneryhits(int index) {
  // @@protoc_insertion_point(field_mutable:plane.OneBulletGroupHit.eneryhits)
  return eneryhits_.Mutable(index);
}
inline ::plane::OneEnergyHit* OneBulletGroupHit::add_eneryhits() {
  // @@protoc_insertion_point(field_add:plane.OneBulletGroupHit.eneryhits)
  return eneryhits_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::OneEnergyHit >*
OneBulletGroupHit::mutable_eneryhits() {
  // @@protoc_insertion_point(field_mutable_list:plane.OneBulletGroupHit.eneryhits)
  return &eneryhits_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::OneEnergyHit >&
OneBulletGroupHit::eneryhits() const {
  // @@protoc_insertion_point(field_list:plane.OneBulletGroupHit.eneryhits)
  return eneryhits_;
}

// repeated .plane.OnePlaneHit planehits = 3;
inline int OneBulletGroupHit::planehits_size() const {
  return planehits_.size();
}
inline void OneBulletGroupHit::clear_planehits() {
  planehits_.Clear();
}
inline const ::plane::OnePlaneHit& OneBulletGroupHit::planehits(int index) const {
  // @@protoc_insertion_point(field_get:plane.OneBulletGroupHit.planehits)
  return planehits_.Get(index);
}
inline ::plane::OnePlaneHit* OneBulletGroupHit::mutable_planehits(int index) {
  // @@protoc_insertion_point(field_mutable:plane.OneBulletGroupHit.planehits)
  return planehits_.Mutable(index);
}
inline ::plane::OnePlaneHit* OneBulletGroupHit::add_planehits() {
  // @@protoc_insertion_point(field_add:plane.OneBulletGroupHit.planehits)
  return planehits_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::OnePlaneHit >*
OneBulletGroupHit::mutable_planehits() {
  // @@protoc_insertion_point(field_mutable_list:plane.OneBulletGroupHit.planehits)
  return &planehits_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::OnePlaneHit >&
OneBulletGroupHit::planehits() const {
  // @@protoc_insertion_point(field_list:plane.OneBulletGroupHit.planehits)
  return planehits_;
}

// -------------------------------------------------------------------

// OneEnergyHit

// optional uint32 bulletid = 1;
inline bool OneEnergyHit::has_bulletid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneEnergyHit::set_has_bulletid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneEnergyHit::clear_has_bulletid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneEnergyHit::clear_bulletid() {
  bulletid_ = 0u;
  clear_has_bulletid();
}
inline ::google::protobuf::uint32 OneEnergyHit::bulletid() const {
  // @@protoc_insertion_point(field_get:plane.OneEnergyHit.bulletid)
  return bulletid_;
}
inline void OneEnergyHit::set_bulletid(::google::protobuf::uint32 value) {
  set_has_bulletid();
  bulletid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneEnergyHit.bulletid)
}

// optional uint32 id = 2;
inline bool OneEnergyHit::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneEnergyHit::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneEnergyHit::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneEnergyHit::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 OneEnergyHit::id() const {
  // @@protoc_insertion_point(field_get:plane.OneEnergyHit.id)
  return id_;
}
inline void OneEnergyHit::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:plane.OneEnergyHit.id)
}

// optional uint32 type = 3;
inline bool OneEnergyHit::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneEnergyHit::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneEnergyHit::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneEnergyHit::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 OneEnergyHit::type() const {
  // @@protoc_insertion_point(field_get:plane.OneEnergyHit.type)
  return type_;
}
inline void OneEnergyHit::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:plane.OneEnergyHit.type)
}

// optional uint32 playerid = 4;
inline bool OneEnergyHit::has_playerid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneEnergyHit::set_has_playerid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneEnergyHit::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneEnergyHit::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 OneEnergyHit::playerid() const {
  // @@protoc_insertion_point(field_get:plane.OneEnergyHit.playerid)
  return playerid_;
}
inline void OneEnergyHit::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneEnergyHit.playerid)
}

// optional uint32 planeid = 5;
inline bool OneEnergyHit::has_planeid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OneEnergyHit::set_has_planeid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OneEnergyHit::clear_has_planeid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OneEnergyHit::clear_planeid() {
  planeid_ = 0u;
  clear_has_planeid();
}
inline ::google::protobuf::uint32 OneEnergyHit::planeid() const {
  // @@protoc_insertion_point(field_get:plane.OneEnergyHit.planeid)
  return planeid_;
}
inline void OneEnergyHit::set_planeid(::google::protobuf::uint32 value) {
  set_has_planeid();
  planeid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneEnergyHit.planeid)
}

// optional uint32 speed = 6;
inline bool OneEnergyHit::has_speed() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OneEnergyHit::set_has_speed() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OneEnergyHit::clear_has_speed() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OneEnergyHit::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 OneEnergyHit::speed() const {
  // @@protoc_insertion_point(field_get:plane.OneEnergyHit.speed)
  return speed_;
}
inline void OneEnergyHit::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:plane.OneEnergyHit.speed)
}

// -------------------------------------------------------------------

// OnePlaneHit

// optional uint32 bulletid = 1;
inline bool OnePlaneHit::has_bulletid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnePlaneHit::set_has_bulletid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnePlaneHit::clear_has_bulletid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnePlaneHit::clear_bulletid() {
  bulletid_ = 0u;
  clear_has_bulletid();
}
inline ::google::protobuf::uint32 OnePlaneHit::bulletid() const {
  // @@protoc_insertion_point(field_get:plane.OnePlaneHit.bulletid)
  return bulletid_;
}
inline void OnePlaneHit::set_bulletid(::google::protobuf::uint32 value) {
  set_has_bulletid();
  bulletid_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePlaneHit.bulletid)
}

// optional uint32 hit_playerid = 2;
inline bool OnePlaneHit::has_hit_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnePlaneHit::set_has_hit_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnePlaneHit::clear_has_hit_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnePlaneHit::clear_hit_playerid() {
  hit_playerid_ = 0u;
  clear_has_hit_playerid();
}
inline ::google::protobuf::uint32 OnePlaneHit::hit_playerid() const {
  // @@protoc_insertion_point(field_get:plane.OnePlaneHit.hit_playerid)
  return hit_playerid_;
}
inline void OnePlaneHit::set_hit_playerid(::google::protobuf::uint32 value) {
  set_has_hit_playerid();
  hit_playerid_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePlaneHit.hit_playerid)
}

// optional uint32 hit_planeid = 3;
inline bool OnePlaneHit::has_hit_planeid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OnePlaneHit::set_has_hit_planeid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OnePlaneHit::clear_has_hit_planeid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OnePlaneHit::clear_hit_planeid() {
  hit_planeid_ = 0u;
  clear_has_hit_planeid();
}
inline ::google::protobuf::uint32 OnePlaneHit::hit_planeid() const {
  // @@protoc_insertion_point(field_get:plane.OnePlaneHit.hit_planeid)
  return hit_planeid_;
}
inline void OnePlaneHit::set_hit_planeid(::google::protobuf::uint32 value) {
  set_has_hit_planeid();
  hit_planeid_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePlaneHit.hit_planeid)
}

// optional uint32 ownerspeed = 4;
inline bool OnePlaneHit::has_ownerspeed() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OnePlaneHit::set_has_ownerspeed() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OnePlaneHit::clear_has_ownerspeed() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OnePlaneHit::clear_ownerspeed() {
  ownerspeed_ = 0u;
  clear_has_ownerspeed();
}
inline ::google::protobuf::uint32 OnePlaneHit::ownerspeed() const {
  // @@protoc_insertion_point(field_get:plane.OnePlaneHit.ownerspeed)
  return ownerspeed_;
}
inline void OnePlaneHit::set_ownerspeed(::google::protobuf::uint32 value) {
  set_has_ownerspeed();
  ownerspeed_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePlaneHit.ownerspeed)
}

// optional uint32 attackerid = 5;
inline bool OnePlaneHit::has_attackerid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OnePlaneHit::set_has_attackerid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OnePlaneHit::clear_has_attackerid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OnePlaneHit::clear_attackerid() {
  attackerid_ = 0u;
  clear_has_attackerid();
}
inline ::google::protobuf::uint32 OnePlaneHit::attackerid() const {
  // @@protoc_insertion_point(field_get:plane.OnePlaneHit.attackerid)
  return attackerid_;
}
inline void OnePlaneHit::set_attackerid(::google::protobuf::uint32 value) {
  set_has_attackerid();
  attackerid_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePlaneHit.attackerid)
}

// optional uint32 addplaneid = 6;
inline bool OnePlaneHit::has_addplaneid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OnePlaneHit::set_has_addplaneid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OnePlaneHit::clear_has_addplaneid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OnePlaneHit::clear_addplaneid() {
  addplaneid_ = 0u;
  clear_has_addplaneid();
}
inline ::google::protobuf::uint32 OnePlaneHit::addplaneid() const {
  // @@protoc_insertion_point(field_get:plane.OnePlaneHit.addplaneid)
  return addplaneid_;
}
inline void OnePlaneHit::set_addplaneid(::google::protobuf::uint32 value) {
  set_has_addplaneid();
  addplaneid_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePlaneHit.addplaneid)
}

// optional uint32 speed = 7;
inline bool OnePlaneHit::has_speed() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OnePlaneHit::set_has_speed() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OnePlaneHit::clear_has_speed() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OnePlaneHit::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 OnePlaneHit::speed() const {
  // @@protoc_insertion_point(field_get:plane.OnePlaneHit.speed)
  return speed_;
}
inline void OnePlaneHit::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePlaneHit.speed)
}

// -------------------------------------------------------------------

// BatchAddFoodBcMsg

// repeated .plane.FoodMsg foods = 1;
inline int BatchAddFoodBcMsg::foods_size() const {
  return foods_.size();
}
inline void BatchAddFoodBcMsg::clear_foods() {
  foods_.Clear();
}
inline const ::plane::FoodMsg& BatchAddFoodBcMsg::foods(int index) const {
  // @@protoc_insertion_point(field_get:plane.BatchAddFoodBcMsg.foods)
  return foods_.Get(index);
}
inline ::plane::FoodMsg* BatchAddFoodBcMsg::mutable_foods(int index) {
  // @@protoc_insertion_point(field_mutable:plane.BatchAddFoodBcMsg.foods)
  return foods_.Mutable(index);
}
inline ::plane::FoodMsg* BatchAddFoodBcMsg::add_foods() {
  // @@protoc_insertion_point(field_add:plane.BatchAddFoodBcMsg.foods)
  return foods_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::FoodMsg >*
BatchAddFoodBcMsg::mutable_foods() {
  // @@protoc_insertion_point(field_mutable_list:plane.BatchAddFoodBcMsg.foods)
  return &foods_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::FoodMsg >&
BatchAddFoodBcMsg::foods() const {
  // @@protoc_insertion_point(field_list:plane.BatchAddFoodBcMsg.foods)
  return foods_;
}

// -------------------------------------------------------------------

// UidMsg

// optional uint32 uid = 1;
inline bool UidMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UidMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UidMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UidMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 UidMsg::uid() const {
  // @@protoc_insertion_point(field_get:plane.UidMsg.uid)
  return uid_;
}
inline void UidMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.UidMsg.uid)
}

// -------------------------------------------------------------------

// UidListMsg

// repeated uint32 uids = 1;
inline int UidListMsg::uids_size() const {
  return uids_.size();
}
inline void UidListMsg::clear_uids() {
  uids_.Clear();
}
inline ::google::protobuf::uint32 UidListMsg::uids(int index) const {
  // @@protoc_insertion_point(field_get:plane.UidListMsg.uids)
  return uids_.Get(index);
}
inline void UidListMsg::set_uids(int index, ::google::protobuf::uint32 value) {
  uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:plane.UidListMsg.uids)
}
inline void UidListMsg::add_uids(::google::protobuf::uint32 value) {
  uids_.Add(value);
  // @@protoc_insertion_point(field_add:plane.UidListMsg.uids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UidListMsg::uids() const {
  // @@protoc_insertion_point(field_list:plane.UidListMsg.uids)
  return uids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UidListMsg::mutable_uids() {
  // @@protoc_insertion_point(field_mutable_list:plane.UidListMsg.uids)
  return &uids_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace plane

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_plane_2fplane_5fmsg_2eproto__INCLUDED
