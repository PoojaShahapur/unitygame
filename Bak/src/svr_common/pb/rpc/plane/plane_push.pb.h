// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plane/plane_push.proto

#ifndef PROTOBUF_plane_2fplane_5fpush_2eproto__INCLUDED
#define PROTOBUF_plane_2fplane_5fpush_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "empty_msg.pb.h"
#include "plane/plane_msg.pb.h"
// @@protoc_insertion_point(includes)
namespace plane {
class BatchAddEnergyPlaneBcMsg;
class BatchAddEnergyPlaneBcMsgDefaultTypeInternal;
extern BatchAddEnergyPlaneBcMsgDefaultTypeInternal _BatchAddEnergyPlaneBcMsg_default_instance_;
class BatchAddFoodBcMsg;
class BatchAddFoodBcMsgDefaultTypeInternal;
extern BatchAddFoodBcMsgDefaultTypeInternal _BatchAddFoodBcMsg_default_instance_;
class BatchRemovePlaneBcMsg;
class BatchRemovePlaneBcMsgDefaultTypeInternal;
extern BatchRemovePlaneBcMsgDefaultTypeInternal _BatchRemovePlaneBcMsg_default_instance_;
class Bullet;
class BulletDefaultTypeInternal;
extern BulletDefaultTypeInternal _Bullet_default_instance_;
class DeathMsg;
class DeathMsgDefaultTypeInternal;
extern DeathMsgDefaultTypeInternal _DeathMsg_default_instance_;
class FireBcMsg;
class FireBcMsgDefaultTypeInternal;
extern FireBcMsgDefaultTypeInternal _FireBcMsg_default_instance_;
class FireSimpleBcMsg;
class FireSimpleBcMsgDefaultTypeInternal;
extern FireSimpleBcMsgDefaultTypeInternal _FireSimpleBcMsg_default_instance_;
class FoodMsg;
class FoodMsgDefaultTypeInternal;
extern FoodMsgDefaultTypeInternal _FoodMsg_default_instance_;
class FrameHitBcMsg;
class FrameHitBcMsgDefaultTypeInternal;
extern FrameHitBcMsgDefaultTypeInternal _FrameHitBcMsg_default_instance_;
class HitBcMsg;
class HitBcMsgDefaultTypeInternal;
extern HitBcMsgDefaultTypeInternal _HitBcMsg_default_instance_;
class HitEnergyMsg;
class HitEnergyMsgDefaultTypeInternal;
extern HitEnergyMsgDefaultTypeInternal _HitEnergyMsg_default_instance_;
class LevelMsg;
class LevelMsgDefaultTypeInternal;
extern LevelMsgDefaultTypeInternal _LevelMsg_default_instance_;
class MoveInfo;
class MoveInfoDefaultTypeInternal;
extern MoveInfoDefaultTypeInternal _MoveInfo_default_instance_;
class MoveToBcMsg;
class MoveToBcMsgDefaultTypeInternal;
extern MoveToBcMsgDefaultTypeInternal _MoveToBcMsg_default_instance_;
class MoveToBcMsgRoom;
class MoveToBcMsgRoomDefaultTypeInternal;
extern MoveToBcMsgRoomDefaultTypeInternal _MoveToBcMsgRoom_default_instance_;
class MoveToMsg;
class MoveToMsgDefaultTypeInternal;
extern MoveToMsgDefaultTypeInternal _MoveToMsg_default_instance_;
class MsAndId;
class MsAndIdDefaultTypeInternal;
extern MsAndIdDefaultTypeInternal _MsAndId_default_instance_;
class OneBatchPlane;
class OneBatchPlaneDefaultTypeInternal;
extern OneBatchPlaneDefaultTypeInternal _OneBatchPlane_default_instance_;
class OneBulletGroupHit;
class OneBulletGroupHitDefaultTypeInternal;
extern OneBulletGroupHitDefaultTypeInternal _OneBulletGroupHit_default_instance_;
class OneEnergyHit;
class OneEnergyHitDefaultTypeInternal;
extern OneEnergyHitDefaultTypeInternal _OneEnergyHit_default_instance_;
class OnePlaneHit;
class OnePlaneHitDefaultTypeInternal;
extern OnePlaneHitDefaultTypeInternal _OnePlaneHit_default_instance_;
class OneResultData;
class OneResultDataDefaultTypeInternal;
extern OneResultDataDefaultTypeInternal _OneResultData_default_instance_;
class PlaneBcMsg;
class PlaneBcMsgDefaultTypeInternal;
extern PlaneBcMsgDefaultTypeInternal _PlaneBcMsg_default_instance_;
class PlaneDieMsg;
class PlaneDieMsgDefaultTypeInternal;
extern PlaneDieMsgDefaultTypeInternal _PlaneDieMsg_default_instance_;
class PlaneMsg;
class PlaneMsgDefaultTypeInternal;
extern PlaneMsgDefaultTypeInternal _PlaneMsg_default_instance_;
class PlayerInfo;
class PlayerInfoDefaultTypeInternal;
extern PlayerInfoDefaultTypeInternal _PlayerInfo_default_instance_;
class RankData;
class RankDataDefaultTypeInternal;
extern RankDataDefaultTypeInternal _RankData_default_instance_;
class RankDataMsg;
class RankDataMsgDefaultTypeInternal;
extern RankDataMsgDefaultTypeInternal _RankDataMsg_default_instance_;
class ResultDataMsg;
class ResultDataMsgDefaultTypeInternal;
extern ResultDataMsgDefaultTypeInternal _ResultDataMsg_default_instance_;
class ScoreMsg;
class ScoreMsgDefaultTypeInternal;
extern ScoreMsgDefaultTypeInternal _ScoreMsg_default_instance_;
class ShotCDMsg;
class ShotCDMsgDefaultTypeInternal;
extern ShotCDMsgDefaultTypeInternal _ShotCDMsg_default_instance_;
class StateMsg;
class StateMsgDefaultTypeInternal;
extern StateMsgDefaultTypeInternal _StateMsg_default_instance_;
class StopOrMoveBeginBcMsg;
class StopOrMoveBeginBcMsgDefaultTypeInternal;
extern StopOrMoveBeginBcMsgDefaultTypeInternal _StopOrMoveBeginBcMsg_default_instance_;
class TurnToBcMsg;
class TurnToBcMsgDefaultTypeInternal;
extern TurnToBcMsgDefaultTypeInternal _TurnToBcMsg_default_instance_;
class TurnToMsg;
class TurnToMsgDefaultTypeInternal;
extern TurnToMsgDefaultTypeInternal _TurnToMsg_default_instance_;
class UidListMsg;
class UidListMsgDefaultTypeInternal;
extern UidListMsgDefaultTypeInternal _UidListMsg_default_instance_;
class UidMsg;
class UidMsgDefaultTypeInternal;
extern UidMsgDefaultTypeInternal _UidMsg_default_instance_;
class UpdateSpeedBcMsg;
class UpdateSpeedBcMsgDefaultTypeInternal;
extern UpdateSpeedBcMsgDefaultTypeInternal _UpdateSpeedBcMsg_default_instance_;
}  // namespace plane
namespace rpc {
class EmptyMsg;
class EmptyMsgDefaultTypeInternal;
extern EmptyMsgDefaultTypeInternal _EmptyMsg_default_instance_;
}  // namespace rpc

namespace plane {

namespace protobuf_plane_2fplane_5fpush_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_plane_2fplane_5fpush_2eproto

enum StateMsg_State {
  StateMsg_State_State_God = 1,
  StateMsg_State_State_IsStop = 2
};
bool StateMsg_State_IsValid(int value);
const StateMsg_State StateMsg_State_State_MIN = StateMsg_State_State_God;
const StateMsg_State StateMsg_State_State_MAX = StateMsg_State_State_IsStop;
const int StateMsg_State_State_ARRAYSIZE = StateMsg_State_State_MAX + 1;

const ::google::protobuf::EnumDescriptor* StateMsg_State_descriptor();
inline const ::std::string& StateMsg_State_Name(StateMsg_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    StateMsg_State_descriptor(), value);
}
inline bool StateMsg_State_Parse(
    const ::std::string& name, StateMsg_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StateMsg_State>(
    StateMsg_State_descriptor(), name, value);
}
enum StateMsg_StateOp {
  StateMsg_StateOp_Op_On = 1,
  StateMsg_StateOp_Op_Off = 2
};
bool StateMsg_StateOp_IsValid(int value);
const StateMsg_StateOp StateMsg_StateOp_StateOp_MIN = StateMsg_StateOp_Op_On;
const StateMsg_StateOp StateMsg_StateOp_StateOp_MAX = StateMsg_StateOp_Op_Off;
const int StateMsg_StateOp_StateOp_ARRAYSIZE = StateMsg_StateOp_StateOp_MAX + 1;

const ::google::protobuf::EnumDescriptor* StateMsg_StateOp_descriptor();
inline const ::std::string& StateMsg_StateOp_Name(StateMsg_StateOp value) {
  return ::google::protobuf::internal::NameOfEnum(
    StateMsg_StateOp_descriptor(), value);
}
inline bool StateMsg_StateOp_Parse(
    const ::std::string& name, StateMsg_StateOp* value) {
  return ::google::protobuf::internal::ParseNamedEnum<StateMsg_StateOp>(
    StateMsg_StateOp_descriptor(), name, value);
}
// ===================================================================

class MoveToBcMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.MoveToBcMsg) */ {
 public:
  MoveToBcMsg();
  virtual ~MoveToBcMsg();

  MoveToBcMsg(const MoveToBcMsg& from);

  inline MoveToBcMsg& operator=(const MoveToBcMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveToBcMsg& default_instance();

  static inline const MoveToBcMsg* internal_default_instance() {
    return reinterpret_cast<const MoveToBcMsg*>(
               &_MoveToBcMsg_default_instance_);
  }

  void Swap(MoveToBcMsg* other);

  // implements Message ----------------------------------------------

  inline MoveToBcMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  MoveToBcMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MoveToBcMsg& from);
  void MergeFrom(const MoveToBcMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MoveToBcMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .plane.MsAndId ms_and_id = 1;
  bool has_ms_and_id() const;
  void clear_ms_and_id();
  static const int kMsAndIdFieldNumber = 1;
  const ::plane::MsAndId& ms_and_id() const;
  ::plane::MsAndId* mutable_ms_and_id();
  ::plane::MsAndId* release_ms_and_id();
  void set_allocated_ms_and_id(::plane::MsAndId* ms_and_id);

  // optional .plane.MoveToMsg move_to = 2;
  bool has_move_to() const;
  void clear_move_to();
  static const int kMoveToFieldNumber = 2;
  const ::plane::MoveToMsg& move_to() const;
  ::plane::MoveToMsg* mutable_move_to();
  ::plane::MoveToMsg* release_move_to();
  void set_allocated_move_to(::plane::MoveToMsg* move_to);

  // @@protoc_insertion_point(class_scope:plane.MoveToBcMsg)
 private:
  void set_has_ms_and_id();
  void clear_has_ms_and_id();
  void set_has_move_to();
  void clear_has_move_to();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::plane::MsAndId* ms_and_id_;
  ::plane::MoveToMsg* move_to_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class MoveToBcMsgRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.MoveToBcMsgRoom) */ {
 public:
  MoveToBcMsgRoom();
  virtual ~MoveToBcMsgRoom();

  MoveToBcMsgRoom(const MoveToBcMsgRoom& from);

  inline MoveToBcMsgRoom& operator=(const MoveToBcMsgRoom& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MoveToBcMsgRoom& default_instance();

  static inline const MoveToBcMsgRoom* internal_default_instance() {
    return reinterpret_cast<const MoveToBcMsgRoom*>(
               &_MoveToBcMsgRoom_default_instance_);
  }

  void Swap(MoveToBcMsgRoom* other);

  // implements Message ----------------------------------------------

  inline MoveToBcMsgRoom* New() const PROTOBUF_FINAL { return New(NULL); }

  MoveToBcMsgRoom* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const MoveToBcMsgRoom& from);
  void MergeFrom(const MoveToBcMsgRoom& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(MoveToBcMsgRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .plane.MoveToBcMsg moves = 2;
  int moves_size() const;
  void clear_moves();
  static const int kMovesFieldNumber = 2;
  const ::plane::MoveToBcMsg& moves(int index) const;
  ::plane::MoveToBcMsg* mutable_moves(int index);
  ::plane::MoveToBcMsg* add_moves();
  ::google::protobuf::RepeatedPtrField< ::plane::MoveToBcMsg >*
      mutable_moves();
  const ::google::protobuf::RepeatedPtrField< ::plane::MoveToBcMsg >&
      moves() const;

  // optional .plane.MsAndId curframe_and_roomid = 1;
  bool has_curframe_and_roomid() const;
  void clear_curframe_and_roomid();
  static const int kCurframeAndRoomidFieldNumber = 1;
  const ::plane::MsAndId& curframe_and_roomid() const;
  ::plane::MsAndId* mutable_curframe_and_roomid();
  ::plane::MsAndId* release_curframe_and_roomid();
  void set_allocated_curframe_and_roomid(::plane::MsAndId* curframe_and_roomid);

  // @@protoc_insertion_point(class_scope:plane.MoveToBcMsgRoom)
 private:
  void set_has_curframe_and_roomid();
  void clear_has_curframe_and_roomid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::plane::MoveToBcMsg > moves_;
  ::plane::MsAndId* curframe_and_roomid_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TurnToBcMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.TurnToBcMsg) */ {
 public:
  TurnToBcMsg();
  virtual ~TurnToBcMsg();

  TurnToBcMsg(const TurnToBcMsg& from);

  inline TurnToBcMsg& operator=(const TurnToBcMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TurnToBcMsg& default_instance();

  static inline const TurnToBcMsg* internal_default_instance() {
    return reinterpret_cast<const TurnToBcMsg*>(
               &_TurnToBcMsg_default_instance_);
  }

  void Swap(TurnToBcMsg* other);

  // implements Message ----------------------------------------------

  inline TurnToBcMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  TurnToBcMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TurnToBcMsg& from);
  void MergeFrom(const TurnToBcMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TurnToBcMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .plane.MsAndId ms_and_id = 1;
  bool has_ms_and_id() const;
  void clear_ms_and_id();
  static const int kMsAndIdFieldNumber = 1;
  const ::plane::MsAndId& ms_and_id() const;
  ::plane::MsAndId* mutable_ms_and_id();
  ::plane::MsAndId* release_ms_and_id();
  void set_allocated_ms_and_id(::plane::MsAndId* ms_and_id);

  // optional .plane.TurnToMsg turn_to = 2;
  bool has_turn_to() const;
  void clear_turn_to();
  static const int kTurnToFieldNumber = 2;
  const ::plane::TurnToMsg& turn_to() const;
  ::plane::TurnToMsg* mutable_turn_to();
  ::plane::TurnToMsg* release_turn_to();
  void set_allocated_turn_to(::plane::TurnToMsg* turn_to);

  // @@protoc_insertion_point(class_scope:plane.TurnToBcMsg)
 private:
  void set_has_ms_and_id();
  void clear_has_ms_and_id();
  void set_has_turn_to();
  void clear_has_turn_to();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::plane::MsAndId* ms_and_id_;
  ::plane::TurnToMsg* turn_to_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StopOrMoveBeginBcMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.StopOrMoveBeginBcMsg) */ {
 public:
  StopOrMoveBeginBcMsg();
  virtual ~StopOrMoveBeginBcMsg();

  StopOrMoveBeginBcMsg(const StopOrMoveBeginBcMsg& from);

  inline StopOrMoveBeginBcMsg& operator=(const StopOrMoveBeginBcMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StopOrMoveBeginBcMsg& default_instance();

  static inline const StopOrMoveBeginBcMsg* internal_default_instance() {
    return reinterpret_cast<const StopOrMoveBeginBcMsg*>(
               &_StopOrMoveBeginBcMsg_default_instance_);
  }

  void Swap(StopOrMoveBeginBcMsg* other);

  // implements Message ----------------------------------------------

  inline StopOrMoveBeginBcMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  StopOrMoveBeginBcMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StopOrMoveBeginBcMsg& from);
  void MergeFrom(const StopOrMoveBeginBcMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StopOrMoveBeginBcMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .plane.MsAndId ms_and_id = 1;
  bool has_ms_and_id() const;
  void clear_ms_and_id();
  static const int kMsAndIdFieldNumber = 1;
  const ::plane::MsAndId& ms_and_id() const;
  ::plane::MsAndId* mutable_ms_and_id();
  ::plane::MsAndId* release_ms_and_id();
  void set_allocated_ms_and_id(::plane::MsAndId* ms_and_id);

  // optional .plane.MoveInfo info = 2;
  bool has_info() const;
  void clear_info();
  static const int kInfoFieldNumber = 2;
  const ::plane::MoveInfo& info() const;
  ::plane::MoveInfo* mutable_info();
  ::plane::MoveInfo* release_info();
  void set_allocated_info(::plane::MoveInfo* info);

  // @@protoc_insertion_point(class_scope:plane.StopOrMoveBeginBcMsg)
 private:
  void set_has_ms_and_id();
  void clear_has_ms_and_id();
  void set_has_info();
  void clear_has_info();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::plane::MsAndId* ms_and_id_;
  ::plane::MoveInfo* info_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FireBcMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.FireBcMsg) */ {
 public:
  FireBcMsg();
  virtual ~FireBcMsg();

  FireBcMsg(const FireBcMsg& from);

  inline FireBcMsg& operator=(const FireBcMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FireBcMsg& default_instance();

  static inline const FireBcMsg* internal_default_instance() {
    return reinterpret_cast<const FireBcMsg*>(
               &_FireBcMsg_default_instance_);
  }

  void Swap(FireBcMsg* other);

  // implements Message ----------------------------------------------

  inline FireBcMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  FireBcMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FireBcMsg& from);
  void MergeFrom(const FireBcMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FireBcMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .plane.Bullet all_bullets = 8;
  int all_bullets_size() const;
  void clear_all_bullets();
  static const int kAllBulletsFieldNumber = 8;
  const ::plane::Bullet& all_bullets(int index) const;
  ::plane::Bullet* mutable_all_bullets(int index);
  ::plane::Bullet* add_all_bullets();
  ::google::protobuf::RepeatedPtrField< ::plane::Bullet >*
      mutable_all_bullets();
  const ::google::protobuf::RepeatedPtrField< ::plane::Bullet >&
      all_bullets() const;

  // optional uint32 ndir_angle = 1;
  bool has_ndir_angle() const;
  void clear_ndir_angle();
  static const int kNdirAngleFieldNumber = 1;
  ::google::protobuf::uint32 ndir_angle() const;
  void set_ndir_angle(::google::protobuf::uint32 value);

  // optional uint32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::uint32 x() const;
  void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::uint32 y() const;
  void set_y(::google::protobuf::uint32 value);

  // optional uint32 life_seconds = 4;
  bool has_life_seconds() const;
  void clear_life_seconds();
  static const int kLifeSecondsFieldNumber = 4;
  ::google::protobuf::uint32 life_seconds() const;
  void set_life_seconds(::google::protobuf::uint32 value);

  // optional uint32 speed = 5;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 5;
  ::google::protobuf::uint32 speed() const;
  void set_speed(::google::protobuf::uint32 value);

  // optional uint32 shooter_id = 6;
  bool has_shooter_id() const;
  void clear_shooter_id();
  static const int kShooterIdFieldNumber = 6;
  ::google::protobuf::uint32 shooter_id() const;
  void set_shooter_id(::google::protobuf::uint32 value);

  // optional uint32 bullet_group_id = 7;
  bool has_bullet_group_id() const;
  void clear_bullet_group_id();
  static const int kBulletGroupIdFieldNumber = 7;
  ::google::protobuf::uint32 bullet_group_id() const;
  void set_bullet_group_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.FireBcMsg)
 private:
  void set_has_ndir_angle();
  void clear_has_ndir_angle();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_life_seconds();
  void clear_has_life_seconds();
  void set_has_speed();
  void clear_has_speed();
  void set_has_shooter_id();
  void clear_has_shooter_id();
  void set_has_bullet_group_id();
  void clear_has_bullet_group_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::plane::Bullet > all_bullets_;
  ::google::protobuf::uint32 ndir_angle_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 life_seconds_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 shooter_id_;
  ::google::protobuf::uint32 bullet_group_id_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Bullet : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.Bullet) */ {
 public:
  Bullet();
  virtual ~Bullet();

  Bullet(const Bullet& from);

  inline Bullet& operator=(const Bullet& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Bullet& default_instance();

  static inline const Bullet* internal_default_instance() {
    return reinterpret_cast<const Bullet*>(
               &_Bullet_default_instance_);
  }

  void Swap(Bullet* other);

  // implements Message ----------------------------------------------

  inline Bullet* New() const PROTOBUF_FINAL { return New(NULL); }

  Bullet* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Bullet& from);
  void MergeFrom(const Bullet& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Bullet* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // optional uint32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::uint32 x() const;
  void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::uint32 y() const;
  void set_y(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.Bullet)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FireSimpleBcMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.FireSimpleBcMsg) */ {
 public:
  FireSimpleBcMsg();
  virtual ~FireSimpleBcMsg();

  FireSimpleBcMsg(const FireSimpleBcMsg& from);

  inline FireSimpleBcMsg& operator=(const FireSimpleBcMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const FireSimpleBcMsg& default_instance();

  static inline const FireSimpleBcMsg* internal_default_instance() {
    return reinterpret_cast<const FireSimpleBcMsg*>(
               &_FireSimpleBcMsg_default_instance_);
  }

  void Swap(FireSimpleBcMsg* other);

  // implements Message ----------------------------------------------

  inline FireSimpleBcMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  FireSimpleBcMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FireSimpleBcMsg& from);
  void MergeFrom(const FireSimpleBcMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FireSimpleBcMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 dir_angle = 1;
  bool has_dir_angle() const;
  void clear_dir_angle();
  static const int kDirAngleFieldNumber = 1;
  ::google::protobuf::uint32 dir_angle() const;
  void set_dir_angle(::google::protobuf::uint32 value);

  // optional uint32 x = 2;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 2;
  ::google::protobuf::uint32 x() const;
  void set_x(::google::protobuf::uint32 value);

  // optional uint32 y = 3;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 3;
  ::google::protobuf::uint32 y() const;
  void set_y(::google::protobuf::uint32 value);

  // optional uint32 life_seconds = 4;
  bool has_life_seconds() const;
  void clear_life_seconds();
  static const int kLifeSecondsFieldNumber = 4;
  ::google::protobuf::uint32 life_seconds() const;
  void set_life_seconds(::google::protobuf::uint32 value);

  // optional uint32 speed = 5;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 5;
  ::google::protobuf::uint32 speed() const;
  void set_speed(::google::protobuf::uint32 value);

  // optional uint32 shooter_id = 6;
  bool has_shooter_id() const;
  void clear_shooter_id();
  static const int kShooterIdFieldNumber = 6;
  ::google::protobuf::uint32 shooter_id() const;
  void set_shooter_id(::google::protobuf::uint32 value);

  // optional uint32 bullet_group_id = 7;
  bool has_bullet_group_id() const;
  void clear_bullet_group_id();
  static const int kBulletGroupIdFieldNumber = 7;
  ::google::protobuf::uint32 bullet_group_id() const;
  void set_bullet_group_id(::google::protobuf::uint32 value);

  // optional uint32 fire_ms = 8;
  bool has_fire_ms() const;
  void clear_fire_ms();
  static const int kFireMsFieldNumber = 8;
  ::google::protobuf::uint32 fire_ms() const;
  void set_fire_ms(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.FireSimpleBcMsg)
 private:
  void set_has_dir_angle();
  void clear_has_dir_angle();
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_life_seconds();
  void clear_has_life_seconds();
  void set_has_speed();
  void clear_has_speed();
  void set_has_shooter_id();
  void clear_has_shooter_id();
  void set_has_bullet_group_id();
  void clear_has_bullet_group_id();
  void set_has_fire_ms();
  void clear_has_fire_ms();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 dir_angle_;
  ::google::protobuf::uint32 x_;
  ::google::protobuf::uint32 y_;
  ::google::protobuf::uint32 life_seconds_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 shooter_id_;
  ::google::protobuf::uint32 bullet_group_id_;
  ::google::protobuf::uint32 fire_ms_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HitBcMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.HitBcMsg) */ {
 public:
  HitBcMsg();
  virtual ~HitBcMsg();

  HitBcMsg(const HitBcMsg& from);

  inline HitBcMsg& operator=(const HitBcMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HitBcMsg& default_instance();

  static inline const HitBcMsg* internal_default_instance() {
    return reinterpret_cast<const HitBcMsg*>(
               &_HitBcMsg_default_instance_);
  }

  void Swap(HitBcMsg* other);

  // implements Message ----------------------------------------------

  inline HitBcMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  HitBcMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HitBcMsg& from);
  void MergeFrom(const HitBcMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HitBcMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bullet_group_id = 1;
  bool has_bullet_group_id() const;
  void clear_bullet_group_id();
  static const int kBulletGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 bullet_group_id() const;
  void set_bullet_group_id(::google::protobuf::uint32 value);

  // optional uint32 bullet_id = 2;
  bool has_bullet_id() const;
  void clear_bullet_id();
  static const int kBulletIdFieldNumber = 2;
  ::google::protobuf::uint32 bullet_id() const;
  void set_bullet_id(::google::protobuf::uint32 value);

  // optional uint32 plane_owner_id = 3;
  bool has_plane_owner_id() const;
  void clear_plane_owner_id();
  static const int kPlaneOwnerIdFieldNumber = 3;
  ::google::protobuf::uint32 plane_owner_id() const;
  void set_plane_owner_id(::google::protobuf::uint32 value);

  // optional uint32 plane_id = 4;
  bool has_plane_id() const;
  void clear_plane_id();
  static const int kPlaneIdFieldNumber = 4;
  ::google::protobuf::uint32 plane_id() const;
  void set_plane_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.HitBcMsg)
 private:
  void set_has_bullet_group_id();
  void clear_has_bullet_group_id();
  void set_has_bullet_id();
  void clear_has_bullet_id();
  void set_has_plane_owner_id();
  void clear_has_plane_owner_id();
  void set_has_plane_id();
  void clear_has_plane_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 bullet_group_id_;
  ::google::protobuf::uint32 bullet_id_;
  ::google::protobuf::uint32 plane_owner_id_;
  ::google::protobuf::uint32 plane_id_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class HitEnergyMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.HitEnergyMsg) */ {
 public:
  HitEnergyMsg();
  virtual ~HitEnergyMsg();

  HitEnergyMsg(const HitEnergyMsg& from);

  inline HitEnergyMsg& operator=(const HitEnergyMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HitEnergyMsg& default_instance();

  static inline const HitEnergyMsg* internal_default_instance() {
    return reinterpret_cast<const HitEnergyMsg*>(
               &_HitEnergyMsg_default_instance_);
  }

  void Swap(HitEnergyMsg* other);

  // implements Message ----------------------------------------------

  inline HitEnergyMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  HitEnergyMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HitEnergyMsg& from);
  void MergeFrom(const HitEnergyMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HitEnergyMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 bullet_group_id = 1;
  bool has_bullet_group_id() const;
  void clear_bullet_group_id();
  static const int kBulletGroupIdFieldNumber = 1;
  ::google::protobuf::uint32 bullet_group_id() const;
  void set_bullet_group_id(::google::protobuf::uint32 value);

  // optional uint32 bullet_id = 2;
  bool has_bullet_id() const;
  void clear_bullet_id();
  static const int kBulletIdFieldNumber = 2;
  ::google::protobuf::uint32 bullet_id() const;
  void set_bullet_id(::google::protobuf::uint32 value);

  // optional uint32 energy_id = 3;
  bool has_energy_id() const;
  void clear_energy_id();
  static const int kEnergyIdFieldNumber = 3;
  ::google::protobuf::uint32 energy_id() const;
  void set_energy_id(::google::protobuf::uint32 value);

  // optional uint32 energy_type = 4;
  bool has_energy_type() const;
  void clear_energy_type();
  static const int kEnergyTypeFieldNumber = 4;
  ::google::protobuf::uint32 energy_type() const;
  void set_energy_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.HitEnergyMsg)
 private:
  void set_has_bullet_group_id();
  void clear_has_bullet_group_id();
  void set_has_bullet_id();
  void clear_has_bullet_id();
  void set_has_energy_id();
  void clear_has_energy_id();
  void set_has_energy_type();
  void clear_has_energy_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 bullet_group_id_;
  ::google::protobuf::uint32 bullet_id_;
  ::google::protobuf::uint32 energy_id_;
  ::google::protobuf::uint32 energy_type_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PlaneBcMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.PlaneBcMsg) */ {
 public:
  PlaneBcMsg();
  virtual ~PlaneBcMsg();

  PlaneBcMsg(const PlaneBcMsg& from);

  inline PlaneBcMsg& operator=(const PlaneBcMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlaneBcMsg& default_instance();

  static inline const PlaneBcMsg* internal_default_instance() {
    return reinterpret_cast<const PlaneBcMsg*>(
               &_PlaneBcMsg_default_instance_);
  }

  void Swap(PlaneBcMsg* other);

  // implements Message ----------------------------------------------

  inline PlaneBcMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  PlaneBcMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlaneBcMsg& from);
  void MergeFrom(const PlaneBcMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlaneBcMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .plane.MsAndId ms_and_id = 1;
  bool has_ms_and_id() const;
  void clear_ms_and_id();
  static const int kMsAndIdFieldNumber = 1;
  const ::plane::MsAndId& ms_and_id() const;
  ::plane::MsAndId* mutable_ms_and_id();
  ::plane::MsAndId* release_ms_and_id();
  void set_allocated_ms_and_id(::plane::MsAndId* ms_and_id);

  // optional .plane.PlaneMsg new = 2;
  bool has_new_() const;
  void clear_new_();
  static const int kNewFieldNumber = 2;
  const ::plane::PlaneMsg& new_() const;
  ::plane::PlaneMsg* mutable_new_();
  ::plane::PlaneMsg* release_new_();
  void set_allocated_new_(::plane::PlaneMsg* new_);

  // @@protoc_insertion_point(class_scope:plane.PlaneBcMsg)
 private:
  void set_has_ms_and_id();
  void clear_has_ms_and_id();
  void set_has_new_();
  void clear_has_new_();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::plane::MsAndId* ms_and_id_;
  ::plane::PlaneMsg* new__;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class BatchRemovePlaneBcMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.BatchRemovePlaneBcMsg) */ {
 public:
  BatchRemovePlaneBcMsg();
  virtual ~BatchRemovePlaneBcMsg();

  BatchRemovePlaneBcMsg(const BatchRemovePlaneBcMsg& from);

  inline BatchRemovePlaneBcMsg& operator=(const BatchRemovePlaneBcMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const BatchRemovePlaneBcMsg& default_instance();

  static inline const BatchRemovePlaneBcMsg* internal_default_instance() {
    return reinterpret_cast<const BatchRemovePlaneBcMsg*>(
               &_BatchRemovePlaneBcMsg_default_instance_);
  }

  void Swap(BatchRemovePlaneBcMsg* other);

  // implements Message ----------------------------------------------

  inline BatchRemovePlaneBcMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  BatchRemovePlaneBcMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const BatchRemovePlaneBcMsg& from);
  void MergeFrom(const BatchRemovePlaneBcMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(BatchRemovePlaneBcMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 plane_ids = 2;
  int plane_ids_size() const;
  void clear_plane_ids();
  static const int kPlaneIdsFieldNumber = 2;
  ::google::protobuf::uint32 plane_ids(int index) const;
  void set_plane_ids(int index, ::google::protobuf::uint32 value);
  void add_plane_ids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      plane_ids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_plane_ids();

  // optional uint32 playerid = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.BatchRemovePlaneBcMsg)
 private:
  void set_has_playerid();
  void clear_has_playerid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > plane_ids_;
  ::google::protobuf::uint32 playerid_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RankDataMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.RankDataMsg) */ {
 public:
  RankDataMsg();
  virtual ~RankDataMsg();

  RankDataMsg(const RankDataMsg& from);

  inline RankDataMsg& operator=(const RankDataMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankDataMsg& default_instance();

  static inline const RankDataMsg* internal_default_instance() {
    return reinterpret_cast<const RankDataMsg*>(
               &_RankDataMsg_default_instance_);
  }

  void Swap(RankDataMsg* other);

  // implements Message ----------------------------------------------

  inline RankDataMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  RankDataMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RankDataMsg& from);
  void MergeFrom(const RankDataMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RankDataMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .plane.RankData data = 3;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 3;
  const ::plane::RankData& data(int index) const;
  ::plane::RankData* mutable_data(int index);
  ::plane::RankData* add_data();
  ::google::protobuf::RepeatedPtrField< ::plane::RankData >*
      mutable_data();
  const ::google::protobuf::RepeatedPtrField< ::plane::RankData >&
      data() const;

  // optional uint32 my_rank = 1;
  bool has_my_rank() const;
  void clear_my_rank();
  static const int kMyRankFieldNumber = 1;
  ::google::protobuf::uint32 my_rank() const;
  void set_my_rank(::google::protobuf::uint32 value);

  // optional uint32 my_score = 2;
  bool has_my_score() const;
  void clear_my_score();
  static const int kMyScoreFieldNumber = 2;
  ::google::protobuf::uint32 my_score() const;
  void set_my_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.RankDataMsg)
 private:
  void set_has_my_rank();
  void clear_has_my_rank();
  void set_has_my_score();
  void clear_has_my_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::plane::RankData > data_;
  ::google::protobuf::uint32 my_rank_;
  ::google::protobuf::uint32 my_score_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RankData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.RankData) */ {
 public:
  RankData();
  virtual ~RankData();

  RankData(const RankData& from);

  inline RankData& operator=(const RankData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RankData& default_instance();

  static inline const RankData* internal_default_instance() {
    return reinterpret_cast<const RankData*>(
               &_RankData_default_instance_);
  }

  void Swap(RankData* other);

  // implements Message ----------------------------------------------

  inline RankData* New() const PROTOBUF_FINAL { return New(NULL); }

  RankData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RankData& from);
  void MergeFrom(const RankData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RankData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string playername = 2;
  bool has_playername() const;
  void clear_playername();
  static const int kPlayernameFieldNumber = 2;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const char* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // optional uint32 playerid = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.RankData)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_playername();
  void clear_has_playername();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::uint32 playerid_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ScoreMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.ScoreMsg) */ {
 public:
  ScoreMsg();
  virtual ~ScoreMsg();

  ScoreMsg(const ScoreMsg& from);

  inline ScoreMsg& operator=(const ScoreMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ScoreMsg& default_instance();

  static inline const ScoreMsg* internal_default_instance() {
    return reinterpret_cast<const ScoreMsg*>(
               &_ScoreMsg_default_instance_);
  }

  void Swap(ScoreMsg* other);

  // implements Message ----------------------------------------------

  inline ScoreMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ScoreMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ScoreMsg& from);
  void MergeFrom(const ScoreMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ScoreMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 my_score = 1;
  bool has_my_score() const;
  void clear_my_score();
  static const int kMyScoreFieldNumber = 1;
  ::google::protobuf::uint32 my_score() const;
  void set_my_score(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.ScoreMsg)
 private:
  void set_has_my_score();
  void clear_has_my_score();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 my_score_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DeathMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.DeathMsg) */ {
 public:
  DeathMsg();
  virtual ~DeathMsg();

  DeathMsg(const DeathMsg& from);

  inline DeathMsg& operator=(const DeathMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DeathMsg& default_instance();

  static inline const DeathMsg* internal_default_instance() {
    return reinterpret_cast<const DeathMsg*>(
               &_DeathMsg_default_instance_);
  }

  void Swap(DeathMsg* other);

  // implements Message ----------------------------------------------

  inline DeathMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  DeathMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DeathMsg& from);
  void MergeFrom(const DeathMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DeathMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string killedbyname = 1;
  bool has_killedbyname() const;
  void clear_killedbyname();
  static const int kKilledbynameFieldNumber = 1;
  const ::std::string& killedbyname() const;
  void set_killedbyname(const ::std::string& value);
  #if LANG_CXX11
  void set_killedbyname(::std::string&& value);
  #endif
  void set_killedbyname(const char* value);
  void set_killedbyname(const char* value, size_t size);
  ::std::string* mutable_killedbyname();
  ::std::string* release_killedbyname();
  void set_allocated_killedbyname(::std::string* killedbyname);

  // optional uint32 relive_seconds = 2;
  bool has_relive_seconds() const;
  void clear_relive_seconds();
  static const int kReliveSecondsFieldNumber = 2;
  ::google::protobuf::uint32 relive_seconds() const;
  void set_relive_seconds(::google::protobuf::uint32 value);

  // optional uint32 is_out_of_bound = 3;
  bool has_is_out_of_bound() const;
  void clear_is_out_of_bound();
  static const int kIsOutOfBoundFieldNumber = 3;
  ::google::protobuf::uint32 is_out_of_bound() const;
  void set_is_out_of_bound(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.DeathMsg)
 private:
  void set_has_killedbyname();
  void clear_has_killedbyname();
  void set_has_relive_seconds();
  void clear_has_relive_seconds();
  void set_has_is_out_of_bound();
  void clear_has_is_out_of_bound();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr killedbyname_;
  ::google::protobuf::uint32 relive_seconds_;
  ::google::protobuf::uint32 is_out_of_bound_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StateMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.StateMsg) */ {
 public:
  StateMsg();
  virtual ~StateMsg();

  StateMsg(const StateMsg& from);

  inline StateMsg& operator=(const StateMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StateMsg& default_instance();

  static inline const StateMsg* internal_default_instance() {
    return reinterpret_cast<const StateMsg*>(
               &_StateMsg_default_instance_);
  }

  void Swap(StateMsg* other);

  // implements Message ----------------------------------------------

  inline StateMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  StateMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StateMsg& from);
  void MergeFrom(const StateMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StateMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef StateMsg_State State;
  static const State State_God =
    StateMsg_State_State_God;
  static const State State_IsStop =
    StateMsg_State_State_IsStop;
  static inline bool State_IsValid(int value) {
    return StateMsg_State_IsValid(value);
  }
  static const State State_MIN =
    StateMsg_State_State_MIN;
  static const State State_MAX =
    StateMsg_State_State_MAX;
  static const int State_ARRAYSIZE =
    StateMsg_State_State_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  State_descriptor() {
    return StateMsg_State_descriptor();
  }
  static inline const ::std::string& State_Name(State value) {
    return StateMsg_State_Name(value);
  }
  static inline bool State_Parse(const ::std::string& name,
      State* value) {
    return StateMsg_State_Parse(name, value);
  }

  typedef StateMsg_StateOp StateOp;
  static const StateOp Op_On =
    StateMsg_StateOp_Op_On;
  static const StateOp Op_Off =
    StateMsg_StateOp_Op_Off;
  static inline bool StateOp_IsValid(int value) {
    return StateMsg_StateOp_IsValid(value);
  }
  static const StateOp StateOp_MIN =
    StateMsg_StateOp_StateOp_MIN;
  static const StateOp StateOp_MAX =
    StateMsg_StateOp_StateOp_MAX;
  static const int StateOp_ARRAYSIZE =
    StateMsg_StateOp_StateOp_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  StateOp_descriptor() {
    return StateMsg_StateOp_descriptor();
  }
  static inline const ::std::string& StateOp_Name(StateOp value) {
    return StateMsg_StateOp_Name(value);
  }
  static inline bool StateOp_Parse(const ::std::string& name,
      StateOp* value) {
    return StateMsg_StateOp_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // optional uint32 playerid = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // optional .plane.StateMsg.State state_num = 2;
  bool has_state_num() const;
  void clear_state_num();
  static const int kStateNumFieldNumber = 2;
  ::plane::StateMsg_State state_num() const;
  void set_state_num(::plane::StateMsg_State value);

  // optional .plane.StateMsg.StateOp op = 3;
  bool has_op() const;
  void clear_op();
  static const int kOpFieldNumber = 3;
  ::plane::StateMsg_StateOp op() const;
  void set_op(::plane::StateMsg_StateOp value);

  // @@protoc_insertion_point(class_scope:plane.StateMsg)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_state_num();
  void clear_has_state_num();
  void set_has_op();
  void clear_has_op();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 playerid_;
  int state_num_;
  int op_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UpdateSpeedBcMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.UpdateSpeedBcMsg) */ {
 public:
  UpdateSpeedBcMsg();
  virtual ~UpdateSpeedBcMsg();

  UpdateSpeedBcMsg(const UpdateSpeedBcMsg& from);

  inline UpdateSpeedBcMsg& operator=(const UpdateSpeedBcMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UpdateSpeedBcMsg& default_instance();

  static inline const UpdateSpeedBcMsg* internal_default_instance() {
    return reinterpret_cast<const UpdateSpeedBcMsg*>(
               &_UpdateSpeedBcMsg_default_instance_);
  }

  void Swap(UpdateSpeedBcMsg* other);

  // implements Message ----------------------------------------------

  inline UpdateSpeedBcMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  UpdateSpeedBcMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UpdateSpeedBcMsg& from);
  void MergeFrom(const UpdateSpeedBcMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UpdateSpeedBcMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 playerid = 1;
  bool has_playerid() const;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint32 playerid() const;
  void set_playerid(::google::protobuf::uint32 value);

  // optional uint32 speed = 2;
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 2;
  ::google::protobuf::uint32 speed() const;
  void set_speed(::google::protobuf::uint32 value);

  // optional uint32 is_start_split = 3;
  bool has_is_start_split() const;
  void clear_is_start_split();
  static const int kIsStartSplitFieldNumber = 3;
  ::google::protobuf::uint32 is_start_split() const;
  void set_is_start_split(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.UpdateSpeedBcMsg)
 private:
  void set_has_playerid();
  void clear_has_playerid();
  void set_has_speed();
  void clear_has_speed();
  void set_has_is_start_split();
  void clear_has_is_start_split();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 playerid_;
  ::google::protobuf::uint32 speed_;
  ::google::protobuf::uint32 is_start_split_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ShotCDMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.ShotCDMsg) */ {
 public:
  ShotCDMsg();
  virtual ~ShotCDMsg();

  ShotCDMsg(const ShotCDMsg& from);

  inline ShotCDMsg& operator=(const ShotCDMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ShotCDMsg& default_instance();

  static inline const ShotCDMsg* internal_default_instance() {
    return reinterpret_cast<const ShotCDMsg*>(
               &_ShotCDMsg_default_instance_);
  }

  void Swap(ShotCDMsg* other);

  // implements Message ----------------------------------------------

  inline ShotCDMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ShotCDMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ShotCDMsg& from);
  void MergeFrom(const ShotCDMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ShotCDMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 shotcd = 1;
  bool has_shotcd() const;
  void clear_shotcd();
  static const int kShotcdFieldNumber = 1;
  ::google::protobuf::uint32 shotcd() const;
  void set_shotcd(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.ShotCDMsg)
 private:
  void set_has_shotcd();
  void clear_has_shotcd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 shotcd_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LevelMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.LevelMsg) */ {
 public:
  LevelMsg();
  virtual ~LevelMsg();

  LevelMsg(const LevelMsg& from);

  inline LevelMsg& operator=(const LevelMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LevelMsg& default_instance();

  static inline const LevelMsg* internal_default_instance() {
    return reinterpret_cast<const LevelMsg*>(
               &_LevelMsg_default_instance_);
  }

  void Swap(LevelMsg* other);

  // implements Message ----------------------------------------------

  inline LevelMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  LevelMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LevelMsg& from);
  void MergeFrom(const LevelMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LevelMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 level = 1;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 1;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.LevelMsg)
 private:
  void set_has_level();
  void clear_has_level();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  friend struct  protobuf_plane_2fplane_5fpush_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// MoveToBcMsg

// optional .plane.MsAndId ms_and_id = 1;
inline bool MoveToBcMsg::has_ms_and_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveToBcMsg::set_has_ms_and_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveToBcMsg::clear_has_ms_and_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveToBcMsg::clear_ms_and_id() {
  if (ms_and_id_ != NULL) ms_and_id_->::plane::MsAndId::Clear();
  clear_has_ms_and_id();
}
inline const ::plane::MsAndId& MoveToBcMsg::ms_and_id() const {
  // @@protoc_insertion_point(field_get:plane.MoveToBcMsg.ms_and_id)
  return ms_and_id_ != NULL ? *ms_and_id_
                         : *::plane::MsAndId::internal_default_instance();
}
inline ::plane::MsAndId* MoveToBcMsg::mutable_ms_and_id() {
  set_has_ms_and_id();
  if (ms_and_id_ == NULL) {
    ms_and_id_ = new ::plane::MsAndId;
  }
  // @@protoc_insertion_point(field_mutable:plane.MoveToBcMsg.ms_and_id)
  return ms_and_id_;
}
inline ::plane::MsAndId* MoveToBcMsg::release_ms_and_id() {
  // @@protoc_insertion_point(field_release:plane.MoveToBcMsg.ms_and_id)
  clear_has_ms_and_id();
  ::plane::MsAndId* temp = ms_and_id_;
  ms_and_id_ = NULL;
  return temp;
}
inline void MoveToBcMsg::set_allocated_ms_and_id(::plane::MsAndId* ms_and_id) {
  delete ms_and_id_;
  ms_and_id_ = ms_and_id;
  if (ms_and_id) {
    set_has_ms_and_id();
  } else {
    clear_has_ms_and_id();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.MoveToBcMsg.ms_and_id)
}

// optional .plane.MoveToMsg move_to = 2;
inline bool MoveToBcMsg::has_move_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MoveToBcMsg::set_has_move_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MoveToBcMsg::clear_has_move_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MoveToBcMsg::clear_move_to() {
  if (move_to_ != NULL) move_to_->::plane::MoveToMsg::Clear();
  clear_has_move_to();
}
inline const ::plane::MoveToMsg& MoveToBcMsg::move_to() const {
  // @@protoc_insertion_point(field_get:plane.MoveToBcMsg.move_to)
  return move_to_ != NULL ? *move_to_
                         : *::plane::MoveToMsg::internal_default_instance();
}
inline ::plane::MoveToMsg* MoveToBcMsg::mutable_move_to() {
  set_has_move_to();
  if (move_to_ == NULL) {
    move_to_ = new ::plane::MoveToMsg;
  }
  // @@protoc_insertion_point(field_mutable:plane.MoveToBcMsg.move_to)
  return move_to_;
}
inline ::plane::MoveToMsg* MoveToBcMsg::release_move_to() {
  // @@protoc_insertion_point(field_release:plane.MoveToBcMsg.move_to)
  clear_has_move_to();
  ::plane::MoveToMsg* temp = move_to_;
  move_to_ = NULL;
  return temp;
}
inline void MoveToBcMsg::set_allocated_move_to(::plane::MoveToMsg* move_to) {
  delete move_to_;
  move_to_ = move_to;
  if (move_to) {
    set_has_move_to();
  } else {
    clear_has_move_to();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.MoveToBcMsg.move_to)
}

// -------------------------------------------------------------------

// MoveToBcMsgRoom

// optional .plane.MsAndId curframe_and_roomid = 1;
inline bool MoveToBcMsgRoom::has_curframe_and_roomid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MoveToBcMsgRoom::set_has_curframe_and_roomid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MoveToBcMsgRoom::clear_has_curframe_and_roomid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MoveToBcMsgRoom::clear_curframe_and_roomid() {
  if (curframe_and_roomid_ != NULL) curframe_and_roomid_->::plane::MsAndId::Clear();
  clear_has_curframe_and_roomid();
}
inline const ::plane::MsAndId& MoveToBcMsgRoom::curframe_and_roomid() const {
  // @@protoc_insertion_point(field_get:plane.MoveToBcMsgRoom.curframe_and_roomid)
  return curframe_and_roomid_ != NULL ? *curframe_and_roomid_
                         : *::plane::MsAndId::internal_default_instance();
}
inline ::plane::MsAndId* MoveToBcMsgRoom::mutable_curframe_and_roomid() {
  set_has_curframe_and_roomid();
  if (curframe_and_roomid_ == NULL) {
    curframe_and_roomid_ = new ::plane::MsAndId;
  }
  // @@protoc_insertion_point(field_mutable:plane.MoveToBcMsgRoom.curframe_and_roomid)
  return curframe_and_roomid_;
}
inline ::plane::MsAndId* MoveToBcMsgRoom::release_curframe_and_roomid() {
  // @@protoc_insertion_point(field_release:plane.MoveToBcMsgRoom.curframe_and_roomid)
  clear_has_curframe_and_roomid();
  ::plane::MsAndId* temp = curframe_and_roomid_;
  curframe_and_roomid_ = NULL;
  return temp;
}
inline void MoveToBcMsgRoom::set_allocated_curframe_and_roomid(::plane::MsAndId* curframe_and_roomid) {
  delete curframe_and_roomid_;
  curframe_and_roomid_ = curframe_and_roomid;
  if (curframe_and_roomid) {
    set_has_curframe_and_roomid();
  } else {
    clear_has_curframe_and_roomid();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.MoveToBcMsgRoom.curframe_and_roomid)
}

// repeated .plane.MoveToBcMsg moves = 2;
inline int MoveToBcMsgRoom::moves_size() const {
  return moves_.size();
}
inline void MoveToBcMsgRoom::clear_moves() {
  moves_.Clear();
}
inline const ::plane::MoveToBcMsg& MoveToBcMsgRoom::moves(int index) const {
  // @@protoc_insertion_point(field_get:plane.MoveToBcMsgRoom.moves)
  return moves_.Get(index);
}
inline ::plane::MoveToBcMsg* MoveToBcMsgRoom::mutable_moves(int index) {
  // @@protoc_insertion_point(field_mutable:plane.MoveToBcMsgRoom.moves)
  return moves_.Mutable(index);
}
inline ::plane::MoveToBcMsg* MoveToBcMsgRoom::add_moves() {
  // @@protoc_insertion_point(field_add:plane.MoveToBcMsgRoom.moves)
  return moves_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::MoveToBcMsg >*
MoveToBcMsgRoom::mutable_moves() {
  // @@protoc_insertion_point(field_mutable_list:plane.MoveToBcMsgRoom.moves)
  return &moves_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::MoveToBcMsg >&
MoveToBcMsgRoom::moves() const {
  // @@protoc_insertion_point(field_list:plane.MoveToBcMsgRoom.moves)
  return moves_;
}

// -------------------------------------------------------------------

// TurnToBcMsg

// optional .plane.MsAndId ms_and_id = 1;
inline bool TurnToBcMsg::has_ms_and_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TurnToBcMsg::set_has_ms_and_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TurnToBcMsg::clear_has_ms_and_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TurnToBcMsg::clear_ms_and_id() {
  if (ms_and_id_ != NULL) ms_and_id_->::plane::MsAndId::Clear();
  clear_has_ms_and_id();
}
inline const ::plane::MsAndId& TurnToBcMsg::ms_and_id() const {
  // @@protoc_insertion_point(field_get:plane.TurnToBcMsg.ms_and_id)
  return ms_and_id_ != NULL ? *ms_and_id_
                         : *::plane::MsAndId::internal_default_instance();
}
inline ::plane::MsAndId* TurnToBcMsg::mutable_ms_and_id() {
  set_has_ms_and_id();
  if (ms_and_id_ == NULL) {
    ms_and_id_ = new ::plane::MsAndId;
  }
  // @@protoc_insertion_point(field_mutable:plane.TurnToBcMsg.ms_and_id)
  return ms_and_id_;
}
inline ::plane::MsAndId* TurnToBcMsg::release_ms_and_id() {
  // @@protoc_insertion_point(field_release:plane.TurnToBcMsg.ms_and_id)
  clear_has_ms_and_id();
  ::plane::MsAndId* temp = ms_and_id_;
  ms_and_id_ = NULL;
  return temp;
}
inline void TurnToBcMsg::set_allocated_ms_and_id(::plane::MsAndId* ms_and_id) {
  delete ms_and_id_;
  ms_and_id_ = ms_and_id;
  if (ms_and_id) {
    set_has_ms_and_id();
  } else {
    clear_has_ms_and_id();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.TurnToBcMsg.ms_and_id)
}

// optional .plane.TurnToMsg turn_to = 2;
inline bool TurnToBcMsg::has_turn_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TurnToBcMsg::set_has_turn_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TurnToBcMsg::clear_has_turn_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TurnToBcMsg::clear_turn_to() {
  if (turn_to_ != NULL) turn_to_->::plane::TurnToMsg::Clear();
  clear_has_turn_to();
}
inline const ::plane::TurnToMsg& TurnToBcMsg::turn_to() const {
  // @@protoc_insertion_point(field_get:plane.TurnToBcMsg.turn_to)
  return turn_to_ != NULL ? *turn_to_
                         : *::plane::TurnToMsg::internal_default_instance();
}
inline ::plane::TurnToMsg* TurnToBcMsg::mutable_turn_to() {
  set_has_turn_to();
  if (turn_to_ == NULL) {
    turn_to_ = new ::plane::TurnToMsg;
  }
  // @@protoc_insertion_point(field_mutable:plane.TurnToBcMsg.turn_to)
  return turn_to_;
}
inline ::plane::TurnToMsg* TurnToBcMsg::release_turn_to() {
  // @@protoc_insertion_point(field_release:plane.TurnToBcMsg.turn_to)
  clear_has_turn_to();
  ::plane::TurnToMsg* temp = turn_to_;
  turn_to_ = NULL;
  return temp;
}
inline void TurnToBcMsg::set_allocated_turn_to(::plane::TurnToMsg* turn_to) {
  delete turn_to_;
  turn_to_ = turn_to;
  if (turn_to) {
    set_has_turn_to();
  } else {
    clear_has_turn_to();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.TurnToBcMsg.turn_to)
}

// -------------------------------------------------------------------

// StopOrMoveBeginBcMsg

// optional .plane.MsAndId ms_and_id = 1;
inline bool StopOrMoveBeginBcMsg::has_ms_and_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StopOrMoveBeginBcMsg::set_has_ms_and_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StopOrMoveBeginBcMsg::clear_has_ms_and_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StopOrMoveBeginBcMsg::clear_ms_and_id() {
  if (ms_and_id_ != NULL) ms_and_id_->::plane::MsAndId::Clear();
  clear_has_ms_and_id();
}
inline const ::plane::MsAndId& StopOrMoveBeginBcMsg::ms_and_id() const {
  // @@protoc_insertion_point(field_get:plane.StopOrMoveBeginBcMsg.ms_and_id)
  return ms_and_id_ != NULL ? *ms_and_id_
                         : *::plane::MsAndId::internal_default_instance();
}
inline ::plane::MsAndId* StopOrMoveBeginBcMsg::mutable_ms_and_id() {
  set_has_ms_and_id();
  if (ms_and_id_ == NULL) {
    ms_and_id_ = new ::plane::MsAndId;
  }
  // @@protoc_insertion_point(field_mutable:plane.StopOrMoveBeginBcMsg.ms_and_id)
  return ms_and_id_;
}
inline ::plane::MsAndId* StopOrMoveBeginBcMsg::release_ms_and_id() {
  // @@protoc_insertion_point(field_release:plane.StopOrMoveBeginBcMsg.ms_and_id)
  clear_has_ms_and_id();
  ::plane::MsAndId* temp = ms_and_id_;
  ms_and_id_ = NULL;
  return temp;
}
inline void StopOrMoveBeginBcMsg::set_allocated_ms_and_id(::plane::MsAndId* ms_and_id) {
  delete ms_and_id_;
  ms_and_id_ = ms_and_id;
  if (ms_and_id) {
    set_has_ms_and_id();
  } else {
    clear_has_ms_and_id();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.StopOrMoveBeginBcMsg.ms_and_id)
}

// optional .plane.MoveInfo info = 2;
inline bool StopOrMoveBeginBcMsg::has_info() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StopOrMoveBeginBcMsg::set_has_info() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StopOrMoveBeginBcMsg::clear_has_info() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StopOrMoveBeginBcMsg::clear_info() {
  if (info_ != NULL) info_->::plane::MoveInfo::Clear();
  clear_has_info();
}
inline const ::plane::MoveInfo& StopOrMoveBeginBcMsg::info() const {
  // @@protoc_insertion_point(field_get:plane.StopOrMoveBeginBcMsg.info)
  return info_ != NULL ? *info_
                         : *::plane::MoveInfo::internal_default_instance();
}
inline ::plane::MoveInfo* StopOrMoveBeginBcMsg::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::plane::MoveInfo;
  }
  // @@protoc_insertion_point(field_mutable:plane.StopOrMoveBeginBcMsg.info)
  return info_;
}
inline ::plane::MoveInfo* StopOrMoveBeginBcMsg::release_info() {
  // @@protoc_insertion_point(field_release:plane.StopOrMoveBeginBcMsg.info)
  clear_has_info();
  ::plane::MoveInfo* temp = info_;
  info_ = NULL;
  return temp;
}
inline void StopOrMoveBeginBcMsg::set_allocated_info(::plane::MoveInfo* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.StopOrMoveBeginBcMsg.info)
}

// -------------------------------------------------------------------

// FireBcMsg

// optional uint32 ndir_angle = 1;
inline bool FireBcMsg::has_ndir_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FireBcMsg::set_has_ndir_angle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FireBcMsg::clear_has_ndir_angle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FireBcMsg::clear_ndir_angle() {
  ndir_angle_ = 0u;
  clear_has_ndir_angle();
}
inline ::google::protobuf::uint32 FireBcMsg::ndir_angle() const {
  // @@protoc_insertion_point(field_get:plane.FireBcMsg.ndir_angle)
  return ndir_angle_;
}
inline void FireBcMsg::set_ndir_angle(::google::protobuf::uint32 value) {
  set_has_ndir_angle();
  ndir_angle_ = value;
  // @@protoc_insertion_point(field_set:plane.FireBcMsg.ndir_angle)
}

// optional uint32 x = 2;
inline bool FireBcMsg::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FireBcMsg::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FireBcMsg::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FireBcMsg::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 FireBcMsg::x() const {
  // @@protoc_insertion_point(field_get:plane.FireBcMsg.x)
  return x_;
}
inline void FireBcMsg::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:plane.FireBcMsg.x)
}

// optional uint32 y = 3;
inline bool FireBcMsg::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FireBcMsg::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FireBcMsg::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FireBcMsg::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 FireBcMsg::y() const {
  // @@protoc_insertion_point(field_get:plane.FireBcMsg.y)
  return y_;
}
inline void FireBcMsg::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:plane.FireBcMsg.y)
}

// optional uint32 life_seconds = 4;
inline bool FireBcMsg::has_life_seconds() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FireBcMsg::set_has_life_seconds() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FireBcMsg::clear_has_life_seconds() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FireBcMsg::clear_life_seconds() {
  life_seconds_ = 0u;
  clear_has_life_seconds();
}
inline ::google::protobuf::uint32 FireBcMsg::life_seconds() const {
  // @@protoc_insertion_point(field_get:plane.FireBcMsg.life_seconds)
  return life_seconds_;
}
inline void FireBcMsg::set_life_seconds(::google::protobuf::uint32 value) {
  set_has_life_seconds();
  life_seconds_ = value;
  // @@protoc_insertion_point(field_set:plane.FireBcMsg.life_seconds)
}

// optional uint32 speed = 5;
inline bool FireBcMsg::has_speed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FireBcMsg::set_has_speed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FireBcMsg::clear_has_speed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FireBcMsg::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 FireBcMsg::speed() const {
  // @@protoc_insertion_point(field_get:plane.FireBcMsg.speed)
  return speed_;
}
inline void FireBcMsg::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:plane.FireBcMsg.speed)
}

// optional uint32 shooter_id = 6;
inline bool FireBcMsg::has_shooter_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FireBcMsg::set_has_shooter_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FireBcMsg::clear_has_shooter_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FireBcMsg::clear_shooter_id() {
  shooter_id_ = 0u;
  clear_has_shooter_id();
}
inline ::google::protobuf::uint32 FireBcMsg::shooter_id() const {
  // @@protoc_insertion_point(field_get:plane.FireBcMsg.shooter_id)
  return shooter_id_;
}
inline void FireBcMsg::set_shooter_id(::google::protobuf::uint32 value) {
  set_has_shooter_id();
  shooter_id_ = value;
  // @@protoc_insertion_point(field_set:plane.FireBcMsg.shooter_id)
}

// optional uint32 bullet_group_id = 7;
inline bool FireBcMsg::has_bullet_group_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FireBcMsg::set_has_bullet_group_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FireBcMsg::clear_has_bullet_group_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FireBcMsg::clear_bullet_group_id() {
  bullet_group_id_ = 0u;
  clear_has_bullet_group_id();
}
inline ::google::protobuf::uint32 FireBcMsg::bullet_group_id() const {
  // @@protoc_insertion_point(field_get:plane.FireBcMsg.bullet_group_id)
  return bullet_group_id_;
}
inline void FireBcMsg::set_bullet_group_id(::google::protobuf::uint32 value) {
  set_has_bullet_group_id();
  bullet_group_id_ = value;
  // @@protoc_insertion_point(field_set:plane.FireBcMsg.bullet_group_id)
}

// repeated .plane.Bullet all_bullets = 8;
inline int FireBcMsg::all_bullets_size() const {
  return all_bullets_.size();
}
inline void FireBcMsg::clear_all_bullets() {
  all_bullets_.Clear();
}
inline const ::plane::Bullet& FireBcMsg::all_bullets(int index) const {
  // @@protoc_insertion_point(field_get:plane.FireBcMsg.all_bullets)
  return all_bullets_.Get(index);
}
inline ::plane::Bullet* FireBcMsg::mutable_all_bullets(int index) {
  // @@protoc_insertion_point(field_mutable:plane.FireBcMsg.all_bullets)
  return all_bullets_.Mutable(index);
}
inline ::plane::Bullet* FireBcMsg::add_all_bullets() {
  // @@protoc_insertion_point(field_add:plane.FireBcMsg.all_bullets)
  return all_bullets_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::Bullet >*
FireBcMsg::mutable_all_bullets() {
  // @@protoc_insertion_point(field_mutable_list:plane.FireBcMsg.all_bullets)
  return &all_bullets_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::Bullet >&
FireBcMsg::all_bullets() const {
  // @@protoc_insertion_point(field_list:plane.FireBcMsg.all_bullets)
  return all_bullets_;
}

// -------------------------------------------------------------------

// Bullet

// optional uint32 id = 1;
inline bool Bullet::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Bullet::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Bullet::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Bullet::clear_id() {
  id_ = 0u;
  clear_has_id();
}
inline ::google::protobuf::uint32 Bullet::id() const {
  // @@protoc_insertion_point(field_get:plane.Bullet.id)
  return id_;
}
inline void Bullet::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:plane.Bullet.id)
}

// optional uint32 x = 2;
inline bool Bullet::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Bullet::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Bullet::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Bullet::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 Bullet::x() const {
  // @@protoc_insertion_point(field_get:plane.Bullet.x)
  return x_;
}
inline void Bullet::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:plane.Bullet.x)
}

// optional uint32 y = 3;
inline bool Bullet::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Bullet::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Bullet::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Bullet::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 Bullet::y() const {
  // @@protoc_insertion_point(field_get:plane.Bullet.y)
  return y_;
}
inline void Bullet::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:plane.Bullet.y)
}

// -------------------------------------------------------------------

// FireSimpleBcMsg

// optional uint32 dir_angle = 1;
inline bool FireSimpleBcMsg::has_dir_angle() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void FireSimpleBcMsg::set_has_dir_angle() {
  _has_bits_[0] |= 0x00000001u;
}
inline void FireSimpleBcMsg::clear_has_dir_angle() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void FireSimpleBcMsg::clear_dir_angle() {
  dir_angle_ = 0u;
  clear_has_dir_angle();
}
inline ::google::protobuf::uint32 FireSimpleBcMsg::dir_angle() const {
  // @@protoc_insertion_point(field_get:plane.FireSimpleBcMsg.dir_angle)
  return dir_angle_;
}
inline void FireSimpleBcMsg::set_dir_angle(::google::protobuf::uint32 value) {
  set_has_dir_angle();
  dir_angle_ = value;
  // @@protoc_insertion_point(field_set:plane.FireSimpleBcMsg.dir_angle)
}

// optional uint32 x = 2;
inline bool FireSimpleBcMsg::has_x() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void FireSimpleBcMsg::set_has_x() {
  _has_bits_[0] |= 0x00000002u;
}
inline void FireSimpleBcMsg::clear_has_x() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void FireSimpleBcMsg::clear_x() {
  x_ = 0u;
  clear_has_x();
}
inline ::google::protobuf::uint32 FireSimpleBcMsg::x() const {
  // @@protoc_insertion_point(field_get:plane.FireSimpleBcMsg.x)
  return x_;
}
inline void FireSimpleBcMsg::set_x(::google::protobuf::uint32 value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:plane.FireSimpleBcMsg.x)
}

// optional uint32 y = 3;
inline bool FireSimpleBcMsg::has_y() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void FireSimpleBcMsg::set_has_y() {
  _has_bits_[0] |= 0x00000004u;
}
inline void FireSimpleBcMsg::clear_has_y() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void FireSimpleBcMsg::clear_y() {
  y_ = 0u;
  clear_has_y();
}
inline ::google::protobuf::uint32 FireSimpleBcMsg::y() const {
  // @@protoc_insertion_point(field_get:plane.FireSimpleBcMsg.y)
  return y_;
}
inline void FireSimpleBcMsg::set_y(::google::protobuf::uint32 value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:plane.FireSimpleBcMsg.y)
}

// optional uint32 life_seconds = 4;
inline bool FireSimpleBcMsg::has_life_seconds() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void FireSimpleBcMsg::set_has_life_seconds() {
  _has_bits_[0] |= 0x00000008u;
}
inline void FireSimpleBcMsg::clear_has_life_seconds() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void FireSimpleBcMsg::clear_life_seconds() {
  life_seconds_ = 0u;
  clear_has_life_seconds();
}
inline ::google::protobuf::uint32 FireSimpleBcMsg::life_seconds() const {
  // @@protoc_insertion_point(field_get:plane.FireSimpleBcMsg.life_seconds)
  return life_seconds_;
}
inline void FireSimpleBcMsg::set_life_seconds(::google::protobuf::uint32 value) {
  set_has_life_seconds();
  life_seconds_ = value;
  // @@protoc_insertion_point(field_set:plane.FireSimpleBcMsg.life_seconds)
}

// optional uint32 speed = 5;
inline bool FireSimpleBcMsg::has_speed() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void FireSimpleBcMsg::set_has_speed() {
  _has_bits_[0] |= 0x00000010u;
}
inline void FireSimpleBcMsg::clear_has_speed() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void FireSimpleBcMsg::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 FireSimpleBcMsg::speed() const {
  // @@protoc_insertion_point(field_get:plane.FireSimpleBcMsg.speed)
  return speed_;
}
inline void FireSimpleBcMsg::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:plane.FireSimpleBcMsg.speed)
}

// optional uint32 shooter_id = 6;
inline bool FireSimpleBcMsg::has_shooter_id() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void FireSimpleBcMsg::set_has_shooter_id() {
  _has_bits_[0] |= 0x00000020u;
}
inline void FireSimpleBcMsg::clear_has_shooter_id() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void FireSimpleBcMsg::clear_shooter_id() {
  shooter_id_ = 0u;
  clear_has_shooter_id();
}
inline ::google::protobuf::uint32 FireSimpleBcMsg::shooter_id() const {
  // @@protoc_insertion_point(field_get:plane.FireSimpleBcMsg.shooter_id)
  return shooter_id_;
}
inline void FireSimpleBcMsg::set_shooter_id(::google::protobuf::uint32 value) {
  set_has_shooter_id();
  shooter_id_ = value;
  // @@protoc_insertion_point(field_set:plane.FireSimpleBcMsg.shooter_id)
}

// optional uint32 bullet_group_id = 7;
inline bool FireSimpleBcMsg::has_bullet_group_id() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void FireSimpleBcMsg::set_has_bullet_group_id() {
  _has_bits_[0] |= 0x00000040u;
}
inline void FireSimpleBcMsg::clear_has_bullet_group_id() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void FireSimpleBcMsg::clear_bullet_group_id() {
  bullet_group_id_ = 0u;
  clear_has_bullet_group_id();
}
inline ::google::protobuf::uint32 FireSimpleBcMsg::bullet_group_id() const {
  // @@protoc_insertion_point(field_get:plane.FireSimpleBcMsg.bullet_group_id)
  return bullet_group_id_;
}
inline void FireSimpleBcMsg::set_bullet_group_id(::google::protobuf::uint32 value) {
  set_has_bullet_group_id();
  bullet_group_id_ = value;
  // @@protoc_insertion_point(field_set:plane.FireSimpleBcMsg.bullet_group_id)
}

// optional uint32 fire_ms = 8;
inline bool FireSimpleBcMsg::has_fire_ms() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void FireSimpleBcMsg::set_has_fire_ms() {
  _has_bits_[0] |= 0x00000080u;
}
inline void FireSimpleBcMsg::clear_has_fire_ms() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void FireSimpleBcMsg::clear_fire_ms() {
  fire_ms_ = 0u;
  clear_has_fire_ms();
}
inline ::google::protobuf::uint32 FireSimpleBcMsg::fire_ms() const {
  // @@protoc_insertion_point(field_get:plane.FireSimpleBcMsg.fire_ms)
  return fire_ms_;
}
inline void FireSimpleBcMsg::set_fire_ms(::google::protobuf::uint32 value) {
  set_has_fire_ms();
  fire_ms_ = value;
  // @@protoc_insertion_point(field_set:plane.FireSimpleBcMsg.fire_ms)
}

// -------------------------------------------------------------------

// HitBcMsg

// optional uint32 bullet_group_id = 1;
inline bool HitBcMsg::has_bullet_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HitBcMsg::set_has_bullet_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HitBcMsg::clear_has_bullet_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HitBcMsg::clear_bullet_group_id() {
  bullet_group_id_ = 0u;
  clear_has_bullet_group_id();
}
inline ::google::protobuf::uint32 HitBcMsg::bullet_group_id() const {
  // @@protoc_insertion_point(field_get:plane.HitBcMsg.bullet_group_id)
  return bullet_group_id_;
}
inline void HitBcMsg::set_bullet_group_id(::google::protobuf::uint32 value) {
  set_has_bullet_group_id();
  bullet_group_id_ = value;
  // @@protoc_insertion_point(field_set:plane.HitBcMsg.bullet_group_id)
}

// optional uint32 bullet_id = 2;
inline bool HitBcMsg::has_bullet_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HitBcMsg::set_has_bullet_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HitBcMsg::clear_has_bullet_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HitBcMsg::clear_bullet_id() {
  bullet_id_ = 0u;
  clear_has_bullet_id();
}
inline ::google::protobuf::uint32 HitBcMsg::bullet_id() const {
  // @@protoc_insertion_point(field_get:plane.HitBcMsg.bullet_id)
  return bullet_id_;
}
inline void HitBcMsg::set_bullet_id(::google::protobuf::uint32 value) {
  set_has_bullet_id();
  bullet_id_ = value;
  // @@protoc_insertion_point(field_set:plane.HitBcMsg.bullet_id)
}

// optional uint32 plane_owner_id = 3;
inline bool HitBcMsg::has_plane_owner_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HitBcMsg::set_has_plane_owner_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HitBcMsg::clear_has_plane_owner_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HitBcMsg::clear_plane_owner_id() {
  plane_owner_id_ = 0u;
  clear_has_plane_owner_id();
}
inline ::google::protobuf::uint32 HitBcMsg::plane_owner_id() const {
  // @@protoc_insertion_point(field_get:plane.HitBcMsg.plane_owner_id)
  return plane_owner_id_;
}
inline void HitBcMsg::set_plane_owner_id(::google::protobuf::uint32 value) {
  set_has_plane_owner_id();
  plane_owner_id_ = value;
  // @@protoc_insertion_point(field_set:plane.HitBcMsg.plane_owner_id)
}

// optional uint32 plane_id = 4;
inline bool HitBcMsg::has_plane_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HitBcMsg::set_has_plane_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HitBcMsg::clear_has_plane_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HitBcMsg::clear_plane_id() {
  plane_id_ = 0u;
  clear_has_plane_id();
}
inline ::google::protobuf::uint32 HitBcMsg::plane_id() const {
  // @@protoc_insertion_point(field_get:plane.HitBcMsg.plane_id)
  return plane_id_;
}
inline void HitBcMsg::set_plane_id(::google::protobuf::uint32 value) {
  set_has_plane_id();
  plane_id_ = value;
  // @@protoc_insertion_point(field_set:plane.HitBcMsg.plane_id)
}

// -------------------------------------------------------------------

// HitEnergyMsg

// optional uint32 bullet_group_id = 1;
inline bool HitEnergyMsg::has_bullet_group_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void HitEnergyMsg::set_has_bullet_group_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void HitEnergyMsg::clear_has_bullet_group_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void HitEnergyMsg::clear_bullet_group_id() {
  bullet_group_id_ = 0u;
  clear_has_bullet_group_id();
}
inline ::google::protobuf::uint32 HitEnergyMsg::bullet_group_id() const {
  // @@protoc_insertion_point(field_get:plane.HitEnergyMsg.bullet_group_id)
  return bullet_group_id_;
}
inline void HitEnergyMsg::set_bullet_group_id(::google::protobuf::uint32 value) {
  set_has_bullet_group_id();
  bullet_group_id_ = value;
  // @@protoc_insertion_point(field_set:plane.HitEnergyMsg.bullet_group_id)
}

// optional uint32 bullet_id = 2;
inline bool HitEnergyMsg::has_bullet_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void HitEnergyMsg::set_has_bullet_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void HitEnergyMsg::clear_has_bullet_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void HitEnergyMsg::clear_bullet_id() {
  bullet_id_ = 0u;
  clear_has_bullet_id();
}
inline ::google::protobuf::uint32 HitEnergyMsg::bullet_id() const {
  // @@protoc_insertion_point(field_get:plane.HitEnergyMsg.bullet_id)
  return bullet_id_;
}
inline void HitEnergyMsg::set_bullet_id(::google::protobuf::uint32 value) {
  set_has_bullet_id();
  bullet_id_ = value;
  // @@protoc_insertion_point(field_set:plane.HitEnergyMsg.bullet_id)
}

// optional uint32 energy_id = 3;
inline bool HitEnergyMsg::has_energy_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void HitEnergyMsg::set_has_energy_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void HitEnergyMsg::clear_has_energy_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void HitEnergyMsg::clear_energy_id() {
  energy_id_ = 0u;
  clear_has_energy_id();
}
inline ::google::protobuf::uint32 HitEnergyMsg::energy_id() const {
  // @@protoc_insertion_point(field_get:plane.HitEnergyMsg.energy_id)
  return energy_id_;
}
inline void HitEnergyMsg::set_energy_id(::google::protobuf::uint32 value) {
  set_has_energy_id();
  energy_id_ = value;
  // @@protoc_insertion_point(field_set:plane.HitEnergyMsg.energy_id)
}

// optional uint32 energy_type = 4;
inline bool HitEnergyMsg::has_energy_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void HitEnergyMsg::set_has_energy_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void HitEnergyMsg::clear_has_energy_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void HitEnergyMsg::clear_energy_type() {
  energy_type_ = 0u;
  clear_has_energy_type();
}
inline ::google::protobuf::uint32 HitEnergyMsg::energy_type() const {
  // @@protoc_insertion_point(field_get:plane.HitEnergyMsg.energy_type)
  return energy_type_;
}
inline void HitEnergyMsg::set_energy_type(::google::protobuf::uint32 value) {
  set_has_energy_type();
  energy_type_ = value;
  // @@protoc_insertion_point(field_set:plane.HitEnergyMsg.energy_type)
}

// -------------------------------------------------------------------

// PlaneBcMsg

// optional .plane.MsAndId ms_and_id = 1;
inline bool PlaneBcMsg::has_ms_and_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlaneBcMsg::set_has_ms_and_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlaneBcMsg::clear_has_ms_and_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlaneBcMsg::clear_ms_and_id() {
  if (ms_and_id_ != NULL) ms_and_id_->::plane::MsAndId::Clear();
  clear_has_ms_and_id();
}
inline const ::plane::MsAndId& PlaneBcMsg::ms_and_id() const {
  // @@protoc_insertion_point(field_get:plane.PlaneBcMsg.ms_and_id)
  return ms_and_id_ != NULL ? *ms_and_id_
                         : *::plane::MsAndId::internal_default_instance();
}
inline ::plane::MsAndId* PlaneBcMsg::mutable_ms_and_id() {
  set_has_ms_and_id();
  if (ms_and_id_ == NULL) {
    ms_and_id_ = new ::plane::MsAndId;
  }
  // @@protoc_insertion_point(field_mutable:plane.PlaneBcMsg.ms_and_id)
  return ms_and_id_;
}
inline ::plane::MsAndId* PlaneBcMsg::release_ms_and_id() {
  // @@protoc_insertion_point(field_release:plane.PlaneBcMsg.ms_and_id)
  clear_has_ms_and_id();
  ::plane::MsAndId* temp = ms_and_id_;
  ms_and_id_ = NULL;
  return temp;
}
inline void PlaneBcMsg::set_allocated_ms_and_id(::plane::MsAndId* ms_and_id) {
  delete ms_and_id_;
  ms_and_id_ = ms_and_id;
  if (ms_and_id) {
    set_has_ms_and_id();
  } else {
    clear_has_ms_and_id();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.PlaneBcMsg.ms_and_id)
}

// optional .plane.PlaneMsg new = 2;
inline bool PlaneBcMsg::has_new_() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlaneBcMsg::set_has_new_() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlaneBcMsg::clear_has_new_() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlaneBcMsg::clear_new_() {
  if (new__ != NULL) new__->::plane::PlaneMsg::Clear();
  clear_has_new_();
}
inline const ::plane::PlaneMsg& PlaneBcMsg::new_() const {
  // @@protoc_insertion_point(field_get:plane.PlaneBcMsg.new)
  return new__ != NULL ? *new__
                         : *::plane::PlaneMsg::internal_default_instance();
}
inline ::plane::PlaneMsg* PlaneBcMsg::mutable_new_() {
  set_has_new_();
  if (new__ == NULL) {
    new__ = new ::plane::PlaneMsg;
  }
  // @@protoc_insertion_point(field_mutable:plane.PlaneBcMsg.new)
  return new__;
}
inline ::plane::PlaneMsg* PlaneBcMsg::release_new_() {
  // @@protoc_insertion_point(field_release:plane.PlaneBcMsg.new)
  clear_has_new_();
  ::plane::PlaneMsg* temp = new__;
  new__ = NULL;
  return temp;
}
inline void PlaneBcMsg::set_allocated_new_(::plane::PlaneMsg* new_) {
  delete new__;
  new__ = new_;
  if (new_) {
    set_has_new_();
  } else {
    clear_has_new_();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.PlaneBcMsg.new)
}

// -------------------------------------------------------------------

// BatchRemovePlaneBcMsg

// optional uint32 playerid = 1;
inline bool BatchRemovePlaneBcMsg::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void BatchRemovePlaneBcMsg::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void BatchRemovePlaneBcMsg::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void BatchRemovePlaneBcMsg::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 BatchRemovePlaneBcMsg::playerid() const {
  // @@protoc_insertion_point(field_get:plane.BatchRemovePlaneBcMsg.playerid)
  return playerid_;
}
inline void BatchRemovePlaneBcMsg::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:plane.BatchRemovePlaneBcMsg.playerid)
}

// repeated uint32 plane_ids = 2;
inline int BatchRemovePlaneBcMsg::plane_ids_size() const {
  return plane_ids_.size();
}
inline void BatchRemovePlaneBcMsg::clear_plane_ids() {
  plane_ids_.Clear();
}
inline ::google::protobuf::uint32 BatchRemovePlaneBcMsg::plane_ids(int index) const {
  // @@protoc_insertion_point(field_get:plane.BatchRemovePlaneBcMsg.plane_ids)
  return plane_ids_.Get(index);
}
inline void BatchRemovePlaneBcMsg::set_plane_ids(int index, ::google::protobuf::uint32 value) {
  plane_ids_.Set(index, value);
  // @@protoc_insertion_point(field_set:plane.BatchRemovePlaneBcMsg.plane_ids)
}
inline void BatchRemovePlaneBcMsg::add_plane_ids(::google::protobuf::uint32 value) {
  plane_ids_.Add(value);
  // @@protoc_insertion_point(field_add:plane.BatchRemovePlaneBcMsg.plane_ids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
BatchRemovePlaneBcMsg::plane_ids() const {
  // @@protoc_insertion_point(field_list:plane.BatchRemovePlaneBcMsg.plane_ids)
  return plane_ids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
BatchRemovePlaneBcMsg::mutable_plane_ids() {
  // @@protoc_insertion_point(field_mutable_list:plane.BatchRemovePlaneBcMsg.plane_ids)
  return &plane_ids_;
}

// -------------------------------------------------------------------

// RankDataMsg

// optional uint32 my_rank = 1;
inline bool RankDataMsg::has_my_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankDataMsg::set_has_my_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankDataMsg::clear_has_my_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankDataMsg::clear_my_rank() {
  my_rank_ = 0u;
  clear_has_my_rank();
}
inline ::google::protobuf::uint32 RankDataMsg::my_rank() const {
  // @@protoc_insertion_point(field_get:plane.RankDataMsg.my_rank)
  return my_rank_;
}
inline void RankDataMsg::set_my_rank(::google::protobuf::uint32 value) {
  set_has_my_rank();
  my_rank_ = value;
  // @@protoc_insertion_point(field_set:plane.RankDataMsg.my_rank)
}

// optional uint32 my_score = 2;
inline bool RankDataMsg::has_my_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankDataMsg::set_has_my_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankDataMsg::clear_has_my_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankDataMsg::clear_my_score() {
  my_score_ = 0u;
  clear_has_my_score();
}
inline ::google::protobuf::uint32 RankDataMsg::my_score() const {
  // @@protoc_insertion_point(field_get:plane.RankDataMsg.my_score)
  return my_score_;
}
inline void RankDataMsg::set_my_score(::google::protobuf::uint32 value) {
  set_has_my_score();
  my_score_ = value;
  // @@protoc_insertion_point(field_set:plane.RankDataMsg.my_score)
}

// repeated .plane.RankData data = 3;
inline int RankDataMsg::data_size() const {
  return data_.size();
}
inline void RankDataMsg::clear_data() {
  data_.Clear();
}
inline const ::plane::RankData& RankDataMsg::data(int index) const {
  // @@protoc_insertion_point(field_get:plane.RankDataMsg.data)
  return data_.Get(index);
}
inline ::plane::RankData* RankDataMsg::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:plane.RankDataMsg.data)
  return data_.Mutable(index);
}
inline ::plane::RankData* RankDataMsg::add_data() {
  // @@protoc_insertion_point(field_add:plane.RankDataMsg.data)
  return data_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::RankData >*
RankDataMsg::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:plane.RankDataMsg.data)
  return &data_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::RankData >&
RankDataMsg::data() const {
  // @@protoc_insertion_point(field_list:plane.RankDataMsg.data)
  return data_;
}

// -------------------------------------------------------------------

// RankData

// optional uint32 playerid = 1;
inline bool RankData::has_playerid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RankData::set_has_playerid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RankData::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RankData::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 RankData::playerid() const {
  // @@protoc_insertion_point(field_get:plane.RankData.playerid)
  return playerid_;
}
inline void RankData::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:plane.RankData.playerid)
}

// optional string playername = 2;
inline bool RankData::has_playername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RankData::set_has_playername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RankData::clear_has_playername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RankData::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_playername();
}
inline const ::std::string& RankData::playername() const {
  // @@protoc_insertion_point(field_get:plane.RankData.playername)
  return playername_.GetNoArena();
}
inline void RankData::set_playername(const ::std::string& value) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.RankData.playername)
}
#if LANG_CXX11
inline void RankData::set_playername(::std::string&& value) {
  set_has_playername();
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.RankData.playername)
}
#endif
inline void RankData::set_playername(const char* value) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.RankData.playername)
}
inline void RankData::set_playername(const char* value, size_t size) {
  set_has_playername();
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.RankData.playername)
}
inline ::std::string* RankData::mutable_playername() {
  set_has_playername();
  // @@protoc_insertion_point(field_mutable:plane.RankData.playername)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RankData::release_playername() {
  // @@protoc_insertion_point(field_release:plane.RankData.playername)
  clear_has_playername();
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RankData::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    set_has_playername();
  } else {
    clear_has_playername();
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:plane.RankData.playername)
}

// -------------------------------------------------------------------

// ScoreMsg

// optional uint32 my_score = 1;
inline bool ScoreMsg::has_my_score() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ScoreMsg::set_has_my_score() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ScoreMsg::clear_has_my_score() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ScoreMsg::clear_my_score() {
  my_score_ = 0u;
  clear_has_my_score();
}
inline ::google::protobuf::uint32 ScoreMsg::my_score() const {
  // @@protoc_insertion_point(field_get:plane.ScoreMsg.my_score)
  return my_score_;
}
inline void ScoreMsg::set_my_score(::google::protobuf::uint32 value) {
  set_has_my_score();
  my_score_ = value;
  // @@protoc_insertion_point(field_set:plane.ScoreMsg.my_score)
}

// -------------------------------------------------------------------

// DeathMsg

// optional string killedbyname = 1;
inline bool DeathMsg::has_killedbyname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void DeathMsg::set_has_killedbyname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void DeathMsg::clear_has_killedbyname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void DeathMsg::clear_killedbyname() {
  killedbyname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_killedbyname();
}
inline const ::std::string& DeathMsg::killedbyname() const {
  // @@protoc_insertion_point(field_get:plane.DeathMsg.killedbyname)
  return killedbyname_.GetNoArena();
}
inline void DeathMsg::set_killedbyname(const ::std::string& value) {
  set_has_killedbyname();
  killedbyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.DeathMsg.killedbyname)
}
#if LANG_CXX11
inline void DeathMsg::set_killedbyname(::std::string&& value) {
  set_has_killedbyname();
  killedbyname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.DeathMsg.killedbyname)
}
#endif
inline void DeathMsg::set_killedbyname(const char* value) {
  set_has_killedbyname();
  killedbyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.DeathMsg.killedbyname)
}
inline void DeathMsg::set_killedbyname(const char* value, size_t size) {
  set_has_killedbyname();
  killedbyname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.DeathMsg.killedbyname)
}
inline ::std::string* DeathMsg::mutable_killedbyname() {
  set_has_killedbyname();
  // @@protoc_insertion_point(field_mutable:plane.DeathMsg.killedbyname)
  return killedbyname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* DeathMsg::release_killedbyname() {
  // @@protoc_insertion_point(field_release:plane.DeathMsg.killedbyname)
  clear_has_killedbyname();
  return killedbyname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void DeathMsg::set_allocated_killedbyname(::std::string* killedbyname) {
  if (killedbyname != NULL) {
    set_has_killedbyname();
  } else {
    clear_has_killedbyname();
  }
  killedbyname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), killedbyname);
  // @@protoc_insertion_point(field_set_allocated:plane.DeathMsg.killedbyname)
}

// optional uint32 relive_seconds = 2;
inline bool DeathMsg::has_relive_seconds() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void DeathMsg::set_has_relive_seconds() {
  _has_bits_[0] |= 0x00000002u;
}
inline void DeathMsg::clear_has_relive_seconds() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void DeathMsg::clear_relive_seconds() {
  relive_seconds_ = 0u;
  clear_has_relive_seconds();
}
inline ::google::protobuf::uint32 DeathMsg::relive_seconds() const {
  // @@protoc_insertion_point(field_get:plane.DeathMsg.relive_seconds)
  return relive_seconds_;
}
inline void DeathMsg::set_relive_seconds(::google::protobuf::uint32 value) {
  set_has_relive_seconds();
  relive_seconds_ = value;
  // @@protoc_insertion_point(field_set:plane.DeathMsg.relive_seconds)
}

// optional uint32 is_out_of_bound = 3;
inline bool DeathMsg::has_is_out_of_bound() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void DeathMsg::set_has_is_out_of_bound() {
  _has_bits_[0] |= 0x00000004u;
}
inline void DeathMsg::clear_has_is_out_of_bound() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void DeathMsg::clear_is_out_of_bound() {
  is_out_of_bound_ = 0u;
  clear_has_is_out_of_bound();
}
inline ::google::protobuf::uint32 DeathMsg::is_out_of_bound() const {
  // @@protoc_insertion_point(field_get:plane.DeathMsg.is_out_of_bound)
  return is_out_of_bound_;
}
inline void DeathMsg::set_is_out_of_bound(::google::protobuf::uint32 value) {
  set_has_is_out_of_bound();
  is_out_of_bound_ = value;
  // @@protoc_insertion_point(field_set:plane.DeathMsg.is_out_of_bound)
}

// -------------------------------------------------------------------

// StateMsg

// optional uint32 playerid = 1;
inline bool StateMsg::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StateMsg::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StateMsg::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StateMsg::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 StateMsg::playerid() const {
  // @@protoc_insertion_point(field_get:plane.StateMsg.playerid)
  return playerid_;
}
inline void StateMsg::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:plane.StateMsg.playerid)
}

// optional .plane.StateMsg.State state_num = 2;
inline bool StateMsg::has_state_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StateMsg::set_has_state_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StateMsg::clear_has_state_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StateMsg::clear_state_num() {
  state_num_ = 1;
  clear_has_state_num();
}
inline ::plane::StateMsg_State StateMsg::state_num() const {
  // @@protoc_insertion_point(field_get:plane.StateMsg.state_num)
  return static_cast< ::plane::StateMsg_State >(state_num_);
}
inline void StateMsg::set_state_num(::plane::StateMsg_State value) {
  assert(::plane::StateMsg_State_IsValid(value));
  set_has_state_num();
  state_num_ = value;
  // @@protoc_insertion_point(field_set:plane.StateMsg.state_num)
}

// optional .plane.StateMsg.StateOp op = 3;
inline bool StateMsg::has_op() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void StateMsg::set_has_op() {
  _has_bits_[0] |= 0x00000004u;
}
inline void StateMsg::clear_has_op() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void StateMsg::clear_op() {
  op_ = 1;
  clear_has_op();
}
inline ::plane::StateMsg_StateOp StateMsg::op() const {
  // @@protoc_insertion_point(field_get:plane.StateMsg.op)
  return static_cast< ::plane::StateMsg_StateOp >(op_);
}
inline void StateMsg::set_op(::plane::StateMsg_StateOp value) {
  assert(::plane::StateMsg_StateOp_IsValid(value));
  set_has_op();
  op_ = value;
  // @@protoc_insertion_point(field_set:plane.StateMsg.op)
}

// -------------------------------------------------------------------

// UpdateSpeedBcMsg

// optional uint32 playerid = 1;
inline bool UpdateSpeedBcMsg::has_playerid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UpdateSpeedBcMsg::set_has_playerid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UpdateSpeedBcMsg::clear_has_playerid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UpdateSpeedBcMsg::clear_playerid() {
  playerid_ = 0u;
  clear_has_playerid();
}
inline ::google::protobuf::uint32 UpdateSpeedBcMsg::playerid() const {
  // @@protoc_insertion_point(field_get:plane.UpdateSpeedBcMsg.playerid)
  return playerid_;
}
inline void UpdateSpeedBcMsg::set_playerid(::google::protobuf::uint32 value) {
  set_has_playerid();
  playerid_ = value;
  // @@protoc_insertion_point(field_set:plane.UpdateSpeedBcMsg.playerid)
}

// optional uint32 speed = 2;
inline bool UpdateSpeedBcMsg::has_speed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UpdateSpeedBcMsg::set_has_speed() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UpdateSpeedBcMsg::clear_has_speed() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UpdateSpeedBcMsg::clear_speed() {
  speed_ = 0u;
  clear_has_speed();
}
inline ::google::protobuf::uint32 UpdateSpeedBcMsg::speed() const {
  // @@protoc_insertion_point(field_get:plane.UpdateSpeedBcMsg.speed)
  return speed_;
}
inline void UpdateSpeedBcMsg::set_speed(::google::protobuf::uint32 value) {
  set_has_speed();
  speed_ = value;
  // @@protoc_insertion_point(field_set:plane.UpdateSpeedBcMsg.speed)
}

// optional uint32 is_start_split = 3;
inline bool UpdateSpeedBcMsg::has_is_start_split() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UpdateSpeedBcMsg::set_has_is_start_split() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UpdateSpeedBcMsg::clear_has_is_start_split() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UpdateSpeedBcMsg::clear_is_start_split() {
  is_start_split_ = 0u;
  clear_has_is_start_split();
}
inline ::google::protobuf::uint32 UpdateSpeedBcMsg::is_start_split() const {
  // @@protoc_insertion_point(field_get:plane.UpdateSpeedBcMsg.is_start_split)
  return is_start_split_;
}
inline void UpdateSpeedBcMsg::set_is_start_split(::google::protobuf::uint32 value) {
  set_has_is_start_split();
  is_start_split_ = value;
  // @@protoc_insertion_point(field_set:plane.UpdateSpeedBcMsg.is_start_split)
}

// -------------------------------------------------------------------

// ShotCDMsg

// optional uint32 shotcd = 1;
inline bool ShotCDMsg::has_shotcd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ShotCDMsg::set_has_shotcd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ShotCDMsg::clear_has_shotcd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ShotCDMsg::clear_shotcd() {
  shotcd_ = 0u;
  clear_has_shotcd();
}
inline ::google::protobuf::uint32 ShotCDMsg::shotcd() const {
  // @@protoc_insertion_point(field_get:plane.ShotCDMsg.shotcd)
  return shotcd_;
}
inline void ShotCDMsg::set_shotcd(::google::protobuf::uint32 value) {
  set_has_shotcd();
  shotcd_ = value;
  // @@protoc_insertion_point(field_set:plane.ShotCDMsg.shotcd)
}

// -------------------------------------------------------------------

// LevelMsg

// optional uint32 level = 1;
inline bool LevelMsg::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LevelMsg::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LevelMsg::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LevelMsg::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 LevelMsg::level() const {
  // @@protoc_insertion_point(field_get:plane.LevelMsg.level)
  return level_;
}
inline void LevelMsg::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:plane.LevelMsg.level)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace plane

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::plane::StateMsg_State> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::plane::StateMsg_State>() {
  return ::plane::StateMsg_State_descriptor();
}
template <> struct is_proto_enum< ::plane::StateMsg_StateOp> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::plane::StateMsg_StateOp>() {
  return ::plane::StateMsg_StateOp_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_plane_2fplane_5fpush_2eproto__INCLUDED
