// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plane/social.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "plane/social.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace plane {
class AccountMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AccountMsg> {
} _AccountMsg_default_instance_;
class SignMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SignMsg> {
} _SignMsg_default_instance_;
class ShortLinkMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShortLinkMsg> {
} _ShortLinkMsg_default_instance_;
class PersonalInfoMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PersonalInfoMsg> {
} _PersonalInfoMsg_default_instance_;
class MainPageInfoMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MainPageInfoMsg> {
} _MainPageInfoMsg_default_instance_;
class ImgIDMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ImgIDMsg> {
} _ImgIDMsg_default_instance_;
class OneFollowDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OneFollowData> {
} _OneFollowData_default_instance_;
class OnePageFollowingDataMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OnePageFollowingDataMsg> {
} _OnePageFollowingDataMsg_default_instance_;
class OnePageFollowedDataMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OnePageFollowedDataMsg> {
} _OnePageFollowedDataMsg_default_instance_;
class SocialOpResultMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SocialOpResultMsg> {
} _SocialOpResultMsg_default_instance_;
class FollowUnfollowViewMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FollowUnfollowViewMsg> {
} _FollowUnfollowViewMsg_default_instance_;
class FollowUnfollowDataMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FollowUnfollowDataMsg> {
} _FollowUnfollowDataMsg_default_instance_;
class GamePageInfoMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GamePageInfoMsg> {
} _GamePageInfoMsg_default_instance_;
class SkinPageInfoMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SkinPageInfoMsg> {
} _SkinPageInfoMsg_default_instance_;
class FindFriendResultMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FindFriendResultMsg> {
} _FindFriendResultMsg_default_instance_;
class ShareDataMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ShareDataMsg> {
} _ShareDataMsg_default_instance_;
class OnePurgatoryRankDataMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OnePurgatoryRankDataMsg> {
} _OnePurgatoryRankDataMsg_default_instance_;
class PurgatoryRankTypeDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PurgatoryRankType> {
} _PurgatoryRankType_default_instance_;
class PurgatoryRankDataMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PurgatoryRankDataMsg> {
} _PurgatoryRankDataMsg_default_instance_;
class OneLevelRankDataMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OneLevelRankDataMsg> {
} _OneLevelRankDataMsg_default_instance_;
class LevelRankDataMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LevelRankDataMsg> {
} _LevelRankDataMsg_default_instance_;
class OneCheckFollowResultDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OneCheckFollowResult> {
} _OneCheckFollowResult_default_instance_;
class CheckFollowResultMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CheckFollowResultMsg> {
} _CheckFollowResultMsg_default_instance_;
class OneRewardObjDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OneRewardObj> {
} _OneRewardObj_default_instance_;
class OneLevelRewardDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OneLevelReward> {
} _OneLevelReward_default_instance_;
class SeasonRewardMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SeasonRewardMsg> {
} _SeasonRewardMsg_default_instance_;

namespace protobuf_plane_2fsocial_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[26];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountMsg, account_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SignMsg, sign_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShortLinkMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShortLinkMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShortLinkMsg, link_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalInfoMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalInfoMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalInfoMsg, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalInfoMsg, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PersonalInfoMsg, areacode_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, header_imgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, header_imgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, sign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, area_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, following_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, followed_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, viewed_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, voiceurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, voice_playernum_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, next_change_account_ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, already_followed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MainPageInfoMsg, state_),
  0,
  4,
  1,
  2,
  5,
  6,
  7,
  8,
  9,
  10,
  3,
  11,
  12,
  13,
  14,
  15,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImgIDMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImgIDMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImgIDMsg, imgid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFollowData, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFollowData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFollowData, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFollowData, header_imgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFollowData, header_imgurl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFollowData, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFollowData, area_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFollowData, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFollowData, already_follow_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFollowData, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFollowData, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneFollowData, uid_),
  0,
  2,
  1,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFollowingDataMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFollowingDataMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFollowingDataMsg, total_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFollowingDataMsg, page_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFollowingDataMsg, datas_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFollowedDataMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFollowedDataMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFollowedDataMsg, total_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFollowedDataMsg, page_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePageFollowedDataMsg, datas_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialOpResultMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialOpResultMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialOpResultMsg, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialOpResultMsg, error_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SocialOpResultMsg, new_account_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FollowUnfollowViewMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FollowUnfollowViewMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FollowUnfollowViewMsg, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FollowUnfollowViewMsg, page_num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FollowUnfollowDataMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FollowUnfollowDataMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FollowUnfollowDataMsg, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FollowUnfollowDataMsg, result_),
  1,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePageInfoMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePageInfoMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePageInfoMsg, total_game_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePageInfoMsg, total_champion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePageInfoMsg, total_mvp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePageInfoMsg, total_destroy_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePageInfoMsg, total_kill_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePageInfoMsg, highest_score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePageInfoMsg, highest_combo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePageInfoMsg, header_imgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GamePageInfoMsg, account_),
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkinPageInfoMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkinPageInfoMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkinPageInfoMsg, indexes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SkinPageInfoMsg, account_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FindFriendResultMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FindFriendResultMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FindFriendResultMsg, retcode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FindFriendResultMsg, error_str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FindFriendResultMsg, data_),
  2,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareDataMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareDataMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareDataMsg, share_get_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareDataMsg, game_get_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ShareDataMsg, total_get_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePurgatoryRankDataMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePurgatoryRankDataMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePurgatoryRankDataMsg, acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePurgatoryRankDataMsg, score_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePurgatoryRankDataMsg, sugar_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePurgatoryRankDataMsg, imageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePurgatoryRankDataMsg, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePurgatoryRankDataMsg, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OnePurgatoryRankDataMsg, uid_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurgatoryRankType, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurgatoryRankType, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurgatoryRankType, type_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurgatoryRankDataMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurgatoryRankDataMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurgatoryRankDataMsg, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PurgatoryRankDataMsg, datas_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneLevelRankDataMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneLevelRankDataMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneLevelRankDataMsg, acc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneLevelRankDataMsg, imageid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneLevelRankDataMsg, sex_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneLevelRankDataMsg, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneLevelRankDataMsg, uid_),
  0,
  1,
  2,
  3,
  4,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelRankDataMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelRankDataMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LevelRankDataMsg, datas_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneCheckFollowResult, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneCheckFollowResult, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneCheckFollowResult, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneCheckFollowResult, already_followed_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckFollowResultMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckFollowResultMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CheckFollowResultMsg, results_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneRewardObj, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneRewardObj, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneRewardObj, baseid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneRewardObj, num_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneLevelReward, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneLevelReward, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneLevelReward, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneLevelReward, objs_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeasonRewardMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeasonRewardMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SeasonRewardMsg, rewards_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 5, sizeof(AccountMsg)},
  { 6, 11, sizeof(SignMsg)},
  { 12, 17, sizeof(ShortLinkMsg)},
  { 18, 25, sizeof(PersonalInfoMsg)},
  { 28, 48, sizeof(MainPageInfoMsg)},
  { 64, 69, sizeof(ImgIDMsg)},
  { 70, 84, sizeof(OneFollowData)},
  { 94, 101, sizeof(OnePageFollowingDataMsg)},
  { 104, 111, sizeof(OnePageFollowedDataMsg)},
  { 114, 121, sizeof(SocialOpResultMsg)},
  { 124, 130, sizeof(FollowUnfollowViewMsg)},
  { 132, 138, sizeof(FollowUnfollowDataMsg)},
  { 140, 153, sizeof(GamePageInfoMsg)},
  { 162, 168, sizeof(SkinPageInfoMsg)},
  { 170, 177, sizeof(FindFriendResultMsg)},
  { 180, 187, sizeof(ShareDataMsg)},
  { 190, 201, sizeof(OnePurgatoryRankDataMsg)},
  { 208, 213, sizeof(PurgatoryRankType)},
  { 214, 220, sizeof(PurgatoryRankDataMsg)},
  { 222, 231, sizeof(OneLevelRankDataMsg)},
  { 236, 241, sizeof(LevelRankDataMsg)},
  { 242, 248, sizeof(OneCheckFollowResult)},
  { 250, 255, sizeof(CheckFollowResultMsg)},
  { 256, 262, sizeof(OneRewardObj)},
  { 264, 270, sizeof(OneLevelReward)},
  { 272, 277, sizeof(SeasonRewardMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccountMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SignMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShortLinkMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PersonalInfoMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MainPageInfoMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ImgIDMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneFollowData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OnePageFollowingDataMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OnePageFollowedDataMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SocialOpResultMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FollowUnfollowViewMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FollowUnfollowDataMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GamePageInfoMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SkinPageInfoMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_FindFriendResultMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ShareDataMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OnePurgatoryRankDataMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PurgatoryRankType_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PurgatoryRankDataMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneLevelRankDataMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LevelRankDataMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneCheckFollowResult_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CheckFollowResultMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneRewardObj_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneLevelReward_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SeasonRewardMsg_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "plane/social.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 26);
}

}  // namespace

void TableStruct::Shutdown() {
  _AccountMsg_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _SignMsg_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ShortLinkMsg_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _PersonalInfoMsg_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _MainPageInfoMsg_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _ImgIDMsg_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _OneFollowData_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _OnePageFollowingDataMsg_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _OnePageFollowedDataMsg_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _SocialOpResultMsg_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _FollowUnfollowViewMsg_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _FollowUnfollowDataMsg_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _GamePageInfoMsg_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _SkinPageInfoMsg_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _FindFriendResultMsg_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _ShareDataMsg_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _OnePurgatoryRankDataMsg_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _PurgatoryRankType_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
  _PurgatoryRankDataMsg_default_instance_.Shutdown();
  delete file_level_metadata[18].reflection;
  _OneLevelRankDataMsg_default_instance_.Shutdown();
  delete file_level_metadata[19].reflection;
  _LevelRankDataMsg_default_instance_.Shutdown();
  delete file_level_metadata[20].reflection;
  _OneCheckFollowResult_default_instance_.Shutdown();
  delete file_level_metadata[21].reflection;
  _CheckFollowResultMsg_default_instance_.Shutdown();
  delete file_level_metadata[22].reflection;
  _OneRewardObj_default_instance_.Shutdown();
  delete file_level_metadata[23].reflection;
  _OneLevelReward_default_instance_.Shutdown();
  delete file_level_metadata[24].reflection;
  _SeasonRewardMsg_default_instance_.Shutdown();
  delete file_level_metadata[25].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::rpc::protobuf_empty_5fmsg_2eproto::InitDefaults();
  ::plane::protobuf_plane_2fplane_5fmsg_2eproto::InitDefaults();
  _AccountMsg_default_instance_.DefaultConstruct();
  _SignMsg_default_instance_.DefaultConstruct();
  _ShortLinkMsg_default_instance_.DefaultConstruct();
  _PersonalInfoMsg_default_instance_.DefaultConstruct();
  _MainPageInfoMsg_default_instance_.DefaultConstruct();
  _ImgIDMsg_default_instance_.DefaultConstruct();
  _OneFollowData_default_instance_.DefaultConstruct();
  _OnePageFollowingDataMsg_default_instance_.DefaultConstruct();
  _OnePageFollowedDataMsg_default_instance_.DefaultConstruct();
  _SocialOpResultMsg_default_instance_.DefaultConstruct();
  _FollowUnfollowViewMsg_default_instance_.DefaultConstruct();
  _FollowUnfollowDataMsg_default_instance_.DefaultConstruct();
  _GamePageInfoMsg_default_instance_.DefaultConstruct();
  _SkinPageInfoMsg_default_instance_.DefaultConstruct();
  _FindFriendResultMsg_default_instance_.DefaultConstruct();
  _ShareDataMsg_default_instance_.DefaultConstruct();
  _OnePurgatoryRankDataMsg_default_instance_.DefaultConstruct();
  _PurgatoryRankType_default_instance_.DefaultConstruct();
  _PurgatoryRankDataMsg_default_instance_.DefaultConstruct();
  _OneLevelRankDataMsg_default_instance_.DefaultConstruct();
  _LevelRankDataMsg_default_instance_.DefaultConstruct();
  _OneCheckFollowResult_default_instance_.DefaultConstruct();
  _CheckFollowResultMsg_default_instance_.DefaultConstruct();
  _OneRewardObj_default_instance_.DefaultConstruct();
  _OneLevelReward_default_instance_.DefaultConstruct();
  _SeasonRewardMsg_default_instance_.DefaultConstruct();
  _FollowUnfollowDataMsg_default_instance_.get_mutable()->result_ = const_cast< ::plane::SocialOpResultMsg*>(
      ::plane::SocialOpResultMsg::internal_default_instance());
  _FindFriendResultMsg_default_instance_.get_mutable()->data_ = const_cast< ::plane::OneFollowData*>(
      ::plane::OneFollowData::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022plane/social.proto\022\005plane\032\017empty_msg.p"
      "roto\032\025plane/plane_msg.proto\"\035\n\nAccountMs"
      "g\022\017\n\007account\030\001 \001(\t\"\027\n\007SignMsg\022\014\n\004sign\030\001 "
      "\001(\t\"\034\n\014ShortLinkMsg\022\014\n\004link\030\001 \001(\t\"=\n\017Per"
      "sonalInfoMsg\022\013\n\003sex\030\002 \001(\r\022\013\n\003age\030\003 \001(\r\022\020"
      "\n\010areacode\030\004 \001(\r\"\316\002\n\017MainPageInfoMsg\022\017\n\007"
      "account\030\001 \001(\t\022\024\n\014header_imgid\030\002 \001(\r\022\025\n\rh"
      "eader_imgurl\030\003 \001(\t\022\014\n\004sign\030\004 \001(\t\022\013\n\003sex\030"
      "\005 \001(\r\022\021\n\tarea_code\030\006 \001(\r\022\013\n\003age\030\007 \001(\r\022\025\n"
      "\rfollowing_num\030\010 \001(\r\022\024\n\014followed_num\030\t \001"
      "(\r\022\022\n\nviewed_num\030\n \001(\r\022\020\n\010voiceurl\030\013 \001(\t"
      "\022\027\n\017voice_playernum\030\014 \001(\r\022\036\n\026next_change"
      "_account_ts\030\r \001(\r\022\r\n\005level\030\016 \001(\r\022\030\n\020alre"
      "ady_followed\030\017 \001(\r\022\r\n\005state\030\020 \001(\r\"\031\n\010Img"
      "IDMsg\022\r\n\005imgid\030\001 \001(\r\"\275\001\n\rOneFollowData\022\017"
      "\n\007account\030\001 \001(\t\022\024\n\014header_imgid\030\002 \001(\r\022\025\n"
      "\rheader_imgurl\030\003 \001(\t\022\013\n\003sex\030\004 \001(\r\022\021\n\tare"
      "a_code\030\005 \001(\r\022\013\n\003age\030\006 \001(\r\022\026\n\016already_fol"
      "low\030\007 \001(\r\022\r\n\005level\030\010 \001(\r\022\r\n\005state\030\t \001(\r\022"
      "\013\n\003uid\030\n \001(\r\"c\n\027OnePageFollowingDataMsg\022"
      "\021\n\ttotal_num\030\001 \001(\r\022\020\n\010page_num\030\002 \001(\r\022#\n\005"
      "datas\030\003 \003(\0132\024.plane.OneFollowData\"b\n\026One"
      "PageFollowedDataMsg\022\021\n\ttotal_num\030\001 \001(\r\022\020"
      "\n\010page_num\030\002 \001(\r\022#\n\005datas\030\003 \003(\0132\024.plane."
      "OneFollowData\"L\n\021SocialOpResultMsg\022\017\n\007re"
      "tcode\030\001 \001(\r\022\021\n\terror_str\030\002 \001(\t\022\023\n\013new_ac"
      "count\030\003 \001(\t\":\n\025FollowUnfollowViewMsg\022\017\n\007"
      "account\030\001 \001(\t\022\020\n\010page_num\030\002 \001(\r\"N\n\025Follo"
      "wUnfollowDataMsg\022\013\n\003uid\030\001 \001(\r\022(\n\006result\030"
      "\002 \001(\0132\030.plane.SocialOpResultMsg\"\320\001\n\017Game"
      "PageInfoMsg\022\022\n\ntotal_game\030\001 \001(\r\022\026\n\016total"
      "_champion\030\002 \001(\r\022\021\n\ttotal_mvp\030\003 \001(\r\022\025\n\rto"
      "tal_destroy\030\004 \001(\r\022\022\n\ntotal_kill\030\005 \001(\r\022\025\n"
      "\rhighest_score\030\006 \001(\r\022\025\n\rhighest_combo\030\007 "
      "\001(\r\022\024\n\014header_imgid\030\010 \001(\r\022\017\n\007account\030\t \001"
      "(\t\"3\n\017SkinPageInfoMsg\022\017\n\007indexes\030\001 \003(\r\022\017"
      "\n\007account\030\002 \001(\t\"]\n\023FindFriendResultMsg\022\017"
      "\n\007retcode\030\001 \001(\r\022\021\n\terror_str\030\002 \001(\t\022\"\n\004da"
      "ta\030\003 \001(\0132\024.plane.OneFollowData\"F\n\014ShareD"
      "ataMsg\022\021\n\tshare_get\030\001 \001(\r\022\020\n\010game_get\030\002 "
      "\001(\r\022\021\n\ttotal_get\030\003 \001(\r\"~\n\027OnePurgatoryRa"
      "nkDataMsg\022\013\n\003acc\030\001 \001(\t\022\r\n\005score\030\002 \001(\r\022\r\n"
      "\005sugar\030\003 \001(\r\022\017\n\007imageid\030\004 \001(\r\022\013\n\003sex\030\005 \001"
      "(\r\022\r\n\005level\030\006 \001(\r\022\013\n\003uid\030\007 \001(\r\"!\n\021Purgat"
      "oryRankType\022\014\n\004type\030\001 \001(\r\"S\n\024PurgatoryRa"
      "nkDataMsg\022\014\n\004type\030\001 \001(\r\022-\n\005datas\030\002 \003(\0132\036"
      ".plane.OnePurgatoryRankDataMsg\"\\\n\023OneLev"
      "elRankDataMsg\022\013\n\003acc\030\001 \001(\t\022\017\n\007imageid\030\002 "
      "\001(\r\022\013\n\003sex\030\003 \001(\r\022\r\n\005level\030\004 \001(\r\022\013\n\003uid\030\005"
      " \001(\r\"=\n\020LevelRankDataMsg\022)\n\005datas\030\001 \003(\0132"
      "\032.plane.OneLevelRankDataMsg\"=\n\024OneCheckF"
      "ollowResult\022\013\n\003uid\030\001 \001(\r\022\030\n\020already_foll"
      "owed\030\002 \001(\r\"D\n\024CheckFollowResultMsg\022,\n\007re"
      "sults\030\001 \003(\0132\033.plane.OneCheckFollowResult"
      "\"+\n\014OneRewardObj\022\016\n\006baseid\030\001 \001(\r\022\013\n\003num\030"
      "\002 \001(\r\"A\n\016OneLevelReward\022\014\n\004type\030\001 \001(\r\022!\n"
      "\004objs\030\002 \003(\0132\023.plane.OneRewardObj\"9\n\017Seas"
      "onRewardMsg\022&\n\007rewards\030\001 \003(\0132\025.plane.One"
      "LevelReward2\235\t\n\rReqSocialInfo\0228\n\017ReqMain"
      "PageInfo\022\r.plane.UidMsg\032\026.plane.MainPage"
      "InfoMsg\0221\n\017ChangeHeaderImg\022\017.plane.ImgID"
      "Msg\032\r.rpc.EmptyMsg\022;\n\022ChangePersonalInfo"
      "\022\026.plane.PersonalInfoMsg\032\r.rpc.EmptyMsg\022"
      "<\n\rChangeAccount\022\021.plane.AccountMsg\032\030.pl"
      "ane.SocialOpResultMsg\022+\n\nChangeSign\022\016.pl"
      "ane.SignMsg\032\r.rpc.EmptyMsg\022Q\n\021ViewFollow"
      "ingList\022\034.plane.FollowUnfollowViewMsg\032\036."
      "plane.OnePageFollowingDataMsg\022O\n\020ViewFol"
      "lowedList\022\034.plane.FollowUnfollowViewMsg\032"
      "\035.plane.OnePageFollowedDataMsg\022&\n\006Follow"
      "\022\r.plane.UidMsg\032\r.rpc.EmptyMsg\022(\n\010UnFoll"
      "ow\022\r.plane.UidMsg\032\r.rpc.EmptyMsg\022=\n\020View"
      "GamePageInfo\022\021.plane.AccountMsg\032\026.plane."
      "GamePageInfoMsg\022=\n\020ViewSkinPageInfo\022\021.pl"
      "ane.AccountMsg\032\026.plane.SkinPageInfoMsg\022;"
      "\n\nFindFriend\022\021.plane.AccountMsg\032\032.plane."
      "FindFriendResultMsg\022F\n\025FindFriendInFollo"
      "wing\022\021.plane.AccountMsg\032\032.plane.FindFrie"
      "ndResultMsg\022E\n\024FindFriendInFollowed\022\021.pl"
      "ane.AccountMsg\032\032.plane.FindFriendResultM"
      "sg\0222\n\014GetShareData\022\r.rpc.EmptyMsg\032\023.plan"
      "e.ShareDataMsg\022I\n\020GetPurgatoryRank\022\030.pla"
      "ne.PurgatoryRankType\032\033.plane.PurgatoryRa"
      "nkDataMsg\022F\n\024CheckAlreadyFollowed\022\021.plan"
      "e.UidListMsg\032\033.plane.CheckFollowResultMs"
      "g\0228\n\017GetSeasonReward\022\r.rpc.EmptyMsg\032\026.pl"
      "ane.SeasonRewardMsg\0226\n\014GetLevelRank\022\r.rp"
      "c.EmptyMsg\032\027.plane.LevelRankDataMsg2\256\002\n\016"
      "PushSocialInfo\022<\n\rFollowSuccess\022\034.plane."
      "FollowUnfollowDataMsg\032\r.rpc.EmptyMsg\022>\n\017"
      "UnfollowSuccess\022\034.plane.FollowUnfollowDa"
      "taMsg\032\r.rpc.EmptyMsg\0225\n\017NotifyShortLink\022"
      "\023.plane.ShortLinkMsg\032\r.rpc.EmptyMsg\0225\n\025N"
      "otifyPurgatoryUnlock\022\r.rpc.EmptyMsg\032\r.rp"
      "c.EmptyMsg\0220\n\020NotifyTeamUnlock\022\r.rpc.Emp"
      "tyMsg\032\r.rpc.EmptyMsg"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3820);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "plane/social.proto", &protobuf_RegisterTypes);
  ::rpc::protobuf_empty_5fmsg_2eproto::AddDescriptors();
  ::plane::protobuf_plane_2fplane_5fmsg_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_plane_2fsocial_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccountMsg::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccountMsg::AccountMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.AccountMsg)
}
AccountMsg::AccountMsg(const AccountMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  // @@protoc_insertion_point(copy_constructor:plane.AccountMsg)
}

void AccountMsg::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

AccountMsg::~AccountMsg() {
  // @@protoc_insertion_point(destructor:plane.AccountMsg)
  SharedDtor();
}

void AccountMsg::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void AccountMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[0].descriptor;
}

const AccountMsg& AccountMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccountMsg* AccountMsg::New(::google::protobuf::Arena* arena) const {
  AccountMsg* n = new AccountMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccountMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.AccountMsg)
  if (has_account()) {
    GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccountMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.AccountMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.AccountMsg.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.AccountMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.AccountMsg)
  return false;
#undef DO_
}

void AccountMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.AccountMsg)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.AccountMsg.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.AccountMsg)
}

::google::protobuf::uint8* AccountMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.AccountMsg)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.AccountMsg.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.AccountMsg)
  return target;
}

size_t AccountMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.AccountMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string account = 1;
  if (has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.AccountMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AccountMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccountMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.AccountMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.AccountMsg)
    MergeFrom(*source);
  }
}

void AccountMsg::MergeFrom(const AccountMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.AccountMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_account()) {
    set_has_account();
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
}

void AccountMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.AccountMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountMsg::CopyFrom(const AccountMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.AccountMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountMsg::IsInitialized() const {
  return true;
}

void AccountMsg::Swap(AccountMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccountMsg::InternalSwap(AccountMsg* other) {
  account_.Swap(&other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccountMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccountMsg

// optional string account = 1;
bool AccountMsg::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void AccountMsg::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void AccountMsg::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void AccountMsg::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& AccountMsg::account() const {
  // @@protoc_insertion_point(field_get:plane.AccountMsg.account)
  return account_.GetNoArena();
}
void AccountMsg::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.AccountMsg.account)
}
#if LANG_CXX11
void AccountMsg::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.AccountMsg.account)
}
#endif
void AccountMsg::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.AccountMsg.account)
}
void AccountMsg::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.AccountMsg.account)
}
::std::string* AccountMsg::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:plane.AccountMsg.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* AccountMsg::release_account() {
  // @@protoc_insertion_point(field_release:plane.AccountMsg.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void AccountMsg::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:plane.AccountMsg.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SignMsg::kSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SignMsg::SignMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.SignMsg)
}
SignMsg::SignMsg(const SignMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign()) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  // @@protoc_insertion_point(copy_constructor:plane.SignMsg)
}

void SignMsg::SharedCtor() {
  _cached_size_ = 0;
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SignMsg::~SignMsg() {
  // @@protoc_insertion_point(destructor:plane.SignMsg)
  SharedDtor();
}

void SignMsg::SharedDtor() {
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SignMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SignMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[1].descriptor;
}

const SignMsg& SignMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SignMsg* SignMsg::New(::google::protobuf::Arena* arena) const {
  SignMsg* n = new SignMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SignMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.SignMsg)
  if (has_sign()) {
    GOOGLE_DCHECK(!sign_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*sign_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SignMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.SignMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string sign = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sign().data(), this->sign().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.SignMsg.sign");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.SignMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.SignMsg)
  return false;
#undef DO_
}

void SignMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.SignMsg)
  // optional string sign = 1;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.SignMsg.sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sign(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.SignMsg)
}

::google::protobuf::uint8* SignMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.SignMsg)
  // optional string sign = 1;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.SignMsg.sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sign(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.SignMsg)
  return target;
}

size_t SignMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.SignMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string sign = 1;
  if (has_sign()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sign());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SignMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.SignMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SignMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SignMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.SignMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.SignMsg)
    MergeFrom(*source);
  }
}

void SignMsg::MergeFrom(const SignMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.SignMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sign()) {
    set_has_sign();
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
}

void SignMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.SignMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SignMsg::CopyFrom(const SignMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.SignMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SignMsg::IsInitialized() const {
  return true;
}

void SignMsg::Swap(SignMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SignMsg::InternalSwap(SignMsg* other) {
  sign_.Swap(&other->sign_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SignMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SignMsg

// optional string sign = 1;
bool SignMsg::has_sign() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SignMsg::set_has_sign() {
  _has_bits_[0] |= 0x00000001u;
}
void SignMsg::clear_has_sign() {
  _has_bits_[0] &= ~0x00000001u;
}
void SignMsg::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sign();
}
const ::std::string& SignMsg::sign() const {
  // @@protoc_insertion_point(field_get:plane.SignMsg.sign)
  return sign_.GetNoArena();
}
void SignMsg::set_sign(const ::std::string& value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.SignMsg.sign)
}
#if LANG_CXX11
void SignMsg::set_sign(::std::string&& value) {
  set_has_sign();
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.SignMsg.sign)
}
#endif
void SignMsg::set_sign(const char* value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.SignMsg.sign)
}
void SignMsg::set_sign(const char* value, size_t size) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.SignMsg.sign)
}
::std::string* SignMsg::mutable_sign() {
  set_has_sign();
  // @@protoc_insertion_point(field_mutable:plane.SignMsg.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SignMsg::release_sign() {
  // @@protoc_insertion_point(field_release:plane.SignMsg.sign)
  clear_has_sign();
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SignMsg::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    set_has_sign();
  } else {
    clear_has_sign();
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:plane.SignMsg.sign)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShortLinkMsg::kLinkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShortLinkMsg::ShortLinkMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.ShortLinkMsg)
}
ShortLinkMsg::ShortLinkMsg(const ShortLinkMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_link()) {
    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
  // @@protoc_insertion_point(copy_constructor:plane.ShortLinkMsg)
}

void ShortLinkMsg::SharedCtor() {
  _cached_size_ = 0;
  link_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ShortLinkMsg::~ShortLinkMsg() {
  // @@protoc_insertion_point(destructor:plane.ShortLinkMsg)
  SharedDtor();
}

void ShortLinkMsg::SharedDtor() {
  link_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ShortLinkMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShortLinkMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[2].descriptor;
}

const ShortLinkMsg& ShortLinkMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShortLinkMsg* ShortLinkMsg::New(::google::protobuf::Arena* arena) const {
  ShortLinkMsg* n = new ShortLinkMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShortLinkMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.ShortLinkMsg)
  if (has_link()) {
    GOOGLE_DCHECK(!link_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*link_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShortLinkMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.ShortLinkMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string link = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_link()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->link().data(), this->link().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.ShortLinkMsg.link");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.ShortLinkMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.ShortLinkMsg)
  return false;
#undef DO_
}

void ShortLinkMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.ShortLinkMsg)
  // optional string link = 1;
  if (has_link()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.ShortLinkMsg.link");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->link(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.ShortLinkMsg)
}

::google::protobuf::uint8* ShortLinkMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.ShortLinkMsg)
  // optional string link = 1;
  if (has_link()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->link().data(), this->link().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.ShortLinkMsg.link");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->link(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.ShortLinkMsg)
  return target;
}

size_t ShortLinkMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.ShortLinkMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional string link = 1;
  if (has_link()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->link());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShortLinkMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.ShortLinkMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ShortLinkMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShortLinkMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.ShortLinkMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.ShortLinkMsg)
    MergeFrom(*source);
  }
}

void ShortLinkMsg::MergeFrom(const ShortLinkMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.ShortLinkMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_link()) {
    set_has_link();
    link_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.link_);
  }
}

void ShortLinkMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.ShortLinkMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShortLinkMsg::CopyFrom(const ShortLinkMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.ShortLinkMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShortLinkMsg::IsInitialized() const {
  return true;
}

void ShortLinkMsg::Swap(ShortLinkMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShortLinkMsg::InternalSwap(ShortLinkMsg* other) {
  link_.Swap(&other->link_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShortLinkMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShortLinkMsg

// optional string link = 1;
bool ShortLinkMsg::has_link() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShortLinkMsg::set_has_link() {
  _has_bits_[0] |= 0x00000001u;
}
void ShortLinkMsg::clear_has_link() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShortLinkMsg::clear_link() {
  link_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_link();
}
const ::std::string& ShortLinkMsg::link() const {
  // @@protoc_insertion_point(field_get:plane.ShortLinkMsg.link)
  return link_.GetNoArena();
}
void ShortLinkMsg::set_link(const ::std::string& value) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.ShortLinkMsg.link)
}
#if LANG_CXX11
void ShortLinkMsg::set_link(::std::string&& value) {
  set_has_link();
  link_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.ShortLinkMsg.link)
}
#endif
void ShortLinkMsg::set_link(const char* value) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.ShortLinkMsg.link)
}
void ShortLinkMsg::set_link(const char* value, size_t size) {
  set_has_link();
  link_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.ShortLinkMsg.link)
}
::std::string* ShortLinkMsg::mutable_link() {
  set_has_link();
  // @@protoc_insertion_point(field_mutable:plane.ShortLinkMsg.link)
  return link_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ShortLinkMsg::release_link() {
  // @@protoc_insertion_point(field_release:plane.ShortLinkMsg.link)
  clear_has_link();
  return link_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ShortLinkMsg::set_allocated_link(::std::string* link) {
  if (link != NULL) {
    set_has_link();
  } else {
    clear_has_link();
  }
  link_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), link);
  // @@protoc_insertion_point(field_set_allocated:plane.ShortLinkMsg.link)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PersonalInfoMsg::kSexFieldNumber;
const int PersonalInfoMsg::kAgeFieldNumber;
const int PersonalInfoMsg::kAreacodeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PersonalInfoMsg::PersonalInfoMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.PersonalInfoMsg)
}
PersonalInfoMsg::PersonalInfoMsg(const PersonalInfoMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sex_, &from.sex_,
    reinterpret_cast<char*>(&areacode_) -
    reinterpret_cast<char*>(&sex_) + sizeof(areacode_));
  // @@protoc_insertion_point(copy_constructor:plane.PersonalInfoMsg)
}

void PersonalInfoMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&sex_, 0, reinterpret_cast<char*>(&areacode_) -
    reinterpret_cast<char*>(&sex_) + sizeof(areacode_));
}

PersonalInfoMsg::~PersonalInfoMsg() {
  // @@protoc_insertion_point(destructor:plane.PersonalInfoMsg)
  SharedDtor();
}

void PersonalInfoMsg::SharedDtor() {
}

void PersonalInfoMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PersonalInfoMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[3].descriptor;
}

const PersonalInfoMsg& PersonalInfoMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

PersonalInfoMsg* PersonalInfoMsg::New(::google::protobuf::Arena* arena) const {
  PersonalInfoMsg* n = new PersonalInfoMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PersonalInfoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.PersonalInfoMsg)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&sex_, 0, reinterpret_cast<char*>(&areacode_) -
      reinterpret_cast<char*>(&sex_) + sizeof(areacode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PersonalInfoMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.PersonalInfoMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 sex = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 age = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 areacode = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {
          set_has_areacode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &areacode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.PersonalInfoMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.PersonalInfoMsg)
  return false;
#undef DO_
}

void PersonalInfoMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.PersonalInfoMsg)
  // optional uint32 sex = 2;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->sex(), output);
  }

  // optional uint32 age = 3;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->age(), output);
  }

  // optional uint32 areacode = 4;
  if (has_areacode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->areacode(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.PersonalInfoMsg)
}

::google::protobuf::uint8* PersonalInfoMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.PersonalInfoMsg)
  // optional uint32 sex = 2;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->sex(), target);
  }

  // optional uint32 age = 3;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->age(), target);
  }

  // optional uint32 areacode = 4;
  if (has_areacode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->areacode(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.PersonalInfoMsg)
  return target;
}

size_t PersonalInfoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.PersonalInfoMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 sex = 2;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sex());
    }

    // optional uint32 age = 3;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->age());
    }

    // optional uint32 areacode = 4;
    if (has_areacode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->areacode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PersonalInfoMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.PersonalInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PersonalInfoMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PersonalInfoMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.PersonalInfoMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.PersonalInfoMsg)
    MergeFrom(*source);
  }
}

void PersonalInfoMsg::MergeFrom(const PersonalInfoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.PersonalInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_areacode()) {
      set_areacode(from.areacode());
    }
  }
}

void PersonalInfoMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.PersonalInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PersonalInfoMsg::CopyFrom(const PersonalInfoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.PersonalInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PersonalInfoMsg::IsInitialized() const {
  return true;
}

void PersonalInfoMsg::Swap(PersonalInfoMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PersonalInfoMsg::InternalSwap(PersonalInfoMsg* other) {
  std::swap(sex_, other->sex_);
  std::swap(age_, other->age_);
  std::swap(areacode_, other->areacode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PersonalInfoMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PersonalInfoMsg

// optional uint32 sex = 2;
bool PersonalInfoMsg::has_sex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PersonalInfoMsg::set_has_sex() {
  _has_bits_[0] |= 0x00000001u;
}
void PersonalInfoMsg::clear_has_sex() {
  _has_bits_[0] &= ~0x00000001u;
}
void PersonalInfoMsg::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
::google::protobuf::uint32 PersonalInfoMsg::sex() const {
  // @@protoc_insertion_point(field_get:plane.PersonalInfoMsg.sex)
  return sex_;
}
void PersonalInfoMsg::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:plane.PersonalInfoMsg.sex)
}

// optional uint32 age = 3;
bool PersonalInfoMsg::has_age() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PersonalInfoMsg::set_has_age() {
  _has_bits_[0] |= 0x00000002u;
}
void PersonalInfoMsg::clear_has_age() {
  _has_bits_[0] &= ~0x00000002u;
}
void PersonalInfoMsg::clear_age() {
  age_ = 0u;
  clear_has_age();
}
::google::protobuf::uint32 PersonalInfoMsg::age() const {
  // @@protoc_insertion_point(field_get:plane.PersonalInfoMsg.age)
  return age_;
}
void PersonalInfoMsg::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:plane.PersonalInfoMsg.age)
}

// optional uint32 areacode = 4;
bool PersonalInfoMsg::has_areacode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PersonalInfoMsg::set_has_areacode() {
  _has_bits_[0] |= 0x00000004u;
}
void PersonalInfoMsg::clear_has_areacode() {
  _has_bits_[0] &= ~0x00000004u;
}
void PersonalInfoMsg::clear_areacode() {
  areacode_ = 0u;
  clear_has_areacode();
}
::google::protobuf::uint32 PersonalInfoMsg::areacode() const {
  // @@protoc_insertion_point(field_get:plane.PersonalInfoMsg.areacode)
  return areacode_;
}
void PersonalInfoMsg::set_areacode(::google::protobuf::uint32 value) {
  set_has_areacode();
  areacode_ = value;
  // @@protoc_insertion_point(field_set:plane.PersonalInfoMsg.areacode)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MainPageInfoMsg::kAccountFieldNumber;
const int MainPageInfoMsg::kHeaderImgidFieldNumber;
const int MainPageInfoMsg::kHeaderImgurlFieldNumber;
const int MainPageInfoMsg::kSignFieldNumber;
const int MainPageInfoMsg::kSexFieldNumber;
const int MainPageInfoMsg::kAreaCodeFieldNumber;
const int MainPageInfoMsg::kAgeFieldNumber;
const int MainPageInfoMsg::kFollowingNumFieldNumber;
const int MainPageInfoMsg::kFollowedNumFieldNumber;
const int MainPageInfoMsg::kViewedNumFieldNumber;
const int MainPageInfoMsg::kVoiceurlFieldNumber;
const int MainPageInfoMsg::kVoicePlayernumFieldNumber;
const int MainPageInfoMsg::kNextChangeAccountTsFieldNumber;
const int MainPageInfoMsg::kLevelFieldNumber;
const int MainPageInfoMsg::kAlreadyFollowedFieldNumber;
const int MainPageInfoMsg::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MainPageInfoMsg::MainPageInfoMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.MainPageInfoMsg)
}
MainPageInfoMsg::MainPageInfoMsg(const MainPageInfoMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  header_imgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_header_imgurl()) {
    header_imgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.header_imgurl_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sign()) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  voiceurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_voiceurl()) {
    voiceurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voiceurl_);
  }
  ::memcpy(&header_imgid_, &from.header_imgid_,
    reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&header_imgid_) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:plane.MainPageInfoMsg)
}

void MainPageInfoMsg::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_imgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voiceurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_imgid_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&header_imgid_) + sizeof(state_));
}

MainPageInfoMsg::~MainPageInfoMsg() {
  // @@protoc_insertion_point(destructor:plane.MainPageInfoMsg)
  SharedDtor();
}

void MainPageInfoMsg::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_imgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  voiceurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MainPageInfoMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MainPageInfoMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[4].descriptor;
}

const MainPageInfoMsg& MainPageInfoMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

MainPageInfoMsg* MainPageInfoMsg::New(::google::protobuf::Arena* arena) const {
  MainPageInfoMsg* n = new MainPageInfoMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MainPageInfoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.MainPageInfoMsg)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_header_imgurl()) {
      GOOGLE_DCHECK(!header_imgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*header_imgurl_.UnsafeRawStringPointer())->clear();
    }
    if (has_sign()) {
      GOOGLE_DCHECK(!sign_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sign_.UnsafeRawStringPointer())->clear();
    }
    if (has_voiceurl()) {
      GOOGLE_DCHECK(!voiceurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*voiceurl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&header_imgid_, 0, reinterpret_cast<char*>(&age_) -
      reinterpret_cast<char*>(&header_imgid_) + sizeof(age_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&following_num_, 0, reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&following_num_) + sizeof(state_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MainPageInfoMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.MainPageInfoMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.MainPageInfoMsg.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 header_imgid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_header_imgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &header_imgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string header_imgurl = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_header_imgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->header_imgurl().data(), this->header_imgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.MainPageInfoMsg.header_imgurl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string sign = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sign()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sign().data(), this->sign().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.MainPageInfoMsg.sign");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sex = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 area_code = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(48u)) {
          set_has_area_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 age = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(56u)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 following_num = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(64u)) {
          set_has_following_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &following_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 followed_num = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(72u)) {
          set_has_followed_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &followed_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 viewed_num = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(80u)) {
          set_has_viewed_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &viewed_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string voiceurl = 11;
      case 11: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_voiceurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->voiceurl().data(), this->voiceurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.MainPageInfoMsg.voiceurl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 voice_playernum = 12;
      case 12: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(96u)) {
          set_has_voice_playernum();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &voice_playernum_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 next_change_account_ts = 13;
      case 13: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(104u)) {
          set_has_next_change_account_ts();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &next_change_account_ts_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 14;
      case 14: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(112u)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 already_followed = 15;
      case 15: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(120u)) {
          set_has_already_followed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &already_followed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 state = 16;
      case 16: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(128u)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.MainPageInfoMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.MainPageInfoMsg)
  return false;
#undef DO_
}

void MainPageInfoMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.MainPageInfoMsg)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.MainPageInfoMsg.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional uint32 header_imgid = 2;
  if (has_header_imgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->header_imgid(), output);
  }

  // optional string header_imgurl = 3;
  if (has_header_imgurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->header_imgurl().data(), this->header_imgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.MainPageInfoMsg.header_imgurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->header_imgurl(), output);
  }

  // optional string sign = 4;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.MainPageInfoMsg.sign");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->sign(), output);
  }

  // optional uint32 sex = 5;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sex(), output);
  }

  // optional uint32 area_code = 6;
  if (has_area_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->area_code(), output);
  }

  // optional uint32 age = 7;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->age(), output);
  }

  // optional uint32 following_num = 8;
  if (has_following_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->following_num(), output);
  }

  // optional uint32 followed_num = 9;
  if (has_followed_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->followed_num(), output);
  }

  // optional uint32 viewed_num = 10;
  if (has_viewed_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->viewed_num(), output);
  }

  // optional string voiceurl = 11;
  if (has_voiceurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voiceurl().data(), this->voiceurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.MainPageInfoMsg.voiceurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->voiceurl(), output);
  }

  // optional uint32 voice_playernum = 12;
  if (has_voice_playernum()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(12, this->voice_playernum(), output);
  }

  // optional uint32 next_change_account_ts = 13;
  if (has_next_change_account_ts()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(13, this->next_change_account_ts(), output);
  }

  // optional uint32 level = 14;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->level(), output);
  }

  // optional uint32 already_followed = 15;
  if (has_already_followed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->already_followed(), output);
  }

  // optional uint32 state = 16;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(16, this->state(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.MainPageInfoMsg)
}

::google::protobuf::uint8* MainPageInfoMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.MainPageInfoMsg)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.MainPageInfoMsg.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional uint32 header_imgid = 2;
  if (has_header_imgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->header_imgid(), target);
  }

  // optional string header_imgurl = 3;
  if (has_header_imgurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->header_imgurl().data(), this->header_imgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.MainPageInfoMsg.header_imgurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->header_imgurl(), target);
  }

  // optional string sign = 4;
  if (has_sign()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sign().data(), this->sign().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.MainPageInfoMsg.sign");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->sign(), target);
  }

  // optional uint32 sex = 5;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sex(), target);
  }

  // optional uint32 area_code = 6;
  if (has_area_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->area_code(), target);
  }

  // optional uint32 age = 7;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->age(), target);
  }

  // optional uint32 following_num = 8;
  if (has_following_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->following_num(), target);
  }

  // optional uint32 followed_num = 9;
  if (has_followed_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->followed_num(), target);
  }

  // optional uint32 viewed_num = 10;
  if (has_viewed_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->viewed_num(), target);
  }

  // optional string voiceurl = 11;
  if (has_voiceurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->voiceurl().data(), this->voiceurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.MainPageInfoMsg.voiceurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->voiceurl(), target);
  }

  // optional uint32 voice_playernum = 12;
  if (has_voice_playernum()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(12, this->voice_playernum(), target);
  }

  // optional uint32 next_change_account_ts = 13;
  if (has_next_change_account_ts()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(13, this->next_change_account_ts(), target);
  }

  // optional uint32 level = 14;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->level(), target);
  }

  // optional uint32 already_followed = 15;
  if (has_already_followed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->already_followed(), target);
  }

  // optional uint32 state = 16;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(16, this->state(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.MainPageInfoMsg)
  return target;
}

size_t MainPageInfoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.MainPageInfoMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string header_imgurl = 3;
    if (has_header_imgurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->header_imgurl());
    }

    // optional string sign = 4;
    if (has_sign()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->sign());
    }

    // optional string voiceurl = 11;
    if (has_voiceurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->voiceurl());
    }

    // optional uint32 header_imgid = 2;
    if (has_header_imgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->header_imgid());
    }

    // optional uint32 sex = 5;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sex());
    }

    // optional uint32 area_code = 6;
    if (has_area_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->area_code());
    }

    // optional uint32 age = 7;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->age());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional uint32 following_num = 8;
    if (has_following_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->following_num());
    }

    // optional uint32 followed_num = 9;
    if (has_followed_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->followed_num());
    }

    // optional uint32 viewed_num = 10;
    if (has_viewed_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->viewed_num());
    }

    // optional uint32 voice_playernum = 12;
    if (has_voice_playernum()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->voice_playernum());
    }

    // optional uint32 next_change_account_ts = 13;
    if (has_next_change_account_ts()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->next_change_account_ts());
    }

    // optional uint32 level = 14;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 already_followed = 15;
    if (has_already_followed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->already_followed());
    }

    // optional uint32 state = 16;
    if (has_state()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MainPageInfoMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.MainPageInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MainPageInfoMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MainPageInfoMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.MainPageInfoMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.MainPageInfoMsg)
    MergeFrom(*source);
  }
}

void MainPageInfoMsg::MergeFrom(const MainPageInfoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.MainPageInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_account()) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (from.has_header_imgurl()) {
      set_has_header_imgurl();
      header_imgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.header_imgurl_);
    }
    if (from.has_sign()) {
      set_has_sign();
      sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
    }
    if (from.has_voiceurl()) {
      set_has_voiceurl();
      voiceurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.voiceurl_);
    }
    if (from.has_header_imgid()) {
      set_header_imgid(from.header_imgid());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_area_code()) {
      set_area_code(from.area_code());
    }
    if (from.has_age()) {
      set_age(from.age());
    }
  }
  if (from._has_bits_[8 / 32] & 65280u) {
    if (from.has_following_num()) {
      set_following_num(from.following_num());
    }
    if (from.has_followed_num()) {
      set_followed_num(from.followed_num());
    }
    if (from.has_viewed_num()) {
      set_viewed_num(from.viewed_num());
    }
    if (from.has_voice_playernum()) {
      set_voice_playernum(from.voice_playernum());
    }
    if (from.has_next_change_account_ts()) {
      set_next_change_account_ts(from.next_change_account_ts());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_already_followed()) {
      set_already_followed(from.already_followed());
    }
    if (from.has_state()) {
      set_state(from.state());
    }
  }
}

void MainPageInfoMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.MainPageInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MainPageInfoMsg::CopyFrom(const MainPageInfoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.MainPageInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MainPageInfoMsg::IsInitialized() const {
  return true;
}

void MainPageInfoMsg::Swap(MainPageInfoMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MainPageInfoMsg::InternalSwap(MainPageInfoMsg* other) {
  account_.Swap(&other->account_);
  header_imgurl_.Swap(&other->header_imgurl_);
  sign_.Swap(&other->sign_);
  voiceurl_.Swap(&other->voiceurl_);
  std::swap(header_imgid_, other->header_imgid_);
  std::swap(sex_, other->sex_);
  std::swap(area_code_, other->area_code_);
  std::swap(age_, other->age_);
  std::swap(following_num_, other->following_num_);
  std::swap(followed_num_, other->followed_num_);
  std::swap(viewed_num_, other->viewed_num_);
  std::swap(voice_playernum_, other->voice_playernum_);
  std::swap(next_change_account_ts_, other->next_change_account_ts_);
  std::swap(level_, other->level_);
  std::swap(already_followed_, other->already_followed_);
  std::swap(state_, other->state_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MainPageInfoMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MainPageInfoMsg

// optional string account = 1;
bool MainPageInfoMsg::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MainPageInfoMsg::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void MainPageInfoMsg::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void MainPageInfoMsg::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& MainPageInfoMsg::account() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.account)
  return account_.GetNoArena();
}
void MainPageInfoMsg::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.account)
}
#if LANG_CXX11
void MainPageInfoMsg::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.MainPageInfoMsg.account)
}
#endif
void MainPageInfoMsg::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.MainPageInfoMsg.account)
}
void MainPageInfoMsg::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.MainPageInfoMsg.account)
}
::std::string* MainPageInfoMsg::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:plane.MainPageInfoMsg.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MainPageInfoMsg::release_account() {
  // @@protoc_insertion_point(field_release:plane.MainPageInfoMsg.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MainPageInfoMsg::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:plane.MainPageInfoMsg.account)
}

// optional uint32 header_imgid = 2;
bool MainPageInfoMsg::has_header_imgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void MainPageInfoMsg::set_has_header_imgid() {
  _has_bits_[0] |= 0x00000010u;
}
void MainPageInfoMsg::clear_has_header_imgid() {
  _has_bits_[0] &= ~0x00000010u;
}
void MainPageInfoMsg::clear_header_imgid() {
  header_imgid_ = 0u;
  clear_has_header_imgid();
}
::google::protobuf::uint32 MainPageInfoMsg::header_imgid() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.header_imgid)
  return header_imgid_;
}
void MainPageInfoMsg::set_header_imgid(::google::protobuf::uint32 value) {
  set_has_header_imgid();
  header_imgid_ = value;
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.header_imgid)
}

// optional string header_imgurl = 3;
bool MainPageInfoMsg::has_header_imgurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MainPageInfoMsg::set_has_header_imgurl() {
  _has_bits_[0] |= 0x00000002u;
}
void MainPageInfoMsg::clear_has_header_imgurl() {
  _has_bits_[0] &= ~0x00000002u;
}
void MainPageInfoMsg::clear_header_imgurl() {
  header_imgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_header_imgurl();
}
const ::std::string& MainPageInfoMsg::header_imgurl() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.header_imgurl)
  return header_imgurl_.GetNoArena();
}
void MainPageInfoMsg::set_header_imgurl(const ::std::string& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.header_imgurl)
}
#if LANG_CXX11
void MainPageInfoMsg::set_header_imgurl(::std::string&& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.MainPageInfoMsg.header_imgurl)
}
#endif
void MainPageInfoMsg::set_header_imgurl(const char* value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.MainPageInfoMsg.header_imgurl)
}
void MainPageInfoMsg::set_header_imgurl(const char* value, size_t size) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.MainPageInfoMsg.header_imgurl)
}
::std::string* MainPageInfoMsg::mutable_header_imgurl() {
  set_has_header_imgurl();
  // @@protoc_insertion_point(field_mutable:plane.MainPageInfoMsg.header_imgurl)
  return header_imgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MainPageInfoMsg::release_header_imgurl() {
  // @@protoc_insertion_point(field_release:plane.MainPageInfoMsg.header_imgurl)
  clear_has_header_imgurl();
  return header_imgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MainPageInfoMsg::set_allocated_header_imgurl(::std::string* header_imgurl) {
  if (header_imgurl != NULL) {
    set_has_header_imgurl();
  } else {
    clear_has_header_imgurl();
  }
  header_imgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header_imgurl);
  // @@protoc_insertion_point(field_set_allocated:plane.MainPageInfoMsg.header_imgurl)
}

// optional string sign = 4;
bool MainPageInfoMsg::has_sign() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void MainPageInfoMsg::set_has_sign() {
  _has_bits_[0] |= 0x00000004u;
}
void MainPageInfoMsg::clear_has_sign() {
  _has_bits_[0] &= ~0x00000004u;
}
void MainPageInfoMsg::clear_sign() {
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sign();
}
const ::std::string& MainPageInfoMsg::sign() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.sign)
  return sign_.GetNoArena();
}
void MainPageInfoMsg::set_sign(const ::std::string& value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.sign)
}
#if LANG_CXX11
void MainPageInfoMsg::set_sign(::std::string&& value) {
  set_has_sign();
  sign_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.MainPageInfoMsg.sign)
}
#endif
void MainPageInfoMsg::set_sign(const char* value) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.MainPageInfoMsg.sign)
}
void MainPageInfoMsg::set_sign(const char* value, size_t size) {
  set_has_sign();
  sign_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.MainPageInfoMsg.sign)
}
::std::string* MainPageInfoMsg::mutable_sign() {
  set_has_sign();
  // @@protoc_insertion_point(field_mutable:plane.MainPageInfoMsg.sign)
  return sign_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MainPageInfoMsg::release_sign() {
  // @@protoc_insertion_point(field_release:plane.MainPageInfoMsg.sign)
  clear_has_sign();
  return sign_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MainPageInfoMsg::set_allocated_sign(::std::string* sign) {
  if (sign != NULL) {
    set_has_sign();
  } else {
    clear_has_sign();
  }
  sign_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sign);
  // @@protoc_insertion_point(field_set_allocated:plane.MainPageInfoMsg.sign)
}

// optional uint32 sex = 5;
bool MainPageInfoMsg::has_sex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void MainPageInfoMsg::set_has_sex() {
  _has_bits_[0] |= 0x00000020u;
}
void MainPageInfoMsg::clear_has_sex() {
  _has_bits_[0] &= ~0x00000020u;
}
void MainPageInfoMsg::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
::google::protobuf::uint32 MainPageInfoMsg::sex() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.sex)
  return sex_;
}
void MainPageInfoMsg::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.sex)
}

// optional uint32 area_code = 6;
bool MainPageInfoMsg::has_area_code() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void MainPageInfoMsg::set_has_area_code() {
  _has_bits_[0] |= 0x00000040u;
}
void MainPageInfoMsg::clear_has_area_code() {
  _has_bits_[0] &= ~0x00000040u;
}
void MainPageInfoMsg::clear_area_code() {
  area_code_ = 0u;
  clear_has_area_code();
}
::google::protobuf::uint32 MainPageInfoMsg::area_code() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.area_code)
  return area_code_;
}
void MainPageInfoMsg::set_area_code(::google::protobuf::uint32 value) {
  set_has_area_code();
  area_code_ = value;
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.area_code)
}

// optional uint32 age = 7;
bool MainPageInfoMsg::has_age() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void MainPageInfoMsg::set_has_age() {
  _has_bits_[0] |= 0x00000080u;
}
void MainPageInfoMsg::clear_has_age() {
  _has_bits_[0] &= ~0x00000080u;
}
void MainPageInfoMsg::clear_age() {
  age_ = 0u;
  clear_has_age();
}
::google::protobuf::uint32 MainPageInfoMsg::age() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.age)
  return age_;
}
void MainPageInfoMsg::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.age)
}

// optional uint32 following_num = 8;
bool MainPageInfoMsg::has_following_num() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void MainPageInfoMsg::set_has_following_num() {
  _has_bits_[0] |= 0x00000100u;
}
void MainPageInfoMsg::clear_has_following_num() {
  _has_bits_[0] &= ~0x00000100u;
}
void MainPageInfoMsg::clear_following_num() {
  following_num_ = 0u;
  clear_has_following_num();
}
::google::protobuf::uint32 MainPageInfoMsg::following_num() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.following_num)
  return following_num_;
}
void MainPageInfoMsg::set_following_num(::google::protobuf::uint32 value) {
  set_has_following_num();
  following_num_ = value;
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.following_num)
}

// optional uint32 followed_num = 9;
bool MainPageInfoMsg::has_followed_num() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void MainPageInfoMsg::set_has_followed_num() {
  _has_bits_[0] |= 0x00000200u;
}
void MainPageInfoMsg::clear_has_followed_num() {
  _has_bits_[0] &= ~0x00000200u;
}
void MainPageInfoMsg::clear_followed_num() {
  followed_num_ = 0u;
  clear_has_followed_num();
}
::google::protobuf::uint32 MainPageInfoMsg::followed_num() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.followed_num)
  return followed_num_;
}
void MainPageInfoMsg::set_followed_num(::google::protobuf::uint32 value) {
  set_has_followed_num();
  followed_num_ = value;
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.followed_num)
}

// optional uint32 viewed_num = 10;
bool MainPageInfoMsg::has_viewed_num() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void MainPageInfoMsg::set_has_viewed_num() {
  _has_bits_[0] |= 0x00000400u;
}
void MainPageInfoMsg::clear_has_viewed_num() {
  _has_bits_[0] &= ~0x00000400u;
}
void MainPageInfoMsg::clear_viewed_num() {
  viewed_num_ = 0u;
  clear_has_viewed_num();
}
::google::protobuf::uint32 MainPageInfoMsg::viewed_num() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.viewed_num)
  return viewed_num_;
}
void MainPageInfoMsg::set_viewed_num(::google::protobuf::uint32 value) {
  set_has_viewed_num();
  viewed_num_ = value;
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.viewed_num)
}

// optional string voiceurl = 11;
bool MainPageInfoMsg::has_voiceurl() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void MainPageInfoMsg::set_has_voiceurl() {
  _has_bits_[0] |= 0x00000008u;
}
void MainPageInfoMsg::clear_has_voiceurl() {
  _has_bits_[0] &= ~0x00000008u;
}
void MainPageInfoMsg::clear_voiceurl() {
  voiceurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voiceurl();
}
const ::std::string& MainPageInfoMsg::voiceurl() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.voiceurl)
  return voiceurl_.GetNoArena();
}
void MainPageInfoMsg::set_voiceurl(const ::std::string& value) {
  set_has_voiceurl();
  voiceurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.voiceurl)
}
#if LANG_CXX11
void MainPageInfoMsg::set_voiceurl(::std::string&& value) {
  set_has_voiceurl();
  voiceurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.MainPageInfoMsg.voiceurl)
}
#endif
void MainPageInfoMsg::set_voiceurl(const char* value) {
  set_has_voiceurl();
  voiceurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.MainPageInfoMsg.voiceurl)
}
void MainPageInfoMsg::set_voiceurl(const char* value, size_t size) {
  set_has_voiceurl();
  voiceurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.MainPageInfoMsg.voiceurl)
}
::std::string* MainPageInfoMsg::mutable_voiceurl() {
  set_has_voiceurl();
  // @@protoc_insertion_point(field_mutable:plane.MainPageInfoMsg.voiceurl)
  return voiceurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MainPageInfoMsg::release_voiceurl() {
  // @@protoc_insertion_point(field_release:plane.MainPageInfoMsg.voiceurl)
  clear_has_voiceurl();
  return voiceurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MainPageInfoMsg::set_allocated_voiceurl(::std::string* voiceurl) {
  if (voiceurl != NULL) {
    set_has_voiceurl();
  } else {
    clear_has_voiceurl();
  }
  voiceurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voiceurl);
  // @@protoc_insertion_point(field_set_allocated:plane.MainPageInfoMsg.voiceurl)
}

// optional uint32 voice_playernum = 12;
bool MainPageInfoMsg::has_voice_playernum() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void MainPageInfoMsg::set_has_voice_playernum() {
  _has_bits_[0] |= 0x00000800u;
}
void MainPageInfoMsg::clear_has_voice_playernum() {
  _has_bits_[0] &= ~0x00000800u;
}
void MainPageInfoMsg::clear_voice_playernum() {
  voice_playernum_ = 0u;
  clear_has_voice_playernum();
}
::google::protobuf::uint32 MainPageInfoMsg::voice_playernum() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.voice_playernum)
  return voice_playernum_;
}
void MainPageInfoMsg::set_voice_playernum(::google::protobuf::uint32 value) {
  set_has_voice_playernum();
  voice_playernum_ = value;
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.voice_playernum)
}

// optional uint32 next_change_account_ts = 13;
bool MainPageInfoMsg::has_next_change_account_ts() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void MainPageInfoMsg::set_has_next_change_account_ts() {
  _has_bits_[0] |= 0x00001000u;
}
void MainPageInfoMsg::clear_has_next_change_account_ts() {
  _has_bits_[0] &= ~0x00001000u;
}
void MainPageInfoMsg::clear_next_change_account_ts() {
  next_change_account_ts_ = 0u;
  clear_has_next_change_account_ts();
}
::google::protobuf::uint32 MainPageInfoMsg::next_change_account_ts() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.next_change_account_ts)
  return next_change_account_ts_;
}
void MainPageInfoMsg::set_next_change_account_ts(::google::protobuf::uint32 value) {
  set_has_next_change_account_ts();
  next_change_account_ts_ = value;
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.next_change_account_ts)
}

// optional uint32 level = 14;
bool MainPageInfoMsg::has_level() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void MainPageInfoMsg::set_has_level() {
  _has_bits_[0] |= 0x00002000u;
}
void MainPageInfoMsg::clear_has_level() {
  _has_bits_[0] &= ~0x00002000u;
}
void MainPageInfoMsg::clear_level() {
  level_ = 0u;
  clear_has_level();
}
::google::protobuf::uint32 MainPageInfoMsg::level() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.level)
  return level_;
}
void MainPageInfoMsg::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.level)
}

// optional uint32 already_followed = 15;
bool MainPageInfoMsg::has_already_followed() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void MainPageInfoMsg::set_has_already_followed() {
  _has_bits_[0] |= 0x00004000u;
}
void MainPageInfoMsg::clear_has_already_followed() {
  _has_bits_[0] &= ~0x00004000u;
}
void MainPageInfoMsg::clear_already_followed() {
  already_followed_ = 0u;
  clear_has_already_followed();
}
::google::protobuf::uint32 MainPageInfoMsg::already_followed() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.already_followed)
  return already_followed_;
}
void MainPageInfoMsg::set_already_followed(::google::protobuf::uint32 value) {
  set_has_already_followed();
  already_followed_ = value;
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.already_followed)
}

// optional uint32 state = 16;
bool MainPageInfoMsg::has_state() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void MainPageInfoMsg::set_has_state() {
  _has_bits_[0] |= 0x00008000u;
}
void MainPageInfoMsg::clear_has_state() {
  _has_bits_[0] &= ~0x00008000u;
}
void MainPageInfoMsg::clear_state() {
  state_ = 0u;
  clear_has_state();
}
::google::protobuf::uint32 MainPageInfoMsg::state() const {
  // @@protoc_insertion_point(field_get:plane.MainPageInfoMsg.state)
  return state_;
}
void MainPageInfoMsg::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:plane.MainPageInfoMsg.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImgIDMsg::kImgidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImgIDMsg::ImgIDMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.ImgIDMsg)
}
ImgIDMsg::ImgIDMsg(const ImgIDMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imgid_ = from.imgid_;
  // @@protoc_insertion_point(copy_constructor:plane.ImgIDMsg)
}

void ImgIDMsg::SharedCtor() {
  _cached_size_ = 0;
  imgid_ = 0u;
}

ImgIDMsg::~ImgIDMsg() {
  // @@protoc_insertion_point(destructor:plane.ImgIDMsg)
  SharedDtor();
}

void ImgIDMsg::SharedDtor() {
}

void ImgIDMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImgIDMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[5].descriptor;
}

const ImgIDMsg& ImgIDMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

ImgIDMsg* ImgIDMsg::New(::google::protobuf::Arena* arena) const {
  ImgIDMsg* n = new ImgIDMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImgIDMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.ImgIDMsg)
  imgid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ImgIDMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.ImgIDMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 imgid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_imgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.ImgIDMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.ImgIDMsg)
  return false;
#undef DO_
}

void ImgIDMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.ImgIDMsg)
  // optional uint32 imgid = 1;
  if (has_imgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->imgid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.ImgIDMsg)
}

::google::protobuf::uint8* ImgIDMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.ImgIDMsg)
  // optional uint32 imgid = 1;
  if (has_imgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->imgid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.ImgIDMsg)
  return target;
}

size_t ImgIDMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.ImgIDMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 imgid = 1;
  if (has_imgid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->imgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImgIDMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.ImgIDMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ImgIDMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImgIDMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.ImgIDMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.ImgIDMsg)
    MergeFrom(*source);
  }
}

void ImgIDMsg::MergeFrom(const ImgIDMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.ImgIDMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_imgid()) {
    set_imgid(from.imgid());
  }
}

void ImgIDMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.ImgIDMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImgIDMsg::CopyFrom(const ImgIDMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.ImgIDMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImgIDMsg::IsInitialized() const {
  return true;
}

void ImgIDMsg::Swap(ImgIDMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImgIDMsg::InternalSwap(ImgIDMsg* other) {
  std::swap(imgid_, other->imgid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImgIDMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImgIDMsg

// optional uint32 imgid = 1;
bool ImgIDMsg::has_imgid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ImgIDMsg::set_has_imgid() {
  _has_bits_[0] |= 0x00000001u;
}
void ImgIDMsg::clear_has_imgid() {
  _has_bits_[0] &= ~0x00000001u;
}
void ImgIDMsg::clear_imgid() {
  imgid_ = 0u;
  clear_has_imgid();
}
::google::protobuf::uint32 ImgIDMsg::imgid() const {
  // @@protoc_insertion_point(field_get:plane.ImgIDMsg.imgid)
  return imgid_;
}
void ImgIDMsg::set_imgid(::google::protobuf::uint32 value) {
  set_has_imgid();
  imgid_ = value;
  // @@protoc_insertion_point(field_set:plane.ImgIDMsg.imgid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneFollowData::kAccountFieldNumber;
const int OneFollowData::kHeaderImgidFieldNumber;
const int OneFollowData::kHeaderImgurlFieldNumber;
const int OneFollowData::kSexFieldNumber;
const int OneFollowData::kAreaCodeFieldNumber;
const int OneFollowData::kAgeFieldNumber;
const int OneFollowData::kAlreadyFollowFieldNumber;
const int OneFollowData::kLevelFieldNumber;
const int OneFollowData::kStateFieldNumber;
const int OneFollowData::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneFollowData::OneFollowData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OneFollowData)
}
OneFollowData::OneFollowData(const OneFollowData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  header_imgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_header_imgurl()) {
    header_imgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.header_imgurl_);
  }
  ::memcpy(&header_imgid_, &from.header_imgid_,
    reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&header_imgid_) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:plane.OneFollowData)
}

void OneFollowData::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_imgurl_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&header_imgid_, 0, reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&header_imgid_) + sizeof(uid_));
}

OneFollowData::~OneFollowData() {
  // @@protoc_insertion_point(destructor:plane.OneFollowData)
  SharedDtor();
}

void OneFollowData::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  header_imgurl_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OneFollowData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneFollowData::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[6].descriptor;
}

const OneFollowData& OneFollowData::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneFollowData* OneFollowData::New(::google::protobuf::Arena* arena) const {
  OneFollowData* n = new OneFollowData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneFollowData::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OneFollowData)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_account()) {
      GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*account_.UnsafeRawStringPointer())->clear();
    }
    if (has_header_imgurl()) {
      GOOGLE_DCHECK(!header_imgurl_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*header_imgurl_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 252u) {
    ::memset(&header_imgid_, 0, reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&header_imgid_) + sizeof(level_));
  }
  if (_has_bits_[8 / 32] & 768u) {
    ::memset(&state_, 0, reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&state_) + sizeof(uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneFollowData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OneFollowData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.OneFollowData.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 header_imgid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_header_imgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &header_imgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string header_imgurl = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_header_imgurl()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->header_imgurl().data(), this->header_imgurl().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.OneFollowData.header_imgurl");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sex = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 area_code = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u)) {
          set_has_area_code();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &area_code_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 age = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(48u)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 already_follow = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(56u)) {
          set_has_already_follow();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &already_follow_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(64u)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 state = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(72u)) {
          set_has_state();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 uid = 10;
      case 10: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(80u)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OneFollowData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OneFollowData)
  return false;
#undef DO_
}

void OneFollowData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OneFollowData)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneFollowData.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional uint32 header_imgid = 2;
  if (has_header_imgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->header_imgid(), output);
  }

  // optional string header_imgurl = 3;
  if (has_header_imgurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->header_imgurl().data(), this->header_imgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneFollowData.header_imgurl");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->header_imgurl(), output);
  }

  // optional uint32 sex = 4;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->sex(), output);
  }

  // optional uint32 area_code = 5;
  if (has_area_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->area_code(), output);
  }

  // optional uint32 age = 6;
  if (has_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->age(), output);
  }

  // optional uint32 already_follow = 7;
  if (has_already_follow()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->already_follow(), output);
  }

  // optional uint32 level = 8;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->level(), output);
  }

  // optional uint32 state = 9;
  if (has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->state(), output);
  }

  // optional uint32 uid = 10;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OneFollowData)
}

::google::protobuf::uint8* OneFollowData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OneFollowData)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneFollowData.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional uint32 header_imgid = 2;
  if (has_header_imgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->header_imgid(), target);
  }

  // optional string header_imgurl = 3;
  if (has_header_imgurl()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->header_imgurl().data(), this->header_imgurl().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneFollowData.header_imgurl");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->header_imgurl(), target);
  }

  // optional uint32 sex = 4;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->sex(), target);
  }

  // optional uint32 area_code = 5;
  if (has_area_code()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->area_code(), target);
  }

  // optional uint32 age = 6;
  if (has_age()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->age(), target);
  }

  // optional uint32 already_follow = 7;
  if (has_already_follow()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->already_follow(), target);
  }

  // optional uint32 level = 8;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->level(), target);
  }

  // optional uint32 state = 9;
  if (has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->state(), target);
  }

  // optional uint32 uid = 10;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OneFollowData)
  return target;
}

size_t OneFollowData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OneFollowData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional string header_imgurl = 3;
    if (has_header_imgurl()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->header_imgurl());
    }

    // optional uint32 header_imgid = 2;
    if (has_header_imgid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->header_imgid());
    }

    // optional uint32 sex = 4;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sex());
    }

    // optional uint32 area_code = 5;
    if (has_area_code()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->area_code());
    }

    // optional uint32 age = 6;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->age());
    }

    // optional uint32 already_follow = 7;
    if (has_already_follow()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->already_follow());
    }

    // optional uint32 level = 8;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

  }
  if (_has_bits_[8 / 32] & 768u) {
    // optional uint32 state = 9;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->state());
    }

    // optional uint32 uid = 10;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneFollowData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OneFollowData)
  GOOGLE_DCHECK_NE(&from, this);
  const OneFollowData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneFollowData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OneFollowData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OneFollowData)
    MergeFrom(*source);
  }
}

void OneFollowData::MergeFrom(const OneFollowData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OneFollowData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_account()) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (from.has_header_imgurl()) {
      set_has_header_imgurl();
      header_imgurl_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.header_imgurl_);
    }
    if (from.has_header_imgid()) {
      set_header_imgid(from.header_imgid());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_area_code()) {
      set_area_code(from.area_code());
    }
    if (from.has_age()) {
      set_age(from.age());
    }
    if (from.has_already_follow()) {
      set_already_follow(from.already_follow());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
  }
  if (from._has_bits_[8 / 32] & 768u) {
    if (from.has_state()) {
      set_state(from.state());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
}

void OneFollowData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OneFollowData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneFollowData::CopyFrom(const OneFollowData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OneFollowData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneFollowData::IsInitialized() const {
  return true;
}

void OneFollowData::Swap(OneFollowData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneFollowData::InternalSwap(OneFollowData* other) {
  account_.Swap(&other->account_);
  header_imgurl_.Swap(&other->header_imgurl_);
  std::swap(header_imgid_, other->header_imgid_);
  std::swap(sex_, other->sex_);
  std::swap(area_code_, other->area_code_);
  std::swap(age_, other->age_);
  std::swap(already_follow_, other->already_follow_);
  std::swap(level_, other->level_);
  std::swap(state_, other->state_);
  std::swap(uid_, other->uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneFollowData::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneFollowData

// optional string account = 1;
bool OneFollowData::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneFollowData::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void OneFollowData::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneFollowData::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& OneFollowData::account() const {
  // @@protoc_insertion_point(field_get:plane.OneFollowData.account)
  return account_.GetNoArena();
}
void OneFollowData::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneFollowData.account)
}
#if LANG_CXX11
void OneFollowData::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneFollowData.account)
}
#endif
void OneFollowData::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneFollowData.account)
}
void OneFollowData::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneFollowData.account)
}
::std::string* OneFollowData::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:plane.OneFollowData.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OneFollowData::release_account() {
  // @@protoc_insertion_point(field_release:plane.OneFollowData.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OneFollowData::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:plane.OneFollowData.account)
}

// optional uint32 header_imgid = 2;
bool OneFollowData::has_header_imgid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OneFollowData::set_has_header_imgid() {
  _has_bits_[0] |= 0x00000004u;
}
void OneFollowData::clear_has_header_imgid() {
  _has_bits_[0] &= ~0x00000004u;
}
void OneFollowData::clear_header_imgid() {
  header_imgid_ = 0u;
  clear_has_header_imgid();
}
::google::protobuf::uint32 OneFollowData::header_imgid() const {
  // @@protoc_insertion_point(field_get:plane.OneFollowData.header_imgid)
  return header_imgid_;
}
void OneFollowData::set_header_imgid(::google::protobuf::uint32 value) {
  set_has_header_imgid();
  header_imgid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFollowData.header_imgid)
}

// optional string header_imgurl = 3;
bool OneFollowData::has_header_imgurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OneFollowData::set_has_header_imgurl() {
  _has_bits_[0] |= 0x00000002u;
}
void OneFollowData::clear_has_header_imgurl() {
  _has_bits_[0] &= ~0x00000002u;
}
void OneFollowData::clear_header_imgurl() {
  header_imgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_header_imgurl();
}
const ::std::string& OneFollowData::header_imgurl() const {
  // @@protoc_insertion_point(field_get:plane.OneFollowData.header_imgurl)
  return header_imgurl_.GetNoArena();
}
void OneFollowData::set_header_imgurl(const ::std::string& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneFollowData.header_imgurl)
}
#if LANG_CXX11
void OneFollowData::set_header_imgurl(::std::string&& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneFollowData.header_imgurl)
}
#endif
void OneFollowData::set_header_imgurl(const char* value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneFollowData.header_imgurl)
}
void OneFollowData::set_header_imgurl(const char* value, size_t size) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneFollowData.header_imgurl)
}
::std::string* OneFollowData::mutable_header_imgurl() {
  set_has_header_imgurl();
  // @@protoc_insertion_point(field_mutable:plane.OneFollowData.header_imgurl)
  return header_imgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OneFollowData::release_header_imgurl() {
  // @@protoc_insertion_point(field_release:plane.OneFollowData.header_imgurl)
  clear_has_header_imgurl();
  return header_imgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OneFollowData::set_allocated_header_imgurl(::std::string* header_imgurl) {
  if (header_imgurl != NULL) {
    set_has_header_imgurl();
  } else {
    clear_has_header_imgurl();
  }
  header_imgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header_imgurl);
  // @@protoc_insertion_point(field_set_allocated:plane.OneFollowData.header_imgurl)
}

// optional uint32 sex = 4;
bool OneFollowData::has_sex() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OneFollowData::set_has_sex() {
  _has_bits_[0] |= 0x00000008u;
}
void OneFollowData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000008u;
}
void OneFollowData::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
::google::protobuf::uint32 OneFollowData::sex() const {
  // @@protoc_insertion_point(field_get:plane.OneFollowData.sex)
  return sex_;
}
void OneFollowData::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFollowData.sex)
}

// optional uint32 area_code = 5;
bool OneFollowData::has_area_code() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OneFollowData::set_has_area_code() {
  _has_bits_[0] |= 0x00000010u;
}
void OneFollowData::clear_has_area_code() {
  _has_bits_[0] &= ~0x00000010u;
}
void OneFollowData::clear_area_code() {
  area_code_ = 0u;
  clear_has_area_code();
}
::google::protobuf::uint32 OneFollowData::area_code() const {
  // @@protoc_insertion_point(field_get:plane.OneFollowData.area_code)
  return area_code_;
}
void OneFollowData::set_area_code(::google::protobuf::uint32 value) {
  set_has_area_code();
  area_code_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFollowData.area_code)
}

// optional uint32 age = 6;
bool OneFollowData::has_age() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void OneFollowData::set_has_age() {
  _has_bits_[0] |= 0x00000020u;
}
void OneFollowData::clear_has_age() {
  _has_bits_[0] &= ~0x00000020u;
}
void OneFollowData::clear_age() {
  age_ = 0u;
  clear_has_age();
}
::google::protobuf::uint32 OneFollowData::age() const {
  // @@protoc_insertion_point(field_get:plane.OneFollowData.age)
  return age_;
}
void OneFollowData::set_age(::google::protobuf::uint32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFollowData.age)
}

// optional uint32 already_follow = 7;
bool OneFollowData::has_already_follow() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void OneFollowData::set_has_already_follow() {
  _has_bits_[0] |= 0x00000040u;
}
void OneFollowData::clear_has_already_follow() {
  _has_bits_[0] &= ~0x00000040u;
}
void OneFollowData::clear_already_follow() {
  already_follow_ = 0u;
  clear_has_already_follow();
}
::google::protobuf::uint32 OneFollowData::already_follow() const {
  // @@protoc_insertion_point(field_get:plane.OneFollowData.already_follow)
  return already_follow_;
}
void OneFollowData::set_already_follow(::google::protobuf::uint32 value) {
  set_has_already_follow();
  already_follow_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFollowData.already_follow)
}

// optional uint32 level = 8;
bool OneFollowData::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void OneFollowData::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
void OneFollowData::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
void OneFollowData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
::google::protobuf::uint32 OneFollowData::level() const {
  // @@protoc_insertion_point(field_get:plane.OneFollowData.level)
  return level_;
}
void OneFollowData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFollowData.level)
}

// optional uint32 state = 9;
bool OneFollowData::has_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void OneFollowData::set_has_state() {
  _has_bits_[0] |= 0x00000100u;
}
void OneFollowData::clear_has_state() {
  _has_bits_[0] &= ~0x00000100u;
}
void OneFollowData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
::google::protobuf::uint32 OneFollowData::state() const {
  // @@protoc_insertion_point(field_get:plane.OneFollowData.state)
  return state_;
}
void OneFollowData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFollowData.state)
}

// optional uint32 uid = 10;
bool OneFollowData::has_uid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void OneFollowData::set_has_uid() {
  _has_bits_[0] |= 0x00000200u;
}
void OneFollowData::clear_has_uid() {
  _has_bits_[0] &= ~0x00000200u;
}
void OneFollowData::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
::google::protobuf::uint32 OneFollowData::uid() const {
  // @@protoc_insertion_point(field_get:plane.OneFollowData.uid)
  return uid_;
}
void OneFollowData::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFollowData.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnePageFollowingDataMsg::kTotalNumFieldNumber;
const int OnePageFollowingDataMsg::kPageNumFieldNumber;
const int OnePageFollowingDataMsg::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnePageFollowingDataMsg::OnePageFollowingDataMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OnePageFollowingDataMsg)
}
OnePageFollowingDataMsg::OnePageFollowingDataMsg(const OnePageFollowingDataMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      datas_(from.datas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_num_, &from.total_num_,
    reinterpret_cast<char*>(&page_num_) -
    reinterpret_cast<char*>(&total_num_) + sizeof(page_num_));
  // @@protoc_insertion_point(copy_constructor:plane.OnePageFollowingDataMsg)
}

void OnePageFollowingDataMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&total_num_, 0, reinterpret_cast<char*>(&page_num_) -
    reinterpret_cast<char*>(&total_num_) + sizeof(page_num_));
}

OnePageFollowingDataMsg::~OnePageFollowingDataMsg() {
  // @@protoc_insertion_point(destructor:plane.OnePageFollowingDataMsg)
  SharedDtor();
}

void OnePageFollowingDataMsg::SharedDtor() {
}

void OnePageFollowingDataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnePageFollowingDataMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[7].descriptor;
}

const OnePageFollowingDataMsg& OnePageFollowingDataMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

OnePageFollowingDataMsg* OnePageFollowingDataMsg::New(::google::protobuf::Arena* arena) const {
  OnePageFollowingDataMsg* n = new OnePageFollowingDataMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnePageFollowingDataMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OnePageFollowingDataMsg)
  datas_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&total_num_, 0, reinterpret_cast<char*>(&page_num_) -
      reinterpret_cast<char*>(&total_num_) + sizeof(page_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OnePageFollowingDataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OnePageFollowingDataMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 total_num = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_total_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 page_num = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_page_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .plane.OneFollowData datas = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OnePageFollowingDataMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OnePageFollowingDataMsg)
  return false;
#undef DO_
}

void OnePageFollowingDataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OnePageFollowingDataMsg)
  // optional uint32 total_num = 1;
  if (has_total_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->total_num(), output);
  }

  // optional uint32 page_num = 2;
  if (has_page_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->page_num(), output);
  }

  // repeated .plane.OneFollowData datas = 3;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->datas(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OnePageFollowingDataMsg)
}

::google::protobuf::uint8* OnePageFollowingDataMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OnePageFollowingDataMsg)
  // optional uint32 total_num = 1;
  if (has_total_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->total_num(), target);
  }

  // optional uint32 page_num = 2;
  if (has_page_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->page_num(), target);
  }

  // repeated .plane.OneFollowData datas = 3;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->datas(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OnePageFollowingDataMsg)
  return target;
}

size_t OnePageFollowingDataMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OnePageFollowingDataMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OneFollowData datas = 3;
  {
    unsigned int count = this->datas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->datas(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_num = 1;
    if (has_total_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_num());
    }

    // optional uint32 page_num = 2;
    if (has_page_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnePageFollowingDataMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OnePageFollowingDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const OnePageFollowingDataMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnePageFollowingDataMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OnePageFollowingDataMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OnePageFollowingDataMsg)
    MergeFrom(*source);
  }
}

void OnePageFollowingDataMsg::MergeFrom(const OnePageFollowingDataMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OnePageFollowingDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datas_.MergeFrom(from.datas_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_total_num()) {
      set_total_num(from.total_num());
    }
    if (from.has_page_num()) {
      set_page_num(from.page_num());
    }
  }
}

void OnePageFollowingDataMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OnePageFollowingDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnePageFollowingDataMsg::CopyFrom(const OnePageFollowingDataMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OnePageFollowingDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnePageFollowingDataMsg::IsInitialized() const {
  return true;
}

void OnePageFollowingDataMsg::Swap(OnePageFollowingDataMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnePageFollowingDataMsg::InternalSwap(OnePageFollowingDataMsg* other) {
  datas_.UnsafeArenaSwap(&other->datas_);
  std::swap(total_num_, other->total_num_);
  std::swap(page_num_, other->page_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnePageFollowingDataMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnePageFollowingDataMsg

// optional uint32 total_num = 1;
bool OnePageFollowingDataMsg::has_total_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OnePageFollowingDataMsg::set_has_total_num() {
  _has_bits_[0] |= 0x00000001u;
}
void OnePageFollowingDataMsg::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void OnePageFollowingDataMsg::clear_total_num() {
  total_num_ = 0u;
  clear_has_total_num();
}
::google::protobuf::uint32 OnePageFollowingDataMsg::total_num() const {
  // @@protoc_insertion_point(field_get:plane.OnePageFollowingDataMsg.total_num)
  return total_num_;
}
void OnePageFollowingDataMsg::set_total_num(::google::protobuf::uint32 value) {
  set_has_total_num();
  total_num_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePageFollowingDataMsg.total_num)
}

// optional uint32 page_num = 2;
bool OnePageFollowingDataMsg::has_page_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OnePageFollowingDataMsg::set_has_page_num() {
  _has_bits_[0] |= 0x00000002u;
}
void OnePageFollowingDataMsg::clear_has_page_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void OnePageFollowingDataMsg::clear_page_num() {
  page_num_ = 0u;
  clear_has_page_num();
}
::google::protobuf::uint32 OnePageFollowingDataMsg::page_num() const {
  // @@protoc_insertion_point(field_get:plane.OnePageFollowingDataMsg.page_num)
  return page_num_;
}
void OnePageFollowingDataMsg::set_page_num(::google::protobuf::uint32 value) {
  set_has_page_num();
  page_num_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePageFollowingDataMsg.page_num)
}

// repeated .plane.OneFollowData datas = 3;
int OnePageFollowingDataMsg::datas_size() const {
  return datas_.size();
}
void OnePageFollowingDataMsg::clear_datas() {
  datas_.Clear();
}
const ::plane::OneFollowData& OnePageFollowingDataMsg::datas(int index) const {
  // @@protoc_insertion_point(field_get:plane.OnePageFollowingDataMsg.datas)
  return datas_.Get(index);
}
::plane::OneFollowData* OnePageFollowingDataMsg::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:plane.OnePageFollowingDataMsg.datas)
  return datas_.Mutable(index);
}
::plane::OneFollowData* OnePageFollowingDataMsg::add_datas() {
  // @@protoc_insertion_point(field_add:plane.OnePageFollowingDataMsg.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneFollowData >*
OnePageFollowingDataMsg::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:plane.OnePageFollowingDataMsg.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneFollowData >&
OnePageFollowingDataMsg::datas() const {
  // @@protoc_insertion_point(field_list:plane.OnePageFollowingDataMsg.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnePageFollowedDataMsg::kTotalNumFieldNumber;
const int OnePageFollowedDataMsg::kPageNumFieldNumber;
const int OnePageFollowedDataMsg::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnePageFollowedDataMsg::OnePageFollowedDataMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OnePageFollowedDataMsg)
}
OnePageFollowedDataMsg::OnePageFollowedDataMsg(const OnePageFollowedDataMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      datas_(from.datas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&total_num_, &from.total_num_,
    reinterpret_cast<char*>(&page_num_) -
    reinterpret_cast<char*>(&total_num_) + sizeof(page_num_));
  // @@protoc_insertion_point(copy_constructor:plane.OnePageFollowedDataMsg)
}

void OnePageFollowedDataMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&total_num_, 0, reinterpret_cast<char*>(&page_num_) -
    reinterpret_cast<char*>(&total_num_) + sizeof(page_num_));
}

OnePageFollowedDataMsg::~OnePageFollowedDataMsg() {
  // @@protoc_insertion_point(destructor:plane.OnePageFollowedDataMsg)
  SharedDtor();
}

void OnePageFollowedDataMsg::SharedDtor() {
}

void OnePageFollowedDataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnePageFollowedDataMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[8].descriptor;
}

const OnePageFollowedDataMsg& OnePageFollowedDataMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

OnePageFollowedDataMsg* OnePageFollowedDataMsg::New(::google::protobuf::Arena* arena) const {
  OnePageFollowedDataMsg* n = new OnePageFollowedDataMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnePageFollowedDataMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OnePageFollowedDataMsg)
  datas_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&total_num_, 0, reinterpret_cast<char*>(&page_num_) -
      reinterpret_cast<char*>(&total_num_) + sizeof(page_num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OnePageFollowedDataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OnePageFollowedDataMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 total_num = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_total_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 page_num = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_page_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .plane.OneFollowData datas = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OnePageFollowedDataMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OnePageFollowedDataMsg)
  return false;
#undef DO_
}

void OnePageFollowedDataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OnePageFollowedDataMsg)
  // optional uint32 total_num = 1;
  if (has_total_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->total_num(), output);
  }

  // optional uint32 page_num = 2;
  if (has_page_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->page_num(), output);
  }

  // repeated .plane.OneFollowData datas = 3;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->datas(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OnePageFollowedDataMsg)
}

::google::protobuf::uint8* OnePageFollowedDataMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OnePageFollowedDataMsg)
  // optional uint32 total_num = 1;
  if (has_total_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->total_num(), target);
  }

  // optional uint32 page_num = 2;
  if (has_page_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->page_num(), target);
  }

  // repeated .plane.OneFollowData datas = 3;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->datas(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OnePageFollowedDataMsg)
  return target;
}

size_t OnePageFollowedDataMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OnePageFollowedDataMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OneFollowData datas = 3;
  {
    unsigned int count = this->datas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->datas(i));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 total_num = 1;
    if (has_total_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_num());
    }

    // optional uint32 page_num = 2;
    if (has_page_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnePageFollowedDataMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OnePageFollowedDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const OnePageFollowedDataMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnePageFollowedDataMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OnePageFollowedDataMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OnePageFollowedDataMsg)
    MergeFrom(*source);
  }
}

void OnePageFollowedDataMsg::MergeFrom(const OnePageFollowedDataMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OnePageFollowedDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datas_.MergeFrom(from.datas_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_total_num()) {
      set_total_num(from.total_num());
    }
    if (from.has_page_num()) {
      set_page_num(from.page_num());
    }
  }
}

void OnePageFollowedDataMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OnePageFollowedDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnePageFollowedDataMsg::CopyFrom(const OnePageFollowedDataMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OnePageFollowedDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnePageFollowedDataMsg::IsInitialized() const {
  return true;
}

void OnePageFollowedDataMsg::Swap(OnePageFollowedDataMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnePageFollowedDataMsg::InternalSwap(OnePageFollowedDataMsg* other) {
  datas_.UnsafeArenaSwap(&other->datas_);
  std::swap(total_num_, other->total_num_);
  std::swap(page_num_, other->page_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnePageFollowedDataMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnePageFollowedDataMsg

// optional uint32 total_num = 1;
bool OnePageFollowedDataMsg::has_total_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OnePageFollowedDataMsg::set_has_total_num() {
  _has_bits_[0] |= 0x00000001u;
}
void OnePageFollowedDataMsg::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000001u;
}
void OnePageFollowedDataMsg::clear_total_num() {
  total_num_ = 0u;
  clear_has_total_num();
}
::google::protobuf::uint32 OnePageFollowedDataMsg::total_num() const {
  // @@protoc_insertion_point(field_get:plane.OnePageFollowedDataMsg.total_num)
  return total_num_;
}
void OnePageFollowedDataMsg::set_total_num(::google::protobuf::uint32 value) {
  set_has_total_num();
  total_num_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePageFollowedDataMsg.total_num)
}

// optional uint32 page_num = 2;
bool OnePageFollowedDataMsg::has_page_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OnePageFollowedDataMsg::set_has_page_num() {
  _has_bits_[0] |= 0x00000002u;
}
void OnePageFollowedDataMsg::clear_has_page_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void OnePageFollowedDataMsg::clear_page_num() {
  page_num_ = 0u;
  clear_has_page_num();
}
::google::protobuf::uint32 OnePageFollowedDataMsg::page_num() const {
  // @@protoc_insertion_point(field_get:plane.OnePageFollowedDataMsg.page_num)
  return page_num_;
}
void OnePageFollowedDataMsg::set_page_num(::google::protobuf::uint32 value) {
  set_has_page_num();
  page_num_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePageFollowedDataMsg.page_num)
}

// repeated .plane.OneFollowData datas = 3;
int OnePageFollowedDataMsg::datas_size() const {
  return datas_.size();
}
void OnePageFollowedDataMsg::clear_datas() {
  datas_.Clear();
}
const ::plane::OneFollowData& OnePageFollowedDataMsg::datas(int index) const {
  // @@protoc_insertion_point(field_get:plane.OnePageFollowedDataMsg.datas)
  return datas_.Get(index);
}
::plane::OneFollowData* OnePageFollowedDataMsg::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:plane.OnePageFollowedDataMsg.datas)
  return datas_.Mutable(index);
}
::plane::OneFollowData* OnePageFollowedDataMsg::add_datas() {
  // @@protoc_insertion_point(field_add:plane.OnePageFollowedDataMsg.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneFollowData >*
OnePageFollowedDataMsg::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:plane.OnePageFollowedDataMsg.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneFollowData >&
OnePageFollowedDataMsg::datas() const {
  // @@protoc_insertion_point(field_list:plane.OnePageFollowedDataMsg.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SocialOpResultMsg::kRetcodeFieldNumber;
const int SocialOpResultMsg::kErrorStrFieldNumber;
const int SocialOpResultMsg::kNewAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SocialOpResultMsg::SocialOpResultMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.SocialOpResultMsg)
}
SocialOpResultMsg::SocialOpResultMsg(const SocialOpResultMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_str()) {
    error_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_str_);
  }
  new_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_new_account()) {
    new_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_account_);
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:plane.SocialOpResultMsg)
}

void SocialOpResultMsg::SharedCtor() {
  _cached_size_ = 0;
  error_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  retcode_ = 0u;
}

SocialOpResultMsg::~SocialOpResultMsg() {
  // @@protoc_insertion_point(destructor:plane.SocialOpResultMsg)
  SharedDtor();
}

void SocialOpResultMsg::SharedDtor() {
  error_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  new_account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SocialOpResultMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SocialOpResultMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[9].descriptor;
}

const SocialOpResultMsg& SocialOpResultMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SocialOpResultMsg* SocialOpResultMsg::New(::google::protobuf::Arena* arena) const {
  SocialOpResultMsg* n = new SocialOpResultMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SocialOpResultMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.SocialOpResultMsg)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_error_str()) {
      GOOGLE_DCHECK(!error_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*error_str_.UnsafeRawStringPointer())->clear();
    }
    if (has_new_account()) {
      GOOGLE_DCHECK(!new_account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*new_account_.UnsafeRawStringPointer())->clear();
    }
  }
  retcode_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SocialOpResultMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.SocialOpResultMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 retcode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_retcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error_str = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_str().data(), this->error_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.SocialOpResultMsg.error_str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string new_account = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_new_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->new_account().data(), this->new_account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.SocialOpResultMsg.new_account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.SocialOpResultMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.SocialOpResultMsg)
  return false;
#undef DO_
}

void SocialOpResultMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.SocialOpResultMsg)
  // optional uint32 retcode = 1;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional string error_str = 2;
  if (has_error_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_str().data(), this->error_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.SocialOpResultMsg.error_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_str(), output);
  }

  // optional string new_account = 3;
  if (has_new_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_account().data(), this->new_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.SocialOpResultMsg.new_account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->new_account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.SocialOpResultMsg)
}

::google::protobuf::uint8* SocialOpResultMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.SocialOpResultMsg)
  // optional uint32 retcode = 1;
  if (has_retcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional string error_str = 2;
  if (has_error_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_str().data(), this->error_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.SocialOpResultMsg.error_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_str(), target);
  }

  // optional string new_account = 3;
  if (has_new_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->new_account().data(), this->new_account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.SocialOpResultMsg.new_account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->new_account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.SocialOpResultMsg)
  return target;
}

size_t SocialOpResultMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.SocialOpResultMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string error_str = 2;
    if (has_error_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_str());
    }

    // optional string new_account = 3;
    if (has_new_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->new_account());
    }

    // optional uint32 retcode = 1;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->retcode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SocialOpResultMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.SocialOpResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SocialOpResultMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SocialOpResultMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.SocialOpResultMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.SocialOpResultMsg)
    MergeFrom(*source);
  }
}

void SocialOpResultMsg::MergeFrom(const SocialOpResultMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.SocialOpResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_error_str()) {
      set_has_error_str();
      error_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_str_);
    }
    if (from.has_new_account()) {
      set_has_new_account();
      new_account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.new_account_);
    }
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
}

void SocialOpResultMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.SocialOpResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SocialOpResultMsg::CopyFrom(const SocialOpResultMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.SocialOpResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SocialOpResultMsg::IsInitialized() const {
  return true;
}

void SocialOpResultMsg::Swap(SocialOpResultMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SocialOpResultMsg::InternalSwap(SocialOpResultMsg* other) {
  error_str_.Swap(&other->error_str_);
  new_account_.Swap(&other->new_account_);
  std::swap(retcode_, other->retcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SocialOpResultMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SocialOpResultMsg

// optional uint32 retcode = 1;
bool SocialOpResultMsg::has_retcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SocialOpResultMsg::set_has_retcode() {
  _has_bits_[0] |= 0x00000004u;
}
void SocialOpResultMsg::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000004u;
}
void SocialOpResultMsg::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
::google::protobuf::uint32 SocialOpResultMsg::retcode() const {
  // @@protoc_insertion_point(field_get:plane.SocialOpResultMsg.retcode)
  return retcode_;
}
void SocialOpResultMsg::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:plane.SocialOpResultMsg.retcode)
}

// optional string error_str = 2;
bool SocialOpResultMsg::has_error_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SocialOpResultMsg::set_has_error_str() {
  _has_bits_[0] |= 0x00000001u;
}
void SocialOpResultMsg::clear_has_error_str() {
  _has_bits_[0] &= ~0x00000001u;
}
void SocialOpResultMsg::clear_error_str() {
  error_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_str();
}
const ::std::string& SocialOpResultMsg::error_str() const {
  // @@protoc_insertion_point(field_get:plane.SocialOpResultMsg.error_str)
  return error_str_.GetNoArena();
}
void SocialOpResultMsg::set_error_str(const ::std::string& value) {
  set_has_error_str();
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.SocialOpResultMsg.error_str)
}
#if LANG_CXX11
void SocialOpResultMsg::set_error_str(::std::string&& value) {
  set_has_error_str();
  error_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.SocialOpResultMsg.error_str)
}
#endif
void SocialOpResultMsg::set_error_str(const char* value) {
  set_has_error_str();
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.SocialOpResultMsg.error_str)
}
void SocialOpResultMsg::set_error_str(const char* value, size_t size) {
  set_has_error_str();
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.SocialOpResultMsg.error_str)
}
::std::string* SocialOpResultMsg::mutable_error_str() {
  set_has_error_str();
  // @@protoc_insertion_point(field_mutable:plane.SocialOpResultMsg.error_str)
  return error_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SocialOpResultMsg::release_error_str() {
  // @@protoc_insertion_point(field_release:plane.SocialOpResultMsg.error_str)
  clear_has_error_str();
  return error_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SocialOpResultMsg::set_allocated_error_str(::std::string* error_str) {
  if (error_str != NULL) {
    set_has_error_str();
  } else {
    clear_has_error_str();
  }
  error_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_str);
  // @@protoc_insertion_point(field_set_allocated:plane.SocialOpResultMsg.error_str)
}

// optional string new_account = 3;
bool SocialOpResultMsg::has_new_account() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SocialOpResultMsg::set_has_new_account() {
  _has_bits_[0] |= 0x00000002u;
}
void SocialOpResultMsg::clear_has_new_account() {
  _has_bits_[0] &= ~0x00000002u;
}
void SocialOpResultMsg::clear_new_account() {
  new_account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_new_account();
}
const ::std::string& SocialOpResultMsg::new_account() const {
  // @@protoc_insertion_point(field_get:plane.SocialOpResultMsg.new_account)
  return new_account_.GetNoArena();
}
void SocialOpResultMsg::set_new_account(const ::std::string& value) {
  set_has_new_account();
  new_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.SocialOpResultMsg.new_account)
}
#if LANG_CXX11
void SocialOpResultMsg::set_new_account(::std::string&& value) {
  set_has_new_account();
  new_account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.SocialOpResultMsg.new_account)
}
#endif
void SocialOpResultMsg::set_new_account(const char* value) {
  set_has_new_account();
  new_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.SocialOpResultMsg.new_account)
}
void SocialOpResultMsg::set_new_account(const char* value, size_t size) {
  set_has_new_account();
  new_account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.SocialOpResultMsg.new_account)
}
::std::string* SocialOpResultMsg::mutable_new_account() {
  set_has_new_account();
  // @@protoc_insertion_point(field_mutable:plane.SocialOpResultMsg.new_account)
  return new_account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SocialOpResultMsg::release_new_account() {
  // @@protoc_insertion_point(field_release:plane.SocialOpResultMsg.new_account)
  clear_has_new_account();
  return new_account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SocialOpResultMsg::set_allocated_new_account(::std::string* new_account) {
  if (new_account != NULL) {
    set_has_new_account();
  } else {
    clear_has_new_account();
  }
  new_account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), new_account);
  // @@protoc_insertion_point(field_set_allocated:plane.SocialOpResultMsg.new_account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FollowUnfollowViewMsg::kAccountFieldNumber;
const int FollowUnfollowViewMsg::kPageNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FollowUnfollowViewMsg::FollowUnfollowViewMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.FollowUnfollowViewMsg)
}
FollowUnfollowViewMsg::FollowUnfollowViewMsg(const FollowUnfollowViewMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  page_num_ = from.page_num_;
  // @@protoc_insertion_point(copy_constructor:plane.FollowUnfollowViewMsg)
}

void FollowUnfollowViewMsg::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  page_num_ = 0u;
}

FollowUnfollowViewMsg::~FollowUnfollowViewMsg() {
  // @@protoc_insertion_point(destructor:plane.FollowUnfollowViewMsg)
  SharedDtor();
}

void FollowUnfollowViewMsg::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FollowUnfollowViewMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FollowUnfollowViewMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[10].descriptor;
}

const FollowUnfollowViewMsg& FollowUnfollowViewMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

FollowUnfollowViewMsg* FollowUnfollowViewMsg::New(::google::protobuf::Arena* arena) const {
  FollowUnfollowViewMsg* n = new FollowUnfollowViewMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FollowUnfollowViewMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.FollowUnfollowViewMsg)
  if (has_account()) {
    GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_.UnsafeRawStringPointer())->clear();
  }
  page_num_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FollowUnfollowViewMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.FollowUnfollowViewMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.FollowUnfollowViewMsg.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 page_num = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_page_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &page_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.FollowUnfollowViewMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.FollowUnfollowViewMsg)
  return false;
#undef DO_
}

void FollowUnfollowViewMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.FollowUnfollowViewMsg)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.FollowUnfollowViewMsg.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // optional uint32 page_num = 2;
  if (has_page_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->page_num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.FollowUnfollowViewMsg)
}

::google::protobuf::uint8* FollowUnfollowViewMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.FollowUnfollowViewMsg)
  // optional string account = 1;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.FollowUnfollowViewMsg.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // optional uint32 page_num = 2;
  if (has_page_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->page_num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.FollowUnfollowViewMsg)
  return target;
}

size_t FollowUnfollowViewMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.FollowUnfollowViewMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string account = 1;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional uint32 page_num = 2;
    if (has_page_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->page_num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FollowUnfollowViewMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.FollowUnfollowViewMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const FollowUnfollowViewMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FollowUnfollowViewMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.FollowUnfollowViewMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.FollowUnfollowViewMsg)
    MergeFrom(*source);
  }
}

void FollowUnfollowViewMsg::MergeFrom(const FollowUnfollowViewMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.FollowUnfollowViewMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_account()) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (from.has_page_num()) {
      set_page_num(from.page_num());
    }
  }
}

void FollowUnfollowViewMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.FollowUnfollowViewMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FollowUnfollowViewMsg::CopyFrom(const FollowUnfollowViewMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.FollowUnfollowViewMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowUnfollowViewMsg::IsInitialized() const {
  return true;
}

void FollowUnfollowViewMsg::Swap(FollowUnfollowViewMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FollowUnfollowViewMsg::InternalSwap(FollowUnfollowViewMsg* other) {
  account_.Swap(&other->account_);
  std::swap(page_num_, other->page_num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FollowUnfollowViewMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FollowUnfollowViewMsg

// optional string account = 1;
bool FollowUnfollowViewMsg::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FollowUnfollowViewMsg::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void FollowUnfollowViewMsg::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void FollowUnfollowViewMsg::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& FollowUnfollowViewMsg::account() const {
  // @@protoc_insertion_point(field_get:plane.FollowUnfollowViewMsg.account)
  return account_.GetNoArena();
}
void FollowUnfollowViewMsg::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.FollowUnfollowViewMsg.account)
}
#if LANG_CXX11
void FollowUnfollowViewMsg::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.FollowUnfollowViewMsg.account)
}
#endif
void FollowUnfollowViewMsg::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.FollowUnfollowViewMsg.account)
}
void FollowUnfollowViewMsg::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.FollowUnfollowViewMsg.account)
}
::std::string* FollowUnfollowViewMsg::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:plane.FollowUnfollowViewMsg.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FollowUnfollowViewMsg::release_account() {
  // @@protoc_insertion_point(field_release:plane.FollowUnfollowViewMsg.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FollowUnfollowViewMsg::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:plane.FollowUnfollowViewMsg.account)
}

// optional uint32 page_num = 2;
bool FollowUnfollowViewMsg::has_page_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FollowUnfollowViewMsg::set_has_page_num() {
  _has_bits_[0] |= 0x00000002u;
}
void FollowUnfollowViewMsg::clear_has_page_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void FollowUnfollowViewMsg::clear_page_num() {
  page_num_ = 0u;
  clear_has_page_num();
}
::google::protobuf::uint32 FollowUnfollowViewMsg::page_num() const {
  // @@protoc_insertion_point(field_get:plane.FollowUnfollowViewMsg.page_num)
  return page_num_;
}
void FollowUnfollowViewMsg::set_page_num(::google::protobuf::uint32 value) {
  set_has_page_num();
  page_num_ = value;
  // @@protoc_insertion_point(field_set:plane.FollowUnfollowViewMsg.page_num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FollowUnfollowDataMsg::kUidFieldNumber;
const int FollowUnfollowDataMsg::kResultFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FollowUnfollowDataMsg::FollowUnfollowDataMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.FollowUnfollowDataMsg)
}
FollowUnfollowDataMsg::FollowUnfollowDataMsg(const FollowUnfollowDataMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_result()) {
    result_ = new ::plane::SocialOpResultMsg(*from.result_);
  } else {
    result_ = NULL;
  }
  uid_ = from.uid_;
  // @@protoc_insertion_point(copy_constructor:plane.FollowUnfollowDataMsg)
}

void FollowUnfollowDataMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&result_, 0, reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&result_) + sizeof(uid_));
}

FollowUnfollowDataMsg::~FollowUnfollowDataMsg() {
  // @@protoc_insertion_point(destructor:plane.FollowUnfollowDataMsg)
  SharedDtor();
}

void FollowUnfollowDataMsg::SharedDtor() {
  if (this != internal_default_instance()) {
    delete result_;
  }
}

void FollowUnfollowDataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FollowUnfollowDataMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[11].descriptor;
}

const FollowUnfollowDataMsg& FollowUnfollowDataMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

FollowUnfollowDataMsg* FollowUnfollowDataMsg::New(::google::protobuf::Arena* arena) const {
  FollowUnfollowDataMsg* n = new FollowUnfollowDataMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FollowUnfollowDataMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.FollowUnfollowDataMsg)
  if (has_result()) {
    GOOGLE_DCHECK(result_ != NULL);
    result_->::plane::SocialOpResultMsg::Clear();
  }
  uid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FollowUnfollowDataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.FollowUnfollowDataMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 uid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .plane.SocialOpResultMsg result = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_result()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.FollowUnfollowDataMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.FollowUnfollowDataMsg)
  return false;
#undef DO_
}

void FollowUnfollowDataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.FollowUnfollowDataMsg)
  // optional uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // optional .plane.SocialOpResultMsg result = 2;
  if (has_result()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->result_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.FollowUnfollowDataMsg)
}

::google::protobuf::uint8* FollowUnfollowDataMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.FollowUnfollowDataMsg)
  // optional uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // optional .plane.SocialOpResultMsg result = 2;
  if (has_result()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->result_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.FollowUnfollowDataMsg)
  return target;
}

size_t FollowUnfollowDataMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.FollowUnfollowDataMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional .plane.SocialOpResultMsg result = 2;
    if (has_result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->result_);
    }

    // optional uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FollowUnfollowDataMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.FollowUnfollowDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const FollowUnfollowDataMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FollowUnfollowDataMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.FollowUnfollowDataMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.FollowUnfollowDataMsg)
    MergeFrom(*source);
  }
}

void FollowUnfollowDataMsg::MergeFrom(const FollowUnfollowDataMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.FollowUnfollowDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_result()) {
      mutable_result()->::plane::SocialOpResultMsg::MergeFrom(from.result());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
}

void FollowUnfollowDataMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.FollowUnfollowDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FollowUnfollowDataMsg::CopyFrom(const FollowUnfollowDataMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.FollowUnfollowDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FollowUnfollowDataMsg::IsInitialized() const {
  return true;
}

void FollowUnfollowDataMsg::Swap(FollowUnfollowDataMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FollowUnfollowDataMsg::InternalSwap(FollowUnfollowDataMsg* other) {
  std::swap(result_, other->result_);
  std::swap(uid_, other->uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FollowUnfollowDataMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FollowUnfollowDataMsg

// optional uint32 uid = 1;
bool FollowUnfollowDataMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FollowUnfollowDataMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
void FollowUnfollowDataMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
void FollowUnfollowDataMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
::google::protobuf::uint32 FollowUnfollowDataMsg::uid() const {
  // @@protoc_insertion_point(field_get:plane.FollowUnfollowDataMsg.uid)
  return uid_;
}
void FollowUnfollowDataMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.FollowUnfollowDataMsg.uid)
}

// optional .plane.SocialOpResultMsg result = 2;
bool FollowUnfollowDataMsg::has_result() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FollowUnfollowDataMsg::set_has_result() {
  _has_bits_[0] |= 0x00000001u;
}
void FollowUnfollowDataMsg::clear_has_result() {
  _has_bits_[0] &= ~0x00000001u;
}
void FollowUnfollowDataMsg::clear_result() {
  if (result_ != NULL) result_->::plane::SocialOpResultMsg::Clear();
  clear_has_result();
}
const ::plane::SocialOpResultMsg& FollowUnfollowDataMsg::result() const {
  // @@protoc_insertion_point(field_get:plane.FollowUnfollowDataMsg.result)
  return result_ != NULL ? *result_
                         : *::plane::SocialOpResultMsg::internal_default_instance();
}
::plane::SocialOpResultMsg* FollowUnfollowDataMsg::mutable_result() {
  set_has_result();
  if (result_ == NULL) {
    result_ = new ::plane::SocialOpResultMsg;
  }
  // @@protoc_insertion_point(field_mutable:plane.FollowUnfollowDataMsg.result)
  return result_;
}
::plane::SocialOpResultMsg* FollowUnfollowDataMsg::release_result() {
  // @@protoc_insertion_point(field_release:plane.FollowUnfollowDataMsg.result)
  clear_has_result();
  ::plane::SocialOpResultMsg* temp = result_;
  result_ = NULL;
  return temp;
}
void FollowUnfollowDataMsg::set_allocated_result(::plane::SocialOpResultMsg* result) {
  delete result_;
  result_ = result;
  if (result) {
    set_has_result();
  } else {
    clear_has_result();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.FollowUnfollowDataMsg.result)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GamePageInfoMsg::kTotalGameFieldNumber;
const int GamePageInfoMsg::kTotalChampionFieldNumber;
const int GamePageInfoMsg::kTotalMvpFieldNumber;
const int GamePageInfoMsg::kTotalDestroyFieldNumber;
const int GamePageInfoMsg::kTotalKillFieldNumber;
const int GamePageInfoMsg::kHighestScoreFieldNumber;
const int GamePageInfoMsg::kHighestComboFieldNumber;
const int GamePageInfoMsg::kHeaderImgidFieldNumber;
const int GamePageInfoMsg::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GamePageInfoMsg::GamePageInfoMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.GamePageInfoMsg)
}
GamePageInfoMsg::GamePageInfoMsg(const GamePageInfoMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  ::memcpy(&total_game_, &from.total_game_,
    reinterpret_cast<char*>(&header_imgid_) -
    reinterpret_cast<char*>(&total_game_) + sizeof(header_imgid_));
  // @@protoc_insertion_point(copy_constructor:plane.GamePageInfoMsg)
}

void GamePageInfoMsg::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&total_game_, 0, reinterpret_cast<char*>(&header_imgid_) -
    reinterpret_cast<char*>(&total_game_) + sizeof(header_imgid_));
}

GamePageInfoMsg::~GamePageInfoMsg() {
  // @@protoc_insertion_point(destructor:plane.GamePageInfoMsg)
  SharedDtor();
}

void GamePageInfoMsg::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GamePageInfoMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GamePageInfoMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[12].descriptor;
}

const GamePageInfoMsg& GamePageInfoMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

GamePageInfoMsg* GamePageInfoMsg::New(::google::protobuf::Arena* arena) const {
  GamePageInfoMsg* n = new GamePageInfoMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GamePageInfoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.GamePageInfoMsg)
  if (has_account()) {
    GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 254u) {
    ::memset(&total_game_, 0, reinterpret_cast<char*>(&highest_combo_) -
      reinterpret_cast<char*>(&total_game_) + sizeof(highest_combo_));
  }
  header_imgid_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GamePageInfoMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.GamePageInfoMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 total_game = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_total_game();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_game_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_champion = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_total_champion();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_champion_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_mvp = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_total_mvp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_mvp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_destroy = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {
          set_has_total_destroy();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_destroy_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_kill = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u)) {
          set_has_total_kill();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_kill_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 highest_score = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(48u)) {
          set_has_highest_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &highest_score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 highest_combo = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(56u)) {
          set_has_highest_combo();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &highest_combo_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 header_imgid = 8;
      case 8: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(64u)) {
          set_has_header_imgid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &header_imgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 9;
      case 9: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.GamePageInfoMsg.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.GamePageInfoMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.GamePageInfoMsg)
  return false;
#undef DO_
}

void GamePageInfoMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.GamePageInfoMsg)
  // optional uint32 total_game = 1;
  if (has_total_game()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->total_game(), output);
  }

  // optional uint32 total_champion = 2;
  if (has_total_champion()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->total_champion(), output);
  }

  // optional uint32 total_mvp = 3;
  if (has_total_mvp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_mvp(), output);
  }

  // optional uint32 total_destroy = 4;
  if (has_total_destroy()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->total_destroy(), output);
  }

  // optional uint32 total_kill = 5;
  if (has_total_kill()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->total_kill(), output);
  }

  // optional uint32 highest_score = 6;
  if (has_highest_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->highest_score(), output);
  }

  // optional uint32 highest_combo = 7;
  if (has_highest_combo()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->highest_combo(), output);
  }

  // optional uint32 header_imgid = 8;
  if (has_header_imgid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->header_imgid(), output);
  }

  // optional string account = 9;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.GamePageInfoMsg.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.GamePageInfoMsg)
}

::google::protobuf::uint8* GamePageInfoMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.GamePageInfoMsg)
  // optional uint32 total_game = 1;
  if (has_total_game()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->total_game(), target);
  }

  // optional uint32 total_champion = 2;
  if (has_total_champion()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->total_champion(), target);
  }

  // optional uint32 total_mvp = 3;
  if (has_total_mvp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_mvp(), target);
  }

  // optional uint32 total_destroy = 4;
  if (has_total_destroy()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->total_destroy(), target);
  }

  // optional uint32 total_kill = 5;
  if (has_total_kill()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->total_kill(), target);
  }

  // optional uint32 highest_score = 6;
  if (has_highest_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->highest_score(), target);
  }

  // optional uint32 highest_combo = 7;
  if (has_highest_combo()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->highest_combo(), target);
  }

  // optional uint32 header_imgid = 8;
  if (has_header_imgid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->header_imgid(), target);
  }

  // optional string account = 9;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.GamePageInfoMsg.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.GamePageInfoMsg)
  return target;
}

size_t GamePageInfoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.GamePageInfoMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string account = 9;
    if (has_account()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->account());
    }

    // optional uint32 total_game = 1;
    if (has_total_game()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_game());
    }

    // optional uint32 total_champion = 2;
    if (has_total_champion()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_champion());
    }

    // optional uint32 total_mvp = 3;
    if (has_total_mvp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_mvp());
    }

    // optional uint32 total_destroy = 4;
    if (has_total_destroy()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_destroy());
    }

    // optional uint32 total_kill = 5;
    if (has_total_kill()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_kill());
    }

    // optional uint32 highest_score = 6;
    if (has_highest_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->highest_score());
    }

    // optional uint32 highest_combo = 7;
    if (has_highest_combo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->highest_combo());
    }

  }
  // optional uint32 header_imgid = 8;
  if (has_header_imgid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->header_imgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GamePageInfoMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.GamePageInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const GamePageInfoMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GamePageInfoMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.GamePageInfoMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.GamePageInfoMsg)
    MergeFrom(*source);
  }
}

void GamePageInfoMsg::MergeFrom(const GamePageInfoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.GamePageInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 255u) {
    if (from.has_account()) {
      set_has_account();
      account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
    }
    if (from.has_total_game()) {
      set_total_game(from.total_game());
    }
    if (from.has_total_champion()) {
      set_total_champion(from.total_champion());
    }
    if (from.has_total_mvp()) {
      set_total_mvp(from.total_mvp());
    }
    if (from.has_total_destroy()) {
      set_total_destroy(from.total_destroy());
    }
    if (from.has_total_kill()) {
      set_total_kill(from.total_kill());
    }
    if (from.has_highest_score()) {
      set_highest_score(from.highest_score());
    }
    if (from.has_highest_combo()) {
      set_highest_combo(from.highest_combo());
    }
  }
  if (from.has_header_imgid()) {
    set_header_imgid(from.header_imgid());
  }
}

void GamePageInfoMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.GamePageInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GamePageInfoMsg::CopyFrom(const GamePageInfoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.GamePageInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GamePageInfoMsg::IsInitialized() const {
  return true;
}

void GamePageInfoMsg::Swap(GamePageInfoMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GamePageInfoMsg::InternalSwap(GamePageInfoMsg* other) {
  account_.Swap(&other->account_);
  std::swap(total_game_, other->total_game_);
  std::swap(total_champion_, other->total_champion_);
  std::swap(total_mvp_, other->total_mvp_);
  std::swap(total_destroy_, other->total_destroy_);
  std::swap(total_kill_, other->total_kill_);
  std::swap(highest_score_, other->highest_score_);
  std::swap(highest_combo_, other->highest_combo_);
  std::swap(header_imgid_, other->header_imgid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GamePageInfoMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GamePageInfoMsg

// optional uint32 total_game = 1;
bool GamePageInfoMsg::has_total_game() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GamePageInfoMsg::set_has_total_game() {
  _has_bits_[0] |= 0x00000002u;
}
void GamePageInfoMsg::clear_has_total_game() {
  _has_bits_[0] &= ~0x00000002u;
}
void GamePageInfoMsg::clear_total_game() {
  total_game_ = 0u;
  clear_has_total_game();
}
::google::protobuf::uint32 GamePageInfoMsg::total_game() const {
  // @@protoc_insertion_point(field_get:plane.GamePageInfoMsg.total_game)
  return total_game_;
}
void GamePageInfoMsg::set_total_game(::google::protobuf::uint32 value) {
  set_has_total_game();
  total_game_ = value;
  // @@protoc_insertion_point(field_set:plane.GamePageInfoMsg.total_game)
}

// optional uint32 total_champion = 2;
bool GamePageInfoMsg::has_total_champion() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GamePageInfoMsg::set_has_total_champion() {
  _has_bits_[0] |= 0x00000004u;
}
void GamePageInfoMsg::clear_has_total_champion() {
  _has_bits_[0] &= ~0x00000004u;
}
void GamePageInfoMsg::clear_total_champion() {
  total_champion_ = 0u;
  clear_has_total_champion();
}
::google::protobuf::uint32 GamePageInfoMsg::total_champion() const {
  // @@protoc_insertion_point(field_get:plane.GamePageInfoMsg.total_champion)
  return total_champion_;
}
void GamePageInfoMsg::set_total_champion(::google::protobuf::uint32 value) {
  set_has_total_champion();
  total_champion_ = value;
  // @@protoc_insertion_point(field_set:plane.GamePageInfoMsg.total_champion)
}

// optional uint32 total_mvp = 3;
bool GamePageInfoMsg::has_total_mvp() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void GamePageInfoMsg::set_has_total_mvp() {
  _has_bits_[0] |= 0x00000008u;
}
void GamePageInfoMsg::clear_has_total_mvp() {
  _has_bits_[0] &= ~0x00000008u;
}
void GamePageInfoMsg::clear_total_mvp() {
  total_mvp_ = 0u;
  clear_has_total_mvp();
}
::google::protobuf::uint32 GamePageInfoMsg::total_mvp() const {
  // @@protoc_insertion_point(field_get:plane.GamePageInfoMsg.total_mvp)
  return total_mvp_;
}
void GamePageInfoMsg::set_total_mvp(::google::protobuf::uint32 value) {
  set_has_total_mvp();
  total_mvp_ = value;
  // @@protoc_insertion_point(field_set:plane.GamePageInfoMsg.total_mvp)
}

// optional uint32 total_destroy = 4;
bool GamePageInfoMsg::has_total_destroy() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void GamePageInfoMsg::set_has_total_destroy() {
  _has_bits_[0] |= 0x00000010u;
}
void GamePageInfoMsg::clear_has_total_destroy() {
  _has_bits_[0] &= ~0x00000010u;
}
void GamePageInfoMsg::clear_total_destroy() {
  total_destroy_ = 0u;
  clear_has_total_destroy();
}
::google::protobuf::uint32 GamePageInfoMsg::total_destroy() const {
  // @@protoc_insertion_point(field_get:plane.GamePageInfoMsg.total_destroy)
  return total_destroy_;
}
void GamePageInfoMsg::set_total_destroy(::google::protobuf::uint32 value) {
  set_has_total_destroy();
  total_destroy_ = value;
  // @@protoc_insertion_point(field_set:plane.GamePageInfoMsg.total_destroy)
}

// optional uint32 total_kill = 5;
bool GamePageInfoMsg::has_total_kill() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void GamePageInfoMsg::set_has_total_kill() {
  _has_bits_[0] |= 0x00000020u;
}
void GamePageInfoMsg::clear_has_total_kill() {
  _has_bits_[0] &= ~0x00000020u;
}
void GamePageInfoMsg::clear_total_kill() {
  total_kill_ = 0u;
  clear_has_total_kill();
}
::google::protobuf::uint32 GamePageInfoMsg::total_kill() const {
  // @@protoc_insertion_point(field_get:plane.GamePageInfoMsg.total_kill)
  return total_kill_;
}
void GamePageInfoMsg::set_total_kill(::google::protobuf::uint32 value) {
  set_has_total_kill();
  total_kill_ = value;
  // @@protoc_insertion_point(field_set:plane.GamePageInfoMsg.total_kill)
}

// optional uint32 highest_score = 6;
bool GamePageInfoMsg::has_highest_score() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void GamePageInfoMsg::set_has_highest_score() {
  _has_bits_[0] |= 0x00000040u;
}
void GamePageInfoMsg::clear_has_highest_score() {
  _has_bits_[0] &= ~0x00000040u;
}
void GamePageInfoMsg::clear_highest_score() {
  highest_score_ = 0u;
  clear_has_highest_score();
}
::google::protobuf::uint32 GamePageInfoMsg::highest_score() const {
  // @@protoc_insertion_point(field_get:plane.GamePageInfoMsg.highest_score)
  return highest_score_;
}
void GamePageInfoMsg::set_highest_score(::google::protobuf::uint32 value) {
  set_has_highest_score();
  highest_score_ = value;
  // @@protoc_insertion_point(field_set:plane.GamePageInfoMsg.highest_score)
}

// optional uint32 highest_combo = 7;
bool GamePageInfoMsg::has_highest_combo() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void GamePageInfoMsg::set_has_highest_combo() {
  _has_bits_[0] |= 0x00000080u;
}
void GamePageInfoMsg::clear_has_highest_combo() {
  _has_bits_[0] &= ~0x00000080u;
}
void GamePageInfoMsg::clear_highest_combo() {
  highest_combo_ = 0u;
  clear_has_highest_combo();
}
::google::protobuf::uint32 GamePageInfoMsg::highest_combo() const {
  // @@protoc_insertion_point(field_get:plane.GamePageInfoMsg.highest_combo)
  return highest_combo_;
}
void GamePageInfoMsg::set_highest_combo(::google::protobuf::uint32 value) {
  set_has_highest_combo();
  highest_combo_ = value;
  // @@protoc_insertion_point(field_set:plane.GamePageInfoMsg.highest_combo)
}

// optional uint32 header_imgid = 8;
bool GamePageInfoMsg::has_header_imgid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void GamePageInfoMsg::set_has_header_imgid() {
  _has_bits_[0] |= 0x00000100u;
}
void GamePageInfoMsg::clear_has_header_imgid() {
  _has_bits_[0] &= ~0x00000100u;
}
void GamePageInfoMsg::clear_header_imgid() {
  header_imgid_ = 0u;
  clear_has_header_imgid();
}
::google::protobuf::uint32 GamePageInfoMsg::header_imgid() const {
  // @@protoc_insertion_point(field_get:plane.GamePageInfoMsg.header_imgid)
  return header_imgid_;
}
void GamePageInfoMsg::set_header_imgid(::google::protobuf::uint32 value) {
  set_has_header_imgid();
  header_imgid_ = value;
  // @@protoc_insertion_point(field_set:plane.GamePageInfoMsg.header_imgid)
}

// optional string account = 9;
bool GamePageInfoMsg::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GamePageInfoMsg::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void GamePageInfoMsg::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void GamePageInfoMsg::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& GamePageInfoMsg::account() const {
  // @@protoc_insertion_point(field_get:plane.GamePageInfoMsg.account)
  return account_.GetNoArena();
}
void GamePageInfoMsg::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.GamePageInfoMsg.account)
}
#if LANG_CXX11
void GamePageInfoMsg::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.GamePageInfoMsg.account)
}
#endif
void GamePageInfoMsg::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.GamePageInfoMsg.account)
}
void GamePageInfoMsg::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.GamePageInfoMsg.account)
}
::std::string* GamePageInfoMsg::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:plane.GamePageInfoMsg.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GamePageInfoMsg::release_account() {
  // @@protoc_insertion_point(field_release:plane.GamePageInfoMsg.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GamePageInfoMsg::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:plane.GamePageInfoMsg.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SkinPageInfoMsg::kIndexesFieldNumber;
const int SkinPageInfoMsg::kAccountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SkinPageInfoMsg::SkinPageInfoMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.SkinPageInfoMsg)
}
SkinPageInfoMsg::SkinPageInfoMsg(const SkinPageInfoMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      indexes_(from.indexes_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_account()) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  // @@protoc_insertion_point(copy_constructor:plane.SkinPageInfoMsg)
}

void SkinPageInfoMsg::SharedCtor() {
  _cached_size_ = 0;
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

SkinPageInfoMsg::~SkinPageInfoMsg() {
  // @@protoc_insertion_point(destructor:plane.SkinPageInfoMsg)
  SharedDtor();
}

void SkinPageInfoMsg::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SkinPageInfoMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SkinPageInfoMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[13].descriptor;
}

const SkinPageInfoMsg& SkinPageInfoMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SkinPageInfoMsg* SkinPageInfoMsg::New(::google::protobuf::Arena* arena) const {
  SkinPageInfoMsg* n = new SkinPageInfoMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SkinPageInfoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.SkinPageInfoMsg)
  indexes_.Clear();
  if (has_account()) {
    GOOGLE_DCHECK(!account_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*account_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SkinPageInfoMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.SkinPageInfoMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 indexes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 8u, input, this->mutable_indexes())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_indexes())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string account = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.SkinPageInfoMsg.account");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.SkinPageInfoMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.SkinPageInfoMsg)
  return false;
#undef DO_
}

void SkinPageInfoMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.SkinPageInfoMsg)
  // repeated uint32 indexes = 1;
  for (int i = 0, n = this->indexes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      1, this->indexes(i), output);
  }

  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.SkinPageInfoMsg.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.SkinPageInfoMsg)
}

::google::protobuf::uint8* SkinPageInfoMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.SkinPageInfoMsg)
  // repeated uint32 indexes = 1;
  for (int i = 0, n = this->indexes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(1, this->indexes(i), target);
  }

  // optional string account = 2;
  if (has_account()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.SkinPageInfoMsg.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.SkinPageInfoMsg)
  return target;
}

size_t SkinPageInfoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.SkinPageInfoMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 indexes = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->indexes_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->indexes_size());
    total_size += data_size;
  }

  // optional string account = 2;
  if (has_account()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SkinPageInfoMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.SkinPageInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SkinPageInfoMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SkinPageInfoMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.SkinPageInfoMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.SkinPageInfoMsg)
    MergeFrom(*source);
  }
}

void SkinPageInfoMsg::MergeFrom(const SkinPageInfoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.SkinPageInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  indexes_.MergeFrom(from.indexes_);
  if (from.has_account()) {
    set_has_account();
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
}

void SkinPageInfoMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.SkinPageInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SkinPageInfoMsg::CopyFrom(const SkinPageInfoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.SkinPageInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SkinPageInfoMsg::IsInitialized() const {
  return true;
}

void SkinPageInfoMsg::Swap(SkinPageInfoMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SkinPageInfoMsg::InternalSwap(SkinPageInfoMsg* other) {
  indexes_.UnsafeArenaSwap(&other->indexes_);
  account_.Swap(&other->account_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SkinPageInfoMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[13];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SkinPageInfoMsg

// repeated uint32 indexes = 1;
int SkinPageInfoMsg::indexes_size() const {
  return indexes_.size();
}
void SkinPageInfoMsg::clear_indexes() {
  indexes_.Clear();
}
::google::protobuf::uint32 SkinPageInfoMsg::indexes(int index) const {
  // @@protoc_insertion_point(field_get:plane.SkinPageInfoMsg.indexes)
  return indexes_.Get(index);
}
void SkinPageInfoMsg::set_indexes(int index, ::google::protobuf::uint32 value) {
  indexes_.Set(index, value);
  // @@protoc_insertion_point(field_set:plane.SkinPageInfoMsg.indexes)
}
void SkinPageInfoMsg::add_indexes(::google::protobuf::uint32 value) {
  indexes_.Add(value);
  // @@protoc_insertion_point(field_add:plane.SkinPageInfoMsg.indexes)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
SkinPageInfoMsg::indexes() const {
  // @@protoc_insertion_point(field_list:plane.SkinPageInfoMsg.indexes)
  return indexes_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
SkinPageInfoMsg::mutable_indexes() {
  // @@protoc_insertion_point(field_mutable_list:plane.SkinPageInfoMsg.indexes)
  return &indexes_;
}

// optional string account = 2;
bool SkinPageInfoMsg::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SkinPageInfoMsg::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
void SkinPageInfoMsg::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
void SkinPageInfoMsg::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
const ::std::string& SkinPageInfoMsg::account() const {
  // @@protoc_insertion_point(field_get:plane.SkinPageInfoMsg.account)
  return account_.GetNoArena();
}
void SkinPageInfoMsg::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.SkinPageInfoMsg.account)
}
#if LANG_CXX11
void SkinPageInfoMsg::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.SkinPageInfoMsg.account)
}
#endif
void SkinPageInfoMsg::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.SkinPageInfoMsg.account)
}
void SkinPageInfoMsg::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.SkinPageInfoMsg.account)
}
::std::string* SkinPageInfoMsg::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:plane.SkinPageInfoMsg.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SkinPageInfoMsg::release_account() {
  // @@protoc_insertion_point(field_release:plane.SkinPageInfoMsg.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SkinPageInfoMsg::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:plane.SkinPageInfoMsg.account)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FindFriendResultMsg::kRetcodeFieldNumber;
const int FindFriendResultMsg::kErrorStrFieldNumber;
const int FindFriendResultMsg::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FindFriendResultMsg::FindFriendResultMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.FindFriendResultMsg)
}
FindFriendResultMsg::FindFriendResultMsg(const FindFriendResultMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  error_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_error_str()) {
    error_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_str_);
  }
  if (from.has_data()) {
    data_ = new ::plane::OneFollowData(*from.data_);
  } else {
    data_ = NULL;
  }
  retcode_ = from.retcode_;
  // @@protoc_insertion_point(copy_constructor:plane.FindFriendResultMsg)
}

void FindFriendResultMsg::SharedCtor() {
  _cached_size_ = 0;
  error_str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, reinterpret_cast<char*>(&retcode_) -
    reinterpret_cast<char*>(&data_) + sizeof(retcode_));
}

FindFriendResultMsg::~FindFriendResultMsg() {
  // @@protoc_insertion_point(destructor:plane.FindFriendResultMsg)
  SharedDtor();
}

void FindFriendResultMsg::SharedDtor() {
  error_str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete data_;
  }
}

void FindFriendResultMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FindFriendResultMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[14].descriptor;
}

const FindFriendResultMsg& FindFriendResultMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

FindFriendResultMsg* FindFriendResultMsg::New(::google::protobuf::Arena* arena) const {
  FindFriendResultMsg* n = new FindFriendResultMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FindFriendResultMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.FindFriendResultMsg)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_error_str()) {
      GOOGLE_DCHECK(!error_str_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*error_str_.UnsafeRawStringPointer())->clear();
    }
    if (has_data()) {
      GOOGLE_DCHECK(data_ != NULL);
      data_->::plane::OneFollowData::Clear();
    }
  }
  retcode_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FindFriendResultMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.FindFriendResultMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 retcode = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_retcode();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &retcode_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string error_str = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_error_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->error_str().data(), this->error_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.FindFriendResultMsg.error_str");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .plane.OneFollowData data = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.FindFriendResultMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.FindFriendResultMsg)
  return false;
#undef DO_
}

void FindFriendResultMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.FindFriendResultMsg)
  // optional uint32 retcode = 1;
  if (has_retcode()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->retcode(), output);
  }

  // optional string error_str = 2;
  if (has_error_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_str().data(), this->error_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.FindFriendResultMsg.error_str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->error_str(), output);
  }

  // optional .plane.OneFollowData data = 3;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->data_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.FindFriendResultMsg)
}

::google::protobuf::uint8* FindFriendResultMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.FindFriendResultMsg)
  // optional uint32 retcode = 1;
  if (has_retcode()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->retcode(), target);
  }

  // optional string error_str = 2;
  if (has_error_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->error_str().data(), this->error_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.FindFriendResultMsg.error_str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->error_str(), target);
  }

  // optional .plane.OneFollowData data = 3;
  if (has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->data_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.FindFriendResultMsg)
  return target;
}

size_t FindFriendResultMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.FindFriendResultMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string error_str = 2;
    if (has_error_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->error_str());
    }

    // optional .plane.OneFollowData data = 3;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->data_);
    }

    // optional uint32 retcode = 1;
    if (has_retcode()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->retcode());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FindFriendResultMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.FindFriendResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const FindFriendResultMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FindFriendResultMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.FindFriendResultMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.FindFriendResultMsg)
    MergeFrom(*source);
  }
}

void FindFriendResultMsg::MergeFrom(const FindFriendResultMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.FindFriendResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_error_str()) {
      set_has_error_str();
      error_str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.error_str_);
    }
    if (from.has_data()) {
      mutable_data()->::plane::OneFollowData::MergeFrom(from.data());
    }
    if (from.has_retcode()) {
      set_retcode(from.retcode());
    }
  }
}

void FindFriendResultMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.FindFriendResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindFriendResultMsg::CopyFrom(const FindFriendResultMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.FindFriendResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindFriendResultMsg::IsInitialized() const {
  return true;
}

void FindFriendResultMsg::Swap(FindFriendResultMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FindFriendResultMsg::InternalSwap(FindFriendResultMsg* other) {
  error_str_.Swap(&other->error_str_);
  std::swap(data_, other->data_);
  std::swap(retcode_, other->retcode_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FindFriendResultMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[14];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FindFriendResultMsg

// optional uint32 retcode = 1;
bool FindFriendResultMsg::has_retcode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FindFriendResultMsg::set_has_retcode() {
  _has_bits_[0] |= 0x00000004u;
}
void FindFriendResultMsg::clear_has_retcode() {
  _has_bits_[0] &= ~0x00000004u;
}
void FindFriendResultMsg::clear_retcode() {
  retcode_ = 0u;
  clear_has_retcode();
}
::google::protobuf::uint32 FindFriendResultMsg::retcode() const {
  // @@protoc_insertion_point(field_get:plane.FindFriendResultMsg.retcode)
  return retcode_;
}
void FindFriendResultMsg::set_retcode(::google::protobuf::uint32 value) {
  set_has_retcode();
  retcode_ = value;
  // @@protoc_insertion_point(field_set:plane.FindFriendResultMsg.retcode)
}

// optional string error_str = 2;
bool FindFriendResultMsg::has_error_str() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FindFriendResultMsg::set_has_error_str() {
  _has_bits_[0] |= 0x00000001u;
}
void FindFriendResultMsg::clear_has_error_str() {
  _has_bits_[0] &= ~0x00000001u;
}
void FindFriendResultMsg::clear_error_str() {
  error_str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_error_str();
}
const ::std::string& FindFriendResultMsg::error_str() const {
  // @@protoc_insertion_point(field_get:plane.FindFriendResultMsg.error_str)
  return error_str_.GetNoArena();
}
void FindFriendResultMsg::set_error_str(const ::std::string& value) {
  set_has_error_str();
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.FindFriendResultMsg.error_str)
}
#if LANG_CXX11
void FindFriendResultMsg::set_error_str(::std::string&& value) {
  set_has_error_str();
  error_str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.FindFriendResultMsg.error_str)
}
#endif
void FindFriendResultMsg::set_error_str(const char* value) {
  set_has_error_str();
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.FindFriendResultMsg.error_str)
}
void FindFriendResultMsg::set_error_str(const char* value, size_t size) {
  set_has_error_str();
  error_str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.FindFriendResultMsg.error_str)
}
::std::string* FindFriendResultMsg::mutable_error_str() {
  set_has_error_str();
  // @@protoc_insertion_point(field_mutable:plane.FindFriendResultMsg.error_str)
  return error_str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FindFriendResultMsg::release_error_str() {
  // @@protoc_insertion_point(field_release:plane.FindFriendResultMsg.error_str)
  clear_has_error_str();
  return error_str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FindFriendResultMsg::set_allocated_error_str(::std::string* error_str) {
  if (error_str != NULL) {
    set_has_error_str();
  } else {
    clear_has_error_str();
  }
  error_str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), error_str);
  // @@protoc_insertion_point(field_set_allocated:plane.FindFriendResultMsg.error_str)
}

// optional .plane.OneFollowData data = 3;
bool FindFriendResultMsg::has_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FindFriendResultMsg::set_has_data() {
  _has_bits_[0] |= 0x00000002u;
}
void FindFriendResultMsg::clear_has_data() {
  _has_bits_[0] &= ~0x00000002u;
}
void FindFriendResultMsg::clear_data() {
  if (data_ != NULL) data_->::plane::OneFollowData::Clear();
  clear_has_data();
}
const ::plane::OneFollowData& FindFriendResultMsg::data() const {
  // @@protoc_insertion_point(field_get:plane.FindFriendResultMsg.data)
  return data_ != NULL ? *data_
                         : *::plane::OneFollowData::internal_default_instance();
}
::plane::OneFollowData* FindFriendResultMsg::mutable_data() {
  set_has_data();
  if (data_ == NULL) {
    data_ = new ::plane::OneFollowData;
  }
  // @@protoc_insertion_point(field_mutable:plane.FindFriendResultMsg.data)
  return data_;
}
::plane::OneFollowData* FindFriendResultMsg::release_data() {
  // @@protoc_insertion_point(field_release:plane.FindFriendResultMsg.data)
  clear_has_data();
  ::plane::OneFollowData* temp = data_;
  data_ = NULL;
  return temp;
}
void FindFriendResultMsg::set_allocated_data(::plane::OneFollowData* data) {
  delete data_;
  data_ = data;
  if (data) {
    set_has_data();
  } else {
    clear_has_data();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.FindFriendResultMsg.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ShareDataMsg::kShareGetFieldNumber;
const int ShareDataMsg::kGameGetFieldNumber;
const int ShareDataMsg::kTotalGetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ShareDataMsg::ShareDataMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.ShareDataMsg)
}
ShareDataMsg::ShareDataMsg(const ShareDataMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&share_get_, &from.share_get_,
    reinterpret_cast<char*>(&total_get_) -
    reinterpret_cast<char*>(&share_get_) + sizeof(total_get_));
  // @@protoc_insertion_point(copy_constructor:plane.ShareDataMsg)
}

void ShareDataMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&share_get_, 0, reinterpret_cast<char*>(&total_get_) -
    reinterpret_cast<char*>(&share_get_) + sizeof(total_get_));
}

ShareDataMsg::~ShareDataMsg() {
  // @@protoc_insertion_point(destructor:plane.ShareDataMsg)
  SharedDtor();
}

void ShareDataMsg::SharedDtor() {
}

void ShareDataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ShareDataMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[15].descriptor;
}

const ShareDataMsg& ShareDataMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

ShareDataMsg* ShareDataMsg::New(::google::protobuf::Arena* arena) const {
  ShareDataMsg* n = new ShareDataMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ShareDataMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.ShareDataMsg)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&share_get_, 0, reinterpret_cast<char*>(&total_get_) -
      reinterpret_cast<char*>(&share_get_) + sizeof(total_get_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ShareDataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.ShareDataMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 share_get = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_share_get();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &share_get_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 game_get = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_game_get();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &game_get_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 total_get = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_total_get();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_get_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.ShareDataMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.ShareDataMsg)
  return false;
#undef DO_
}

void ShareDataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.ShareDataMsg)
  // optional uint32 share_get = 1;
  if (has_share_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->share_get(), output);
  }

  // optional uint32 game_get = 2;
  if (has_game_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->game_get(), output);
  }

  // optional uint32 total_get = 3;
  if (has_total_get()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_get(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.ShareDataMsg)
}

::google::protobuf::uint8* ShareDataMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.ShareDataMsg)
  // optional uint32 share_get = 1;
  if (has_share_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->share_get(), target);
  }

  // optional uint32 game_get = 2;
  if (has_game_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->game_get(), target);
  }

  // optional uint32 total_get = 3;
  if (has_total_get()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_get(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.ShareDataMsg)
  return target;
}

size_t ShareDataMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.ShareDataMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional uint32 share_get = 1;
    if (has_share_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->share_get());
    }

    // optional uint32 game_get = 2;
    if (has_game_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->game_get());
    }

    // optional uint32 total_get = 3;
    if (has_total_get()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->total_get());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ShareDataMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.ShareDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ShareDataMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ShareDataMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.ShareDataMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.ShareDataMsg)
    MergeFrom(*source);
  }
}

void ShareDataMsg::MergeFrom(const ShareDataMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.ShareDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 7u) {
    if (from.has_share_get()) {
      set_share_get(from.share_get());
    }
    if (from.has_game_get()) {
      set_game_get(from.game_get());
    }
    if (from.has_total_get()) {
      set_total_get(from.total_get());
    }
  }
}

void ShareDataMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.ShareDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ShareDataMsg::CopyFrom(const ShareDataMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.ShareDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ShareDataMsg::IsInitialized() const {
  return true;
}

void ShareDataMsg::Swap(ShareDataMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ShareDataMsg::InternalSwap(ShareDataMsg* other) {
  std::swap(share_get_, other->share_get_);
  std::swap(game_get_, other->game_get_);
  std::swap(total_get_, other->total_get_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ShareDataMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[15];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ShareDataMsg

// optional uint32 share_get = 1;
bool ShareDataMsg::has_share_get() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ShareDataMsg::set_has_share_get() {
  _has_bits_[0] |= 0x00000001u;
}
void ShareDataMsg::clear_has_share_get() {
  _has_bits_[0] &= ~0x00000001u;
}
void ShareDataMsg::clear_share_get() {
  share_get_ = 0u;
  clear_has_share_get();
}
::google::protobuf::uint32 ShareDataMsg::share_get() const {
  // @@protoc_insertion_point(field_get:plane.ShareDataMsg.share_get)
  return share_get_;
}
void ShareDataMsg::set_share_get(::google::protobuf::uint32 value) {
  set_has_share_get();
  share_get_ = value;
  // @@protoc_insertion_point(field_set:plane.ShareDataMsg.share_get)
}

// optional uint32 game_get = 2;
bool ShareDataMsg::has_game_get() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ShareDataMsg::set_has_game_get() {
  _has_bits_[0] |= 0x00000002u;
}
void ShareDataMsg::clear_has_game_get() {
  _has_bits_[0] &= ~0x00000002u;
}
void ShareDataMsg::clear_game_get() {
  game_get_ = 0u;
  clear_has_game_get();
}
::google::protobuf::uint32 ShareDataMsg::game_get() const {
  // @@protoc_insertion_point(field_get:plane.ShareDataMsg.game_get)
  return game_get_;
}
void ShareDataMsg::set_game_get(::google::protobuf::uint32 value) {
  set_has_game_get();
  game_get_ = value;
  // @@protoc_insertion_point(field_set:plane.ShareDataMsg.game_get)
}

// optional uint32 total_get = 3;
bool ShareDataMsg::has_total_get() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ShareDataMsg::set_has_total_get() {
  _has_bits_[0] |= 0x00000004u;
}
void ShareDataMsg::clear_has_total_get() {
  _has_bits_[0] &= ~0x00000004u;
}
void ShareDataMsg::clear_total_get() {
  total_get_ = 0u;
  clear_has_total_get();
}
::google::protobuf::uint32 ShareDataMsg::total_get() const {
  // @@protoc_insertion_point(field_get:plane.ShareDataMsg.total_get)
  return total_get_;
}
void ShareDataMsg::set_total_get(::google::protobuf::uint32 value) {
  set_has_total_get();
  total_get_ = value;
  // @@protoc_insertion_point(field_set:plane.ShareDataMsg.total_get)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OnePurgatoryRankDataMsg::kAccFieldNumber;
const int OnePurgatoryRankDataMsg::kScoreFieldNumber;
const int OnePurgatoryRankDataMsg::kSugarFieldNumber;
const int OnePurgatoryRankDataMsg::kImageidFieldNumber;
const int OnePurgatoryRankDataMsg::kSexFieldNumber;
const int OnePurgatoryRankDataMsg::kLevelFieldNumber;
const int OnePurgatoryRankDataMsg::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OnePurgatoryRankDataMsg::OnePurgatoryRankDataMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OnePurgatoryRankDataMsg)
}
OnePurgatoryRankDataMsg::OnePurgatoryRankDataMsg(const OnePurgatoryRankDataMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  acc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_acc()) {
    acc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acc_);
  }
  ::memcpy(&score_, &from.score_,
    reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&score_) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:plane.OnePurgatoryRankDataMsg)
}

void OnePurgatoryRankDataMsg::SharedCtor() {
  _cached_size_ = 0;
  acc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&score_, 0, reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&score_) + sizeof(uid_));
}

OnePurgatoryRankDataMsg::~OnePurgatoryRankDataMsg() {
  // @@protoc_insertion_point(destructor:plane.OnePurgatoryRankDataMsg)
  SharedDtor();
}

void OnePurgatoryRankDataMsg::SharedDtor() {
  acc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OnePurgatoryRankDataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OnePurgatoryRankDataMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[16].descriptor;
}

const OnePurgatoryRankDataMsg& OnePurgatoryRankDataMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

OnePurgatoryRankDataMsg* OnePurgatoryRankDataMsg::New(::google::protobuf::Arena* arena) const {
  OnePurgatoryRankDataMsg* n = new OnePurgatoryRankDataMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OnePurgatoryRankDataMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OnePurgatoryRankDataMsg)
  if (has_acc()) {
    GOOGLE_DCHECK(!acc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*acc_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 126u) {
    ::memset(&score_, 0, reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&score_) + sizeof(uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OnePurgatoryRankDataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OnePurgatoryRankDataMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string acc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->acc().data(), this->acc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.OnePurgatoryRankDataMsg.acc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 score = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_score();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &score_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sugar = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_sugar();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sugar_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 imageid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {
          set_has_imageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sex = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(48u)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 uid = 7;
      case 7: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(56u)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OnePurgatoryRankDataMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OnePurgatoryRankDataMsg)
  return false;
#undef DO_
}

void OnePurgatoryRankDataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OnePurgatoryRankDataMsg)
  // optional string acc = 1;
  if (has_acc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->acc().data(), this->acc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OnePurgatoryRankDataMsg.acc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->acc(), output);
  }

  // optional uint32 score = 2;
  if (has_score()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->score(), output);
  }

  // optional uint32 sugar = 3;
  if (has_sugar()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sugar(), output);
  }

  // optional uint32 imageid = 4;
  if (has_imageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->imageid(), output);
  }

  // optional uint32 sex = 5;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->sex(), output);
  }

  // optional uint32 level = 6;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->level(), output);
  }

  // optional uint32 uid = 7;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OnePurgatoryRankDataMsg)
}

::google::protobuf::uint8* OnePurgatoryRankDataMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OnePurgatoryRankDataMsg)
  // optional string acc = 1;
  if (has_acc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->acc().data(), this->acc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OnePurgatoryRankDataMsg.acc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->acc(), target);
  }

  // optional uint32 score = 2;
  if (has_score()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->score(), target);
  }

  // optional uint32 sugar = 3;
  if (has_sugar()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sugar(), target);
  }

  // optional uint32 imageid = 4;
  if (has_imageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->imageid(), target);
  }

  // optional uint32 sex = 5;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->sex(), target);
  }

  // optional uint32 level = 6;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->level(), target);
  }

  // optional uint32 uid = 7;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OnePurgatoryRankDataMsg)
  return target;
}

size_t OnePurgatoryRankDataMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OnePurgatoryRankDataMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 127u) {
    // optional string acc = 1;
    if (has_acc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->acc());
    }

    // optional uint32 score = 2;
    if (has_score()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->score());
    }

    // optional uint32 sugar = 3;
    if (has_sugar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sugar());
    }

    // optional uint32 imageid = 4;
    if (has_imageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->imageid());
    }

    // optional uint32 sex = 5;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sex());
    }

    // optional uint32 level = 6;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 uid = 7;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OnePurgatoryRankDataMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OnePurgatoryRankDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const OnePurgatoryRankDataMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OnePurgatoryRankDataMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OnePurgatoryRankDataMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OnePurgatoryRankDataMsg)
    MergeFrom(*source);
  }
}

void OnePurgatoryRankDataMsg::MergeFrom(const OnePurgatoryRankDataMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OnePurgatoryRankDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 127u) {
    if (from.has_acc()) {
      set_has_acc();
      acc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acc_);
    }
    if (from.has_score()) {
      set_score(from.score());
    }
    if (from.has_sugar()) {
      set_sugar(from.sugar());
    }
    if (from.has_imageid()) {
      set_imageid(from.imageid());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
}

void OnePurgatoryRankDataMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OnePurgatoryRankDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OnePurgatoryRankDataMsg::CopyFrom(const OnePurgatoryRankDataMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OnePurgatoryRankDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OnePurgatoryRankDataMsg::IsInitialized() const {
  return true;
}

void OnePurgatoryRankDataMsg::Swap(OnePurgatoryRankDataMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OnePurgatoryRankDataMsg::InternalSwap(OnePurgatoryRankDataMsg* other) {
  acc_.Swap(&other->acc_);
  std::swap(score_, other->score_);
  std::swap(sugar_, other->sugar_);
  std::swap(imageid_, other->imageid_);
  std::swap(sex_, other->sex_);
  std::swap(level_, other->level_);
  std::swap(uid_, other->uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OnePurgatoryRankDataMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[16];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OnePurgatoryRankDataMsg

// optional string acc = 1;
bool OnePurgatoryRankDataMsg::has_acc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OnePurgatoryRankDataMsg::set_has_acc() {
  _has_bits_[0] |= 0x00000001u;
}
void OnePurgatoryRankDataMsg::clear_has_acc() {
  _has_bits_[0] &= ~0x00000001u;
}
void OnePurgatoryRankDataMsg::clear_acc() {
  acc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_acc();
}
const ::std::string& OnePurgatoryRankDataMsg::acc() const {
  // @@protoc_insertion_point(field_get:plane.OnePurgatoryRankDataMsg.acc)
  return acc_.GetNoArena();
}
void OnePurgatoryRankDataMsg::set_acc(const ::std::string& value) {
  set_has_acc();
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OnePurgatoryRankDataMsg.acc)
}
#if LANG_CXX11
void OnePurgatoryRankDataMsg::set_acc(::std::string&& value) {
  set_has_acc();
  acc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OnePurgatoryRankDataMsg.acc)
}
#endif
void OnePurgatoryRankDataMsg::set_acc(const char* value) {
  set_has_acc();
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OnePurgatoryRankDataMsg.acc)
}
void OnePurgatoryRankDataMsg::set_acc(const char* value, size_t size) {
  set_has_acc();
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OnePurgatoryRankDataMsg.acc)
}
::std::string* OnePurgatoryRankDataMsg::mutable_acc() {
  set_has_acc();
  // @@protoc_insertion_point(field_mutable:plane.OnePurgatoryRankDataMsg.acc)
  return acc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OnePurgatoryRankDataMsg::release_acc() {
  // @@protoc_insertion_point(field_release:plane.OnePurgatoryRankDataMsg.acc)
  clear_has_acc();
  return acc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OnePurgatoryRankDataMsg::set_allocated_acc(::std::string* acc) {
  if (acc != NULL) {
    set_has_acc();
  } else {
    clear_has_acc();
  }
  acc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acc);
  // @@protoc_insertion_point(field_set_allocated:plane.OnePurgatoryRankDataMsg.acc)
}

// optional uint32 score = 2;
bool OnePurgatoryRankDataMsg::has_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OnePurgatoryRankDataMsg::set_has_score() {
  _has_bits_[0] |= 0x00000002u;
}
void OnePurgatoryRankDataMsg::clear_has_score() {
  _has_bits_[0] &= ~0x00000002u;
}
void OnePurgatoryRankDataMsg::clear_score() {
  score_ = 0u;
  clear_has_score();
}
::google::protobuf::uint32 OnePurgatoryRankDataMsg::score() const {
  // @@protoc_insertion_point(field_get:plane.OnePurgatoryRankDataMsg.score)
  return score_;
}
void OnePurgatoryRankDataMsg::set_score(::google::protobuf::uint32 value) {
  set_has_score();
  score_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePurgatoryRankDataMsg.score)
}

// optional uint32 sugar = 3;
bool OnePurgatoryRankDataMsg::has_sugar() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OnePurgatoryRankDataMsg::set_has_sugar() {
  _has_bits_[0] |= 0x00000004u;
}
void OnePurgatoryRankDataMsg::clear_has_sugar() {
  _has_bits_[0] &= ~0x00000004u;
}
void OnePurgatoryRankDataMsg::clear_sugar() {
  sugar_ = 0u;
  clear_has_sugar();
}
::google::protobuf::uint32 OnePurgatoryRankDataMsg::sugar() const {
  // @@protoc_insertion_point(field_get:plane.OnePurgatoryRankDataMsg.sugar)
  return sugar_;
}
void OnePurgatoryRankDataMsg::set_sugar(::google::protobuf::uint32 value) {
  set_has_sugar();
  sugar_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePurgatoryRankDataMsg.sugar)
}

// optional uint32 imageid = 4;
bool OnePurgatoryRankDataMsg::has_imageid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OnePurgatoryRankDataMsg::set_has_imageid() {
  _has_bits_[0] |= 0x00000008u;
}
void OnePurgatoryRankDataMsg::clear_has_imageid() {
  _has_bits_[0] &= ~0x00000008u;
}
void OnePurgatoryRankDataMsg::clear_imageid() {
  imageid_ = 0u;
  clear_has_imageid();
}
::google::protobuf::uint32 OnePurgatoryRankDataMsg::imageid() const {
  // @@protoc_insertion_point(field_get:plane.OnePurgatoryRankDataMsg.imageid)
  return imageid_;
}
void OnePurgatoryRankDataMsg::set_imageid(::google::protobuf::uint32 value) {
  set_has_imageid();
  imageid_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePurgatoryRankDataMsg.imageid)
}

// optional uint32 sex = 5;
bool OnePurgatoryRankDataMsg::has_sex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OnePurgatoryRankDataMsg::set_has_sex() {
  _has_bits_[0] |= 0x00000010u;
}
void OnePurgatoryRankDataMsg::clear_has_sex() {
  _has_bits_[0] &= ~0x00000010u;
}
void OnePurgatoryRankDataMsg::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
::google::protobuf::uint32 OnePurgatoryRankDataMsg::sex() const {
  // @@protoc_insertion_point(field_get:plane.OnePurgatoryRankDataMsg.sex)
  return sex_;
}
void OnePurgatoryRankDataMsg::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePurgatoryRankDataMsg.sex)
}

// optional uint32 level = 6;
bool OnePurgatoryRankDataMsg::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void OnePurgatoryRankDataMsg::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
void OnePurgatoryRankDataMsg::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
void OnePurgatoryRankDataMsg::clear_level() {
  level_ = 0u;
  clear_has_level();
}
::google::protobuf::uint32 OnePurgatoryRankDataMsg::level() const {
  // @@protoc_insertion_point(field_get:plane.OnePurgatoryRankDataMsg.level)
  return level_;
}
void OnePurgatoryRankDataMsg::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePurgatoryRankDataMsg.level)
}

// optional uint32 uid = 7;
bool OnePurgatoryRankDataMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void OnePurgatoryRankDataMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000040u;
}
void OnePurgatoryRankDataMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000040u;
}
void OnePurgatoryRankDataMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
::google::protobuf::uint32 OnePurgatoryRankDataMsg::uid() const {
  // @@protoc_insertion_point(field_get:plane.OnePurgatoryRankDataMsg.uid)
  return uid_;
}
void OnePurgatoryRankDataMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePurgatoryRankDataMsg.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PurgatoryRankType::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PurgatoryRankType::PurgatoryRankType()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.PurgatoryRankType)
}
PurgatoryRankType::PurgatoryRankType(const PurgatoryRankType& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:plane.PurgatoryRankType)
}

void PurgatoryRankType::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
}

PurgatoryRankType::~PurgatoryRankType() {
  // @@protoc_insertion_point(destructor:plane.PurgatoryRankType)
  SharedDtor();
}

void PurgatoryRankType::SharedDtor() {
}

void PurgatoryRankType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PurgatoryRankType::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[17].descriptor;
}

const PurgatoryRankType& PurgatoryRankType::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

PurgatoryRankType* PurgatoryRankType::New(::google::protobuf::Arena* arena) const {
  PurgatoryRankType* n = new PurgatoryRankType;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PurgatoryRankType::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.PurgatoryRankType)
  type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PurgatoryRankType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.PurgatoryRankType)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.PurgatoryRankType)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.PurgatoryRankType)
  return false;
#undef DO_
}

void PurgatoryRankType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.PurgatoryRankType)
  // optional uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.PurgatoryRankType)
}

::google::protobuf::uint8* PurgatoryRankType::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.PurgatoryRankType)
  // optional uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.PurgatoryRankType)
  return target;
}

size_t PurgatoryRankType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.PurgatoryRankType)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PurgatoryRankType::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.PurgatoryRankType)
  GOOGLE_DCHECK_NE(&from, this);
  const PurgatoryRankType* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PurgatoryRankType>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.PurgatoryRankType)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.PurgatoryRankType)
    MergeFrom(*source);
  }
}

void PurgatoryRankType::MergeFrom(const PurgatoryRankType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.PurgatoryRankType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_type()) {
    set_type(from.type());
  }
}

void PurgatoryRankType::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.PurgatoryRankType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PurgatoryRankType::CopyFrom(const PurgatoryRankType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.PurgatoryRankType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurgatoryRankType::IsInitialized() const {
  return true;
}

void PurgatoryRankType::Swap(PurgatoryRankType* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PurgatoryRankType::InternalSwap(PurgatoryRankType* other) {
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PurgatoryRankType::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[17];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PurgatoryRankType

// optional uint32 type = 1;
bool PurgatoryRankType::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PurgatoryRankType::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void PurgatoryRankType::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void PurgatoryRankType::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 PurgatoryRankType::type() const {
  // @@protoc_insertion_point(field_get:plane.PurgatoryRankType.type)
  return type_;
}
void PurgatoryRankType::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:plane.PurgatoryRankType.type)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PurgatoryRankDataMsg::kTypeFieldNumber;
const int PurgatoryRankDataMsg::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PurgatoryRankDataMsg::PurgatoryRankDataMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.PurgatoryRankDataMsg)
}
PurgatoryRankDataMsg::PurgatoryRankDataMsg(const PurgatoryRankDataMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      datas_(from.datas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:plane.PurgatoryRankDataMsg)
}

void PurgatoryRankDataMsg::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
}

PurgatoryRankDataMsg::~PurgatoryRankDataMsg() {
  // @@protoc_insertion_point(destructor:plane.PurgatoryRankDataMsg)
  SharedDtor();
}

void PurgatoryRankDataMsg::SharedDtor() {
}

void PurgatoryRankDataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PurgatoryRankDataMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[18].descriptor;
}

const PurgatoryRankDataMsg& PurgatoryRankDataMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

PurgatoryRankDataMsg* PurgatoryRankDataMsg::New(::google::protobuf::Arena* arena) const {
  PurgatoryRankDataMsg* n = new PurgatoryRankDataMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PurgatoryRankDataMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.PurgatoryRankDataMsg)
  datas_.Clear();
  type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PurgatoryRankDataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.PurgatoryRankDataMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .plane.OnePurgatoryRankDataMsg datas = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.PurgatoryRankDataMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.PurgatoryRankDataMsg)
  return false;
#undef DO_
}

void PurgatoryRankDataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.PurgatoryRankDataMsg)
  // optional uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // repeated .plane.OnePurgatoryRankDataMsg datas = 2;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->datas(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.PurgatoryRankDataMsg)
}

::google::protobuf::uint8* PurgatoryRankDataMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.PurgatoryRankDataMsg)
  // optional uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // repeated .plane.OnePurgatoryRankDataMsg datas = 2;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->datas(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.PurgatoryRankDataMsg)
  return target;
}

size_t PurgatoryRankDataMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.PurgatoryRankDataMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OnePurgatoryRankDataMsg datas = 2;
  {
    unsigned int count = this->datas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->datas(i));
    }
  }

  // optional uint32 type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PurgatoryRankDataMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.PurgatoryRankDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const PurgatoryRankDataMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PurgatoryRankDataMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.PurgatoryRankDataMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.PurgatoryRankDataMsg)
    MergeFrom(*source);
  }
}

void PurgatoryRankDataMsg::MergeFrom(const PurgatoryRankDataMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.PurgatoryRankDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datas_.MergeFrom(from.datas_);
  if (from.has_type()) {
    set_type(from.type());
  }
}

void PurgatoryRankDataMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.PurgatoryRankDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PurgatoryRankDataMsg::CopyFrom(const PurgatoryRankDataMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.PurgatoryRankDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurgatoryRankDataMsg::IsInitialized() const {
  return true;
}

void PurgatoryRankDataMsg::Swap(PurgatoryRankDataMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PurgatoryRankDataMsg::InternalSwap(PurgatoryRankDataMsg* other) {
  datas_.UnsafeArenaSwap(&other->datas_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PurgatoryRankDataMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[18];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PurgatoryRankDataMsg

// optional uint32 type = 1;
bool PurgatoryRankDataMsg::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PurgatoryRankDataMsg::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void PurgatoryRankDataMsg::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void PurgatoryRankDataMsg::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 PurgatoryRankDataMsg::type() const {
  // @@protoc_insertion_point(field_get:plane.PurgatoryRankDataMsg.type)
  return type_;
}
void PurgatoryRankDataMsg::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:plane.PurgatoryRankDataMsg.type)
}

// repeated .plane.OnePurgatoryRankDataMsg datas = 2;
int PurgatoryRankDataMsg::datas_size() const {
  return datas_.size();
}
void PurgatoryRankDataMsg::clear_datas() {
  datas_.Clear();
}
const ::plane::OnePurgatoryRankDataMsg& PurgatoryRankDataMsg::datas(int index) const {
  // @@protoc_insertion_point(field_get:plane.PurgatoryRankDataMsg.datas)
  return datas_.Get(index);
}
::plane::OnePurgatoryRankDataMsg* PurgatoryRankDataMsg::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:plane.PurgatoryRankDataMsg.datas)
  return datas_.Mutable(index);
}
::plane::OnePurgatoryRankDataMsg* PurgatoryRankDataMsg::add_datas() {
  // @@protoc_insertion_point(field_add:plane.PurgatoryRankDataMsg.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OnePurgatoryRankDataMsg >*
PurgatoryRankDataMsg::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:plane.PurgatoryRankDataMsg.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OnePurgatoryRankDataMsg >&
PurgatoryRankDataMsg::datas() const {
  // @@protoc_insertion_point(field_list:plane.PurgatoryRankDataMsg.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneLevelRankDataMsg::kAccFieldNumber;
const int OneLevelRankDataMsg::kImageidFieldNumber;
const int OneLevelRankDataMsg::kSexFieldNumber;
const int OneLevelRankDataMsg::kLevelFieldNumber;
const int OneLevelRankDataMsg::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneLevelRankDataMsg::OneLevelRankDataMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OneLevelRankDataMsg)
}
OneLevelRankDataMsg::OneLevelRankDataMsg(const OneLevelRankDataMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  acc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_acc()) {
    acc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acc_);
  }
  ::memcpy(&imageid_, &from.imageid_,
    reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&imageid_) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:plane.OneLevelRankDataMsg)
}

void OneLevelRankDataMsg::SharedCtor() {
  _cached_size_ = 0;
  acc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&imageid_, 0, reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&imageid_) + sizeof(uid_));
}

OneLevelRankDataMsg::~OneLevelRankDataMsg() {
  // @@protoc_insertion_point(destructor:plane.OneLevelRankDataMsg)
  SharedDtor();
}

void OneLevelRankDataMsg::SharedDtor() {
  acc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OneLevelRankDataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneLevelRankDataMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[19].descriptor;
}

const OneLevelRankDataMsg& OneLevelRankDataMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneLevelRankDataMsg* OneLevelRankDataMsg::New(::google::protobuf::Arena* arena) const {
  OneLevelRankDataMsg* n = new OneLevelRankDataMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneLevelRankDataMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OneLevelRankDataMsg)
  if (has_acc()) {
    GOOGLE_DCHECK(!acc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*acc_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 30u) {
    ::memset(&imageid_, 0, reinterpret_cast<char*>(&uid_) -
      reinterpret_cast<char*>(&imageid_) + sizeof(uid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneLevelRankDataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OneLevelRankDataMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string acc = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_acc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->acc().data(), this->acc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "plane.OneLevelRankDataMsg.acc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 imageid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_imageid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &imageid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 sex = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_sex();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &sex_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 level = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 uid = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OneLevelRankDataMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OneLevelRankDataMsg)
  return false;
#undef DO_
}

void OneLevelRankDataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OneLevelRankDataMsg)
  // optional string acc = 1;
  if (has_acc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->acc().data(), this->acc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneLevelRankDataMsg.acc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->acc(), output);
  }

  // optional uint32 imageid = 2;
  if (has_imageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->imageid(), output);
  }

  // optional uint32 sex = 3;
  if (has_sex()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->sex(), output);
  }

  // optional uint32 level = 4;
  if (has_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->level(), output);
  }

  // optional uint32 uid = 5;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->uid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OneLevelRankDataMsg)
}

::google::protobuf::uint8* OneLevelRankDataMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OneLevelRankDataMsg)
  // optional string acc = 1;
  if (has_acc()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->acc().data(), this->acc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "plane.OneLevelRankDataMsg.acc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->acc(), target);
  }

  // optional uint32 imageid = 2;
  if (has_imageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->imageid(), target);
  }

  // optional uint32 sex = 3;
  if (has_sex()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->sex(), target);
  }

  // optional uint32 level = 4;
  if (has_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->level(), target);
  }

  // optional uint32 uid = 5;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->uid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OneLevelRankDataMsg)
  return target;
}

size_t OneLevelRankDataMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OneLevelRankDataMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string acc = 1;
    if (has_acc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->acc());
    }

    // optional uint32 imageid = 2;
    if (has_imageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->imageid());
    }

    // optional uint32 sex = 3;
    if (has_sex()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->sex());
    }

    // optional uint32 level = 4;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->level());
    }

    // optional uint32 uid = 5;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneLevelRankDataMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OneLevelRankDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const OneLevelRankDataMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneLevelRankDataMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OneLevelRankDataMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OneLevelRankDataMsg)
    MergeFrom(*source);
  }
}

void OneLevelRankDataMsg::MergeFrom(const OneLevelRankDataMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OneLevelRankDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 31u) {
    if (from.has_acc()) {
      set_has_acc();
      acc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.acc_);
    }
    if (from.has_imageid()) {
      set_imageid(from.imageid());
    }
    if (from.has_sex()) {
      set_sex(from.sex());
    }
    if (from.has_level()) {
      set_level(from.level());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
  }
}

void OneLevelRankDataMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OneLevelRankDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneLevelRankDataMsg::CopyFrom(const OneLevelRankDataMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OneLevelRankDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneLevelRankDataMsg::IsInitialized() const {
  return true;
}

void OneLevelRankDataMsg::Swap(OneLevelRankDataMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneLevelRankDataMsg::InternalSwap(OneLevelRankDataMsg* other) {
  acc_.Swap(&other->acc_);
  std::swap(imageid_, other->imageid_);
  std::swap(sex_, other->sex_);
  std::swap(level_, other->level_);
  std::swap(uid_, other->uid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneLevelRankDataMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[19];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneLevelRankDataMsg

// optional string acc = 1;
bool OneLevelRankDataMsg::has_acc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneLevelRankDataMsg::set_has_acc() {
  _has_bits_[0] |= 0x00000001u;
}
void OneLevelRankDataMsg::clear_has_acc() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneLevelRankDataMsg::clear_acc() {
  acc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_acc();
}
const ::std::string& OneLevelRankDataMsg::acc() const {
  // @@protoc_insertion_point(field_get:plane.OneLevelRankDataMsg.acc)
  return acc_.GetNoArena();
}
void OneLevelRankDataMsg::set_acc(const ::std::string& value) {
  set_has_acc();
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneLevelRankDataMsg.acc)
}
#if LANG_CXX11
void OneLevelRankDataMsg::set_acc(::std::string&& value) {
  set_has_acc();
  acc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneLevelRankDataMsg.acc)
}
#endif
void OneLevelRankDataMsg::set_acc(const char* value) {
  set_has_acc();
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneLevelRankDataMsg.acc)
}
void OneLevelRankDataMsg::set_acc(const char* value, size_t size) {
  set_has_acc();
  acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneLevelRankDataMsg.acc)
}
::std::string* OneLevelRankDataMsg::mutable_acc() {
  set_has_acc();
  // @@protoc_insertion_point(field_mutable:plane.OneLevelRankDataMsg.acc)
  return acc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OneLevelRankDataMsg::release_acc() {
  // @@protoc_insertion_point(field_release:plane.OneLevelRankDataMsg.acc)
  clear_has_acc();
  return acc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OneLevelRankDataMsg::set_allocated_acc(::std::string* acc) {
  if (acc != NULL) {
    set_has_acc();
  } else {
    clear_has_acc();
  }
  acc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), acc);
  // @@protoc_insertion_point(field_set_allocated:plane.OneLevelRankDataMsg.acc)
}

// optional uint32 imageid = 2;
bool OneLevelRankDataMsg::has_imageid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OneLevelRankDataMsg::set_has_imageid() {
  _has_bits_[0] |= 0x00000002u;
}
void OneLevelRankDataMsg::clear_has_imageid() {
  _has_bits_[0] &= ~0x00000002u;
}
void OneLevelRankDataMsg::clear_imageid() {
  imageid_ = 0u;
  clear_has_imageid();
}
::google::protobuf::uint32 OneLevelRankDataMsg::imageid() const {
  // @@protoc_insertion_point(field_get:plane.OneLevelRankDataMsg.imageid)
  return imageid_;
}
void OneLevelRankDataMsg::set_imageid(::google::protobuf::uint32 value) {
  set_has_imageid();
  imageid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneLevelRankDataMsg.imageid)
}

// optional uint32 sex = 3;
bool OneLevelRankDataMsg::has_sex() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void OneLevelRankDataMsg::set_has_sex() {
  _has_bits_[0] |= 0x00000004u;
}
void OneLevelRankDataMsg::clear_has_sex() {
  _has_bits_[0] &= ~0x00000004u;
}
void OneLevelRankDataMsg::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
::google::protobuf::uint32 OneLevelRankDataMsg::sex() const {
  // @@protoc_insertion_point(field_get:plane.OneLevelRankDataMsg.sex)
  return sex_;
}
void OneLevelRankDataMsg::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:plane.OneLevelRankDataMsg.sex)
}

// optional uint32 level = 4;
bool OneLevelRankDataMsg::has_level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void OneLevelRankDataMsg::set_has_level() {
  _has_bits_[0] |= 0x00000008u;
}
void OneLevelRankDataMsg::clear_has_level() {
  _has_bits_[0] &= ~0x00000008u;
}
void OneLevelRankDataMsg::clear_level() {
  level_ = 0u;
  clear_has_level();
}
::google::protobuf::uint32 OneLevelRankDataMsg::level() const {
  // @@protoc_insertion_point(field_get:plane.OneLevelRankDataMsg.level)
  return level_;
}
void OneLevelRankDataMsg::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:plane.OneLevelRankDataMsg.level)
}

// optional uint32 uid = 5;
bool OneLevelRankDataMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void OneLevelRankDataMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000010u;
}
void OneLevelRankDataMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000010u;
}
void OneLevelRankDataMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
::google::protobuf::uint32 OneLevelRankDataMsg::uid() const {
  // @@protoc_insertion_point(field_get:plane.OneLevelRankDataMsg.uid)
  return uid_;
}
void OneLevelRankDataMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneLevelRankDataMsg.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LevelRankDataMsg::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LevelRankDataMsg::LevelRankDataMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.LevelRankDataMsg)
}
LevelRankDataMsg::LevelRankDataMsg(const LevelRankDataMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      datas_(from.datas_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:plane.LevelRankDataMsg)
}

void LevelRankDataMsg::SharedCtor() {
  _cached_size_ = 0;
}

LevelRankDataMsg::~LevelRankDataMsg() {
  // @@protoc_insertion_point(destructor:plane.LevelRankDataMsg)
  SharedDtor();
}

void LevelRankDataMsg::SharedDtor() {
}

void LevelRankDataMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LevelRankDataMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[20].descriptor;
}

const LevelRankDataMsg& LevelRankDataMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

LevelRankDataMsg* LevelRankDataMsg::New(::google::protobuf::Arena* arena) const {
  LevelRankDataMsg* n = new LevelRankDataMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LevelRankDataMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.LevelRankDataMsg)
  datas_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LevelRankDataMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.LevelRankDataMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .plane.OneLevelRankDataMsg datas = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.LevelRankDataMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.LevelRankDataMsg)
  return false;
#undef DO_
}

void LevelRankDataMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.LevelRankDataMsg)
  // repeated .plane.OneLevelRankDataMsg datas = 1;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datas(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.LevelRankDataMsg)
}

::google::protobuf::uint8* LevelRankDataMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.LevelRankDataMsg)
  // repeated .plane.OneLevelRankDataMsg datas = 1;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->datas(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.LevelRankDataMsg)
  return target;
}

size_t LevelRankDataMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.LevelRankDataMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OneLevelRankDataMsg datas = 1;
  {
    unsigned int count = this->datas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->datas(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LevelRankDataMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.LevelRankDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const LevelRankDataMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LevelRankDataMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.LevelRankDataMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.LevelRankDataMsg)
    MergeFrom(*source);
  }
}

void LevelRankDataMsg::MergeFrom(const LevelRankDataMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.LevelRankDataMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datas_.MergeFrom(from.datas_);
}

void LevelRankDataMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.LevelRankDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LevelRankDataMsg::CopyFrom(const LevelRankDataMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.LevelRankDataMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LevelRankDataMsg::IsInitialized() const {
  return true;
}

void LevelRankDataMsg::Swap(LevelRankDataMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LevelRankDataMsg::InternalSwap(LevelRankDataMsg* other) {
  datas_.UnsafeArenaSwap(&other->datas_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LevelRankDataMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[20];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LevelRankDataMsg

// repeated .plane.OneLevelRankDataMsg datas = 1;
int LevelRankDataMsg::datas_size() const {
  return datas_.size();
}
void LevelRankDataMsg::clear_datas() {
  datas_.Clear();
}
const ::plane::OneLevelRankDataMsg& LevelRankDataMsg::datas(int index) const {
  // @@protoc_insertion_point(field_get:plane.LevelRankDataMsg.datas)
  return datas_.Get(index);
}
::plane::OneLevelRankDataMsg* LevelRankDataMsg::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:plane.LevelRankDataMsg.datas)
  return datas_.Mutable(index);
}
::plane::OneLevelRankDataMsg* LevelRankDataMsg::add_datas() {
  // @@protoc_insertion_point(field_add:plane.LevelRankDataMsg.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneLevelRankDataMsg >*
LevelRankDataMsg::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:plane.LevelRankDataMsg.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneLevelRankDataMsg >&
LevelRankDataMsg::datas() const {
  // @@protoc_insertion_point(field_list:plane.LevelRankDataMsg.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneCheckFollowResult::kUidFieldNumber;
const int OneCheckFollowResult::kAlreadyFollowedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneCheckFollowResult::OneCheckFollowResult()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OneCheckFollowResult)
}
OneCheckFollowResult::OneCheckFollowResult(const OneCheckFollowResult& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    reinterpret_cast<char*>(&already_followed_) -
    reinterpret_cast<char*>(&uid_) + sizeof(already_followed_));
  // @@protoc_insertion_point(copy_constructor:plane.OneCheckFollowResult)
}

void OneCheckFollowResult::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&uid_, 0, reinterpret_cast<char*>(&already_followed_) -
    reinterpret_cast<char*>(&uid_) + sizeof(already_followed_));
}

OneCheckFollowResult::~OneCheckFollowResult() {
  // @@protoc_insertion_point(destructor:plane.OneCheckFollowResult)
  SharedDtor();
}

void OneCheckFollowResult::SharedDtor() {
}

void OneCheckFollowResult::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneCheckFollowResult::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[21].descriptor;
}

const OneCheckFollowResult& OneCheckFollowResult::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneCheckFollowResult* OneCheckFollowResult::New(::google::protobuf::Arena* arena) const {
  OneCheckFollowResult* n = new OneCheckFollowResult;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneCheckFollowResult::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OneCheckFollowResult)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&uid_, 0, reinterpret_cast<char*>(&already_followed_) -
      reinterpret_cast<char*>(&uid_) + sizeof(already_followed_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneCheckFollowResult::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OneCheckFollowResult)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 uid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_uid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 already_followed = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_already_followed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &already_followed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OneCheckFollowResult)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OneCheckFollowResult)
  return false;
#undef DO_
}

void OneCheckFollowResult::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OneCheckFollowResult)
  // optional uint32 uid = 1;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // optional uint32 already_followed = 2;
  if (has_already_followed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->already_followed(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OneCheckFollowResult)
}

::google::protobuf::uint8* OneCheckFollowResult::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OneCheckFollowResult)
  // optional uint32 uid = 1;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // optional uint32 already_followed = 2;
  if (has_already_followed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->already_followed(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OneCheckFollowResult)
  return target;
}

size_t OneCheckFollowResult::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OneCheckFollowResult)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 uid = 1;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->uid());
    }

    // optional uint32 already_followed = 2;
    if (has_already_followed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->already_followed());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneCheckFollowResult::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OneCheckFollowResult)
  GOOGLE_DCHECK_NE(&from, this);
  const OneCheckFollowResult* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneCheckFollowResult>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OneCheckFollowResult)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OneCheckFollowResult)
    MergeFrom(*source);
  }
}

void OneCheckFollowResult::MergeFrom(const OneCheckFollowResult& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OneCheckFollowResult)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_already_followed()) {
      set_already_followed(from.already_followed());
    }
  }
}

void OneCheckFollowResult::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OneCheckFollowResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneCheckFollowResult::CopyFrom(const OneCheckFollowResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OneCheckFollowResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneCheckFollowResult::IsInitialized() const {
  return true;
}

void OneCheckFollowResult::Swap(OneCheckFollowResult* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneCheckFollowResult::InternalSwap(OneCheckFollowResult* other) {
  std::swap(uid_, other->uid_);
  std::swap(already_followed_, other->already_followed_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneCheckFollowResult::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[21];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneCheckFollowResult

// optional uint32 uid = 1;
bool OneCheckFollowResult::has_uid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneCheckFollowResult::set_has_uid() {
  _has_bits_[0] |= 0x00000001u;
}
void OneCheckFollowResult::clear_has_uid() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneCheckFollowResult::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
::google::protobuf::uint32 OneCheckFollowResult::uid() const {
  // @@protoc_insertion_point(field_get:plane.OneCheckFollowResult.uid)
  return uid_;
}
void OneCheckFollowResult::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneCheckFollowResult.uid)
}

// optional uint32 already_followed = 2;
bool OneCheckFollowResult::has_already_followed() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OneCheckFollowResult::set_has_already_followed() {
  _has_bits_[0] |= 0x00000002u;
}
void OneCheckFollowResult::clear_has_already_followed() {
  _has_bits_[0] &= ~0x00000002u;
}
void OneCheckFollowResult::clear_already_followed() {
  already_followed_ = 0u;
  clear_has_already_followed();
}
::google::protobuf::uint32 OneCheckFollowResult::already_followed() const {
  // @@protoc_insertion_point(field_get:plane.OneCheckFollowResult.already_followed)
  return already_followed_;
}
void OneCheckFollowResult::set_already_followed(::google::protobuf::uint32 value) {
  set_has_already_followed();
  already_followed_ = value;
  // @@protoc_insertion_point(field_set:plane.OneCheckFollowResult.already_followed)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CheckFollowResultMsg::kResultsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CheckFollowResultMsg::CheckFollowResultMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.CheckFollowResultMsg)
}
CheckFollowResultMsg::CheckFollowResultMsg(const CheckFollowResultMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      results_(from.results_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:plane.CheckFollowResultMsg)
}

void CheckFollowResultMsg::SharedCtor() {
  _cached_size_ = 0;
}

CheckFollowResultMsg::~CheckFollowResultMsg() {
  // @@protoc_insertion_point(destructor:plane.CheckFollowResultMsg)
  SharedDtor();
}

void CheckFollowResultMsg::SharedDtor() {
}

void CheckFollowResultMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CheckFollowResultMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[22].descriptor;
}

const CheckFollowResultMsg& CheckFollowResultMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

CheckFollowResultMsg* CheckFollowResultMsg::New(::google::protobuf::Arena* arena) const {
  CheckFollowResultMsg* n = new CheckFollowResultMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CheckFollowResultMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.CheckFollowResultMsg)
  results_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CheckFollowResultMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.CheckFollowResultMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .plane.OneCheckFollowResult results = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_results()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.CheckFollowResultMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.CheckFollowResultMsg)
  return false;
#undef DO_
}

void CheckFollowResultMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.CheckFollowResultMsg)
  // repeated .plane.OneCheckFollowResult results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->results(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.CheckFollowResultMsg)
}

::google::protobuf::uint8* CheckFollowResultMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.CheckFollowResultMsg)
  // repeated .plane.OneCheckFollowResult results = 1;
  for (unsigned int i = 0, n = this->results_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->results(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.CheckFollowResultMsg)
  return target;
}

size_t CheckFollowResultMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.CheckFollowResultMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OneCheckFollowResult results = 1;
  {
    unsigned int count = this->results_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->results(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CheckFollowResultMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.CheckFollowResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckFollowResultMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CheckFollowResultMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.CheckFollowResultMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.CheckFollowResultMsg)
    MergeFrom(*source);
  }
}

void CheckFollowResultMsg::MergeFrom(const CheckFollowResultMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.CheckFollowResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  results_.MergeFrom(from.results_);
}

void CheckFollowResultMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.CheckFollowResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckFollowResultMsg::CopyFrom(const CheckFollowResultMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.CheckFollowResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckFollowResultMsg::IsInitialized() const {
  return true;
}

void CheckFollowResultMsg::Swap(CheckFollowResultMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CheckFollowResultMsg::InternalSwap(CheckFollowResultMsg* other) {
  results_.UnsafeArenaSwap(&other->results_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CheckFollowResultMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[22];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CheckFollowResultMsg

// repeated .plane.OneCheckFollowResult results = 1;
int CheckFollowResultMsg::results_size() const {
  return results_.size();
}
void CheckFollowResultMsg::clear_results() {
  results_.Clear();
}
const ::plane::OneCheckFollowResult& CheckFollowResultMsg::results(int index) const {
  // @@protoc_insertion_point(field_get:plane.CheckFollowResultMsg.results)
  return results_.Get(index);
}
::plane::OneCheckFollowResult* CheckFollowResultMsg::mutable_results(int index) {
  // @@protoc_insertion_point(field_mutable:plane.CheckFollowResultMsg.results)
  return results_.Mutable(index);
}
::plane::OneCheckFollowResult* CheckFollowResultMsg::add_results() {
  // @@protoc_insertion_point(field_add:plane.CheckFollowResultMsg.results)
  return results_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneCheckFollowResult >*
CheckFollowResultMsg::mutable_results() {
  // @@protoc_insertion_point(field_mutable_list:plane.CheckFollowResultMsg.results)
  return &results_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneCheckFollowResult >&
CheckFollowResultMsg::results() const {
  // @@protoc_insertion_point(field_list:plane.CheckFollowResultMsg.results)
  return results_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneRewardObj::kBaseidFieldNumber;
const int OneRewardObj::kNumFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneRewardObj::OneRewardObj()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OneRewardObj)
}
OneRewardObj::OneRewardObj(const OneRewardObj& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&baseid_, &from.baseid_,
    reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&baseid_) + sizeof(num_));
  // @@protoc_insertion_point(copy_constructor:plane.OneRewardObj)
}

void OneRewardObj::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&baseid_, 0, reinterpret_cast<char*>(&num_) -
    reinterpret_cast<char*>(&baseid_) + sizeof(num_));
}

OneRewardObj::~OneRewardObj() {
  // @@protoc_insertion_point(destructor:plane.OneRewardObj)
  SharedDtor();
}

void OneRewardObj::SharedDtor() {
}

void OneRewardObj::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneRewardObj::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[23].descriptor;
}

const OneRewardObj& OneRewardObj::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneRewardObj* OneRewardObj::New(::google::protobuf::Arena* arena) const {
  OneRewardObj* n = new OneRewardObj;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneRewardObj::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OneRewardObj)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&baseid_, 0, reinterpret_cast<char*>(&num_) -
      reinterpret_cast<char*>(&baseid_) + sizeof(num_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneRewardObj::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OneRewardObj)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 baseid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_baseid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &baseid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 num = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_num();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OneRewardObj)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OneRewardObj)
  return false;
#undef DO_
}

void OneRewardObj::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OneRewardObj)
  // optional uint32 baseid = 1;
  if (has_baseid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->baseid(), output);
  }

  // optional uint32 num = 2;
  if (has_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->num(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OneRewardObj)
}

::google::protobuf::uint8* OneRewardObj::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OneRewardObj)
  // optional uint32 baseid = 1;
  if (has_baseid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->baseid(), target);
  }

  // optional uint32 num = 2;
  if (has_num()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->num(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OneRewardObj)
  return target;
}

size_t OneRewardObj::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OneRewardObj)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 baseid = 1;
    if (has_baseid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->baseid());
    }

    // optional uint32 num = 2;
    if (has_num()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->num());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneRewardObj::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OneRewardObj)
  GOOGLE_DCHECK_NE(&from, this);
  const OneRewardObj* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneRewardObj>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OneRewardObj)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OneRewardObj)
    MergeFrom(*source);
  }
}

void OneRewardObj::MergeFrom(const OneRewardObj& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OneRewardObj)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_baseid()) {
      set_baseid(from.baseid());
    }
    if (from.has_num()) {
      set_num(from.num());
    }
  }
}

void OneRewardObj::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OneRewardObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneRewardObj::CopyFrom(const OneRewardObj& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OneRewardObj)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneRewardObj::IsInitialized() const {
  return true;
}

void OneRewardObj::Swap(OneRewardObj* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneRewardObj::InternalSwap(OneRewardObj* other) {
  std::swap(baseid_, other->baseid_);
  std::swap(num_, other->num_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneRewardObj::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[23];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneRewardObj

// optional uint32 baseid = 1;
bool OneRewardObj::has_baseid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneRewardObj::set_has_baseid() {
  _has_bits_[0] |= 0x00000001u;
}
void OneRewardObj::clear_has_baseid() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneRewardObj::clear_baseid() {
  baseid_ = 0u;
  clear_has_baseid();
}
::google::protobuf::uint32 OneRewardObj::baseid() const {
  // @@protoc_insertion_point(field_get:plane.OneRewardObj.baseid)
  return baseid_;
}
void OneRewardObj::set_baseid(::google::protobuf::uint32 value) {
  set_has_baseid();
  baseid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneRewardObj.baseid)
}

// optional uint32 num = 2;
bool OneRewardObj::has_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void OneRewardObj::set_has_num() {
  _has_bits_[0] |= 0x00000002u;
}
void OneRewardObj::clear_has_num() {
  _has_bits_[0] &= ~0x00000002u;
}
void OneRewardObj::clear_num() {
  num_ = 0u;
  clear_has_num();
}
::google::protobuf::uint32 OneRewardObj::num() const {
  // @@protoc_insertion_point(field_get:plane.OneRewardObj.num)
  return num_;
}
void OneRewardObj::set_num(::google::protobuf::uint32 value) {
  set_has_num();
  num_ = value;
  // @@protoc_insertion_point(field_set:plane.OneRewardObj.num)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneLevelReward::kTypeFieldNumber;
const int OneLevelReward::kObjsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneLevelReward::OneLevelReward()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.OneLevelReward)
}
OneLevelReward::OneLevelReward(const OneLevelReward& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      objs_(from.objs_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:plane.OneLevelReward)
}

void OneLevelReward::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0u;
}

OneLevelReward::~OneLevelReward() {
  // @@protoc_insertion_point(destructor:plane.OneLevelReward)
  SharedDtor();
}

void OneLevelReward::SharedDtor() {
}

void OneLevelReward::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneLevelReward::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[24].descriptor;
}

const OneLevelReward& OneLevelReward::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneLevelReward* OneLevelReward::New(::google::protobuf::Arena* arena) const {
  OneLevelReward* n = new OneLevelReward;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneLevelReward::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.OneLevelReward)
  objs_.Clear();
  type_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool OneLevelReward::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.OneLevelReward)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 type = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_type();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .plane.OneRewardObj objs = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_objs()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.OneLevelReward)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.OneLevelReward)
  return false;
#undef DO_
}

void OneLevelReward::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.OneLevelReward)
  // optional uint32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // repeated .plane.OneRewardObj objs = 2;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->objs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.OneLevelReward)
}

::google::protobuf::uint8* OneLevelReward::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.OneLevelReward)
  // optional uint32 type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // repeated .plane.OneRewardObj objs = 2;
  for (unsigned int i = 0, n = this->objs_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->objs(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.OneLevelReward)
  return target;
}

size_t OneLevelReward::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.OneLevelReward)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OneRewardObj objs = 2;
  {
    unsigned int count = this->objs_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->objs(i));
    }
  }

  // optional uint32 type = 1;
  if (has_type()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneLevelReward::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.OneLevelReward)
  GOOGLE_DCHECK_NE(&from, this);
  const OneLevelReward* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneLevelReward>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.OneLevelReward)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.OneLevelReward)
    MergeFrom(*source);
  }
}

void OneLevelReward::MergeFrom(const OneLevelReward& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.OneLevelReward)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  objs_.MergeFrom(from.objs_);
  if (from.has_type()) {
    set_type(from.type());
  }
}

void OneLevelReward::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.OneLevelReward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneLevelReward::CopyFrom(const OneLevelReward& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.OneLevelReward)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneLevelReward::IsInitialized() const {
  return true;
}

void OneLevelReward::Swap(OneLevelReward* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneLevelReward::InternalSwap(OneLevelReward* other) {
  objs_.UnsafeArenaSwap(&other->objs_);
  std::swap(type_, other->type_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneLevelReward::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[24];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneLevelReward

// optional uint32 type = 1;
bool OneLevelReward::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void OneLevelReward::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
void OneLevelReward::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
void OneLevelReward::clear_type() {
  type_ = 0u;
  clear_has_type();
}
::google::protobuf::uint32 OneLevelReward::type() const {
  // @@protoc_insertion_point(field_get:plane.OneLevelReward.type)
  return type_;
}
void OneLevelReward::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:plane.OneLevelReward.type)
}

// repeated .plane.OneRewardObj objs = 2;
int OneLevelReward::objs_size() const {
  return objs_.size();
}
void OneLevelReward::clear_objs() {
  objs_.Clear();
}
const ::plane::OneRewardObj& OneLevelReward::objs(int index) const {
  // @@protoc_insertion_point(field_get:plane.OneLevelReward.objs)
  return objs_.Get(index);
}
::plane::OneRewardObj* OneLevelReward::mutable_objs(int index) {
  // @@protoc_insertion_point(field_mutable:plane.OneLevelReward.objs)
  return objs_.Mutable(index);
}
::plane::OneRewardObj* OneLevelReward::add_objs() {
  // @@protoc_insertion_point(field_add:plane.OneLevelReward.objs)
  return objs_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneRewardObj >*
OneLevelReward::mutable_objs() {
  // @@protoc_insertion_point(field_mutable_list:plane.OneLevelReward.objs)
  return &objs_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneRewardObj >&
OneLevelReward::objs() const {
  // @@protoc_insertion_point(field_list:plane.OneLevelReward.objs)
  return objs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SeasonRewardMsg::kRewardsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SeasonRewardMsg::SeasonRewardMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsocial_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.SeasonRewardMsg)
}
SeasonRewardMsg::SeasonRewardMsg(const SeasonRewardMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      rewards_(from.rewards_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:plane.SeasonRewardMsg)
}

void SeasonRewardMsg::SharedCtor() {
  _cached_size_ = 0;
}

SeasonRewardMsg::~SeasonRewardMsg() {
  // @@protoc_insertion_point(destructor:plane.SeasonRewardMsg)
  SharedDtor();
}

void SeasonRewardMsg::SharedDtor() {
}

void SeasonRewardMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SeasonRewardMsg::descriptor() {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[25].descriptor;
}

const SeasonRewardMsg& SeasonRewardMsg::default_instance() {
  protobuf_plane_2fsocial_2eproto::InitDefaults();
  return *internal_default_instance();
}

SeasonRewardMsg* SeasonRewardMsg::New(::google::protobuf::Arena* arena) const {
  SeasonRewardMsg* n = new SeasonRewardMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SeasonRewardMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.SeasonRewardMsg)
  rewards_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SeasonRewardMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.SeasonRewardMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .plane.OneLevelReward rewards = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_rewards()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.SeasonRewardMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.SeasonRewardMsg)
  return false;
#undef DO_
}

void SeasonRewardMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.SeasonRewardMsg)
  // repeated .plane.OneLevelReward rewards = 1;
  for (unsigned int i = 0, n = this->rewards_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->rewards(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.SeasonRewardMsg)
}

::google::protobuf::uint8* SeasonRewardMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.SeasonRewardMsg)
  // repeated .plane.OneLevelReward rewards = 1;
  for (unsigned int i = 0, n = this->rewards_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->rewards(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.SeasonRewardMsg)
  return target;
}

size_t SeasonRewardMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.SeasonRewardMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .plane.OneLevelReward rewards = 1;
  {
    unsigned int count = this->rewards_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->rewards(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SeasonRewardMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.SeasonRewardMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const SeasonRewardMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SeasonRewardMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.SeasonRewardMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.SeasonRewardMsg)
    MergeFrom(*source);
  }
}

void SeasonRewardMsg::MergeFrom(const SeasonRewardMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.SeasonRewardMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rewards_.MergeFrom(from.rewards_);
}

void SeasonRewardMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.SeasonRewardMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SeasonRewardMsg::CopyFrom(const SeasonRewardMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.SeasonRewardMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SeasonRewardMsg::IsInitialized() const {
  return true;
}

void SeasonRewardMsg::Swap(SeasonRewardMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SeasonRewardMsg::InternalSwap(SeasonRewardMsg* other) {
  rewards_.UnsafeArenaSwap(&other->rewards_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SeasonRewardMsg::GetMetadata() const {
  protobuf_plane_2fsocial_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsocial_2eproto::file_level_metadata[25];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SeasonRewardMsg

// repeated .plane.OneLevelReward rewards = 1;
int SeasonRewardMsg::rewards_size() const {
  return rewards_.size();
}
void SeasonRewardMsg::clear_rewards() {
  rewards_.Clear();
}
const ::plane::OneLevelReward& SeasonRewardMsg::rewards(int index) const {
  // @@protoc_insertion_point(field_get:plane.SeasonRewardMsg.rewards)
  return rewards_.Get(index);
}
::plane::OneLevelReward* SeasonRewardMsg::mutable_rewards(int index) {
  // @@protoc_insertion_point(field_mutable:plane.SeasonRewardMsg.rewards)
  return rewards_.Mutable(index);
}
::plane::OneLevelReward* SeasonRewardMsg::add_rewards() {
  // @@protoc_insertion_point(field_add:plane.SeasonRewardMsg.rewards)
  return rewards_.Add();
}
::google::protobuf::RepeatedPtrField< ::plane::OneLevelReward >*
SeasonRewardMsg::mutable_rewards() {
  // @@protoc_insertion_point(field_mutable_list:plane.SeasonRewardMsg.rewards)
  return &rewards_;
}
const ::google::protobuf::RepeatedPtrField< ::plane::OneLevelReward >&
SeasonRewardMsg::rewards() const {
  // @@protoc_insertion_point(field_list:plane.SeasonRewardMsg.rewards)
  return rewards_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace plane

// @@protoc_insertion_point(global_scope)
