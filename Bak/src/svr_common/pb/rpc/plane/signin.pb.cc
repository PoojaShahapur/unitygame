// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plane/signin.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "plane/signin.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace plane {
class MonthSigninInfoMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MonthSigninInfoMsg> {
} _MonthSigninInfoMsg_default_instance_;
class DaySigninResultMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DaySigninResultMsg> {
} _DaySigninResultMsg_default_instance_;
class ReceiveCumulaRewardIdMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReceiveCumulaRewardIdMsg> {
} _ReceiveCumulaRewardIdMsg_default_instance_;
class ReceiveCumulaRewardResultMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ReceiveCumulaRewardResultMsg> {
} _ReceiveCumulaRewardResultMsg_default_instance_;

namespace protobuf_plane_2fsignin_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthSigninInfoMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthSigninInfoMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthSigninInfoMsg, signincount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthSigninInfoMsg, signinlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthSigninInfoMsg, receivecount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MonthSigninInfoMsg, cumularewardlist_),
  0,
  ~0u,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaySigninResultMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaySigninResultMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DaySigninResultMsg, ret_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceiveCumulaRewardIdMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceiveCumulaRewardIdMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceiveCumulaRewardIdMsg, id_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceiveCumulaRewardResultMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceiveCumulaRewardResultMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceiveCumulaRewardResultMsg, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReceiveCumulaRewardResultMsg, ret_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(MonthSigninInfoMsg)},
  { 12, 17, sizeof(DaySigninResultMsg)},
  { 18, 23, sizeof(ReceiveCumulaRewardIdMsg)},
  { 24, 30, sizeof(ReceiveCumulaRewardResultMsg)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_MonthSigninInfoMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DaySigninResultMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReceiveCumulaRewardIdMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ReceiveCumulaRewardResultMsg_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "plane/signin.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _MonthSigninInfoMsg_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _DaySigninResultMsg_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _ReceiveCumulaRewardIdMsg_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ReceiveCumulaRewardResultMsg_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::rpc::protobuf_empty_5fmsg_2eproto::InitDefaults();
  _MonthSigninInfoMsg_default_instance_.DefaultConstruct();
  _DaySigninResultMsg_default_instance_.DefaultConstruct();
  _ReceiveCumulaRewardIdMsg_default_instance_.DefaultConstruct();
  _ReceiveCumulaRewardResultMsg_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\022plane/signin.proto\022\005plane\032\017empty_msg.p"
      "roto\"m\n\022MonthSigninInfoMsg\022\023\n\013signincoun"
      "t\030\001 \001(\r\022\022\n\nsigninlist\030\002 \003(\r\022\024\n\014receiveco"
      "unt\030\003 \001(\r\022\030\n\020cumularewardlist\030\004 \003(\r\"!\n\022D"
      "aySigninResultMsg\022\013\n\003ret\030\001 \001(\r\"&\n\030Receiv"
      "eCumulaRewardIdMsg\022\n\n\002id\030\001 \001(\r\"7\n\034Receiv"
      "eCumulaRewardResultMsg\022\n\n\002id\030\001 \001(\r\022\013\n\003re"
      "t\030\002 \001(\r2\203\001\n\tSignInC2S\022,\n\014ReqDaySignin\022\r."
      "rpc.EmptyMsg\032\r.rpc.EmptyMsg\022H\n\026ReqReceiv"
      "eCumulaReward\022\037.plane.ReceiveCumulaRewar"
      "dIdMsg\032\r.rpc.EmptyMsg2\350\001\n\tSignInS2C\022A\n\025N"
      "otifyMonthSigninInfo\022\031.plane.MonthSignin"
      "InfoMsg\032\r.rpc.EmptyMsg\022A\n\025NotifyDaySigni"
      "nResult\022\031.plane.DaySigninResultMsg\032\r.rpc"
      ".EmptyMsg\022U\n\037NotifyReceiveCumulaRewardRe"
      "sult\022#.plane.ReceiveCumulaRewardResultMs"
      "g\032\r.rpc.EmptyMsg"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 656);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "plane/signin.proto", &protobuf_RegisterTypes);
  ::rpc::protobuf_empty_5fmsg_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_plane_2fsignin_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MonthSigninInfoMsg::kSignincountFieldNumber;
const int MonthSigninInfoMsg::kSigninlistFieldNumber;
const int MonthSigninInfoMsg::kReceivecountFieldNumber;
const int MonthSigninInfoMsg::kCumularewardlistFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MonthSigninInfoMsg::MonthSigninInfoMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsignin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.MonthSigninInfoMsg)
}
MonthSigninInfoMsg::MonthSigninInfoMsg(const MonthSigninInfoMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      signinlist_(from.signinlist_),
      cumularewardlist_(from.cumularewardlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&signincount_, &from.signincount_,
    reinterpret_cast<char*>(&receivecount_) -
    reinterpret_cast<char*>(&signincount_) + sizeof(receivecount_));
  // @@protoc_insertion_point(copy_constructor:plane.MonthSigninInfoMsg)
}

void MonthSigninInfoMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&signincount_, 0, reinterpret_cast<char*>(&receivecount_) -
    reinterpret_cast<char*>(&signincount_) + sizeof(receivecount_));
}

MonthSigninInfoMsg::~MonthSigninInfoMsg() {
  // @@protoc_insertion_point(destructor:plane.MonthSigninInfoMsg)
  SharedDtor();
}

void MonthSigninInfoMsg::SharedDtor() {
}

void MonthSigninInfoMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MonthSigninInfoMsg::descriptor() {
  protobuf_plane_2fsignin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsignin_2eproto::file_level_metadata[0].descriptor;
}

const MonthSigninInfoMsg& MonthSigninInfoMsg::default_instance() {
  protobuf_plane_2fsignin_2eproto::InitDefaults();
  return *internal_default_instance();
}

MonthSigninInfoMsg* MonthSigninInfoMsg::New(::google::protobuf::Arena* arena) const {
  MonthSigninInfoMsg* n = new MonthSigninInfoMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MonthSigninInfoMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.MonthSigninInfoMsg)
  signinlist_.Clear();
  cumularewardlist_.Clear();
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&signincount_, 0, reinterpret_cast<char*>(&receivecount_) -
      reinterpret_cast<char*>(&signincount_) + sizeof(receivecount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MonthSigninInfoMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.MonthSigninInfoMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 signincount = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_signincount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &signincount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 signinlist = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 16u, input, this->mutable_signinlist())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(18u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_signinlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 receivecount = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {
          set_has_receivecount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &receivecount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 cumularewardlist = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 32u, input, this->mutable_cumularewardlist())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(34u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_cumularewardlist())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.MonthSigninInfoMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.MonthSigninInfoMsg)
  return false;
#undef DO_
}

void MonthSigninInfoMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.MonthSigninInfoMsg)
  // optional uint32 signincount = 1;
  if (has_signincount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->signincount(), output);
  }

  // repeated uint32 signinlist = 2;
  for (int i = 0, n = this->signinlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      2, this->signinlist(i), output);
  }

  // optional uint32 receivecount = 3;
  if (has_receivecount()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->receivecount(), output);
  }

  // repeated uint32 cumularewardlist = 4;
  for (int i = 0, n = this->cumularewardlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      4, this->cumularewardlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.MonthSigninInfoMsg)
}

::google::protobuf::uint8* MonthSigninInfoMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.MonthSigninInfoMsg)
  // optional uint32 signincount = 1;
  if (has_signincount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->signincount(), target);
  }

  // repeated uint32 signinlist = 2;
  for (int i = 0, n = this->signinlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(2, this->signinlist(i), target);
  }

  // optional uint32 receivecount = 3;
  if (has_receivecount()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->receivecount(), target);
  }

  // repeated uint32 cumularewardlist = 4;
  for (int i = 0, n = this->cumularewardlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(4, this->cumularewardlist(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.MonthSigninInfoMsg)
  return target;
}

size_t MonthSigninInfoMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.MonthSigninInfoMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated uint32 signinlist = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->signinlist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->signinlist_size());
    total_size += data_size;
  }

  // repeated uint32 cumularewardlist = 4;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->cumularewardlist_);
    total_size += 1 *
                  ::google::protobuf::internal::FromIntSize(this->cumularewardlist_size());
    total_size += data_size;
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 signincount = 1;
    if (has_signincount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->signincount());
    }

    // optional uint32 receivecount = 3;
    if (has_receivecount()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->receivecount());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MonthSigninInfoMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.MonthSigninInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const MonthSigninInfoMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MonthSigninInfoMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.MonthSigninInfoMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.MonthSigninInfoMsg)
    MergeFrom(*source);
  }
}

void MonthSigninInfoMsg::MergeFrom(const MonthSigninInfoMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.MonthSigninInfoMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  signinlist_.MergeFrom(from.signinlist_);
  cumularewardlist_.MergeFrom(from.cumularewardlist_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_signincount()) {
      set_signincount(from.signincount());
    }
    if (from.has_receivecount()) {
      set_receivecount(from.receivecount());
    }
  }
}

void MonthSigninInfoMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.MonthSigninInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonthSigninInfoMsg::CopyFrom(const MonthSigninInfoMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.MonthSigninInfoMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonthSigninInfoMsg::IsInitialized() const {
  return true;
}

void MonthSigninInfoMsg::Swap(MonthSigninInfoMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MonthSigninInfoMsg::InternalSwap(MonthSigninInfoMsg* other) {
  signinlist_.UnsafeArenaSwap(&other->signinlist_);
  cumularewardlist_.UnsafeArenaSwap(&other->cumularewardlist_);
  std::swap(signincount_, other->signincount_);
  std::swap(receivecount_, other->receivecount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MonthSigninInfoMsg::GetMetadata() const {
  protobuf_plane_2fsignin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsignin_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MonthSigninInfoMsg

// optional uint32 signincount = 1;
bool MonthSigninInfoMsg::has_signincount() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MonthSigninInfoMsg::set_has_signincount() {
  _has_bits_[0] |= 0x00000001u;
}
void MonthSigninInfoMsg::clear_has_signincount() {
  _has_bits_[0] &= ~0x00000001u;
}
void MonthSigninInfoMsg::clear_signincount() {
  signincount_ = 0u;
  clear_has_signincount();
}
::google::protobuf::uint32 MonthSigninInfoMsg::signincount() const {
  // @@protoc_insertion_point(field_get:plane.MonthSigninInfoMsg.signincount)
  return signincount_;
}
void MonthSigninInfoMsg::set_signincount(::google::protobuf::uint32 value) {
  set_has_signincount();
  signincount_ = value;
  // @@protoc_insertion_point(field_set:plane.MonthSigninInfoMsg.signincount)
}

// repeated uint32 signinlist = 2;
int MonthSigninInfoMsg::signinlist_size() const {
  return signinlist_.size();
}
void MonthSigninInfoMsg::clear_signinlist() {
  signinlist_.Clear();
}
::google::protobuf::uint32 MonthSigninInfoMsg::signinlist(int index) const {
  // @@protoc_insertion_point(field_get:plane.MonthSigninInfoMsg.signinlist)
  return signinlist_.Get(index);
}
void MonthSigninInfoMsg::set_signinlist(int index, ::google::protobuf::uint32 value) {
  signinlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:plane.MonthSigninInfoMsg.signinlist)
}
void MonthSigninInfoMsg::add_signinlist(::google::protobuf::uint32 value) {
  signinlist_.Add(value);
  // @@protoc_insertion_point(field_add:plane.MonthSigninInfoMsg.signinlist)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MonthSigninInfoMsg::signinlist() const {
  // @@protoc_insertion_point(field_list:plane.MonthSigninInfoMsg.signinlist)
  return signinlist_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MonthSigninInfoMsg::mutable_signinlist() {
  // @@protoc_insertion_point(field_mutable_list:plane.MonthSigninInfoMsg.signinlist)
  return &signinlist_;
}

// optional uint32 receivecount = 3;
bool MonthSigninInfoMsg::has_receivecount() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MonthSigninInfoMsg::set_has_receivecount() {
  _has_bits_[0] |= 0x00000002u;
}
void MonthSigninInfoMsg::clear_has_receivecount() {
  _has_bits_[0] &= ~0x00000002u;
}
void MonthSigninInfoMsg::clear_receivecount() {
  receivecount_ = 0u;
  clear_has_receivecount();
}
::google::protobuf::uint32 MonthSigninInfoMsg::receivecount() const {
  // @@protoc_insertion_point(field_get:plane.MonthSigninInfoMsg.receivecount)
  return receivecount_;
}
void MonthSigninInfoMsg::set_receivecount(::google::protobuf::uint32 value) {
  set_has_receivecount();
  receivecount_ = value;
  // @@protoc_insertion_point(field_set:plane.MonthSigninInfoMsg.receivecount)
}

// repeated uint32 cumularewardlist = 4;
int MonthSigninInfoMsg::cumularewardlist_size() const {
  return cumularewardlist_.size();
}
void MonthSigninInfoMsg::clear_cumularewardlist() {
  cumularewardlist_.Clear();
}
::google::protobuf::uint32 MonthSigninInfoMsg::cumularewardlist(int index) const {
  // @@protoc_insertion_point(field_get:plane.MonthSigninInfoMsg.cumularewardlist)
  return cumularewardlist_.Get(index);
}
void MonthSigninInfoMsg::set_cumularewardlist(int index, ::google::protobuf::uint32 value) {
  cumularewardlist_.Set(index, value);
  // @@protoc_insertion_point(field_set:plane.MonthSigninInfoMsg.cumularewardlist)
}
void MonthSigninInfoMsg::add_cumularewardlist(::google::protobuf::uint32 value) {
  cumularewardlist_.Add(value);
  // @@protoc_insertion_point(field_add:plane.MonthSigninInfoMsg.cumularewardlist)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
MonthSigninInfoMsg::cumularewardlist() const {
  // @@protoc_insertion_point(field_list:plane.MonthSigninInfoMsg.cumularewardlist)
  return cumularewardlist_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
MonthSigninInfoMsg::mutable_cumularewardlist() {
  // @@protoc_insertion_point(field_mutable_list:plane.MonthSigninInfoMsg.cumularewardlist)
  return &cumularewardlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DaySigninResultMsg::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DaySigninResultMsg::DaySigninResultMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsignin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.DaySigninResultMsg)
}
DaySigninResultMsg::DaySigninResultMsg(const DaySigninResultMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ret_ = from.ret_;
  // @@protoc_insertion_point(copy_constructor:plane.DaySigninResultMsg)
}

void DaySigninResultMsg::SharedCtor() {
  _cached_size_ = 0;
  ret_ = 0u;
}

DaySigninResultMsg::~DaySigninResultMsg() {
  // @@protoc_insertion_point(destructor:plane.DaySigninResultMsg)
  SharedDtor();
}

void DaySigninResultMsg::SharedDtor() {
}

void DaySigninResultMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DaySigninResultMsg::descriptor() {
  protobuf_plane_2fsignin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsignin_2eproto::file_level_metadata[1].descriptor;
}

const DaySigninResultMsg& DaySigninResultMsg::default_instance() {
  protobuf_plane_2fsignin_2eproto::InitDefaults();
  return *internal_default_instance();
}

DaySigninResultMsg* DaySigninResultMsg::New(::google::protobuf::Arena* arena) const {
  DaySigninResultMsg* n = new DaySigninResultMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DaySigninResultMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.DaySigninResultMsg)
  ret_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DaySigninResultMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.DaySigninResultMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 ret = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.DaySigninResultMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.DaySigninResultMsg)
  return false;
#undef DO_
}

void DaySigninResultMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.DaySigninResultMsg)
  // optional uint32 ret = 1;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.DaySigninResultMsg)
}

::google::protobuf::uint8* DaySigninResultMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.DaySigninResultMsg)
  // optional uint32 ret = 1;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.DaySigninResultMsg)
  return target;
}

size_t DaySigninResultMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.DaySigninResultMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 ret = 1;
  if (has_ret()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ret());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DaySigninResultMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.DaySigninResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const DaySigninResultMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DaySigninResultMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.DaySigninResultMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.DaySigninResultMsg)
    MergeFrom(*source);
  }
}

void DaySigninResultMsg::MergeFrom(const DaySigninResultMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.DaySigninResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_ret()) {
    set_ret(from.ret());
  }
}

void DaySigninResultMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.DaySigninResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DaySigninResultMsg::CopyFrom(const DaySigninResultMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.DaySigninResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DaySigninResultMsg::IsInitialized() const {
  return true;
}

void DaySigninResultMsg::Swap(DaySigninResultMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DaySigninResultMsg::InternalSwap(DaySigninResultMsg* other) {
  std::swap(ret_, other->ret_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DaySigninResultMsg::GetMetadata() const {
  protobuf_plane_2fsignin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsignin_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DaySigninResultMsg

// optional uint32 ret = 1;
bool DaySigninResultMsg::has_ret() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void DaySigninResultMsg::set_has_ret() {
  _has_bits_[0] |= 0x00000001u;
}
void DaySigninResultMsg::clear_has_ret() {
  _has_bits_[0] &= ~0x00000001u;
}
void DaySigninResultMsg::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
::google::protobuf::uint32 DaySigninResultMsg::ret() const {
  // @@protoc_insertion_point(field_get:plane.DaySigninResultMsg.ret)
  return ret_;
}
void DaySigninResultMsg::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:plane.DaySigninResultMsg.ret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReceiveCumulaRewardIdMsg::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReceiveCumulaRewardIdMsg::ReceiveCumulaRewardIdMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsignin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.ReceiveCumulaRewardIdMsg)
}
ReceiveCumulaRewardIdMsg::ReceiveCumulaRewardIdMsg(const ReceiveCumulaRewardIdMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:plane.ReceiveCumulaRewardIdMsg)
}

void ReceiveCumulaRewardIdMsg::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0u;
}

ReceiveCumulaRewardIdMsg::~ReceiveCumulaRewardIdMsg() {
  // @@protoc_insertion_point(destructor:plane.ReceiveCumulaRewardIdMsg)
  SharedDtor();
}

void ReceiveCumulaRewardIdMsg::SharedDtor() {
}

void ReceiveCumulaRewardIdMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReceiveCumulaRewardIdMsg::descriptor() {
  protobuf_plane_2fsignin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsignin_2eproto::file_level_metadata[2].descriptor;
}

const ReceiveCumulaRewardIdMsg& ReceiveCumulaRewardIdMsg::default_instance() {
  protobuf_plane_2fsignin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReceiveCumulaRewardIdMsg* ReceiveCumulaRewardIdMsg::New(::google::protobuf::Arena* arena) const {
  ReceiveCumulaRewardIdMsg* n = new ReceiveCumulaRewardIdMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReceiveCumulaRewardIdMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.ReceiveCumulaRewardIdMsg)
  id_ = 0u;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReceiveCumulaRewardIdMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.ReceiveCumulaRewardIdMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.ReceiveCumulaRewardIdMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.ReceiveCumulaRewardIdMsg)
  return false;
#undef DO_
}

void ReceiveCumulaRewardIdMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.ReceiveCumulaRewardIdMsg)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.ReceiveCumulaRewardIdMsg)
}

::google::protobuf::uint8* ReceiveCumulaRewardIdMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.ReceiveCumulaRewardIdMsg)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.ReceiveCumulaRewardIdMsg)
  return target;
}

size_t ReceiveCumulaRewardIdMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.ReceiveCumulaRewardIdMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // optional uint32 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReceiveCumulaRewardIdMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.ReceiveCumulaRewardIdMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ReceiveCumulaRewardIdMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReceiveCumulaRewardIdMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.ReceiveCumulaRewardIdMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.ReceiveCumulaRewardIdMsg)
    MergeFrom(*source);
  }
}

void ReceiveCumulaRewardIdMsg::MergeFrom(const ReceiveCumulaRewardIdMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.ReceiveCumulaRewardIdMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    set_id(from.id());
  }
}

void ReceiveCumulaRewardIdMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.ReceiveCumulaRewardIdMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReceiveCumulaRewardIdMsg::CopyFrom(const ReceiveCumulaRewardIdMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.ReceiveCumulaRewardIdMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveCumulaRewardIdMsg::IsInitialized() const {
  return true;
}

void ReceiveCumulaRewardIdMsg::Swap(ReceiveCumulaRewardIdMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReceiveCumulaRewardIdMsg::InternalSwap(ReceiveCumulaRewardIdMsg* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReceiveCumulaRewardIdMsg::GetMetadata() const {
  protobuf_plane_2fsignin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsignin_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReceiveCumulaRewardIdMsg

// optional uint32 id = 1;
bool ReceiveCumulaRewardIdMsg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReceiveCumulaRewardIdMsg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ReceiveCumulaRewardIdMsg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReceiveCumulaRewardIdMsg::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 ReceiveCumulaRewardIdMsg::id() const {
  // @@protoc_insertion_point(field_get:plane.ReceiveCumulaRewardIdMsg.id)
  return id_;
}
void ReceiveCumulaRewardIdMsg::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:plane.ReceiveCumulaRewardIdMsg.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReceiveCumulaRewardResultMsg::kIdFieldNumber;
const int ReceiveCumulaRewardResultMsg::kRetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReceiveCumulaRewardResultMsg::ReceiveCumulaRewardResultMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_plane_2fsignin_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:plane.ReceiveCumulaRewardResultMsg)
}
ReceiveCumulaRewardResultMsg::ReceiveCumulaRewardResultMsg(const ReceiveCumulaRewardResultMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&id_) + sizeof(ret_));
  // @@protoc_insertion_point(copy_constructor:plane.ReceiveCumulaRewardResultMsg)
}

void ReceiveCumulaRewardResultMsg::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&id_, 0, reinterpret_cast<char*>(&ret_) -
    reinterpret_cast<char*>(&id_) + sizeof(ret_));
}

ReceiveCumulaRewardResultMsg::~ReceiveCumulaRewardResultMsg() {
  // @@protoc_insertion_point(destructor:plane.ReceiveCumulaRewardResultMsg)
  SharedDtor();
}

void ReceiveCumulaRewardResultMsg::SharedDtor() {
}

void ReceiveCumulaRewardResultMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReceiveCumulaRewardResultMsg::descriptor() {
  protobuf_plane_2fsignin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsignin_2eproto::file_level_metadata[3].descriptor;
}

const ReceiveCumulaRewardResultMsg& ReceiveCumulaRewardResultMsg::default_instance() {
  protobuf_plane_2fsignin_2eproto::InitDefaults();
  return *internal_default_instance();
}

ReceiveCumulaRewardResultMsg* ReceiveCumulaRewardResultMsg::New(::google::protobuf::Arena* arena) const {
  ReceiveCumulaRewardResultMsg* n = new ReceiveCumulaRewardResultMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReceiveCumulaRewardResultMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:plane.ReceiveCumulaRewardResultMsg)
  if (_has_bits_[0 / 32] & 3u) {
    ::memset(&id_, 0, reinterpret_cast<char*>(&ret_) -
      reinterpret_cast<char*>(&id_) + sizeof(ret_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool ReceiveCumulaRewardResultMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:plane.ReceiveCumulaRewardResultMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional uint32 id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {
          set_has_id();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint32 ret = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {
          set_has_ret();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ret_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:plane.ReceiveCumulaRewardResultMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:plane.ReceiveCumulaRewardResultMsg)
  return false;
#undef DO_
}

void ReceiveCumulaRewardResultMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:plane.ReceiveCumulaRewardResultMsg)
  // optional uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional uint32 ret = 2;
  if (has_ret()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->ret(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:plane.ReceiveCumulaRewardResultMsg)
}

::google::protobuf::uint8* ReceiveCumulaRewardResultMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:plane.ReceiveCumulaRewardResultMsg)
  // optional uint32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // optional uint32 ret = 2;
  if (has_ret()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->ret(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:plane.ReceiveCumulaRewardResultMsg)
  return target;
}

size_t ReceiveCumulaRewardResultMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:plane.ReceiveCumulaRewardResultMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional uint32 ret = 2;
    if (has_ret()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ret());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReceiveCumulaRewardResultMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:plane.ReceiveCumulaRewardResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ReceiveCumulaRewardResultMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ReceiveCumulaRewardResultMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:plane.ReceiveCumulaRewardResultMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:plane.ReceiveCumulaRewardResultMsg)
    MergeFrom(*source);
  }
}

void ReceiveCumulaRewardResultMsg::MergeFrom(const ReceiveCumulaRewardResultMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:plane.ReceiveCumulaRewardResultMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._has_bits_[0 / 32] & 3u) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_ret()) {
      set_ret(from.ret());
    }
  }
}

void ReceiveCumulaRewardResultMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:plane.ReceiveCumulaRewardResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReceiveCumulaRewardResultMsg::CopyFrom(const ReceiveCumulaRewardResultMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plane.ReceiveCumulaRewardResultMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReceiveCumulaRewardResultMsg::IsInitialized() const {
  return true;
}

void ReceiveCumulaRewardResultMsg::Swap(ReceiveCumulaRewardResultMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReceiveCumulaRewardResultMsg::InternalSwap(ReceiveCumulaRewardResultMsg* other) {
  std::swap(id_, other->id_);
  std::swap(ret_, other->ret_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReceiveCumulaRewardResultMsg::GetMetadata() const {
  protobuf_plane_2fsignin_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_plane_2fsignin_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReceiveCumulaRewardResultMsg

// optional uint32 id = 1;
bool ReceiveCumulaRewardResultMsg::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReceiveCumulaRewardResultMsg::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ReceiveCumulaRewardResultMsg::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReceiveCumulaRewardResultMsg::clear_id() {
  id_ = 0u;
  clear_has_id();
}
::google::protobuf::uint32 ReceiveCumulaRewardResultMsg::id() const {
  // @@protoc_insertion_point(field_get:plane.ReceiveCumulaRewardResultMsg.id)
  return id_;
}
void ReceiveCumulaRewardResultMsg::set_id(::google::protobuf::uint32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:plane.ReceiveCumulaRewardResultMsg.id)
}

// optional uint32 ret = 2;
bool ReceiveCumulaRewardResultMsg::has_ret() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReceiveCumulaRewardResultMsg::set_has_ret() {
  _has_bits_[0] |= 0x00000002u;
}
void ReceiveCumulaRewardResultMsg::clear_has_ret() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReceiveCumulaRewardResultMsg::clear_ret() {
  ret_ = 0u;
  clear_has_ret();
}
::google::protobuf::uint32 ReceiveCumulaRewardResultMsg::ret() const {
  // @@protoc_insertion_point(field_get:plane.ReceiveCumulaRewardResultMsg.ret)
  return ret_;
}
void ReceiveCumulaRewardResultMsg::set_ret(::google::protobuf::uint32 value) {
  set_has_ret();
  ret_ = value;
  // @@protoc_insertion_point(field_set:plane.ReceiveCumulaRewardResultMsg.ret)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace plane

// @@protoc_insertion_point(global_scope)
