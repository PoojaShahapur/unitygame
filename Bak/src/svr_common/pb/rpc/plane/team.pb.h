// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plane/team.proto

#ifndef PROTOBUF_plane_2fteam_2eproto__INCLUDED
#define PROTOBUF_plane_2fteam_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "empty_msg.pb.h"
#include "plane/plane_msg.pb.h"
// @@protoc_insertion_point(includes)
namespace plane {
class AddMemberInRoomMsg;
class AddMemberInRoomMsgDefaultTypeInternal;
extern AddMemberInRoomMsgDefaultTypeInternal _AddMemberInRoomMsg_default_instance_;
class AddTeamMemberMsg;
class AddTeamMemberMsgDefaultTypeInternal;
extern AddTeamMemberMsgDefaultTypeInternal _AddTeamMemberMsg_default_instance_;
class BatchAddEnergyPlaneBcMsg;
class BatchAddEnergyPlaneBcMsgDefaultTypeInternal;
extern BatchAddEnergyPlaneBcMsgDefaultTypeInternal _BatchAddEnergyPlaneBcMsg_default_instance_;
class BatchAddFoodBcMsg;
class BatchAddFoodBcMsgDefaultTypeInternal;
extern BatchAddFoodBcMsgDefaultTypeInternal _BatchAddFoodBcMsg_default_instance_;
class EnterRoomResponse;
class EnterRoomResponseDefaultTypeInternal;
extern EnterRoomResponseDefaultTypeInternal _EnterRoomResponse_default_instance_;
class EnterTeamMsg;
class EnterTeamMsgDefaultTypeInternal;
extern EnterTeamMsgDefaultTypeInternal _EnterTeamMsg_default_instance_;
class EnterTeamResponse;
class EnterTeamResponseDefaultTypeInternal;
extern EnterTeamResponseDefaultTypeInternal _EnterTeamResponse_default_instance_;
class FoodMsg;
class FoodMsgDefaultTypeInternal;
extern FoodMsgDefaultTypeInternal _FoodMsg_default_instance_;
class FrameHitBcMsg;
class FrameHitBcMsgDefaultTypeInternal;
extern FrameHitBcMsgDefaultTypeInternal _FrameHitBcMsg_default_instance_;
class InviteMsg;
class InviteMsgDefaultTypeInternal;
extern InviteMsgDefaultTypeInternal _InviteMsg_default_instance_;
class MoveInfo;
class MoveInfoDefaultTypeInternal;
extern MoveInfoDefaultTypeInternal _MoveInfo_default_instance_;
class MoveToMsg;
class MoveToMsgDefaultTypeInternal;
extern MoveToMsgDefaultTypeInternal _MoveToMsg_default_instance_;
class MsAndId;
class MsAndIdDefaultTypeInternal;
extern MsAndIdDefaultTypeInternal _MsAndId_default_instance_;
class NewNickNameMsg;
class NewNickNameMsgDefaultTypeInternal;
extern NewNickNameMsgDefaultTypeInternal _NewNickNameMsg_default_instance_;
class NicknameMsg;
class NicknameMsgDefaultTypeInternal;
extern NicknameMsgDefaultTypeInternal _NicknameMsg_default_instance_;
class OneBatchPlane;
class OneBatchPlaneDefaultTypeInternal;
extern OneBatchPlaneDefaultTypeInternal _OneBatchPlane_default_instance_;
class OneBulletGroupHit;
class OneBulletGroupHitDefaultTypeInternal;
extern OneBulletGroupHitDefaultTypeInternal _OneBulletGroupHit_default_instance_;
class OneEnergyHit;
class OneEnergyHitDefaultTypeInternal;
extern OneEnergyHitDefaultTypeInternal _OneEnergyHit_default_instance_;
class OneFriendData;
class OneFriendDataDefaultTypeInternal;
extern OneFriendDataDefaultTypeInternal _OneFriendData_default_instance_;
class OnePageFriendDataMsg;
class OnePageFriendDataMsgDefaultTypeInternal;
extern OnePageFriendDataMsgDefaultTypeInternal _OnePageFriendDataMsg_default_instance_;
class OnePlaneHit;
class OnePlaneHitDefaultTypeInternal;
extern OnePlaneHitDefaultTypeInternal _OnePlaneHit_default_instance_;
class OneResultData;
class OneResultDataDefaultTypeInternal;
extern OneResultDataDefaultTypeInternal _OneResultData_default_instance_;
class OneTeamMember;
class OneTeamMemberDefaultTypeInternal;
extern OneTeamMemberDefaultTypeInternal _OneTeamMember_default_instance_;
class OneTeamRankData;
class OneTeamRankDataDefaultTypeInternal;
extern OneTeamRankDataDefaultTypeInternal _OneTeamRankData_default_instance_;
class PageNumMsg;
class PageNumMsgDefaultTypeInternal;
extern PageNumMsgDefaultTypeInternal _PageNumMsg_default_instance_;
class PlaneDieMsg;
class PlaneDieMsgDefaultTypeInternal;
extern PlaneDieMsgDefaultTypeInternal _PlaneDieMsg_default_instance_;
class PlaneMsg;
class PlaneMsgDefaultTypeInternal;
extern PlaneMsgDefaultTypeInternal _PlaneMsg_default_instance_;
class PlayerInfo;
class PlayerInfoDefaultTypeInternal;
extern PlayerInfoDefaultTypeInternal _PlayerInfo_default_instance_;
class RemoveTeamMemberMsg;
class RemoveTeamMemberMsgDefaultTypeInternal;
extern RemoveTeamMemberMsgDefaultTypeInternal _RemoveTeamMemberMsg_default_instance_;
class ResultDataMsg;
class ResultDataMsgDefaultTypeInternal;
extern ResultDataMsgDefaultTypeInternal _ResultDataMsg_default_instance_;
class TeamEnterRoomResponse;
class TeamEnterRoomResponseDefaultTypeInternal;
extern TeamEnterRoomResponseDefaultTypeInternal _TeamEnterRoomResponse_default_instance_;
class TeamRankDataMsg;
class TeamRankDataMsgDefaultTypeInternal;
extern TeamRankDataMsgDefaultTypeInternal _TeamRankDataMsg_default_instance_;
class TurnToMsg;
class TurnToMsgDefaultTypeInternal;
extern TurnToMsgDefaultTypeInternal _TurnToMsg_default_instance_;
class UidListMsg;
class UidListMsgDefaultTypeInternal;
extern UidListMsgDefaultTypeInternal _UidListMsg_default_instance_;
class UidMsg;
class UidMsgDefaultTypeInternal;
extern UidMsgDefaultTypeInternal _UidMsg_default_instance_;
}  // namespace plane
namespace rpc {
class EmptyMsg;
class EmptyMsgDefaultTypeInternal;
extern EmptyMsgDefaultTypeInternal _EmptyMsg_default_instance_;
}  // namespace rpc

namespace plane {

namespace protobuf_plane_2fteam_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_plane_2fteam_2eproto

// ===================================================================

class EnterRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.EnterRoomResponse) */ {
 public:
  EnterRoomResponse();
  virtual ~EnterRoomResponse();

  EnterRoomResponse(const EnterRoomResponse& from);

  inline EnterRoomResponse& operator=(const EnterRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterRoomResponse& default_instance();

  static inline const EnterRoomResponse* internal_default_instance() {
    return reinterpret_cast<const EnterRoomResponse*>(
               &_EnterRoomResponse_default_instance_);
  }

  void Swap(EnterRoomResponse* other);

  // implements Message ----------------------------------------------

  inline EnterRoomResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterRoomResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterRoomResponse& from);
  void MergeFrom(const EnterRoomResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .plane.PlayerInfo players = 3;
  int players_size() const;
  void clear_players();
  static const int kPlayersFieldNumber = 3;
  const ::plane::PlayerInfo& players(int index) const;
  ::plane::PlayerInfo* mutable_players(int index);
  ::plane::PlayerInfo* add_players();
  ::google::protobuf::RepeatedPtrField< ::plane::PlayerInfo >*
      mutable_players();
  const ::google::protobuf::RepeatedPtrField< ::plane::PlayerInfo >&
      players() const;

  // repeated .plane.FoodMsg foods = 4;
  int foods_size() const;
  void clear_foods();
  static const int kFoodsFieldNumber = 4;
  const ::plane::FoodMsg& foods(int index) const;
  ::plane::FoodMsg* mutable_foods(int index);
  ::plane::FoodMsg* add_foods();
  ::google::protobuf::RepeatedPtrField< ::plane::FoodMsg >*
      mutable_foods();
  const ::google::protobuf::RepeatedPtrField< ::plane::FoodMsg >&
      foods() const;

  // repeated .plane.BatchAddEnergyPlaneBcMsg planes = 5;
  int planes_size() const;
  void clear_planes();
  static const int kPlanesFieldNumber = 5;
  const ::plane::BatchAddEnergyPlaneBcMsg& planes(int index) const;
  ::plane::BatchAddEnergyPlaneBcMsg* mutable_planes(int index);
  ::plane::BatchAddEnergyPlaneBcMsg* add_planes();
  ::google::protobuf::RepeatedPtrField< ::plane::BatchAddEnergyPlaneBcMsg >*
      mutable_planes();
  const ::google::protobuf::RepeatedPtrField< ::plane::BatchAddEnergyPlaneBcMsg >&
      planes() const;

  // optional string voice_token = 7;
  bool has_voice_token() const;
  void clear_voice_token();
  static const int kVoiceTokenFieldNumber = 7;
  const ::std::string& voice_token() const;
  void set_voice_token(const ::std::string& value);
  #if LANG_CXX11
  void set_voice_token(::std::string&& value);
  #endif
  void set_voice_token(const char* value);
  void set_voice_token(const char* value, size_t size);
  ::std::string* mutable_voice_token();
  ::std::string* release_voice_token();
  void set_allocated_voice_token(::std::string* voice_token);

  // optional .plane.MsAndId ms_and_id = 1;
  bool has_ms_and_id() const;
  void clear_ms_and_id();
  static const int kMsAndIdFieldNumber = 1;
  const ::plane::MsAndId& ms_and_id() const;
  ::plane::MsAndId* mutable_ms_and_id();
  ::plane::MsAndId* release_ms_and_id();
  void set_allocated_ms_and_id(::plane::MsAndId* ms_and_id);

  // optional uint32 leftseconds = 2;
  bool has_leftseconds() const;
  void clear_leftseconds();
  static const int kLeftsecondsFieldNumber = 2;
  ::google::protobuf::uint32 leftseconds() const;
  void set_leftseconds(::google::protobuf::uint32 value);

  // optional uint32 mode = 6;
  bool has_mode() const;
  void clear_mode();
  static const int kModeFieldNumber = 6;
  ::google::protobuf::uint32 mode() const;
  void set_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.EnterRoomResponse)
 private:
  void set_has_ms_and_id();
  void clear_has_ms_and_id();
  void set_has_leftseconds();
  void clear_has_leftseconds();
  void set_has_mode();
  void clear_has_mode();
  void set_has_voice_token();
  void clear_has_voice_token();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::plane::PlayerInfo > players_;
  ::google::protobuf::RepeatedPtrField< ::plane::FoodMsg > foods_;
  ::google::protobuf::RepeatedPtrField< ::plane::BatchAddEnergyPlaneBcMsg > planes_;
  ::google::protobuf::internal::ArenaStringPtr voice_token_;
  ::plane::MsAndId* ms_and_id_;
  ::google::protobuf::uint32 leftseconds_;
  ::google::protobuf::uint32 mode_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterTeamMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.EnterTeamMsg) */ {
 public:
  EnterTeamMsg();
  virtual ~EnterTeamMsg();

  EnterTeamMsg(const EnterTeamMsg& from);

  inline EnterTeamMsg& operator=(const EnterTeamMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterTeamMsg& default_instance();

  static inline const EnterTeamMsg* internal_default_instance() {
    return reinterpret_cast<const EnterTeamMsg*>(
               &_EnterTeamMsg_default_instance_);
  }

  void Swap(EnterTeamMsg* other);

  // implements Message ----------------------------------------------

  inline EnterTeamMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterTeamMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterTeamMsg& from);
  void MergeFrom(const EnterTeamMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterTeamMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional uint32 teamid = 1;
  bool has_teamid() const;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint32 teamid() const;
  void set_teamid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.EnterTeamMsg)
 private:
  void set_has_teamid();
  void clear_has_teamid();
  void set_has_nickname();
  void clear_has_nickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::uint32 teamid_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OneTeamMember : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.OneTeamMember) */ {
 public:
  OneTeamMember();
  virtual ~OneTeamMember();

  OneTeamMember(const OneTeamMember& from);

  inline OneTeamMember& operator=(const OneTeamMember& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneTeamMember& default_instance();

  static inline const OneTeamMember* internal_default_instance() {
    return reinterpret_cast<const OneTeamMember*>(
               &_OneTeamMember_default_instance_);
  }

  void Swap(OneTeamMember* other);

  // implements Message ----------------------------------------------

  inline OneTeamMember* New() const PROTOBUF_FINAL { return New(NULL); }

  OneTeamMember* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OneTeamMember& from);
  void MergeFrom(const OneTeamMember& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OneTeamMember* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string header_imgurl = 4;
  bool has_header_imgurl() const;
  void clear_header_imgurl();
  static const int kHeaderImgurlFieldNumber = 4;
  const ::std::string& header_imgurl() const;
  void set_header_imgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_header_imgurl(::std::string&& value);
  #endif
  void set_header_imgurl(const char* value);
  void set_header_imgurl(const char* value, size_t size);
  ::std::string* mutable_header_imgurl();
  ::std::string* release_header_imgurl();
  void set_allocated_header_imgurl(::std::string* header_imgurl);

  // optional string nickname = 6;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 6;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional uint32 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional uint32 header_imgid = 3;
  bool has_header_imgid() const;
  void clear_header_imgid();
  static const int kHeaderImgidFieldNumber = 3;
  ::google::protobuf::uint32 header_imgid() const;
  void set_header_imgid(::google::protobuf::uint32 value);

  // optional uint32 sex = 5;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 5;
  ::google::protobuf::uint32 sex() const;
  void set_sex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.OneTeamMember)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_uid();
  void clear_has_uid();
  void set_has_header_imgid();
  void clear_has_header_imgid();
  void set_has_header_imgurl();
  void clear_has_header_imgurl();
  void set_has_sex();
  void clear_has_sex();
  void set_has_nickname();
  void clear_has_nickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr header_imgurl_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 header_imgid_;
  ::google::protobuf::uint32 sex_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddTeamMemberMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.AddTeamMemberMsg) */ {
 public:
  AddTeamMemberMsg();
  virtual ~AddTeamMemberMsg();

  AddTeamMemberMsg(const AddTeamMemberMsg& from);

  inline AddTeamMemberMsg& operator=(const AddTeamMemberMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddTeamMemberMsg& default_instance();

  static inline const AddTeamMemberMsg* internal_default_instance() {
    return reinterpret_cast<const AddTeamMemberMsg*>(
               &_AddTeamMemberMsg_default_instance_);
  }

  void Swap(AddTeamMemberMsg* other);

  // implements Message ----------------------------------------------

  inline AddTeamMemberMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  AddTeamMemberMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddTeamMemberMsg& from);
  void MergeFrom(const AddTeamMemberMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddTeamMemberMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .plane.OneTeamMember member = 2;
  bool has_member() const;
  void clear_member();
  static const int kMemberFieldNumber = 2;
  const ::plane::OneTeamMember& member() const;
  ::plane::OneTeamMember* mutable_member();
  ::plane::OneTeamMember* release_member();
  void set_allocated_member(::plane::OneTeamMember* member);

  // optional uint32 pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.AddTeamMemberMsg)
 private:
  void set_has_pos();
  void clear_has_pos();
  void set_has_member();
  void clear_has_member();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::plane::OneTeamMember* member_;
  ::google::protobuf::uint32 pos_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RemoveTeamMemberMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.RemoveTeamMemberMsg) */ {
 public:
  RemoveTeamMemberMsg();
  virtual ~RemoveTeamMemberMsg();

  RemoveTeamMemberMsg(const RemoveTeamMemberMsg& from);

  inline RemoveTeamMemberMsg& operator=(const RemoveTeamMemberMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveTeamMemberMsg& default_instance();

  static inline const RemoveTeamMemberMsg* internal_default_instance() {
    return reinterpret_cast<const RemoveTeamMemberMsg*>(
               &_RemoveTeamMemberMsg_default_instance_);
  }

  void Swap(RemoveTeamMemberMsg* other);

  // implements Message ----------------------------------------------

  inline RemoveTeamMemberMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  RemoveTeamMemberMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RemoveTeamMemberMsg& from);
  void MergeFrom(const RemoveTeamMemberMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RemoveTeamMemberMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // optional uint32 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.RemoveTeamMemberMsg)
 private:
  void set_has_pos();
  void clear_has_pos();
  void set_has_uid();
  void clear_has_uid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 pos_;
  ::google::protobuf::uint32 uid_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterTeamResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.EnterTeamResponse) */ {
 public:
  EnterTeamResponse();
  virtual ~EnterTeamResponse();

  EnterTeamResponse(const EnterTeamResponse& from);

  inline EnterTeamResponse& operator=(const EnterTeamResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterTeamResponse& default_instance();

  static inline const EnterTeamResponse* internal_default_instance() {
    return reinterpret_cast<const EnterTeamResponse*>(
               &_EnterTeamResponse_default_instance_);
  }

  void Swap(EnterTeamResponse* other);

  // implements Message ----------------------------------------------

  inline EnterTeamResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterTeamResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterTeamResponse& from);
  void MergeFrom(const EnterTeamResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterTeamResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .plane.OneTeamMember members = 4;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 4;
  const ::plane::OneTeamMember& members(int index) const;
  ::plane::OneTeamMember* mutable_members(int index);
  ::plane::OneTeamMember* add_members();
  ::google::protobuf::RepeatedPtrField< ::plane::OneTeamMember >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::plane::OneTeamMember >&
      members() const;

  // optional string teamname = 1;
  bool has_teamname() const;
  void clear_teamname();
  static const int kTeamnameFieldNumber = 1;
  const ::std::string& teamname() const;
  void set_teamname(const ::std::string& value);
  #if LANG_CXX11
  void set_teamname(::std::string&& value);
  #endif
  void set_teamname(const char* value);
  void set_teamname(const char* value, size_t size);
  ::std::string* mutable_teamname();
  ::std::string* release_teamname();
  void set_allocated_teamname(::std::string* teamname);

  // optional string voice_token = 5;
  bool has_voice_token() const;
  void clear_voice_token();
  static const int kVoiceTokenFieldNumber = 5;
  const ::std::string& voice_token() const;
  void set_voice_token(const ::std::string& value);
  #if LANG_CXX11
  void set_voice_token(::std::string&& value);
  #endif
  void set_voice_token(const char* value);
  void set_voice_token(const char* value, size_t size);
  ::std::string* mutable_voice_token();
  ::std::string* release_voice_token();
  void set_allocated_voice_token(::std::string* voice_token);

  // optional uint32 total_num = 2;
  bool has_total_num() const;
  void clear_total_num();
  static const int kTotalNumFieldNumber = 2;
  ::google::protobuf::uint32 total_num() const;
  void set_total_num(::google::protobuf::uint32 value);

  // optional uint32 leader_uid = 3;
  bool has_leader_uid() const;
  void clear_leader_uid();
  static const int kLeaderUidFieldNumber = 3;
  ::google::protobuf::uint32 leader_uid() const;
  void set_leader_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.EnterTeamResponse)
 private:
  void set_has_teamname();
  void clear_has_teamname();
  void set_has_total_num();
  void clear_has_total_num();
  void set_has_leader_uid();
  void clear_has_leader_uid();
  void set_has_voice_token();
  void clear_has_voice_token();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::plane::OneTeamMember > members_;
  ::google::protobuf::internal::ArenaStringPtr teamname_;
  ::google::protobuf::internal::ArenaStringPtr voice_token_;
  ::google::protobuf::uint32 total_num_;
  ::google::protobuf::uint32 leader_uid_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OneFriendData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.OneFriendData) */ {
 public:
  OneFriendData();
  virtual ~OneFriendData();

  OneFriendData(const OneFriendData& from);

  inline OneFriendData& operator=(const OneFriendData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneFriendData& default_instance();

  static inline const OneFriendData* internal_default_instance() {
    return reinterpret_cast<const OneFriendData*>(
               &_OneFriendData_default_instance_);
  }

  void Swap(OneFriendData* other);

  // implements Message ----------------------------------------------

  inline OneFriendData* New() const PROTOBUF_FINAL { return New(NULL); }

  OneFriendData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OneFriendData& from);
  void MergeFrom(const OneFriendData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OneFriendData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string account = 1;
  bool has_account() const;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // optional string header_imgurl = 4;
  bool has_header_imgurl() const;
  void clear_header_imgurl();
  static const int kHeaderImgurlFieldNumber = 4;
  const ::std::string& header_imgurl() const;
  void set_header_imgurl(const ::std::string& value);
  #if LANG_CXX11
  void set_header_imgurl(::std::string&& value);
  #endif
  void set_header_imgurl(const char* value);
  void set_header_imgurl(const char* value, size_t size);
  ::std::string* mutable_header_imgurl();
  ::std::string* release_header_imgurl();
  void set_allocated_header_imgurl(::std::string* header_imgurl);

  // optional uint32 uid = 2;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 2;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // optional uint32 header_imgid = 3;
  bool has_header_imgid() const;
  void clear_header_imgid();
  static const int kHeaderImgidFieldNumber = 3;
  ::google::protobuf::uint32 header_imgid() const;
  void set_header_imgid(::google::protobuf::uint32 value);

  // optional uint32 sex = 5;
  bool has_sex() const;
  void clear_sex();
  static const int kSexFieldNumber = 5;
  ::google::protobuf::uint32 sex() const;
  void set_sex(::google::protobuf::uint32 value);

  // optional uint32 level = 6;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 6;
  ::google::protobuf::uint32 level() const;
  void set_level(::google::protobuf::uint32 value);

  // optional uint32 state = 7;
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 7;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.OneFriendData)
 private:
  void set_has_account();
  void clear_has_account();
  void set_has_uid();
  void clear_has_uid();
  void set_has_header_imgid();
  void clear_has_header_imgid();
  void set_has_header_imgurl();
  void clear_has_header_imgurl();
  void set_has_sex();
  void clear_has_sex();
  void set_has_level();
  void clear_has_level();
  void set_has_state();
  void clear_has_state();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr header_imgurl_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 header_imgid_;
  ::google::protobuf::uint32 sex_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 state_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OnePageFriendDataMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.OnePageFriendDataMsg) */ {
 public:
  OnePageFriendDataMsg();
  virtual ~OnePageFriendDataMsg();

  OnePageFriendDataMsg(const OnePageFriendDataMsg& from);

  inline OnePageFriendDataMsg& operator=(const OnePageFriendDataMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OnePageFriendDataMsg& default_instance();

  static inline const OnePageFriendDataMsg* internal_default_instance() {
    return reinterpret_cast<const OnePageFriendDataMsg*>(
               &_OnePageFriendDataMsg_default_instance_);
  }

  void Swap(OnePageFriendDataMsg* other);

  // implements Message ----------------------------------------------

  inline OnePageFriendDataMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  OnePageFriendDataMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OnePageFriendDataMsg& from);
  void MergeFrom(const OnePageFriendDataMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OnePageFriendDataMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .plane.OneFriendData datas = 3;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 3;
  const ::plane::OneFriendData& datas(int index) const;
  ::plane::OneFriendData* mutable_datas(int index);
  ::plane::OneFriendData* add_datas();
  ::google::protobuf::RepeatedPtrField< ::plane::OneFriendData >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::plane::OneFriendData >&
      datas() const;

  // optional uint32 total_num = 1;
  bool has_total_num() const;
  void clear_total_num();
  static const int kTotalNumFieldNumber = 1;
  ::google::protobuf::uint32 total_num() const;
  void set_total_num(::google::protobuf::uint32 value);

  // optional uint32 page_num = 2;
  bool has_page_num() const;
  void clear_page_num();
  static const int kPageNumFieldNumber = 2;
  ::google::protobuf::uint32 page_num() const;
  void set_page_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.OnePageFriendDataMsg)
 private:
  void set_has_total_num();
  void clear_has_total_num();
  void set_has_page_num();
  void clear_has_page_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::plane::OneFriendData > datas_;
  ::google::protobuf::uint32 total_num_;
  ::google::protobuf::uint32 page_num_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TeamEnterRoomResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.TeamEnterRoomResponse) */ {
 public:
  TeamEnterRoomResponse();
  virtual ~TeamEnterRoomResponse();

  TeamEnterRoomResponse(const TeamEnterRoomResponse& from);

  inline TeamEnterRoomResponse& operator=(const TeamEnterRoomResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamEnterRoomResponse& default_instance();

  static inline const TeamEnterRoomResponse* internal_default_instance() {
    return reinterpret_cast<const TeamEnterRoomResponse*>(
               &_TeamEnterRoomResponse_default_instance_);
  }

  void Swap(TeamEnterRoomResponse* other);

  // implements Message ----------------------------------------------

  inline TeamEnterRoomResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  TeamEnterRoomResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TeamEnterRoomResponse& from);
  void MergeFrom(const TeamEnterRoomResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TeamEnterRoomResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 members = 2;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 2;
  ::google::protobuf::uint32 members(int index) const;
  void set_members(int index, ::google::protobuf::uint32 value);
  void add_members(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      members() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_members();

  // optional uint32 teamid = 1;
  bool has_teamid() const;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint32 teamid() const;
  void set_teamid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.TeamEnterRoomResponse)
 private:
  void set_has_teamid();
  void clear_has_teamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > members_;
  ::google::protobuf::uint32 teamid_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NicknameMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.NicknameMsg) */ {
 public:
  NicknameMsg();
  virtual ~NicknameMsg();

  NicknameMsg(const NicknameMsg& from);

  inline NicknameMsg& operator=(const NicknameMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NicknameMsg& default_instance();

  static inline const NicknameMsg* internal_default_instance() {
    return reinterpret_cast<const NicknameMsg*>(
               &_NicknameMsg_default_instance_);
  }

  void Swap(NicknameMsg* other);

  // implements Message ----------------------------------------------

  inline NicknameMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  NicknameMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NicknameMsg& from);
  void MergeFrom(const NicknameMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NicknameMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 1;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // @@protoc_insertion_point(class_scope:plane.NicknameMsg)
 private:
  void set_has_nickname();
  void clear_has_nickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class InviteMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.InviteMsg) */ {
 public:
  InviteMsg();
  virtual ~InviteMsg();

  InviteMsg(const InviteMsg& from);

  inline InviteMsg& operator=(const InviteMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteMsg& default_instance();

  static inline const InviteMsg* internal_default_instance() {
    return reinterpret_cast<const InviteMsg*>(
               &_InviteMsg_default_instance_);
  }

  void Swap(InviteMsg* other);

  // implements Message ----------------------------------------------

  inline InviteMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  InviteMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InviteMsg& from);
  void MergeFrom(const InviteMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InviteMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string inviter_acc = 2;
  bool has_inviter_acc() const;
  void clear_inviter_acc();
  static const int kInviterAccFieldNumber = 2;
  const ::std::string& inviter_acc() const;
  void set_inviter_acc(const ::std::string& value);
  #if LANG_CXX11
  void set_inviter_acc(::std::string&& value);
  #endif
  void set_inviter_acc(const char* value);
  void set_inviter_acc(const char* value, size_t size);
  ::std::string* mutable_inviter_acc();
  ::std::string* release_inviter_acc();
  void set_allocated_inviter_acc(::std::string* inviter_acc);

  // optional uint32 teamid = 1;
  bool has_teamid() const;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint32 teamid() const;
  void set_teamid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.InviteMsg)
 private:
  void set_has_teamid();
  void clear_has_teamid();
  void set_has_inviter_acc();
  void clear_has_inviter_acc();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr inviter_acc_;
  ::google::protobuf::uint32 teamid_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class NewNickNameMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.NewNickNameMsg) */ {
 public:
  NewNickNameMsg();
  virtual ~NewNickNameMsg();

  NewNickNameMsg(const NewNickNameMsg& from);

  inline NewNickNameMsg& operator=(const NewNickNameMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NewNickNameMsg& default_instance();

  static inline const NewNickNameMsg* internal_default_instance() {
    return reinterpret_cast<const NewNickNameMsg*>(
               &_NewNickNameMsg_default_instance_);
  }

  void Swap(NewNickNameMsg* other);

  // implements Message ----------------------------------------------

  inline NewNickNameMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  NewNickNameMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const NewNickNameMsg& from);
  void MergeFrom(const NewNickNameMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(NewNickNameMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional uint32 pos = 1;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 1;
  ::google::protobuf::uint32 pos() const;
  void set_pos(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.NewNickNameMsg)
 private:
  void set_has_pos();
  void clear_has_pos();
  void set_has_nickname();
  void clear_has_nickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::uint32 pos_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PageNumMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.PageNumMsg) */ {
 public:
  PageNumMsg();
  virtual ~PageNumMsg();

  PageNumMsg(const PageNumMsg& from);

  inline PageNumMsg& operator=(const PageNumMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PageNumMsg& default_instance();

  static inline const PageNumMsg* internal_default_instance() {
    return reinterpret_cast<const PageNumMsg*>(
               &_PageNumMsg_default_instance_);
  }

  void Swap(PageNumMsg* other);

  // implements Message ----------------------------------------------

  inline PageNumMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  PageNumMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PageNumMsg& from);
  void MergeFrom(const PageNumMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PageNumMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 page = 1;
  bool has_page() const;
  void clear_page();
  static const int kPageFieldNumber = 1;
  ::google::protobuf::uint32 page() const;
  void set_page(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.PageNumMsg)
 private:
  void set_has_page();
  void clear_has_page();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 page_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AddMemberInRoomMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.AddMemberInRoomMsg) */ {
 public:
  AddMemberInRoomMsg();
  virtual ~AddMemberInRoomMsg();

  AddMemberInRoomMsg(const AddMemberInRoomMsg& from);

  inline AddMemberInRoomMsg& operator=(const AddMemberInRoomMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AddMemberInRoomMsg& default_instance();

  static inline const AddMemberInRoomMsg* internal_default_instance() {
    return reinterpret_cast<const AddMemberInRoomMsg*>(
               &_AddMemberInRoomMsg_default_instance_);
  }

  void Swap(AddMemberInRoomMsg* other);

  // implements Message ----------------------------------------------

  inline AddMemberInRoomMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  AddMemberInRoomMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AddMemberInRoomMsg& from);
  void MergeFrom(const AddMemberInRoomMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AddMemberInRoomMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uids = 2;
  int uids_size() const;
  void clear_uids();
  static const int kUidsFieldNumber = 2;
  ::google::protobuf::uint32 uids(int index) const;
  void set_uids(int index, ::google::protobuf::uint32 value);
  void add_uids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uids();

  // optional uint32 member_num_before_add = 1;
  bool has_member_num_before_add() const;
  void clear_member_num_before_add();
  static const int kMemberNumBeforeAddFieldNumber = 1;
  ::google::protobuf::uint32 member_num_before_add() const;
  void set_member_num_before_add(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.AddMemberInRoomMsg)
 private:
  void set_has_member_num_before_add();
  void clear_has_member_num_before_add();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uids_;
  ::google::protobuf::uint32 member_num_before_add_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OneTeamRankData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.OneTeamRankData) */ {
 public:
  OneTeamRankData();
  virtual ~OneTeamRankData();

  OneTeamRankData(const OneTeamRankData& from);

  inline OneTeamRankData& operator=(const OneTeamRankData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneTeamRankData& default_instance();

  static inline const OneTeamRankData* internal_default_instance() {
    return reinterpret_cast<const OneTeamRankData*>(
               &_OneTeamRankData_default_instance_);
  }

  void Swap(OneTeamRankData* other);

  // implements Message ----------------------------------------------

  inline OneTeamRankData* New() const PROTOBUF_FINAL { return New(NULL); }

  OneTeamRankData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OneTeamRankData& from);
  void MergeFrom(const OneTeamRankData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OneTeamRankData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 team_skinid = 1;
  bool has_team_skinid() const;
  void clear_team_skinid();
  static const int kTeamSkinidFieldNumber = 1;
  ::google::protobuf::uint32 team_skinid() const;
  void set_team_skinid(::google::protobuf::uint32 value);

  // optional uint32 member_num = 2;
  bool has_member_num() const;
  void clear_member_num();
  static const int kMemberNumFieldNumber = 2;
  ::google::protobuf::uint32 member_num() const;
  void set_member_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.OneTeamRankData)
 private:
  void set_has_team_skinid();
  void clear_has_team_skinid();
  void set_has_member_num();
  void clear_has_member_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 team_skinid_;
  ::google::protobuf::uint32 member_num_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TeamRankDataMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.TeamRankDataMsg) */ {
 public:
  TeamRankDataMsg();
  virtual ~TeamRankDataMsg();

  TeamRankDataMsg(const TeamRankDataMsg& from);

  inline TeamRankDataMsg& operator=(const TeamRankDataMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamRankDataMsg& default_instance();

  static inline const TeamRankDataMsg* internal_default_instance() {
    return reinterpret_cast<const TeamRankDataMsg*>(
               &_TeamRankDataMsg_default_instance_);
  }

  void Swap(TeamRankDataMsg* other);

  // implements Message ----------------------------------------------

  inline TeamRankDataMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  TeamRankDataMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TeamRankDataMsg& from);
  void MergeFrom(const TeamRankDataMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TeamRankDataMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .plane.OneTeamRankData datas = 5;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 5;
  const ::plane::OneTeamRankData& datas(int index) const;
  ::plane::OneTeamRankData* mutable_datas(int index);
  ::plane::OneTeamRankData* add_datas();
  ::google::protobuf::RepeatedPtrField< ::plane::OneTeamRankData >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::plane::OneTeamRankData >&
      datas() const;

  // optional uint32 my_team_rank = 1;
  bool has_my_team_rank() const;
  void clear_my_team_rank();
  static const int kMyTeamRankFieldNumber = 1;
  ::google::protobuf::uint32 my_team_rank() const;
  void set_my_team_rank(::google::protobuf::uint32 value);

  // optional uint32 my_score = 2;
  bool has_my_score() const;
  void clear_my_score();
  static const int kMyScoreFieldNumber = 2;
  ::google::protobuf::uint32 my_score() const;
  void set_my_score(::google::protobuf::uint32 value);

  // optional uint32 my_teamskinid = 3;
  bool has_my_teamskinid() const;
  void clear_my_teamskinid();
  static const int kMyTeamskinidFieldNumber = 3;
  ::google::protobuf::uint32 my_teamskinid() const;
  void set_my_teamskinid(::google::protobuf::uint32 value);

  // optional uint32 my_team_num = 4;
  bool has_my_team_num() const;
  void clear_my_team_num();
  static const int kMyTeamNumFieldNumber = 4;
  ::google::protobuf::uint32 my_team_num() const;
  void set_my_team_num(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.TeamRankDataMsg)
 private:
  void set_has_my_team_rank();
  void clear_has_my_team_rank();
  void set_has_my_score();
  void clear_has_my_score();
  void set_has_my_teamskinid();
  void clear_has_my_teamskinid();
  void set_has_my_team_num();
  void clear_has_my_team_num();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::plane::OneTeamRankData > datas_;
  ::google::protobuf::uint32 my_team_rank_;
  ::google::protobuf::uint32 my_score_;
  ::google::protobuf::uint32 my_teamskinid_;
  ::google::protobuf::uint32 my_team_num_;
  friend struct  protobuf_plane_2fteam_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// EnterRoomResponse

// optional .plane.MsAndId ms_and_id = 1;
inline bool EnterRoomResponse::has_ms_and_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterRoomResponse::set_has_ms_and_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterRoomResponse::clear_has_ms_and_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterRoomResponse::clear_ms_and_id() {
  if (ms_and_id_ != NULL) ms_and_id_->::plane::MsAndId::Clear();
  clear_has_ms_and_id();
}
inline const ::plane::MsAndId& EnterRoomResponse::ms_and_id() const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.ms_and_id)
  return ms_and_id_ != NULL ? *ms_and_id_
                         : *::plane::MsAndId::internal_default_instance();
}
inline ::plane::MsAndId* EnterRoomResponse::mutable_ms_and_id() {
  set_has_ms_and_id();
  if (ms_and_id_ == NULL) {
    ms_and_id_ = new ::plane::MsAndId;
  }
  // @@protoc_insertion_point(field_mutable:plane.EnterRoomResponse.ms_and_id)
  return ms_and_id_;
}
inline ::plane::MsAndId* EnterRoomResponse::release_ms_and_id() {
  // @@protoc_insertion_point(field_release:plane.EnterRoomResponse.ms_and_id)
  clear_has_ms_and_id();
  ::plane::MsAndId* temp = ms_and_id_;
  ms_and_id_ = NULL;
  return temp;
}
inline void EnterRoomResponse::set_allocated_ms_and_id(::plane::MsAndId* ms_and_id) {
  delete ms_and_id_;
  ms_and_id_ = ms_and_id;
  if (ms_and_id) {
    set_has_ms_and_id();
  } else {
    clear_has_ms_and_id();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.EnterRoomResponse.ms_and_id)
}

// optional uint32 leftseconds = 2;
inline bool EnterRoomResponse::has_leftseconds() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterRoomResponse::set_has_leftseconds() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterRoomResponse::clear_has_leftseconds() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterRoomResponse::clear_leftseconds() {
  leftseconds_ = 0u;
  clear_has_leftseconds();
}
inline ::google::protobuf::uint32 EnterRoomResponse::leftseconds() const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.leftseconds)
  return leftseconds_;
}
inline void EnterRoomResponse::set_leftseconds(::google::protobuf::uint32 value) {
  set_has_leftseconds();
  leftseconds_ = value;
  // @@protoc_insertion_point(field_set:plane.EnterRoomResponse.leftseconds)
}

// repeated .plane.PlayerInfo players = 3;
inline int EnterRoomResponse::players_size() const {
  return players_.size();
}
inline void EnterRoomResponse::clear_players() {
  players_.Clear();
}
inline const ::plane::PlayerInfo& EnterRoomResponse::players(int index) const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.players)
  return players_.Get(index);
}
inline ::plane::PlayerInfo* EnterRoomResponse::mutable_players(int index) {
  // @@protoc_insertion_point(field_mutable:plane.EnterRoomResponse.players)
  return players_.Mutable(index);
}
inline ::plane::PlayerInfo* EnterRoomResponse::add_players() {
  // @@protoc_insertion_point(field_add:plane.EnterRoomResponse.players)
  return players_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::PlayerInfo >*
EnterRoomResponse::mutable_players() {
  // @@protoc_insertion_point(field_mutable_list:plane.EnterRoomResponse.players)
  return &players_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::PlayerInfo >&
EnterRoomResponse::players() const {
  // @@protoc_insertion_point(field_list:plane.EnterRoomResponse.players)
  return players_;
}

// repeated .plane.FoodMsg foods = 4;
inline int EnterRoomResponse::foods_size() const {
  return foods_.size();
}
inline void EnterRoomResponse::clear_foods() {
  foods_.Clear();
}
inline const ::plane::FoodMsg& EnterRoomResponse::foods(int index) const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.foods)
  return foods_.Get(index);
}
inline ::plane::FoodMsg* EnterRoomResponse::mutable_foods(int index) {
  // @@protoc_insertion_point(field_mutable:plane.EnterRoomResponse.foods)
  return foods_.Mutable(index);
}
inline ::plane::FoodMsg* EnterRoomResponse::add_foods() {
  // @@protoc_insertion_point(field_add:plane.EnterRoomResponse.foods)
  return foods_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::FoodMsg >*
EnterRoomResponse::mutable_foods() {
  // @@protoc_insertion_point(field_mutable_list:plane.EnterRoomResponse.foods)
  return &foods_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::FoodMsg >&
EnterRoomResponse::foods() const {
  // @@protoc_insertion_point(field_list:plane.EnterRoomResponse.foods)
  return foods_;
}

// repeated .plane.BatchAddEnergyPlaneBcMsg planes = 5;
inline int EnterRoomResponse::planes_size() const {
  return planes_.size();
}
inline void EnterRoomResponse::clear_planes() {
  planes_.Clear();
}
inline const ::plane::BatchAddEnergyPlaneBcMsg& EnterRoomResponse::planes(int index) const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.planes)
  return planes_.Get(index);
}
inline ::plane::BatchAddEnergyPlaneBcMsg* EnterRoomResponse::mutable_planes(int index) {
  // @@protoc_insertion_point(field_mutable:plane.EnterRoomResponse.planes)
  return planes_.Mutable(index);
}
inline ::plane::BatchAddEnergyPlaneBcMsg* EnterRoomResponse::add_planes() {
  // @@protoc_insertion_point(field_add:plane.EnterRoomResponse.planes)
  return planes_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::BatchAddEnergyPlaneBcMsg >*
EnterRoomResponse::mutable_planes() {
  // @@protoc_insertion_point(field_mutable_list:plane.EnterRoomResponse.planes)
  return &planes_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::BatchAddEnergyPlaneBcMsg >&
EnterRoomResponse::planes() const {
  // @@protoc_insertion_point(field_list:plane.EnterRoomResponse.planes)
  return planes_;
}

// optional uint32 mode = 6;
inline bool EnterRoomResponse::has_mode() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterRoomResponse::set_has_mode() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterRoomResponse::clear_has_mode() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterRoomResponse::clear_mode() {
  mode_ = 0u;
  clear_has_mode();
}
inline ::google::protobuf::uint32 EnterRoomResponse::mode() const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.mode)
  return mode_;
}
inline void EnterRoomResponse::set_mode(::google::protobuf::uint32 value) {
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:plane.EnterRoomResponse.mode)
}

// optional string voice_token = 7;
inline bool EnterRoomResponse::has_voice_token() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterRoomResponse::set_has_voice_token() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterRoomResponse::clear_has_voice_token() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterRoomResponse::clear_voice_token() {
  voice_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voice_token();
}
inline const ::std::string& EnterRoomResponse::voice_token() const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomResponse.voice_token)
  return voice_token_.GetNoArena();
}
inline void EnterRoomResponse::set_voice_token(const ::std::string& value) {
  set_has_voice_token();
  voice_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.EnterRoomResponse.voice_token)
}
#if LANG_CXX11
inline void EnterRoomResponse::set_voice_token(::std::string&& value) {
  set_has_voice_token();
  voice_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.EnterRoomResponse.voice_token)
}
#endif
inline void EnterRoomResponse::set_voice_token(const char* value) {
  set_has_voice_token();
  voice_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.EnterRoomResponse.voice_token)
}
inline void EnterRoomResponse::set_voice_token(const char* value, size_t size) {
  set_has_voice_token();
  voice_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.EnterRoomResponse.voice_token)
}
inline ::std::string* EnterRoomResponse::mutable_voice_token() {
  set_has_voice_token();
  // @@protoc_insertion_point(field_mutable:plane.EnterRoomResponse.voice_token)
  return voice_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterRoomResponse::release_voice_token() {
  // @@protoc_insertion_point(field_release:plane.EnterRoomResponse.voice_token)
  clear_has_voice_token();
  return voice_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterRoomResponse::set_allocated_voice_token(::std::string* voice_token) {
  if (voice_token != NULL) {
    set_has_voice_token();
  } else {
    clear_has_voice_token();
  }
  voice_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice_token);
  // @@protoc_insertion_point(field_set_allocated:plane.EnterRoomResponse.voice_token)
}

// -------------------------------------------------------------------

// EnterTeamMsg

// optional uint32 teamid = 1;
inline bool EnterTeamMsg::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterTeamMsg::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterTeamMsg::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterTeamMsg::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 EnterTeamMsg::teamid() const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamMsg.teamid)
  return teamid_;
}
inline void EnterTeamMsg::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:plane.EnterTeamMsg.teamid)
}

// optional string nickname = 2;
inline bool EnterTeamMsg::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterTeamMsg::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterTeamMsg::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterTeamMsg::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& EnterTeamMsg::nickname() const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamMsg.nickname)
  return nickname_.GetNoArena();
}
inline void EnterTeamMsg::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.EnterTeamMsg.nickname)
}
#if LANG_CXX11
inline void EnterTeamMsg::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.EnterTeamMsg.nickname)
}
#endif
inline void EnterTeamMsg::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.EnterTeamMsg.nickname)
}
inline void EnterTeamMsg::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.EnterTeamMsg.nickname)
}
inline ::std::string* EnterTeamMsg::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:plane.EnterTeamMsg.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterTeamMsg::release_nickname() {
  // @@protoc_insertion_point(field_release:plane.EnterTeamMsg.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterTeamMsg::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:plane.EnterTeamMsg.nickname)
}

// -------------------------------------------------------------------

// OneTeamMember

// optional string account = 1;
inline bool OneTeamMember::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneTeamMember::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneTeamMember::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneTeamMember::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& OneTeamMember::account() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamMember.account)
  return account_.GetNoArena();
}
inline void OneTeamMember::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneTeamMember.account)
}
#if LANG_CXX11
inline void OneTeamMember::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneTeamMember.account)
}
#endif
inline void OneTeamMember::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneTeamMember.account)
}
inline void OneTeamMember::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneTeamMember.account)
}
inline ::std::string* OneTeamMember::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:plane.OneTeamMember.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OneTeamMember::release_account() {
  // @@protoc_insertion_point(field_release:plane.OneTeamMember.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OneTeamMember::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:plane.OneTeamMember.account)
}

// optional uint32 uid = 2;
inline bool OneTeamMember::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneTeamMember::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneTeamMember::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneTeamMember::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 OneTeamMember::uid() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamMember.uid)
  return uid_;
}
inline void OneTeamMember::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneTeamMember.uid)
}

// optional uint32 header_imgid = 3;
inline bool OneTeamMember::has_header_imgid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OneTeamMember::set_has_header_imgid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OneTeamMember::clear_has_header_imgid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OneTeamMember::clear_header_imgid() {
  header_imgid_ = 0u;
  clear_has_header_imgid();
}
inline ::google::protobuf::uint32 OneTeamMember::header_imgid() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamMember.header_imgid)
  return header_imgid_;
}
inline void OneTeamMember::set_header_imgid(::google::protobuf::uint32 value) {
  set_has_header_imgid();
  header_imgid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneTeamMember.header_imgid)
}

// optional string header_imgurl = 4;
inline bool OneTeamMember::has_header_imgurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneTeamMember::set_has_header_imgurl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneTeamMember::clear_has_header_imgurl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneTeamMember::clear_header_imgurl() {
  header_imgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_header_imgurl();
}
inline const ::std::string& OneTeamMember::header_imgurl() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamMember.header_imgurl)
  return header_imgurl_.GetNoArena();
}
inline void OneTeamMember::set_header_imgurl(const ::std::string& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneTeamMember.header_imgurl)
}
#if LANG_CXX11
inline void OneTeamMember::set_header_imgurl(::std::string&& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneTeamMember.header_imgurl)
}
#endif
inline void OneTeamMember::set_header_imgurl(const char* value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneTeamMember.header_imgurl)
}
inline void OneTeamMember::set_header_imgurl(const char* value, size_t size) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneTeamMember.header_imgurl)
}
inline ::std::string* OneTeamMember::mutable_header_imgurl() {
  set_has_header_imgurl();
  // @@protoc_insertion_point(field_mutable:plane.OneTeamMember.header_imgurl)
  return header_imgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OneTeamMember::release_header_imgurl() {
  // @@protoc_insertion_point(field_release:plane.OneTeamMember.header_imgurl)
  clear_has_header_imgurl();
  return header_imgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OneTeamMember::set_allocated_header_imgurl(::std::string* header_imgurl) {
  if (header_imgurl != NULL) {
    set_has_header_imgurl();
  } else {
    clear_has_header_imgurl();
  }
  header_imgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header_imgurl);
  // @@protoc_insertion_point(field_set_allocated:plane.OneTeamMember.header_imgurl)
}

// optional uint32 sex = 5;
inline bool OneTeamMember::has_sex() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OneTeamMember::set_has_sex() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OneTeamMember::clear_has_sex() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OneTeamMember::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 OneTeamMember::sex() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamMember.sex)
  return sex_;
}
inline void OneTeamMember::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:plane.OneTeamMember.sex)
}

// optional string nickname = 6;
inline bool OneTeamMember::has_nickname() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneTeamMember::set_has_nickname() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneTeamMember::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneTeamMember::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& OneTeamMember::nickname() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamMember.nickname)
  return nickname_.GetNoArena();
}
inline void OneTeamMember::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneTeamMember.nickname)
}
#if LANG_CXX11
inline void OneTeamMember::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneTeamMember.nickname)
}
#endif
inline void OneTeamMember::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneTeamMember.nickname)
}
inline void OneTeamMember::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneTeamMember.nickname)
}
inline ::std::string* OneTeamMember::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:plane.OneTeamMember.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OneTeamMember::release_nickname() {
  // @@protoc_insertion_point(field_release:plane.OneTeamMember.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OneTeamMember::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:plane.OneTeamMember.nickname)
}

// -------------------------------------------------------------------

// AddTeamMemberMsg

// optional uint32 pos = 1;
inline bool AddTeamMemberMsg::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AddTeamMemberMsg::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AddTeamMemberMsg::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AddTeamMemberMsg::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 AddTeamMemberMsg::pos() const {
  // @@protoc_insertion_point(field_get:plane.AddTeamMemberMsg.pos)
  return pos_;
}
inline void AddTeamMemberMsg::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:plane.AddTeamMemberMsg.pos)
}

// optional .plane.OneTeamMember member = 2;
inline bool AddTeamMemberMsg::has_member() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddTeamMemberMsg::set_has_member() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddTeamMemberMsg::clear_has_member() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddTeamMemberMsg::clear_member() {
  if (member_ != NULL) member_->::plane::OneTeamMember::Clear();
  clear_has_member();
}
inline const ::plane::OneTeamMember& AddTeamMemberMsg::member() const {
  // @@protoc_insertion_point(field_get:plane.AddTeamMemberMsg.member)
  return member_ != NULL ? *member_
                         : *::plane::OneTeamMember::internal_default_instance();
}
inline ::plane::OneTeamMember* AddTeamMemberMsg::mutable_member() {
  set_has_member();
  if (member_ == NULL) {
    member_ = new ::plane::OneTeamMember;
  }
  // @@protoc_insertion_point(field_mutable:plane.AddTeamMemberMsg.member)
  return member_;
}
inline ::plane::OneTeamMember* AddTeamMemberMsg::release_member() {
  // @@protoc_insertion_point(field_release:plane.AddTeamMemberMsg.member)
  clear_has_member();
  ::plane::OneTeamMember* temp = member_;
  member_ = NULL;
  return temp;
}
inline void AddTeamMemberMsg::set_allocated_member(::plane::OneTeamMember* member) {
  delete member_;
  member_ = member;
  if (member) {
    set_has_member();
  } else {
    clear_has_member();
  }
  // @@protoc_insertion_point(field_set_allocated:plane.AddTeamMemberMsg.member)
}

// -------------------------------------------------------------------

// RemoveTeamMemberMsg

// optional uint32 pos = 1;
inline bool RemoveTeamMemberMsg::has_pos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveTeamMemberMsg::set_has_pos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveTeamMemberMsg::clear_has_pos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveTeamMemberMsg::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 RemoveTeamMemberMsg::pos() const {
  // @@protoc_insertion_point(field_get:plane.RemoveTeamMemberMsg.pos)
  return pos_;
}
inline void RemoveTeamMemberMsg::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:plane.RemoveTeamMemberMsg.pos)
}

// optional uint32 uid = 2;
inline bool RemoveTeamMemberMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveTeamMemberMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveTeamMemberMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveTeamMemberMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 RemoveTeamMemberMsg::uid() const {
  // @@protoc_insertion_point(field_get:plane.RemoveTeamMemberMsg.uid)
  return uid_;
}
inline void RemoveTeamMemberMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.RemoveTeamMemberMsg.uid)
}

// -------------------------------------------------------------------

// EnterTeamResponse

// optional string teamname = 1;
inline bool EnterTeamResponse::has_teamname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterTeamResponse::set_has_teamname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterTeamResponse::clear_has_teamname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterTeamResponse::clear_teamname() {
  teamname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_teamname();
}
inline const ::std::string& EnterTeamResponse::teamname() const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamResponse.teamname)
  return teamname_.GetNoArena();
}
inline void EnterTeamResponse::set_teamname(const ::std::string& value) {
  set_has_teamname();
  teamname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.EnterTeamResponse.teamname)
}
#if LANG_CXX11
inline void EnterTeamResponse::set_teamname(::std::string&& value) {
  set_has_teamname();
  teamname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.EnterTeamResponse.teamname)
}
#endif
inline void EnterTeamResponse::set_teamname(const char* value) {
  set_has_teamname();
  teamname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.EnterTeamResponse.teamname)
}
inline void EnterTeamResponse::set_teamname(const char* value, size_t size) {
  set_has_teamname();
  teamname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.EnterTeamResponse.teamname)
}
inline ::std::string* EnterTeamResponse::mutable_teamname() {
  set_has_teamname();
  // @@protoc_insertion_point(field_mutable:plane.EnterTeamResponse.teamname)
  return teamname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterTeamResponse::release_teamname() {
  // @@protoc_insertion_point(field_release:plane.EnterTeamResponse.teamname)
  clear_has_teamname();
  return teamname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterTeamResponse::set_allocated_teamname(::std::string* teamname) {
  if (teamname != NULL) {
    set_has_teamname();
  } else {
    clear_has_teamname();
  }
  teamname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), teamname);
  // @@protoc_insertion_point(field_set_allocated:plane.EnterTeamResponse.teamname)
}

// optional uint32 total_num = 2;
inline bool EnterTeamResponse::has_total_num() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void EnterTeamResponse::set_has_total_num() {
  _has_bits_[0] |= 0x00000004u;
}
inline void EnterTeamResponse::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void EnterTeamResponse::clear_total_num() {
  total_num_ = 0u;
  clear_has_total_num();
}
inline ::google::protobuf::uint32 EnterTeamResponse::total_num() const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamResponse.total_num)
  return total_num_;
}
inline void EnterTeamResponse::set_total_num(::google::protobuf::uint32 value) {
  set_has_total_num();
  total_num_ = value;
  // @@protoc_insertion_point(field_set:plane.EnterTeamResponse.total_num)
}

// optional uint32 leader_uid = 3;
inline bool EnterTeamResponse::has_leader_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void EnterTeamResponse::set_has_leader_uid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void EnterTeamResponse::clear_has_leader_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void EnterTeamResponse::clear_leader_uid() {
  leader_uid_ = 0u;
  clear_has_leader_uid();
}
inline ::google::protobuf::uint32 EnterTeamResponse::leader_uid() const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamResponse.leader_uid)
  return leader_uid_;
}
inline void EnterTeamResponse::set_leader_uid(::google::protobuf::uint32 value) {
  set_has_leader_uid();
  leader_uid_ = value;
  // @@protoc_insertion_point(field_set:plane.EnterTeamResponse.leader_uid)
}

// repeated .plane.OneTeamMember members = 4;
inline int EnterTeamResponse::members_size() const {
  return members_.size();
}
inline void EnterTeamResponse::clear_members() {
  members_.Clear();
}
inline const ::plane::OneTeamMember& EnterTeamResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamResponse.members)
  return members_.Get(index);
}
inline ::plane::OneTeamMember* EnterTeamResponse::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:plane.EnterTeamResponse.members)
  return members_.Mutable(index);
}
inline ::plane::OneTeamMember* EnterTeamResponse::add_members() {
  // @@protoc_insertion_point(field_add:plane.EnterTeamResponse.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::OneTeamMember >*
EnterTeamResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:plane.EnterTeamResponse.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::OneTeamMember >&
EnterTeamResponse::members() const {
  // @@protoc_insertion_point(field_list:plane.EnterTeamResponse.members)
  return members_;
}

// optional string voice_token = 5;
inline bool EnterTeamResponse::has_voice_token() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterTeamResponse::set_has_voice_token() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterTeamResponse::clear_has_voice_token() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterTeamResponse::clear_voice_token() {
  voice_token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_voice_token();
}
inline const ::std::string& EnterTeamResponse::voice_token() const {
  // @@protoc_insertion_point(field_get:plane.EnterTeamResponse.voice_token)
  return voice_token_.GetNoArena();
}
inline void EnterTeamResponse::set_voice_token(const ::std::string& value) {
  set_has_voice_token();
  voice_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.EnterTeamResponse.voice_token)
}
#if LANG_CXX11
inline void EnterTeamResponse::set_voice_token(::std::string&& value) {
  set_has_voice_token();
  voice_token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.EnterTeamResponse.voice_token)
}
#endif
inline void EnterTeamResponse::set_voice_token(const char* value) {
  set_has_voice_token();
  voice_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.EnterTeamResponse.voice_token)
}
inline void EnterTeamResponse::set_voice_token(const char* value, size_t size) {
  set_has_voice_token();
  voice_token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.EnterTeamResponse.voice_token)
}
inline ::std::string* EnterTeamResponse::mutable_voice_token() {
  set_has_voice_token();
  // @@protoc_insertion_point(field_mutable:plane.EnterTeamResponse.voice_token)
  return voice_token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterTeamResponse::release_voice_token() {
  // @@protoc_insertion_point(field_release:plane.EnterTeamResponse.voice_token)
  clear_has_voice_token();
  return voice_token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterTeamResponse::set_allocated_voice_token(::std::string* voice_token) {
  if (voice_token != NULL) {
    set_has_voice_token();
  } else {
    clear_has_voice_token();
  }
  voice_token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), voice_token);
  // @@protoc_insertion_point(field_set_allocated:plane.EnterTeamResponse.voice_token)
}

// -------------------------------------------------------------------

// OneFriendData

// optional string account = 1;
inline bool OneFriendData::has_account() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneFriendData::set_has_account() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneFriendData::clear_has_account() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneFriendData::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_account();
}
inline const ::std::string& OneFriendData::account() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.account)
  return account_.GetNoArena();
}
inline void OneFriendData::set_account(const ::std::string& value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneFriendData.account)
}
#if LANG_CXX11
inline void OneFriendData::set_account(::std::string&& value) {
  set_has_account();
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneFriendData.account)
}
#endif
inline void OneFriendData::set_account(const char* value) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneFriendData.account)
}
inline void OneFriendData::set_account(const char* value, size_t size) {
  set_has_account();
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneFriendData.account)
}
inline ::std::string* OneFriendData::mutable_account() {
  set_has_account();
  // @@protoc_insertion_point(field_mutable:plane.OneFriendData.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OneFriendData::release_account() {
  // @@protoc_insertion_point(field_release:plane.OneFriendData.account)
  clear_has_account();
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OneFriendData::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    set_has_account();
  } else {
    clear_has_account();
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:plane.OneFriendData.account)
}

// optional uint32 uid = 2;
inline bool OneFriendData::has_uid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OneFriendData::set_has_uid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OneFriendData::clear_has_uid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OneFriendData::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 OneFriendData::uid() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.uid)
  return uid_;
}
inline void OneFriendData::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFriendData.uid)
}

// optional uint32 header_imgid = 3;
inline bool OneFriendData::has_header_imgid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OneFriendData::set_has_header_imgid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OneFriendData::clear_has_header_imgid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OneFriendData::clear_header_imgid() {
  header_imgid_ = 0u;
  clear_has_header_imgid();
}
inline ::google::protobuf::uint32 OneFriendData::header_imgid() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.header_imgid)
  return header_imgid_;
}
inline void OneFriendData::set_header_imgid(::google::protobuf::uint32 value) {
  set_has_header_imgid();
  header_imgid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFriendData.header_imgid)
}

// optional string header_imgurl = 4;
inline bool OneFriendData::has_header_imgurl() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneFriendData::set_has_header_imgurl() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneFriendData::clear_has_header_imgurl() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneFriendData::clear_header_imgurl() {
  header_imgurl_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_header_imgurl();
}
inline const ::std::string& OneFriendData::header_imgurl() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.header_imgurl)
  return header_imgurl_.GetNoArena();
}
inline void OneFriendData::set_header_imgurl(const ::std::string& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.OneFriendData.header_imgurl)
}
#if LANG_CXX11
inline void OneFriendData::set_header_imgurl(::std::string&& value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.OneFriendData.header_imgurl)
}
#endif
inline void OneFriendData::set_header_imgurl(const char* value) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.OneFriendData.header_imgurl)
}
inline void OneFriendData::set_header_imgurl(const char* value, size_t size) {
  set_has_header_imgurl();
  header_imgurl_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.OneFriendData.header_imgurl)
}
inline ::std::string* OneFriendData::mutable_header_imgurl() {
  set_has_header_imgurl();
  // @@protoc_insertion_point(field_mutable:plane.OneFriendData.header_imgurl)
  return header_imgurl_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OneFriendData::release_header_imgurl() {
  // @@protoc_insertion_point(field_release:plane.OneFriendData.header_imgurl)
  clear_has_header_imgurl();
  return header_imgurl_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OneFriendData::set_allocated_header_imgurl(::std::string* header_imgurl) {
  if (header_imgurl != NULL) {
    set_has_header_imgurl();
  } else {
    clear_has_header_imgurl();
  }
  header_imgurl_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), header_imgurl);
  // @@protoc_insertion_point(field_set_allocated:plane.OneFriendData.header_imgurl)
}

// optional uint32 sex = 5;
inline bool OneFriendData::has_sex() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OneFriendData::set_has_sex() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OneFriendData::clear_has_sex() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OneFriendData::clear_sex() {
  sex_ = 0u;
  clear_has_sex();
}
inline ::google::protobuf::uint32 OneFriendData::sex() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.sex)
  return sex_;
}
inline void OneFriendData::set_sex(::google::protobuf::uint32 value) {
  set_has_sex();
  sex_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFriendData.sex)
}

// optional uint32 level = 6;
inline bool OneFriendData::has_level() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OneFriendData::set_has_level() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OneFriendData::clear_has_level() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OneFriendData::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 OneFriendData::level() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.level)
  return level_;
}
inline void OneFriendData::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFriendData.level)
}

// optional uint32 state = 7;
inline bool OneFriendData::has_state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OneFriendData::set_has_state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OneFriendData::clear_has_state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OneFriendData::clear_state() {
  state_ = 0u;
  clear_has_state();
}
inline ::google::protobuf::uint32 OneFriendData::state() const {
  // @@protoc_insertion_point(field_get:plane.OneFriendData.state)
  return state_;
}
inline void OneFriendData::set_state(::google::protobuf::uint32 value) {
  set_has_state();
  state_ = value;
  // @@protoc_insertion_point(field_set:plane.OneFriendData.state)
}

// -------------------------------------------------------------------

// OnePageFriendDataMsg

// optional uint32 total_num = 1;
inline bool OnePageFriendDataMsg::has_total_num() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OnePageFriendDataMsg::set_has_total_num() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OnePageFriendDataMsg::clear_has_total_num() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OnePageFriendDataMsg::clear_total_num() {
  total_num_ = 0u;
  clear_has_total_num();
}
inline ::google::protobuf::uint32 OnePageFriendDataMsg::total_num() const {
  // @@protoc_insertion_point(field_get:plane.OnePageFriendDataMsg.total_num)
  return total_num_;
}
inline void OnePageFriendDataMsg::set_total_num(::google::protobuf::uint32 value) {
  set_has_total_num();
  total_num_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePageFriendDataMsg.total_num)
}

// optional uint32 page_num = 2;
inline bool OnePageFriendDataMsg::has_page_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OnePageFriendDataMsg::set_has_page_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OnePageFriendDataMsg::clear_has_page_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OnePageFriendDataMsg::clear_page_num() {
  page_num_ = 0u;
  clear_has_page_num();
}
inline ::google::protobuf::uint32 OnePageFriendDataMsg::page_num() const {
  // @@protoc_insertion_point(field_get:plane.OnePageFriendDataMsg.page_num)
  return page_num_;
}
inline void OnePageFriendDataMsg::set_page_num(::google::protobuf::uint32 value) {
  set_has_page_num();
  page_num_ = value;
  // @@protoc_insertion_point(field_set:plane.OnePageFriendDataMsg.page_num)
}

// repeated .plane.OneFriendData datas = 3;
inline int OnePageFriendDataMsg::datas_size() const {
  return datas_.size();
}
inline void OnePageFriendDataMsg::clear_datas() {
  datas_.Clear();
}
inline const ::plane::OneFriendData& OnePageFriendDataMsg::datas(int index) const {
  // @@protoc_insertion_point(field_get:plane.OnePageFriendDataMsg.datas)
  return datas_.Get(index);
}
inline ::plane::OneFriendData* OnePageFriendDataMsg::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:plane.OnePageFriendDataMsg.datas)
  return datas_.Mutable(index);
}
inline ::plane::OneFriendData* OnePageFriendDataMsg::add_datas() {
  // @@protoc_insertion_point(field_add:plane.OnePageFriendDataMsg.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::OneFriendData >*
OnePageFriendDataMsg::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:plane.OnePageFriendDataMsg.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::OneFriendData >&
OnePageFriendDataMsg::datas() const {
  // @@protoc_insertion_point(field_list:plane.OnePageFriendDataMsg.datas)
  return datas_;
}

// -------------------------------------------------------------------

// TeamEnterRoomResponse

// optional uint32 teamid = 1;
inline bool TeamEnterRoomResponse::has_teamid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamEnterRoomResponse::set_has_teamid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamEnterRoomResponse::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamEnterRoomResponse::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 TeamEnterRoomResponse::teamid() const {
  // @@protoc_insertion_point(field_get:plane.TeamEnterRoomResponse.teamid)
  return teamid_;
}
inline void TeamEnterRoomResponse::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:plane.TeamEnterRoomResponse.teamid)
}

// repeated uint32 members = 2;
inline int TeamEnterRoomResponse::members_size() const {
  return members_.size();
}
inline void TeamEnterRoomResponse::clear_members() {
  members_.Clear();
}
inline ::google::protobuf::uint32 TeamEnterRoomResponse::members(int index) const {
  // @@protoc_insertion_point(field_get:plane.TeamEnterRoomResponse.members)
  return members_.Get(index);
}
inline void TeamEnterRoomResponse::set_members(int index, ::google::protobuf::uint32 value) {
  members_.Set(index, value);
  // @@protoc_insertion_point(field_set:plane.TeamEnterRoomResponse.members)
}
inline void TeamEnterRoomResponse::add_members(::google::protobuf::uint32 value) {
  members_.Add(value);
  // @@protoc_insertion_point(field_add:plane.TeamEnterRoomResponse.members)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
TeamEnterRoomResponse::members() const {
  // @@protoc_insertion_point(field_list:plane.TeamEnterRoomResponse.members)
  return members_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
TeamEnterRoomResponse::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:plane.TeamEnterRoomResponse.members)
  return &members_;
}

// -------------------------------------------------------------------

// NicknameMsg

// optional string nickname = 1;
inline bool NicknameMsg::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NicknameMsg::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NicknameMsg::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NicknameMsg::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& NicknameMsg::nickname() const {
  // @@protoc_insertion_point(field_get:plane.NicknameMsg.nickname)
  return nickname_.GetNoArena();
}
inline void NicknameMsg::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.NicknameMsg.nickname)
}
#if LANG_CXX11
inline void NicknameMsg::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.NicknameMsg.nickname)
}
#endif
inline void NicknameMsg::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.NicknameMsg.nickname)
}
inline void NicknameMsg::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.NicknameMsg.nickname)
}
inline ::std::string* NicknameMsg::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:plane.NicknameMsg.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NicknameMsg::release_nickname() {
  // @@protoc_insertion_point(field_release:plane.NicknameMsg.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NicknameMsg::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:plane.NicknameMsg.nickname)
}

// -------------------------------------------------------------------

// InviteMsg

// optional uint32 teamid = 1;
inline bool InviteMsg::has_teamid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteMsg::set_has_teamid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteMsg::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteMsg::clear_teamid() {
  teamid_ = 0u;
  clear_has_teamid();
}
inline ::google::protobuf::uint32 InviteMsg::teamid() const {
  // @@protoc_insertion_point(field_get:plane.InviteMsg.teamid)
  return teamid_;
}
inline void InviteMsg::set_teamid(::google::protobuf::uint32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:plane.InviteMsg.teamid)
}

// optional string inviter_acc = 2;
inline bool InviteMsg::has_inviter_acc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteMsg::set_has_inviter_acc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteMsg::clear_has_inviter_acc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteMsg::clear_inviter_acc() {
  inviter_acc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_inviter_acc();
}
inline const ::std::string& InviteMsg::inviter_acc() const {
  // @@protoc_insertion_point(field_get:plane.InviteMsg.inviter_acc)
  return inviter_acc_.GetNoArena();
}
inline void InviteMsg::set_inviter_acc(const ::std::string& value) {
  set_has_inviter_acc();
  inviter_acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.InviteMsg.inviter_acc)
}
#if LANG_CXX11
inline void InviteMsg::set_inviter_acc(::std::string&& value) {
  set_has_inviter_acc();
  inviter_acc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.InviteMsg.inviter_acc)
}
#endif
inline void InviteMsg::set_inviter_acc(const char* value) {
  set_has_inviter_acc();
  inviter_acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.InviteMsg.inviter_acc)
}
inline void InviteMsg::set_inviter_acc(const char* value, size_t size) {
  set_has_inviter_acc();
  inviter_acc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.InviteMsg.inviter_acc)
}
inline ::std::string* InviteMsg::mutable_inviter_acc() {
  set_has_inviter_acc();
  // @@protoc_insertion_point(field_mutable:plane.InviteMsg.inviter_acc)
  return inviter_acc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InviteMsg::release_inviter_acc() {
  // @@protoc_insertion_point(field_release:plane.InviteMsg.inviter_acc)
  clear_has_inviter_acc();
  return inviter_acc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviteMsg::set_allocated_inviter_acc(::std::string* inviter_acc) {
  if (inviter_acc != NULL) {
    set_has_inviter_acc();
  } else {
    clear_has_inviter_acc();
  }
  inviter_acc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), inviter_acc);
  // @@protoc_insertion_point(field_set_allocated:plane.InviteMsg.inviter_acc)
}

// -------------------------------------------------------------------

// NewNickNameMsg

// optional uint32 pos = 1;
inline bool NewNickNameMsg::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NewNickNameMsg::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NewNickNameMsg::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NewNickNameMsg::clear_pos() {
  pos_ = 0u;
  clear_has_pos();
}
inline ::google::protobuf::uint32 NewNickNameMsg::pos() const {
  // @@protoc_insertion_point(field_get:plane.NewNickNameMsg.pos)
  return pos_;
}
inline void NewNickNameMsg::set_pos(::google::protobuf::uint32 value) {
  set_has_pos();
  pos_ = value;
  // @@protoc_insertion_point(field_set:plane.NewNickNameMsg.pos)
}

// optional string nickname = 2;
inline bool NewNickNameMsg::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NewNickNameMsg::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NewNickNameMsg::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NewNickNameMsg::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& NewNickNameMsg::nickname() const {
  // @@protoc_insertion_point(field_get:plane.NewNickNameMsg.nickname)
  return nickname_.GetNoArena();
}
inline void NewNickNameMsg::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.NewNickNameMsg.nickname)
}
#if LANG_CXX11
inline void NewNickNameMsg::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.NewNickNameMsg.nickname)
}
#endif
inline void NewNickNameMsg::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.NewNickNameMsg.nickname)
}
inline void NewNickNameMsg::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.NewNickNameMsg.nickname)
}
inline ::std::string* NewNickNameMsg::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:plane.NewNickNameMsg.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* NewNickNameMsg::release_nickname() {
  // @@protoc_insertion_point(field_release:plane.NewNickNameMsg.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void NewNickNameMsg::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:plane.NewNickNameMsg.nickname)
}

// -------------------------------------------------------------------

// PageNumMsg

// optional uint32 page = 1;
inline bool PageNumMsg::has_page() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PageNumMsg::set_has_page() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PageNumMsg::clear_has_page() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PageNumMsg::clear_page() {
  page_ = 0u;
  clear_has_page();
}
inline ::google::protobuf::uint32 PageNumMsg::page() const {
  // @@protoc_insertion_point(field_get:plane.PageNumMsg.page)
  return page_;
}
inline void PageNumMsg::set_page(::google::protobuf::uint32 value) {
  set_has_page();
  page_ = value;
  // @@protoc_insertion_point(field_set:plane.PageNumMsg.page)
}

// -------------------------------------------------------------------

// AddMemberInRoomMsg

// optional uint32 member_num_before_add = 1;
inline bool AddMemberInRoomMsg::has_member_num_before_add() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AddMemberInRoomMsg::set_has_member_num_before_add() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AddMemberInRoomMsg::clear_has_member_num_before_add() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AddMemberInRoomMsg::clear_member_num_before_add() {
  member_num_before_add_ = 0u;
  clear_has_member_num_before_add();
}
inline ::google::protobuf::uint32 AddMemberInRoomMsg::member_num_before_add() const {
  // @@protoc_insertion_point(field_get:plane.AddMemberInRoomMsg.member_num_before_add)
  return member_num_before_add_;
}
inline void AddMemberInRoomMsg::set_member_num_before_add(::google::protobuf::uint32 value) {
  set_has_member_num_before_add();
  member_num_before_add_ = value;
  // @@protoc_insertion_point(field_set:plane.AddMemberInRoomMsg.member_num_before_add)
}

// repeated uint32 uids = 2;
inline int AddMemberInRoomMsg::uids_size() const {
  return uids_.size();
}
inline void AddMemberInRoomMsg::clear_uids() {
  uids_.Clear();
}
inline ::google::protobuf::uint32 AddMemberInRoomMsg::uids(int index) const {
  // @@protoc_insertion_point(field_get:plane.AddMemberInRoomMsg.uids)
  return uids_.Get(index);
}
inline void AddMemberInRoomMsg::set_uids(int index, ::google::protobuf::uint32 value) {
  uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:plane.AddMemberInRoomMsg.uids)
}
inline void AddMemberInRoomMsg::add_uids(::google::protobuf::uint32 value) {
  uids_.Add(value);
  // @@protoc_insertion_point(field_add:plane.AddMemberInRoomMsg.uids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
AddMemberInRoomMsg::uids() const {
  // @@protoc_insertion_point(field_list:plane.AddMemberInRoomMsg.uids)
  return uids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
AddMemberInRoomMsg::mutable_uids() {
  // @@protoc_insertion_point(field_mutable_list:plane.AddMemberInRoomMsg.uids)
  return &uids_;
}

// -------------------------------------------------------------------

// OneTeamRankData

// optional uint32 team_skinid = 1;
inline bool OneTeamRankData::has_team_skinid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OneTeamRankData::set_has_team_skinid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OneTeamRankData::clear_has_team_skinid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OneTeamRankData::clear_team_skinid() {
  team_skinid_ = 0u;
  clear_has_team_skinid();
}
inline ::google::protobuf::uint32 OneTeamRankData::team_skinid() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamRankData.team_skinid)
  return team_skinid_;
}
inline void OneTeamRankData::set_team_skinid(::google::protobuf::uint32 value) {
  set_has_team_skinid();
  team_skinid_ = value;
  // @@protoc_insertion_point(field_set:plane.OneTeamRankData.team_skinid)
}

// optional uint32 member_num = 2;
inline bool OneTeamRankData::has_member_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OneTeamRankData::set_has_member_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OneTeamRankData::clear_has_member_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OneTeamRankData::clear_member_num() {
  member_num_ = 0u;
  clear_has_member_num();
}
inline ::google::protobuf::uint32 OneTeamRankData::member_num() const {
  // @@protoc_insertion_point(field_get:plane.OneTeamRankData.member_num)
  return member_num_;
}
inline void OneTeamRankData::set_member_num(::google::protobuf::uint32 value) {
  set_has_member_num();
  member_num_ = value;
  // @@protoc_insertion_point(field_set:plane.OneTeamRankData.member_num)
}

// -------------------------------------------------------------------

// TeamRankDataMsg

// optional uint32 my_team_rank = 1;
inline bool TeamRankDataMsg::has_my_team_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void TeamRankDataMsg::set_has_my_team_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void TeamRankDataMsg::clear_has_my_team_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void TeamRankDataMsg::clear_my_team_rank() {
  my_team_rank_ = 0u;
  clear_has_my_team_rank();
}
inline ::google::protobuf::uint32 TeamRankDataMsg::my_team_rank() const {
  // @@protoc_insertion_point(field_get:plane.TeamRankDataMsg.my_team_rank)
  return my_team_rank_;
}
inline void TeamRankDataMsg::set_my_team_rank(::google::protobuf::uint32 value) {
  set_has_my_team_rank();
  my_team_rank_ = value;
  // @@protoc_insertion_point(field_set:plane.TeamRankDataMsg.my_team_rank)
}

// optional uint32 my_score = 2;
inline bool TeamRankDataMsg::has_my_score() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void TeamRankDataMsg::set_has_my_score() {
  _has_bits_[0] |= 0x00000002u;
}
inline void TeamRankDataMsg::clear_has_my_score() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void TeamRankDataMsg::clear_my_score() {
  my_score_ = 0u;
  clear_has_my_score();
}
inline ::google::protobuf::uint32 TeamRankDataMsg::my_score() const {
  // @@protoc_insertion_point(field_get:plane.TeamRankDataMsg.my_score)
  return my_score_;
}
inline void TeamRankDataMsg::set_my_score(::google::protobuf::uint32 value) {
  set_has_my_score();
  my_score_ = value;
  // @@protoc_insertion_point(field_set:plane.TeamRankDataMsg.my_score)
}

// optional uint32 my_teamskinid = 3;
inline bool TeamRankDataMsg::has_my_teamskinid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void TeamRankDataMsg::set_has_my_teamskinid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void TeamRankDataMsg::clear_has_my_teamskinid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void TeamRankDataMsg::clear_my_teamskinid() {
  my_teamskinid_ = 0u;
  clear_has_my_teamskinid();
}
inline ::google::protobuf::uint32 TeamRankDataMsg::my_teamskinid() const {
  // @@protoc_insertion_point(field_get:plane.TeamRankDataMsg.my_teamskinid)
  return my_teamskinid_;
}
inline void TeamRankDataMsg::set_my_teamskinid(::google::protobuf::uint32 value) {
  set_has_my_teamskinid();
  my_teamskinid_ = value;
  // @@protoc_insertion_point(field_set:plane.TeamRankDataMsg.my_teamskinid)
}

// optional uint32 my_team_num = 4;
inline bool TeamRankDataMsg::has_my_team_num() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void TeamRankDataMsg::set_has_my_team_num() {
  _has_bits_[0] |= 0x00000008u;
}
inline void TeamRankDataMsg::clear_has_my_team_num() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void TeamRankDataMsg::clear_my_team_num() {
  my_team_num_ = 0u;
  clear_has_my_team_num();
}
inline ::google::protobuf::uint32 TeamRankDataMsg::my_team_num() const {
  // @@protoc_insertion_point(field_get:plane.TeamRankDataMsg.my_team_num)
  return my_team_num_;
}
inline void TeamRankDataMsg::set_my_team_num(::google::protobuf::uint32 value) {
  set_has_my_team_num();
  my_team_num_ = value;
  // @@protoc_insertion_point(field_set:plane.TeamRankDataMsg.my_team_num)
}

// repeated .plane.OneTeamRankData datas = 5;
inline int TeamRankDataMsg::datas_size() const {
  return datas_.size();
}
inline void TeamRankDataMsg::clear_datas() {
  datas_.Clear();
}
inline const ::plane::OneTeamRankData& TeamRankDataMsg::datas(int index) const {
  // @@protoc_insertion_point(field_get:plane.TeamRankDataMsg.datas)
  return datas_.Get(index);
}
inline ::plane::OneTeamRankData* TeamRankDataMsg::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:plane.TeamRankDataMsg.datas)
  return datas_.Mutable(index);
}
inline ::plane::OneTeamRankData* TeamRankDataMsg::add_datas() {
  // @@protoc_insertion_point(field_add:plane.TeamRankDataMsg.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::plane::OneTeamRankData >*
TeamRankDataMsg::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:plane.TeamRankDataMsg.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::plane::OneTeamRankData >&
TeamRankDataMsg::datas() const {
  // @@protoc_insertion_point(field_list:plane.TeamRankDataMsg.datas)
  return datas_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace plane

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_plane_2fteam_2eproto__INCLUDED
