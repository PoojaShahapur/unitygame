// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: plane/plane.proto

#ifndef PROTOBUF_plane_2fplane_2eproto__INCLUDED
#define PROTOBUF_plane_2fplane_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "empty_msg.pb.h"
#include "plane/plane_msg.pb.h"
// @@protoc_insertion_point(includes)
namespace plane {
class BatchAddEnergyPlaneBcMsg;
class BatchAddEnergyPlaneBcMsgDefaultTypeInternal;
extern BatchAddEnergyPlaneBcMsgDefaultTypeInternal _BatchAddEnergyPlaneBcMsg_default_instance_;
class BatchAddFoodBcMsg;
class BatchAddFoodBcMsgDefaultTypeInternal;
extern BatchAddFoodBcMsgDefaultTypeInternal _BatchAddFoodBcMsg_default_instance_;
class EnterRoomMsg;
class EnterRoomMsgDefaultTypeInternal;
extern EnterRoomMsgDefaultTypeInternal _EnterRoomMsg_default_instance_;
class FoodMsg;
class FoodMsgDefaultTypeInternal;
extern FoodMsgDefaultTypeInternal _FoodMsg_default_instance_;
class FrameHitBcMsg;
class FrameHitBcMsgDefaultTypeInternal;
extern FrameHitBcMsgDefaultTypeInternal _FrameHitBcMsg_default_instance_;
class GMCmd;
class GMCmdDefaultTypeInternal;
extern GMCmdDefaultTypeInternal _GMCmd_default_instance_;
class JoinRoomMsg;
class JoinRoomMsgDefaultTypeInternal;
extern JoinRoomMsgDefaultTypeInternal _JoinRoomMsg_default_instance_;
class MoveInfo;
class MoveInfoDefaultTypeInternal;
extern MoveInfoDefaultTypeInternal _MoveInfo_default_instance_;
class MoveToMsg;
class MoveToMsgDefaultTypeInternal;
extern MoveToMsgDefaultTypeInternal _MoveToMsg_default_instance_;
class MsAndId;
class MsAndIdDefaultTypeInternal;
extern MsAndIdDefaultTypeInternal _MsAndId_default_instance_;
class OneBatchPlane;
class OneBatchPlaneDefaultTypeInternal;
extern OneBatchPlaneDefaultTypeInternal _OneBatchPlane_default_instance_;
class OneBulletGroupHit;
class OneBulletGroupHitDefaultTypeInternal;
extern OneBulletGroupHitDefaultTypeInternal _OneBulletGroupHit_default_instance_;
class OneEnergyHit;
class OneEnergyHitDefaultTypeInternal;
extern OneEnergyHitDefaultTypeInternal _OneEnergyHit_default_instance_;
class OnePlaneHit;
class OnePlaneHitDefaultTypeInternal;
extern OnePlaneHitDefaultTypeInternal _OnePlaneHit_default_instance_;
class OneResultData;
class OneResultDataDefaultTypeInternal;
extern OneResultDataDefaultTypeInternal _OneResultData_default_instance_;
class PlaneDieMsg;
class PlaneDieMsgDefaultTypeInternal;
extern PlaneDieMsgDefaultTypeInternal _PlaneDieMsg_default_instance_;
class PlaneMsg;
class PlaneMsgDefaultTypeInternal;
extern PlaneMsgDefaultTypeInternal _PlaneMsg_default_instance_;
class PlayerInfo;
class PlayerInfoDefaultTypeInternal;
extern PlayerInfoDefaultTypeInternal _PlayerInfo_default_instance_;
class ResultDataMsg;
class ResultDataMsgDefaultTypeInternal;
extern ResultDataMsgDefaultTypeInternal _ResultDataMsg_default_instance_;
class TurnToMsg;
class TurnToMsgDefaultTypeInternal;
extern TurnToMsgDefaultTypeInternal _TurnToMsg_default_instance_;
class UidListMsg;
class UidListMsgDefaultTypeInternal;
extern UidListMsgDefaultTypeInternal _UidListMsg_default_instance_;
class UidMsg;
class UidMsgDefaultTypeInternal;
extern UidMsgDefaultTypeInternal _UidMsg_default_instance_;
}  // namespace plane
namespace rpc {
class EmptyMsg;
class EmptyMsgDefaultTypeInternal;
extern EmptyMsgDefaultTypeInternal _EmptyMsg_default_instance_;
}  // namespace rpc

namespace plane {

namespace protobuf_plane_2fplane_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_plane_2fplane_2eproto

// ===================================================================

class GMCmd : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.GMCmd) */ {
 public:
  GMCmd();
  virtual ~GMCmd();

  GMCmd(const GMCmd& from);

  inline GMCmd& operator=(const GMCmd& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GMCmd& default_instance();

  static inline const GMCmd* internal_default_instance() {
    return reinterpret_cast<const GMCmd*>(
               &_GMCmd_default_instance_);
  }

  void Swap(GMCmd* other);

  // implements Message ----------------------------------------------

  inline GMCmd* New() const PROTOBUF_FINAL { return New(NULL); }

  GMCmd* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GMCmd& from);
  void MergeFrom(const GMCmd& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GMCmd* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string cmd = 1;
  bool has_cmd() const;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  const ::std::string& cmd() const;
  void set_cmd(const ::std::string& value);
  #if LANG_CXX11
  void set_cmd(::std::string&& value);
  #endif
  void set_cmd(const char* value);
  void set_cmd(const char* value, size_t size);
  ::std::string* mutable_cmd();
  ::std::string* release_cmd();
  void set_allocated_cmd(::std::string* cmd);

  // @@protoc_insertion_point(class_scope:plane.GMCmd)
 private:
  void set_has_cmd();
  void clear_has_cmd();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr cmd_;
  friend struct  protobuf_plane_2fplane_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EnterRoomMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.EnterRoomMsg) */ {
 public:
  EnterRoomMsg();
  virtual ~EnterRoomMsg();

  EnterRoomMsg(const EnterRoomMsg& from);

  inline EnterRoomMsg& operator=(const EnterRoomMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EnterRoomMsg& default_instance();

  static inline const EnterRoomMsg* internal_default_instance() {
    return reinterpret_cast<const EnterRoomMsg*>(
               &_EnterRoomMsg_default_instance_);
  }

  void Swap(EnterRoomMsg* other);

  // implements Message ----------------------------------------------

  inline EnterRoomMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  EnterRoomMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EnterRoomMsg& from);
  void MergeFrom(const EnterRoomMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EnterRoomMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 1;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 1;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional uint32 mode = 2;
  bool has_mode() const;
  void clear_mode();
  static const int kModeFieldNumber = 2;
  ::google::protobuf::uint32 mode() const;
  void set_mode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.EnterRoomMsg)
 private:
  void set_has_nickname();
  void clear_has_nickname();
  void set_has_mode();
  void clear_has_mode();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::uint32 mode_;
  friend struct  protobuf_plane_2fplane_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class JoinRoomMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:plane.JoinRoomMsg) */ {
 public:
  JoinRoomMsg();
  virtual ~JoinRoomMsg();

  JoinRoomMsg(const JoinRoomMsg& from);

  inline JoinRoomMsg& operator=(const JoinRoomMsg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const JoinRoomMsg& default_instance();

  static inline const JoinRoomMsg* internal_default_instance() {
    return reinterpret_cast<const JoinRoomMsg*>(
               &_JoinRoomMsg_default_instance_);
  }

  void Swap(JoinRoomMsg* other);

  // implements Message ----------------------------------------------

  inline JoinRoomMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  JoinRoomMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const JoinRoomMsg& from);
  void MergeFrom(const JoinRoomMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(JoinRoomMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string nickname = 2;
  bool has_nickname() const;
  void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // optional uint32 uid = 1;
  bool has_uid() const;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:plane.JoinRoomMsg)
 private:
  void set_has_uid();
  void clear_has_uid();
  void set_has_nickname();
  void clear_has_nickname();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::uint32 uid_;
  friend struct  protobuf_plane_2fplane_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// GMCmd

// optional string cmd = 1;
inline bool GMCmd::has_cmd() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GMCmd::set_has_cmd() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GMCmd::clear_has_cmd() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GMCmd::clear_cmd() {
  cmd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_cmd();
}
inline const ::std::string& GMCmd::cmd() const {
  // @@protoc_insertion_point(field_get:plane.GMCmd.cmd)
  return cmd_.GetNoArena();
}
inline void GMCmd::set_cmd(const ::std::string& value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.GMCmd.cmd)
}
#if LANG_CXX11
inline void GMCmd::set_cmd(::std::string&& value) {
  set_has_cmd();
  cmd_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.GMCmd.cmd)
}
#endif
inline void GMCmd::set_cmd(const char* value) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.GMCmd.cmd)
}
inline void GMCmd::set_cmd(const char* value, size_t size) {
  set_has_cmd();
  cmd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.GMCmd.cmd)
}
inline ::std::string* GMCmd::mutable_cmd() {
  set_has_cmd();
  // @@protoc_insertion_point(field_mutable:plane.GMCmd.cmd)
  return cmd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GMCmd::release_cmd() {
  // @@protoc_insertion_point(field_release:plane.GMCmd.cmd)
  clear_has_cmd();
  return cmd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GMCmd::set_allocated_cmd(::std::string* cmd) {
  if (cmd != NULL) {
    set_has_cmd();
  } else {
    clear_has_cmd();
  }
  cmd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), cmd);
  // @@protoc_insertion_point(field_set_allocated:plane.GMCmd.cmd)
}

// -------------------------------------------------------------------

// EnterRoomMsg

// optional string nickname = 1;
inline bool EnterRoomMsg::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EnterRoomMsg::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EnterRoomMsg::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EnterRoomMsg::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& EnterRoomMsg::nickname() const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomMsg.nickname)
  return nickname_.GetNoArena();
}
inline void EnterRoomMsg::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.EnterRoomMsg.nickname)
}
#if LANG_CXX11
inline void EnterRoomMsg::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.EnterRoomMsg.nickname)
}
#endif
inline void EnterRoomMsg::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.EnterRoomMsg.nickname)
}
inline void EnterRoomMsg::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.EnterRoomMsg.nickname)
}
inline ::std::string* EnterRoomMsg::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:plane.EnterRoomMsg.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EnterRoomMsg::release_nickname() {
  // @@protoc_insertion_point(field_release:plane.EnterRoomMsg.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EnterRoomMsg::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:plane.EnterRoomMsg.nickname)
}

// optional uint32 mode = 2;
inline bool EnterRoomMsg::has_mode() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EnterRoomMsg::set_has_mode() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EnterRoomMsg::clear_has_mode() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EnterRoomMsg::clear_mode() {
  mode_ = 0u;
  clear_has_mode();
}
inline ::google::protobuf::uint32 EnterRoomMsg::mode() const {
  // @@protoc_insertion_point(field_get:plane.EnterRoomMsg.mode)
  return mode_;
}
inline void EnterRoomMsg::set_mode(::google::protobuf::uint32 value) {
  set_has_mode();
  mode_ = value;
  // @@protoc_insertion_point(field_set:plane.EnterRoomMsg.mode)
}

// -------------------------------------------------------------------

// JoinRoomMsg

// optional uint32 uid = 1;
inline bool JoinRoomMsg::has_uid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void JoinRoomMsg::set_has_uid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void JoinRoomMsg::clear_has_uid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void JoinRoomMsg::clear_uid() {
  uid_ = 0u;
  clear_has_uid();
}
inline ::google::protobuf::uint32 JoinRoomMsg::uid() const {
  // @@protoc_insertion_point(field_get:plane.JoinRoomMsg.uid)
  return uid_;
}
inline void JoinRoomMsg::set_uid(::google::protobuf::uint32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:plane.JoinRoomMsg.uid)
}

// optional string nickname = 2;
inline bool JoinRoomMsg::has_nickname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void JoinRoomMsg::set_has_nickname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void JoinRoomMsg::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void JoinRoomMsg::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_nickname();
}
inline const ::std::string& JoinRoomMsg::nickname() const {
  // @@protoc_insertion_point(field_get:plane.JoinRoomMsg.nickname)
  return nickname_.GetNoArena();
}
inline void JoinRoomMsg::set_nickname(const ::std::string& value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:plane.JoinRoomMsg.nickname)
}
#if LANG_CXX11
inline void JoinRoomMsg::set_nickname(::std::string&& value) {
  set_has_nickname();
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:plane.JoinRoomMsg.nickname)
}
#endif
inline void JoinRoomMsg::set_nickname(const char* value) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:plane.JoinRoomMsg.nickname)
}
inline void JoinRoomMsg::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:plane.JoinRoomMsg.nickname)
}
inline ::std::string* JoinRoomMsg::mutable_nickname() {
  set_has_nickname();
  // @@protoc_insertion_point(field_mutable:plane.JoinRoomMsg.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* JoinRoomMsg::release_nickname() {
  // @@protoc_insertion_point(field_release:plane.JoinRoomMsg.nickname)
  clear_has_nickname();
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void JoinRoomMsg::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    set_has_nickname();
  } else {
    clear_has_nickname();
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:plane.JoinRoomMsg.nickname)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace plane

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_plane_2fplane_2eproto__INCLUDED
