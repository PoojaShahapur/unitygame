// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: forward_from_svr.proto

#ifndef PROTOBUF_forward_5ffrom_5fsvr_2eproto__INCLUDED
#define PROTOBUF_forward_5ffrom_5fsvr_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace svr {
class ForwardRequest;
class ForwardRequestDefaultTypeInternal;
extern ForwardRequestDefaultTypeInternal _ForwardRequest_default_instance_;
class ForwardRequest_GameCltId;
class ForwardRequest_GameCltIdDefaultTypeInternal;
extern ForwardRequest_GameCltIdDefaultTypeInternal _ForwardRequest_GameCltId_default_instance_;
class ForwardResponse;
class ForwardResponseDefaultTypeInternal;
extern ForwardResponseDefaultTypeInternal _ForwardResponse_default_instance_;
}  // namespace svr

namespace svr {

namespace protobuf_forward_5ffrom_5fsvr_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_forward_5ffrom_5fsvr_2eproto

// ===================================================================

class ForwardRequest_GameCltId : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.ForwardRequest.GameCltId) */ {
 public:
  ForwardRequest_GameCltId();
  virtual ~ForwardRequest_GameCltId();

  ForwardRequest_GameCltId(const ForwardRequest_GameCltId& from);

  inline ForwardRequest_GameCltId& operator=(const ForwardRequest_GameCltId& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardRequest_GameCltId& default_instance();

  static inline const ForwardRequest_GameCltId* internal_default_instance() {
    return reinterpret_cast<const ForwardRequest_GameCltId*>(
               &_ForwardRequest_GameCltId_default_instance_);
  }

  void Swap(ForwardRequest_GameCltId* other);

  // implements Message ----------------------------------------------

  inline ForwardRequest_GameCltId* New() const PROTOBUF_FINAL { return New(NULL); }

  ForwardRequest_GameCltId* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForwardRequest_GameCltId& from);
  void MergeFrom(const ForwardRequest_GameCltId& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForwardRequest_GameCltId* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 base_rpc_clt_id = 2;
  void clear_base_rpc_clt_id();
  static const int kBaseRpcCltIdFieldNumber = 2;
  ::google::protobuf::uint64 base_rpc_clt_id() const;
  void set_base_rpc_clt_id(::google::protobuf::uint64 value);

  // uint32 base_svr_id = 1;
  void clear_base_svr_id();
  static const int kBaseSvrIdFieldNumber = 1;
  ::google::protobuf::uint32 base_svr_id() const;
  void set_base_svr_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.ForwardRequest.GameCltId)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 base_rpc_clt_id_;
  ::google::protobuf::uint32 base_svr_id_;
  mutable int _cached_size_;
  friend struct  protobuf_forward_5ffrom_5fsvr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForwardRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.ForwardRequest) */ {
 public:
  ForwardRequest();
  virtual ~ForwardRequest();

  ForwardRequest(const ForwardRequest& from);

  inline ForwardRequest& operator=(const ForwardRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardRequest& default_instance();

  static inline const ForwardRequest* internal_default_instance() {
    return reinterpret_cast<const ForwardRequest*>(
               &_ForwardRequest_default_instance_);
  }

  void Swap(ForwardRequest* other);

  // implements Message ----------------------------------------------

  inline ForwardRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  ForwardRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForwardRequest& from);
  void MergeFrom(const ForwardRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForwardRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef ForwardRequest_GameCltId GameCltId;

  // accessors -------------------------------------------------------

  // string service = 1;
  void clear_service();
  static const int kServiceFieldNumber = 1;
  const ::std::string& service() const;
  void set_service(const ::std::string& value);
  #if LANG_CXX11
  void set_service(::std::string&& value);
  #endif
  void set_service(const char* value);
  void set_service(const char* value, size_t size);
  ::std::string* mutable_service();
  ::std::string* release_service();
  void set_allocated_service(::std::string* service);

  // string method = 2;
  void clear_method();
  static const int kMethodFieldNumber = 2;
  const ::std::string& method() const;
  void set_method(const ::std::string& value);
  #if LANG_CXX11
  void set_method(::std::string&& value);
  #endif
  void set_method(const char* value);
  void set_method(const char* value, size_t size);
  ::std::string* mutable_method();
  ::std::string* release_method();
  void set_allocated_method(::std::string* method);

  // bytes content = 3;
  void clear_content();
  static const int kContentFieldNumber = 3;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // .svr.ForwardRequest.GameCltId game_clt_id = 4;
  bool has_game_clt_id() const;
  void clear_game_clt_id();
  static const int kGameCltIdFieldNumber = 4;
  const ::svr::ForwardRequest_GameCltId& game_clt_id() const;
  ::svr::ForwardRequest_GameCltId* mutable_game_clt_id();
  ::svr::ForwardRequest_GameCltId* release_game_clt_id();
  void set_allocated_game_clt_id(::svr::ForwardRequest_GameCltId* game_clt_id);

  // @@protoc_insertion_point(class_scope:svr.ForwardRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr service_;
  ::google::protobuf::internal::ArenaStringPtr method_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::svr::ForwardRequest_GameCltId* game_clt_id_;
  mutable int _cached_size_;
  friend struct  protobuf_forward_5ffrom_5fsvr_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ForwardResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.ForwardResponse) */ {
 public:
  ForwardResponse();
  virtual ~ForwardResponse();

  ForwardResponse(const ForwardResponse& from);

  inline ForwardResponse& operator=(const ForwardResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ForwardResponse& default_instance();

  static inline const ForwardResponse* internal_default_instance() {
    return reinterpret_cast<const ForwardResponse*>(
               &_ForwardResponse_default_instance_);
  }

  void Swap(ForwardResponse* other);

  // implements Message ----------------------------------------------

  inline ForwardResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  ForwardResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ForwardResponse& from);
  void MergeFrom(const ForwardResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ForwardResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:svr.ForwardResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  mutable int _cached_size_;
  friend struct  protobuf_forward_5ffrom_5fsvr_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ForwardRequest_GameCltId

// uint32 base_svr_id = 1;
inline void ForwardRequest_GameCltId::clear_base_svr_id() {
  base_svr_id_ = 0u;
}
inline ::google::protobuf::uint32 ForwardRequest_GameCltId::base_svr_id() const {
  // @@protoc_insertion_point(field_get:svr.ForwardRequest.GameCltId.base_svr_id)
  return base_svr_id_;
}
inline void ForwardRequest_GameCltId::set_base_svr_id(::google::protobuf::uint32 value) {
  
  base_svr_id_ = value;
  // @@protoc_insertion_point(field_set:svr.ForwardRequest.GameCltId.base_svr_id)
}

// uint64 base_rpc_clt_id = 2;
inline void ForwardRequest_GameCltId::clear_base_rpc_clt_id() {
  base_rpc_clt_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 ForwardRequest_GameCltId::base_rpc_clt_id() const {
  // @@protoc_insertion_point(field_get:svr.ForwardRequest.GameCltId.base_rpc_clt_id)
  return base_rpc_clt_id_;
}
inline void ForwardRequest_GameCltId::set_base_rpc_clt_id(::google::protobuf::uint64 value) {
  
  base_rpc_clt_id_ = value;
  // @@protoc_insertion_point(field_set:svr.ForwardRequest.GameCltId.base_rpc_clt_id)
}

// -------------------------------------------------------------------

// ForwardRequest

// string service = 1;
inline void ForwardRequest::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ForwardRequest::service() const {
  // @@protoc_insertion_point(field_get:svr.ForwardRequest.service)
  return service_.GetNoArena();
}
inline void ForwardRequest::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.ForwardRequest.service)
}
#if LANG_CXX11
inline void ForwardRequest::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.ForwardRequest.service)
}
#endif
inline void ForwardRequest::set_service(const char* value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.ForwardRequest.service)
}
inline void ForwardRequest::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.ForwardRequest.service)
}
inline ::std::string* ForwardRequest::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:svr.ForwardRequest.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForwardRequest::release_service() {
  // @@protoc_insertion_point(field_release:svr.ForwardRequest.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardRequest::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:svr.ForwardRequest.service)
}

// string method = 2;
inline void ForwardRequest::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ForwardRequest::method() const {
  // @@protoc_insertion_point(field_get:svr.ForwardRequest.method)
  return method_.GetNoArena();
}
inline void ForwardRequest::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.ForwardRequest.method)
}
#if LANG_CXX11
inline void ForwardRequest::set_method(::std::string&& value) {
  
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.ForwardRequest.method)
}
#endif
inline void ForwardRequest::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.ForwardRequest.method)
}
inline void ForwardRequest::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.ForwardRequest.method)
}
inline ::std::string* ForwardRequest::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:svr.ForwardRequest.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForwardRequest::release_method() {
  // @@protoc_insertion_point(field_release:svr.ForwardRequest.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardRequest::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:svr.ForwardRequest.method)
}

// bytes content = 3;
inline void ForwardRequest::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ForwardRequest::content() const {
  // @@protoc_insertion_point(field_get:svr.ForwardRequest.content)
  return content_.GetNoArena();
}
inline void ForwardRequest::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.ForwardRequest.content)
}
#if LANG_CXX11
inline void ForwardRequest::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.ForwardRequest.content)
}
#endif
inline void ForwardRequest::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.ForwardRequest.content)
}
inline void ForwardRequest::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.ForwardRequest.content)
}
inline ::std::string* ForwardRequest::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:svr.ForwardRequest.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForwardRequest::release_content() {
  // @@protoc_insertion_point(field_release:svr.ForwardRequest.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardRequest::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:svr.ForwardRequest.content)
}

// .svr.ForwardRequest.GameCltId game_clt_id = 4;
inline bool ForwardRequest::has_game_clt_id() const {
  return this != internal_default_instance() && game_clt_id_ != NULL;
}
inline void ForwardRequest::clear_game_clt_id() {
  if (GetArenaNoVirtual() == NULL && game_clt_id_ != NULL) delete game_clt_id_;
  game_clt_id_ = NULL;
}
inline const ::svr::ForwardRequest_GameCltId& ForwardRequest::game_clt_id() const {
  // @@protoc_insertion_point(field_get:svr.ForwardRequest.game_clt_id)
  return game_clt_id_ != NULL ? *game_clt_id_
                         : *::svr::ForwardRequest_GameCltId::internal_default_instance();
}
inline ::svr::ForwardRequest_GameCltId* ForwardRequest::mutable_game_clt_id() {
  
  if (game_clt_id_ == NULL) {
    game_clt_id_ = new ::svr::ForwardRequest_GameCltId;
  }
  // @@protoc_insertion_point(field_mutable:svr.ForwardRequest.game_clt_id)
  return game_clt_id_;
}
inline ::svr::ForwardRequest_GameCltId* ForwardRequest::release_game_clt_id() {
  // @@protoc_insertion_point(field_release:svr.ForwardRequest.game_clt_id)
  
  ::svr::ForwardRequest_GameCltId* temp = game_clt_id_;
  game_clt_id_ = NULL;
  return temp;
}
inline void ForwardRequest::set_allocated_game_clt_id(::svr::ForwardRequest_GameCltId* game_clt_id) {
  delete game_clt_id_;
  game_clt_id_ = game_clt_id;
  if (game_clt_id) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:svr.ForwardRequest.game_clt_id)
}

// -------------------------------------------------------------------

// ForwardResponse

// bytes content = 1;
inline void ForwardResponse::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ForwardResponse::content() const {
  // @@protoc_insertion_point(field_get:svr.ForwardResponse.content)
  return content_.GetNoArena();
}
inline void ForwardResponse::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.ForwardResponse.content)
}
#if LANG_CXX11
inline void ForwardResponse::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.ForwardResponse.content)
}
#endif
inline void ForwardResponse::set_content(const char* value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.ForwardResponse.content)
}
inline void ForwardResponse::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.ForwardResponse.content)
}
inline ::std::string* ForwardResponse::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:svr.ForwardResponse.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ForwardResponse::release_content() {
  // @@protoc_insertion_point(field_release:svr.ForwardResponse.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ForwardResponse::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:svr.ForwardResponse.content)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace svr

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_forward_5ffrom_5fsvr_2eproto__INCLUDED
