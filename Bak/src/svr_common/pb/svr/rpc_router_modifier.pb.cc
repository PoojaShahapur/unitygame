// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc_router_modifier.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "rpc_router_modifier.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace svr {
class SetMthdDstSvrIdRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetMthdDstSvrIdRequest> {
} _SetMthdDstSvrIdRequest_default_instance_;
class ResetMthdDstSvrIdRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResetMthdDstSvrIdRequest> {
} _ResetMthdDstSvrIdRequest_default_instance_;
class SetSvcDstSvrIdRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SetSvcDstSvrIdRequest> {
} _SetSvcDstSvrIdRequest_default_instance_;
class ResetSvcDstSvrIdRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ResetSvcDstSvrIdRequest> {
} _ResetSvcDstSvrIdRequest_default_instance_;

namespace protobuf_rpc_5frouter_5fmodifier_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMthdDstSvrIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMthdDstSvrIdRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMthdDstSvrIdRequest, service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMthdDstSvrIdRequest, method_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetMthdDstSvrIdRequest, dst_svr_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetMthdDstSvrIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetMthdDstSvrIdRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetMthdDstSvrIdRequest, service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetMthdDstSvrIdRequest, method_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSvcDstSvrIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSvcDstSvrIdRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSvcDstSvrIdRequest, service_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SetSvcDstSvrIdRequest, dst_svr_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetSvcDstSvrIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetSvcDstSvrIdRequest, session_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResetSvcDstSvrIdRequest, service_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(SetMthdDstSvrIdRequest)},
  { 8, -1, sizeof(ResetMthdDstSvrIdRequest)},
  { 15, -1, sizeof(SetSvcDstSvrIdRequest)},
  { 22, -1, sizeof(ResetSvcDstSvrIdRequest)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetMthdDstSvrIdRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResetMthdDstSvrIdRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SetSvcDstSvrIdRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ResetSvcDstSvrIdRequest_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "rpc_router_modifier.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _SetMthdDstSvrIdRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _ResetMthdDstSvrIdRequest_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _SetSvcDstSvrIdRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _ResetSvcDstSvrIdRequest_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::svr::protobuf_server_5fempty_5fmsg_2eproto::InitDefaults();
  _SetMthdDstSvrIdRequest_default_instance_.DefaultConstruct();
  _ResetMthdDstSvrIdRequest_default_instance_.DefaultConstruct();
  _SetSvcDstSvrIdRequest_default_instance_.DefaultConstruct();
  _ResetSvcDstSvrIdRequest_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\031rpc_router_modifier.proto\022\003svr\032\026server"
      "_empty_msg.proto\"a\n\026SetMthdDstSvrIdReque"
      "st\022\022\n\nsession_id\030\001 \001(\r\022\017\n\007service\030\002 \001(\t\022"
      "\016\n\006method\030\003 \001(\t\022\022\n\ndst_svr_id\030\004 \001(\r\"O\n\030R"
      "esetMthdDstSvrIdRequest\022\022\n\nsession_id\030\001 "
      "\001(\r\022\017\n\007service\030\002 \001(\t\022\016\n\006method\030\003 \001(\t\"P\n\025"
      "SetSvcDstSvrIdRequest\022\022\n\nsession_id\030\001 \001("
      "\r\022\017\n\007service\030\002 \001(\t\022\022\n\ndst_svr_id\030\003 \001(\r\">"
      "\n\027ResetSvcDstSvrIdRequest\022\022\n\nsession_id\030"
      "\001 \001(\r\022\017\n\007service\030\002 \001(\t2\223\002\n\021RpcRouterModi"
      "fier\022=\n\017SetMthdDstSvrId\022\033.svr.SetMthdDst"
      "SvrIdRequest\032\r.svr.EmptyMsg\022A\n\021ResetMthd"
      "DstSvrId\022\035.svr.ResetMthdDstSvrIdRequest\032"
      "\r.svr.EmptyMsg\022;\n\016SetSvcDstSvrId\022\032.svr.S"
      "etSvcDstSvrIdRequest\032\r.svr.EmptyMsg\022\?\n\020R"
      "esetSvcDstSvrId\022\034.svr.ResetSvcDstSvrIdRe"
      "quest\032\r.svr.EmptyMsgb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 668);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "rpc_router_modifier.proto", &protobuf_RegisterTypes);
  ::svr::protobuf_server_5fempty_5fmsg_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_rpc_5frouter_5fmodifier_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetMthdDstSvrIdRequest::kSessionIdFieldNumber;
const int SetMthdDstSvrIdRequest::kServiceFieldNumber;
const int SetMthdDstSvrIdRequest::kMethodFieldNumber;
const int SetMthdDstSvrIdRequest::kDstSvrIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetMthdDstSvrIdRequest::SetMthdDstSvrIdRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_5frouter_5fmodifier_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.SetMthdDstSvrIdRequest)
}
SetMthdDstSvrIdRequest::SetMthdDstSvrIdRequest(const SetMthdDstSvrIdRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  ::memcpy(&session_id_, &from.session_id_,
    reinterpret_cast<char*>(&dst_svr_id_) -
    reinterpret_cast<char*>(&session_id_) + sizeof(dst_svr_id_));
  // @@protoc_insertion_point(copy_constructor:svr.SetMthdDstSvrIdRequest)
}

void SetMthdDstSvrIdRequest::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_id_, 0, reinterpret_cast<char*>(&dst_svr_id_) -
    reinterpret_cast<char*>(&session_id_) + sizeof(dst_svr_id_));
  _cached_size_ = 0;
}

SetMthdDstSvrIdRequest::~SetMthdDstSvrIdRequest() {
  // @@protoc_insertion_point(destructor:svr.SetMthdDstSvrIdRequest)
  SharedDtor();
}

void SetMthdDstSvrIdRequest::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetMthdDstSvrIdRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetMthdDstSvrIdRequest::descriptor() {
  protobuf_rpc_5frouter_5fmodifier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5frouter_5fmodifier_2eproto::file_level_metadata[0].descriptor;
}

const SetMthdDstSvrIdRequest& SetMthdDstSvrIdRequest::default_instance() {
  protobuf_rpc_5frouter_5fmodifier_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetMthdDstSvrIdRequest* SetMthdDstSvrIdRequest::New(::google::protobuf::Arena* arena) const {
  SetMthdDstSvrIdRequest* n = new SetMthdDstSvrIdRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetMthdDstSvrIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.SetMthdDstSvrIdRequest)
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_id_, 0, reinterpret_cast<char*>(&dst_svr_id_) -
    reinterpret_cast<char*>(&session_id_) + sizeof(dst_svr_id_));
}

bool SetMthdDstSvrIdRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.SetMthdDstSvrIdRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 session_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), this->service().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.SetMthdDstSvrIdRequest.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string method = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.SetMthdDstSvrIdRequest.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dst_svr_id = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dst_svr_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.SetMthdDstSvrIdRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.SetMthdDstSvrIdRequest)
  return false;
#undef DO_
}

void SetMthdDstSvrIdRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.SetMthdDstSvrIdRequest)
  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->session_id(), output);
  }

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.SetMthdDstSvrIdRequest.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service(), output);
  }

  // string method = 3;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.SetMthdDstSvrIdRequest.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->method(), output);
  }

  // uint32 dst_svr_id = 4;
  if (this->dst_svr_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->dst_svr_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.SetMthdDstSvrIdRequest)
}

::google::protobuf::uint8* SetMthdDstSvrIdRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.SetMthdDstSvrIdRequest)
  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->session_id(), target);
  }

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.SetMthdDstSvrIdRequest.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service(), target);
  }

  // string method = 3;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.SetMthdDstSvrIdRequest.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->method(), target);
  }

  // uint32 dst_svr_id = 4;
  if (this->dst_svr_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->dst_svr_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.SetMthdDstSvrIdRequest)
  return target;
}

size_t SetMthdDstSvrIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.SetMthdDstSvrIdRequest)
  size_t total_size = 0;

  // string service = 2;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // string method = 3;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());
  }

  // uint32 dst_svr_id = 4;
  if (this->dst_svr_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dst_svr_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetMthdDstSvrIdRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.SetMthdDstSvrIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetMthdDstSvrIdRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetMthdDstSvrIdRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.SetMthdDstSvrIdRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.SetMthdDstSvrIdRequest)
    MergeFrom(*source);
  }
}

void SetMthdDstSvrIdRequest::MergeFrom(const SetMthdDstSvrIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.SetMthdDstSvrIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
  if (from.dst_svr_id() != 0) {
    set_dst_svr_id(from.dst_svr_id());
  }
}

void SetMthdDstSvrIdRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.SetMthdDstSvrIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetMthdDstSvrIdRequest::CopyFrom(const SetMthdDstSvrIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.SetMthdDstSvrIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetMthdDstSvrIdRequest::IsInitialized() const {
  return true;
}

void SetMthdDstSvrIdRequest::Swap(SetMthdDstSvrIdRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetMthdDstSvrIdRequest::InternalSwap(SetMthdDstSvrIdRequest* other) {
  service_.Swap(&other->service_);
  method_.Swap(&other->method_);
  std::swap(session_id_, other->session_id_);
  std::swap(dst_svr_id_, other->dst_svr_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetMthdDstSvrIdRequest::GetMetadata() const {
  protobuf_rpc_5frouter_5fmodifier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5frouter_5fmodifier_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetMthdDstSvrIdRequest

// uint32 session_id = 1;
void SetMthdDstSvrIdRequest::clear_session_id() {
  session_id_ = 0u;
}
::google::protobuf::uint32 SetMthdDstSvrIdRequest::session_id() const {
  // @@protoc_insertion_point(field_get:svr.SetMthdDstSvrIdRequest.session_id)
  return session_id_;
}
void SetMthdDstSvrIdRequest::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:svr.SetMthdDstSvrIdRequest.session_id)
}

// string service = 2;
void SetMthdDstSvrIdRequest::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetMthdDstSvrIdRequest::service() const {
  // @@protoc_insertion_point(field_get:svr.SetMthdDstSvrIdRequest.service)
  return service_.GetNoArena();
}
void SetMthdDstSvrIdRequest::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.SetMthdDstSvrIdRequest.service)
}
#if LANG_CXX11
void SetMthdDstSvrIdRequest::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.SetMthdDstSvrIdRequest.service)
}
#endif
void SetMthdDstSvrIdRequest::set_service(const char* value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.SetMthdDstSvrIdRequest.service)
}
void SetMthdDstSvrIdRequest::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.SetMthdDstSvrIdRequest.service)
}
::std::string* SetMthdDstSvrIdRequest::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:svr.SetMthdDstSvrIdRequest.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetMthdDstSvrIdRequest::release_service() {
  // @@protoc_insertion_point(field_release:svr.SetMthdDstSvrIdRequest.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetMthdDstSvrIdRequest::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:svr.SetMthdDstSvrIdRequest.service)
}

// string method = 3;
void SetMthdDstSvrIdRequest::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetMthdDstSvrIdRequest::method() const {
  // @@protoc_insertion_point(field_get:svr.SetMthdDstSvrIdRequest.method)
  return method_.GetNoArena();
}
void SetMthdDstSvrIdRequest::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.SetMthdDstSvrIdRequest.method)
}
#if LANG_CXX11
void SetMthdDstSvrIdRequest::set_method(::std::string&& value) {
  
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.SetMthdDstSvrIdRequest.method)
}
#endif
void SetMthdDstSvrIdRequest::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.SetMthdDstSvrIdRequest.method)
}
void SetMthdDstSvrIdRequest::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.SetMthdDstSvrIdRequest.method)
}
::std::string* SetMthdDstSvrIdRequest::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:svr.SetMthdDstSvrIdRequest.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetMthdDstSvrIdRequest::release_method() {
  // @@protoc_insertion_point(field_release:svr.SetMthdDstSvrIdRequest.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetMthdDstSvrIdRequest::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:svr.SetMthdDstSvrIdRequest.method)
}

// uint32 dst_svr_id = 4;
void SetMthdDstSvrIdRequest::clear_dst_svr_id() {
  dst_svr_id_ = 0u;
}
::google::protobuf::uint32 SetMthdDstSvrIdRequest::dst_svr_id() const {
  // @@protoc_insertion_point(field_get:svr.SetMthdDstSvrIdRequest.dst_svr_id)
  return dst_svr_id_;
}
void SetMthdDstSvrIdRequest::set_dst_svr_id(::google::protobuf::uint32 value) {
  
  dst_svr_id_ = value;
  // @@protoc_insertion_point(field_set:svr.SetMthdDstSvrIdRequest.dst_svr_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetMthdDstSvrIdRequest::kSessionIdFieldNumber;
const int ResetMthdDstSvrIdRequest::kServiceFieldNumber;
const int ResetMthdDstSvrIdRequest::kMethodFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetMthdDstSvrIdRequest::ResetMthdDstSvrIdRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_5frouter_5fmodifier_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.ResetMthdDstSvrIdRequest)
}
ResetMthdDstSvrIdRequest::ResetMthdDstSvrIdRequest(const ResetMthdDstSvrIdRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.method().size() > 0) {
    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  session_id_ = from.session_id_;
  // @@protoc_insertion_point(copy_constructor:svr.ResetMthdDstSvrIdRequest)
}

void ResetMthdDstSvrIdRequest::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_ = 0u;
  _cached_size_ = 0;
}

ResetMthdDstSvrIdRequest::~ResetMthdDstSvrIdRequest() {
  // @@protoc_insertion_point(destructor:svr.ResetMthdDstSvrIdRequest)
  SharedDtor();
}

void ResetMthdDstSvrIdRequest::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResetMthdDstSvrIdRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetMthdDstSvrIdRequest::descriptor() {
  protobuf_rpc_5frouter_5fmodifier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5frouter_5fmodifier_2eproto::file_level_metadata[1].descriptor;
}

const ResetMthdDstSvrIdRequest& ResetMthdDstSvrIdRequest::default_instance() {
  protobuf_rpc_5frouter_5fmodifier_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResetMthdDstSvrIdRequest* ResetMthdDstSvrIdRequest::New(::google::protobuf::Arena* arena) const {
  ResetMthdDstSvrIdRequest* n = new ResetMthdDstSvrIdRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResetMthdDstSvrIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.ResetMthdDstSvrIdRequest)
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_ = 0u;
}

bool ResetMthdDstSvrIdRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.ResetMthdDstSvrIdRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 session_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), this->service().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.ResetMthdDstSvrIdRequest.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string method = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_method()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->method().data(), this->method().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.ResetMthdDstSvrIdRequest.method"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.ResetMthdDstSvrIdRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.ResetMthdDstSvrIdRequest)
  return false;
#undef DO_
}

void ResetMthdDstSvrIdRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.ResetMthdDstSvrIdRequest)
  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->session_id(), output);
  }

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.ResetMthdDstSvrIdRequest.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service(), output);
  }

  // string method = 3;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.ResetMthdDstSvrIdRequest.method");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->method(), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.ResetMthdDstSvrIdRequest)
}

::google::protobuf::uint8* ResetMthdDstSvrIdRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.ResetMthdDstSvrIdRequest)
  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->session_id(), target);
  }

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.ResetMthdDstSvrIdRequest.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service(), target);
  }

  // string method = 3;
  if (this->method().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->method().data(), this->method().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.ResetMthdDstSvrIdRequest.method");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->method(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.ResetMthdDstSvrIdRequest)
  return target;
}

size_t ResetMthdDstSvrIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.ResetMthdDstSvrIdRequest)
  size_t total_size = 0;

  // string service = 2;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // string method = 3;
  if (this->method().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->method());
  }

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetMthdDstSvrIdRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.ResetMthdDstSvrIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetMthdDstSvrIdRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetMthdDstSvrIdRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.ResetMthdDstSvrIdRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.ResetMthdDstSvrIdRequest)
    MergeFrom(*source);
  }
}

void ResetMthdDstSvrIdRequest::MergeFrom(const ResetMthdDstSvrIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.ResetMthdDstSvrIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.method().size() > 0) {

    method_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.method_);
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
}

void ResetMthdDstSvrIdRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.ResetMthdDstSvrIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetMthdDstSvrIdRequest::CopyFrom(const ResetMthdDstSvrIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.ResetMthdDstSvrIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetMthdDstSvrIdRequest::IsInitialized() const {
  return true;
}

void ResetMthdDstSvrIdRequest::Swap(ResetMthdDstSvrIdRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetMthdDstSvrIdRequest::InternalSwap(ResetMthdDstSvrIdRequest* other) {
  service_.Swap(&other->service_);
  method_.Swap(&other->method_);
  std::swap(session_id_, other->session_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResetMthdDstSvrIdRequest::GetMetadata() const {
  protobuf_rpc_5frouter_5fmodifier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5frouter_5fmodifier_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResetMthdDstSvrIdRequest

// uint32 session_id = 1;
void ResetMthdDstSvrIdRequest::clear_session_id() {
  session_id_ = 0u;
}
::google::protobuf::uint32 ResetMthdDstSvrIdRequest::session_id() const {
  // @@protoc_insertion_point(field_get:svr.ResetMthdDstSvrIdRequest.session_id)
  return session_id_;
}
void ResetMthdDstSvrIdRequest::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:svr.ResetMthdDstSvrIdRequest.session_id)
}

// string service = 2;
void ResetMthdDstSvrIdRequest::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResetMthdDstSvrIdRequest::service() const {
  // @@protoc_insertion_point(field_get:svr.ResetMthdDstSvrIdRequest.service)
  return service_.GetNoArena();
}
void ResetMthdDstSvrIdRequest::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.ResetMthdDstSvrIdRequest.service)
}
#if LANG_CXX11
void ResetMthdDstSvrIdRequest::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.ResetMthdDstSvrIdRequest.service)
}
#endif
void ResetMthdDstSvrIdRequest::set_service(const char* value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.ResetMthdDstSvrIdRequest.service)
}
void ResetMthdDstSvrIdRequest::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.ResetMthdDstSvrIdRequest.service)
}
::std::string* ResetMthdDstSvrIdRequest::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:svr.ResetMthdDstSvrIdRequest.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResetMthdDstSvrIdRequest::release_service() {
  // @@protoc_insertion_point(field_release:svr.ResetMthdDstSvrIdRequest.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResetMthdDstSvrIdRequest::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:svr.ResetMthdDstSvrIdRequest.service)
}

// string method = 3;
void ResetMthdDstSvrIdRequest::clear_method() {
  method_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResetMthdDstSvrIdRequest::method() const {
  // @@protoc_insertion_point(field_get:svr.ResetMthdDstSvrIdRequest.method)
  return method_.GetNoArena();
}
void ResetMthdDstSvrIdRequest::set_method(const ::std::string& value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.ResetMthdDstSvrIdRequest.method)
}
#if LANG_CXX11
void ResetMthdDstSvrIdRequest::set_method(::std::string&& value) {
  
  method_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.ResetMthdDstSvrIdRequest.method)
}
#endif
void ResetMthdDstSvrIdRequest::set_method(const char* value) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.ResetMthdDstSvrIdRequest.method)
}
void ResetMthdDstSvrIdRequest::set_method(const char* value, size_t size) {
  
  method_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.ResetMthdDstSvrIdRequest.method)
}
::std::string* ResetMthdDstSvrIdRequest::mutable_method() {
  
  // @@protoc_insertion_point(field_mutable:svr.ResetMthdDstSvrIdRequest.method)
  return method_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResetMthdDstSvrIdRequest::release_method() {
  // @@protoc_insertion_point(field_release:svr.ResetMthdDstSvrIdRequest.method)
  
  return method_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResetMthdDstSvrIdRequest::set_allocated_method(::std::string* method) {
  if (method != NULL) {
    
  } else {
    
  }
  method_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), method);
  // @@protoc_insertion_point(field_set_allocated:svr.ResetMthdDstSvrIdRequest.method)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SetSvcDstSvrIdRequest::kSessionIdFieldNumber;
const int SetSvcDstSvrIdRequest::kServiceFieldNumber;
const int SetSvcDstSvrIdRequest::kDstSvrIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SetSvcDstSvrIdRequest::SetSvcDstSvrIdRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_5frouter_5fmodifier_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.SetSvcDstSvrIdRequest)
}
SetSvcDstSvrIdRequest::SetSvcDstSvrIdRequest(const SetSvcDstSvrIdRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  ::memcpy(&session_id_, &from.session_id_,
    reinterpret_cast<char*>(&dst_svr_id_) -
    reinterpret_cast<char*>(&session_id_) + sizeof(dst_svr_id_));
  // @@protoc_insertion_point(copy_constructor:svr.SetSvcDstSvrIdRequest)
}

void SetSvcDstSvrIdRequest::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_id_, 0, reinterpret_cast<char*>(&dst_svr_id_) -
    reinterpret_cast<char*>(&session_id_) + sizeof(dst_svr_id_));
  _cached_size_ = 0;
}

SetSvcDstSvrIdRequest::~SetSvcDstSvrIdRequest() {
  // @@protoc_insertion_point(destructor:svr.SetSvcDstSvrIdRequest)
  SharedDtor();
}

void SetSvcDstSvrIdRequest::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SetSvcDstSvrIdRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SetSvcDstSvrIdRequest::descriptor() {
  protobuf_rpc_5frouter_5fmodifier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5frouter_5fmodifier_2eproto::file_level_metadata[2].descriptor;
}

const SetSvcDstSvrIdRequest& SetSvcDstSvrIdRequest::default_instance() {
  protobuf_rpc_5frouter_5fmodifier_2eproto::InitDefaults();
  return *internal_default_instance();
}

SetSvcDstSvrIdRequest* SetSvcDstSvrIdRequest::New(::google::protobuf::Arena* arena) const {
  SetSvcDstSvrIdRequest* n = new SetSvcDstSvrIdRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SetSvcDstSvrIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.SetSvcDstSvrIdRequest)
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&session_id_, 0, reinterpret_cast<char*>(&dst_svr_id_) -
    reinterpret_cast<char*>(&session_id_) + sizeof(dst_svr_id_));
}

bool SetSvcDstSvrIdRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.SetSvcDstSvrIdRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 session_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), this->service().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.SetSvcDstSvrIdRequest.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 dst_svr_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &dst_svr_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.SetSvcDstSvrIdRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.SetSvcDstSvrIdRequest)
  return false;
#undef DO_
}

void SetSvcDstSvrIdRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.SetSvcDstSvrIdRequest)
  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->session_id(), output);
  }

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.SetSvcDstSvrIdRequest.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service(), output);
  }

  // uint32 dst_svr_id = 3;
  if (this->dst_svr_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->dst_svr_id(), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.SetSvcDstSvrIdRequest)
}

::google::protobuf::uint8* SetSvcDstSvrIdRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.SetSvcDstSvrIdRequest)
  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->session_id(), target);
  }

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.SetSvcDstSvrIdRequest.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service(), target);
  }

  // uint32 dst_svr_id = 3;
  if (this->dst_svr_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->dst_svr_id(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.SetSvcDstSvrIdRequest)
  return target;
}

size_t SetSvcDstSvrIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.SetSvcDstSvrIdRequest)
  size_t total_size = 0;

  // string service = 2;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());
  }

  // uint32 dst_svr_id = 3;
  if (this->dst_svr_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->dst_svr_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SetSvcDstSvrIdRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.SetSvcDstSvrIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetSvcDstSvrIdRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SetSvcDstSvrIdRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.SetSvcDstSvrIdRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.SetSvcDstSvrIdRequest)
    MergeFrom(*source);
  }
}

void SetSvcDstSvrIdRequest::MergeFrom(const SetSvcDstSvrIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.SetSvcDstSvrIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
  if (from.dst_svr_id() != 0) {
    set_dst_svr_id(from.dst_svr_id());
  }
}

void SetSvcDstSvrIdRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.SetSvcDstSvrIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetSvcDstSvrIdRequest::CopyFrom(const SetSvcDstSvrIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.SetSvcDstSvrIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetSvcDstSvrIdRequest::IsInitialized() const {
  return true;
}

void SetSvcDstSvrIdRequest::Swap(SetSvcDstSvrIdRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SetSvcDstSvrIdRequest::InternalSwap(SetSvcDstSvrIdRequest* other) {
  service_.Swap(&other->service_);
  std::swap(session_id_, other->session_id_);
  std::swap(dst_svr_id_, other->dst_svr_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SetSvcDstSvrIdRequest::GetMetadata() const {
  protobuf_rpc_5frouter_5fmodifier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5frouter_5fmodifier_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SetSvcDstSvrIdRequest

// uint32 session_id = 1;
void SetSvcDstSvrIdRequest::clear_session_id() {
  session_id_ = 0u;
}
::google::protobuf::uint32 SetSvcDstSvrIdRequest::session_id() const {
  // @@protoc_insertion_point(field_get:svr.SetSvcDstSvrIdRequest.session_id)
  return session_id_;
}
void SetSvcDstSvrIdRequest::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:svr.SetSvcDstSvrIdRequest.session_id)
}

// string service = 2;
void SetSvcDstSvrIdRequest::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& SetSvcDstSvrIdRequest::service() const {
  // @@protoc_insertion_point(field_get:svr.SetSvcDstSvrIdRequest.service)
  return service_.GetNoArena();
}
void SetSvcDstSvrIdRequest::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.SetSvcDstSvrIdRequest.service)
}
#if LANG_CXX11
void SetSvcDstSvrIdRequest::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.SetSvcDstSvrIdRequest.service)
}
#endif
void SetSvcDstSvrIdRequest::set_service(const char* value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.SetSvcDstSvrIdRequest.service)
}
void SetSvcDstSvrIdRequest::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.SetSvcDstSvrIdRequest.service)
}
::std::string* SetSvcDstSvrIdRequest::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:svr.SetSvcDstSvrIdRequest.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SetSvcDstSvrIdRequest::release_service() {
  // @@protoc_insertion_point(field_release:svr.SetSvcDstSvrIdRequest.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SetSvcDstSvrIdRequest::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:svr.SetSvcDstSvrIdRequest.service)
}

// uint32 dst_svr_id = 3;
void SetSvcDstSvrIdRequest::clear_dst_svr_id() {
  dst_svr_id_ = 0u;
}
::google::protobuf::uint32 SetSvcDstSvrIdRequest::dst_svr_id() const {
  // @@protoc_insertion_point(field_get:svr.SetSvcDstSvrIdRequest.dst_svr_id)
  return dst_svr_id_;
}
void SetSvcDstSvrIdRequest::set_dst_svr_id(::google::protobuf::uint32 value) {
  
  dst_svr_id_ = value;
  // @@protoc_insertion_point(field_set:svr.SetSvcDstSvrIdRequest.dst_svr_id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResetSvcDstSvrIdRequest::kSessionIdFieldNumber;
const int ResetSvcDstSvrIdRequest::kServiceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResetSvcDstSvrIdRequest::ResetSvcDstSvrIdRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_rpc_5frouter_5fmodifier_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.ResetSvcDstSvrIdRequest)
}
ResetSvcDstSvrIdRequest::ResetSvcDstSvrIdRequest(const ResetSvcDstSvrIdRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.service().size() > 0) {
    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  session_id_ = from.session_id_;
  // @@protoc_insertion_point(copy_constructor:svr.ResetSvcDstSvrIdRequest)
}

void ResetSvcDstSvrIdRequest::SharedCtor() {
  service_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_ = 0u;
  _cached_size_ = 0;
}

ResetSvcDstSvrIdRequest::~ResetSvcDstSvrIdRequest() {
  // @@protoc_insertion_point(destructor:svr.ResetSvcDstSvrIdRequest)
  SharedDtor();
}

void ResetSvcDstSvrIdRequest::SharedDtor() {
  service_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ResetSvcDstSvrIdRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResetSvcDstSvrIdRequest::descriptor() {
  protobuf_rpc_5frouter_5fmodifier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5frouter_5fmodifier_2eproto::file_level_metadata[3].descriptor;
}

const ResetSvcDstSvrIdRequest& ResetSvcDstSvrIdRequest::default_instance() {
  protobuf_rpc_5frouter_5fmodifier_2eproto::InitDefaults();
  return *internal_default_instance();
}

ResetSvcDstSvrIdRequest* ResetSvcDstSvrIdRequest::New(::google::protobuf::Arena* arena) const {
  ResetSvcDstSvrIdRequest* n = new ResetSvcDstSvrIdRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResetSvcDstSvrIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.ResetSvcDstSvrIdRequest)
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  session_id_ = 0u;
}

bool ResetSvcDstSvrIdRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.ResetSvcDstSvrIdRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 session_id = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &session_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string service = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_service()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->service().data(), this->service().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.ResetSvcDstSvrIdRequest.service"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.ResetSvcDstSvrIdRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.ResetSvcDstSvrIdRequest)
  return false;
#undef DO_
}

void ResetSvcDstSvrIdRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.ResetSvcDstSvrIdRequest)
  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->session_id(), output);
  }

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.ResetSvcDstSvrIdRequest.service");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->service(), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.ResetSvcDstSvrIdRequest)
}

::google::protobuf::uint8* ResetSvcDstSvrIdRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.ResetSvcDstSvrIdRequest)
  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->session_id(), target);
  }

  // string service = 2;
  if (this->service().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->service().data(), this->service().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.ResetSvcDstSvrIdRequest.service");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->service(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.ResetSvcDstSvrIdRequest)
  return target;
}

size_t ResetSvcDstSvrIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.ResetSvcDstSvrIdRequest)
  size_t total_size = 0;

  // string service = 2;
  if (this->service().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->service());
  }

  // uint32 session_id = 1;
  if (this->session_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->session_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResetSvcDstSvrIdRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.ResetSvcDstSvrIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ResetSvcDstSvrIdRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ResetSvcDstSvrIdRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.ResetSvcDstSvrIdRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.ResetSvcDstSvrIdRequest)
    MergeFrom(*source);
  }
}

void ResetSvcDstSvrIdRequest::MergeFrom(const ResetSvcDstSvrIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.ResetSvcDstSvrIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.service().size() > 0) {

    service_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.service_);
  }
  if (from.session_id() != 0) {
    set_session_id(from.session_id());
  }
}

void ResetSvcDstSvrIdRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.ResetSvcDstSvrIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResetSvcDstSvrIdRequest::CopyFrom(const ResetSvcDstSvrIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.ResetSvcDstSvrIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResetSvcDstSvrIdRequest::IsInitialized() const {
  return true;
}

void ResetSvcDstSvrIdRequest::Swap(ResetSvcDstSvrIdRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResetSvcDstSvrIdRequest::InternalSwap(ResetSvcDstSvrIdRequest* other) {
  service_.Swap(&other->service_);
  std::swap(session_id_, other->session_id_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResetSvcDstSvrIdRequest::GetMetadata() const {
  protobuf_rpc_5frouter_5fmodifier_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_rpc_5frouter_5fmodifier_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResetSvcDstSvrIdRequest

// uint32 session_id = 1;
void ResetSvcDstSvrIdRequest::clear_session_id() {
  session_id_ = 0u;
}
::google::protobuf::uint32 ResetSvcDstSvrIdRequest::session_id() const {
  // @@protoc_insertion_point(field_get:svr.ResetSvcDstSvrIdRequest.session_id)
  return session_id_;
}
void ResetSvcDstSvrIdRequest::set_session_id(::google::protobuf::uint32 value) {
  
  session_id_ = value;
  // @@protoc_insertion_point(field_set:svr.ResetSvcDstSvrIdRequest.session_id)
}

// string service = 2;
void ResetSvcDstSvrIdRequest::clear_service() {
  service_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ResetSvcDstSvrIdRequest::service() const {
  // @@protoc_insertion_point(field_get:svr.ResetSvcDstSvrIdRequest.service)
  return service_.GetNoArena();
}
void ResetSvcDstSvrIdRequest::set_service(const ::std::string& value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.ResetSvcDstSvrIdRequest.service)
}
#if LANG_CXX11
void ResetSvcDstSvrIdRequest::set_service(::std::string&& value) {
  
  service_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.ResetSvcDstSvrIdRequest.service)
}
#endif
void ResetSvcDstSvrIdRequest::set_service(const char* value) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.ResetSvcDstSvrIdRequest.service)
}
void ResetSvcDstSvrIdRequest::set_service(const char* value, size_t size) {
  
  service_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.ResetSvcDstSvrIdRequest.service)
}
::std::string* ResetSvcDstSvrIdRequest::mutable_service() {
  
  // @@protoc_insertion_point(field_mutable:svr.ResetSvcDstSvrIdRequest.service)
  return service_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ResetSvcDstSvrIdRequest::release_service() {
  // @@protoc_insertion_point(field_release:svr.ResetSvcDstSvrIdRequest.service)
  
  return service_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ResetSvcDstSvrIdRequest::set_allocated_service(::std::string* service) {
  if (service != NULL) {
    
  } else {
    
  }
  service_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), service);
  // @@protoc_insertion_point(field_set_allocated:svr.ResetSvcDstSvrIdRequest.service)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace svr

// @@protoc_insertion_point(global_scope)
