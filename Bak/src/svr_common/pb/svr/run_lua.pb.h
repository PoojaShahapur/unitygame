// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: run_lua.proto

#ifndef PROTOBUF_run_5flua_2eproto__INCLUDED
#define PROTOBUF_run_5flua_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3002000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3002000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "server_empty_msg.pb.h"
// @@protoc_insertion_point(includes)
namespace svr {
class AllOpenids;
class AllOpenidsDefaultTypeInternal;
extern AllOpenidsDefaultTypeInternal _AllOpenids_default_instance_;
class AllUidStateMsg;
class AllUidStateMsgDefaultTypeInternal;
extern AllUidStateMsgDefaultTypeInternal _AllUidStateMsg_default_instance_;
class CanILoginResponse;
class CanILoginResponseDefaultTypeInternal;
extern CanILoginResponseDefaultTypeInternal _CanILoginResponse_default_instance_;
class EmptyMsg;
class EmptyMsgDefaultTypeInternal;
extern EmptyMsgDefaultTypeInternal _EmptyMsg_default_instance_;
class ExitRoomMsg;
class ExitRoomMsgDefaultTypeInternal;
extern ExitRoomMsgDefaultTypeInternal _ExitRoomMsg_default_instance_;
class LoginRequest;
class LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
class OneMemberData;
class OneMemberDataDefaultTypeInternal;
extern OneMemberDataDefaultTypeInternal _OneMemberData_default_instance_;
class RunLuaMfaRequest;
class RunLuaMfaRequestDefaultTypeInternal;
extern RunLuaMfaRequestDefaultTypeInternal _RunLuaMfaRequest_default_instance_;
class RunLuaMfaResponse;
class RunLuaMfaResponseDefaultTypeInternal;
extern RunLuaMfaResponseDefaultTypeInternal _RunLuaMfaResponse_default_instance_;
class RunLuaRequest;
class RunLuaRequestDefaultTypeInternal;
extern RunLuaRequestDefaultTypeInternal _RunLuaRequest_default_instance_;
class RunLuaResponse;
class RunLuaResponseDefaultTypeInternal;
extern RunLuaResponseDefaultTypeInternal _RunLuaResponse_default_instance_;
class TeamData;
class TeamDataDefaultTypeInternal;
extern TeamDataDefaultTypeInternal _TeamData_default_instance_;
class UidListMsg;
class UidListMsgDefaultTypeInternal;
extern UidListMsgDefaultTypeInternal _UidListMsg_default_instance_;
class UidStateMsg;
class UidStateMsgDefaultTypeInternal;
extern UidStateMsgDefaultTypeInternal _UidStateMsg_default_instance_;
}  // namespace svr

namespace svr {

namespace protobuf_run_5flua_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_run_5flua_2eproto

// ===================================================================

class RunLuaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.RunLuaRequest) */ {
 public:
  RunLuaRequest();
  virtual ~RunLuaRequest();

  RunLuaRequest(const RunLuaRequest& from);

  inline RunLuaRequest& operator=(const RunLuaRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunLuaRequest& default_instance();

  static inline const RunLuaRequest* internal_default_instance() {
    return reinterpret_cast<const RunLuaRequest*>(
               &_RunLuaRequest_default_instance_);
  }

  void Swap(RunLuaRequest* other);

  // implements Message ----------------------------------------------

  inline RunLuaRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RunLuaRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RunLuaRequest& from);
  void MergeFrom(const RunLuaRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RunLuaRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string codes = 1;
  void clear_codes();
  static const int kCodesFieldNumber = 1;
  const ::std::string& codes() const;
  void set_codes(const ::std::string& value);
  #if LANG_CXX11
  void set_codes(::std::string&& value);
  #endif
  void set_codes(const char* value);
  void set_codes(const char* value, size_t size);
  ::std::string* mutable_codes();
  ::std::string* release_codes();
  void set_allocated_codes(::std::string* codes);

  // @@protoc_insertion_point(class_scope:svr.RunLuaRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr codes_;
  mutable int _cached_size_;
  friend struct  protobuf_run_5flua_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RunLuaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.RunLuaResponse) */ {
 public:
  RunLuaResponse();
  virtual ~RunLuaResponse();

  RunLuaResponse(const RunLuaResponse& from);

  inline RunLuaResponse& operator=(const RunLuaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunLuaResponse& default_instance();

  static inline const RunLuaResponse* internal_default_instance() {
    return reinterpret_cast<const RunLuaResponse*>(
               &_RunLuaResponse_default_instance_);
  }

  void Swap(RunLuaResponse* other);

  // implements Message ----------------------------------------------

  inline RunLuaResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RunLuaResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RunLuaResponse& from);
  void MergeFrom(const RunLuaResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RunLuaResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string codes = 1;
  void clear_codes();
  static const int kCodesFieldNumber = 1;
  const ::std::string& codes() const;
  void set_codes(const ::std::string& value);
  #if LANG_CXX11
  void set_codes(::std::string&& value);
  #endif
  void set_codes(const char* value);
  void set_codes(const char* value, size_t size);
  ::std::string* mutable_codes();
  ::std::string* release_codes();
  void set_allocated_codes(::std::string* codes);

  // @@protoc_insertion_point(class_scope:svr.RunLuaResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr codes_;
  mutable int _cached_size_;
  friend struct  protobuf_run_5flua_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RunLuaMfaRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.RunLuaMfaRequest) */ {
 public:
  RunLuaMfaRequest();
  virtual ~RunLuaMfaRequest();

  RunLuaMfaRequest(const RunLuaMfaRequest& from);

  inline RunLuaMfaRequest& operator=(const RunLuaMfaRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunLuaMfaRequest& default_instance();

  static inline const RunLuaMfaRequest* internal_default_instance() {
    return reinterpret_cast<const RunLuaMfaRequest*>(
               &_RunLuaMfaRequest_default_instance_);
  }

  void Swap(RunLuaMfaRequest* other);

  // implements Message ----------------------------------------------

  inline RunLuaMfaRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  RunLuaMfaRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RunLuaMfaRequest& from);
  void MergeFrom(const RunLuaMfaRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RunLuaMfaRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string module_name = 1;
  void clear_module_name();
  static const int kModuleNameFieldNumber = 1;
  const ::std::string& module_name() const;
  void set_module_name(const ::std::string& value);
  #if LANG_CXX11
  void set_module_name(::std::string&& value);
  #endif
  void set_module_name(const char* value);
  void set_module_name(const char* value, size_t size);
  ::std::string* mutable_module_name();
  ::std::string* release_module_name();
  void set_allocated_module_name(::std::string* module_name);

  // string function_name = 2;
  void clear_function_name();
  static const int kFunctionNameFieldNumber = 2;
  const ::std::string& function_name() const;
  void set_function_name(const ::std::string& value);
  #if LANG_CXX11
  void set_function_name(::std::string&& value);
  #endif
  void set_function_name(const char* value);
  void set_function_name(const char* value, size_t size);
  ::std::string* mutable_function_name();
  ::std::string* release_function_name();
  void set_allocated_function_name(::std::string* function_name);

  // string arguments_dump = 3;
  void clear_arguments_dump();
  static const int kArgumentsDumpFieldNumber = 3;
  const ::std::string& arguments_dump() const;
  void set_arguments_dump(const ::std::string& value);
  #if LANG_CXX11
  void set_arguments_dump(::std::string&& value);
  #endif
  void set_arguments_dump(const char* value);
  void set_arguments_dump(const char* value, size_t size);
  ::std::string* mutable_arguments_dump();
  ::std::string* release_arguments_dump();
  void set_allocated_arguments_dump(::std::string* arguments_dump);

  // @@protoc_insertion_point(class_scope:svr.RunLuaMfaRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr module_name_;
  ::google::protobuf::internal::ArenaStringPtr function_name_;
  ::google::protobuf::internal::ArenaStringPtr arguments_dump_;
  mutable int _cached_size_;
  friend struct  protobuf_run_5flua_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class RunLuaMfaResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.RunLuaMfaResponse) */ {
 public:
  RunLuaMfaResponse();
  virtual ~RunLuaMfaResponse();

  RunLuaMfaResponse(const RunLuaMfaResponse& from);

  inline RunLuaMfaResponse& operator=(const RunLuaMfaResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RunLuaMfaResponse& default_instance();

  static inline const RunLuaMfaResponse* internal_default_instance() {
    return reinterpret_cast<const RunLuaMfaResponse*>(
               &_RunLuaMfaResponse_default_instance_);
  }

  void Swap(RunLuaMfaResponse* other);

  // implements Message ----------------------------------------------

  inline RunLuaMfaResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  RunLuaMfaResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RunLuaMfaResponse& from);
  void MergeFrom(const RunLuaMfaResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RunLuaMfaResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string returned_dump = 1;
  void clear_returned_dump();
  static const int kReturnedDumpFieldNumber = 1;
  const ::std::string& returned_dump() const;
  void set_returned_dump(const ::std::string& value);
  #if LANG_CXX11
  void set_returned_dump(::std::string&& value);
  #endif
  void set_returned_dump(const char* value);
  void set_returned_dump(const char* value, size_t size);
  ::std::string* mutable_returned_dump();
  ::std::string* release_returned_dump();
  void set_allocated_returned_dump(::std::string* returned_dump);

  // @@protoc_insertion_point(class_scope:svr.RunLuaMfaResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr returned_dump_;
  mutable int _cached_size_;
  friend struct  protobuf_run_5flua_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LoginRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.LoginRequest) */ {
 public:
  LoginRequest();
  virtual ~LoginRequest();

  LoginRequest(const LoginRequest& from);

  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LoginRequest& default_instance();

  static inline const LoginRequest* internal_default_instance() {
    return reinterpret_cast<const LoginRequest*>(
               &_LoginRequest_default_instance_);
  }

  void Swap(LoginRequest* other);

  // implements Message ----------------------------------------------

  inline LoginRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  LoginRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LoginRequest& from);
  void MergeFrom(const LoginRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LoginRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string openid = 2;
  void clear_openid();
  static const int kOpenidFieldNumber = 2;
  const ::std::string& openid() const;
  void set_openid(const ::std::string& value);
  #if LANG_CXX11
  void set_openid(::std::string&& value);
  #endif
  void set_openid(const char* value);
  void set_openid(const char* value, size_t size);
  ::std::string* mutable_openid();
  ::std::string* release_openid();
  void set_allocated_openid(::std::string* openid);

  // uint32 svrid = 1;
  void clear_svrid();
  static const int kSvridFieldNumber = 1;
  ::google::protobuf::uint32 svrid() const;
  void set_svrid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.LoginRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr openid_;
  ::google::protobuf::uint32 svrid_;
  mutable int _cached_size_;
  friend struct  protobuf_run_5flua_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CanILoginResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.CanILoginResponse) */ {
 public:
  CanILoginResponse();
  virtual ~CanILoginResponse();

  CanILoginResponse(const CanILoginResponse& from);

  inline CanILoginResponse& operator=(const CanILoginResponse& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CanILoginResponse& default_instance();

  static inline const CanILoginResponse* internal_default_instance() {
    return reinterpret_cast<const CanILoginResponse*>(
               &_CanILoginResponse_default_instance_);
  }

  void Swap(CanILoginResponse* other);

  // implements Message ----------------------------------------------

  inline CanILoginResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  CanILoginResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CanILoginResponse& from);
  void MergeFrom(const CanILoginResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CanILoginResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 ok = 1;
  void clear_ok();
  static const int kOkFieldNumber = 1;
  ::google::protobuf::uint32 ok() const;
  void set_ok(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.CanILoginResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 ok_;
  mutable int _cached_size_;
  friend struct  protobuf_run_5flua_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllOpenids : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.AllOpenids) */ {
 public:
  AllOpenids();
  virtual ~AllOpenids();

  AllOpenids(const AllOpenids& from);

  inline AllOpenids& operator=(const AllOpenids& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllOpenids& default_instance();

  static inline const AllOpenids* internal_default_instance() {
    return reinterpret_cast<const AllOpenids*>(
               &_AllOpenids_default_instance_);
  }

  void Swap(AllOpenids* other);

  // implements Message ----------------------------------------------

  inline AllOpenids* New() const PROTOBUF_FINAL { return New(NULL); }

  AllOpenids* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllOpenids& from);
  void MergeFrom(const AllOpenids& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllOpenids* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string openids = 2;
  int openids_size() const;
  void clear_openids();
  static const int kOpenidsFieldNumber = 2;
  const ::std::string& openids(int index) const;
  ::std::string* mutable_openids(int index);
  void set_openids(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_openids(int index, ::std::string&& value);
  #endif
  void set_openids(int index, const char* value);
  void set_openids(int index, const char* value, size_t size);
  ::std::string* add_openids();
  void add_openids(const ::std::string& value);
  #if LANG_CXX11
  void add_openids(::std::string&& value);
  #endif
  void add_openids(const char* value);
  void add_openids(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& openids() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_openids();

  // uint32 is_sync_complete = 1;
  void clear_is_sync_complete();
  static const int kIsSyncCompleteFieldNumber = 1;
  ::google::protobuf::uint32 is_sync_complete() const;
  void set_is_sync_complete(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.AllOpenids)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> openids_;
  ::google::protobuf::uint32 is_sync_complete_;
  mutable int _cached_size_;
  friend struct  protobuf_run_5flua_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class ExitRoomMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.ExitRoomMsg) */ {
 public:
  ExitRoomMsg();
  virtual ~ExitRoomMsg();

  ExitRoomMsg(const ExitRoomMsg& from);

  inline ExitRoomMsg& operator=(const ExitRoomMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExitRoomMsg& default_instance();

  static inline const ExitRoomMsg* internal_default_instance() {
    return reinterpret_cast<const ExitRoomMsg*>(
               &_ExitRoomMsg_default_instance_);
  }

  void Swap(ExitRoomMsg* other);

  // implements Message ----------------------------------------------

  inline ExitRoomMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  ExitRoomMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ExitRoomMsg& from);
  void MergeFrom(const ExitRoomMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ExitRoomMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string account = 1;
  void clear_account();
  static const int kAccountFieldNumber = 1;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // uint32 player_server_id = 2;
  void clear_player_server_id();
  static const int kPlayerServerIdFieldNumber = 2;
  ::google::protobuf::uint32 player_server_id() const;
  void set_player_server_id(::google::protobuf::uint32 value);

  // uint32 room_id = 3;
  void clear_room_id();
  static const int kRoomIdFieldNumber = 3;
  ::google::protobuf::uint32 room_id() const;
  void set_room_id(::google::protobuf::uint32 value);

  // uint32 uid = 4;
  void clear_uid();
  static const int kUidFieldNumber = 4;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.ExitRoomMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::uint32 player_server_id_;
  ::google::protobuf::uint32 room_id_;
  ::google::protobuf::uint32 uid_;
  mutable int _cached_size_;
  friend struct  protobuf_run_5flua_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UidListMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.UidListMsg) */ {
 public:
  UidListMsg();
  virtual ~UidListMsg();

  UidListMsg(const UidListMsg& from);

  inline UidListMsg& operator=(const UidListMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UidListMsg& default_instance();

  static inline const UidListMsg* internal_default_instance() {
    return reinterpret_cast<const UidListMsg*>(
               &_UidListMsg_default_instance_);
  }

  void Swap(UidListMsg* other);

  // implements Message ----------------------------------------------

  inline UidListMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  UidListMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UidListMsg& from);
  void MergeFrom(const UidListMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UidListMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint32 uids = 1;
  int uids_size() const;
  void clear_uids();
  static const int kUidsFieldNumber = 1;
  ::google::protobuf::uint32 uids(int index) const;
  void set_uids(int index, ::google::protobuf::uint32 value);
  void add_uids(::google::protobuf::uint32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      uids() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_uids();

  // @@protoc_insertion_point(class_scope:svr.UidListMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > uids_;
  mutable int _uids_cached_byte_size_;
  mutable int _cached_size_;
  friend struct  protobuf_run_5flua_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class UidStateMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.UidStateMsg) */ {
 public:
  UidStateMsg();
  virtual ~UidStateMsg();

  UidStateMsg(const UidStateMsg& from);

  inline UidStateMsg& operator=(const UidStateMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UidStateMsg& default_instance();

  static inline const UidStateMsg* internal_default_instance() {
    return reinterpret_cast<const UidStateMsg*>(
               &_UidStateMsg_default_instance_);
  }

  void Swap(UidStateMsg* other);

  // implements Message ----------------------------------------------

  inline UidStateMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  UidStateMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const UidStateMsg& from);
  void MergeFrom(const UidStateMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(UidStateMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 state = 2;
  void clear_state();
  static const int kStateFieldNumber = 2;
  ::google::protobuf::uint32 state() const;
  void set_state(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.UidStateMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 state_;
  mutable int _cached_size_;
  friend struct  protobuf_run_5flua_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class AllUidStateMsg : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.AllUidStateMsg) */ {
 public:
  AllUidStateMsg();
  virtual ~AllUidStateMsg();

  AllUidStateMsg(const AllUidStateMsg& from);

  inline AllUidStateMsg& operator=(const AllUidStateMsg& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllUidStateMsg& default_instance();

  static inline const AllUidStateMsg* internal_default_instance() {
    return reinterpret_cast<const AllUidStateMsg*>(
               &_AllUidStateMsg_default_instance_);
  }

  void Swap(AllUidStateMsg* other);

  // implements Message ----------------------------------------------

  inline AllUidStateMsg* New() const PROTOBUF_FINAL { return New(NULL); }

  AllUidStateMsg* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const AllUidStateMsg& from);
  void MergeFrom(const AllUidStateMsg& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(AllUidStateMsg* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .svr.UidStateMsg datas = 1;
  int datas_size() const;
  void clear_datas();
  static const int kDatasFieldNumber = 1;
  const ::svr::UidStateMsg& datas(int index) const;
  ::svr::UidStateMsg* mutable_datas(int index);
  ::svr::UidStateMsg* add_datas();
  ::google::protobuf::RepeatedPtrField< ::svr::UidStateMsg >*
      mutable_datas();
  const ::google::protobuf::RepeatedPtrField< ::svr::UidStateMsg >&
      datas() const;

  // @@protoc_insertion_point(class_scope:svr.AllUidStateMsg)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::svr::UidStateMsg > datas_;
  mutable int _cached_size_;
  friend struct  protobuf_run_5flua_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class OneMemberData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.OneMemberData) */ {
 public:
  OneMemberData();
  virtual ~OneMemberData();

  OneMemberData(const OneMemberData& from);

  inline OneMemberData& operator=(const OneMemberData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OneMemberData& default_instance();

  static inline const OneMemberData* internal_default_instance() {
    return reinterpret_cast<const OneMemberData*>(
               &_OneMemberData_default_instance_);
  }

  void Swap(OneMemberData* other);

  // implements Message ----------------------------------------------

  inline OneMemberData* New() const PROTOBUF_FINAL { return New(NULL); }

  OneMemberData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OneMemberData& from);
  void MergeFrom(const OneMemberData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OneMemberData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string account = 2;
  void clear_account();
  static const int kAccountFieldNumber = 2;
  const ::std::string& account() const;
  void set_account(const ::std::string& value);
  #if LANG_CXX11
  void set_account(::std::string&& value);
  #endif
  void set_account(const char* value);
  void set_account(const char* value, size_t size);
  ::std::string* mutable_account();
  ::std::string* release_account();
  void set_allocated_account(::std::string* account);

  // string nickname = 3;
  void clear_nickname();
  static const int kNicknameFieldNumber = 3;
  const ::std::string& nickname() const;
  void set_nickname(const ::std::string& value);
  #if LANG_CXX11
  void set_nickname(::std::string&& value);
  #endif
  void set_nickname(const char* value);
  void set_nickname(const char* value, size_t size);
  ::std::string* mutable_nickname();
  ::std::string* release_nickname();
  void set_allocated_nickname(::std::string* nickname);

  // uint32 uid = 1;
  void clear_uid();
  static const int kUidFieldNumber = 1;
  ::google::protobuf::uint32 uid() const;
  void set_uid(::google::protobuf::uint32 value);

  // uint32 bulletid = 4;
  void clear_bulletid();
  static const int kBulletidFieldNumber = 4;
  ::google::protobuf::uint32 bulletid() const;
  void set_bulletid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:svr.OneMemberData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr account_;
  ::google::protobuf::internal::ArenaStringPtr nickname_;
  ::google::protobuf::uint32 uid_;
  ::google::protobuf::uint32 bulletid_;
  mutable int _cached_size_;
  friend struct  protobuf_run_5flua_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class TeamData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:svr.TeamData) */ {
 public:
  TeamData();
  virtual ~TeamData();

  TeamData(const TeamData& from);

  inline TeamData& operator=(const TeamData& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TeamData& default_instance();

  static inline const TeamData* internal_default_instance() {
    return reinterpret_cast<const TeamData*>(
               &_TeamData_default_instance_);
  }

  void Swap(TeamData* other);

  // implements Message ----------------------------------------------

  inline TeamData* New() const PROTOBUF_FINAL { return New(NULL); }

  TeamData* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const TeamData& from);
  void MergeFrom(const TeamData& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output)
      const PROTOBUF_FINAL {
    return InternalSerializeWithCachedSizesToArray(
        ::google::protobuf::io::CodedOutputStream::IsDefaultSerializationDeterministic(), output);
  }
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(TeamData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .svr.OneMemberData members = 6;
  int members_size() const;
  void clear_members();
  static const int kMembersFieldNumber = 6;
  const ::svr::OneMemberData& members(int index) const;
  ::svr::OneMemberData* mutable_members(int index);
  ::svr::OneMemberData* add_members();
  ::google::protobuf::RepeatedPtrField< ::svr::OneMemberData >*
      mutable_members();
  const ::google::protobuf::RepeatedPtrField< ::svr::OneMemberData >&
      members() const;

  // uint32 teamid = 1;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint32 teamid() const;
  void set_teamid(::google::protobuf::uint32 value);

  // uint32 leaderid = 2;
  void clear_leaderid();
  static const int kLeaderidFieldNumber = 2;
  ::google::protobuf::uint32 leaderid() const;
  void set_leaderid(::google::protobuf::uint32 value);

  // uint32 total_num = 3;
  void clear_total_num();
  static const int kTotalNumFieldNumber = 3;
  ::google::protobuf::uint32 total_num() const;
  void set_total_num(::google::protobuf::uint32 value);

  // uint32 current_num = 4;
  void clear_current_num();
  static const int kCurrentNumFieldNumber = 4;
  ::google::protobuf::uint32 current_num() const;
  void set_current_num(::google::protobuf::uint32 value);

  // uint64 voice_token = 5;
  void clear_voice_token();
  static const int kVoiceTokenFieldNumber = 5;
  ::google::protobuf::uint64 voice_token() const;
  void set_voice_token(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:svr.TeamData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::svr::OneMemberData > members_;
  ::google::protobuf::uint32 teamid_;
  ::google::protobuf::uint32 leaderid_;
  ::google::protobuf::uint32 total_num_;
  ::google::protobuf::uint32 current_num_;
  ::google::protobuf::uint64 voice_token_;
  mutable int _cached_size_;
  friend struct  protobuf_run_5flua_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// RunLuaRequest

// string codes = 1;
inline void RunLuaRequest::clear_codes() {
  codes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunLuaRequest::codes() const {
  // @@protoc_insertion_point(field_get:svr.RunLuaRequest.codes)
  return codes_.GetNoArena();
}
inline void RunLuaRequest::set_codes(const ::std::string& value) {
  
  codes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.RunLuaRequest.codes)
}
#if LANG_CXX11
inline void RunLuaRequest::set_codes(::std::string&& value) {
  
  codes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.RunLuaRequest.codes)
}
#endif
inline void RunLuaRequest::set_codes(const char* value) {
  
  codes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.RunLuaRequest.codes)
}
inline void RunLuaRequest::set_codes(const char* value, size_t size) {
  
  codes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.RunLuaRequest.codes)
}
inline ::std::string* RunLuaRequest::mutable_codes() {
  
  // @@protoc_insertion_point(field_mutable:svr.RunLuaRequest.codes)
  return codes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunLuaRequest::release_codes() {
  // @@protoc_insertion_point(field_release:svr.RunLuaRequest.codes)
  
  return codes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunLuaRequest::set_allocated_codes(::std::string* codes) {
  if (codes != NULL) {
    
  } else {
    
  }
  codes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codes);
  // @@protoc_insertion_point(field_set_allocated:svr.RunLuaRequest.codes)
}

// -------------------------------------------------------------------

// RunLuaResponse

// string codes = 1;
inline void RunLuaResponse::clear_codes() {
  codes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunLuaResponse::codes() const {
  // @@protoc_insertion_point(field_get:svr.RunLuaResponse.codes)
  return codes_.GetNoArena();
}
inline void RunLuaResponse::set_codes(const ::std::string& value) {
  
  codes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.RunLuaResponse.codes)
}
#if LANG_CXX11
inline void RunLuaResponse::set_codes(::std::string&& value) {
  
  codes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.RunLuaResponse.codes)
}
#endif
inline void RunLuaResponse::set_codes(const char* value) {
  
  codes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.RunLuaResponse.codes)
}
inline void RunLuaResponse::set_codes(const char* value, size_t size) {
  
  codes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.RunLuaResponse.codes)
}
inline ::std::string* RunLuaResponse::mutable_codes() {
  
  // @@protoc_insertion_point(field_mutable:svr.RunLuaResponse.codes)
  return codes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunLuaResponse::release_codes() {
  // @@protoc_insertion_point(field_release:svr.RunLuaResponse.codes)
  
  return codes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunLuaResponse::set_allocated_codes(::std::string* codes) {
  if (codes != NULL) {
    
  } else {
    
  }
  codes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codes);
  // @@protoc_insertion_point(field_set_allocated:svr.RunLuaResponse.codes)
}

// -------------------------------------------------------------------

// RunLuaMfaRequest

// string module_name = 1;
inline void RunLuaMfaRequest::clear_module_name() {
  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunLuaMfaRequest::module_name() const {
  // @@protoc_insertion_point(field_get:svr.RunLuaMfaRequest.module_name)
  return module_name_.GetNoArena();
}
inline void RunLuaMfaRequest::set_module_name(const ::std::string& value) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.RunLuaMfaRequest.module_name)
}
#if LANG_CXX11
inline void RunLuaMfaRequest::set_module_name(::std::string&& value) {
  
  module_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.RunLuaMfaRequest.module_name)
}
#endif
inline void RunLuaMfaRequest::set_module_name(const char* value) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.RunLuaMfaRequest.module_name)
}
inline void RunLuaMfaRequest::set_module_name(const char* value, size_t size) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.RunLuaMfaRequest.module_name)
}
inline ::std::string* RunLuaMfaRequest::mutable_module_name() {
  
  // @@protoc_insertion_point(field_mutable:svr.RunLuaMfaRequest.module_name)
  return module_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunLuaMfaRequest::release_module_name() {
  // @@protoc_insertion_point(field_release:svr.RunLuaMfaRequest.module_name)
  
  return module_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunLuaMfaRequest::set_allocated_module_name(::std::string* module_name) {
  if (module_name != NULL) {
    
  } else {
    
  }
  module_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_name);
  // @@protoc_insertion_point(field_set_allocated:svr.RunLuaMfaRequest.module_name)
}

// string function_name = 2;
inline void RunLuaMfaRequest::clear_function_name() {
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunLuaMfaRequest::function_name() const {
  // @@protoc_insertion_point(field_get:svr.RunLuaMfaRequest.function_name)
  return function_name_.GetNoArena();
}
inline void RunLuaMfaRequest::set_function_name(const ::std::string& value) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.RunLuaMfaRequest.function_name)
}
#if LANG_CXX11
inline void RunLuaMfaRequest::set_function_name(::std::string&& value) {
  
  function_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.RunLuaMfaRequest.function_name)
}
#endif
inline void RunLuaMfaRequest::set_function_name(const char* value) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.RunLuaMfaRequest.function_name)
}
inline void RunLuaMfaRequest::set_function_name(const char* value, size_t size) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.RunLuaMfaRequest.function_name)
}
inline ::std::string* RunLuaMfaRequest::mutable_function_name() {
  
  // @@protoc_insertion_point(field_mutable:svr.RunLuaMfaRequest.function_name)
  return function_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunLuaMfaRequest::release_function_name() {
  // @@protoc_insertion_point(field_release:svr.RunLuaMfaRequest.function_name)
  
  return function_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunLuaMfaRequest::set_allocated_function_name(::std::string* function_name) {
  if (function_name != NULL) {
    
  } else {
    
  }
  function_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function_name);
  // @@protoc_insertion_point(field_set_allocated:svr.RunLuaMfaRequest.function_name)
}

// string arguments_dump = 3;
inline void RunLuaMfaRequest::clear_arguments_dump() {
  arguments_dump_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunLuaMfaRequest::arguments_dump() const {
  // @@protoc_insertion_point(field_get:svr.RunLuaMfaRequest.arguments_dump)
  return arguments_dump_.GetNoArena();
}
inline void RunLuaMfaRequest::set_arguments_dump(const ::std::string& value) {
  
  arguments_dump_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.RunLuaMfaRequest.arguments_dump)
}
#if LANG_CXX11
inline void RunLuaMfaRequest::set_arguments_dump(::std::string&& value) {
  
  arguments_dump_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.RunLuaMfaRequest.arguments_dump)
}
#endif
inline void RunLuaMfaRequest::set_arguments_dump(const char* value) {
  
  arguments_dump_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.RunLuaMfaRequest.arguments_dump)
}
inline void RunLuaMfaRequest::set_arguments_dump(const char* value, size_t size) {
  
  arguments_dump_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.RunLuaMfaRequest.arguments_dump)
}
inline ::std::string* RunLuaMfaRequest::mutable_arguments_dump() {
  
  // @@protoc_insertion_point(field_mutable:svr.RunLuaMfaRequest.arguments_dump)
  return arguments_dump_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunLuaMfaRequest::release_arguments_dump() {
  // @@protoc_insertion_point(field_release:svr.RunLuaMfaRequest.arguments_dump)
  
  return arguments_dump_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunLuaMfaRequest::set_allocated_arguments_dump(::std::string* arguments_dump) {
  if (arguments_dump != NULL) {
    
  } else {
    
  }
  arguments_dump_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arguments_dump);
  // @@protoc_insertion_point(field_set_allocated:svr.RunLuaMfaRequest.arguments_dump)
}

// -------------------------------------------------------------------

// RunLuaMfaResponse

// string returned_dump = 1;
inline void RunLuaMfaResponse::clear_returned_dump() {
  returned_dump_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& RunLuaMfaResponse::returned_dump() const {
  // @@protoc_insertion_point(field_get:svr.RunLuaMfaResponse.returned_dump)
  return returned_dump_.GetNoArena();
}
inline void RunLuaMfaResponse::set_returned_dump(const ::std::string& value) {
  
  returned_dump_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.RunLuaMfaResponse.returned_dump)
}
#if LANG_CXX11
inline void RunLuaMfaResponse::set_returned_dump(::std::string&& value) {
  
  returned_dump_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.RunLuaMfaResponse.returned_dump)
}
#endif
inline void RunLuaMfaResponse::set_returned_dump(const char* value) {
  
  returned_dump_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.RunLuaMfaResponse.returned_dump)
}
inline void RunLuaMfaResponse::set_returned_dump(const char* value, size_t size) {
  
  returned_dump_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.RunLuaMfaResponse.returned_dump)
}
inline ::std::string* RunLuaMfaResponse::mutable_returned_dump() {
  
  // @@protoc_insertion_point(field_mutable:svr.RunLuaMfaResponse.returned_dump)
  return returned_dump_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RunLuaMfaResponse::release_returned_dump() {
  // @@protoc_insertion_point(field_release:svr.RunLuaMfaResponse.returned_dump)
  
  return returned_dump_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RunLuaMfaResponse::set_allocated_returned_dump(::std::string* returned_dump) {
  if (returned_dump != NULL) {
    
  } else {
    
  }
  returned_dump_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), returned_dump);
  // @@protoc_insertion_point(field_set_allocated:svr.RunLuaMfaResponse.returned_dump)
}

// -------------------------------------------------------------------

// LoginRequest

// uint32 svrid = 1;
inline void LoginRequest::clear_svrid() {
  svrid_ = 0u;
}
inline ::google::protobuf::uint32 LoginRequest::svrid() const {
  // @@protoc_insertion_point(field_get:svr.LoginRequest.svrid)
  return svrid_;
}
inline void LoginRequest::set_svrid(::google::protobuf::uint32 value) {
  
  svrid_ = value;
  // @@protoc_insertion_point(field_set:svr.LoginRequest.svrid)
}

// string openid = 2;
inline void LoginRequest::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& LoginRequest::openid() const {
  // @@protoc_insertion_point(field_get:svr.LoginRequest.openid)
  return openid_.GetNoArena();
}
inline void LoginRequest::set_openid(const ::std::string& value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.LoginRequest.openid)
}
#if LANG_CXX11
inline void LoginRequest::set_openid(::std::string&& value) {
  
  openid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.LoginRequest.openid)
}
#endif
inline void LoginRequest::set_openid(const char* value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.LoginRequest.openid)
}
inline void LoginRequest::set_openid(const char* value, size_t size) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.LoginRequest.openid)
}
inline ::std::string* LoginRequest::mutable_openid() {
  
  // @@protoc_insertion_point(field_mutable:svr.LoginRequest.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LoginRequest::release_openid() {
  // @@protoc_insertion_point(field_release:svr.LoginRequest.openid)
  
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LoginRequest::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    
  } else {
    
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:svr.LoginRequest.openid)
}

// -------------------------------------------------------------------

// CanILoginResponse

// uint32 ok = 1;
inline void CanILoginResponse::clear_ok() {
  ok_ = 0u;
}
inline ::google::protobuf::uint32 CanILoginResponse::ok() const {
  // @@protoc_insertion_point(field_get:svr.CanILoginResponse.ok)
  return ok_;
}
inline void CanILoginResponse::set_ok(::google::protobuf::uint32 value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:svr.CanILoginResponse.ok)
}

// -------------------------------------------------------------------

// AllOpenids

// uint32 is_sync_complete = 1;
inline void AllOpenids::clear_is_sync_complete() {
  is_sync_complete_ = 0u;
}
inline ::google::protobuf::uint32 AllOpenids::is_sync_complete() const {
  // @@protoc_insertion_point(field_get:svr.AllOpenids.is_sync_complete)
  return is_sync_complete_;
}
inline void AllOpenids::set_is_sync_complete(::google::protobuf::uint32 value) {
  
  is_sync_complete_ = value;
  // @@protoc_insertion_point(field_set:svr.AllOpenids.is_sync_complete)
}

// repeated string openids = 2;
inline int AllOpenids::openids_size() const {
  return openids_.size();
}
inline void AllOpenids::clear_openids() {
  openids_.Clear();
}
inline const ::std::string& AllOpenids::openids(int index) const {
  // @@protoc_insertion_point(field_get:svr.AllOpenids.openids)
  return openids_.Get(index);
}
inline ::std::string* AllOpenids::mutable_openids(int index) {
  // @@protoc_insertion_point(field_mutable:svr.AllOpenids.openids)
  return openids_.Mutable(index);
}
inline void AllOpenids::set_openids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:svr.AllOpenids.openids)
  openids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void AllOpenids::set_openids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:svr.AllOpenids.openids)
  openids_.Mutable(index)->assign(std::move(value));
}
#endif
inline void AllOpenids::set_openids(int index, const char* value) {
  openids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:svr.AllOpenids.openids)
}
inline void AllOpenids::set_openids(int index, const char* value, size_t size) {
  openids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:svr.AllOpenids.openids)
}
inline ::std::string* AllOpenids::add_openids() {
  // @@protoc_insertion_point(field_add_mutable:svr.AllOpenids.openids)
  return openids_.Add();
}
inline void AllOpenids::add_openids(const ::std::string& value) {
  openids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:svr.AllOpenids.openids)
}
#if LANG_CXX11
inline void AllOpenids::add_openids(::std::string&& value) {
  openids_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:svr.AllOpenids.openids)
}
#endif
inline void AllOpenids::add_openids(const char* value) {
  openids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:svr.AllOpenids.openids)
}
inline void AllOpenids::add_openids(const char* value, size_t size) {
  openids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:svr.AllOpenids.openids)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AllOpenids::openids() const {
  // @@protoc_insertion_point(field_list:svr.AllOpenids.openids)
  return openids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AllOpenids::mutable_openids() {
  // @@protoc_insertion_point(field_mutable_list:svr.AllOpenids.openids)
  return &openids_;
}

// -------------------------------------------------------------------

// ExitRoomMsg

// string account = 1;
inline void ExitRoomMsg::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ExitRoomMsg::account() const {
  // @@protoc_insertion_point(field_get:svr.ExitRoomMsg.account)
  return account_.GetNoArena();
}
inline void ExitRoomMsg::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.ExitRoomMsg.account)
}
#if LANG_CXX11
inline void ExitRoomMsg::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.ExitRoomMsg.account)
}
#endif
inline void ExitRoomMsg::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.ExitRoomMsg.account)
}
inline void ExitRoomMsg::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.ExitRoomMsg.account)
}
inline ::std::string* ExitRoomMsg::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:svr.ExitRoomMsg.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExitRoomMsg::release_account() {
  // @@protoc_insertion_point(field_release:svr.ExitRoomMsg.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExitRoomMsg::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:svr.ExitRoomMsg.account)
}

// uint32 player_server_id = 2;
inline void ExitRoomMsg::clear_player_server_id() {
  player_server_id_ = 0u;
}
inline ::google::protobuf::uint32 ExitRoomMsg::player_server_id() const {
  // @@protoc_insertion_point(field_get:svr.ExitRoomMsg.player_server_id)
  return player_server_id_;
}
inline void ExitRoomMsg::set_player_server_id(::google::protobuf::uint32 value) {
  
  player_server_id_ = value;
  // @@protoc_insertion_point(field_set:svr.ExitRoomMsg.player_server_id)
}

// uint32 room_id = 3;
inline void ExitRoomMsg::clear_room_id() {
  room_id_ = 0u;
}
inline ::google::protobuf::uint32 ExitRoomMsg::room_id() const {
  // @@protoc_insertion_point(field_get:svr.ExitRoomMsg.room_id)
  return room_id_;
}
inline void ExitRoomMsg::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:svr.ExitRoomMsg.room_id)
}

// uint32 uid = 4;
inline void ExitRoomMsg::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 ExitRoomMsg::uid() const {
  // @@protoc_insertion_point(field_get:svr.ExitRoomMsg.uid)
  return uid_;
}
inline void ExitRoomMsg::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:svr.ExitRoomMsg.uid)
}

// -------------------------------------------------------------------

// UidListMsg

// repeated uint32 uids = 1;
inline int UidListMsg::uids_size() const {
  return uids_.size();
}
inline void UidListMsg::clear_uids() {
  uids_.Clear();
}
inline ::google::protobuf::uint32 UidListMsg::uids(int index) const {
  // @@protoc_insertion_point(field_get:svr.UidListMsg.uids)
  return uids_.Get(index);
}
inline void UidListMsg::set_uids(int index, ::google::protobuf::uint32 value) {
  uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:svr.UidListMsg.uids)
}
inline void UidListMsg::add_uids(::google::protobuf::uint32 value) {
  uids_.Add(value);
  // @@protoc_insertion_point(field_add:svr.UidListMsg.uids)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UidListMsg::uids() const {
  // @@protoc_insertion_point(field_list:svr.UidListMsg.uids)
  return uids_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UidListMsg::mutable_uids() {
  // @@protoc_insertion_point(field_mutable_list:svr.UidListMsg.uids)
  return &uids_;
}

// -------------------------------------------------------------------

// UidStateMsg

// uint32 uid = 1;
inline void UidStateMsg::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 UidStateMsg::uid() const {
  // @@protoc_insertion_point(field_get:svr.UidStateMsg.uid)
  return uid_;
}
inline void UidStateMsg::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:svr.UidStateMsg.uid)
}

// uint32 state = 2;
inline void UidStateMsg::clear_state() {
  state_ = 0u;
}
inline ::google::protobuf::uint32 UidStateMsg::state() const {
  // @@protoc_insertion_point(field_get:svr.UidStateMsg.state)
  return state_;
}
inline void UidStateMsg::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:svr.UidStateMsg.state)
}

// -------------------------------------------------------------------

// AllUidStateMsg

// repeated .svr.UidStateMsg datas = 1;
inline int AllUidStateMsg::datas_size() const {
  return datas_.size();
}
inline void AllUidStateMsg::clear_datas() {
  datas_.Clear();
}
inline const ::svr::UidStateMsg& AllUidStateMsg::datas(int index) const {
  // @@protoc_insertion_point(field_get:svr.AllUidStateMsg.datas)
  return datas_.Get(index);
}
inline ::svr::UidStateMsg* AllUidStateMsg::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:svr.AllUidStateMsg.datas)
  return datas_.Mutable(index);
}
inline ::svr::UidStateMsg* AllUidStateMsg::add_datas() {
  // @@protoc_insertion_point(field_add:svr.AllUidStateMsg.datas)
  return datas_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::svr::UidStateMsg >*
AllUidStateMsg::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:svr.AllUidStateMsg.datas)
  return &datas_;
}
inline const ::google::protobuf::RepeatedPtrField< ::svr::UidStateMsg >&
AllUidStateMsg::datas() const {
  // @@protoc_insertion_point(field_list:svr.AllUidStateMsg.datas)
  return datas_;
}

// -------------------------------------------------------------------

// OneMemberData

// uint32 uid = 1;
inline void OneMemberData::clear_uid() {
  uid_ = 0u;
}
inline ::google::protobuf::uint32 OneMemberData::uid() const {
  // @@protoc_insertion_point(field_get:svr.OneMemberData.uid)
  return uid_;
}
inline void OneMemberData::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:svr.OneMemberData.uid)
}

// string account = 2;
inline void OneMemberData::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OneMemberData::account() const {
  // @@protoc_insertion_point(field_get:svr.OneMemberData.account)
  return account_.GetNoArena();
}
inline void OneMemberData::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.OneMemberData.account)
}
#if LANG_CXX11
inline void OneMemberData::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.OneMemberData.account)
}
#endif
inline void OneMemberData::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.OneMemberData.account)
}
inline void OneMemberData::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.OneMemberData.account)
}
inline ::std::string* OneMemberData::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:svr.OneMemberData.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OneMemberData::release_account() {
  // @@protoc_insertion_point(field_release:svr.OneMemberData.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OneMemberData::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:svr.OneMemberData.account)
}

// string nickname = 3;
inline void OneMemberData::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OneMemberData::nickname() const {
  // @@protoc_insertion_point(field_get:svr.OneMemberData.nickname)
  return nickname_.GetNoArena();
}
inline void OneMemberData::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.OneMemberData.nickname)
}
#if LANG_CXX11
inline void OneMemberData::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.OneMemberData.nickname)
}
#endif
inline void OneMemberData::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.OneMemberData.nickname)
}
inline void OneMemberData::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.OneMemberData.nickname)
}
inline ::std::string* OneMemberData::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:svr.OneMemberData.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OneMemberData::release_nickname() {
  // @@protoc_insertion_point(field_release:svr.OneMemberData.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OneMemberData::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:svr.OneMemberData.nickname)
}

// uint32 bulletid = 4;
inline void OneMemberData::clear_bulletid() {
  bulletid_ = 0u;
}
inline ::google::protobuf::uint32 OneMemberData::bulletid() const {
  // @@protoc_insertion_point(field_get:svr.OneMemberData.bulletid)
  return bulletid_;
}
inline void OneMemberData::set_bulletid(::google::protobuf::uint32 value) {
  
  bulletid_ = value;
  // @@protoc_insertion_point(field_set:svr.OneMemberData.bulletid)
}

// -------------------------------------------------------------------

// TeamData

// uint32 teamid = 1;
inline void TeamData::clear_teamid() {
  teamid_ = 0u;
}
inline ::google::protobuf::uint32 TeamData::teamid() const {
  // @@protoc_insertion_point(field_get:svr.TeamData.teamid)
  return teamid_;
}
inline void TeamData::set_teamid(::google::protobuf::uint32 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:svr.TeamData.teamid)
}

// uint32 leaderid = 2;
inline void TeamData::clear_leaderid() {
  leaderid_ = 0u;
}
inline ::google::protobuf::uint32 TeamData::leaderid() const {
  // @@protoc_insertion_point(field_get:svr.TeamData.leaderid)
  return leaderid_;
}
inline void TeamData::set_leaderid(::google::protobuf::uint32 value) {
  
  leaderid_ = value;
  // @@protoc_insertion_point(field_set:svr.TeamData.leaderid)
}

// uint32 total_num = 3;
inline void TeamData::clear_total_num() {
  total_num_ = 0u;
}
inline ::google::protobuf::uint32 TeamData::total_num() const {
  // @@protoc_insertion_point(field_get:svr.TeamData.total_num)
  return total_num_;
}
inline void TeamData::set_total_num(::google::protobuf::uint32 value) {
  
  total_num_ = value;
  // @@protoc_insertion_point(field_set:svr.TeamData.total_num)
}

// uint32 current_num = 4;
inline void TeamData::clear_current_num() {
  current_num_ = 0u;
}
inline ::google::protobuf::uint32 TeamData::current_num() const {
  // @@protoc_insertion_point(field_get:svr.TeamData.current_num)
  return current_num_;
}
inline void TeamData::set_current_num(::google::protobuf::uint32 value) {
  
  current_num_ = value;
  // @@protoc_insertion_point(field_set:svr.TeamData.current_num)
}

// uint64 voice_token = 5;
inline void TeamData::clear_voice_token() {
  voice_token_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 TeamData::voice_token() const {
  // @@protoc_insertion_point(field_get:svr.TeamData.voice_token)
  return voice_token_;
}
inline void TeamData::set_voice_token(::google::protobuf::uint64 value) {
  
  voice_token_ = value;
  // @@protoc_insertion_point(field_set:svr.TeamData.voice_token)
}

// repeated .svr.OneMemberData members = 6;
inline int TeamData::members_size() const {
  return members_.size();
}
inline void TeamData::clear_members() {
  members_.Clear();
}
inline const ::svr::OneMemberData& TeamData::members(int index) const {
  // @@protoc_insertion_point(field_get:svr.TeamData.members)
  return members_.Get(index);
}
inline ::svr::OneMemberData* TeamData::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:svr.TeamData.members)
  return members_.Mutable(index);
}
inline ::svr::OneMemberData* TeamData::add_members() {
  // @@protoc_insertion_point(field_add:svr.TeamData.members)
  return members_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::svr::OneMemberData >*
TeamData::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:svr.TeamData.members)
  return &members_;
}
inline const ::google::protobuf::RepeatedPtrField< ::svr::OneMemberData >&
TeamData::members() const {
  // @@protoc_insertion_point(field_list:svr.TeamData.members)
  return members_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace svr

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_run_5flua_2eproto__INCLUDED
