// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: run_lua.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "run_lua.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace svr {
class RunLuaRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RunLuaRequest> {
} _RunLuaRequest_default_instance_;
class RunLuaResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RunLuaResponse> {
} _RunLuaResponse_default_instance_;
class RunLuaMfaRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RunLuaMfaRequest> {
} _RunLuaMfaRequest_default_instance_;
class RunLuaMfaResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RunLuaMfaResponse> {
} _RunLuaMfaResponse_default_instance_;
class LoginRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginRequest> {
} _LoginRequest_default_instance_;
class CanILoginResponseDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CanILoginResponse> {
} _CanILoginResponse_default_instance_;
class AllOpenidsDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AllOpenids> {
} _AllOpenids_default_instance_;
class ExitRoomMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ExitRoomMsg> {
} _ExitRoomMsg_default_instance_;
class UidListMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UidListMsg> {
} _UidListMsg_default_instance_;
class UidStateMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UidStateMsg> {
} _UidStateMsg_default_instance_;
class AllUidStateMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AllUidStateMsg> {
} _AllUidStateMsg_default_instance_;
class OneMemberDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<OneMemberData> {
} _OneMemberData_default_instance_;
class TeamDataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TeamData> {
} _TeamData_default_instance_;

namespace protobuf_run_5flua_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[13];

}  // namespace

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunLuaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunLuaRequest, codes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunLuaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunLuaResponse, codes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunLuaMfaRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunLuaMfaRequest, module_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunLuaMfaRequest, function_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunLuaMfaRequest, arguments_dump_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunLuaMfaResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RunLuaMfaResponse, returned_dump_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, svrid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, openid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanILoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CanILoginResponse, ok_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllOpenids, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllOpenids, is_sync_complete_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllOpenids, openids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitRoomMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitRoomMsg, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitRoomMsg, player_server_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitRoomMsg, room_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ExitRoomMsg, uid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UidListMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UidListMsg, uids_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UidStateMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UidStateMsg, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UidStateMsg, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllUidStateMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AllUidStateMsg, datas_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneMemberData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneMemberData, uid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneMemberData, account_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneMemberData, nickname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OneMemberData, bulletid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamData, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamData, leaderid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamData, total_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamData, current_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamData, voice_token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TeamData, members_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(RunLuaRequest)},
  { 5, -1, sizeof(RunLuaResponse)},
  { 10, -1, sizeof(RunLuaMfaRequest)},
  { 17, -1, sizeof(RunLuaMfaResponse)},
  { 22, -1, sizeof(LoginRequest)},
  { 28, -1, sizeof(CanILoginResponse)},
  { 33, -1, sizeof(AllOpenids)},
  { 39, -1, sizeof(ExitRoomMsg)},
  { 47, -1, sizeof(UidListMsg)},
  { 52, -1, sizeof(UidStateMsg)},
  { 58, -1, sizeof(AllUidStateMsg)},
  { 63, -1, sizeof(OneMemberData)},
  { 71, -1, sizeof(TeamData)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_RunLuaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RunLuaResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RunLuaMfaRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RunLuaMfaResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CanILoginResponse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllOpenids_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_ExitRoomMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UidListMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UidStateMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AllUidStateMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_OneMemberData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TeamData_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "run_lua.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

}  // namespace

void TableStruct::Shutdown() {
  _RunLuaRequest_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _RunLuaResponse_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _RunLuaMfaRequest_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _RunLuaMfaResponse_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _LoginRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _CanILoginResponse_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _AllOpenids_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _ExitRoomMsg_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _UidListMsg_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _UidStateMsg_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _AllUidStateMsg_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _OneMemberData_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _TeamData_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::svr::protobuf_server_5fempty_5fmsg_2eproto::InitDefaults();
  _RunLuaRequest_default_instance_.DefaultConstruct();
  _RunLuaResponse_default_instance_.DefaultConstruct();
  _RunLuaMfaRequest_default_instance_.DefaultConstruct();
  _RunLuaMfaResponse_default_instance_.DefaultConstruct();
  _LoginRequest_default_instance_.DefaultConstruct();
  _CanILoginResponse_default_instance_.DefaultConstruct();
  _AllOpenids_default_instance_.DefaultConstruct();
  _ExitRoomMsg_default_instance_.DefaultConstruct();
  _UidListMsg_default_instance_.DefaultConstruct();
  _UidStateMsg_default_instance_.DefaultConstruct();
  _AllUidStateMsg_default_instance_.DefaultConstruct();
  _OneMemberData_default_instance_.DefaultConstruct();
  _TeamData_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\rrun_lua.proto\022\003svr\032\026server_empty_msg.p"
      "roto\"\036\n\rRunLuaRequest\022\r\n\005codes\030\001 \001(\t\"\037\n\016"
      "RunLuaResponse\022\r\n\005codes\030\001 \001(\t\"V\n\020RunLuaM"
      "faRequest\022\023\n\013module_name\030\001 \001(\t\022\025\n\rfuncti"
      "on_name\030\002 \001(\t\022\026\n\016arguments_dump\030\003 \001(\t\"*\n"
      "\021RunLuaMfaResponse\022\025\n\rreturned_dump\030\001 \001("
      "\t\"-\n\014LoginRequest\022\r\n\005svrid\030\001 \001(\r\022\016\n\006open"
      "id\030\002 \001(\t\"\037\n\021CanILoginResponse\022\n\n\002ok\030\001 \001("
      "\r\"7\n\nAllOpenids\022\030\n\020is_sync_complete\030\001 \001("
      "\r\022\017\n\007openids\030\002 \003(\t\"V\n\013ExitRoomMsg\022\017\n\007acc"
      "ount\030\001 \001(\t\022\030\n\020player_server_id\030\002 \001(\r\022\017\n\007"
      "room_id\030\003 \001(\r\022\013\n\003uid\030\004 \001(\r\"\032\n\nUidListMsg"
      "\022\014\n\004uids\030\001 \003(\r\")\n\013UidStateMsg\022\013\n\003uid\030\001 \001"
      "(\r\022\r\n\005state\030\002 \001(\r\"1\n\016AllUidStateMsg\022\037\n\005d"
      "atas\030\001 \003(\0132\020.svr.UidStateMsg\"Q\n\rOneMembe"
      "rData\022\013\n\003uid\030\001 \001(\r\022\017\n\007account\030\002 \001(\t\022\020\n\010n"
      "ickname\030\003 \001(\t\022\020\n\010bulletid\030\004 \001(\r\"\216\001\n\010Team"
      "Data\022\016\n\006teamid\030\001 \001(\r\022\020\n\010leaderid\030\002 \001(\r\022\021"
      "\n\ttotal_num\030\003 \001(\r\022\023\n\013current_num\030\004 \001(\r\022\023"
      "\n\013voice_token\030\005 \001(\004\022#\n\007members\030\006 \003(\0132\022.s"
      "vr.OneMemberData2\326\001\n\006RunLua\022.\n\003Run\022\022.svr"
      ".RunLuaRequest\032\023.svr.RunLuaResponse\0227\n\006R"
      "unMfa\022\025.svr.RunLuaMfaRequest\032\026.svr.RunLu"
      "aMfaResponse\0226\n\tCanILogin\022\021.svr.LoginReq"
      "uest\032\026.svr.CanILoginResponse\022+\n\010ExitRoom"
      "\022\020.svr.ExitRoomMsg\032\r.svr.EmptyMsgb\006proto"
      "3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1041);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "run_lua.proto", &protobuf_RegisterTypes);
  ::svr::protobuf_server_5fempty_5fmsg_2eproto::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_run_5flua_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunLuaRequest::kCodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunLuaRequest::RunLuaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_run_5flua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.RunLuaRequest)
}
RunLuaRequest::RunLuaRequest(const RunLuaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  codes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.codes().size() > 0) {
    codes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codes_);
  }
  // @@protoc_insertion_point(copy_constructor:svr.RunLuaRequest)
}

void RunLuaRequest::SharedCtor() {
  codes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RunLuaRequest::~RunLuaRequest() {
  // @@protoc_insertion_point(destructor:svr.RunLuaRequest)
  SharedDtor();
}

void RunLuaRequest::SharedDtor() {
  codes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RunLuaRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunLuaRequest::descriptor() {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[0].descriptor;
}

const RunLuaRequest& RunLuaRequest::default_instance() {
  protobuf_run_5flua_2eproto::InitDefaults();
  return *internal_default_instance();
}

RunLuaRequest* RunLuaRequest::New(::google::protobuf::Arena* arena) const {
  RunLuaRequest* n = new RunLuaRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RunLuaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.RunLuaRequest)
  codes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RunLuaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.RunLuaRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string codes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_codes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->codes().data(), this->codes().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.RunLuaRequest.codes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.RunLuaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.RunLuaRequest)
  return false;
#undef DO_
}

void RunLuaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.RunLuaRequest)
  // string codes = 1;
  if (this->codes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codes().data(), this->codes().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.RunLuaRequest.codes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->codes(), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.RunLuaRequest)
}

::google::protobuf::uint8* RunLuaRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.RunLuaRequest)
  // string codes = 1;
  if (this->codes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codes().data(), this->codes().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.RunLuaRequest.codes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->codes(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.RunLuaRequest)
  return target;
}

size_t RunLuaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.RunLuaRequest)
  size_t total_size = 0;

  // string codes = 1;
  if (this->codes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->codes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunLuaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.RunLuaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RunLuaRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunLuaRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.RunLuaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.RunLuaRequest)
    MergeFrom(*source);
  }
}

void RunLuaRequest::MergeFrom(const RunLuaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.RunLuaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.codes().size() > 0) {

    codes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codes_);
  }
}

void RunLuaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.RunLuaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunLuaRequest::CopyFrom(const RunLuaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.RunLuaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunLuaRequest::IsInitialized() const {
  return true;
}

void RunLuaRequest::Swap(RunLuaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunLuaRequest::InternalSwap(RunLuaRequest* other) {
  codes_.Swap(&other->codes_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunLuaRequest::GetMetadata() const {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[0];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RunLuaRequest

// string codes = 1;
void RunLuaRequest::clear_codes() {
  codes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RunLuaRequest::codes() const {
  // @@protoc_insertion_point(field_get:svr.RunLuaRequest.codes)
  return codes_.GetNoArena();
}
void RunLuaRequest::set_codes(const ::std::string& value) {
  
  codes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.RunLuaRequest.codes)
}
#if LANG_CXX11
void RunLuaRequest::set_codes(::std::string&& value) {
  
  codes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.RunLuaRequest.codes)
}
#endif
void RunLuaRequest::set_codes(const char* value) {
  
  codes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.RunLuaRequest.codes)
}
void RunLuaRequest::set_codes(const char* value, size_t size) {
  
  codes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.RunLuaRequest.codes)
}
::std::string* RunLuaRequest::mutable_codes() {
  
  // @@protoc_insertion_point(field_mutable:svr.RunLuaRequest.codes)
  return codes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RunLuaRequest::release_codes() {
  // @@protoc_insertion_point(field_release:svr.RunLuaRequest.codes)
  
  return codes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RunLuaRequest::set_allocated_codes(::std::string* codes) {
  if (codes != NULL) {
    
  } else {
    
  }
  codes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codes);
  // @@protoc_insertion_point(field_set_allocated:svr.RunLuaRequest.codes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunLuaResponse::kCodesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunLuaResponse::RunLuaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_run_5flua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.RunLuaResponse)
}
RunLuaResponse::RunLuaResponse(const RunLuaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  codes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.codes().size() > 0) {
    codes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codes_);
  }
  // @@protoc_insertion_point(copy_constructor:svr.RunLuaResponse)
}

void RunLuaResponse::SharedCtor() {
  codes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RunLuaResponse::~RunLuaResponse() {
  // @@protoc_insertion_point(destructor:svr.RunLuaResponse)
  SharedDtor();
}

void RunLuaResponse::SharedDtor() {
  codes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RunLuaResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunLuaResponse::descriptor() {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[1].descriptor;
}

const RunLuaResponse& RunLuaResponse::default_instance() {
  protobuf_run_5flua_2eproto::InitDefaults();
  return *internal_default_instance();
}

RunLuaResponse* RunLuaResponse::New(::google::protobuf::Arena* arena) const {
  RunLuaResponse* n = new RunLuaResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RunLuaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.RunLuaResponse)
  codes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RunLuaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.RunLuaResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string codes = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_codes()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->codes().data(), this->codes().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.RunLuaResponse.codes"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.RunLuaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.RunLuaResponse)
  return false;
#undef DO_
}

void RunLuaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.RunLuaResponse)
  // string codes = 1;
  if (this->codes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codes().data(), this->codes().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.RunLuaResponse.codes");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->codes(), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.RunLuaResponse)
}

::google::protobuf::uint8* RunLuaResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.RunLuaResponse)
  // string codes = 1;
  if (this->codes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->codes().data(), this->codes().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.RunLuaResponse.codes");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->codes(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.RunLuaResponse)
  return target;
}

size_t RunLuaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.RunLuaResponse)
  size_t total_size = 0;

  // string codes = 1;
  if (this->codes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->codes());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunLuaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.RunLuaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RunLuaResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunLuaResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.RunLuaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.RunLuaResponse)
    MergeFrom(*source);
  }
}

void RunLuaResponse::MergeFrom(const RunLuaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.RunLuaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.codes().size() > 0) {

    codes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.codes_);
  }
}

void RunLuaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.RunLuaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunLuaResponse::CopyFrom(const RunLuaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.RunLuaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunLuaResponse::IsInitialized() const {
  return true;
}

void RunLuaResponse::Swap(RunLuaResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunLuaResponse::InternalSwap(RunLuaResponse* other) {
  codes_.Swap(&other->codes_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunLuaResponse::GetMetadata() const {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[1];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RunLuaResponse

// string codes = 1;
void RunLuaResponse::clear_codes() {
  codes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RunLuaResponse::codes() const {
  // @@protoc_insertion_point(field_get:svr.RunLuaResponse.codes)
  return codes_.GetNoArena();
}
void RunLuaResponse::set_codes(const ::std::string& value) {
  
  codes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.RunLuaResponse.codes)
}
#if LANG_CXX11
void RunLuaResponse::set_codes(::std::string&& value) {
  
  codes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.RunLuaResponse.codes)
}
#endif
void RunLuaResponse::set_codes(const char* value) {
  
  codes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.RunLuaResponse.codes)
}
void RunLuaResponse::set_codes(const char* value, size_t size) {
  
  codes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.RunLuaResponse.codes)
}
::std::string* RunLuaResponse::mutable_codes() {
  
  // @@protoc_insertion_point(field_mutable:svr.RunLuaResponse.codes)
  return codes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RunLuaResponse::release_codes() {
  // @@protoc_insertion_point(field_release:svr.RunLuaResponse.codes)
  
  return codes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RunLuaResponse::set_allocated_codes(::std::string* codes) {
  if (codes != NULL) {
    
  } else {
    
  }
  codes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), codes);
  // @@protoc_insertion_point(field_set_allocated:svr.RunLuaResponse.codes)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunLuaMfaRequest::kModuleNameFieldNumber;
const int RunLuaMfaRequest::kFunctionNameFieldNumber;
const int RunLuaMfaRequest::kArgumentsDumpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunLuaMfaRequest::RunLuaMfaRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_run_5flua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.RunLuaMfaRequest)
}
RunLuaMfaRequest::RunLuaMfaRequest(const RunLuaMfaRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.module_name().size() > 0) {
    module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
  }
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.function_name().size() > 0) {
    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
  arguments_dump_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.arguments_dump().size() > 0) {
    arguments_dump_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arguments_dump_);
  }
  // @@protoc_insertion_point(copy_constructor:svr.RunLuaMfaRequest)
}

void RunLuaMfaRequest::SharedCtor() {
  module_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arguments_dump_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RunLuaMfaRequest::~RunLuaMfaRequest() {
  // @@protoc_insertion_point(destructor:svr.RunLuaMfaRequest)
  SharedDtor();
}

void RunLuaMfaRequest::SharedDtor() {
  module_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arguments_dump_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RunLuaMfaRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunLuaMfaRequest::descriptor() {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[2].descriptor;
}

const RunLuaMfaRequest& RunLuaMfaRequest::default_instance() {
  protobuf_run_5flua_2eproto::InitDefaults();
  return *internal_default_instance();
}

RunLuaMfaRequest* RunLuaMfaRequest::New(::google::protobuf::Arena* arena) const {
  RunLuaMfaRequest* n = new RunLuaMfaRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RunLuaMfaRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.RunLuaMfaRequest)
  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  arguments_dump_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RunLuaMfaRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.RunLuaMfaRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string module_name = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_module_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->module_name().data(), this->module_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.RunLuaMfaRequest.module_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string function_name = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_function_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->function_name().data(), this->function_name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.RunLuaMfaRequest.function_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string arguments_dump = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_arguments_dump()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->arguments_dump().data(), this->arguments_dump().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.RunLuaMfaRequest.arguments_dump"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.RunLuaMfaRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.RunLuaMfaRequest)
  return false;
#undef DO_
}

void RunLuaMfaRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.RunLuaMfaRequest)
  // string module_name = 1;
  if (this->module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_name().data(), this->module_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.RunLuaMfaRequest.module_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->module_name(), output);
  }

  // string function_name = 2;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), this->function_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.RunLuaMfaRequest.function_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->function_name(), output);
  }

  // string arguments_dump = 3;
  if (this->arguments_dump().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arguments_dump().data(), this->arguments_dump().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.RunLuaMfaRequest.arguments_dump");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->arguments_dump(), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.RunLuaMfaRequest)
}

::google::protobuf::uint8* RunLuaMfaRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.RunLuaMfaRequest)
  // string module_name = 1;
  if (this->module_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->module_name().data(), this->module_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.RunLuaMfaRequest.module_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->module_name(), target);
  }

  // string function_name = 2;
  if (this->function_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->function_name().data(), this->function_name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.RunLuaMfaRequest.function_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->function_name(), target);
  }

  // string arguments_dump = 3;
  if (this->arguments_dump().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->arguments_dump().data(), this->arguments_dump().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.RunLuaMfaRequest.arguments_dump");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->arguments_dump(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.RunLuaMfaRequest)
  return target;
}

size_t RunLuaMfaRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.RunLuaMfaRequest)
  size_t total_size = 0;

  // string module_name = 1;
  if (this->module_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->module_name());
  }

  // string function_name = 2;
  if (this->function_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->function_name());
  }

  // string arguments_dump = 3;
  if (this->arguments_dump().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->arguments_dump());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunLuaMfaRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.RunLuaMfaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RunLuaMfaRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunLuaMfaRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.RunLuaMfaRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.RunLuaMfaRequest)
    MergeFrom(*source);
  }
}

void RunLuaMfaRequest::MergeFrom(const RunLuaMfaRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.RunLuaMfaRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.module_name().size() > 0) {

    module_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.module_name_);
  }
  if (from.function_name().size() > 0) {

    function_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.function_name_);
  }
  if (from.arguments_dump().size() > 0) {

    arguments_dump_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.arguments_dump_);
  }
}

void RunLuaMfaRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.RunLuaMfaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunLuaMfaRequest::CopyFrom(const RunLuaMfaRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.RunLuaMfaRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunLuaMfaRequest::IsInitialized() const {
  return true;
}

void RunLuaMfaRequest::Swap(RunLuaMfaRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunLuaMfaRequest::InternalSwap(RunLuaMfaRequest* other) {
  module_name_.Swap(&other->module_name_);
  function_name_.Swap(&other->function_name_);
  arguments_dump_.Swap(&other->arguments_dump_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunLuaMfaRequest::GetMetadata() const {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[2];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RunLuaMfaRequest

// string module_name = 1;
void RunLuaMfaRequest::clear_module_name() {
  module_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RunLuaMfaRequest::module_name() const {
  // @@protoc_insertion_point(field_get:svr.RunLuaMfaRequest.module_name)
  return module_name_.GetNoArena();
}
void RunLuaMfaRequest::set_module_name(const ::std::string& value) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.RunLuaMfaRequest.module_name)
}
#if LANG_CXX11
void RunLuaMfaRequest::set_module_name(::std::string&& value) {
  
  module_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.RunLuaMfaRequest.module_name)
}
#endif
void RunLuaMfaRequest::set_module_name(const char* value) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.RunLuaMfaRequest.module_name)
}
void RunLuaMfaRequest::set_module_name(const char* value, size_t size) {
  
  module_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.RunLuaMfaRequest.module_name)
}
::std::string* RunLuaMfaRequest::mutable_module_name() {
  
  // @@protoc_insertion_point(field_mutable:svr.RunLuaMfaRequest.module_name)
  return module_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RunLuaMfaRequest::release_module_name() {
  // @@protoc_insertion_point(field_release:svr.RunLuaMfaRequest.module_name)
  
  return module_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RunLuaMfaRequest::set_allocated_module_name(::std::string* module_name) {
  if (module_name != NULL) {
    
  } else {
    
  }
  module_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), module_name);
  // @@protoc_insertion_point(field_set_allocated:svr.RunLuaMfaRequest.module_name)
}

// string function_name = 2;
void RunLuaMfaRequest::clear_function_name() {
  function_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RunLuaMfaRequest::function_name() const {
  // @@protoc_insertion_point(field_get:svr.RunLuaMfaRequest.function_name)
  return function_name_.GetNoArena();
}
void RunLuaMfaRequest::set_function_name(const ::std::string& value) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.RunLuaMfaRequest.function_name)
}
#if LANG_CXX11
void RunLuaMfaRequest::set_function_name(::std::string&& value) {
  
  function_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.RunLuaMfaRequest.function_name)
}
#endif
void RunLuaMfaRequest::set_function_name(const char* value) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.RunLuaMfaRequest.function_name)
}
void RunLuaMfaRequest::set_function_name(const char* value, size_t size) {
  
  function_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.RunLuaMfaRequest.function_name)
}
::std::string* RunLuaMfaRequest::mutable_function_name() {
  
  // @@protoc_insertion_point(field_mutable:svr.RunLuaMfaRequest.function_name)
  return function_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RunLuaMfaRequest::release_function_name() {
  // @@protoc_insertion_point(field_release:svr.RunLuaMfaRequest.function_name)
  
  return function_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RunLuaMfaRequest::set_allocated_function_name(::std::string* function_name) {
  if (function_name != NULL) {
    
  } else {
    
  }
  function_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), function_name);
  // @@protoc_insertion_point(field_set_allocated:svr.RunLuaMfaRequest.function_name)
}

// string arguments_dump = 3;
void RunLuaMfaRequest::clear_arguments_dump() {
  arguments_dump_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RunLuaMfaRequest::arguments_dump() const {
  // @@protoc_insertion_point(field_get:svr.RunLuaMfaRequest.arguments_dump)
  return arguments_dump_.GetNoArena();
}
void RunLuaMfaRequest::set_arguments_dump(const ::std::string& value) {
  
  arguments_dump_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.RunLuaMfaRequest.arguments_dump)
}
#if LANG_CXX11
void RunLuaMfaRequest::set_arguments_dump(::std::string&& value) {
  
  arguments_dump_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.RunLuaMfaRequest.arguments_dump)
}
#endif
void RunLuaMfaRequest::set_arguments_dump(const char* value) {
  
  arguments_dump_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.RunLuaMfaRequest.arguments_dump)
}
void RunLuaMfaRequest::set_arguments_dump(const char* value, size_t size) {
  
  arguments_dump_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.RunLuaMfaRequest.arguments_dump)
}
::std::string* RunLuaMfaRequest::mutable_arguments_dump() {
  
  // @@protoc_insertion_point(field_mutable:svr.RunLuaMfaRequest.arguments_dump)
  return arguments_dump_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RunLuaMfaRequest::release_arguments_dump() {
  // @@protoc_insertion_point(field_release:svr.RunLuaMfaRequest.arguments_dump)
  
  return arguments_dump_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RunLuaMfaRequest::set_allocated_arguments_dump(::std::string* arguments_dump) {
  if (arguments_dump != NULL) {
    
  } else {
    
  }
  arguments_dump_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), arguments_dump);
  // @@protoc_insertion_point(field_set_allocated:svr.RunLuaMfaRequest.arguments_dump)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RunLuaMfaResponse::kReturnedDumpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RunLuaMfaResponse::RunLuaMfaResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_run_5flua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.RunLuaMfaResponse)
}
RunLuaMfaResponse::RunLuaMfaResponse(const RunLuaMfaResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  returned_dump_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.returned_dump().size() > 0) {
    returned_dump_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.returned_dump_);
  }
  // @@protoc_insertion_point(copy_constructor:svr.RunLuaMfaResponse)
}

void RunLuaMfaResponse::SharedCtor() {
  returned_dump_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

RunLuaMfaResponse::~RunLuaMfaResponse() {
  // @@protoc_insertion_point(destructor:svr.RunLuaMfaResponse)
  SharedDtor();
}

void RunLuaMfaResponse::SharedDtor() {
  returned_dump_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RunLuaMfaResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RunLuaMfaResponse::descriptor() {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[3].descriptor;
}

const RunLuaMfaResponse& RunLuaMfaResponse::default_instance() {
  protobuf_run_5flua_2eproto::InitDefaults();
  return *internal_default_instance();
}

RunLuaMfaResponse* RunLuaMfaResponse::New(::google::protobuf::Arena* arena) const {
  RunLuaMfaResponse* n = new RunLuaMfaResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RunLuaMfaResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.RunLuaMfaResponse)
  returned_dump_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool RunLuaMfaResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.RunLuaMfaResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string returned_dump = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_returned_dump()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->returned_dump().data(), this->returned_dump().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.RunLuaMfaResponse.returned_dump"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.RunLuaMfaResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.RunLuaMfaResponse)
  return false;
#undef DO_
}

void RunLuaMfaResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.RunLuaMfaResponse)
  // string returned_dump = 1;
  if (this->returned_dump().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->returned_dump().data(), this->returned_dump().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.RunLuaMfaResponse.returned_dump");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->returned_dump(), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.RunLuaMfaResponse)
}

::google::protobuf::uint8* RunLuaMfaResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.RunLuaMfaResponse)
  // string returned_dump = 1;
  if (this->returned_dump().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->returned_dump().data(), this->returned_dump().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.RunLuaMfaResponse.returned_dump");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->returned_dump(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.RunLuaMfaResponse)
  return target;
}

size_t RunLuaMfaResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.RunLuaMfaResponse)
  size_t total_size = 0;

  // string returned_dump = 1;
  if (this->returned_dump().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->returned_dump());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RunLuaMfaResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.RunLuaMfaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const RunLuaMfaResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RunLuaMfaResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.RunLuaMfaResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.RunLuaMfaResponse)
    MergeFrom(*source);
  }
}

void RunLuaMfaResponse::MergeFrom(const RunLuaMfaResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.RunLuaMfaResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.returned_dump().size() > 0) {

    returned_dump_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.returned_dump_);
  }
}

void RunLuaMfaResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.RunLuaMfaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RunLuaMfaResponse::CopyFrom(const RunLuaMfaResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.RunLuaMfaResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RunLuaMfaResponse::IsInitialized() const {
  return true;
}

void RunLuaMfaResponse::Swap(RunLuaMfaResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RunLuaMfaResponse::InternalSwap(RunLuaMfaResponse* other) {
  returned_dump_.Swap(&other->returned_dump_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RunLuaMfaResponse::GetMetadata() const {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[3];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RunLuaMfaResponse

// string returned_dump = 1;
void RunLuaMfaResponse::clear_returned_dump() {
  returned_dump_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& RunLuaMfaResponse::returned_dump() const {
  // @@protoc_insertion_point(field_get:svr.RunLuaMfaResponse.returned_dump)
  return returned_dump_.GetNoArena();
}
void RunLuaMfaResponse::set_returned_dump(const ::std::string& value) {
  
  returned_dump_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.RunLuaMfaResponse.returned_dump)
}
#if LANG_CXX11
void RunLuaMfaResponse::set_returned_dump(::std::string&& value) {
  
  returned_dump_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.RunLuaMfaResponse.returned_dump)
}
#endif
void RunLuaMfaResponse::set_returned_dump(const char* value) {
  
  returned_dump_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.RunLuaMfaResponse.returned_dump)
}
void RunLuaMfaResponse::set_returned_dump(const char* value, size_t size) {
  
  returned_dump_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.RunLuaMfaResponse.returned_dump)
}
::std::string* RunLuaMfaResponse::mutable_returned_dump() {
  
  // @@protoc_insertion_point(field_mutable:svr.RunLuaMfaResponse.returned_dump)
  return returned_dump_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RunLuaMfaResponse::release_returned_dump() {
  // @@protoc_insertion_point(field_release:svr.RunLuaMfaResponse.returned_dump)
  
  return returned_dump_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RunLuaMfaResponse::set_allocated_returned_dump(::std::string* returned_dump) {
  if (returned_dump != NULL) {
    
  } else {
    
  }
  returned_dump_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), returned_dump);
  // @@protoc_insertion_point(field_set_allocated:svr.RunLuaMfaResponse.returned_dump)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kSvridFieldNumber;
const int LoginRequest::kOpenidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_run_5flua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.openid().size() > 0) {
    openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openid_);
  }
  svrid_ = from.svrid_;
  // @@protoc_insertion_point(copy_constructor:svr.LoginRequest)
}

void LoginRequest::SharedCtor() {
  openid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  svrid_ = 0u;
  _cached_size_ = 0;
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:svr.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  openid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[4].descriptor;
}

const LoginRequest& LoginRequest::default_instance() {
  protobuf_run_5flua_2eproto::InitDefaults();
  return *internal_default_instance();
}

LoginRequest* LoginRequest::New(::google::protobuf::Arena* arena) const {
  LoginRequest* n = new LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.LoginRequest)
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  svrid_ = 0u;
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 svrid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &svrid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string openid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_openid()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->openid().data(), this->openid().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.LoginRequest.openid"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.LoginRequest)
  // uint32 svrid = 1;
  if (this->svrid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->svrid(), output);
  }

  // string openid = 2;
  if (this->openid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->openid().data(), this->openid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.LoginRequest.openid");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->openid(), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.LoginRequest)
  // uint32 svrid = 1;
  if (this->svrid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->svrid(), target);
  }

  // string openid = 2;
  if (this->openid().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->openid().data(), this->openid().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.LoginRequest.openid");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->openid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.LoginRequest)
  return target;
}

size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.LoginRequest)
  size_t total_size = 0;

  // string openid = 2;
  if (this->openid().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->openid());
  }

  // uint32 svrid = 1;
  if (this->svrid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->svrid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.openid().size() > 0) {

    openid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.openid_);
  }
  if (from.svrid() != 0) {
    set_svrid(from.svrid());
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  openid_.Swap(&other->openid_);
  std::swap(svrid_, other->svrid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[4];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequest

// uint32 svrid = 1;
void LoginRequest::clear_svrid() {
  svrid_ = 0u;
}
::google::protobuf::uint32 LoginRequest::svrid() const {
  // @@protoc_insertion_point(field_get:svr.LoginRequest.svrid)
  return svrid_;
}
void LoginRequest::set_svrid(::google::protobuf::uint32 value) {
  
  svrid_ = value;
  // @@protoc_insertion_point(field_set:svr.LoginRequest.svrid)
}

// string openid = 2;
void LoginRequest::clear_openid() {
  openid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& LoginRequest::openid() const {
  // @@protoc_insertion_point(field_get:svr.LoginRequest.openid)
  return openid_.GetNoArena();
}
void LoginRequest::set_openid(const ::std::string& value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.LoginRequest.openid)
}
#if LANG_CXX11
void LoginRequest::set_openid(::std::string&& value) {
  
  openid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.LoginRequest.openid)
}
#endif
void LoginRequest::set_openid(const char* value) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.LoginRequest.openid)
}
void LoginRequest::set_openid(const char* value, size_t size) {
  
  openid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.LoginRequest.openid)
}
::std::string* LoginRequest::mutable_openid() {
  
  // @@protoc_insertion_point(field_mutable:svr.LoginRequest.openid)
  return openid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRequest::release_openid() {
  // @@protoc_insertion_point(field_release:svr.LoginRequest.openid)
  
  return openid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_allocated_openid(::std::string* openid) {
  if (openid != NULL) {
    
  } else {
    
  }
  openid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), openid);
  // @@protoc_insertion_point(field_set_allocated:svr.LoginRequest.openid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CanILoginResponse::kOkFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CanILoginResponse::CanILoginResponse()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_run_5flua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.CanILoginResponse)
}
CanILoginResponse::CanILoginResponse(const CanILoginResponse& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ok_ = from.ok_;
  // @@protoc_insertion_point(copy_constructor:svr.CanILoginResponse)
}

void CanILoginResponse::SharedCtor() {
  ok_ = 0u;
  _cached_size_ = 0;
}

CanILoginResponse::~CanILoginResponse() {
  // @@protoc_insertion_point(destructor:svr.CanILoginResponse)
  SharedDtor();
}

void CanILoginResponse::SharedDtor() {
}

void CanILoginResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CanILoginResponse::descriptor() {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[5].descriptor;
}

const CanILoginResponse& CanILoginResponse::default_instance() {
  protobuf_run_5flua_2eproto::InitDefaults();
  return *internal_default_instance();
}

CanILoginResponse* CanILoginResponse::New(::google::protobuf::Arena* arena) const {
  CanILoginResponse* n = new CanILoginResponse;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CanILoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.CanILoginResponse)
  ok_ = 0u;
}

bool CanILoginResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.CanILoginResponse)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 ok = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.CanILoginResponse)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.CanILoginResponse)
  return false;
#undef DO_
}

void CanILoginResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.CanILoginResponse)
  // uint32 ok = 1;
  if (this->ok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ok(), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.CanILoginResponse)
}

::google::protobuf::uint8* CanILoginResponse::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.CanILoginResponse)
  // uint32 ok = 1;
  if (this->ok() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ok(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.CanILoginResponse)
  return target;
}

size_t CanILoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.CanILoginResponse)
  size_t total_size = 0;

  // uint32 ok = 1;
  if (this->ok() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->ok());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CanILoginResponse::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.CanILoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CanILoginResponse* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CanILoginResponse>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.CanILoginResponse)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.CanILoginResponse)
    MergeFrom(*source);
  }
}

void CanILoginResponse::MergeFrom(const CanILoginResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.CanILoginResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.ok() != 0) {
    set_ok(from.ok());
  }
}

void CanILoginResponse::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.CanILoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CanILoginResponse::CopyFrom(const CanILoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.CanILoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CanILoginResponse::IsInitialized() const {
  return true;
}

void CanILoginResponse::Swap(CanILoginResponse* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CanILoginResponse::InternalSwap(CanILoginResponse* other) {
  std::swap(ok_, other->ok_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CanILoginResponse::GetMetadata() const {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[5];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CanILoginResponse

// uint32 ok = 1;
void CanILoginResponse::clear_ok() {
  ok_ = 0u;
}
::google::protobuf::uint32 CanILoginResponse::ok() const {
  // @@protoc_insertion_point(field_get:svr.CanILoginResponse.ok)
  return ok_;
}
void CanILoginResponse::set_ok(::google::protobuf::uint32 value) {
  
  ok_ = value;
  // @@protoc_insertion_point(field_set:svr.CanILoginResponse.ok)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllOpenids::kIsSyncCompleteFieldNumber;
const int AllOpenids::kOpenidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllOpenids::AllOpenids()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_run_5flua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.AllOpenids)
}
AllOpenids::AllOpenids(const AllOpenids& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      openids_(from.openids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  is_sync_complete_ = from.is_sync_complete_;
  // @@protoc_insertion_point(copy_constructor:svr.AllOpenids)
}

void AllOpenids::SharedCtor() {
  is_sync_complete_ = 0u;
  _cached_size_ = 0;
}

AllOpenids::~AllOpenids() {
  // @@protoc_insertion_point(destructor:svr.AllOpenids)
  SharedDtor();
}

void AllOpenids::SharedDtor() {
}

void AllOpenids::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllOpenids::descriptor() {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[6].descriptor;
}

const AllOpenids& AllOpenids::default_instance() {
  protobuf_run_5flua_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllOpenids* AllOpenids::New(::google::protobuf::Arena* arena) const {
  AllOpenids* n = new AllOpenids;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllOpenids::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.AllOpenids)
  openids_.Clear();
  is_sync_complete_ = 0u;
}

bool AllOpenids::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.AllOpenids)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 is_sync_complete = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &is_sync_complete_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string openids = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_openids()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->openids(this->openids_size() - 1).data(),
            this->openids(this->openids_size() - 1).length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.AllOpenids.openids"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.AllOpenids)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.AllOpenids)
  return false;
#undef DO_
}

void AllOpenids::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.AllOpenids)
  // uint32 is_sync_complete = 1;
  if (this->is_sync_complete() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->is_sync_complete(), output);
  }

  // repeated string openids = 2;
  for (int i = 0, n = this->openids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->openids(i).data(), this->openids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.AllOpenids.openids");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->openids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.AllOpenids)
}

::google::protobuf::uint8* AllOpenids::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.AllOpenids)
  // uint32 is_sync_complete = 1;
  if (this->is_sync_complete() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->is_sync_complete(), target);
  }

  // repeated string openids = 2;
  for (int i = 0, n = this->openids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->openids(i).data(), this->openids(i).length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.AllOpenids.openids");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->openids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.AllOpenids)
  return target;
}

size_t AllOpenids::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.AllOpenids)
  size_t total_size = 0;

  // repeated string openids = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->openids_size());
  for (int i = 0, n = this->openids_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->openids(i));
  }

  // uint32 is_sync_complete = 1;
  if (this->is_sync_complete() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->is_sync_complete());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllOpenids::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.AllOpenids)
  GOOGLE_DCHECK_NE(&from, this);
  const AllOpenids* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllOpenids>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.AllOpenids)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.AllOpenids)
    MergeFrom(*source);
  }
}

void AllOpenids::MergeFrom(const AllOpenids& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.AllOpenids)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  openids_.MergeFrom(from.openids_);
  if (from.is_sync_complete() != 0) {
    set_is_sync_complete(from.is_sync_complete());
  }
}

void AllOpenids::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.AllOpenids)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllOpenids::CopyFrom(const AllOpenids& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.AllOpenids)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllOpenids::IsInitialized() const {
  return true;
}

void AllOpenids::Swap(AllOpenids* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllOpenids::InternalSwap(AllOpenids* other) {
  openids_.UnsafeArenaSwap(&other->openids_);
  std::swap(is_sync_complete_, other->is_sync_complete_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllOpenids::GetMetadata() const {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[6];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllOpenids

// uint32 is_sync_complete = 1;
void AllOpenids::clear_is_sync_complete() {
  is_sync_complete_ = 0u;
}
::google::protobuf::uint32 AllOpenids::is_sync_complete() const {
  // @@protoc_insertion_point(field_get:svr.AllOpenids.is_sync_complete)
  return is_sync_complete_;
}
void AllOpenids::set_is_sync_complete(::google::protobuf::uint32 value) {
  
  is_sync_complete_ = value;
  // @@protoc_insertion_point(field_set:svr.AllOpenids.is_sync_complete)
}

// repeated string openids = 2;
int AllOpenids::openids_size() const {
  return openids_.size();
}
void AllOpenids::clear_openids() {
  openids_.Clear();
}
const ::std::string& AllOpenids::openids(int index) const {
  // @@protoc_insertion_point(field_get:svr.AllOpenids.openids)
  return openids_.Get(index);
}
::std::string* AllOpenids::mutable_openids(int index) {
  // @@protoc_insertion_point(field_mutable:svr.AllOpenids.openids)
  return openids_.Mutable(index);
}
void AllOpenids::set_openids(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:svr.AllOpenids.openids)
  openids_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void AllOpenids::set_openids(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:svr.AllOpenids.openids)
  openids_.Mutable(index)->assign(std::move(value));
}
#endif
void AllOpenids::set_openids(int index, const char* value) {
  openids_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:svr.AllOpenids.openids)
}
void AllOpenids::set_openids(int index, const char* value, size_t size) {
  openids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:svr.AllOpenids.openids)
}
::std::string* AllOpenids::add_openids() {
  // @@protoc_insertion_point(field_add_mutable:svr.AllOpenids.openids)
  return openids_.Add();
}
void AllOpenids::add_openids(const ::std::string& value) {
  openids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:svr.AllOpenids.openids)
}
#if LANG_CXX11
void AllOpenids::add_openids(::std::string&& value) {
  openids_.Add()->assign(std::move(value));
  // @@protoc_insertion_point(field_add:svr.AllOpenids.openids)
}
#endif
void AllOpenids::add_openids(const char* value) {
  openids_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:svr.AllOpenids.openids)
}
void AllOpenids::add_openids(const char* value, size_t size) {
  openids_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:svr.AllOpenids.openids)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>&
AllOpenids::openids() const {
  // @@protoc_insertion_point(field_list:svr.AllOpenids.openids)
  return openids_;
}
::google::protobuf::RepeatedPtrField< ::std::string>*
AllOpenids::mutable_openids() {
  // @@protoc_insertion_point(field_mutable_list:svr.AllOpenids.openids)
  return &openids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ExitRoomMsg::kAccountFieldNumber;
const int ExitRoomMsg::kPlayerServerIdFieldNumber;
const int ExitRoomMsg::kRoomIdFieldNumber;
const int ExitRoomMsg::kUidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ExitRoomMsg::ExitRoomMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_run_5flua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.ExitRoomMsg)
}
ExitRoomMsg::ExitRoomMsg(const ExitRoomMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  ::memcpy(&player_server_id_, &from.player_server_id_,
    reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&player_server_id_) + sizeof(uid_));
  // @@protoc_insertion_point(copy_constructor:svr.ExitRoomMsg)
}

void ExitRoomMsg::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_server_id_, 0, reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&player_server_id_) + sizeof(uid_));
  _cached_size_ = 0;
}

ExitRoomMsg::~ExitRoomMsg() {
  // @@protoc_insertion_point(destructor:svr.ExitRoomMsg)
  SharedDtor();
}

void ExitRoomMsg::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ExitRoomMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ExitRoomMsg::descriptor() {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[7].descriptor;
}

const ExitRoomMsg& ExitRoomMsg::default_instance() {
  protobuf_run_5flua_2eproto::InitDefaults();
  return *internal_default_instance();
}

ExitRoomMsg* ExitRoomMsg::New(::google::protobuf::Arena* arena) const {
  ExitRoomMsg* n = new ExitRoomMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ExitRoomMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.ExitRoomMsg)
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&player_server_id_, 0, reinterpret_cast<char*>(&uid_) -
    reinterpret_cast<char*>(&player_server_id_) + sizeof(uid_));
}

bool ExitRoomMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.ExitRoomMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string account = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.ExitRoomMsg.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 player_server_id = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &player_server_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 room_id = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &room_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 uid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.ExitRoomMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.ExitRoomMsg)
  return false;
#undef DO_
}

void ExitRoomMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.ExitRoomMsg)
  // string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.ExitRoomMsg.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->account(), output);
  }

  // uint32 player_server_id = 2;
  if (this->player_server_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->player_server_id(), output);
  }

  // uint32 room_id = 3;
  if (this->room_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->room_id(), output);
  }

  // uint32 uid = 4;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->uid(), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.ExitRoomMsg)
}

::google::protobuf::uint8* ExitRoomMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.ExitRoomMsg)
  // string account = 1;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.ExitRoomMsg.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->account(), target);
  }

  // uint32 player_server_id = 2;
  if (this->player_server_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->player_server_id(), target);
  }

  // uint32 room_id = 3;
  if (this->room_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->room_id(), target);
  }

  // uint32 uid = 4;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->uid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.ExitRoomMsg)
  return target;
}

size_t ExitRoomMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.ExitRoomMsg)
  size_t total_size = 0;

  // string account = 1;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // uint32 player_server_id = 2;
  if (this->player_server_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->player_server_id());
  }

  // uint32 room_id = 3;
  if (this->room_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->room_id());
  }

  // uint32 uid = 4;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ExitRoomMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.ExitRoomMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const ExitRoomMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ExitRoomMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.ExitRoomMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.ExitRoomMsg)
    MergeFrom(*source);
  }
}

void ExitRoomMsg::MergeFrom(const ExitRoomMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.ExitRoomMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.player_server_id() != 0) {
    set_player_server_id(from.player_server_id());
  }
  if (from.room_id() != 0) {
    set_room_id(from.room_id());
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
}

void ExitRoomMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.ExitRoomMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExitRoomMsg::CopyFrom(const ExitRoomMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.ExitRoomMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExitRoomMsg::IsInitialized() const {
  return true;
}

void ExitRoomMsg::Swap(ExitRoomMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ExitRoomMsg::InternalSwap(ExitRoomMsg* other) {
  account_.Swap(&other->account_);
  std::swap(player_server_id_, other->player_server_id_);
  std::swap(room_id_, other->room_id_);
  std::swap(uid_, other->uid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ExitRoomMsg::GetMetadata() const {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[7];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ExitRoomMsg

// string account = 1;
void ExitRoomMsg::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ExitRoomMsg::account() const {
  // @@protoc_insertion_point(field_get:svr.ExitRoomMsg.account)
  return account_.GetNoArena();
}
void ExitRoomMsg::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.ExitRoomMsg.account)
}
#if LANG_CXX11
void ExitRoomMsg::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.ExitRoomMsg.account)
}
#endif
void ExitRoomMsg::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.ExitRoomMsg.account)
}
void ExitRoomMsg::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.ExitRoomMsg.account)
}
::std::string* ExitRoomMsg::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:svr.ExitRoomMsg.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ExitRoomMsg::release_account() {
  // @@protoc_insertion_point(field_release:svr.ExitRoomMsg.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ExitRoomMsg::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:svr.ExitRoomMsg.account)
}

// uint32 player_server_id = 2;
void ExitRoomMsg::clear_player_server_id() {
  player_server_id_ = 0u;
}
::google::protobuf::uint32 ExitRoomMsg::player_server_id() const {
  // @@protoc_insertion_point(field_get:svr.ExitRoomMsg.player_server_id)
  return player_server_id_;
}
void ExitRoomMsg::set_player_server_id(::google::protobuf::uint32 value) {
  
  player_server_id_ = value;
  // @@protoc_insertion_point(field_set:svr.ExitRoomMsg.player_server_id)
}

// uint32 room_id = 3;
void ExitRoomMsg::clear_room_id() {
  room_id_ = 0u;
}
::google::protobuf::uint32 ExitRoomMsg::room_id() const {
  // @@protoc_insertion_point(field_get:svr.ExitRoomMsg.room_id)
  return room_id_;
}
void ExitRoomMsg::set_room_id(::google::protobuf::uint32 value) {
  
  room_id_ = value;
  // @@protoc_insertion_point(field_set:svr.ExitRoomMsg.room_id)
}

// uint32 uid = 4;
void ExitRoomMsg::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 ExitRoomMsg::uid() const {
  // @@protoc_insertion_point(field_get:svr.ExitRoomMsg.uid)
  return uid_;
}
void ExitRoomMsg::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:svr.ExitRoomMsg.uid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UidListMsg::kUidsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UidListMsg::UidListMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_run_5flua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.UidListMsg)
}
UidListMsg::UidListMsg(const UidListMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      uids_(from.uids_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:svr.UidListMsg)
}

void UidListMsg::SharedCtor() {
  _cached_size_ = 0;
}

UidListMsg::~UidListMsg() {
  // @@protoc_insertion_point(destructor:svr.UidListMsg)
  SharedDtor();
}

void UidListMsg::SharedDtor() {
}

void UidListMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UidListMsg::descriptor() {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[8].descriptor;
}

const UidListMsg& UidListMsg::default_instance() {
  protobuf_run_5flua_2eproto::InitDefaults();
  return *internal_default_instance();
}

UidListMsg* UidListMsg::New(::google::protobuf::Arena* arena) const {
  UidListMsg* n = new UidListMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UidListMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.UidListMsg)
  uids_.Clear();
}

bool UidListMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.UidListMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated uint32 uids = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_uids())));
        } else if (static_cast<::google::protobuf::uint8>(tag) ==
                   static_cast<::google::protobuf::uint8>(8u)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 10u, input, this->mutable_uids())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.UidListMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.UidListMsg)
  return false;
#undef DO_
}

void UidListMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.UidListMsg)
  // repeated uint32 uids = 1;
  if (this->uids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_uids_cached_byte_size_);
  }
  for (int i = 0, n = this->uids_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->uids(i), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.UidListMsg)
}

::google::protobuf::uint8* UidListMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.UidListMsg)
  // repeated uint32 uids = 1;
  if (this->uids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _uids_cached_byte_size_, target);
  }
  for (int i = 0, n = this->uids_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->uids(i), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.UidListMsg)
  return target;
}

size_t UidListMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.UidListMsg)
  size_t total_size = 0;

  // repeated uint32 uids = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->uids_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uids_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UidListMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.UidListMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const UidListMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UidListMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.UidListMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.UidListMsg)
    MergeFrom(*source);
  }
}

void UidListMsg::MergeFrom(const UidListMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.UidListMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  uids_.MergeFrom(from.uids_);
}

void UidListMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.UidListMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UidListMsg::CopyFrom(const UidListMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.UidListMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UidListMsg::IsInitialized() const {
  return true;
}

void UidListMsg::Swap(UidListMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UidListMsg::InternalSwap(UidListMsg* other) {
  uids_.UnsafeArenaSwap(&other->uids_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UidListMsg::GetMetadata() const {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[8];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UidListMsg

// repeated uint32 uids = 1;
int UidListMsg::uids_size() const {
  return uids_.size();
}
void UidListMsg::clear_uids() {
  uids_.Clear();
}
::google::protobuf::uint32 UidListMsg::uids(int index) const {
  // @@protoc_insertion_point(field_get:svr.UidListMsg.uids)
  return uids_.Get(index);
}
void UidListMsg::set_uids(int index, ::google::protobuf::uint32 value) {
  uids_.Set(index, value);
  // @@protoc_insertion_point(field_set:svr.UidListMsg.uids)
}
void UidListMsg::add_uids(::google::protobuf::uint32 value) {
  uids_.Add(value);
  // @@protoc_insertion_point(field_add:svr.UidListMsg.uids)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UidListMsg::uids() const {
  // @@protoc_insertion_point(field_list:svr.UidListMsg.uids)
  return uids_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UidListMsg::mutable_uids() {
  // @@protoc_insertion_point(field_mutable_list:svr.UidListMsg.uids)
  return &uids_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UidStateMsg::kUidFieldNumber;
const int UidStateMsg::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UidStateMsg::UidStateMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_run_5flua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.UidStateMsg)
}
UidStateMsg::UidStateMsg(const UidStateMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&uid_, &from.uid_,
    reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&uid_) + sizeof(state_));
  // @@protoc_insertion_point(copy_constructor:svr.UidStateMsg)
}

void UidStateMsg::SharedCtor() {
  ::memset(&uid_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&uid_) + sizeof(state_));
  _cached_size_ = 0;
}

UidStateMsg::~UidStateMsg() {
  // @@protoc_insertion_point(destructor:svr.UidStateMsg)
  SharedDtor();
}

void UidStateMsg::SharedDtor() {
}

void UidStateMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UidStateMsg::descriptor() {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[9].descriptor;
}

const UidStateMsg& UidStateMsg::default_instance() {
  protobuf_run_5flua_2eproto::InitDefaults();
  return *internal_default_instance();
}

UidStateMsg* UidStateMsg::New(::google::protobuf::Arena* arena) const {
  UidStateMsg* n = new UidStateMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UidStateMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.UidStateMsg)
  ::memset(&uid_, 0, reinterpret_cast<char*>(&state_) -
    reinterpret_cast<char*>(&uid_) + sizeof(state_));
}

bool UidStateMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.UidStateMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 state = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &state_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.UidStateMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.UidStateMsg)
  return false;
#undef DO_
}

void UidStateMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.UidStateMsg)
  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->state(), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.UidStateMsg)
}

::google::protobuf::uint8* UidStateMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.UidStateMsg)
  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->state(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.UidStateMsg)
  return target;
}

size_t UidStateMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.UidStateMsg)
  size_t total_size = 0;

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 state = 2;
  if (this->state() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UidStateMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.UidStateMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const UidStateMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UidStateMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.UidStateMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.UidStateMsg)
    MergeFrom(*source);
  }
}

void UidStateMsg::MergeFrom(const UidStateMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.UidStateMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.state() != 0) {
    set_state(from.state());
  }
}

void UidStateMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.UidStateMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UidStateMsg::CopyFrom(const UidStateMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.UidStateMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UidStateMsg::IsInitialized() const {
  return true;
}

void UidStateMsg::Swap(UidStateMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UidStateMsg::InternalSwap(UidStateMsg* other) {
  std::swap(uid_, other->uid_);
  std::swap(state_, other->state_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UidStateMsg::GetMetadata() const {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[9];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UidStateMsg

// uint32 uid = 1;
void UidStateMsg::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 UidStateMsg::uid() const {
  // @@protoc_insertion_point(field_get:svr.UidStateMsg.uid)
  return uid_;
}
void UidStateMsg::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:svr.UidStateMsg.uid)
}

// uint32 state = 2;
void UidStateMsg::clear_state() {
  state_ = 0u;
}
::google::protobuf::uint32 UidStateMsg::state() const {
  // @@protoc_insertion_point(field_get:svr.UidStateMsg.state)
  return state_;
}
void UidStateMsg::set_state(::google::protobuf::uint32 value) {
  
  state_ = value;
  // @@protoc_insertion_point(field_set:svr.UidStateMsg.state)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AllUidStateMsg::kDatasFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AllUidStateMsg::AllUidStateMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_run_5flua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.AllUidStateMsg)
}
AllUidStateMsg::AllUidStateMsg(const AllUidStateMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      datas_(from.datas_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:svr.AllUidStateMsg)
}

void AllUidStateMsg::SharedCtor() {
  _cached_size_ = 0;
}

AllUidStateMsg::~AllUidStateMsg() {
  // @@protoc_insertion_point(destructor:svr.AllUidStateMsg)
  SharedDtor();
}

void AllUidStateMsg::SharedDtor() {
}

void AllUidStateMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AllUidStateMsg::descriptor() {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[10].descriptor;
}

const AllUidStateMsg& AllUidStateMsg::default_instance() {
  protobuf_run_5flua_2eproto::InitDefaults();
  return *internal_default_instance();
}

AllUidStateMsg* AllUidStateMsg::New(::google::protobuf::Arena* arena) const {
  AllUidStateMsg* n = new AllUidStateMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AllUidStateMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.AllUidStateMsg)
  datas_.Clear();
}

bool AllUidStateMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.AllUidStateMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .svr.UidStateMsg datas = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(10u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_datas()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.AllUidStateMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.AllUidStateMsg)
  return false;
#undef DO_
}

void AllUidStateMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.AllUidStateMsg)
  // repeated .svr.UidStateMsg datas = 1;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->datas(i), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.AllUidStateMsg)
}

::google::protobuf::uint8* AllUidStateMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.AllUidStateMsg)
  // repeated .svr.UidStateMsg datas = 1;
  for (unsigned int i = 0, n = this->datas_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->datas(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.AllUidStateMsg)
  return target;
}

size_t AllUidStateMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.AllUidStateMsg)
  size_t total_size = 0;

  // repeated .svr.UidStateMsg datas = 1;
  {
    unsigned int count = this->datas_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->datas(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AllUidStateMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.AllUidStateMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const AllUidStateMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AllUidStateMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.AllUidStateMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.AllUidStateMsg)
    MergeFrom(*source);
  }
}

void AllUidStateMsg::MergeFrom(const AllUidStateMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.AllUidStateMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datas_.MergeFrom(from.datas_);
}

void AllUidStateMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.AllUidStateMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AllUidStateMsg::CopyFrom(const AllUidStateMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.AllUidStateMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AllUidStateMsg::IsInitialized() const {
  return true;
}

void AllUidStateMsg::Swap(AllUidStateMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AllUidStateMsg::InternalSwap(AllUidStateMsg* other) {
  datas_.UnsafeArenaSwap(&other->datas_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AllUidStateMsg::GetMetadata() const {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[10];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AllUidStateMsg

// repeated .svr.UidStateMsg datas = 1;
int AllUidStateMsg::datas_size() const {
  return datas_.size();
}
void AllUidStateMsg::clear_datas() {
  datas_.Clear();
}
const ::svr::UidStateMsg& AllUidStateMsg::datas(int index) const {
  // @@protoc_insertion_point(field_get:svr.AllUidStateMsg.datas)
  return datas_.Get(index);
}
::svr::UidStateMsg* AllUidStateMsg::mutable_datas(int index) {
  // @@protoc_insertion_point(field_mutable:svr.AllUidStateMsg.datas)
  return datas_.Mutable(index);
}
::svr::UidStateMsg* AllUidStateMsg::add_datas() {
  // @@protoc_insertion_point(field_add:svr.AllUidStateMsg.datas)
  return datas_.Add();
}
::google::protobuf::RepeatedPtrField< ::svr::UidStateMsg >*
AllUidStateMsg::mutable_datas() {
  // @@protoc_insertion_point(field_mutable_list:svr.AllUidStateMsg.datas)
  return &datas_;
}
const ::google::protobuf::RepeatedPtrField< ::svr::UidStateMsg >&
AllUidStateMsg::datas() const {
  // @@protoc_insertion_point(field_list:svr.AllUidStateMsg.datas)
  return datas_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OneMemberData::kUidFieldNumber;
const int OneMemberData::kAccountFieldNumber;
const int OneMemberData::kNicknameFieldNumber;
const int OneMemberData::kBulletidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OneMemberData::OneMemberData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_run_5flua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.OneMemberData)
}
OneMemberData::OneMemberData(const OneMemberData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.account().size() > 0) {
    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.nickname().size() > 0) {
    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  ::memcpy(&uid_, &from.uid_,
    reinterpret_cast<char*>(&bulletid_) -
    reinterpret_cast<char*>(&uid_) + sizeof(bulletid_));
  // @@protoc_insertion_point(copy_constructor:svr.OneMemberData)
}

void OneMemberData::SharedCtor() {
  account_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, reinterpret_cast<char*>(&bulletid_) -
    reinterpret_cast<char*>(&uid_) + sizeof(bulletid_));
  _cached_size_ = 0;
}

OneMemberData::~OneMemberData() {
  // @@protoc_insertion_point(destructor:svr.OneMemberData)
  SharedDtor();
}

void OneMemberData::SharedDtor() {
  account_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void OneMemberData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OneMemberData::descriptor() {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[11].descriptor;
}

const OneMemberData& OneMemberData::default_instance() {
  protobuf_run_5flua_2eproto::InitDefaults();
  return *internal_default_instance();
}

OneMemberData* OneMemberData::New(::google::protobuf::Arena* arena) const {
  OneMemberData* n = new OneMemberData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OneMemberData::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.OneMemberData)
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&uid_, 0, reinterpret_cast<char*>(&bulletid_) -
    reinterpret_cast<char*>(&uid_) + sizeof(bulletid_));
}

bool OneMemberData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.OneMemberData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 uid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &uid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string account = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_account()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->account().data(), this->account().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.OneMemberData.account"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string nickname = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_nickname()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->nickname().data(), this->nickname().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "svr.OneMemberData.nickname"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 bulletid = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &bulletid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.OneMemberData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.OneMemberData)
  return false;
#undef DO_
}

void OneMemberData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.OneMemberData)
  // uint32 uid = 1;
  if (this->uid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->uid(), output);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.OneMemberData.account");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->account(), output);
  }

  // string nickname = 3;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.OneMemberData.nickname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->nickname(), output);
  }

  // uint32 bulletid = 4;
  if (this->bulletid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->bulletid(), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.OneMemberData)
}

::google::protobuf::uint8* OneMemberData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.OneMemberData)
  // uint32 uid = 1;
  if (this->uid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->uid(), target);
  }

  // string account = 2;
  if (this->account().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->account().data(), this->account().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.OneMemberData.account");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->account(), target);
  }

  // string nickname = 3;
  if (this->nickname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->nickname().data(), this->nickname().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "svr.OneMemberData.nickname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->nickname(), target);
  }

  // uint32 bulletid = 4;
  if (this->bulletid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->bulletid(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.OneMemberData)
  return target;
}

size_t OneMemberData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.OneMemberData)
  size_t total_size = 0;

  // string account = 2;
  if (this->account().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->account());
  }

  // string nickname = 3;
  if (this->nickname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->nickname());
  }

  // uint32 uid = 1;
  if (this->uid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->uid());
  }

  // uint32 bulletid = 4;
  if (this->bulletid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->bulletid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OneMemberData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.OneMemberData)
  GOOGLE_DCHECK_NE(&from, this);
  const OneMemberData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OneMemberData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.OneMemberData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.OneMemberData)
    MergeFrom(*source);
  }
}

void OneMemberData::MergeFrom(const OneMemberData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.OneMemberData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.account().size() > 0) {

    account_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.account_);
  }
  if (from.nickname().size() > 0) {

    nickname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.nickname_);
  }
  if (from.uid() != 0) {
    set_uid(from.uid());
  }
  if (from.bulletid() != 0) {
    set_bulletid(from.bulletid());
  }
}

void OneMemberData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.OneMemberData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OneMemberData::CopyFrom(const OneMemberData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.OneMemberData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneMemberData::IsInitialized() const {
  return true;
}

void OneMemberData::Swap(OneMemberData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OneMemberData::InternalSwap(OneMemberData* other) {
  account_.Swap(&other->account_);
  nickname_.Swap(&other->nickname_);
  std::swap(uid_, other->uid_);
  std::swap(bulletid_, other->bulletid_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OneMemberData::GetMetadata() const {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[11];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// OneMemberData

// uint32 uid = 1;
void OneMemberData::clear_uid() {
  uid_ = 0u;
}
::google::protobuf::uint32 OneMemberData::uid() const {
  // @@protoc_insertion_point(field_get:svr.OneMemberData.uid)
  return uid_;
}
void OneMemberData::set_uid(::google::protobuf::uint32 value) {
  
  uid_ = value;
  // @@protoc_insertion_point(field_set:svr.OneMemberData.uid)
}

// string account = 2;
void OneMemberData::clear_account() {
  account_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OneMemberData::account() const {
  // @@protoc_insertion_point(field_get:svr.OneMemberData.account)
  return account_.GetNoArena();
}
void OneMemberData::set_account(const ::std::string& value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.OneMemberData.account)
}
#if LANG_CXX11
void OneMemberData::set_account(::std::string&& value) {
  
  account_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.OneMemberData.account)
}
#endif
void OneMemberData::set_account(const char* value) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.OneMemberData.account)
}
void OneMemberData::set_account(const char* value, size_t size) {
  
  account_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.OneMemberData.account)
}
::std::string* OneMemberData::mutable_account() {
  
  // @@protoc_insertion_point(field_mutable:svr.OneMemberData.account)
  return account_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OneMemberData::release_account() {
  // @@protoc_insertion_point(field_release:svr.OneMemberData.account)
  
  return account_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OneMemberData::set_allocated_account(::std::string* account) {
  if (account != NULL) {
    
  } else {
    
  }
  account_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), account);
  // @@protoc_insertion_point(field_set_allocated:svr.OneMemberData.account)
}

// string nickname = 3;
void OneMemberData::clear_nickname() {
  nickname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& OneMemberData::nickname() const {
  // @@protoc_insertion_point(field_get:svr.OneMemberData.nickname)
  return nickname_.GetNoArena();
}
void OneMemberData::set_nickname(const ::std::string& value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:svr.OneMemberData.nickname)
}
#if LANG_CXX11
void OneMemberData::set_nickname(::std::string&& value) {
  
  nickname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:svr.OneMemberData.nickname)
}
#endif
void OneMemberData::set_nickname(const char* value) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:svr.OneMemberData.nickname)
}
void OneMemberData::set_nickname(const char* value, size_t size) {
  
  nickname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:svr.OneMemberData.nickname)
}
::std::string* OneMemberData::mutable_nickname() {
  
  // @@protoc_insertion_point(field_mutable:svr.OneMemberData.nickname)
  return nickname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* OneMemberData::release_nickname() {
  // @@protoc_insertion_point(field_release:svr.OneMemberData.nickname)
  
  return nickname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void OneMemberData::set_allocated_nickname(::std::string* nickname) {
  if (nickname != NULL) {
    
  } else {
    
  }
  nickname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), nickname);
  // @@protoc_insertion_point(field_set_allocated:svr.OneMemberData.nickname)
}

// uint32 bulletid = 4;
void OneMemberData::clear_bulletid() {
  bulletid_ = 0u;
}
::google::protobuf::uint32 OneMemberData::bulletid() const {
  // @@protoc_insertion_point(field_get:svr.OneMemberData.bulletid)
  return bulletid_;
}
void OneMemberData::set_bulletid(::google::protobuf::uint32 value) {
  
  bulletid_ = value;
  // @@protoc_insertion_point(field_set:svr.OneMemberData.bulletid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TeamData::kTeamidFieldNumber;
const int TeamData::kLeaderidFieldNumber;
const int TeamData::kTotalNumFieldNumber;
const int TeamData::kCurrentNumFieldNumber;
const int TeamData::kVoiceTokenFieldNumber;
const int TeamData::kMembersFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TeamData::TeamData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_run_5flua_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:svr.TeamData)
}
TeamData::TeamData(const TeamData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      members_(from.members_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&teamid_, &from.teamid_,
    reinterpret_cast<char*>(&voice_token_) -
    reinterpret_cast<char*>(&teamid_) + sizeof(voice_token_));
  // @@protoc_insertion_point(copy_constructor:svr.TeamData)
}

void TeamData::SharedCtor() {
  ::memset(&teamid_, 0, reinterpret_cast<char*>(&voice_token_) -
    reinterpret_cast<char*>(&teamid_) + sizeof(voice_token_));
  _cached_size_ = 0;
}

TeamData::~TeamData() {
  // @@protoc_insertion_point(destructor:svr.TeamData)
  SharedDtor();
}

void TeamData::SharedDtor() {
}

void TeamData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TeamData::descriptor() {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[12].descriptor;
}

const TeamData& TeamData::default_instance() {
  protobuf_run_5flua_2eproto::InitDefaults();
  return *internal_default_instance();
}

TeamData* TeamData::New(::google::protobuf::Arena* arena) const {
  TeamData* n = new TeamData;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TeamData::Clear() {
// @@protoc_insertion_point(message_clear_start:svr.TeamData)
  members_.Clear();
  ::memset(&teamid_, 0, reinterpret_cast<char*>(&voice_token_) -
    reinterpret_cast<char*>(&teamid_) + sizeof(voice_token_));
}

bool TeamData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:svr.TeamData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 teamid = 1;
      case 1: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 leaderid = 2;
      case 2: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &leaderid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 total_num = 3;
      case 3: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &total_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 current_num = 4;
      case 4: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(32u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &current_num_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 voice_token = 5;
      case 5: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(40u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &voice_token_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .svr.OneMemberData members = 6;
      case 6: {
        if (static_cast<::google::protobuf::uint8>(tag) ==
            static_cast<::google::protobuf::uint8>(50u)) {
          DO_(input->IncrementRecursionDepth());
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_members()));
        } else {
          goto handle_unusual;
        }
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:svr.TeamData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:svr.TeamData)
  return false;
#undef DO_
}

void TeamData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:svr.TeamData)
  // uint32 teamid = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->teamid(), output);
  }

  // uint32 leaderid = 2;
  if (this->leaderid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->leaderid(), output);
  }

  // uint32 total_num = 3;
  if (this->total_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->total_num(), output);
  }

  // uint32 current_num = 4;
  if (this->current_num() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->current_num(), output);
  }

  // uint64 voice_token = 5;
  if (this->voice_token() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->voice_token(), output);
  }

  // repeated .svr.OneMemberData members = 6;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->members(i), output);
  }

  // @@protoc_insertion_point(serialize_end:svr.TeamData)
}

::google::protobuf::uint8* TeamData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic;  // Unused
  // @@protoc_insertion_point(serialize_to_array_start:svr.TeamData)
  // uint32 teamid = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->teamid(), target);
  }

  // uint32 leaderid = 2;
  if (this->leaderid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->leaderid(), target);
  }

  // uint32 total_num = 3;
  if (this->total_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->total_num(), target);
  }

  // uint32 current_num = 4;
  if (this->current_num() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->current_num(), target);
  }

  // uint64 voice_token = 5;
  if (this->voice_token() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->voice_token(), target);
  }

  // repeated .svr.OneMemberData members = 6;
  for (unsigned int i = 0, n = this->members_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, this->members(i), false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:svr.TeamData)
  return target;
}

size_t TeamData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:svr.TeamData)
  size_t total_size = 0;

  // repeated .svr.OneMemberData members = 6;
  {
    unsigned int count = this->members_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->members(i));
    }
  }

  // uint32 teamid = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->teamid());
  }

  // uint32 leaderid = 2;
  if (this->leaderid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->leaderid());
  }

  // uint32 total_num = 3;
  if (this->total_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->total_num());
  }

  // uint32 current_num = 4;
  if (this->current_num() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->current_num());
  }

  // uint64 voice_token = 5;
  if (this->voice_token() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->voice_token());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TeamData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:svr.TeamData)
  GOOGLE_DCHECK_NE(&from, this);
  const TeamData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TeamData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:svr.TeamData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:svr.TeamData)
    MergeFrom(*source);
  }
}

void TeamData::MergeFrom(const TeamData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:svr.TeamData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  members_.MergeFrom(from.members_);
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.leaderid() != 0) {
    set_leaderid(from.leaderid());
  }
  if (from.total_num() != 0) {
    set_total_num(from.total_num());
  }
  if (from.current_num() != 0) {
    set_current_num(from.current_num());
  }
  if (from.voice_token() != 0) {
    set_voice_token(from.voice_token());
  }
}

void TeamData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:svr.TeamData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TeamData::CopyFrom(const TeamData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:svr.TeamData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TeamData::IsInitialized() const {
  return true;
}

void TeamData::Swap(TeamData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TeamData::InternalSwap(TeamData* other) {
  members_.UnsafeArenaSwap(&other->members_);
  std::swap(teamid_, other->teamid_);
  std::swap(leaderid_, other->leaderid_);
  std::swap(total_num_, other->total_num_);
  std::swap(current_num_, other->current_num_);
  std::swap(voice_token_, other->voice_token_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TeamData::GetMetadata() const {
  protobuf_run_5flua_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_run_5flua_2eproto::file_level_metadata[12];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TeamData

// uint32 teamid = 1;
void TeamData::clear_teamid() {
  teamid_ = 0u;
}
::google::protobuf::uint32 TeamData::teamid() const {
  // @@protoc_insertion_point(field_get:svr.TeamData.teamid)
  return teamid_;
}
void TeamData::set_teamid(::google::protobuf::uint32 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:svr.TeamData.teamid)
}

// uint32 leaderid = 2;
void TeamData::clear_leaderid() {
  leaderid_ = 0u;
}
::google::protobuf::uint32 TeamData::leaderid() const {
  // @@protoc_insertion_point(field_get:svr.TeamData.leaderid)
  return leaderid_;
}
void TeamData::set_leaderid(::google::protobuf::uint32 value) {
  
  leaderid_ = value;
  // @@protoc_insertion_point(field_set:svr.TeamData.leaderid)
}

// uint32 total_num = 3;
void TeamData::clear_total_num() {
  total_num_ = 0u;
}
::google::protobuf::uint32 TeamData::total_num() const {
  // @@protoc_insertion_point(field_get:svr.TeamData.total_num)
  return total_num_;
}
void TeamData::set_total_num(::google::protobuf::uint32 value) {
  
  total_num_ = value;
  // @@protoc_insertion_point(field_set:svr.TeamData.total_num)
}

// uint32 current_num = 4;
void TeamData::clear_current_num() {
  current_num_ = 0u;
}
::google::protobuf::uint32 TeamData::current_num() const {
  // @@protoc_insertion_point(field_get:svr.TeamData.current_num)
  return current_num_;
}
void TeamData::set_current_num(::google::protobuf::uint32 value) {
  
  current_num_ = value;
  // @@protoc_insertion_point(field_set:svr.TeamData.current_num)
}

// uint64 voice_token = 5;
void TeamData::clear_voice_token() {
  voice_token_ = GOOGLE_ULONGLONG(0);
}
::google::protobuf::uint64 TeamData::voice_token() const {
  // @@protoc_insertion_point(field_get:svr.TeamData.voice_token)
  return voice_token_;
}
void TeamData::set_voice_token(::google::protobuf::uint64 value) {
  
  voice_token_ = value;
  // @@protoc_insertion_point(field_set:svr.TeamData.voice_token)
}

// repeated .svr.OneMemberData members = 6;
int TeamData::members_size() const {
  return members_.size();
}
void TeamData::clear_members() {
  members_.Clear();
}
const ::svr::OneMemberData& TeamData::members(int index) const {
  // @@protoc_insertion_point(field_get:svr.TeamData.members)
  return members_.Get(index);
}
::svr::OneMemberData* TeamData::mutable_members(int index) {
  // @@protoc_insertion_point(field_mutable:svr.TeamData.members)
  return members_.Mutable(index);
}
::svr::OneMemberData* TeamData::add_members() {
  // @@protoc_insertion_point(field_add:svr.TeamData.members)
  return members_.Add();
}
::google::protobuf::RepeatedPtrField< ::svr::OneMemberData >*
TeamData::mutable_members() {
  // @@protoc_insertion_point(field_mutable_list:svr.TeamData.members)
  return &members_;
}
const ::google::protobuf::RepeatedPtrField< ::svr::OneMemberData >&
TeamData::members() const {
  // @@protoc_insertion_point(field_list:svr.TeamData.members)
  return members_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace svr

// @@protoc_insertion_point(global_scope)
