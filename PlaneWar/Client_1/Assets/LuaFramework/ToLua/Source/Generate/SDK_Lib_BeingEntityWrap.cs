//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SDK_Lib_BeingEntityWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SDK.Lib.BeingEntity), typeof(SDK.Lib.SceneEntityBase));
		L.RegFunction("setSkeleton", setSkeleton);
		L.RegFunction("setPartModel", setPartModel);
		L.RegFunction("onSkeletonLoaded", onSkeletonLoaded);
		L.RegFunction("getDesc", getDesc);
		L.RegFunction("getEffectControl", getEffectControl);
		L.RegFunction("playFlyNum", playFlyNum);
		L.RegFunction("onDestroy", onDestroy);
		L.RegFunction("setMoveSpeed", setMoveSpeed);
		L.RegFunction("setContactNotMergeSpeed", setContactNotMergeSpeed);
		L.RegFunction("getMoveSpeed", getMoveSpeed);
		L.RegFunction("setRotateSpeed", setRotateSpeed);
		L.RegFunction("getRotateSpeed", getRotateSpeed);
		L.RegFunction("setScaleSpeed", setScaleSpeed);
		L.RegFunction("getScaleSpeed", getScaleSpeed);
		L.RegFunction("forceMoveDest", forceMoveDest);
		L.RegFunction("setDestPos_FromKBE", setDestPos_FromKBE);
		L.RegFunction("setDestPos", setDestPos);
		L.RegFunction("getDestPos", getDestPos);
		L.RegFunction("setDestPosForBirth_FromKBE", setDestPosForBirth_FromKBE);
		L.RegFunction("setDestPosForBirth", setDestPosForBirth);
		L.RegFunction("setDestPosForMerge", setDestPosForMerge);
		L.RegFunction("setDestPosForMoveCenter", setDestPosForMoveCenter);
		L.RegFunction("setDestRotate_FromKBE", setDestRotate_FromKBE);
		L.RegFunction("setDestRotate", setDestRotate);
		L.RegFunction("setSeparateForwardRotate", setSeparateForwardRotate);
		L.RegFunction("setDestPosAndDestRotate", setDestPosAndDestRotate);
		L.RegFunction("setDestScale", setDestScale);
		L.RegFunction("setForwardRotate", setForwardRotate);
		L.RegFunction("setBallRadius", setBallRadius);
		L.RegFunction("setMass", setMass);
		L.RegFunction("getMass", getMass);
		L.RegFunction("getBallRadius", getBallRadius);
		L.RegFunction("getBallWorldRadius", getBallWorldRadius);
		L.RegFunction("setName", setName);
		L.RegFunction("getName", getName);
		L.RegFunction("reduceMassBy", reduceMassBy);
		L.RegFunction("getSplitRadius", getSplitRadius);
		L.RegFunction("getSplitWorldRadius", getSplitWorldRadius);
		L.RegFunction("loadRenderRes", loadRenderRes);
		L.RegFunction("onTick", onTick);
		L.RegFunction("getHudPos", getHudPos);
		L.RegFunction("setBeingState", setBeingState);
		L.RegFunction("getBeingState", getBeingState);
		L.RegFunction("setBeingSubState", setBeingSubState);
		L.RegFunction("getBeingSubState", getBeingSubState);
		L.RegFunction("clearBeingSubState", clearBeingSubState);
		L.RegFunction("canEatOther", canEatOther);
		L.RegFunction("canEatByOther", canEatByOther);
		L.RegFunction("overlapToEnter", overlapToEnter);
		L.RegFunction("overlapToStay", overlapToStay);
		L.RegFunction("overlapToExit", overlapToExit);
		L.RegFunction("overlapToEnter2D", overlapToEnter2D);
		L.RegFunction("overlapToStay2D", overlapToStay2D);
		L.RegFunction("overlapToExit2D", overlapToExit2D);
		L.RegFunction("isNeedSeparate", isNeedSeparate);
		L.RegFunction("canSeparateByState", canSeparateByState);
		L.RegFunction("isNeedReduceSpeed", isNeedReduceSpeed);
		L.RegFunction("canMerge", canMerge);
		L.RegFunction("canEmitSnow", canEmitSnow);
		L.RegFunction("getEmitSnowSize", getEmitSnowSize);
		L.RegFunction("getEmitSnowWorldSize", getEmitSnowWorldSize);
		L.RegFunction("canSplit", canSplit);
		L.RegFunction("canIOControlMoveForward", canIOControlMoveForward);
		L.RegFunction("canInterActive", canInterActive);
		L.RegFunction("canMergeWithOther", canMergeWithOther);
		L.RegFunction("mergeWithOther", mergeWithOther);
		L.RegFunction("addParentOrientChangedhandle", addParentOrientChangedhandle);
		L.RegFunction("setTexture", setTexture);
		L.RegFunction("setTexTile", setTexTile);
		L.RegFunction("getTileInfo", getTileInfo);
		L.RegFunction("setLastMergedTime", setLastMergedTime);
		L.RegFunction("contactWithAndFollowButNotMerge", contactWithAndFollowButNotMerge);
		L.RegFunction("getDestRotate", getDestRotate);
		L.RegFunction("setNotMergeRotate", setNotMergeRotate);
		L.RegFunction("clearContactNotMerge", clearContactNotMerge);
		L.RegFunction("setFreezeXZ", setFreezeXZ);
		L.RegFunction("isFreezeXZ", isFreezeXZ);
		L.RegFunction("setIsEatedByOther", setIsEatedByOther);
		L.RegFunction("getIsEatedByOther", getIsEatedByOther);
		L.RegFunction("setIsEatedByServer", setIsEatedByServer);
		L.RegFunction("getIsEatedByServer", getIsEatedByServer);
		L.RegFunction("isReqServerMerge", isReqServerMerge);
		L.RegFunction("isPrefabPathValid", isPrefabPathValid);
		L.RegFunction("setPrefabPath", setPrefabPath);
		L.RegFunction("getPrefabPath", getPrefabPath);
		L.RegFunction("moveToCenter", moveToCenter);
		L.RegFunction("enableRigid", enableRigid);
		L.RegFunction("New", _CreateSDK_Lib_BeingEntity);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("mMovement", get_mMovement, set_mMovement);
		L.RegVar("mAttack", get_mAttack, set_mAttack);
		L.RegVar("mAnimatorControl", get_mAnimatorControl, set_mAnimatorControl);
		L.RegVar("mAnimFSM", get_mAnimFSM, set_mAnimFSM);
		L.RegVar("skinAniModel", get_skinAniModel, null);
		L.RegVar("ReliveSeconds", get_ReliveSeconds, set_ReliveSeconds);
		L.RegVar("effectControl", get_effectControl, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSDK_Lib_BeingEntity(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				SDK.Lib.BeingEntity obj = new SDK.Lib.BeingEntity();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SDK.Lib.BeingEntity.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setSkeleton(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			string arg0 = ToLua.CheckString(L, 2);
			obj.setSkeleton(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setPartModel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			string arg2 = ToLua.CheckString(L, 4);
			obj.setPartModel(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onSkeletonLoaded(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			obj.onSkeletonLoaded();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getDesc(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			string o = obj.getDesc();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getEffectControl(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.EffectControl o = obj.getEffectControl();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int playFlyNum(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.playFlyNum(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			obj.onDestroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setMoveSpeed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.setMoveSpeed(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setContactNotMergeSpeed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.setContactNotMergeSpeed(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getMoveSpeed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			float o = obj.getMoveSpeed(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setRotateSpeed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.setRotateSpeed(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getRotateSpeed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float o = obj.getRotateSpeed();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setScaleSpeed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.setScaleSpeed(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getScaleSpeed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float o = obj.getScaleSpeed();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int forceMoveDest(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.forceMoveDest(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDestPos_FromKBE(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.setDestPos_FromKBE(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDestPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.setDestPos(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getDestPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 o = obj.getDestPos();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDestPosForBirth_FromKBE(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.setDestPosForBirth_FromKBE(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDestPosForBirth(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.setDestPosForBirth(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDestPosForMerge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.setDestPosForMerge(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDestPosForMoveCenter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.setDestPosForMoveCenter(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDestRotate_FromKBE(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.setDestRotate_FromKBE(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDestRotate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.setDestRotate(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setSeparateForwardRotate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.setSeparateForwardRotate(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDestPosAndDestRotate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			obj.setDestPosAndDestRotate(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDestScale(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.setDestScale(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setForwardRotate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.setForwardRotate(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setBallRadius(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			bool arg2 = LuaDLL.luaL_checkboolean(L, 4);
			obj.setBallRadius(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setMass(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.setMass(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getMass(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float o = obj.getMass();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getBallRadius(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float o = obj.getBallRadius();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getBallWorldRadius(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float o = obj.getBallWorldRadius();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			string arg0 = ToLua.CheckString(L, 2);
			obj.setName(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			string o = obj.getName();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int reduceMassBy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.reduceMassBy(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getSplitRadius(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float o = obj.getSplitRadius();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getSplitWorldRadius(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float o = obj.getSplitWorldRadius();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int loadRenderRes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			obj.loadRenderRes();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onTick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.onTick(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getHudPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Vector3 o = obj.getHudPos();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setBeingState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingState arg0 = (SDK.Lib.BeingState)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingState));
			obj.setBeingState(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getBeingState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingState o = obj.getBeingState();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setBeingSubState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingSubState arg0 = (SDK.Lib.BeingSubState)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingSubState));
			obj.setBeingSubState(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getBeingSubState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingSubState o = obj.getBeingSubState();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int clearBeingSubState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			obj.clearBeingSubState();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int canEatOther(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			bool o = obj.canEatOther(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int canEatByOther(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			bool o = obj.canEatByOther(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int overlapToEnter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Collision arg1 = (UnityEngine.Collision)ToLua.CheckObject(L, 3, typeof(UnityEngine.Collision));
			obj.overlapToEnter(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int overlapToStay(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Collision arg1 = (UnityEngine.Collision)ToLua.CheckObject(L, 3, typeof(UnityEngine.Collision));
			obj.overlapToStay(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int overlapToExit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Collision arg1 = (UnityEngine.Collision)ToLua.CheckObject(L, 3, typeof(UnityEngine.Collision));
			obj.overlapToExit(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int overlapToEnter2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Collision2D arg1 = (UnityEngine.Collision2D)ToLua.CheckObject(L, 3, typeof(UnityEngine.Collision2D));
			obj.overlapToEnter2D(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int overlapToStay2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Collision2D arg1 = (UnityEngine.Collision2D)ToLua.CheckObject(L, 3, typeof(UnityEngine.Collision2D));
			obj.overlapToStay2D(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int overlapToExit2D(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Collision2D arg1 = (UnityEngine.Collision2D)ToLua.CheckObject(L, 3, typeof(UnityEngine.Collision2D));
			obj.overlapToExit2D(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isNeedSeparate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			bool o = obj.isNeedSeparate(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int canSeparateByState(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool o = obj.canSeparateByState();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isNeedReduceSpeed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool o = obj.isNeedReduceSpeed();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int canMerge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool o = obj.canMerge();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int canEmitSnow(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool o = obj.canEmitSnow();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getEmitSnowSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float o = obj.getEmitSnowSize();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getEmitSnowWorldSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			float o = obj.getEmitSnowWorldSize();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int canSplit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool o = obj.canSplit();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int canIOControlMoveForward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool o = obj.canIOControlMoveForward();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int canInterActive(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			bool o = obj.canInterActive(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int canMergeWithOther(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			bool o = obj.canMergeWithOther(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int mergeWithOther(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			obj.mergeWithOther(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int addParentOrientChangedhandle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			obj.addParentOrientChangedhandle();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setTexture(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			string arg0 = ToLua.CheckString(L, 2);
			obj.setTexture(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setTexTile(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.TileInfo arg0 = (SDK.Lib.TileInfo)ToLua.CheckObject(L, 2, typeof(SDK.Lib.TileInfo));
			obj.setTexTile(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getTileInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.TileInfo o = obj.getTileInfo();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setLastMergedTime(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			obj.setLastMergedTime();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int contactWithAndFollowButNotMerge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			obj.contactWithAndFollowButNotMerge(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getDestRotate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Quaternion o = obj.getDestRotate();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setNotMergeRotate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			UnityEngine.Quaternion arg0 = ToLua.ToQuaternion(L, 2);
			obj.setNotMergeRotate(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int clearContactNotMerge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			obj.clearContactNotMerge();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setFreezeXZ(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.setFreezeXZ(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isFreezeXZ(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool o = obj.isFreezeXZ();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setIsEatedByOther(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.setIsEatedByOther(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getIsEatedByOther(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool o = obj.getIsEatedByOther();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setIsEatedByServer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.setIsEatedByServer(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getIsEatedByServer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool o = obj.getIsEatedByServer();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isReqServerMerge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool o = obj.isReqServerMerge();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isPrefabPathValid(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool o = obj.isPrefabPathValid();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setPrefabPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			string arg0 = ToLua.CheckString(L, 2);
			obj.setPrefabPath(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getPrefabPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			string o = obj.getPrefabPath();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int moveToCenter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			obj.moveToCenter();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int enableRigid(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 1, typeof(SDK.Lib.BeingEntity));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.enableRigid(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mMovement(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)o;
			SDK.Lib.SceneEntityMovement ret = obj.mMovement;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMovement on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mAttack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)o;
			SDK.Lib.BeingEntityAttack ret = obj.mAttack;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAttack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mAnimatorControl(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)o;
			SDK.Lib.BeingAnimatorControl ret = obj.mAnimatorControl;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAnimatorControl on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mAnimFSM(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)o;
			SDK.Lib.AnimFSM ret = obj.mAnimFSM;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAnimFSM on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_skinAniModel(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)o;
			SDK.Lib.SkinModelSkelAnim ret = obj.skinAniModel;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index skinAniModel on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ReliveSeconds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)o;
			int ret = obj.ReliveSeconds;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ReliveSeconds on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_effectControl(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)o;
			SDK.Lib.EffectControl ret = obj.effectControl;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index effectControl on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mMovement(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)o;
			SDK.Lib.SceneEntityMovement arg0 = (SDK.Lib.SceneEntityMovement)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SceneEntityMovement));
			obj.mMovement = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMovement on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mAttack(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)o;
			SDK.Lib.BeingEntityAttack arg0 = (SDK.Lib.BeingEntityAttack)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntityAttack));
			obj.mAttack = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAttack on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mAnimatorControl(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)o;
			SDK.Lib.BeingAnimatorControl arg0 = (SDK.Lib.BeingAnimatorControl)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingAnimatorControl));
			obj.mAnimatorControl = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAnimatorControl on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mAnimFSM(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)o;
			SDK.Lib.AnimFSM arg0 = (SDK.Lib.AnimFSM)ToLua.CheckObject(L, 2, typeof(SDK.Lib.AnimFSM));
			obj.mAnimFSM = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAnimFSM on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ReliveSeconds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.BeingEntity obj = (SDK.Lib.BeingEntity)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.ReliveSeconds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index ReliveSeconds on a nil value" : e.Message);
		}
	}
}

