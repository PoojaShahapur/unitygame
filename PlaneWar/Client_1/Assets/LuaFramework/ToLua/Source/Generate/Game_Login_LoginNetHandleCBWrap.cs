//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Game_Login_LoginNetHandleCBWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Game.Login.LoginNetHandleCB), typeof(SDK.Lib.NetModuleDispHandle));
		L.RegFunction("OnLogin", OnLogin);
		L.RegFunction("OnEnterRoom", OnEnterRoom);
		L.RegFunction("login", login);
		L.RegFunction("relogin", relogin);
		L.RegFunction("New", _CreateGame_Login_LoginNetHandleCB);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGame_Login_LoginNetHandleCB(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Game.Login.LoginNetHandleCB obj = new Game.Login.LoginNetHandleCB();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Game.Login.LoginNetHandleCB.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnLogin(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			Game.Login.LoginNetHandleCB obj = (Game.Login.LoginNetHandleCB)ToLua.CheckObject(L, 1, typeof(Game.Login.LoginNetHandleCB));
			string arg0 = ToLua.CheckString(L, 2);
			rpc.LoginResponse arg1 = (rpc.LoginResponse)ToLua.CheckObject(L, 3, typeof(rpc.LoginResponse));
			obj.OnLogin(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnEnterRoom(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			Game.Login.LoginNetHandleCB obj = (Game.Login.LoginNetHandleCB)ToLua.CheckObject(L, 1, typeof(Game.Login.LoginNetHandleCB));
			plane.EnterRoomResponse arg0 = (plane.EnterRoomResponse)ToLua.CheckObject(L, 2, typeof(plane.EnterRoomResponse));
			obj.OnEnterRoom(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int login(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Game.Login.LoginNetHandleCB obj = (Game.Login.LoginNetHandleCB)ToLua.CheckObject(L, 1, typeof(Game.Login.LoginNetHandleCB));
			obj.login();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int relogin(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			Game.Login.LoginNetHandleCB obj = (Game.Login.LoginNetHandleCB)ToLua.CheckObject(L, 1, typeof(Game.Login.LoginNetHandleCB));
			obj.relogin();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

