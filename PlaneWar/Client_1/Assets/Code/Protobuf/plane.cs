//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: plane/plane.proto
// Note: requires additional types generated from: empty_msg.proto
// Note: requires additional types generated from: plane/plane_msg.proto
namespace plane
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"EnterRoomResponse")]
  public partial class EnterRoomResponse : global::ProtoBuf.IExtensible
  {
    public EnterRoomResponse() {}
    
    private plane.MsAndId _ms_and_id = null;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"ms_and_id", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(null)]
    public plane.MsAndId ms_and_id
    {
      get { return _ms_and_id; }
      set { _ms_and_id = value; }
    }
    private readonly global::System.Collections.Generic.List<plane.PlayerInfo> _players = new global::System.Collections.Generic.List<plane.PlayerInfo>();
    [global::ProtoBuf.ProtoMember(2, Name=@"players", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<plane.PlayerInfo> players
    {
      get { return _players; }
    }
  
    private readonly global::System.Collections.Generic.List<plane.FoodMsg> _foods = new global::System.Collections.Generic.List<plane.FoodMsg>();
    [global::ProtoBuf.ProtoMember(3, Name=@"foods", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public global::System.Collections.Generic.List<plane.FoodMsg> foods
    {
      get { return _foods; }
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
    public interface IPlane
    {
      plane.EnterRoomResponse EnterRoom(rpc.EmptyMsg request);
    rpc.EmptyMsg MoveTo(plane.MoveToMsg request);
    plane.OkMsg Fire(plane.FireMsg request);
    rpc.EmptyMsg Hit(plane.HitMsg request);
    plane.OkMsg Eat(plane.EatMsg request);
    rpc.EmptyMsg New(plane.PlaneMsg request);
    rpc.EmptyMsg Remove(plane.PlaneMsg request);
    
    }
    
    
}