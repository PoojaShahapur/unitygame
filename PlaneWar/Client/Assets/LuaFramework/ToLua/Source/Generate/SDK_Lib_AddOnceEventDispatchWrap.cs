//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SDK_Lib_AddOnceEventDispatchWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SDK.Lib.AddOnceEventDispatch), typeof(SDK.Lib.EventDispatch));
		L.RegFunction("addEventHandle", addEventHandle);
		L.RegFunction("New", _CreateSDK_Lib_AddOnceEventDispatch);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSDK_Lib_AddOnceEventDispatch(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
				SDK.Lib.AddOnceEventDispatch obj = new SDK.Lib.AddOnceEventDispatch(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SDK.Lib.AddOnceEventDispatch.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int addEventHandle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 7);
			SDK.Lib.AddOnceEventDispatch obj = (SDK.Lib.AddOnceEventDispatch)ToLua.CheckObject(L, 1, typeof(SDK.Lib.AddOnceEventDispatch));
			SDK.Lib.ICalleeObject arg0 = (SDK.Lib.ICalleeObject)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ICalleeObject));
			SDK.Lib.MAction<SDK.Lib.IDispatchObject> arg1 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (SDK.Lib.MAction<SDK.Lib.IDispatchObject>)ToLua.CheckObject(L, 3, typeof(SDK.Lib.MAction<SDK.Lib.IDispatchObject>));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg1 = DelegateFactory.CreateDelegate(typeof(SDK.Lib.MAction<SDK.Lib.IDispatchObject>), func) as SDK.Lib.MAction<SDK.Lib.IDispatchObject>;
			}

			uint arg2 = (uint)LuaDLL.luaL_checknumber(L, 4);
			LuaTable arg3 = ToLua.CheckLuaTable(L, 5);
			LuaFunction arg4 = ToLua.CheckLuaFunction(L, 6);
			uint arg5 = (uint)LuaDLL.luaL_checknumber(L, 7);
			obj.addEventHandle(arg0, arg1, arg2, arg3, arg4, arg5);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

