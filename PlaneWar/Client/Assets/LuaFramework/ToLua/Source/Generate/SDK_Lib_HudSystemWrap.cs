//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SDK_Lib_HudSystemWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SDK.Lib.HudSystem), typeof(System.Object));
		L.RegFunction("init", init);
		L.RegFunction("dispose", dispose);
		L.RegFunction("clear", clear);
		L.RegFunction("createHud", createHud);
		L.RegFunction("addHud", addHud);
		L.RegFunction("removeHud", removeHud);
		L.RegFunction("onCameraOrientChanged", onCameraOrientChanged);
		L.RegFunction("New", _CreateSDK_Lib_HudSystem);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSDK_Lib_HudSystem(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				SDK.Lib.HudSystem obj = new SDK.Lib.HudSystem();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SDK.Lib.HudSystem.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.HudSystem obj = (SDK.Lib.HudSystem)ToLua.CheckObject(L, 1, typeof(SDK.Lib.HudSystem));
			obj.init();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.HudSystem obj = (SDK.Lib.HudSystem)ToLua.CheckObject(L, 1, typeof(SDK.Lib.HudSystem));
			obj.dispose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.HudSystem obj = (SDK.Lib.HudSystem)ToLua.CheckObject(L, 1, typeof(SDK.Lib.HudSystem));
			obj.clear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int createHud(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.HudSystem obj = (SDK.Lib.HudSystem)ToLua.CheckObject(L, 1, typeof(SDK.Lib.HudSystem));
			SDK.Lib.BeingEntity arg0 = (SDK.Lib.BeingEntity)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BeingEntity));
			SDK.Lib.HudItemBase o = obj.createHud(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int addHud(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.HudSystem obj = (SDK.Lib.HudSystem)ToLua.CheckObject(L, 1, typeof(SDK.Lib.HudSystem));
			SDK.Lib.HudItemBase arg0 = (SDK.Lib.HudItemBase)ToLua.CheckObject(L, 2, typeof(SDK.Lib.HudItemBase));
			obj.addHud(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int removeHud(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.HudSystem obj = (SDK.Lib.HudSystem)ToLua.CheckObject(L, 1, typeof(SDK.Lib.HudSystem));
			SDK.Lib.HudItemBase arg0 = (SDK.Lib.HudItemBase)ToLua.CheckObject(L, 2, typeof(SDK.Lib.HudItemBase));
			obj.removeHud(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onCameraOrientChanged(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.HudSystem obj = (SDK.Lib.HudSystem)ToLua.CheckObject(L, 1, typeof(SDK.Lib.HudSystem));
			SDK.Lib.IDispatchObject arg0 = (SDK.Lib.IDispatchObject)ToLua.CheckObject(L, 2, typeof(SDK.Lib.IDispatchObject));
			obj.onCameraOrientChanged(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

