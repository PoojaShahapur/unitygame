//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SDK_Lib_EntityMgrBaseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SDK.Lib.EntityMgrBase), typeof(SDK.Lib.DelayHandleMgrBase));
		L.RegFunction("init", init);
		L.RegFunction("dispose", dispose);
		L.RegFunction("addEntity", addEntity);
		L.RegFunction("removeEntity", removeEntity);
		L.RegFunction("onTick", onTick);
		L.RegFunction("setClientDispose", setClientDispose);
		L.RegFunction("isClientDispose", isClientDispose);
		L.RegFunction("getEntityByThisId", getEntityByThisId);
		L.RegFunction("getEntityByUniqueId", getEntityByUniqueId);
		L.RegFunction("getEntityByIndex", getEntityByIndex);
		L.RegFunction("getBufferEntity", getBufferEntity);
		L.RegFunction("genNewStrId", genNewStrId);
		L.RegFunction("getCurStrId", getCurStrId);
		L.RegFunction("getCurId", getCurId);
		L.RegFunction("genStrIdById", genStrIdById);
		L.RegFunction("getEntityCount", getEntityCount);
		L.RegFunction("getSceneEntityList", getSceneEntityList);
		L.RegFunction("clearAll", clearAll);
		L.RegFunction("changeThisId", changeThisId);
		L.RegFunction("New", _CreateSDK_Lib_EntityMgrBase);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSDK_Lib_EntityMgrBase(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				SDK.Lib.EntityMgrBase obj = new SDK.Lib.EntityMgrBase();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SDK.Lib.EntityMgrBase.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			obj.init();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			obj.dispose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int addEntity(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			SDK.Lib.SceneEntityBase arg0 = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SceneEntityBase));
			obj.addEntity(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int removeEntity(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			SDK.Lib.SceneEntityBase arg0 = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SceneEntityBase));
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.removeEntity(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onTick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.onTick(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setClientDispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.setClientDispose(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isClientDispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			bool o = obj.isClientDispose();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getEntityByThisId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			SDK.Lib.SceneEntityBase o = obj.getEntityByThisId(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getEntityByUniqueId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			string arg0 = ToLua.CheckString(L, 2);
			SDK.Lib.SceneEntityBase o = obj.getEntityByUniqueId(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getEntityByIndex(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			SDK.Lib.SceneEntityBase o = obj.getEntityByIndex(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getBufferEntity(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			SDK.Lib.SceneEntityBase o = obj.getBufferEntity();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int genNewStrId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			string o = obj.genNewStrId();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getCurStrId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			string o = obj.getCurStrId();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getCurId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			uint o = obj.getCurId();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int genStrIdById(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			string o = obj.genStrIdById(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getEntityCount(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			int o = obj.getEntityCount();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getSceneEntityList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			SDK.Lib.MList<SDK.Lib.SceneEntityBase> o = obj.getSceneEntityList();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int clearAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			obj.clearAll();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int changeThisId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			SDK.Lib.EntityMgrBase obj = (SDK.Lib.EntityMgrBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.EntityMgrBase));
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 3);
			SDK.Lib.SceneEntityBase arg2 = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 4, typeof(SDK.Lib.SceneEntityBase));
			obj.changeThisId(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

