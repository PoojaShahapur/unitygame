//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SDK_Lib_ByteBufferWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SDK.Lib.ByteBuffer), typeof(System.Object));
		L.RegFunction("setEndian", setEndian);
		L.RegFunction("setPos", setPos);
		L.RegFunction("getPos", getPos);
		L.RegFunction("clear", clear);
		L.RegFunction("incPosDelta", incPosDelta);
		L.RegFunction("decPosDelta", decPosDelta);
		L.RegFunction("readInt8", readInt8);
		L.RegFunction("readUnsignedInt8", readUnsignedInt8);
		L.RegFunction("readInt16", readInt16);
		L.RegFunction("readUnsignedInt16", readUnsignedInt16);
		L.RegFunction("readInt32", readInt32);
		L.RegFunction("readUnsignedInt32", readUnsignedInt32);
		L.RegFunction("readInt64", readInt64);
		L.RegFunction("readUnsignedInt64", readUnsignedInt64);
		L.RegFunction("readFloat", readFloat);
		L.RegFunction("readDouble", readDouble);
		L.RegFunction("readMultiByte", readMultiByte);
		L.RegFunction("readBytes", readBytes);
		L.RegFunction("writeInt8", writeInt8);
		L.RegFunction("writeUnsignedInt8", writeUnsignedInt8);
		L.RegFunction("writeInt16", writeInt16);
		L.RegFunction("writeUnsignedInt16", writeUnsignedInt16);
		L.RegFunction("writeInt32", writeInt32);
		L.RegFunction("writeUnsignedInt32", writeUnsignedInt32);
		L.RegFunction("writeInt64", writeInt64);
		L.RegFunction("writeUnsignedInt64", writeUnsignedInt64);
		L.RegFunction("writeFloat", writeFloat);
		L.RegFunction("writeDouble", writeDouble);
		L.RegFunction("writeBytes", writeBytes);
		L.RegFunction("writeMultiByte", writeMultiByte);
		L.RegFunction("insertUnsignedInt32", insertUnsignedInt32);
		L.RegFunction("readUnsignedLongByOffset", readUnsignedLongByOffset);
		L.RegFunction("end", end);
		L.RegFunction("writeVector2", writeVector2);
		L.RegFunction("writeVector3", writeVector3);
		L.RegFunction("writeVector4", writeVector4);
		L.RegFunction("readVector2", readVector2);
		L.RegFunction("readVector3", readVector3);
		L.RegFunction("readVector4", readVector4);
		L.RegFunction("writeAABB", writeAABB);
		L.RegFunction("readAABB", readAABB);
		L.RegFunction("compress", compress);
		L.RegFunction("uncompress", uncompress);
		L.RegFunction("encrypt", encrypt);
		L.RegFunction("decrypt", decrypt);
		L.RegFunction("readBoolean", readBoolean);
		L.RegFunction("New", _CreateSDK_Lib_ByteBuffer);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("mWriteFloatBytes", get_mWriteFloatBytes, set_mWriteFloatBytes);
		L.RegVar("mWriteDoubleBytes", get_mWriteDoubleBytes, set_mWriteDoubleBytes);
		L.RegVar("mReadFloatBytes", get_mReadFloatBytes, set_mReadFloatBytes);
		L.RegVar("mReadDoubleBytes", get_mReadDoubleBytes, set_mReadDoubleBytes);
		L.RegVar("dynBuffer", get_dynBuffer, null);
		L.RegVar("bytesAvailable", get_bytesAvailable, null);
		L.RegVar("endian", get_endian, set_endian);
		L.RegVar("length", get_length, set_length);
		L.RegVar("position", get_position, set_position);
		L.RegVar("luaCSBridgeByteBuffer", get_luaCSBridgeByteBuffer, set_luaCSBridgeByteBuffer);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSDK_Lib_ByteBuffer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 3)
			{
				uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 1);
				uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 2);
				SDK.Lib.EEndian arg2 = (SDK.Lib.EEndian)ToLua.CheckObject(L, 3, typeof(SDK.Lib.EEndian));
				SDK.Lib.ByteBuffer obj = new SDK.Lib.ByteBuffer(arg0, arg1, arg2);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SDK.Lib.ByteBuffer.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setEndian(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			SDK.Lib.EEndian arg0 = (SDK.Lib.EEndian)ToLua.CheckObject(L, 2, typeof(SDK.Lib.EEndian));
			obj.setEndian(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.setPos(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			uint o = obj.getPos();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			obj.clear();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int incPosDelta(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.incPosDelta(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int decPosDelta(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.decPosDelta(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readInt8(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			byte arg0 = (byte)LuaDLL.luaL_checknumber(L, 2);
			SDK.Lib.ByteBuffer o = obj.readInt8(ref arg0);
			ToLua.PushObject(L, o);
			LuaDLL.lua_pushnumber(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readUnsignedInt8(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			byte arg0 = (byte)LuaDLL.luaL_checknumber(L, 2);
			SDK.Lib.ByteBuffer o = obj.readUnsignedInt8(ref arg0);
			ToLua.PushObject(L, o);
			LuaDLL.lua_pushnumber(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readInt16(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			short arg0 = (short)LuaDLL.luaL_checknumber(L, 2);
			SDK.Lib.ByteBuffer o = obj.readInt16(ref arg0);
			ToLua.PushObject(L, o);
			LuaDLL.lua_pushnumber(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readUnsignedInt16(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			SDK.Lib.ByteBuffer o = obj.readUnsignedInt16(ref arg0);
			ToLua.PushObject(L, o);
			LuaDLL.lua_pushnumber(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readInt32(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			SDK.Lib.ByteBuffer o = obj.readInt32(ref arg0);
			ToLua.PushObject(L, o);
			LuaDLL.lua_pushinteger(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readUnsignedInt32(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			SDK.Lib.ByteBuffer o = obj.readUnsignedInt32(ref arg0);
			ToLua.PushObject(L, o);
			LuaDLL.lua_pushnumber(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readInt64(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			SDK.Lib.ByteBuffer o = obj.readInt64(ref arg0);
			ToLua.PushObject(L, o);
			LuaDLL.tolua_pushint64(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readUnsignedInt64(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			ulong arg0 = LuaDLL.tolua_checkuint64(L, 2);
			SDK.Lib.ByteBuffer o = obj.readUnsignedInt64(ref arg0);
			ToLua.PushObject(L, o);
			LuaDLL.tolua_pushuint64(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readFloat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			SDK.Lib.ByteBuffer o = obj.readFloat(ref arg0);
			ToLua.PushObject(L, o);
			LuaDLL.lua_pushnumber(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readDouble(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			double arg0 = (double)LuaDLL.luaL_checknumber(L, 2);
			SDK.Lib.ByteBuffer o = obj.readDouble(ref arg0);
			ToLua.PushObject(L, o);
			LuaDLL.lua_pushnumber(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readMultiByte(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			string arg0 = ToLua.CheckString(L, 2);
			uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 3);
			SDK.Lib.GkEncode arg2 = (SDK.Lib.GkEncode)ToLua.CheckObject(L, 4, typeof(SDK.Lib.GkEncode));
			SDK.Lib.ByteBuffer o = obj.readMultiByte(ref arg0, arg1, arg2);
			ToLua.PushObject(L, o);
			LuaDLL.lua_pushstring(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readBytes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 3);
			SDK.Lib.ByteBuffer o = obj.readBytes(ref arg0, arg1);
			ToLua.PushObject(L, o);
			ToLua.Push(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeInt8(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			char arg0 = (char)LuaDLL.luaL_checknumber(L, 2);
			obj.writeInt8(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeUnsignedInt8(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			byte arg0 = (byte)LuaDLL.luaL_checknumber(L, 2);
			obj.writeUnsignedInt8(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeInt16(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			short arg0 = (short)LuaDLL.luaL_checknumber(L, 2);
			obj.writeInt16(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeUnsignedInt16(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			ushort arg0 = (ushort)LuaDLL.luaL_checknumber(L, 2);
			obj.writeUnsignedInt16(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeInt32(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.writeInt32(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeUnsignedInt32(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.writeUnsignedInt32(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeInt64(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			obj.writeInt64(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeUnsignedInt64(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			ulong arg0 = LuaDLL.tolua_checkuint64(L, 2);
			obj.writeUnsignedInt64(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeFloat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.writeFloat(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeDouble(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			double arg0 = (double)LuaDLL.luaL_checknumber(L, 2);
			obj.writeDouble(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeBytes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 3);
			uint arg2 = (uint)LuaDLL.luaL_checknumber(L, 4);
			bool arg3 = LuaDLL.luaL_checkboolean(L, 5);
			obj.writeBytes(arg0, arg1, arg2, arg3);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeMultiByte(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			string arg0 = ToLua.CheckString(L, 2);
			SDK.Lib.GkEncode arg1 = (SDK.Lib.GkEncode)ToLua.CheckObject(L, 3, typeof(SDK.Lib.GkEncode));
			int arg2 = (int)LuaDLL.luaL_checknumber(L, 4);
			obj.writeMultiByte(arg0, arg1, arg2);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int insertUnsignedInt32(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.insertUnsignedInt32(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readUnsignedLongByOffset(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			ulong arg0 = LuaDLL.tolua_checkuint64(L, 2);
			uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 3);
			SDK.Lib.ByteBuffer o = obj.readUnsignedLongByOffset(ref arg0, arg1);
			ToLua.PushObject(L, o);
			LuaDLL.tolua_pushuint64(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int end(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			obj.end();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeVector2(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.writeVector2(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeVector3(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.writeVector3(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeVector4(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			UnityEngine.Vector4 arg0 = ToLua.ToVector4(L, 2);
			obj.writeVector4(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readVector2(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			UnityEngine.Vector2 arg0 = ToLua.ToVector2(L, 2);
			obj.readVector2(ref arg0);
			ToLua.Push(L, arg0);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readVector3(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.readVector3(ref arg0);
			ToLua.Push(L, arg0);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readVector4(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			UnityEngine.Vector4 arg0 = ToLua.ToVector4(L, 2);
			obj.readVector4(ref arg0);
			ToLua.Push(L, arg0);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int writeAABB(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			SDK.Lib.MAxisAlignedBox arg0 = (SDK.Lib.MAxisAlignedBox)ToLua.CheckObject(L, 2, typeof(SDK.Lib.MAxisAlignedBox));
			obj.writeAABB(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readAABB(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			SDK.Lib.MAxisAlignedBox arg0 = (SDK.Lib.MAxisAlignedBox)ToLua.CheckObject(L, 2, typeof(SDK.Lib.MAxisAlignedBox));
			obj.readAABB(ref arg0);
			ToLua.PushValue(L, arg0);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int compress(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			SDK.Lib.CompressionAlgorithm arg1 = (SDK.Lib.CompressionAlgorithm)ToLua.CheckObject(L, 3, typeof(SDK.Lib.CompressionAlgorithm));
			uint o = obj.compress(arg0, arg1);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int uncompress(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			SDK.Lib.CompressionAlgorithm arg1 = (SDK.Lib.CompressionAlgorithm)ToLua.CheckObject(L, 3, typeof(SDK.Lib.CompressionAlgorithm));
			uint o = obj.uncompress(arg0, arg1);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int encrypt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			SDK.Lib.CryptContext arg0 = (SDK.Lib.CryptContext)ToLua.CheckObject(L, 2, typeof(SDK.Lib.CryptContext));
			uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 3);
			uint o = obj.encrypt(arg0, arg1);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int decrypt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			SDK.Lib.CryptContext arg0 = (SDK.Lib.CryptContext)ToLua.CheckObject(L, 2, typeof(SDK.Lib.CryptContext));
			uint arg1 = (uint)LuaDLL.luaL_checknumber(L, 3);
			obj.decrypt(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int readBoolean(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ByteBuffer));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			SDK.Lib.ByteBuffer o = obj.readBoolean(ref arg0);
			ToLua.PushObject(L, o);
			LuaDLL.lua_pushboolean(L, arg0);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mWriteFloatBytes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			byte[] ret = obj.mWriteFloatBytes;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mWriteFloatBytes on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mWriteDoubleBytes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			byte[] ret = obj.mWriteDoubleBytes;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mWriteDoubleBytes on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mReadFloatBytes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			byte[] ret = obj.mReadFloatBytes;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mReadFloatBytes on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mReadDoubleBytes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			byte[] ret = obj.mReadDoubleBytes;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mReadDoubleBytes on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_dynBuffer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			SDK.Lib.DynBuffer<byte> ret = obj.dynBuffer;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index dynBuffer on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_bytesAvailable(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			uint ret = obj.bytesAvailable;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index bytesAvailable on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_endian(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			SDK.Lib.EEndian ret = obj.endian;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index endian on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_length(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			uint ret = obj.length;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index length on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_position(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			uint ret = obj.position;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index position on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_luaCSBridgeByteBuffer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			SDK.Lib.LuaCSBridgeByteBuffer ret = obj.luaCSBridgeByteBuffer;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index luaCSBridgeByteBuffer on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mWriteFloatBytes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			obj.mWriteFloatBytes = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mWriteFloatBytes on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mWriteDoubleBytes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			obj.mWriteDoubleBytes = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mWriteDoubleBytes on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mReadFloatBytes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			obj.mReadFloatBytes = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mReadFloatBytes on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mReadDoubleBytes(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			byte[] arg0 = ToLua.CheckByteBuffer(L, 2);
			obj.mReadDoubleBytes = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mReadDoubleBytes on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_endian(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			SDK.Lib.EEndian arg0 = (SDK.Lib.EEndian)ToLua.CheckObject(L, 2, typeof(SDK.Lib.EEndian));
			obj.endian = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index endian on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_length(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.length = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index length on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_position(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.position = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index position on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_luaCSBridgeByteBuffer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.ByteBuffer obj = (SDK.Lib.ByteBuffer)o;
			SDK.Lib.LuaCSBridgeByteBuffer arg0 = (SDK.Lib.LuaCSBridgeByteBuffer)ToLua.CheckObject(L, 2, typeof(SDK.Lib.LuaCSBridgeByteBuffer));
			obj.luaCSBridgeByteBuffer = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index luaCSBridgeByteBuffer on a nil value" : e.Message);
		}
	}
}

