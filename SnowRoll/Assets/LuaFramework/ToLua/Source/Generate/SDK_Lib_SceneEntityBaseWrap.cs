//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SDK_Lib_SceneEntityBaseWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SDK.Lib.SceneEntityBase), typeof(SDK.Lib.GObject));
		L.RegFunction("init", init);
		L.RegFunction("preInit", preInit);
		L.RegFunction("postInit", postInit);
		L.RegFunction("onInit", onInit);
		L.RegFunction("dispose", dispose);
		L.RegFunction("onDestroy", onDestroy);
		L.RegFunction("setThisId", setThisId);
		L.RegFunction("getThisId", getThisId);
		L.RegFunction("show", show);
		L.RegFunction("hide", hide);
		L.RegFunction("IsVisible", IsVisible);
		L.RegFunction("setClientDispose", setClientDispose);
		L.RegFunction("isClientDispose", isClientDispose);
		L.RegFunction("onTick", onTick);
		L.RegFunction("onPreTick", onPreTick);
		L.RegFunction("onPostTick", onPostTick);
		L.RegFunction("gameObject", gameObject);
		L.RegFunction("setGameObject", setGameObject);
		L.RegFunction("transform", transform);
		L.RegFunction("setPnt", setPnt);
		L.RegFunction("getPnt", getPnt);
		L.RegFunction("checkRender", checkRender);
		L.RegFunction("getWorldPosX", getWorldPosX);
		L.RegFunction("getWorldPosY", getWorldPosY);
		L.RegFunction("getWorldPos", getWorldPos);
		L.RegFunction("setArea", setArea);
		L.RegFunction("setDistrict", setDistrict);
		L.RegFunction("setInSceneGraph", setInSceneGraph);
		L.RegFunction("getInSceneGraph", getInSceneGraph);
		L.RegFunction("setPos", setPos);
		L.RegFunction("getPos", getPos);
		L.RegFunction("setRotation", setRotation);
		L.RegFunction("setRotateEulerAngle", setRotateEulerAngle);
		L.RegFunction("getForward", getForward);
		L.RegFunction("getRotate", getRotate);
		L.RegFunction("getRotateEulerAngle", getRotateEulerAngle);
		L.RegFunction("getScale", getScale);
		L.RegFunction("setScale", setScale);
		L.RegFunction("setSelfName", setSelfName);
		L.RegFunction("getBounds", getBounds);
		L.RegFunction("AddRelativeForce", AddRelativeForce);
		L.RegFunction("AddForce", AddForce);
		L.RegFunction("autoHandle", autoHandle);
		L.RegFunction("initRender", initRender);
		L.RegFunction("loadRenderRes", loadRenderRes);
		L.RegFunction("getEntityType", getEntityType);
		L.RegFunction("getRigidbody", getRigidbody);
		L.RegFunction("getEntityUniqueId", getEntityUniqueId);
		L.RegFunction("setEntity_KBE", setEntity_KBE);
		L.RegFunction("updateTransform", updateTransform);
		L.RegFunction("getId", getId);
		L.RegFunction("getEntity", getEntity);
		L.RegFunction("baseCall", baseCall);
		L.RegFunction("cellCall", cellCall);
		L.RegFunction("New", _CreateSDK_Lib_SceneEntityBase);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("mMovement", get_mMovement, set_mMovement);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSDK_Lib_SceneEntityBase(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				SDK.Lib.SceneEntityBase obj = new SDK.Lib.SceneEntityBase();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SDK.Lib.SceneEntityBase.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			obj.init();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int preInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			obj.preInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int postInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			obj.postInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			obj.onInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			obj.dispose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onDestroy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			obj.onDestroy();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setThisId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			uint arg0 = (uint)LuaDLL.luaL_checknumber(L, 2);
			obj.setThisId(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getThisId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			uint o = obj.getThisId();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int show(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			obj.show();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int hide(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			obj.hide();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsVisible(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			bool o = obj.IsVisible();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setClientDispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			obj.setClientDispose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isClientDispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			bool o = obj.isClientDispose();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onTick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.onTick(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onPreTick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.onPreTick(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onPostTick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.onPostTick(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int gameObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.GameObject o = obj.gameObject();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setGameObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.setGameObject(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int transform(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Transform o = obj.transform();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setPnt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.GameObject));
			obj.setPnt(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getPnt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.GameObject o = obj.getPnt();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int checkRender(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			bool o = obj.checkRender();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getWorldPosX(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			float o = obj.getWorldPosX();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getWorldPosY(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			float o = obj.getWorldPosY();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getWorldPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			SDK.Lib.MVector3 o = obj.getWorldPos();
			ToLua.PushValue(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setArea(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			SDK.Lib.Area arg0 = (SDK.Lib.Area)ToLua.CheckObject(L, 2, typeof(SDK.Lib.Area));
			obj.setArea(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDistrict(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			SDK.Lib.MDistrict arg0 = (SDK.Lib.MDistrict)ToLua.CheckObject(L, 2, typeof(SDK.Lib.MDistrict));
			obj.setDistrict(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setInSceneGraph(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.setInSceneGraph(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getInSceneGraph(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			bool o = obj.getInSceneGraph();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.setPos(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Vector3 o = obj.getPos();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setRotation(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Quaternion arg0 = ToLua.ToQuaternion(L, 2);
			obj.setRotation(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setRotateEulerAngle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.setRotateEulerAngle(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getForward(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Vector3 o = obj.getForward();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getRotate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Quaternion o = obj.getRotate();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getRotateEulerAngle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Vector3 o = obj.getRotateEulerAngle();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getScale(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Vector3 o = obj.getScale();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setScale(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.setScale(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setSelfName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			string arg0 = ToLua.CheckString(L, 2);
			obj.setSelfName(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getBounds(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Bounds o = obj.getBounds();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddRelativeForce(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.ForceMode arg1 = (UnityEngine.ForceMode)ToLua.CheckObject(L, 3, typeof(UnityEngine.ForceMode));
			obj.AddRelativeForce(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddForce(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			UnityEngine.ForceMode arg1 = (UnityEngine.ForceMode)ToLua.CheckObject(L, 3, typeof(UnityEngine.ForceMode));
			obj.AddForce(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int autoHandle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			obj.autoHandle();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int initRender(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			obj.initRender();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int loadRenderRes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			obj.loadRenderRes();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getEntityType(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			SDK.Lib.EntityType o = obj.getEntityType();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getRigidbody(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			UnityEngine.Rigidbody o = obj.getRigidbody();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getEntityUniqueId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			string o = obj.getEntityUniqueId();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setEntity_KBE(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			KBEngine.Entity arg0 = (KBEngine.Entity)ToLua.CheckObject(L, 2, typeof(KBEngine.Entity));
			obj.setEntity_KBE(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int updateTransform(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			obj.updateTransform();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getId(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			int o = obj.getId();
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getEntity(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			KBEngine.Entity o = obj.getEntity();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int baseCall(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			string arg0 = ToLua.CheckString(L, 2);
			object[] arg1 = ToLua.ToParamsObject(L, 3, count - 2);
			obj.baseCall(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int cellCall(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)ToLua.CheckObject(L, 1, typeof(SDK.Lib.SceneEntityBase));
			string arg0 = ToLua.CheckString(L, 2);
			object[] arg1 = ToLua.ToParamsObject(L, 3, count - 2);
			obj.cellCall(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mMovement(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)o;
			SDK.Lib.SceneEntityMovement ret = obj.mMovement;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMovement on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mMovement(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.SceneEntityBase obj = (SDK.Lib.SceneEntityBase)o;
			SDK.Lib.SceneEntityMovement arg0 = (SDK.Lib.SceneEntityMovement)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SceneEntityMovement));
			obj.mMovement = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMovement on a nil value" : e.Message);
		}
	}
}

