//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SDK_Lib_CtxWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SDK.Lib.Ctx), typeof(System.Object));
		L.RegFunction("instance", instance);
		L.RegFunction("editorToolInit", editorToolInit);
		L.RegFunction("dispose", dispose);
		L.RegFunction("logicInit", logicInit);
		L.RegFunction("init", init);
		L.RegFunction("setNoDestroyObject", setNoDestroyObject);
		L.RegFunction("unloadAll", unloadAll);
		L.RegFunction("sendSelRole", sendSelRole);
		L.RegFunction("setSelAvatarDBID", setSelAvatarDBID);
		L.RegFunction("New", _CreateSDK_Lib_Ctx);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("mInstance", get_mInstance, set_mInstance);
		L.RegVar("mNetMgr", get_mNetMgr, set_mNetMgr);
		L.RegVar("mCfg", get_mCfg, set_mCfg);
		L.RegVar("mLogSys", get_mLogSys, set_mLogSys);
		L.RegVar("mResLoadMgr", get_mResLoadMgr, set_mResLoadMgr);
		L.RegVar("mInputMgr", get_mInputMgr, set_mInputMgr);
		L.RegVar("mGameSys", get_mGameSys, set_mGameSys);
		L.RegVar("mSceneSys", get_mSceneSys, set_mSceneSys);
		L.RegVar("mTickMgr", get_mTickMgr, set_mTickMgr);
		L.RegVar("mProcessSys", get_mProcessSys, set_mProcessSys);
		L.RegVar("mTimerMgr", get_mTimerMgr, set_mTimerMgr);
		L.RegVar("mFrameTimerMgr", get_mFrameTimerMgr, set_mFrameTimerMgr);
		L.RegVar("mUiMgr", get_mUiMgr, set_mUiMgr);
		L.RegVar("mResizeMgr", get_mResizeMgr, set_mResizeMgr);
		L.RegVar("mCbUIEvent", get_mCbUIEvent, set_mCbUIEvent);
		L.RegVar("mCoroutineMgr", get_mCoroutineMgr, set_mCoroutineMgr);
		L.RegVar("mEngineLoop", get_mEngineLoop, set_mEngineLoop);
		L.RegVar("mGameAttr", get_mGameAttr, set_mGameAttr);
		L.RegVar("mFObjectMgr", get_mFObjectMgr, set_mFObjectMgr);
		L.RegVar("mNpcMgr", get_mNpcMgr, set_mNpcMgr);
		L.RegVar("mPlayerMgr", get_mPlayerMgr, set_mPlayerMgr);
		L.RegVar("mMonsterMgr", get_mMonsterMgr, set_mMonsterMgr);
		L.RegVar("mSpriteAniMgr", get_mSpriteAniMgr, set_mSpriteAniMgr);
		L.RegVar("mShareData", get_mShareData, set_mShareData);
		L.RegVar("mLayerMgr", get_mLayerMgr, set_mLayerMgr);
		L.RegVar("mSceneEventCB", get_mSceneEventCB, set_mSceneEventCB);
		L.RegVar("mCamSys", get_mCamSys, set_mCamSys);
		L.RegVar("mSceneLogic", get_mSceneLogic, set_mSceneLogic);
		L.RegVar("mSysMsgRoute", get_mSysMsgRoute, set_mSysMsgRoute);
		L.RegVar("mNetCmdNotify", get_mNetCmdNotify, set_mNetCmdNotify);
		L.RegVar("mMsgRouteNotify", get_mMsgRouteNotify, set_mMsgRouteNotify);
		L.RegVar("mModuleSys", get_mModuleSys, set_mModuleSys);
		L.RegVar("mTableSys", get_mTableSys, set_mTableSys);
		L.RegVar("mFileSys", get_mFileSys, set_mFileSys);
		L.RegVar("mFactoryBuild", get_mFactoryBuild, set_mFactoryBuild);
		L.RegVar("mLangMgr", get_mLangMgr, set_mLangMgr);
		L.RegVar("mDataPlayer", get_mDataPlayer, set_mDataPlayer);
		L.RegVar("mXmlCfgMgr", get_mXmlCfgMgr, set_mXmlCfgMgr);
		L.RegVar("mMatMgr", get_mMatMgr, set_mMatMgr);
		L.RegVar("mModelMgr", get_mModelMgr, set_mModelMgr);
		L.RegVar("mTexMgr", get_mTexMgr, set_mTexMgr);
		L.RegVar("mSkelAniMgr", get_mSkelAniMgr, set_mSkelAniMgr);
		L.RegVar("mSkinResMgr", get_mSkinResMgr, set_mSkinResMgr);
		L.RegVar("mPrefabMgr", get_mPrefabMgr, set_mPrefabMgr);
		L.RegVar("mControllerMgr", get_mControllerMgr, set_mControllerMgr);
		L.RegVar("mBytesResMgr", get_mBytesResMgr, set_mBytesResMgr);
		L.RegVar("mSpriteMgr", get_mSpriteMgr, set_mSpriteMgr);
		L.RegVar("mSystemSetting", get_mSystemSetting, set_mSystemSetting);
		L.RegVar("mCoordConv", get_mCoordConv, set_mCoordConv);
		L.RegVar("mFlyNumMgr", get_mFlyNumMgr, set_mFlyNumMgr);
		L.RegVar("mTimerMsgHandle", get_mTimerMsgHandle, set_mTimerMsgHandle);
		L.RegVar("mPoolSys", get_mPoolSys, set_mPoolSys);
		L.RegVar("mLoginSys", get_mLoginSys, set_mLoginSys);
		L.RegVar("mWordFilterManager", get_mWordFilterManager, set_mWordFilterManager);
		L.RegVar("mVersionSys", get_mVersionSys, set_mVersionSys);
		L.RegVar("mAutoUpdateSys", get_mAutoUpdateSys, set_mAutoUpdateSys);
		L.RegVar("mTaskQueue", get_mTaskQueue, set_mTaskQueue);
		L.RegVar("mTaskThreadPool", get_mTaskThreadPool, set_mTaskThreadPool);
		L.RegVar("mRandName", get_mRandName, set_mRandName);
		L.RegVar("mPakSys", get_mPakSys, set_mPakSys);
		L.RegVar("mGameRunStage", get_mGameRunStage, set_mGameRunStage);
		L.RegVar("mSoundMgr", get_mSoundMgr, set_mSoundMgr);
		L.RegVar("mMapCfg", get_mMapCfg, set_mMapCfg);
		L.RegVar("mAutoUpdate", get_mAutoUpdate, set_mAutoUpdate);
		L.RegVar("mAtlasMgr", get_mAtlasMgr, set_mAtlasMgr);
		L.RegVar("mAuxUIHelp", get_mAuxUIHelp, set_mAuxUIHelp);
		L.RegVar("mWidgetStyleMgr", get_mWidgetStyleMgr, set_mWidgetStyleMgr);
		L.RegVar("mSceneEffectMgr", get_mSceneEffectMgr, set_mSceneEffectMgr);
		L.RegVar("mSystemFrameData", get_mSystemFrameData, set_mSystemFrameData);
		L.RegVar("mSystemTimeData", get_mSystemTimeData, set_mSystemTimeData);
		L.RegVar("mScriptDynLoad", get_mScriptDynLoad, set_mScriptDynLoad);
		L.RegVar("mScenePlaceHolder", get_mScenePlaceHolder, set_mScenePlaceHolder);
		L.RegVar("mLuaSystem", get_mLuaSystem, set_mLuaSystem);
		L.RegVar("mMovieMgr", get_mMovieMgr, set_mMovieMgr);
		L.RegVar("mNativeInterface", get_mNativeInterface, set_mNativeInterface);
		L.RegVar("mGcAutoCollect", get_mGcAutoCollect, set_mGcAutoCollect);
		L.RegVar("mMemoryCheck", get_mMemoryCheck, set_mMemoryCheck);
		L.RegVar("mDepResMgr", get_mDepResMgr, set_mDepResMgr);
		L.RegVar("mTerrainGroup", get_mTerrainGroup, set_mTerrainGroup);
		L.RegVar("mTextResMgr", get_mTextResMgr, set_mTextResMgr);
		L.RegVar("mSceneManager", get_mSceneManager, set_mSceneManager);
		L.RegVar("mTerrainBufferSys", get_mTerrainBufferSys, set_mTerrainBufferSys);
		L.RegVar("mTerrainGlobalOption", get_mTerrainGlobalOption, set_mTerrainGlobalOption);
		L.RegVar("mCoroutineTaskMgr", get_mCoroutineTaskMgr, set_mCoroutineTaskMgr);
		L.RegVar("mSceneNodeGraph", get_mSceneNodeGraph, set_mSceneNodeGraph);
		L.RegVar("mTerrainEntityMgr", get_mTerrainEntityMgr, set_mTerrainEntityMgr);
		L.RegVar("mResRedirect", get_mResRedirect, set_mResRedirect);
		L.RegVar("mDownloadMgr", get_mDownloadMgr, set_mDownloadMgr);
		L.RegVar("mClientApp", get_mClientApp, set_mClientApp);
		L.RegVar("mSnowBlockMgr", get_mSnowBlockMgr, set_mSnowBlockMgr);
		L.RegVar("mPlayerSnowBlockMgr", get_mPlayerSnowBlockMgr, set_mPlayerSnowBlockMgr);
		L.RegVar("mFrameCollideMgr", get_mFrameCollideMgr, set_mFrameCollideMgr);
		L.RegVar("mSnowBallCfg", get_mSnowBallCfg, set_mSnowBallCfg);
		L.RegVar("mHudSystem", get_mHudSystem, set_mHudSystem);
		L.RegVar("mGlobalDelegate", get_mGlobalDelegate, set_mGlobalDelegate);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSDK_Lib_Ctx(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				SDK.Lib.Ctx obj = new SDK.Lib.Ctx();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SDK.Lib.Ctx.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int instance(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			SDK.Lib.Ctx o = SDK.Lib.Ctx.instance();
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int editorToolInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)ToLua.CheckObject(L, 1, typeof(SDK.Lib.Ctx));
			obj.editorToolInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)ToLua.CheckObject(L, 1, typeof(SDK.Lib.Ctx));
			obj.dispose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int logicInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)ToLua.CheckObject(L, 1, typeof(SDK.Lib.Ctx));
			obj.logicInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)ToLua.CheckObject(L, 1, typeof(SDK.Lib.Ctx));
			obj.init();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setNoDestroyObject(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)ToLua.CheckObject(L, 1, typeof(SDK.Lib.Ctx));
			obj.setNoDestroyObject();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int unloadAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)ToLua.CheckObject(L, 1, typeof(SDK.Lib.Ctx));
			obj.unloadAll();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int sendSelRole(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)ToLua.CheckObject(L, 1, typeof(SDK.Lib.Ctx));
			obj.sendSelRole();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setSelAvatarDBID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)ToLua.CheckObject(L, 1, typeof(SDK.Lib.Ctx));
			ulong arg0 = LuaDLL.tolua_checkuint64(L, 2);
			obj.setSelAvatarDBID(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mInstance(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, SDK.Lib.Ctx.mInstance);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mNetMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.NetworkMgr ret = obj.mNetMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mNetMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mCfg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.Config ret = obj.mCfg;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCfg on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mLogSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.LogSys ret = obj.mLogSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLogSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mResLoadMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ResLoadMgr ret = obj.mResLoadMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mResLoadMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mInputMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.InputMgr ret = obj.mInputMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mInputMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mGameSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.IGameSys ret = obj.mGameSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGameSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSceneSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SceneSys ret = obj.mSceneSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSceneSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mTickMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TickMgr ret = obj.mTickMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTickMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mProcessSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ProcessSys ret = obj.mProcessSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mProcessSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mTimerMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TimerMgr ret = obj.mTimerMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTimerMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mFrameTimerMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.FrameTimerMgr ret = obj.mFrameTimerMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFrameTimerMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mUiMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.UIMgr ret = obj.mUiMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mUiMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mResizeMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ResizeMgr ret = obj.mResizeMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mResizeMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mCbUIEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.IUIEvent ret = obj.mCbUIEvent;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCbUIEvent on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mCoroutineMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.CoroutineMgr ret = obj.mCoroutineMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCoroutineMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mEngineLoop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.EngineLoop ret = obj.mEngineLoop;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mEngineLoop on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mGameAttr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.GameAttr ret = obj.mGameAttr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGameAttr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mFObjectMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.FObjectMgr ret = obj.mFObjectMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFObjectMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mNpcMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.NpcMgr ret = obj.mNpcMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mNpcMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mPlayerMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.PlayerMgr ret = obj.mPlayerMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPlayerMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mMonsterMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MonsterMgr ret = obj.mMonsterMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMonsterMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSpriteAniMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SpriteAniMgr ret = obj.mSpriteAniMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSpriteAniMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mShareData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ShareData ret = obj.mShareData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mShareData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mLayerMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.LayerMgr ret = obj.mLayerMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLayerMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSceneEventCB(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ISceneEventCB ret = obj.mSceneEventCB;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSceneEventCB on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mCamSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.CamSys ret = obj.mCamSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCamSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSceneLogic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ISceneLogic ret = obj.mSceneLogic;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSceneLogic on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSysMsgRoute(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SysMsgRoute ret = obj.mSysMsgRoute;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSysMsgRoute on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mNetCmdNotify(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.NetCmdNotify ret = obj.mNetCmdNotify;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mNetCmdNotify on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mMsgRouteNotify(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MsgRouteNotify ret = obj.mMsgRouteNotify;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMsgRouteNotify on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mModuleSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.IModuleSys ret = obj.mModuleSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mModuleSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mTableSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TableSys ret = obj.mTableSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTableSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mFileSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MFileSys ret = obj.mFileSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFileSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mFactoryBuild(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.FactoryBuild ret = obj.mFactoryBuild;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFactoryBuild on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mLangMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.LangMgr ret = obj.mLangMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLangMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mDataPlayer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.DataPlayer ret = obj.mDataPlayer;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mDataPlayer on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mXmlCfgMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.XmlCfgMgr ret = obj.mXmlCfgMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mXmlCfgMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mMatMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MaterialMgr ret = obj.mMatMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMatMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mModelMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ModelMgr ret = obj.mModelMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mModelMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mTexMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TextureMgr ret = obj.mTexMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTexMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSkelAniMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SkelAniMgr ret = obj.mSkelAniMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSkelAniMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSkinResMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SkinResMgr ret = obj.mSkinResMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSkinResMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mPrefabMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.PrefabMgr ret = obj.mPrefabMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPrefabMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mControllerMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ControllerMgr ret = obj.mControllerMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mControllerMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mBytesResMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.BytesResMgr ret = obj.mBytesResMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mBytesResMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSpriteMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SpriteMgr ret = obj.mSpriteMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSpriteMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSystemSetting(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SystemSetting ret = obj.mSystemSetting;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSystemSetting on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mCoordConv(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.CoordConv ret = obj.mCoordConv;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCoordConv on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mFlyNumMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.FlyNumMgr ret = obj.mFlyNumMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFlyNumMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mTimerMsgHandle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TimerMsgHandle ret = obj.mTimerMsgHandle;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTimerMsgHandle on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mPoolSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.PoolSys ret = obj.mPoolSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPoolSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mLoginSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ILoginSys ret = obj.mLoginSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLoginSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mWordFilterManager(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.WordFilterManager ret = obj.mWordFilterManager;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mWordFilterManager on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mVersionSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.VersionSys ret = obj.mVersionSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mVersionSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mAutoUpdateSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.AutoUpdateSys ret = obj.mAutoUpdateSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAutoUpdateSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mTaskQueue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TaskQueue ret = obj.mTaskQueue;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTaskQueue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mTaskThreadPool(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TaskThreadPool ret = obj.mTaskThreadPool;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTaskThreadPool on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mRandName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.RandName ret = obj.mRandName;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mRandName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mPakSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.PakSys ret = obj.mPakSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPakSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mGameRunStage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.GameRunStage ret = obj.mGameRunStage;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGameRunStage on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSoundMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SoundMgr ret = obj.mSoundMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSoundMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mMapCfg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MapCfg ret = obj.mMapCfg;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMapCfg on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mAutoUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.IAutoUpdate ret = obj.mAutoUpdate;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAutoUpdate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mAtlasMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.AtlasMgr ret = obj.mAtlasMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAtlasMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mAuxUIHelp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.AuxUIHelp ret = obj.mAuxUIHelp;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAuxUIHelp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mWidgetStyleMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.WidgetStyleMgr ret = obj.mWidgetStyleMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mWidgetStyleMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSceneEffectMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SceneEffectMgr ret = obj.mSceneEffectMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSceneEffectMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSystemFrameData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SystemFrameData ret = obj.mSystemFrameData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSystemFrameData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSystemTimeData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SystemTimeData ret = obj.mSystemTimeData;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSystemTimeData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mScriptDynLoad(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ScriptDynLoad ret = obj.mScriptDynLoad;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mScriptDynLoad on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mScenePlaceHolder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ScenePlaceHolder ret = obj.mScenePlaceHolder;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mScenePlaceHolder on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mLuaSystem(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.LuaSystem ret = obj.mLuaSystem;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLuaSystem on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mMovieMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MovieMgr ret = obj.mMovieMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMovieMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mNativeInterface(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.NativeInterface ret = obj.mNativeInterface;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mNativeInterface on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mGcAutoCollect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.GCAutoCollect ret = obj.mGcAutoCollect;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGcAutoCollect on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mMemoryCheck(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MemoryCheck ret = obj.mMemoryCheck;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMemoryCheck on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mDepResMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.DepResMgr ret = obj.mDepResMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mDepResMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mTerrainGroup(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MTerrainGroup ret = obj.mTerrainGroup;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTerrainGroup on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mTextResMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TextResMgr ret = obj.mTextResMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTextResMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSceneManager(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MSceneManager ret = obj.mSceneManager;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSceneManager on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mTerrainBufferSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TerrainBufferSys ret = obj.mTerrainBufferSys;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTerrainBufferSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mTerrainGlobalOption(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TerrainGlobalOption ret = obj.mTerrainGlobalOption;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTerrainGlobalOption on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mCoroutineTaskMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.CoroutineTaskMgr ret = obj.mCoroutineTaskMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCoroutineTaskMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSceneNodeGraph(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SceneNodeGraph ret = obj.mSceneNodeGraph;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSceneNodeGraph on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mTerrainEntityMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TerrainEntityMgr ret = obj.mTerrainEntityMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTerrainEntityMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mResRedirect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ResRedirect ret = obj.mResRedirect;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mResRedirect on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mDownloadMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.DownloadMgr ret = obj.mDownloadMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mDownloadMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mClientApp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			clientapp ret = obj.mClientApp;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mClientApp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSnowBlockMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SnowBlockMgr ret = obj.mSnowBlockMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSnowBlockMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mPlayerSnowBlockMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.PlayerSnowBlockMgr ret = obj.mPlayerSnowBlockMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPlayerSnowBlockMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mFrameCollideMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.FrameCollideMgr ret = obj.mFrameCollideMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFrameCollideMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mSnowBallCfg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SnowBallCfg ret = obj.mSnowBallCfg;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSnowBallCfg on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mHudSystem(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.HudSystem ret = obj.mHudSystem;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mHudSystem on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mGlobalDelegate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.GlobalDelegate ret = obj.mGlobalDelegate;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGlobalDelegate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mInstance(IntPtr L)
	{
		try
		{
			SDK.Lib.Ctx arg0 = (SDK.Lib.Ctx)ToLua.CheckObject(L, 2, typeof(SDK.Lib.Ctx));
			SDK.Lib.Ctx.mInstance = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mNetMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.NetworkMgr arg0 = (SDK.Lib.NetworkMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.NetworkMgr));
			obj.mNetMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mNetMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mCfg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.Config arg0 = (SDK.Lib.Config)ToLua.CheckObject(L, 2, typeof(SDK.Lib.Config));
			obj.mCfg = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCfg on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mLogSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.LogSys arg0 = (SDK.Lib.LogSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.LogSys));
			obj.mLogSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLogSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mResLoadMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ResLoadMgr arg0 = (SDK.Lib.ResLoadMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ResLoadMgr));
			obj.mResLoadMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mResLoadMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mInputMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.InputMgr arg0 = (SDK.Lib.InputMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.InputMgr));
			obj.mInputMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mInputMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mGameSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.IGameSys arg0 = (SDK.Lib.IGameSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.IGameSys));
			obj.mGameSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGameSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSceneSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SceneSys arg0 = (SDK.Lib.SceneSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SceneSys));
			obj.mSceneSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSceneSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mTickMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TickMgr arg0 = (SDK.Lib.TickMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.TickMgr));
			obj.mTickMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTickMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mProcessSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ProcessSys arg0 = (SDK.Lib.ProcessSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ProcessSys));
			obj.mProcessSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mProcessSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mTimerMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TimerMgr arg0 = (SDK.Lib.TimerMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.TimerMgr));
			obj.mTimerMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTimerMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mFrameTimerMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.FrameTimerMgr arg0 = (SDK.Lib.FrameTimerMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.FrameTimerMgr));
			obj.mFrameTimerMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFrameTimerMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mUiMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.UIMgr arg0 = (SDK.Lib.UIMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.UIMgr));
			obj.mUiMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mUiMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mResizeMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ResizeMgr arg0 = (SDK.Lib.ResizeMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ResizeMgr));
			obj.mResizeMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mResizeMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mCbUIEvent(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.IUIEvent arg0 = (SDK.Lib.IUIEvent)ToLua.CheckObject(L, 2, typeof(SDK.Lib.IUIEvent));
			obj.mCbUIEvent = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCbUIEvent on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mCoroutineMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.CoroutineMgr arg0 = (SDK.Lib.CoroutineMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.CoroutineMgr));
			obj.mCoroutineMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCoroutineMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mEngineLoop(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.EngineLoop arg0 = (SDK.Lib.EngineLoop)ToLua.CheckObject(L, 2, typeof(SDK.Lib.EngineLoop));
			obj.mEngineLoop = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mEngineLoop on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mGameAttr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.GameAttr arg0 = (SDK.Lib.GameAttr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.GameAttr));
			obj.mGameAttr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGameAttr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mFObjectMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.FObjectMgr arg0 = (SDK.Lib.FObjectMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.FObjectMgr));
			obj.mFObjectMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFObjectMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mNpcMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.NpcMgr arg0 = (SDK.Lib.NpcMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.NpcMgr));
			obj.mNpcMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mNpcMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mPlayerMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.PlayerMgr arg0 = (SDK.Lib.PlayerMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.PlayerMgr));
			obj.mPlayerMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPlayerMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mMonsterMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MonsterMgr arg0 = (SDK.Lib.MonsterMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.MonsterMgr));
			obj.mMonsterMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMonsterMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSpriteAniMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SpriteAniMgr arg0 = (SDK.Lib.SpriteAniMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SpriteAniMgr));
			obj.mSpriteAniMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSpriteAniMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mShareData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ShareData arg0 = (SDK.Lib.ShareData)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ShareData));
			obj.mShareData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mShareData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mLayerMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.LayerMgr arg0 = (SDK.Lib.LayerMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.LayerMgr));
			obj.mLayerMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLayerMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSceneEventCB(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ISceneEventCB arg0 = (SDK.Lib.ISceneEventCB)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ISceneEventCB));
			obj.mSceneEventCB = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSceneEventCB on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mCamSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.CamSys arg0 = (SDK.Lib.CamSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.CamSys));
			obj.mCamSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCamSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSceneLogic(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ISceneLogic arg0 = (SDK.Lib.ISceneLogic)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ISceneLogic));
			obj.mSceneLogic = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSceneLogic on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSysMsgRoute(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SysMsgRoute arg0 = (SDK.Lib.SysMsgRoute)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SysMsgRoute));
			obj.mSysMsgRoute = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSysMsgRoute on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mNetCmdNotify(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.NetCmdNotify arg0 = (SDK.Lib.NetCmdNotify)ToLua.CheckObject(L, 2, typeof(SDK.Lib.NetCmdNotify));
			obj.mNetCmdNotify = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mNetCmdNotify on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mMsgRouteNotify(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MsgRouteNotify arg0 = (SDK.Lib.MsgRouteNotify)ToLua.CheckObject(L, 2, typeof(SDK.Lib.MsgRouteNotify));
			obj.mMsgRouteNotify = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMsgRouteNotify on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mModuleSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.IModuleSys arg0 = (SDK.Lib.IModuleSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.IModuleSys));
			obj.mModuleSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mModuleSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mTableSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TableSys arg0 = (SDK.Lib.TableSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.TableSys));
			obj.mTableSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTableSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mFileSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MFileSys arg0 = (SDK.Lib.MFileSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.MFileSys));
			obj.mFileSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFileSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mFactoryBuild(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.FactoryBuild arg0 = (SDK.Lib.FactoryBuild)ToLua.CheckObject(L, 2, typeof(SDK.Lib.FactoryBuild));
			obj.mFactoryBuild = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFactoryBuild on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mLangMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.LangMgr arg0 = (SDK.Lib.LangMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.LangMgr));
			obj.mLangMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLangMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mDataPlayer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.DataPlayer arg0 = (SDK.Lib.DataPlayer)ToLua.CheckObject(L, 2, typeof(SDK.Lib.DataPlayer));
			obj.mDataPlayer = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mDataPlayer on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mXmlCfgMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.XmlCfgMgr arg0 = (SDK.Lib.XmlCfgMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.XmlCfgMgr));
			obj.mXmlCfgMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mXmlCfgMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mMatMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MaterialMgr arg0 = (SDK.Lib.MaterialMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.MaterialMgr));
			obj.mMatMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMatMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mModelMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ModelMgr arg0 = (SDK.Lib.ModelMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ModelMgr));
			obj.mModelMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mModelMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mTexMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TextureMgr arg0 = (SDK.Lib.TextureMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.TextureMgr));
			obj.mTexMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTexMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSkelAniMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SkelAniMgr arg0 = (SDK.Lib.SkelAniMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SkelAniMgr));
			obj.mSkelAniMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSkelAniMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSkinResMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SkinResMgr arg0 = (SDK.Lib.SkinResMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SkinResMgr));
			obj.mSkinResMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSkinResMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mPrefabMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.PrefabMgr arg0 = (SDK.Lib.PrefabMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.PrefabMgr));
			obj.mPrefabMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPrefabMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mControllerMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ControllerMgr arg0 = (SDK.Lib.ControllerMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ControllerMgr));
			obj.mControllerMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mControllerMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mBytesResMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.BytesResMgr arg0 = (SDK.Lib.BytesResMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.BytesResMgr));
			obj.mBytesResMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mBytesResMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSpriteMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SpriteMgr arg0 = (SDK.Lib.SpriteMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SpriteMgr));
			obj.mSpriteMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSpriteMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSystemSetting(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SystemSetting arg0 = (SDK.Lib.SystemSetting)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SystemSetting));
			obj.mSystemSetting = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSystemSetting on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mCoordConv(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.CoordConv arg0 = (SDK.Lib.CoordConv)ToLua.CheckObject(L, 2, typeof(SDK.Lib.CoordConv));
			obj.mCoordConv = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCoordConv on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mFlyNumMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.FlyNumMgr arg0 = (SDK.Lib.FlyNumMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.FlyNumMgr));
			obj.mFlyNumMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFlyNumMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mTimerMsgHandle(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TimerMsgHandle arg0 = (SDK.Lib.TimerMsgHandle)ToLua.CheckObject(L, 2, typeof(SDK.Lib.TimerMsgHandle));
			obj.mTimerMsgHandle = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTimerMsgHandle on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mPoolSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.PoolSys arg0 = (SDK.Lib.PoolSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.PoolSys));
			obj.mPoolSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPoolSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mLoginSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ILoginSys arg0 = (SDK.Lib.ILoginSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ILoginSys));
			obj.mLoginSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLoginSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mWordFilterManager(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.WordFilterManager arg0 = (SDK.Lib.WordFilterManager)ToLua.CheckObject(L, 2, typeof(SDK.Lib.WordFilterManager));
			obj.mWordFilterManager = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mWordFilterManager on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mVersionSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.VersionSys arg0 = (SDK.Lib.VersionSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.VersionSys));
			obj.mVersionSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mVersionSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mAutoUpdateSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.AutoUpdateSys arg0 = (SDK.Lib.AutoUpdateSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.AutoUpdateSys));
			obj.mAutoUpdateSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAutoUpdateSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mTaskQueue(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TaskQueue arg0 = (SDK.Lib.TaskQueue)ToLua.CheckObject(L, 2, typeof(SDK.Lib.TaskQueue));
			obj.mTaskQueue = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTaskQueue on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mTaskThreadPool(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TaskThreadPool arg0 = (SDK.Lib.TaskThreadPool)ToLua.CheckObject(L, 2, typeof(SDK.Lib.TaskThreadPool));
			obj.mTaskThreadPool = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTaskThreadPool on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mRandName(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.RandName arg0 = (SDK.Lib.RandName)ToLua.CheckObject(L, 2, typeof(SDK.Lib.RandName));
			obj.mRandName = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mRandName on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mPakSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.PakSys arg0 = (SDK.Lib.PakSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.PakSys));
			obj.mPakSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPakSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mGameRunStage(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.GameRunStage arg0 = (SDK.Lib.GameRunStage)ToLua.CheckObject(L, 2, typeof(SDK.Lib.GameRunStage));
			obj.mGameRunStage = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGameRunStage on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSoundMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SoundMgr arg0 = (SDK.Lib.SoundMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SoundMgr));
			obj.mSoundMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSoundMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mMapCfg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MapCfg arg0 = (SDK.Lib.MapCfg)ToLua.CheckObject(L, 2, typeof(SDK.Lib.MapCfg));
			obj.mMapCfg = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMapCfg on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mAutoUpdate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.IAutoUpdate arg0 = (SDK.Lib.IAutoUpdate)ToLua.CheckObject(L, 2, typeof(SDK.Lib.IAutoUpdate));
			obj.mAutoUpdate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAutoUpdate on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mAtlasMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.AtlasMgr arg0 = (SDK.Lib.AtlasMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.AtlasMgr));
			obj.mAtlasMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAtlasMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mAuxUIHelp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.AuxUIHelp arg0 = (SDK.Lib.AuxUIHelp)ToLua.CheckObject(L, 2, typeof(SDK.Lib.AuxUIHelp));
			obj.mAuxUIHelp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mAuxUIHelp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mWidgetStyleMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.WidgetStyleMgr arg0 = (SDK.Lib.WidgetStyleMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.WidgetStyleMgr));
			obj.mWidgetStyleMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mWidgetStyleMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSceneEffectMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SceneEffectMgr arg0 = (SDK.Lib.SceneEffectMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SceneEffectMgr));
			obj.mSceneEffectMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSceneEffectMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSystemFrameData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SystemFrameData arg0 = (SDK.Lib.SystemFrameData)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SystemFrameData));
			obj.mSystemFrameData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSystemFrameData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSystemTimeData(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SystemTimeData arg0 = (SDK.Lib.SystemTimeData)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SystemTimeData));
			obj.mSystemTimeData = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSystemTimeData on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mScriptDynLoad(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ScriptDynLoad arg0 = (SDK.Lib.ScriptDynLoad)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ScriptDynLoad));
			obj.mScriptDynLoad = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mScriptDynLoad on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mScenePlaceHolder(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ScenePlaceHolder arg0 = (SDK.Lib.ScenePlaceHolder)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ScenePlaceHolder));
			obj.mScenePlaceHolder = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mScenePlaceHolder on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mLuaSystem(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.LuaSystem arg0 = (SDK.Lib.LuaSystem)ToLua.CheckObject(L, 2, typeof(SDK.Lib.LuaSystem));
			obj.mLuaSystem = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mLuaSystem on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mMovieMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MovieMgr arg0 = (SDK.Lib.MovieMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.MovieMgr));
			obj.mMovieMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMovieMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mNativeInterface(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.NativeInterface arg0 = (SDK.Lib.NativeInterface)ToLua.CheckObject(L, 2, typeof(SDK.Lib.NativeInterface));
			obj.mNativeInterface = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mNativeInterface on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mGcAutoCollect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.GCAutoCollect arg0 = (SDK.Lib.GCAutoCollect)ToLua.CheckObject(L, 2, typeof(SDK.Lib.GCAutoCollect));
			obj.mGcAutoCollect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGcAutoCollect on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mMemoryCheck(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MemoryCheck arg0 = (SDK.Lib.MemoryCheck)ToLua.CheckObject(L, 2, typeof(SDK.Lib.MemoryCheck));
			obj.mMemoryCheck = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mMemoryCheck on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mDepResMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.DepResMgr arg0 = (SDK.Lib.DepResMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.DepResMgr));
			obj.mDepResMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mDepResMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mTerrainGroup(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MTerrainGroup arg0 = (SDK.Lib.MTerrainGroup)ToLua.CheckObject(L, 2, typeof(SDK.Lib.MTerrainGroup));
			obj.mTerrainGroup = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTerrainGroup on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mTextResMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TextResMgr arg0 = (SDK.Lib.TextResMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.TextResMgr));
			obj.mTextResMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTextResMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSceneManager(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.MSceneManager arg0 = (SDK.Lib.MSceneManager)ToLua.CheckObject(L, 2, typeof(SDK.Lib.MSceneManager));
			obj.mSceneManager = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSceneManager on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mTerrainBufferSys(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TerrainBufferSys arg0 = (SDK.Lib.TerrainBufferSys)ToLua.CheckObject(L, 2, typeof(SDK.Lib.TerrainBufferSys));
			obj.mTerrainBufferSys = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTerrainBufferSys on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mTerrainGlobalOption(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TerrainGlobalOption arg0 = (SDK.Lib.TerrainGlobalOption)ToLua.CheckObject(L, 2, typeof(SDK.Lib.TerrainGlobalOption));
			obj.mTerrainGlobalOption = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTerrainGlobalOption on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mCoroutineTaskMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.CoroutineTaskMgr arg0 = (SDK.Lib.CoroutineTaskMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.CoroutineTaskMgr));
			obj.mCoroutineTaskMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mCoroutineTaskMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSceneNodeGraph(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SceneNodeGraph arg0 = (SDK.Lib.SceneNodeGraph)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SceneNodeGraph));
			obj.mSceneNodeGraph = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSceneNodeGraph on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mTerrainEntityMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.TerrainEntityMgr arg0 = (SDK.Lib.TerrainEntityMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.TerrainEntityMgr));
			obj.mTerrainEntityMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mTerrainEntityMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mResRedirect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.ResRedirect arg0 = (SDK.Lib.ResRedirect)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ResRedirect));
			obj.mResRedirect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mResRedirect on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mDownloadMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.DownloadMgr arg0 = (SDK.Lib.DownloadMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.DownloadMgr));
			obj.mDownloadMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mDownloadMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mClientApp(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			clientapp arg0 = (clientapp)ToLua.CheckUnityObject(L, 2, typeof(clientapp));
			obj.mClientApp = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mClientApp on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSnowBlockMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SnowBlockMgr arg0 = (SDK.Lib.SnowBlockMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SnowBlockMgr));
			obj.mSnowBlockMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSnowBlockMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mPlayerSnowBlockMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.PlayerSnowBlockMgr arg0 = (SDK.Lib.PlayerSnowBlockMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.PlayerSnowBlockMgr));
			obj.mPlayerSnowBlockMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPlayerSnowBlockMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mFrameCollideMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.FrameCollideMgr arg0 = (SDK.Lib.FrameCollideMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.FrameCollideMgr));
			obj.mFrameCollideMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mFrameCollideMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mSnowBallCfg(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.SnowBallCfg arg0 = (SDK.Lib.SnowBallCfg)ToLua.CheckObject(L, 2, typeof(SDK.Lib.SnowBallCfg));
			obj.mSnowBallCfg = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mSnowBallCfg on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mHudSystem(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.HudSystem arg0 = (SDK.Lib.HudSystem)ToLua.CheckObject(L, 2, typeof(SDK.Lib.HudSystem));
			obj.mHudSystem = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mHudSystem on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mGlobalDelegate(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.Ctx obj = (SDK.Lib.Ctx)o;
			SDK.Lib.GlobalDelegate arg0 = (SDK.Lib.GlobalDelegate)ToLua.CheckObject(L, 2, typeof(SDK.Lib.GlobalDelegate));
			obj.mGlobalDelegate = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mGlobalDelegate on a nil value" : e.Message);
		}
	}
}

