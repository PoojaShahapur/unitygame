//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SDK_Lib_PlayerMainWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SDK.Lib.PlayerMain), typeof(SDK.Lib.Player));
		L.RegFunction("onSkeletonLoaded", onSkeletonLoaded);
		L.RegFunction("evtMove", evtMove);
		L.RegFunction("Do", Do);
		L.RegFunction("initRender", initRender);
		L.RegFunction("preInit", preInit);
		L.RegFunction("postInit", postInit);
		L.RegFunction("dispose", dispose);
		L.RegFunction("autoHandle", autoHandle);
		L.RegFunction("onPreTick", onPreTick);
		L.RegFunction("setPos", setPos);
		L.RegFunction("setDestPos", setDestPos);
		L.RegFunction("emitSnowBlock", emitSnowBlock);
		L.RegFunction("setName", setName);
		L.RegFunction("addChildChangedHandle", addChildChangedHandle);
		L.RegFunction("onChildChanged", onChildChanged);
		L.RegFunction("getDeltaPos", getDeltaPos);
		L.RegFunction("onChildMassChanged", onChildMassChanged);
		L.RegFunction("New", _CreateSDK_Lib_PlayerMain);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSDK_Lib_PlayerMain(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				SDK.Lib.PlayerMain obj = new SDK.Lib.PlayerMain();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SDK.Lib.PlayerMain.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onSkeletonLoaded(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			obj.onSkeletonLoaded();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int evtMove(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			obj.evtMove();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Do(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 5);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			UnityEngine.Transform arg0 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 2, typeof(UnityEngine.Transform));
			UnityEngine.Transform arg1 = (UnityEngine.Transform)ToLua.CheckUnityObject(L, 3, typeof(UnityEngine.Transform));
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			float arg3 = (float)LuaDLL.luaL_checknumber(L, 5);
			obj.Do(arg0, arg1, ref arg2, ref arg3);
			LuaDLL.lua_pushnumber(L, arg2);
			LuaDLL.lua_pushnumber(L, arg3);
			return 2;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int initRender(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			obj.initRender();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int preInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			obj.preInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int postInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			obj.postInit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			obj.dispose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int autoHandle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			obj.autoHandle();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onPreTick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.onPreTick(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.setPos(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDestPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.setDestPos(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int emitSnowBlock(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			obj.emitSnowBlock();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			string arg0 = ToLua.CheckString(L, 2);
			obj.setName(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int addChildChangedHandle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			SDK.Lib.ICalleeObject arg0 = (SDK.Lib.ICalleeObject)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ICalleeObject));
			SDK.Lib.MAction<SDK.Lib.IDispatchObject> arg1 = null;
			LuaTypes funcType3 = LuaDLL.lua_type(L, 3);

			if (funcType3 != LuaTypes.LUA_TFUNCTION)
			{
				 arg1 = (SDK.Lib.MAction<SDK.Lib.IDispatchObject>)ToLua.CheckObject(L, 3, typeof(SDK.Lib.MAction<SDK.Lib.IDispatchObject>));
			}
			else
			{
				LuaFunction func = ToLua.ToLuaFunction(L, 3);
				arg1 = DelegateFactory.CreateDelegate(typeof(SDK.Lib.MAction<SDK.Lib.IDispatchObject>), func) as SDK.Lib.MAction<SDK.Lib.IDispatchObject>;
			}

			obj.addChildChangedHandle(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onChildChanged(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			obj.onChildChanged();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getDeltaPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			UnityEngine.Vector3 o = obj.getDeltaPos();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onChildMassChanged(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.PlayerMain obj = (SDK.Lib.PlayerMain)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerMain));
			SDK.Lib.IDispatchObject arg0 = (SDK.Lib.IDispatchObject)ToLua.CheckObject(L, 2, typeof(SDK.Lib.IDispatchObject));
			obj.onChildMassChanged(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

