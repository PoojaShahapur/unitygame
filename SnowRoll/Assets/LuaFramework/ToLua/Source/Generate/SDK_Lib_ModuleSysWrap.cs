//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SDK_Lib_ModuleSysWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SDK.Lib.ModuleSys), typeof(System.Object));
		L.RegFunction("loadModule", loadModule);
		L.RegFunction("unloadModule", unloadModule);
		L.RegFunction("onLoginLoadEventHandle", onLoginLoadEventHandle);
		L.RegFunction("onGameLoadEventHandle", onGameLoadEventHandle);
		L.RegFunction("onAutoUpdateLoadEventHandle", onAutoUpdateLoadEventHandle);
		L.RegFunction("onModuleFailed", onModuleFailed);
		L.RegFunction("New", _CreateSDK_Lib_ModuleSys);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSDK_Lib_ModuleSys(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				SDK.Lib.ModuleSys obj = new SDK.Lib.ModuleSys();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SDK.Lib.ModuleSys.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int loadModule(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ModuleSys obj = (SDK.Lib.ModuleSys)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ModuleSys));
			SDK.Lib.ModuleId arg0 = (SDK.Lib.ModuleId)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ModuleId));
			obj.loadModule(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int unloadModule(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ModuleSys obj = (SDK.Lib.ModuleSys)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ModuleSys));
			SDK.Lib.ModuleId arg0 = (SDK.Lib.ModuleId)ToLua.CheckObject(L, 2, typeof(SDK.Lib.ModuleId));
			obj.unloadModule(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onLoginLoadEventHandle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ModuleSys obj = (SDK.Lib.ModuleSys)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ModuleSys));
			SDK.Lib.IDispatchObject arg0 = (SDK.Lib.IDispatchObject)ToLua.CheckObject(L, 2, typeof(SDK.Lib.IDispatchObject));
			obj.onLoginLoadEventHandle(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onGameLoadEventHandle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ModuleSys obj = (SDK.Lib.ModuleSys)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ModuleSys));
			SDK.Lib.IDispatchObject arg0 = (SDK.Lib.IDispatchObject)ToLua.CheckObject(L, 2, typeof(SDK.Lib.IDispatchObject));
			obj.onGameLoadEventHandle(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onAutoUpdateLoadEventHandle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ModuleSys obj = (SDK.Lib.ModuleSys)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ModuleSys));
			SDK.Lib.IDispatchObject arg0 = (SDK.Lib.IDispatchObject)ToLua.CheckObject(L, 2, typeof(SDK.Lib.IDispatchObject));
			obj.onAutoUpdateLoadEventHandle(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onModuleFailed(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.ModuleSys obj = (SDK.Lib.ModuleSys)ToLua.CheckObject(L, 1, typeof(SDK.Lib.ModuleSys));
			SDK.Lib.IDispatchObject arg0 = (SDK.Lib.IDispatchObject)ToLua.CheckObject(L, 2, typeof(SDK.Lib.IDispatchObject));
			obj.onModuleFailed(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

