//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class SDK_Lib_PlayerSplitMergeWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(SDK.Lib.PlayerSplitMerge), typeof(System.Object));
		L.RegFunction("init", init);
		L.RegFunction("dispose", dispose);
		L.RegFunction("onTick", onTick);
		L.RegFunction("getTargetLength", getTargetLength);
		L.RegFunction("getTargetPoint", getTargetPoint);
		L.RegFunction("getCenterPoint", getCenterPoint);
		L.RegFunction("addToParent", addToParent);
		L.RegFunction("removeFormParent", removeFormParent);
		L.RegFunction("getAllChildMovement", getAllChildMovement);
		L.RegFunction("getMaxCameraLength", getMaxCameraLength);
		L.RegFunction("startSplit", startSplit);
		L.RegFunction("calcTargetPoint", calcTargetPoint);
		L.RegFunction("updateChildDestDir", updateChildDestDir);
		L.RegFunction("addMerge", addMerge);
		L.RegFunction("removeMerge", removeMerge);
		L.RegFunction("isExistMerge", isExistMerge);
		L.RegFunction("emitSnowBlock", emitSnowBlock);
		L.RegFunction("setDestPos", setDestPos);
		L.RegFunction("setName", setName);
		L.RegFunction("updateCenterPos", updateCenterPos);
		L.RegFunction("getAllChildMass", getAllChildMass);
		L.RegFunction("moveToCenter", moveToCenter);
		L.RegFunction("New", _CreateSDK_Lib_PlayerSplitMerge);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("mPlayerChildMgr", get_mPlayerChildMgr, set_mPlayerChildMgr);
		L.RegVar("mRangeBox", get_mRangeBox, set_mRangeBox);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateSDK_Lib_PlayerSplitMerge(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				SDK.Lib.Player arg0 = (SDK.Lib.Player)ToLua.CheckObject(L, 1, typeof(SDK.Lib.Player));
				SDK.Lib.PlayerSplitMerge obj = new SDK.Lib.PlayerSplitMerge(arg0);
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: SDK.Lib.PlayerSplitMerge.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			obj.init();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			obj.dispose();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int onTick(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.onTick(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getTargetLength(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			float o = obj.getTargetLength();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getTargetPoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			UnityEngine.Vector3 o = obj.getTargetPoint();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getCenterPoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			UnityEngine.Vector3 o = obj.getCenterPoint();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int addToParent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			SDK.Lib.Player arg0 = (SDK.Lib.Player)ToLua.CheckObject(L, 2, typeof(SDK.Lib.Player));
			obj.addToParent(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int removeFormParent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			SDK.Lib.Player arg0 = (SDK.Lib.Player)ToLua.CheckObject(L, 2, typeof(SDK.Lib.Player));
			obj.removeFormParent(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getAllChildMovement(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			SDK.Lib.PlayerMovement[] o = obj.getAllChildMovement();
			ToLua.Push(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getMaxCameraLength(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			float o = obj.getMaxCameraLength();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int startSplit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			obj.startSplit();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int calcTargetPoint(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			obj.calcTargetPoint();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int updateChildDestDir(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			obj.updateChildDestDir();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int addMerge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			SDK.Lib.PlayerChild arg0 = (SDK.Lib.PlayerChild)ToLua.CheckObject(L, 2, typeof(SDK.Lib.PlayerChild));
			SDK.Lib.PlayerChild arg1 = (SDK.Lib.PlayerChild)ToLua.CheckObject(L, 3, typeof(SDK.Lib.PlayerChild));
			SDK.Lib.MergeItem o = obj.addMerge(arg0, arg1);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int removeMerge(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2 && TypeChecker.CheckTypes(L, 1, typeof(SDK.Lib.PlayerSplitMerge), typeof(SDK.Lib.PlayerChild)))
			{
				SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.ToObject(L, 1);
				SDK.Lib.PlayerChild arg0 = (SDK.Lib.PlayerChild)ToLua.ToObject(L, 2);
				obj.removeMerge(arg0);
				return 0;
			}
			else if (count == 3 && TypeChecker.CheckTypes(L, 1, typeof(SDK.Lib.PlayerSplitMerge), typeof(SDK.Lib.PlayerChild), typeof(SDK.Lib.PlayerChild)))
			{
				SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.ToObject(L, 1);
				SDK.Lib.PlayerChild arg0 = (SDK.Lib.PlayerChild)ToLua.ToObject(L, 2);
				SDK.Lib.PlayerChild arg1 = (SDK.Lib.PlayerChild)ToLua.ToObject(L, 3);
				obj.removeMerge(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: SDK.Lib.PlayerSplitMerge.removeMerge");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int isExistMerge(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			SDK.Lib.PlayerChild arg0 = (SDK.Lib.PlayerChild)ToLua.CheckObject(L, 2, typeof(SDK.Lib.PlayerChild));
			SDK.Lib.PlayerChild arg1 = (SDK.Lib.PlayerChild)ToLua.CheckObject(L, 3, typeof(SDK.Lib.PlayerChild));
			bool o = obj.isExistMerge(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int emitSnowBlock(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			obj.emitSnowBlock();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setDestPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
			obj.setDestPos(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int setName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			obj.setName();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int updateCenterPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			bool o = obj.updateCenterPos();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int getAllChildMass(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			float o = obj.getAllChildMass();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int moveToCenter(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)ToLua.CheckObject(L, 1, typeof(SDK.Lib.PlayerSplitMerge));
			obj.moveToCenter();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mPlayerChildMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)o;
			SDK.Lib.PlayerChildMgr ret = obj.mPlayerChildMgr;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPlayerChildMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_mRangeBox(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)o;
			SDK.Lib.MRangeBox ret = obj.mRangeBox;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mRangeBox on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mPlayerChildMgr(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)o;
			SDK.Lib.PlayerChildMgr arg0 = (SDK.Lib.PlayerChildMgr)ToLua.CheckObject(L, 2, typeof(SDK.Lib.PlayerChildMgr));
			obj.mPlayerChildMgr = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mPlayerChildMgr on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_mRangeBox(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			SDK.Lib.PlayerSplitMerge obj = (SDK.Lib.PlayerSplitMerge)o;
			SDK.Lib.MRangeBox arg0 = (SDK.Lib.MRangeBox)ToLua.CheckObject(L, 2, typeof(SDK.Lib.MRangeBox));
			obj.mRangeBox = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index mRangeBox on a nil value" : e.Message);
		}
	}
}

